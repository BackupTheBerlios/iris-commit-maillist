From no-reply at zwischenwelt.org  Thu May  1 13:35:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 01 May 2008 11:35:33 -0000
Subject: [Iris-commit] [IRIS] r2108 - /trunk/premake.lua
Message-ID: <20080501113534.387ED1C18513@zwischenwelt.org>

Author: ghoulsblade
Date: Thu May  1 13:35:29 2008
New Revision: 2108

Log:
disabled ois-source for now as it segfaulted

Modified:
    trunk/premake.lua

Modified: trunk/premake.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/premake.lua (original)
+++ trunk/premake.lua Thu May  1 13:35:29 2008
@@ -11,7 +11,7 @@
 gbExtraWarnings =3D false
 gbOptimize =3D true
 gOisPlatform =3D "linux"
-gbUseSystemOis =3D false
+gbUseSystemOis =3D true -- static compile ois segfaultet at mKeyboard->set=
TextTranslation, ois-headers in system incompatible ?
 =

 -- build options
 addoption("wall","very verbose report, most warnings enabled")



From no-reply at zwischenwelt.org  Thu May  1 14:06:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 01 May 2008 12:06:55 -0000
Subject: [Iris-commit] [IRIS] r2109 - /trunk/src/terrain.cpp
Message-ID: <20080501120655.27CE81C186E7@zwischenwelt.org>

Author: ghoulsblade
Date: Thu May  1 14:06:54 2008
New Revision: 2109

Log:
patch from btbn for min/max problem in terrain.cpp

Modified:
    trunk/src/terrain.cpp

Modified: trunk/src/terrain.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/terrain.cpp (original)
+++ trunk/src/terrain.cpp Thu May  1 14:06:54 2008
@@ -12,9 +12,6 @@
 #define ANTI_XMIRROR
 =

 using namespace Lugre;
-
-using std::min;
-using std::max;
 =

 /// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
 /// alternative : meshentity-based mousepicking, but that is not optimized=
 for the 2D-based nature
@@ -107,21 +104,21 @@
 	} else if (fabs(vDir.x) > fabs(vDir.y)) {
 		// the ray is rather horizontal (x-axis)
 		for (int tx=3D0;tx<8;++tx) {
-			float t0 =3D max(0.0f,(float(tx  ) - vOrigin.x) / vDir.x);
-			float t1 =3D max(0.0f,(float(tx+1) - vOrigin.x) / vDir.x);
+			float t0 =3D mymax(0.0f,(float(tx  ) - vOrigin.x) / vDir.x);
+			float t1 =3D mymax(0.0f,(float(tx+1) - vOrigin.x) / vDir.x);
 			float y0 =3D vOrigin.y + t0*vDir.y;
 			float y1 =3D vOrigin.y + t1*vDir.y;
-			for (int ty=3Dmax(0,int(floor(min(y0,y1))));ty<=3Dmin(7,int(floor(max(y=
0,y1))));++ty)
+			for (int ty=3Dmymax(0,int(floor(mymin(y0,y1))));ty<=3Dmymin(7,int(floor=
(mymax(y0,y1))));++ty)
 				TerrainRayIntersectCell(pRawGroundBlock,tx,ty,z_rightbottom,zarr_right=
,zarr_bottom,vOrigin,vDir,true,t0,t1);
 		}
 	} else {
 		// the ray is rather vertical (y-axis)
 		for (int ty=3D0;ty<8;++ty) {
-			float t0 =3D max(0.0f,(float(ty  ) - vOrigin.y) / vDir.y);
-			float t1 =3D max(0.0f,(float(ty+1) - vOrigin.y) / vDir.y);
+			float t0 =3D mymax(0.0f,(float(ty  ) - vOrigin.y) / vDir.y);
+			float t1 =3D mymax(0.0f,(float(ty+1) - vOrigin.y) / vDir.y);
 			float x0 =3D vOrigin.x + t0*vDir.x;
 			float x1 =3D vOrigin.x + t1*vDir.x;
-			for (int tx=3Dmax(0,int(floor(min(x0,x1))));tx<=3Dmin(7,int(floor(max(x=
0,x1))));++tx)
+			for (int tx=3Dmymax(0,int(floor(mymin(x0,x1))));tx<=3Dmymin(7,int(floor=
(mymax(x0,x1))));++tx)
 				TerrainRayIntersectCell(pRawGroundBlock,tx,ty,z_rightbottom,zarr_right=
,zarr_bottom,vOrigin,vDir,true,t0,t1);
 		}
 	}



From no-reply at zwischenwelt.org  Thu May  1 16:37:39 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 01 May 2008 14:37:39 -0000
Subject: [Iris-commit] [IRIS] r2110 - /trunk/vs8/iris.vcproj
Message-ID: <20080501143739.EEE911C186F3@zwischenwelt.org>

Author: sience
Date: Thu May  1 16:37:39 2008
New Revision: 2110

Log:
-small vs8 project update

Modified:
    trunk/vs8/iris.vcproj

Modified: trunk/vs8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vs8/iris.vcproj (original)
+++ trunk/vs8/iris.vcproj Thu May  1 16:37:39 2008
@@ -126,7 +126,7 @@
 				OmitFramePointers=3D"true"
 				EnableFiberSafeOptimizations=3D"false"
 				WholeProgramOptimization=3D"true"
-				AdditionalIncludeDirectories=3D"&quot;C:\Programme\Microsoft SDKs\Wind=
ows\v6.1\Include\&quot;;&quot;$(OGRE_HOME)\include\&quot;;&quot;$(OGRE_HOME=
)\include\OIS\&quot;;..\include\;..\include\zlib;..\lugre\include;..\includ=
e\fmodx;&quot;..\lugre\lib\lua-5.1.3\src\&quot;;..\lugre\lib\md5\include;..=
\lugre\lib\cadune_tree\include;..\lugre\lib\paged_geometry\include;..\lugre=
\lib\caelum\include;c:\Programme\boost\boost_1_34_1\"
+				AdditionalIncludeDirectories=3D"&quot;$(INCLUDE)&quot;;&quot;C:\Progra=
mme\Microsoft SDKs\Windows\v6.1\Include\&quot;;&quot;$(OGRE_HOME)\include\&=
quot;;&quot;$(OGRE_HOME)\include\OIS\&quot;;..\include\;..\include\zlib;..\=
lugre\include;..\include\fmodx;&quot;..\lugre\lib\lua-5.1.3\src\&quot;;..\l=
ugre\lib\md5\include;..\lugre\lib\cadune_tree\include;..\lugre\lib\paged_ge=
ometry\include;..\lugre\lib\caelum\include;c:\Programme\boost\boost_1_34_1\"
 				PreprocessorDefinitions=3D"WIN32;NDEBUG;_WINDOWS;MAIN_WORKING_DIR=3D\&=
quot;../\&quot;;USE_FMOD;USE_LUGRE_LIB_MD5;USE_LUGRE_LIB_CADUNE_TREE;USE_LU=
GRE_LIB_CAELUM"
 				GeneratePreprocessedFile=3D"0"
 				StringPooling=3D"true"
@@ -153,7 +153,7 @@
 				Name=3D"VCLinkerTool"
 				AdditionalDependencies=3D"AdvAPI32.Lib User32.Lib ws2_32.lib zlib.lib =
OgreMain.lib OIS.lib lua5.1.lib fmodex_vc.lib"
 				OutputFile=3D"$(OutDir)\..\..\bin\iris2.exe"
-				AdditionalLibraryDirectories=3D"&quot;C:\Programme\Microsoft SDKs\Wind=
ows\v6.1\Lib\&quot;;&quot;$(OGRE_HOME)\lib\&quot;;..\libs\fmodx;..\libs\zli=
b;&quot;..\lugre\lib\lua-5.1.3\lib\static&quot;;..\lugre\lib\caelum\lib\sta=
tic;..\lugre\lib\paged_geometry\lib\static;c:\Programme\boost\boost_1_34_1\=
lib"
+				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;C:\Programme\=
Microsoft SDKs\Windows\v6.1\Lib\&quot;;&quot;$(OGRE_HOME)\lib\&quot;;..\lib=
s\fmodx;..\libs\zlib;&quot;..\lugre\lib\lua-5.1.3\lib\static&quot;;..\lugre=
\lib\caelum\lib\static;..\lugre\lib\paged_geometry\lib\static;c:\Programme\=
boost\boost_1_34_1\lib"
 				GenerateManifest=3D"true"
 				IgnoreAllDefaultLibraries=3D"false"
 				IgnoreDefaultLibraryNames=3D"LIBCMT.lib"



From no-reply at zwischenwelt.org  Thu May  1 17:26:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 01 May 2008 15:26:47 -0000
Subject: [Iris-commit] [IRIS] r2111 - /trunk/premake.lua
Message-ID: <20080501152647.7D63B1C1859D@zwischenwelt.org>

Author: hagish
Date: Thu May  1 17:26:46 2008
New Revision: 2111

Log:
some 64bit issues

Modified:
    trunk/premake.lua

Modified: trunk/premake.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/premake.lua (original)
+++ trunk/premake.lua Thu May  1 17:26:46 2008
@@ -12,10 +12,12 @@
 gbOptimize =3D true
 gOisPlatform =3D "linux"
 gbUseSystemOis =3D true -- static compile ois segfaultet at mKeyboard->set=
TextTranslation, ois-headers in system incompatible ?
+gbNo64BitChecks =3D false
 =

 -- build options
 addoption("wall","very verbose report, most warnings enabled")
 addoption("nooptimize","don't use optmize compile flags")
+addoption("no64bitcheck","don't do any 64bit checks")
 addoption("usesystemois","use the systemwide installed ois not the one inc=
luded in lugre")
 addoption("oisplatform","select OIS platform (linux,mac,SDL,win32, default=
:linux), only valid if lugre ois is used")
 =

@@ -23,6 +25,7 @@
 if (options["nooptimize"]) then gbOptimize =3D false print("optimization d=
isabled") end
 if (options["usesystemois"]) then gbUseSystemOis =3D true print("using sys=
temwide installed ois") end
 if (options["oisplatform"]) then gOisPlatform =3D options["oisplatform"] p=
rint("using oisplatform: "..gOisPlatform) end
+if (options["no64bitcheck"]) then gbNo64BitChecks =3D true print("disabled=
 64bit checks") end
 =

 gLugreDir =3D "lugre"
 if (io.open("mylugre/lua/lugre.lua")) then print("using mylugre dir overri=
de") gLugreDir =3D "mylugre" end
@@ -109,7 +112,7 @@
 package.name =3D "lugrelua"
 package.kind =3D "lib"
 package.language =3D "c++"
-package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbOp=
timize and "optimize" or nil }
+package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbOp=
timize and "optimize" or nil, gbNo64BitChecks and "no-64bit-checks" or nil }
 package.buildoptions =3D {}
 package.includepaths =3D { gLugreLuaSrcDir.."/src" }
 package.defines =3D { =

@@ -130,7 +133,7 @@
 	package.name =3D "lugreois"
 	package.kind =3D "lib"
 	package.language =3D "c++"
-	package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbO=
ptimize and "optimize" or nil }
+	package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbO=
ptimize and "optimize" or nil, gbNo64BitChecks and "no-64bit-checks" or nil=
 }
 	package.buildoptions =3D {}
 	package.includepaths =3D { unpack(oisinclude) }
 	package.defines =3D { =

@@ -151,7 +154,7 @@
 	package.name =3D v.."lib"
 	package.kind =3D "lib"
 	package.language =3D "c++"
-	package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbO=
ptimize and "optimize" or nil }
+	package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbO=
ptimize and "optimize" or nil, gbNo64BitChecks and "no-64bit-checks" or nil=
 }
 	package.buildoptions =3D {}
 	package.includepaths =3D { gLugreDir.."/include", gLugreLuaSrcDir.."/src/=
", "include", oisinclude and unpack(oisinclude) or nil }
 	package.files =3D {
@@ -173,7 +176,7 @@
 package.kind =3D "lib"
 package.language =3D "c++"
 package.links =3D {  }
-package.buildflags =3D { bExtraWarnings and "extra-warnings" or nil, gbOpt=
imize and "optimize" or nil }
+package.buildflags =3D { bExtraWarnings and "extra-warnings" or nil, gbOpt=
imize and "optimize" or nil, gbNo64BitChecks and "no-64bit-checks" or nil }
 package.buildoptions =3D {}
 package.includepaths =3D { gLugreLuaSrcDir.."/src", gLugreDir.."/include" }
 package.files =3D {
@@ -190,7 +193,7 @@
 package.kind =3D "exe"
 package.language =3D "c++"
 package.bindir =3D "bin"
-package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbOp=
timize and "optimize" or nil }
+package.buildflags =3D { gbExtraWarnings and "extra-warnings" or nil, gbOp=
timize and "optimize" or nil, gbNo64BitChecks and "no-64bit-checks" or nil }
 package.buildoptions =3D {}
 =

 package.includepaths =3D { gLugreDir.."/include", gLugreLuaSrcDir.."/src/"=
, "include" }



From no-reply at zwischenwelt.org  Thu May  1 17:59:36 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 01 May 2008 15:59:36 -0000
Subject: [Iris-commit] [IRIS] r2112 - in /trunk: bin/ data/models/atlas/
Message-ID: <20080501155936.9F6941C1859D@zwischenwelt.org>

Author: sience
Date: Thu May  1 17:59:36 2008
New Revision: 2112

Log:
-model DDS files updated (DXT compressions)
--alpha DDS should take DXT5 interpolated alpha
--non-alpha should take DTX1 1bit alpha
-->both with NOMipMaps -> Ogre does a better Job
-new win32 binary

Modified:
    trunk/bin/iris2.exe
    trunk/data/models/atlas/tex_atlas_alpha_low0.dds
    trunk/data/models/atlas/tex_atlas_alpha_med0.dds
    trunk/data/models/atlas/tex_atlas_alpha_med1.dds
    trunk/data/models/atlas/tex_atlas_alpha_ultralow0.dds
    trunk/data/models/atlas/tex_atlas_low0.dds
    trunk/data/models/atlas/tex_atlas_low1.dds
    trunk/data/models/atlas/tex_atlas_med0.dds
    trunk/data/models/atlas/tex_atlas_med1.dds
    trunk/data/models/atlas/tex_atlas_med2.dds
    trunk/data/models/atlas/tex_atlas_med3.dds
    trunk/data/models/atlas/tex_atlas_med4.dds
    trunk/data/models/atlas/tex_atlas_ultralow0.dds

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_alpha_low0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_alpha_med0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_alpha_med1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_alpha_ultralow0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_low0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_low1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med2.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med3.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med4.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_ultralow0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Fri May  2 18:19:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 16:19:31 -0000
Subject: [Iris-commit] [IRIS] r2113 - /trunk/CMakeLists.txt
Message-ID: <20080502161931.A1A251C18687@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  2 18:19:31 2008
New Revision: 2113

Log:
added cmake files, thanks to btbn

Added:
    trunk/CMakeLists.txt



From no-reply at zwischenwelt.org  Fri May  2 18:25:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 16:25:14 -0000
Subject: [Iris-commit] [IRIS] r2114 - /trunk/cmake.sh
Message-ID: <20080502162514.5767C1C186BC@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  2 18:25:13 2008
New Revision: 2114

Log:
added cmake shellscript

Added:
    trunk/cmake.sh   (with props)



From no-reply at zwischenwelt.org  Fri May  2 19:24:15 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 17:24:15 -0000
Subject: [Iris-commit] [IRIS] r2115 - /trunk/data/terrain/multitex/parts/
Message-ID: <20080502172416.0C4171C186F0@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  2 19:24:15 2008
New Revision: 2115

Log:
renamed multitex parts

Added:
    trunk/data/terrain/multitex/parts/terrain_cobblestones.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/6_co=
bblestones.png
    trunk/data/terrain/multitex/parts/terrain_dirt.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/1_di=
rt.png
    trunk/data/terrain/multitex/parts/terrain_forest.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/4_fo=
rest.png
    trunk/data/terrain/multitex/parts/terrain_grass.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/0_gr=
ass.png
    trunk/data/terrain/multitex/parts/terrain_grass_num.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/0_gr=
ass_num.png
    trunk/data/terrain/multitex/parts/terrain_jungle.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/5_ju=
ngle.png
    trunk/data/terrain/multitex/parts/terrain_rock.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/2_ro=
ck.png
    trunk/data/terrain/multitex/parts/terrain_sand.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/3_sa=
nd.png
    trunk/data/terrain/multitex/parts/terrain_snow.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/7_sn=
ow.png
    trunk/data/terrain/multitex/parts/terrain_void.png
      - copied unchanged from r2113, trunk/data/terrain/multitex/parts/8_vo=
id.png
Removed:
    trunk/data/terrain/multitex/parts/0_grass.png
    trunk/data/terrain/multitex/parts/0_grass_num.png
    trunk/data/terrain/multitex/parts/1_dirt.png
    trunk/data/terrain/multitex/parts/2_rock.png
    trunk/data/terrain/multitex/parts/3_sand.png
    trunk/data/terrain/multitex/parts/4_forest.png
    trunk/data/terrain/multitex/parts/5_jungle.png
    trunk/data/terrain/multitex/parts/6_cobblestones.png
    trunk/data/terrain/multitex/parts/7_snow.png
    trunk/data/terrain/multitex/parts/8_void.png



From no-reply at zwischenwelt.org  Fri May  2 20:56:41 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 18:56:41 -0000
Subject: [Iris-commit] [IRIS] r2117 - /trunk/data/terrain/multitex/parts/
Message-ID: <20080502185641.C7A4E1C18535@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  2 20:56:41 2008
New Revision: 2117

Log:
eri terrain tiles

Added:
    trunk/data/terrain/multitex/parts/terrain1_fliese01.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_fliese02.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_kacleklein01.png   (with pro=
ps)
    trunk/data/terrain/multitex/parts/terrain1_kacleklein02.png   (with pro=
ps)
    trunk/data/terrain/multitex/parts/terrain1_kacleklein03.png   (with pro=
ps)
    trunk/data/terrain/multitex/parts/terrain1_kacleklein04.png   (with pro=
ps)
    trunk/data/terrain/multitex/parts/terrain1_mosa01.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_mosa02.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_mosa03.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_mosa04.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_mosa05.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein01.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein02.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein03.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein04.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein05.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein06.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein07.png   (with props)
    trunk/data/terrain/multitex/parts/terrain1_stein08.png   (with props)
    trunk/data/terrain/multitex/parts/terrain4_lava.png   (with props)
    trunk/data/terrain/multitex/parts/terrain4_swamp.png   (with props)
    trunk/data/terrain/multitex/parts/terrain_cave.png   (with props)



From no-reply at zwischenwelt.org  Fri May  2 20:59:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 18:59:14 -0000
Subject: [Iris-commit] [IRIS] r2118 - /trunk/INSTALL
Message-ID: <20080502185916.E8AD91C1853B@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  2 20:59:12 2008
New Revision: 2118

Log:
btbn cmake notice in INSTALL (with email)

Modified:
    trunk/INSTALL

Modified: trunk/INSTALL
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/INSTALL (original)
+++ trunk/INSTALL Fri May  2 20:59:12 2008
@@ -18,13 +18,19 @@
 =

 =3D=3D compile from source =3D=3D
 =

+=3D=3D=3D linux premake =3D=3D=3D
 ./premakelinux.sh
 =

 to start the compiled executable run
 ./start.sh 				in main directory =

 	=

-	=

-	=

+=3D=3D=3D linux cmake =3D=3D=3D
+
+./cmake.sh
+thanks to btbn ( btbn { at } btbn dotty de ) for setting this up =3D)
+
+
+
 =

 (remove ogre.cfg if you have problems so you can change the gfx setup)
 (you might have to adjust plugins.cfg if ogre cannot find RenderSystem_GL =
Plugin_ParticleFX or scenemanagers)



From no-reply at zwischenwelt.org  Fri May  2 21:01:52 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 19:01:52 -0000
Subject: [Iris-commit] [IRIS] r2119 - in /trunk: data/terrain/multitex/work/
 data/terrain/multitex/work/eri_floortiles_overview.jpg
 data/terrain/multitex/work/terrain_cave_orig_nontilable.png
 lua/lib.terrain.multitex.lua
Message-ID: <20080502190152.8C2A81C186F3@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  2 21:01:52 2008
New Revision: 2119

Log:
terrain files

Added:
    trunk/data/terrain/multitex/work/
    trunk/data/terrain/multitex/work/eri_floortiles_overview.jpg   (with pr=
ops)
    trunk/data/terrain/multitex/work/terrain_cave_orig_nontilable.png   (wi=
th props)
Modified:
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Fri May  2 21:01:52 2008
@@ -8,43 +8,73 @@
 	return gDisableMultiTexTerrainTransitions and kTerrainMultiTexMatNameNoTr=
ans or kTerrainMultiTexMatName
 end
 =

-gTerrain_MultiTexTypes =3D {}
-gTerrain_MultiTexTypes.grass		=3D {3,4,5,6,59,60,61,62,125,126,127,192,193=
,194,195,216,217,218,219,420,421,422,423,561,562,563,564,569,570,571,572,57=
3,574,575,576,577,578,579,879,880,881,882,883,884,885,886,891,892,893,894,9=
59,960,961,962,963,964,965,966,971,972,973,974,1401,1402,1403,1404,1405,140=
6,1407,1408,1419,1420,1495,1496,1497,1498,1499,1500,1501,1502,1507,1508,150=
9,1510,1661,1662,1663,1664,1665,1666,1667,1668,1673,1674,1675,1676,1685,168=
6,1687,1688,1689,1690,1691,1692,1697,1698,1699,1700,1717,1718,1719,1720,172=
1,1722,1727,1728,1729,1730,1746,1747,1748,1749,1750,1751,1752,1753,1758,175=
9,1760,1761}
-gTerrain_MultiTexTypes.dirt			=3D {113,114,115,116,117,118,119,120,121,122=
,123,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,14=
4,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,1=
63,164,165,166,167,220,221,222,223,224,225,226,227,232,233,234,235,321,322,=
323,324,332,333,334,335,361,362,363,364,365,366,367,368,369,370,371,372,476=
,477,478,479,480,481,482,483,484,485,486,487,492,493,494,495,626,627,628,62=
9,638,639,640,641,720,721,722,723,724,725,726,727,741,742,743,744,745,746,7=
47,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,=
766,767,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787=
,788,789,790,791,792,793,794,795,796,797,798,799,812,813,814,815,829,830,83=
1,832,837,838,839,840,841,842,843,844,853,854,855,856,871,872,873,874,875,8=
76,877,878,887,888,889,890,909,910,911,912,917,918,919,920,921,922,923,924,=
933,934,935,936,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026=
,1027,1028,1029,1351,1352,1353,1354,1355,1356,1357,1358,1363,1364,1365,1366=
,1431,1432,1433,1434,1435,1436,1437,1438,1571,1572,1573,1574,1575,1576,1577=
,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592=
,1593,1594,1779,1780,1781,1782,1783,1784,1785,1786,1911,1912,1913,1914,1915=
,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930=
,1931,1932,1933,1934,1935,1936,1937}
-gTerrain_MultiTexTypes.rock			=3D {228,229,230,231,244,245,246,247,260,261=
,262,263,272,273,274,275,290,291,292,293,467,468,469,470,471,472,473,474,54=
3,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,565,5=
66,567,568,1741,1742,1743,1744,1745,1754,1755,1756,1757,1771,1772,1773,1774=
,1775,1776,1777,1778,1787,1788,1789,1790,1805,1806,1807,1808,1809,1810,1811=
,1812,1821,1822,1823,1824,1835,1836,1837,1838,1839,1840,1841,1842,1851,1852=
,1853,1854,1865,1866,1867,1868,1869,1870,1871,1872,1881,1882,1883,1884}
-gTerrain_MultiTexTypes.sand			=3D {22,23,24,25,26,27,28,29,30,31,32,33,34,=
35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,=
69,70,71,72,73,74,75,286,287,288,289,294,295,296,297,298,299,300,301,402,42=
4,425,426,427,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,4=
56,457,458,459,460,461,462,463,464,465,642,643,644,645,650,651,652,653,654,=
655,656,657,821,822,823,824,825,826,827,828,833,834,835,836,845,846,847,848=
,849,850,851,852,857,858,859,860,951,952,953,954,955,956,957,958,967,968,96=
9,970,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1611,1612=
,1613,1614,1615,1616,1617,1618,1623,1624,1625,1626,1635,1636,1637,1638,1639=
,1640,1641,1642,1647,1648,1649,1650}
-gTerrain_MultiTexTypes.forest		=3D {196,197,198,199,200,201,202,203,204,20=
5,206,207,208,209,210,211,212,213,214,215,237,238,239,240,241,242,243,248,2=
49,250,251,349,350,351,352,353,354,355,356,357,358,359,360,804,805,806,807,=
808,809,810,811,1359,1360,1361,1362,1521,1522,1523,1524,1529,1530,1531,1532=
,1533,1534,1535,1536,1537,1538,1539,1540,1553,1554,1555,1556,1619,1620,1621=
,1622,1627,1628,1629,1630,1631,1632,1633,1634,1643,1644,1645,1646,1711,1712=
,1713,1714,1715,1716,1723,1724,1725,1726,1801,1802,1803,1804,1813,1814,1815=
,1816,1817,1818,1819,1820}
-gTerrain_MultiTexTypes.jungle		=3D {172,173,174,175,176,179,182,185,188,18=
9,190,191,236,252,253,254,255,256,257,258,259,264,265,266,267,496,497,498,4=
99,622,623,624,625,630,631,632,633,634,635,636,637,646,647,648,649,658,659,=
660,661,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1421,1422,1423,14=
24,1439,1440,1441,1442,1443,1444,1445,1446,1459,1460,1461,1462,1463,1464,14=
65,1466,1525,1526,1527,1528,1541,1542,1543,1544,1545,1546,1547,1548,1549,15=
50,1551,1552,1557,1558,1559,1560,1831,1832,1833,1834,1843,1844,1845,1846,18=
47,1848,1849,1850}
-gTerrain_MultiTexTypes.cobblestone	=3D {1001,1002,1003,1004,1669,1670,1671=
,1672,1677,1678,1679,1680,1681,1682,1683,1684,1693,1694,1695,1696}
-gTerrain_MultiTexTypes.snow			=3D {268,269,270,271,276,277,278,279,282,283=
,284,285,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,39=
3,394,901,902,903,904,905,906,907,908,913,914,915,916,925,926,927,928,929,9=
30,931,932,937,938,939,940,1471,1472,1473,1474,1475,1476,1477,1478,1479,148=
0,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,150=
3,1504,1505,1506,1861,1862,1863,1864,1873,1874,1875,1876,1877,1878,1879,188=
0,1885,1886,1887,1888,1901,1902,1903,1904,1905,1906,1907}
-gTerrain_MultiTexTypes.void			=3D {506,507,508,509,510,511, 580}
---~ gTerrain_MultiTexTypes.black		=3D {580}  -- dungeon black wall
-
-gTerrain_MultiTexTypes.water		=3D {168,169,170,171,310,311} --,100,94,91,9=
9,87,82,79,149,131}
-
 --[[
-gTerrain_MultiTexTypes.cave			=3D {581,582,583,584,585,586,587,588,589,590=
,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,60=
9,610,611,612,613,614,615,616,617,618,619,620,621,700,701,702,703,704,705,7=
06,707,708,709,710,711,712,713,714,715,1595,1596,1597,1598}
-gTerrain_MultiTexTypes.stone		=3D {1078,1079,1080,1081,1082,1083,1084,1085=
,1086,1087,1088,1089,1090,1091,1092,1093}  -- tiles,manmade
-gTerrain_MultiTexTypes.woodenfloor	=3D {1030,1031,1032,1033,1034,1035,1036=
,1037,1038,1039,1040,1041,1042,1043,1044,1045,1203,1204,1205,1206,1207,1208=
,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1227=
,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242=
,1243,1244,1245,1246,1247,1248,1249}
-gTerrain_MultiTexTypes.sandstone	=3D {1094,1095,1096,1097,1098,1099,1100,1=
101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1=
116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1=
131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145}
-gTerrain_MultiTexTypes.marble		=3D {1158,1159,1160,1161,1255,1256,1257,125=
8,1263,1264,1265,1266}
-gTerrain_MultiTexTypes.flagstone	=3D {513,514,515,516,1259,1260,1261,1262}
-gTerrain_MultiTexTypes.lava			=3D {500,501,502,503}
-gTerrain_MultiTexTypes.embank		=3D {2444,2445,2446,2447,2448,2449,2450,245=
1,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2476,2477,247=
8,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,249=
3,2494,2495}
-gTerrain_MultiTexTypes.brick		=3D {1146,1147,1148,1149,1150,1151,1152,1153=
,1154,1155,1156,1157,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177=
,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192=
,1193,1194,1195,1196,1197,1198,1297,1298,1299,1300,1301,1302,1303,1304,1305=
,1306,1307,1308}
-gTerrain_MultiTexTypes.planks		=3D {662,663,664,665,666,667,668,669,670,67=
1,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,6=
90,691,692,693,694,695,696,697,698,699}
-gTerrain_MultiTexTypes.tree			=3D {11881,11882,11883,11884,11885,11886,118=
87,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897,11898,11899,=
11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,119=
12,11913,11914,11915,11916,11917,11918,11919,11920,11921,11922,11923,11924,=
11925,11926,11927,11928,11929,11930,11931,11932,11933,11934,11935,11936,119=
37,11938,11939,11940,11941,11942,11943,11944,11945,11946,11947,11948,11949,=
11950,11951,11952,11953,11954,11955,11956,11957,11958,11959,11960,11961,119=
62,11963,11964,11965,11966,11967,11968,11969,11970,11971,11972,11973,11974,=
11975,11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,119=
87,11988,11989,11990,11991,11992,11993,11994,11995,12000,12001,12002,12003,=
12004,12005,12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,120=
16,12017,12018,12019,12020,12021,12022,12023,12024,12025,12026,12027,12028,=
12029,12030,12031,12032,12033,12034,12035,12036,12037,12038,12039,12040,120=
41,12042,12043,12044,12045,12046,14804,14805,14806,14807,14808,14809,14810,=
14811,14812,14813,14814,14815,14816,14817,14818,14819,14820,14821,14822,149=
17,14918,14919,14920,14921,14922,14923,14924,14925,14926,14927,14928,14929,=
14930,14931,14932}
-gTerrain_MultiTexTypes.furrows		=3D {9,10,11,12,13,14,15,16,17,18,19,20,21=
,336,337,338,339,340,341,342,343,344,345,346,347,348}
-gTerrain_MultiTexTypes.leaves		=3D {15088,15089,15090,15091,15092,15093,15=
094,15095,15096}
-gTerrain_MultiTexTypes.tile			=3D {512,517,518,519,520,521,522,523,524,528=
,529,530,531,532,533,534,535,536,1046,1047,1048,1049,1050,1051,1052,1053,10=
54,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,10=
69,1070,1071,1072,1073,1074,1075,1076,1077,1162,1163,1164,1165,1166}
-gTerrain_MultiTexTypes.acid			=3D {11778,11779,11780,11781,11782,11783,117=
84,11785,11786,11787,11788,11789,11790,11791,11792,11793,11794,11795,11796,=
11797,11798,11799,11800,11801,11802,11803,11804,11805,11806,11807,11808,118=
09,11810,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821,=
11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,118=
34,11835}
-gTerrain_MultiTexTypes.caveexit		=3D {2029,2030,2031,2032,2033,2100,2101,2=
102,2103,2104,2105}
+water		=3D {168,169,170,171,310,311} --,100,94,91,99,87,82,79,149,131}
+black		=3D {580}  -- dungeon wall
+stone		=3D {1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,10=
90,1091,1092,1093}  -- tiles,manmade
+woodenfloor	=3D {1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,10=
41,1042,1043,1044,1045,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,12=
13,1214,1215,1216,1217,1218,1219,1220,1221,1222,1227,1228,1229,1230,1231,12=
32,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,12=
47,1248,1249}
+sandstone	=3D {1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105=
,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120=
,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135=
,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145}
+marble		=3D {1158,1159,1160,1161,1255,1256,1257,1258,1263,1264,1265,1266}
+flagstone	=3D {513,514,515,516,1259,1260,1261,1262}
+lava		=3D =

+embank		=3D {2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2=
456,2457,2458,2459,2460,2461,2462,2463,2476,2477,2478,2479,2480,2481,2482,2=
483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495}
+brick		=3D {1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,11=
67,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,11=
82,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,11=
97,1198,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308}
+planks		=3D {662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,6=
77,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,=
696,697,698,699}
+tree		=3D {11881,11882,11883,11884,11885,11886,11887,11888,11889,11890,118=
91,11892,11893,11894,11895,11896,11897,11898,11899,11900,11901,11902,11903,=
11904,11905,11906,11907,11908,11909,11910,11911,11912,11913,11914,11915,119=
16,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928,=
11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,119=
41,11942,11943,11944,11945,11946,11947,11948,11949,11950,11951,11952,11953,=
11954,11955,11956,11957,11958,11959,11960,11961,11962,11963,11964,11965,119=
66,11967,11968,11969,11970,11971,11972,11973,11974,11975,11976,11977,11978,=
11979,11980,11981,11982,11983,11984,11985,11986,11987,11988,11989,11990,119=
91,11992,11993,11994,11995,12000,12001,12002,12003,12004,12005,12006,12007,=
12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,120=
20,12021,12022,12023,12024,12025,12026,12027,12028,12029,12030,12031,12032,=
12033,12034,12035,12036,12037,12038,12039,12040,12041,12042,12043,12044,120=
45,12046,14804,14805,14806,14807,14808,14809,14810,14811,14812,14813,14814,=
14815,14816,14817,14818,14819,14820,14821,14822,14917,14918,14919,14920,149=
21,14922,14923,14924,14925,14926,14927,14928,14929,14930,14931,14932}
+furrows		=3D {9,10,11,12,13,14,15,16,17,18,19,20,21,336,337,338,339,340,34=
1,342,343,344,345,346,347,348}
+leaves		=3D {15088,15089,15090,15091,15092,15093,15094,15095,15096}
+tile		=3D {512,517,518,519,520,521,522,523,524,528,529,530,531,532,533,534=
,535,536,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1=
059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1=
074,1075,1076,1077,1162,1163,1164,1165,1166}
+acid		=3D {11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,117=
88,11789,11790,11791,11792,11793,11794,11795,11796,11797,11798,11799,11800,=
11801,11802,11803,11804,11805,11806,11807,11808,11809,11810,11811,11812,118=
13,11814,11815,11816,11817,11818,11819,11820,11821,11822,11823,11824,11825,=
11826,11827,11828,11829,11830,11831,11832,11833,11834,11835}
+caveexit	=3D {2029,2030,2031,2032,2033,2100,2101,2102,2103,2104,2105}
 ]]--
 =

 -- 0x0244  pos=3D5260,1333 block=3D1231,311
 =

-gTerrain_MultiTexType_Fallback =3D "dirt"
-gMultiTextureAtlasList_Span =3D {"grass","dirt","rock","sand","forest","ju=
ngle","cobblestone","snow","void"}
+-- texture atlas data, the atlas is generated at startup
+gMultiTextureAtlasList =3D {
+-- normal:terrain_grass.png debug:terrain_grass_num.png
+,{tilespan=3D4,src=3D"terrain_grass.png"			,uoids=3D{3,4,5,6,59,60,61,62,1=
25,126,127,192,193,194,195,216,217,218,219,420,421,422,423,561,562,563,564,=
569,570,571,572,573,574,575,576,577,578,579,879,880,881,882,883,884,885,886=
,891,892,893,894,959,960,961,962,963,964,965,966,971,972,973,974,1401,1402,=
1403,1404,1405,1406,1407,1408,1419,1420,1495,1496,1497,1498,1499,1500,1501,=
1502,1507,1508,1509,1510,1661,1662,1663,1664,1665,1666,1667,1668,1673,1674,=
1675,1676,1685,1686,1687,1688,1689,1690,1691,1692,1697,1698,1699,1700,1717,=
1718,1719,1720,1721,1722,1727,1728,1729,1730,1746,1747,1748,1749,1750,1751,=
1752,1753,1758,1759,1760,1761}}
+,{tilespan=3D4,src=3D"terrain_dirt.png",default=3Dtrue,uoids=3D{113,114,11=
5,116,117,118,119,120,121,122,123,124,128,129,130,131,132,133,134,135,136,1=
37,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,=
156,157,158,159,160,161,162,163,164,165,166,167,220,221,222,223,224,225,226=
,227,232,233,234,235,321,322,323,324,332,333,334,335,361,362,363,364,365,36=
6,367,368,369,370,371,372,476,477,478,479,480,481,482,483,484,485,486,487,4=
92,493,494,495,626,627,628,629,638,639,640,641,720,721,722,723,724,725,726,=
727,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758=
,759,760,761,762,763,764,765,766,767,771,772,773,774,775,776,777,778,779,78=
0,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,7=
99,812,813,814,815,829,830,831,832,837,838,839,840,841,842,843,844,853,854,=
855,856,871,872,873,874,875,876,877,878,887,888,889,890,909,910,911,912,917=
,918,919,920,921,922,923,924,933,934,935,936,1014,1015,1017,1018,1019,1020,=
1021,1022,1023,1024,1025,1026,1027,1028,1029,1351,1352,1353,1354,1355,1356,=
1357,1358,1363,1364,1365,1366,1431,1432,1433,1434,1435,1436,1437,1438,1571,=
1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,=
1587,1588,1589,1590,1591,1592,1593,1594,1779,1780,1781,1782,1783,1784,1785,=
1786,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,=
1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937}}
+,{tilespan=3D4,src=3D"terrain_rock.png"				,uoids=3D{228,229,230,231,244,2=
45,246,247,260,261,262,263,272,273,274,275,290,291,292,293,467,468,469,470,=
471,472,473,474,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557=
,558,559,560,565,566,567,568,1741,1742,1743,1744,1745,1754,1755,1756,1757,1=
771,1772,1773,1774,1775,1776,1777,1778,1787,1788,1789,1790,1805,1806,1807,1=
808,1809,1810,1811,1812,1821,1822,1823,1824,1835,1836,1837,1838,1839,1840,1=
841,1842,1851,1852,1853,1854,1865,1866,1867,1868,1869,1870,1871,1872,1881,1=
882,1883,1884}}
+,{tilespan=3D4,src=3D"terrain_sand.png"				,uoids=3D{22,23,24,25,26,27,28,=
29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,=
54,55,56,57,58,68,69,70,71,72,73,74,75,286,287,288,289,294,295,296,297,298,=
299,300,301,402,424,425,426,427,441,442,443,444,445,446,447,448,449,450,451=
,452,453,454,455,456,457,458,459,460,461,462,463,464,465,642,643,644,645,65=
0,651,652,653,654,655,656,657,821,822,823,824,825,826,827,828,833,834,835,8=
36,845,846,847,848,849,850,851,852,857,858,859,860,951,952,953,954,955,956,=
957,958,967,968,969,970,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1=
457,1458,1611,1612,1613,1614,1615,1616,1617,1618,1623,1624,1625,1626,1635,1=
636,1637,1638,1639,1640,1641,1642,1647,1648,1649,1650}}
+,{tilespan=3D4,src=3D"terrain_forest.png"			,uoids=3D{196,197,198,199,200,=
201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,237,238,239,240=
,241,242,243,248,249,250,251,349,350,351,352,353,354,355,356,357,358,359,36=
0,804,805,806,807,808,809,810,811,1359,1360,1361,1362,1521,1522,1523,1524,1=
529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1553,1554,1555,1=
556,1619,1620,1621,1622,1627,1628,1629,1630,1631,1632,1633,1634,1643,1644,1=
645,1646,1711,1712,1713,1714,1715,1716,1723,1724,1725,1726,1801,1802,1803,1=
804,1813,1814,1815,1816,1817,1818,1819,1820}}
+,{tilespan=3D4,src=3D"terrain_jungle.png"			,uoids=3D{172,173,174,175,176,=
179,182,185,188,189,190,191,236,252,253,254,255,256,257,258,259,264,265,266=
,267,496,497,498,499,622,623,624,625,630,631,632,633,634,635,636,637,646,64=
7,648,649,658,659,660,661,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418=
,1421,1422,1423,1424,1439,1440,1441,1442,1443,1444,1445,1446,1459,1460,1461=
,1462,1463,1464,1465,1466,1525,1526,1527,1528,1541,1542,1543,1544,1545,1546=
,1547,1548,1549,1550,1551,1552,1557,1558,1559,1560,1831,1832,1833,1834,1843=
,1844,1845,1846,1847,1848,1849,1850}}
+,{tilespan=3D4,src=3D"terrain_cobblestones.png"		,uoids=3D{1001,1002,1003,=
1004,1669,1670,1671,1672,1677,1678,1679,1680,1681,1682,1683,1684,1693,1694,=
1695,1696}}
+,{tilespan=3D4,src=3D"terrain_snow.png"				,uoids=3D{268,269,270,271,276,2=
77,278,279,282,283,284,285,377,378,379,380,381,382,383,384,385,386,387,388,=
389,390,391,392,393,394,901,902,903,904,905,906,907,908,913,914,915,916,925=
,926,927,928,929,930,931,932,937,938,939,940,1471,1472,1473,1474,1475,1476,=
1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,=
1492,1493,1494,1503,1504,1505,1506,1861,1862,1863,1864,1873,1874,1875,1876,=
1877,1878,1879,1880,1885,1886,1887,1888,1901,1902,1903,1904,1905,1906,1907}}
+,{tilespan=3D4,src=3D"terrain_void.png"				,uoids=3D{506,507,508,509,510,5=
11, 580}}
+,{tilespan=3D4,src=3D"terrain_cave.png"				,uoids=3D{581,582,583,584,585,5=
86,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,=
605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,700,701=
,702,703,704,705,706,707,708,709,710,711,712,713,714,715,1595,1596,1597,159=
8}}
+,{tilespan=3D4,src=3D"terrain4_lava.png"			,uoids=3D{500,501,502,503}}
+,{tilespan=3D4,src=3D"terrain4_swamp.png"			,uoids=3D{2112,2108}} -- 0x840=
=3D2112 0x83c=3D2108 ids ??
+,{tilespan=3D1,src=3D"terrain1_fliese01.png"		,uoids=3D{0x83a}}
+,{tilespan=3D1,src=3D"terrain1_fliese02.png"		,uoids=3D{0x3fd1}}
+,{tilespan=3D1,src=3D"terrain1_stein01.png"			,uoids=3D{0x442}} -- light b=
rown
+,{tilespan=3D1,src=3D"terrain1_stein02.png"			,uoids=3D{0x443}}
+,{tilespan=3D1,src=3D"terrain1_stein03.png"			,uoids=3D{0x444}}
+,{tilespan=3D1,src=3D"terrain1_stein04.png"			,uoids=3D{0x445}}
+,{tilespan=3D1,src=3D"terrain1_stein05.png"			,uoids=3D{0x436}} -- grey
+,{tilespan=3D1,src=3D"terrain1_stein06.png"			,uoids=3D{0x437}}
+,{tilespan=3D1,src=3D"terrain1_stein07.png"			,uoids=3D{0x438}}
+,{tilespan=3D1,src=3D"terrain1_stein08.png"			,uoids=3D{0x439}}
+,{tilespan=3D1,src=3D"terrain1_mosa01.png"			,uoids=3D{0x48c}}
+,{tilespan=3D1,src=3D"terrain1_mosa02.png"			,uoids=3D{0x48b}}
+,{tilespan=3D1,src=3D"terrain1_mosa03.png"			,uoids=3D{}}
+,{tilespan=3D1,src=3D"terrain1_mosa04.png"			,uoids=3D{0x48d,0x48e}}
+,{tilespan=3D1,src=3D"terrain1_mosa05.png"			,uoids=3D{0x48a}}
+,{tilespan=3D1,src=3D"terrain1_kacleklein01.png"	,uoids=3D{}}
+,{tilespan=3D1,src=3D"terrain1_kacleklein02.png"	,uoids=3D{}}
+,{tilespan=3D1,src=3D"terrain1_kacleklein03.png"	,uoids=3D{}}
+,{tilespan=3D1,src=3D"terrain1_kacleklein04.png"	,uoids=3D{}}
+}
+
+-- skipped tiles
+gMultiTextureSkipList =3D {}
+gMultiTextureSkipList.water			=3D {uoids=3D{168,169,170,171,310,311}} --,1=
00,94,91,99,87,82,79,149,131}
+
+
+-- old : gMultiTextureAtlasList_Span
+
+
+kMultiTexTerrainDefaultTypeID =3D 1 -- dirt
 =

 gMultiTexTerrain_NextStep =3D 0
 kMultiTexTerrain_StepInterval =3D 500
@@ -88,8 +118,8 @@
 		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w,h}
 		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h)
 	end
-	for uoid=3D0,hex2num("0x4000") do =

-		if (not gMultiTexTerrainTypeLookup[uoid]) then gMultiTexTerrainTypeLooku=
p[uoid] =3D 1 end -- dirt
+	for uoid=3D0,0x4000 do =

+		if (not gMultiTexTerrainTypeLookup[uoid]) then gMultiTexTerrainTypeLooku=
p[uoid] =3D kMultiTexTerrainDefaultTypeID end -- dirt
 	end	=

 	=

 	for k2,uoid in pairs(gTerrain_MultiTexTypes.water) do gMultiTexTerrainTyp=
eLookup[uoid] =3D -1 end -- skip water tiles



From no-reply at zwischenwelt.org  Fri May  2 21:13:15 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 19:13:15 -0000
Subject: [Iris-commit] [IRIS] r2120 - /trunk/data/models/atlas/
Message-ID: <20080502191315.CFC271C186F0@zwischenwelt.org>

Author: sience
Date: Fri May  2 21:13:15 2008
New Revision: 2120

Log:
-DDS atlas's fixed

Modified:
    trunk/data/models/atlas/tex_atlas_alpha_low0.dds
    trunk/data/models/atlas/tex_atlas_alpha_med0.dds
    trunk/data/models/atlas/tex_atlas_alpha_med1.dds
    trunk/data/models/atlas/tex_atlas_alpha_ultralow0.dds
    trunk/data/models/atlas/tex_atlas_low0.dds
    trunk/data/models/atlas/tex_atlas_low1.dds
    trunk/data/models/atlas/tex_atlas_med0.dds
    trunk/data/models/atlas/tex_atlas_med1.dds
    trunk/data/models/atlas/tex_atlas_med2.dds
    trunk/data/models/atlas/tex_atlas_med3.dds
    trunk/data/models/atlas/tex_atlas_med4.dds
    trunk/data/models/atlas/tex_atlas_ultralow0.dds

Modified: trunk/data/models/atlas/tex_atlas_alpha_low0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_alpha_med0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_alpha_med1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_alpha_ultralow0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_low0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_low1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med2.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med3.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med4.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_ultralow0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Fri May  2 23:27:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 21:27:33 -0000
Subject: [Iris-commit] [IRIS] r2121 - in /trunk/data/terrain/multitex/parts:
 terrain_green_swampy_stone_ground.png terrain_lava.png terrain_swamp.png
Message-ID: <20080502212733.651161C186F3@zwischenwelt.org>

Author: hagish
Date: Fri May  2 23:27:32 2008
New Revision: 2121

Log:
new terrain textures: swamp,lava

Added:
    trunk/data/terrain/multitex/parts/terrain_green_swampy_stone_ground.png=
   (with props)
    trunk/data/terrain/multitex/parts/terrain_lava.png   (with props)
    trunk/data/terrain/multitex/parts/terrain_swamp.png   (with props)



From no-reply at zwischenwelt.org  Sat May  3 00:29:38 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 22:29:38 -0000
Subject: [Iris-commit] [IRIS] r2123 -
	/trunk/data/terrain/multitex/parts/terrain_cave.png
Message-ID: <20080502230015.A2F401C186F0@zwischenwelt.org>

Author: hagish
Date: Sat May  3 00:29:37 2008
New Revision: 2123

Log:
new cave texture

Modified:
    trunk/data/terrain/multitex/parts/terrain_cave.png

Modified: trunk/data/terrain/multitex/parts/terrain_cave.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat May  3 00:23:24 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 22:23:24 -0000
Subject: [Iris-commit] [IRIS] r2122 - /trunk/bin/iris2.exe
Message-ID: <20080502230015.8F6CB1C18513@zwischenwelt.org>

Author: sience
Date: Sat May  3 00:23:23 2008
New Revision: 2122

Log:
new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat May  3 00:51:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 22:51:55 -0000
Subject: [Iris-commit] [IRIS] r2124 - in /trunk:
 data/terrain/materials/terrain.material lua/lib.terrain.multitex.lua
 lua/main.lua
Message-ID: <20080502230015.AF1031C18535@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 00:51:55 2008
New Revision: 2124

Log:
fixed accidental commit in multitex-terrain

Modified:
    trunk/data/terrain/materials/terrain.material
    trunk/lua/lib.terrain.multitex.lua
    trunk/lua/main.lua

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Sat May  3 00:51:55 2008
@@ -34,7 +34,7 @@
 			texture_unit
 			{
 				// draws ground and applies diffuse lighting
-				texture terrain_tex_atlas_256.png
+				// texture terrain_tex_atlas_256.png
 				tex_coord_set	0
 				colour_op_ex	modulate src_texture src_diffuse
 			}
@@ -57,7 +57,7 @@
                 filtering anisotropic
                 max_anisotropy 8
 				// draws ground at full brightness
-				texture terrain_tex_atlas_1024.dds
+				// texture terrain_tex_atlas_1024.dds
 				tex_coord_set	0
 				colour_op_ex	source1 src_texture src_texture
 			}
@@ -74,7 +74,7 @@
                 filtering anisotropic
                 max_anisotropy 8
 				// loads secondardy ground and blends it using transition mask
-				texture terrain_tex_atlas_1024.dds
+				// texture terrain_tex_atlas_1024.dds
 				tex_coord_set 2
 				colour_op_ex	blend_current_alpha src_texture src_current
 				// alpha_op_ex		source1 src_current src_current

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 00:51:55 2008
@@ -33,7 +33,7 @@
 -- texture atlas data, the atlas is generated at startup
 gMultiTextureAtlasList =3D {
 -- normal:terrain_grass.png debug:terrain_grass_num.png
-,{tilespan=3D4,src=3D"terrain_grass.png"			,uoids=3D{3,4,5,6,59,60,61,62,1=
25,126,127,192,193,194,195,216,217,218,219,420,421,422,423,561,562,563,564,=
569,570,571,572,573,574,575,576,577,578,579,879,880,881,882,883,884,885,886=
,891,892,893,894,959,960,961,962,963,964,965,966,971,972,973,974,1401,1402,=
1403,1404,1405,1406,1407,1408,1419,1420,1495,1496,1497,1498,1499,1500,1501,=
1502,1507,1508,1509,1510,1661,1662,1663,1664,1665,1666,1667,1668,1673,1674,=
1675,1676,1685,1686,1687,1688,1689,1690,1691,1692,1697,1698,1699,1700,1717,=
1718,1719,1720,1721,1722,1727,1728,1729,1730,1746,1747,1748,1749,1750,1751,=
1752,1753,1758,1759,1760,1761}}
+ {tilespan=3D4,src=3D"terrain_grass.png"			,uoids=3D{3,4,5,6,59,60,61,62,1=
25,126,127,192,193,194,195,216,217,218,219,420,421,422,423,561,562,563,564,=
569,570,571,572,573,574,575,576,577,578,579,879,880,881,882,883,884,885,886=
,891,892,893,894,959,960,961,962,963,964,965,966,971,972,973,974,1401,1402,=
1403,1404,1405,1406,1407,1408,1419,1420,1495,1496,1497,1498,1499,1500,1501,=
1502,1507,1508,1509,1510,1661,1662,1663,1664,1665,1666,1667,1668,1673,1674,=
1675,1676,1685,1686,1687,1688,1689,1690,1691,1692,1697,1698,1699,1700,1717,=
1718,1719,1720,1721,1722,1727,1728,1729,1730,1746,1747,1748,1749,1750,1751,=
1752,1753,1758,1759,1760,1761}}
 ,{tilespan=3D4,src=3D"terrain_dirt.png",default=3Dtrue,uoids=3D{113,114,11=
5,116,117,118,119,120,121,122,123,124,128,129,130,131,132,133,134,135,136,1=
37,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,=
156,157,158,159,160,161,162,163,164,165,166,167,220,221,222,223,224,225,226=
,227,232,233,234,235,321,322,323,324,332,333,334,335,361,362,363,364,365,36=
6,367,368,369,370,371,372,476,477,478,479,480,481,482,483,484,485,486,487,4=
92,493,494,495,626,627,628,629,638,639,640,641,720,721,722,723,724,725,726,=
727,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758=
,759,760,761,762,763,764,765,766,767,771,772,773,774,775,776,777,778,779,78=
0,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,7=
99,812,813,814,815,829,830,831,832,837,838,839,840,841,842,843,844,853,854,=
855,856,871,872,873,874,875,876,877,878,887,888,889,890,909,910,911,912,917=
,918,919,920,921,922,923,924,933,934,935,936,1014,1015,1017,1018,1019,1020,=
1021,1022,1023,1024,1025,1026,1027,1028,1029,1351,1352,1353,1354,1355,1356,=
1357,1358,1363,1364,1365,1366,1431,1432,1433,1434,1435,1436,1437,1438,1571,=
1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,=
1587,1588,1589,1590,1591,1592,1593,1594,1779,1780,1781,1782,1783,1784,1785,=
1786,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,=
1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937}}
 ,{tilespan=3D4,src=3D"terrain_rock.png"				,uoids=3D{228,229,230,231,244,2=
45,246,247,260,261,262,263,272,273,274,275,290,291,292,293,467,468,469,470,=
471,472,473,474,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557=
,558,559,560,565,566,567,568,1741,1742,1743,1744,1745,1754,1755,1756,1757,1=
771,1772,1773,1774,1775,1776,1777,1778,1787,1788,1789,1790,1805,1806,1807,1=
808,1809,1810,1811,1812,1821,1822,1823,1824,1835,1836,1837,1838,1839,1840,1=
841,1842,1851,1852,1853,1854,1865,1866,1867,1868,1869,1870,1871,1872,1881,1=
882,1883,1884}}
 ,{tilespan=3D4,src=3D"terrain_sand.png"				,uoids=3D{22,23,24,25,26,27,28,=
29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,=
54,55,56,57,58,68,69,70,71,72,73,74,75,286,287,288,289,294,295,296,297,298,=
299,300,301,402,424,425,426,427,441,442,443,444,445,446,447,448,449,450,451=
,452,453,454,455,456,457,458,459,460,461,462,463,464,465,642,643,644,645,65=
0,651,652,653,654,655,656,657,821,822,823,824,825,826,827,828,833,834,835,8=
36,845,846,847,848,849,850,851,852,857,858,859,860,951,952,953,954,955,956,=
957,958,967,968,969,970,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1=
457,1458,1611,1612,1613,1614,1615,1616,1617,1618,1623,1624,1625,1626,1635,1=
636,1637,1638,1639,1640,1641,1642,1647,1648,1649,1650}}
@@ -67,14 +67,15 @@
 }
 =

 -- skipped tiles
-gMultiTextureSkipList =3D {}
-gMultiTextureSkipList.water			=3D {uoids=3D{168,169,170,171,310,311}} --,1=
00,94,91,99,87,82,79,149,131}
+gMultiTextureSkipList =3D {
+	168,169,170,171,310,311,  -- water --,100,94,91,99,87,82,79,149,131}
+} =

 =

 =

 -- old : gMultiTextureAtlasList_Span
 =

 =

-kMultiTexTerrainDefaultTypeID =3D 1 -- dirt
+gMultiTexTerrainDefaultTypeID =3D 0 -- set later via default-prop
 =

 gMultiTexTerrain_NextStep =3D 0
 kMultiTexTerrain_StepInterval =3D 500
@@ -99,30 +100,50 @@
 function MultiTexTerrainInit ()
 	if (not gEnableMultiTexTerrain) then return end
 	=

+	print(MultiTexTerrainInit)
+	=

 	-- TerrainMultiTex_AddTexCoordSet (iMode,tx,ty,tw,th)  -- 0:ground,1:main=
mask,2:mask
 	local e =3D 1/4
 	local f =3D e/4
 	local b =3D 8/1024 -- 4 pixel border on each side for the 1024 texture
 	=

+	local aw =3D 1024 -- todo : config
+	local tilew =3D aw / 4 / 4
+	local pTexAtlas =3D CreateTexAtlas(aw,aw)
+	for k1,o in pairs(gMultiTextureAtlasList) do
+		-- load+scale image for atlas
+		local iBorderPixels =3D 2
+		local iScaledSourceW =3D tilew*o.tilespan - 2*iBorderPixels
+		local imgFile	=3D LoadImageFromFile(o.src)
+		local imgScaled	=3D ImageScale(imgFile,iScaledSourceW,iScaledSourceW)
+		local bSuccess,l,r,t,b =3D pTexAtlas:AddImage(imgScaled,iBorderPixels)
+		imgFile:Destroy()
+		imgScaled:Destroy()
+		=

+		-- register texture
+		local myid =3D k1 - 1
+		if (o.default) then gMultiTexTerrainDefaultTypeID =3D myid end
+		local u0,v0,w,h =3D l,t,(r-l)/4,(b-t)/4
+		for k2,uoid in pairs(o.uoids) do gMultiTexTerrainTypeLookup[uoid] =3D my=
id end
+		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespan}
+		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h)
+	end
+	local sTexName =3D pTexAtlas:MakeTexture()
+	pTexAtlas:Destroy()
+	=

+	SetTexture(kTerrainMultiTexMatName			,sTexName,0,0,0) -- iTech=3D0,iPass=
=3D0,iTextureUnit=3D0
+	SetTexture(kTerrainMultiTexMatName			,sTexName,0,0,2)
+	SetTexture(kTerrainMultiTexMatNameNoTrans	,sTexName,0,0,0)
+	=

 	=

 	-- TexCoordSet 0 : ground
 	--~ TerrainMultiTex_AddTexCoordSet(0, 0*e,0*e,f,f)
 	--~ TerrainMultiTex_AddTexCoordSet(0, 1*e,0*e,f,f)
-	for k1,name in pairs(gMultiTextureAtlasList_Span) do =

-		local myid =3D k1 - 1
-		local x =3D math.mod(myid,4)
-		local y =3D math.floor(myid / 4)
-		for k2,uoid in pairs(gTerrain_MultiTexTypes[name]) do gMultiTexTerrainTy=
peLookup[uoid] =3D myid end
-		=

-		local u0,v0,w,h =3D x*e+b,y*e+b,(e-b-b)/4,(e-b-b)/4
-		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w,h}
-		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h)
-	end
 	for uoid=3D0,0x4000 do =

 		if (not gMultiTexTerrainTypeLookup[uoid]) then gMultiTexTerrainTypeLooku=
p[uoid] =3D kMultiTexTerrainDefaultTypeID end -- dirt
 	end	=

 	=

-	for k2,uoid in pairs(gTerrain_MultiTexTypes.water) do gMultiTexTerrainTyp=
eLookup[uoid] =3D -1 end -- skip water tiles
+	for k2,uoid in pairs(gMultiTextureSkipList) do gMultiTexTerrainTypeLookup=
[uoid] =3D -1 end -- skip tiles, e.g. water =

 	TerrainMultiTex_SetGroundMaterialTypeLookUp(gMultiTexTerrainTypeLookup) =

 	=

 	-- TexCoordSet 1 : main mask

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat May  3 00:51:55 2008
@@ -204,6 +204,7 @@
 	OgreAddResLoc(mydatapath.."terrain/materials"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."terrain/textures"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."terrain/multitex"			,"FileSystem","General")
+	OgreAddResLoc(mydatapath.."terrain/multitex/parts"		,"FileSystem","Genera=
l")
 =

 	--~ # new Grannys
 	OgreAddResLoc(mydatapath.."grannys/materials"			,"FileSystem","General")



From no-reply at zwischenwelt.org  Sat May  3 01:19:17 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 23:19:17 -0000
Subject: [Iris-commit] [IRIS] r2125 - /trunk/data/terrain/multitex/
Message-ID: <20080502231917.ADFF81C186F0@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 01:19:16 2008
New Revision: 2125

Log:
old terrain textatlas not needed anymore

Removed:
    trunk/data/terrain/multitex/terrain_tex_atlas_1024.dds
    trunk/data/terrain/multitex/terrain_tex_atlas_1024.png
    trunk/data/terrain/multitex/terrain_tex_atlas_2048.dds
    trunk/data/terrain/multitex/terrain_tex_atlas_2048.png
    trunk/data/terrain/multitex/terrain_tex_atlas_256.dds
    trunk/data/terrain/multitex/terrain_tex_atlas_256.png
    trunk/data/terrain/multitex/terrain_tex_atlas_512.dds
    trunk/data/terrain/multitex/terrain_tex_atlas_512.png



From no-reply at zwischenwelt.org  Sat May  3 01:49:26 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 02 May 2008 23:49:26 -0000
Subject: [Iris-commit] [IRIS] r2126 - in /trunk:
 data/terrain/materials/terrain.material lua/lib.terrain.multitex.lua
Message-ID: <20080502234927.6FAAA1C18535@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 01:49:21 2008
New Revision: 2126

Log:
multittex-terrain : mask now set via script, mask coordinates parameterized=
 in prep for anti-atlas-bleed (mask)

Modified:
    trunk/data/terrain/materials/terrain.material
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Sat May  3 01:49:21 2008
@@ -13,7 +13,7 @@
 		{
 			texture_unit
 			{
-				texture terrain_tex_atlas_256.png
+				// set via script : texture groundatlas.png
 				tex_coord_set	0
 			}
 		}
@@ -34,7 +34,7 @@
 			texture_unit
 			{
 				// draws ground and applies diffuse lighting
-				// texture terrain_tex_atlas_256.png
+				// set via script : texture groundatlas.png
 				tex_coord_set	0
 				colour_op_ex	modulate src_texture src_diffuse
 			}
@@ -57,14 +57,14 @@
                 filtering anisotropic
                 max_anisotropy 8
 				// draws ground at full brightness
-				// texture terrain_tex_atlas_1024.dds
+				// set via script : texture groundatlas.png
 				tex_coord_set	0
 				colour_op_ex	source1 src_texture src_texture
 			}
 			texture_unit =

 			{
 				// loads transition mask into alpha channel
-				texture terrain_multitex_mask_64_blur_man.png alpha
+				// set via script : texture maskatlas.png alpha
 				tex_coord_set 1
 				colour_op_ex	source1 src_current src_current
 				alpha_op_ex		source1 src_texture src_texture
@@ -74,7 +74,7 @@
                 filtering anisotropic
                 max_anisotropy 8
 				// loads secondardy ground and blends it using transition mask
-				// texture terrain_tex_atlas_1024.dds
+				// set via script : texture groundatlas.png
 				tex_coord_set 2
 				colour_op_ex	blend_current_alpha src_texture src_current
 				// alpha_op_ex		source1 src_current src_current
@@ -84,7 +84,6 @@
                 filtering anisotropic
                 max_anisotropy 8
 				// applies diffuse lighting
-				// texture terrain_multitex_mask_64_blur_man.png alpha
 				// tex_coord_set 3
 				colour_op_ex	modulate src_current src_diffuse
 				// alpha_op_ex		source1 src_texture src_texture

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 01:49:21 2008
@@ -3,6 +3,7 @@
 =

 kTerrainMultiTexMatName			=3D "terrain_multitex_mat" -- see data/terrain/m=
aterial/
 kTerrainMultiTexMatNameNoTrans	=3D "terrain_multitex_simple_mat" -- ugly, =
but faster
+kTerrainMultiTexMaskImage		=3D "terrain_multitex_mask_64_blur_man.png"
 =

 function MultiTexTerrainGetMat () =

 	return gDisableMultiTexTerrainTransitions and kTerrainMultiTexMatNameNoTr=
ans or kTerrainMultiTexMatName
@@ -107,12 +108,14 @@
 	local f =3D e/4
 	local b =3D 8/1024 -- 4 pixel border on each side for the 1024 texture
 	=

+	-- construct ground texatlas
 	local aw =3D 1024 -- todo : config
+	if (gDisableMultiTexTerrainTransitions) then aw =3D 256 end -- low quality
 	local tilew =3D aw / 4 / 4
 	local pTexAtlas =3D CreateTexAtlas(aw,aw)
 	for k1,o in pairs(gMultiTextureAtlasList) do
 		-- load+scale image for atlas
-		local iBorderPixels =3D 2
+		local iBorderPixels =3D (aw >=3D 512) and 4 or 2
 		local iScaledSourceW =3D tilew*o.tilespan - 2*iBorderPixels
 		local imgFile	=3D LoadImageFromFile(o.src)
 		local imgScaled	=3D ImageScale(imgFile,iScaledSourceW,iScaledSourceW)
@@ -128,13 +131,31 @@
 		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespan}
 		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h)
 	end
-	local sTexName =3D pTexAtlas:MakeTexture()
+	local sGroundTexName =3D pTexAtlas:MakeTexture()
 	pTexAtlas:Destroy()
 	=

-	SetTexture(kTerrainMultiTexMatName			,sTexName,0,0,0) -- iTech=3D0,iPass=
=3D0,iTextureUnit=3D0
-	SetTexture(kTerrainMultiTexMatName			,sTexName,0,0,2)
-	SetTexture(kTerrainMultiTexMatNameNoTrans	,sTexName,0,0,0)
-	=

+	-- load mask and reassemble atlas =

+	local sMaskTexName =3D kTerrainMultiTexMaskImage
+	local myMaskCoordsAntiBleed =3D {}
+	if (true) then
+		local imgFile =3D LoadImageFromFile(kTerrainMultiTexMaskImage)
+		for y =3D 0,3 do
+		for x =3D 0,3 do
+			--~ local imgPart =3D =

+			local u,v,w,h =3D x*e,y*e,e,e
+			--~ local u,v,w,h =3D l,t,(r-l)/4,(b-t)/4
+			myMaskCoordsAntiBleed[10*y+x] =3D {u,v,w,h}
+		end
+		end
+		imgFile:Destroy()
+	end
+	=

+	-- update material
+	SetTexture(kTerrainMultiTexMatName			,sGroundTexName,0,0,0) -- iTech=3D0,=
iPass=3D0,iTextureUnit=3D0
+	SetTexture(kTerrainMultiTexMatName			,sMaskTexName  ,0,0,1)
+	SetTexture(kTerrainMultiTexMatName			,sGroundTexName,0,0,2)
+	SetTexture(kTerrainMultiTexMatNameNoTrans	,sGroundTexName,0,0,0)
+	SetTextureIsAlpha(kTerrainMultiTexMatName	,true  ,0,0,1)
 	=

 	-- TexCoordSet 0 : ground
 	--~ TerrainMultiTex_AddTexCoordSet(0, 0*e,0*e,f,f)
@@ -148,7 +169,10 @@
 	=

 	-- TexCoordSet 1 : main mask
 	if (true) then
-		TerrainMultiTex_AddTexCoordSet(1, 3*e,3*e,e,e) -- mainmask
+		local x,y =3D 3,3
+		local u,v,w,h =3D unpack(myMaskCoordsAntiBleed[10*y+x])
+		TerrainMultiTex_AddTexCoordSet(1, u,v,w,h) -- mainmask
+		--~ TerrainMultiTex_AddTexCoordSet(1, 3*e,3*e,e,e) -- mainmask
 	end
 	=

 	=

@@ -189,8 +213,10 @@
 			local maskindex,derivates =3D unpack(data)
 			local x =3D math.mod(maskindex,4)
 			local y =3D math.floor(maskindex / 4)
-			local u,v =3D x*e,y*e
-			local u1,v1, u2,v2, u3,v3, u4,v4 =3D u,v, u+e,v, u,v+e, u+e,v+e
+			--~ local u,v =3D x*e,y*e
+			--~ local u1,v1, u2,v2, u3,v3, u4,v4 =3D u,v, u+e,v, u,v+e, u+e,v+e
+			local u,v,w,h =3D unpack(myMaskCoordsAntiBleed[10*y+x])
+			local u1,v1, u2,v2, u3,v3, u4,v4 =3D u,v, u+w,v, u,v+h, u+w,v+h
 			mycoords[code] =3D {u1,v1, u2,v2, u3,v3, u4,v4}
 			for code2,transform in pairs(derivates) do
 				local coords



From no-reply at zwischenwelt.org  Sat May  3 02:02:07 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 00:02:07 -0000
Subject: [Iris-commit] [IRIS] r2127 - in /trunk/data/models:
 materials/textures.material models/to_008000/mdl_007882.mesh
 models/to_008000/mdl_007883.mesh models/to_008000/mdl_007884.mesh
 textures/tex_pylon.png
Message-ID: <20080503010012.6409A1C186F0@zwischenwelt.org>

Author: hagish
Date: Sat May  3 02:02:05 2008
New Revision: 2127

Log:
new models: pylon

Added:
    trunk/data/models/models/to_008000/mdl_007882.mesh   (with props)
    trunk/data/models/models/to_008000/mdl_007883.mesh   (with props)
    trunk/data/models/models/to_008000/mdl_007884.mesh   (with props)
    trunk/data/models/textures/tex_pylon.png   (with props)
Modified:
    trunk/data/models/materials/textures.material

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Sat May  3 02:02:05 2008
@@ -8254,6 +8254,20 @@
 			texture_unit =

 			{ =

 				texture tex_slidingdoor.png =

+			}	=

+		}
+	} =

+}
+
+material tex_pylon : tex_base
+{ =

+	technique =

+	{ =

+		pass =

+		{		=

+			texture_unit =

+			{ =

+				texture tex_pylon.png =

 			}	=

 		}
 	} =




From no-reply at zwischenwelt.org  Sat May  3 02:51:15 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 00:51:15 -0000
Subject: [Iris-commit] [IRIS] r2129 -
	/trunk/data/terrain/multitex/parts/terrain_grass.png
Message-ID: <20080503010012.CA5CD1C1879B@zwischenwelt.org>

Author: hagish
Date: Sat May  3 02:51:14 2008
New Revision: 2129

Log:
bugfix: grass not tileable

Modified:
    trunk/data/terrain/multitex/parts/terrain_grass.png

Modified: trunk/data/terrain/multitex/parts/terrain_grass.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat May  3 02:13:19 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 00:13:19 -0000
Subject: [Iris-commit] [IRIS] r2128 - in /rawdata/sd_pd: houseparts.blend
 terrain_cave.png terrain_cave2.png terrain_lava.png terrain_swamp.png
 tex_flowers2.png tex_lantern.png tex_lantern.xcf tex_lilypads.png
 tex_pylon.png tex_vase.png
Message-ID: <20080503010012.B639C1C18535@zwischenwelt.org>

Author: hagish
Date: Sat May  3 02:13:18 2008
New Revision: 2128

Log:
rawdata update

Added:
    rawdata/sd_pd/terrain_cave.png   (with props)
    rawdata/sd_pd/terrain_cave2.png   (with props)
    rawdata/sd_pd/terrain_lava.png   (with props)
    rawdata/sd_pd/terrain_swamp.png   (with props)
    rawdata/sd_pd/tex_flowers2.png   (with props)
    rawdata/sd_pd/tex_lilypads.png   (with props)
    rawdata/sd_pd/tex_pylon.png   (with props)
    rawdata/sd_pd/tex_vase.png   (with props)
Modified:
    rawdata/sd_pd/houseparts.blend
    rawdata/sd_pd/tex_lantern.png
    rawdata/sd_pd/tex_lantern.xcf

Modified: rawdata/sd_pd/houseparts.blend
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: rawdata/sd_pd/tex_lantern.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: rawdata/sd_pd/tex_lantern.xcf
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat May  3 03:46:08 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 01:46:08 -0000
Subject: [Iris-commit] [IRIS] r2130 - in /trunk:
 data/terrain/multitex/terrain_multitex_mask_64_blur_man_antibleed.png
 lua/lib.terrain.multitex.lua
Message-ID: <20080503014608.470A01C186F0@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 03:46:07 2008
New Revision: 2130

Log:
fixed texatlas-bleeding artefacts in terrain-transition masks

Added:
    trunk/data/terrain/multitex/terrain_multitex_mask_64_blur_man_antibleed=
.png   (with props)
Modified:
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 03:46:07 2008
@@ -3,7 +3,8 @@
 =

 kTerrainMultiTexMatName			=3D "terrain_multitex_mat" -- see data/terrain/m=
aterial/
 kTerrainMultiTexMatNameNoTrans	=3D "terrain_multitex_simple_mat" -- ugly, =
but faster
-kTerrainMultiTexMaskImage		=3D "terrain_multitex_mask_64_blur_man.png"
+--~ kTerrainMultiTexMaskImage		=3D "terrain_multitex_mask_64_blur_man.png"
+kTerrainMultiTexMaskImage		=3D "terrain_multitex_mask_64_blur_man_antiblee=
d.png"
 =

 function MultiTexTerrainGetMat () =

 	return gDisableMultiTexTerrainTransitions and kTerrainMultiTexMatNameNoTr=
ans or kTerrainMultiTexMatName
@@ -138,17 +139,43 @@
 	local sMaskTexName =3D kTerrainMultiTexMaskImage
 	local myMaskCoordsAntiBleed =3D {}
 	if (true) then
-		local imgFile =3D LoadImageFromFile(kTerrainMultiTexMaskImage)
+		local e,b =3D 1/4, 2/256
 		for y =3D 0,3 do
 		for x =3D 0,3 do
-			--~ local imgPart =3D =

-			local u,v,w,h =3D x*e,y*e,e,e
-			--~ local u,v,w,h =3D l,t,(r-l)/4,(b-t)/4
+			myMaskCoordsAntiBleed[10*y+x] =3D {x*e+b,y*e+b,e-b-b,e-b-b}
+		end
+		end
+	end
+	--[[
+	-- FAILED as the texatlas would have to be an alpha-format from the start=
 to create an alpha texture
+	local iMaskAtlasW =3D 256
+	local iMaskBorder =3D 2
+	local iScaledMaskW =3D iMaskAtlasW/4 - 2*iMaskBorder
+	local pTexAtlasMask =3D CreateTexAtlas(iMaskAtlasW,iMaskAtlasW)
+	if (true) then
+		local imgFile =3D LoadImageFromFile(kTerrainMultiTexMaskImage)
+		local px,py =3D imgFile:GetWidth()/4,imgFile:GetHeight()/4
+		for y =3D 0,3 do
+		for x =3D 0,3 do
+			local imgSub		=3D SubImage(imgFile,px*x,py*y,px,py)
+			local imgSubScaled	=3D ImageScale(imgSub,iScaledMaskW,iScaledMaskW)
+			local bSuccess,l,r,t,b =3D pTexAtlasMask:AddImage(imgSubScaled,iMaskBor=
der,false)
+			--~ local u,v,w,h =3D x*e,y*e,e,e
+			local u,v,w,h =3D l,t,(r-l),(b-t)
 			myMaskCoordsAntiBleed[10*y+x] =3D {u,v,w,h}
-		end
-		end
+			imgSub:Destroy()
+			imgSubScaled:Destroy()
+		end
+		end
+		sMaskTexName =3D imgFile:MakeTexture(nil,true) -- bIsAlpha=3Dtrue
 		imgFile:Destroy()
 	end
+	local imgMaskAtlas =3D CreateImage()
+	pTexAtlasMask:MakeImage(imgMaskAtlas)
+	imgMaskAtlas:SaveAsFile("../myma/atlas.png")
+	--~ sMaskTexName =3D pTexAtlasMask:MakeTexture(nil,true)
+	pTexAtlasMask:Destroy()
+	]]--
 	=

 	-- update material
 	SetTexture(kTerrainMultiTexMatName			,sGroundTexName,0,0,0) -- iTech=3D0,=
iPass=3D0,iTextureUnit=3D0



From no-reply at zwischenwelt.org  Sat May  3 04:05:07 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 02:05:07 -0000
Subject: [Iris-commit] [IRIS] r2131 - in /trunk:
 data/terrain/multitex/parts/terrain4_lava.png
 data/terrain/multitex/parts/terrain4_swamp.png lua/lib.terrain.multitex.lua
 src/scripting.iris.cpp
Message-ID: <20080503020508.A98E71C186F3@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 04:05:06 2008
New Revision: 2131

Log:
removed provisory lava and swamp, now using hagishs

Removed:
    trunk/data/terrain/multitex/parts/terrain4_lava.png
    trunk/data/terrain/multitex/parts/terrain4_swamp.png
Modified:
    trunk/lua/lib.terrain.multitex.lua
    trunk/src/scripting.iris.cpp

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 04:05:06 2008
@@ -35,6 +35,7 @@
 -- texture atlas data, the atlas is generated at startup
 gMultiTextureAtlasList =3D {
 -- normal:terrain_grass.png debug:terrain_grass_num.png
+-- swamp alternate : terrain_green_swampy_stone_ground.png
  {tilespan=3D4,src=3D"terrain_grass.png"			,uoids=3D{3,4,5,6,59,60,61,62,1=
25,126,127,192,193,194,195,216,217,218,219,420,421,422,423,561,562,563,564,=
569,570,571,572,573,574,575,576,577,578,579,879,880,881,882,883,884,885,886=
,891,892,893,894,959,960,961,962,963,964,965,966,971,972,973,974,1401,1402,=
1403,1404,1405,1406,1407,1408,1419,1420,1495,1496,1497,1498,1499,1500,1501,=
1502,1507,1508,1509,1510,1661,1662,1663,1664,1665,1666,1667,1668,1673,1674,=
1675,1676,1685,1686,1687,1688,1689,1690,1691,1692,1697,1698,1699,1700,1717,=
1718,1719,1720,1721,1722,1727,1728,1729,1730,1746,1747,1748,1749,1750,1751,=
1752,1753,1758,1759,1760,1761}}
 ,{tilespan=3D4,src=3D"terrain_dirt.png",default=3Dtrue,uoids=3D{113,114,11=
5,116,117,118,119,120,121,122,123,124,128,129,130,131,132,133,134,135,136,1=
37,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,=
156,157,158,159,160,161,162,163,164,165,166,167,220,221,222,223,224,225,226=
,227,232,233,234,235,321,322,323,324,332,333,334,335,361,362,363,364,365,36=
6,367,368,369,370,371,372,476,477,478,479,480,481,482,483,484,485,486,487,4=
92,493,494,495,626,627,628,629,638,639,640,641,720,721,722,723,724,725,726,=
727,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758=
,759,760,761,762,763,764,765,766,767,771,772,773,774,775,776,777,778,779,78=
0,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,7=
99,812,813,814,815,829,830,831,832,837,838,839,840,841,842,843,844,853,854,=
855,856,871,872,873,874,875,876,877,878,887,888,889,890,909,910,911,912,917=
,918,919,920,921,922,923,924,933,934,935,936,1014,1015,1017,1018,1019,1020,=
1021,1022,1023,1024,1025,1026,1027,1028,1029,1351,1352,1353,1354,1355,1356,=
1357,1358,1363,1364,1365,1366,1431,1432,1433,1434,1435,1436,1437,1438,1571,=
1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,=
1587,1588,1589,1590,1591,1592,1593,1594,1779,1780,1781,1782,1783,1784,1785,=
1786,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,=
1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937}}
 ,{tilespan=3D4,src=3D"terrain_rock.png"				,uoids=3D{228,229,230,231,244,2=
45,246,247,260,261,262,263,272,273,274,275,290,291,292,293,467,468,469,470,=
471,472,473,474,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557=
,558,559,560,565,566,567,568,1741,1742,1743,1744,1745,1754,1755,1756,1757,1=
771,1772,1773,1774,1775,1776,1777,1778,1787,1788,1789,1790,1805,1806,1807,1=
808,1809,1810,1811,1812,1821,1822,1823,1824,1835,1836,1837,1838,1839,1840,1=
841,1842,1851,1852,1853,1854,1865,1866,1867,1868,1869,1870,1871,1872,1881,1=
882,1883,1884}}
@@ -45,8 +46,8 @@
 ,{tilespan=3D4,src=3D"terrain_snow.png"				,uoids=3D{268,269,270,271,276,2=
77,278,279,282,283,284,285,377,378,379,380,381,382,383,384,385,386,387,388,=
389,390,391,392,393,394,901,902,903,904,905,906,907,908,913,914,915,916,925=
,926,927,928,929,930,931,932,937,938,939,940,1471,1472,1473,1474,1475,1476,=
1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,=
1492,1493,1494,1503,1504,1505,1506,1861,1862,1863,1864,1873,1874,1875,1876,=
1877,1878,1879,1880,1885,1886,1887,1888,1901,1902,1903,1904,1905,1906,1907}}
 ,{tilespan=3D4,src=3D"terrain_void.png"				,uoids=3D{506,507,508,509,510,5=
11, 580}}
 ,{tilespan=3D4,src=3D"terrain_cave.png"				,uoids=3D{581,582,583,584,585,5=
86,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,=
605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,700,701=
,702,703,704,705,706,707,708,709,710,711,712,713,714,715,1595,1596,1597,159=
8}}
-,{tilespan=3D4,src=3D"terrain4_lava.png"			,uoids=3D{500,501,502,503}}
-,{tilespan=3D4,src=3D"terrain4_swamp.png"			,uoids=3D{2112,2108}} -- 0x840=
=3D2112 0x83c=3D2108 ids ??
+,{tilespan=3D4,src=3D"terrain_lava.png"			,uoids=3D{500,501,502,503}}
+,{tilespan=3D4,src=3D"terrain_swamp.png"			,uoids=3D{2112,2108}} -- 0x840=
=3D2112 0x83c=3D2108 ids ??
 ,{tilespan=3D1,src=3D"terrain1_fliese01.png"		,uoids=3D{0x83a}}
 ,{tilespan=3D1,src=3D"terrain1_fliese02.png"		,uoids=3D{0x3fd1}}
 ,{tilespan=3D1,src=3D"terrain1_stein01.png"			,uoids=3D{0x442}} -- light b=
rown
@@ -130,7 +131,7 @@
 		local u0,v0,w,h =3D l,t,(r-l)/4,(b-t)/4
 		for k2,uoid in pairs(o.uoids) do gMultiTexTerrainTypeLookup[uoid] =3D my=
id end
 		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespan}
-		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h)
+		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h,o.tilespan)
 	end
 	local sGroundTexName =3D pTexAtlas:MakeTexture()
 	pTexAtlas:Destroy()
@@ -198,8 +199,8 @@
 	if (true) then
 		local x,y =3D 3,3
 		local u,v,w,h =3D unpack(myMaskCoordsAntiBleed[10*y+x])
-		TerrainMultiTex_AddTexCoordSet(1, u,v,w,h) -- mainmask
-		--~ TerrainMultiTex_AddTexCoordSet(1, 3*e,3*e,e,e) -- mainmask
+		TerrainMultiTex_AddTexCoordSet(1, u,v,w,h, 1) -- mainmask
+		--~ TerrainMultiTex_AddTexCoordSet(1, 3*e,3*e,e,e, 1) -- mainmask
 	end
 	=

 	=


Modified: trunk/src/scripting.iris.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.iris.cpp (original)
+++ trunk/src/scripting.iris.cpp Sat May  3 04:05:06 2008
@@ -348,7 +348,7 @@
 	return 0;
 }
 =

-/// for lua : void	TerrainMultiTex_AddTexCoordSet (int iMode,float tx,floa=
t ty,float tw,float th) =

+/// for lua : void	TerrainMultiTex_AddTexCoordSet (int iMode,float tx,floa=
t ty,float tw,float th,iSpan) =

 /// 0:ground,1:mainmask
 static int l_TerrainMultiTex_AddTexCoordSet (lua_State *L) { PROFILE
 	int iMode =3D luaL_checkint(L,1);
@@ -356,7 +356,8 @@
 	float ty =3D luaL_checknumber(L,3);
 	float tw =3D luaL_checknumber(L,4);
 	float th =3D luaL_checknumber(L,5);
-	TerrainMultiTex_AddTexCoordSet(iMode,tx,ty,tw,th);
+	int iSpan =3D luaL_checkint(L,6);
+	TerrainMultiTex_AddTexCoordSet(iMode,tx,ty,tw,th,iSpan);
 	return 0;
 }
 =




From no-reply at zwischenwelt.org  Sat May  3 04:15:06 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 02:15:06 -0000
Subject: [Iris-commit] [IRIS] r2132 - /trunk/lua/lib.terrain.multitex.lua
Message-ID: <20080503021506.B9B5D1C186F3@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 04:15:05 2008
New Revision: 2132

Log:
added swampids

Modified:
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 04:15:05 2008
@@ -46,8 +46,8 @@
 ,{tilespan=3D4,src=3D"terrain_snow.png"				,uoids=3D{268,269,270,271,276,2=
77,278,279,282,283,284,285,377,378,379,380,381,382,383,384,385,386,387,388,=
389,390,391,392,393,394,901,902,903,904,905,906,907,908,913,914,915,916,925=
,926,927,928,929,930,931,932,937,938,939,940,1471,1472,1473,1474,1475,1476,=
1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,=
1492,1493,1494,1503,1504,1505,1506,1861,1862,1863,1864,1873,1874,1875,1876,=
1877,1878,1879,1880,1885,1886,1887,1888,1901,1902,1903,1904,1905,1906,1907}}
 ,{tilespan=3D4,src=3D"terrain_void.png"				,uoids=3D{506,507,508,509,510,5=
11, 580}}
 ,{tilespan=3D4,src=3D"terrain_cave.png"				,uoids=3D{581,582,583,584,585,5=
86,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,=
605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,700,701=
,702,703,704,705,706,707,708,709,710,711,712,713,714,715,1595,1596,1597,159=
8}}
-,{tilespan=3D4,src=3D"terrain_lava.png"			,uoids=3D{500,501,502,503}}
-,{tilespan=3D4,src=3D"terrain_swamp.png"			,uoids=3D{2112,2108}} -- 0x840=
=3D2112 0x83c=3D2108 ids ??
+,{tilespan=3D4,src=3D"terrain_lava.png"				,uoids=3D{500,501,502,503}}
+,{tilespan=3D4,src=3D"terrain_swamp.png"			,uoids=3D{2112,2108,15850,15851=
,15852}} -- 0x840=3D2112 0x83c=3D2108 ids ??
 ,{tilespan=3D1,src=3D"terrain1_fliese01.png"		,uoids=3D{0x83a}}
 ,{tilespan=3D1,src=3D"terrain1_fliese02.png"		,uoids=3D{0x3fd1}}
 ,{tilespan=3D1,src=3D"terrain1_stein01.png"			,uoids=3D{0x442}} -- light b=
rown



From no-reply at zwischenwelt.org  Sat May  3 04:41:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 02:41:42 -0000
Subject: [Iris-commit] [IRIS] r2133 - in /trunk: include/terrain.h
 lua/lib.terrain.multitex.lua src/scripting.iris.cpp
 src/terrain_multitex.cpp
Message-ID: <20080503024143.5A3471C18789@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 04:41:41 2008
New Revision: 2133

Log:
eri-tiles starting to work

Modified:
    trunk/include/terrain.h
    trunk/lua/lib.terrain.multitex.lua
    trunk/src/scripting.iris.cpp
    trunk/src/terrain_multitex.cpp

Modified: trunk/include/terrain.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/terrain.h (original)
+++ trunk/include/terrain.h Sat May  3 04:41:41 2008
@@ -15,7 +15,7 @@
 =

 void	 		TerrainMultiTexWrite		(cGroundBlockLoader* pGroundBlockLoader,cons=
t int iBlockX,const int iBlockY,const int iDX,const int iDY,Lugre::cRobRend=
erOp& pRobRenderOp);
 void	 		TerrainMultiTex_SetGroundMaterialTypeLookUp	(const int* piValues,c=
onst int iCount);
-void			TerrainMultiTex_AddTexCoordSet				(int iMode,float tx,float ty,floa=
t tw,float th); ///< 0:ground,1:mainmask,2:mask
+void			TerrainMultiTex_AddTexCoordSet				(int iMode,float tx,float ty,floa=
t tw,float th,int iTileSpan); ///< 0:ground,1:mainmask,2:mask
 void			TerrainMultiTex_AddMaskTexCoordSet			(float u1,float v1, float u2,f=
loat v2, float u3,float v3, float u4,float v4);
 =

 =


Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 04:41:41 2008
@@ -31,6 +31,9 @@
 ]]--
 =

 -- 0x0244  pos=3D5260,1333 block=3D1231,311
+
+-- swamptest : iris -so 1990,1000
+-- lavatest  : iris -so 5780,1450
 =

 -- texture atlas data, the atlas is generated at startup
 gMultiTextureAtlasList =3D {
@@ -105,7 +108,7 @@
 	=

 	print(MultiTexTerrainInit)
 	=

-	-- TerrainMultiTex_AddTexCoordSet (iMode,tx,ty,tw,th)  -- 0:ground,1:main=
mask,2:mask
+	-- TerrainMultiTex_AddTexCoordSet (iMode,tx,ty,tw,th,iTileSpan)  -- 0:gro=
und,1:mainmask,2:mask
 	local e =3D 1/4
 	local f =3D e/4
 	local b =3D 8/1024 -- 4 pixel border on each side for the 1024 texture
@@ -117,8 +120,9 @@
 	local pTexAtlas =3D CreateTexAtlas(aw,aw)
 	for k1,o in pairs(gMultiTextureAtlasList) do
 		-- load+scale image for atlas
+		local iTileSpan =3D o.tilespan
 		local iBorderPixels =3D (aw >=3D 512) and 4 or 2
-		local iScaledSourceW =3D tilew*o.tilespan - 2*iBorderPixels
+		local iScaledSourceW =3D tilew*iTileSpan - 2*iBorderPixels
 		local imgFile	=3D LoadImageFromFile(o.src)
 		local imgScaled	=3D ImageScale(imgFile,iScaledSourceW,iScaledSourceW)
 		local bSuccess,l,r,t,b =3D pTexAtlas:AddImage(imgScaled,iBorderPixels)
@@ -128,10 +132,10 @@
 		-- register texture
 		local myid =3D k1 - 1
 		if (o.default) then gMultiTexTerrainDefaultTypeID =3D myid end
-		local u0,v0,w,h =3D l,t,(r-l)/4,(b-t)/4
+		local u0,v0,w,h =3D l,t,(r-l)/iTileSpan,(b-t)/iTileSpan
 		for k2,uoid in pairs(o.uoids) do gMultiTexTerrainTypeLookup[uoid] =3D my=
id end
 		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespan}
-		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h,o.tilespan)
+		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h,iTileSpan)
 	end
 	local sGroundTexName =3D pTexAtlas:MakeTexture()
 	pTexAtlas:Destroy()
@@ -186,8 +190,8 @@
 	SetTextureIsAlpha(kTerrainMultiTexMatName	,true  ,0,0,1)
 	=

 	-- TexCoordSet 0 : ground
-	--~ TerrainMultiTex_AddTexCoordSet(0, 0*e,0*e,f,f)
-	--~ TerrainMultiTex_AddTexCoordSet(0, 1*e,0*e,f,f)
+	--~ TerrainMultiTex_AddTexCoordSet(0, 0*e,0*e,f,f,1)
+	--~ TerrainMultiTex_AddTexCoordSet(0, 1*e,0*e,f,f,1)
 	for uoid=3D0,0x4000 do =

 		if (not gMultiTexTerrainTypeLookup[uoid]) then gMultiTexTerrainTypeLooku=
p[uoid] =3D kMultiTexTerrainDefaultTypeID end -- dirt
 	end	=


Modified: trunk/src/scripting.iris.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.iris.cpp (original)
+++ trunk/src/scripting.iris.cpp Sat May  3 04:41:41 2008
@@ -348,7 +348,7 @@
 	return 0;
 }
 =

-/// for lua : void	TerrainMultiTex_AddTexCoordSet (int iMode,float tx,floa=
t ty,float tw,float th,iSpan) =

+/// for lua : void	TerrainMultiTex_AddTexCoordSet (int iMode,float tx,floa=
t ty,float tw,float th,iTileSpan) =

 /// 0:ground,1:mainmask
 static int l_TerrainMultiTex_AddTexCoordSet (lua_State *L) { PROFILE
 	int iMode =3D luaL_checkint(L,1);
@@ -356,8 +356,8 @@
 	float ty =3D luaL_checknumber(L,3);
 	float tw =3D luaL_checknumber(L,4);
 	float th =3D luaL_checknumber(L,5);
-	int iSpan =3D luaL_checkint(L,6);
-	TerrainMultiTex_AddTexCoordSet(iMode,tx,ty,tw,th,iSpan);
+	int iTileSpan =3D luaL_checkint(L,6);
+	TerrainMultiTex_AddTexCoordSet(iMode,tx,ty,tw,th,iTileSpan);
 	return 0;
 }
 =


Modified: trunk/src/terrain_multitex.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/terrain_multitex.cpp (original)
+++ trunk/src/terrain_multitex.cpp Sat May  3 04:41:41 2008
@@ -103,7 +103,8 @@
 	=

 	inline void WriteVertex (Ogre::Real*& w,const int x,const int y,
 		const int iMainType,const int iMainMask,const int iTypeA,const int iMask=
A,
-		const float spanx,const float spany,
+		const float spanx_M,const float spany_M,
+		const float spanx_A,const float spany_A,
 		const int idx,const int idy,
 		const float dx,const float dy) {
 		=

@@ -125,8 +126,8 @@
 			=

 		// write texcoords 0 : spanning of type_main
 		temp =3D GetTexCoordInfo_GroundMaterialType(iMainType);
-		*++w =3D temp[0] + (spanx+dx)*temp[2];
-		*++w =3D temp[1] + (spany+dy)*temp[3];
+		*++w =3D temp[0] + (spanx_M+dx)*temp[2];
+		*++w =3D temp[1] + (spany_M+dy)*temp[3];
 			=

 		// write texcoords 1 : mask_a
 		temp =3D GetTexCoordInfo_Mask(iMaskA);
@@ -140,8 +141,8 @@
 			=

 		// write texcoords 2 : spanning of type_a
 		temp =3D GetTexCoordInfo_GroundMaterialType(iTypeA);
-		*++w =3D temp[0] + (spanx+dx)*temp[2];
-		*++w =3D temp[1] + (spany+dy)*temp[3];
+		*++w =3D temp[0] + (spanx_A+dx)*temp[2];
+		*++w =3D temp[1] + (spany_A+dy)*temp[3];
 		=

 		// write texcoords 3 : mask_main (currently unused, can be used to leave=
 terrain parts out using alpha-reject)
 		temp =3D GetTexCoordInfo_MainMask(iMainMask);
@@ -150,8 +151,9 @@
 		=

 	}
 	=

-	inline float*	GetTexCoordInfo_GroundMaterialType	(const int iID) { return=
 &mTexCoords_Ground[	iID*4]; }
-	inline float*	GetTexCoordInfo_MainMask			(const int iID) { return &mTexCo=
ords_MainMask[	iID*4]; }
+	inline int		GetTexCoordInfo_GroundMaterialSpan	(const int iID) { return (=
int)mTexCoords_Ground[iID*5+4]; }
+	inline float*	GetTexCoordInfo_GroundMaterialType	(const int iID) { return=
 &mTexCoords_Ground[	iID*5]; }
+	inline float*	GetTexCoordInfo_MainMask			(const int iID) { return &mTexCo=
ords_MainMask[	iID*5]; }
 	inline float*	GetTexCoordInfo_Mask				(const int iID) { return &mTexCoord=
s_Mask[		iID*8]; }
 	=

 	=

@@ -303,7 +305,10 @@
 		int iMainMask;	=

 		int iTypeA;		=

 		int iMaskA;	=

-		float spanx,spany;
+		int iSpanM;	=

+		int iSpanA;	=

+		float spanx_M,spany_M;
+		float spanx_A,spany_A;
 		=

 		// GetZ can only be used after this
 		LoadNearbyData(pGroundBlockLoader,bx,by);
@@ -325,13 +330,17 @@
 			iMainMask	=3D 0; // IsTerrainTypeNodraw(iMainType) ? 1 : 0; // 0=3Dfull=
y visible, 1=3Dfully transparent (nodraw tiles)
 			iTypeA		=3D GetMostFrequentNeighboorType(x,y,iMainType);
 			iMaskA		=3D (iTypeA =3D=3D iMainType) ? 0 : GenerateTransitionMask(x,y,=
iTypeA);
-			spanx =3D float(x % 4);
-			spany =3D float(y % 4);
-			=

-			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx,spany, 0,0, =
0.0,0.0);
-			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx,spany, 1,0, =
1.0,0.0);
-			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx,spany, 0,1, =
0.0,1.0);
-			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx,spany, 1,1, =
1.0,1.0);
+			iSpanM		=3D GetTexCoordInfo_GroundMaterialSpan(iMainType);
+			iSpanA		=3D GetTexCoordInfo_GroundMaterialSpan(iTypeA);
+			spanx_M =3D float(x % iSpanM);
+			spany_M =3D float(y % iSpanM);
+			spanx_A =3D float(x % iSpanA);
+			spany_A =3D float(y % iSpanA);
+			=

+			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx_M,spany_M, s=
panx_A,spany_A, 0,0, 0.0,0.0);
+			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx_M,spany_M, s=
panx_A,spany_A, 1,0, 1.0,0.0);
+			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx_M,spany_M, s=
panx_A,spany_A, 0,1, 0.0,1.0);
+			WriteVertex(w,x,y,iMainType,iMainMask,iTypeA,iMaskA, spanx_M,spany_M, s=
panx_A,spany_A, 1,1, 1.0,1.0);
 		}
 	}
 	=

@@ -424,7 +433,7 @@
 	}
 }
 =

-void	 TerrainMultiTex_AddTexCoordSet		(int iMode,float tx,float ty,float t=
w,float th) {
+void	 TerrainMultiTex_AddTexCoordSet		(int iMode,float tx,float ty,float t=
w,float th,int iTileSpan) {
 	std::vector<float>* pTarget =3D 0;
 	switch (iMode) { =

 		case 0: pTarget =3D &gTiledMultiTexTerrain.mTexCoords_Ground;		break;
@@ -436,6 +445,7 @@
 	pTarget->push_back(ty);
 	pTarget->push_back(tw);
 	pTarget->push_back(th);
+	pTarget->push_back(iTileSpan);
 }
 =

 void	TerrainMultiTex_AddMaskTexCoordSet			(float u1,float v1, float u2,flo=
at v2, float u3,float v3, float u4,float v4) {



From no-reply at zwischenwelt.org  Sat May  3 04:48:17 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 02:48:17 -0000
Subject: [Iris-commit] [IRIS] r2134 - /trunk/lua/lib.terrain.multitex.lua
Message-ID: <20080503024817.CE2A31C18731@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 04:48:17 2008
New Revision: 2134

Log:
fixed fallback for multitex terrain

Modified:
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 04:48:17 2008
@@ -137,6 +137,7 @@
 		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespan}
 		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h,iTileSpan)
 	end
+
 	local sGroundTexName =3D pTexAtlas:MakeTexture()
 	pTexAtlas:Destroy()
 	=

@@ -193,7 +194,7 @@
 	--~ TerrainMultiTex_AddTexCoordSet(0, 0*e,0*e,f,f,1)
 	--~ TerrainMultiTex_AddTexCoordSet(0, 1*e,0*e,f,f,1)
 	for uoid=3D0,0x4000 do =

-		if (not gMultiTexTerrainTypeLookup[uoid]) then gMultiTexTerrainTypeLooku=
p[uoid] =3D kMultiTexTerrainDefaultTypeID end -- dirt
+		if (not gMultiTexTerrainTypeLookup[uoid]) then gMultiTexTerrainTypeLooku=
p[uoid] =3D gMultiTexTerrainDefaultTypeID end -- fallback for unknown
 	end	=

 	=

 	for k2,uoid in pairs(gMultiTextureSkipList) do gMultiTexTerrainTypeLookup=
[uoid] =3D -1 end -- skip tiles, e.g. water =




From no-reply at zwischenwelt.org  Sat May  3 04:57:59 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 02:57:59 -0000
Subject: [Iris-commit] [IRIS] r2135 - in /trunk/data/terrain/multitex/parts:
 terrain_lava.png terrain_swamp.png
Message-ID: <20080503025800.DB1F91C18799@zwischenwelt.org>

Author: hagish
Date: Sat May  3 04:57:56 2008
New Revision: 2135

Log:
improved colors

Modified:
    trunk/data/terrain/multitex/parts/terrain_lava.png
    trunk/data/terrain/multitex/parts/terrain_swamp.png

Modified: trunk/data/terrain/multitex/parts/terrain_lava.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/terrain/multitex/parts/terrain_swamp.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat May  3 05:23:09 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 03:23:09 -0000
Subject: [Iris-commit] [IRIS] r2136 - in /trunk:
 data/terrain/multitex/parts/terrain_swamp.png lua/lib.terrain.multitex.lua
Message-ID: <20080503032309.A60961C18731@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 05:23:08 2008
New Revision: 2136

Log:
swamp tweaking

Modified:
    trunk/data/terrain/multitex/parts/terrain_swamp.png
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/data/terrain/multitex/parts/terrain_swamp.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May  3 05:23:08 2008
@@ -43,7 +43,7 @@
 ,{tilespan=3D4,src=3D"terrain_dirt.png",default=3Dtrue,uoids=3D{113,114,11=
5,116,117,118,119,120,121,122,123,124,128,129,130,131,132,133,134,135,136,1=
37,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,=
156,157,158,159,160,161,162,163,164,165,166,167,220,221,222,223,224,225,226=
,227,232,233,234,235,321,322,323,324,332,333,334,335,361,362,363,364,365,36=
6,367,368,369,370,371,372,476,477,478,479,480,481,482,483,484,485,486,487,4=
92,493,494,495,626,627,628,629,638,639,640,641,720,721,722,723,724,725,726,=
727,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758=
,759,760,761,762,763,764,765,766,767,771,772,773,774,775,776,777,778,779,78=
0,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,7=
99,812,813,814,815,829,830,831,832,837,838,839,840,841,842,843,844,853,854,=
855,856,871,872,873,874,875,876,877,878,887,888,889,890,909,910,911,912,917=
,918,919,920,921,922,923,924,933,934,935,936,1014,1015,1017,1018,1019,1020,=
1021,1022,1023,1024,1025,1026,1027,1028,1029,1351,1352,1353,1354,1355,1356,=
1357,1358,1363,1364,1365,1366,1431,1432,1433,1434,1435,1436,1437,1438,1571,=
1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,=
1587,1588,1589,1590,1591,1592,1593,1594,1779,1780,1781,1782,1783,1784,1785,=
1786,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,=
1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937}}
 ,{tilespan=3D4,src=3D"terrain_rock.png"				,uoids=3D{228,229,230,231,244,2=
45,246,247,260,261,262,263,272,273,274,275,290,291,292,293,467,468,469,470,=
471,472,473,474,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557=
,558,559,560,565,566,567,568,1741,1742,1743,1744,1745,1754,1755,1756,1757,1=
771,1772,1773,1774,1775,1776,1777,1778,1787,1788,1789,1790,1805,1806,1807,1=
808,1809,1810,1811,1812,1821,1822,1823,1824,1835,1836,1837,1838,1839,1840,1=
841,1842,1851,1852,1853,1854,1865,1866,1867,1868,1869,1870,1871,1872,1881,1=
882,1883,1884}}
 ,{tilespan=3D4,src=3D"terrain_sand.png"				,uoids=3D{22,23,24,25,26,27,28,=
29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,=
54,55,56,57,58,68,69,70,71,72,73,74,75,286,287,288,289,294,295,296,297,298,=
299,300,301,402,424,425,426,427,441,442,443,444,445,446,447,448,449,450,451=
,452,453,454,455,456,457,458,459,460,461,462,463,464,465,642,643,644,645,65=
0,651,652,653,654,655,656,657,821,822,823,824,825,826,827,828,833,834,835,8=
36,845,846,847,848,849,850,851,852,857,858,859,860,951,952,953,954,955,956,=
957,958,967,968,969,970,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1=
457,1458,1611,1612,1613,1614,1615,1616,1617,1618,1623,1624,1625,1626,1635,1=
636,1637,1638,1639,1640,1641,1642,1647,1648,1649,1650}}
-,{tilespan=3D4,src=3D"terrain_forest.png"			,uoids=3D{196,197,198,199,200,=
201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,237,238,239,240=
,241,242,243,248,249,250,251,349,350,351,352,353,354,355,356,357,358,359,36=
0,804,805,806,807,808,809,810,811,1359,1360,1361,1362,1521,1522,1523,1524,1=
529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1553,1554,1555,1=
556,1619,1620,1621,1622,1627,1628,1629,1630,1631,1632,1633,1634,1643,1644,1=
645,1646,1711,1712,1713,1714,1715,1716,1723,1724,1725,1726,1801,1802,1803,1=
804,1813,1814,1815,1816,1817,1818,1819,1820}}
+,{tilespan=3D4,src=3D"terrain_forest.png"			,uoids=3D{15810,15835,15836,15=
837,15838,15839,15840,15841,15842,15843,15844,15845,15846,15848,15849,15853=
,15854,15855,15856, 196,197,198,199,200,201,202,203,204,205,206,207,208,209=
,210,211,212,213,214,215,237,238,239,240,241,242,243,248,249,250,251,349,35=
0,351,352,353,354,355,356,357,358,359,360,804,805,806,807,808,809,810,811,1=
359,1360,1361,1362,1521,1522,1523,1524,1529,1530,1531,1532,1533,1534,1535,1=
536,1537,1538,1539,1540,1553,1554,1555,1556,1619,1620,1621,1622,1627,1628,1=
629,1630,1631,1632,1633,1634,1643,1644,1645,1646,1711,1712,1713,1714,1715,1=
716,1723,1724,1725,1726,1801,1802,1803,1804,1813,1814,1815,1816,1817,1818,1=
819,1820}}
 ,{tilespan=3D4,src=3D"terrain_jungle.png"			,uoids=3D{172,173,174,175,176,=
179,182,185,188,189,190,191,236,252,253,254,255,256,257,258,259,264,265,266=
,267,496,497,498,499,622,623,624,625,630,631,632,633,634,635,636,637,646,64=
7,648,649,658,659,660,661,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418=
,1421,1422,1423,1424,1439,1440,1441,1442,1443,1444,1445,1446,1459,1460,1461=
,1462,1463,1464,1465,1466,1525,1526,1527,1528,1541,1542,1543,1544,1545,1546=
,1547,1548,1549,1550,1551,1552,1557,1558,1559,1560,1831,1832,1833,1834,1843=
,1844,1845,1846,1847,1848,1849,1850}}
 ,{tilespan=3D4,src=3D"terrain_cobblestones.png"		,uoids=3D{1001,1002,1003,=
1004,1669,1670,1671,1672,1677,1678,1679,1680,1681,1682,1683,1684,1693,1694,=
1695,1696}}
 ,{tilespan=3D4,src=3D"terrain_snow.png"				,uoids=3D{268,269,270,271,276,2=
77,278,279,282,283,284,285,377,378,379,380,381,382,383,384,385,386,387,388,=
389,390,391,392,393,394,901,902,903,904,905,906,907,908,913,914,915,916,925=
,926,927,928,929,930,931,932,937,938,939,940,1471,1472,1473,1474,1475,1476,=
1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,=
1492,1493,1494,1503,1504,1505,1506,1861,1862,1863,1864,1873,1874,1875,1876,=
1877,1878,1879,1880,1885,1886,1887,1888,1901,1902,1903,1904,1905,1906,1907}}
@@ -137,7 +137,11 @@
 		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespan}
 		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h,iTileSpan)
 	end
-
+	if (true) then -- export texatlas image
+		local imgAtlas =3D CreateImage()
+		pTexAtlas:MakeImage(imgAtlas)
+		imgAtlas:SaveAsFile("../data/tmp/terrain_tex_atlas.png")
+	end
 	local sGroundTexName =3D pTexAtlas:MakeTexture()
 	pTexAtlas:Destroy()
 	=




From no-reply at zwischenwelt.org  Sat May  3 14:24:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 12:24:14 -0000
Subject: [Iris-commit] [IRIS] r2137 - /trunk/bin/iris2.exe
Message-ID: <20080503122414.D1A7F1C18750@zwischenwelt.org>

Author: sience
Date: Sat May  3 14:24:12 2008
New Revision: 2137

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat May  3 18:07:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 16:07:51 -0000
Subject: [Iris-commit] [IRIS] r2138 -
	/trunk/data/models/atlas/convertalltodds.sh
Message-ID: <20080503160751.AB95E1C186E7@zwischenwelt.org>

Author: hagish
Date: Sat May  3 18:07:49 2008
New Revision: 2138

Log:
ups switched alpha and non alpha

Modified:
    trunk/data/models/atlas/convertalltodds.sh

Modified: trunk/data/models/atlas/convertalltodds.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/convertalltodds.sh (original)
+++ trunk/data/models/atlas/convertalltodds.sh Sat May  3 18:07:49 2008
@@ -1,4 +1,6 @@
 #!/bin/bash
+
+TODDS=3D/home/hagish/dev/iris/data/models/atlas/todds.sh
 =

 strpos() {
     str=3D${1/$2*/}
@@ -29,14 +31,14 @@
 	#DITHER=3D$7
 =

 	#./todds.sh src dst COMPRESSION SAVETYPE FORMAT COLORTYPE DITHER
-	=

+
 	if [ $POS -eq $LEN ]
 	then
-		echo "ALPHA"
-		./todds.sh "$SRC" "$DST" 7 0 2 0 0
+		echo "NOALPHA $SRC to $DST"
+		$TODDS "$SRC" "$DST" 1 0 1 0 0
 	else
-		echo "NOALPHA"
-		./todds.sh "$SRC" "$DST" 1 0 1 0 0
+		echo "ALPHA $SRC to $DST"
+		$TODDS "$SRC" "$DST" 3 0 2 0 0
 	fi
 done
 =




From no-reply at zwischenwelt.org  Sat May  3 20:20:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 18:20:42 -0000
Subject: [Iris-commit] [IRIS] r2139 - /trunk/src/data_L.cpp
Message-ID: <20080503182046.9FE261C18731@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 20:20:38 2008
New Revision: 2139

Log:
patch from btbn : fixes some float-int-conversion warnings

Modified:
    trunk/src/data_L.cpp

Modified: trunk/src/data_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_L.cpp (original)
+++ trunk/src/data_L.cpp Sat May  3 20:20:38 2008
@@ -170,7 +170,7 @@
 		=

 		virtual const char* GetLuaTypeName () { return "iris.groundblockloader";=
 }
 };
-
+
 class cUniFontFileLoader_L : public cLuaBind<cUniFontFileLoader> { public:
 	// implementation of cLuaBind
 =

@@ -246,7 +246,7 @@
 		=

 		virtual const char* GetLuaTypeName () { return "iris.unifontloader"; }
 };
-
+
 class cRadarColorLoader_L : public cLuaBind<cRadarColorLoader> { public:
 	// implementation of cLuaBind
 =

@@ -945,7 +945,7 @@
 		=

 		/// number of parts the multi with id has
 		static int	CountMultiParts	(lua_State *L) { PROFILE =

-			int id =3D luaL_checknumber(L,2);
+			int id =3D static_cast<int>(luaL_checknumber(L,2));
 			cMultiLoader *loader =3D checkudata_alive(L);
 			lua_pushnumber(L,loader->CountMultiParts(id)); =

 			return 1; =

@@ -953,8 +953,8 @@
 		=

 		/// read out the part of the given multi, (blocknum,x,y,z,flags)
 		static int	GetMultiParts	(lua_State *L) { PROFILE =

-			int id =3D luaL_checknumber(L,2);
-			int part =3D luaL_checknumber(L,3);
+			int id =3D static_cast<int>(luaL_checknumber(L,2));
+			int part =3D static_cast<int>(luaL_checknumber(L,3));
 =

 			cMultiLoader *loader =3D checkudata_alive(L);
 			if(!loader)return 0;



From no-reply at zwischenwelt.org  Sat May  3 20:46:13 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 18:46:13 -0000
Subject: [Iris-commit] [IRIS] r2140 - /trunk/premake.lua
Message-ID: <20080503184613.3133F1C18731@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 20:46:11 2008
New Revision: 2140

Log:
removed paged_geometry from premake build system

Modified:
    trunk/premake.lua

Modified: trunk/premake.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/premake.lua (original)
+++ trunk/premake.lua Sat May  3 20:46:11 2008
@@ -37,7 +37,7 @@
 gLugreLibList =3D {
 	"cadune_tree",
 	"md5",
-	"paged_geometry",
+	--~ "paged_geometry",
 	"caelum",
 }
 =




From no-reply at zwischenwelt.org  Sat May  3 20:51:36 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 03 May 2008 18:51:36 -0000
Subject: [Iris-commit] [IRIS] r2141 - /trunk/CMakeLists.txt
Message-ID: <20080503185137.7BC141C18731@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May  3 20:51:34 2008
New Revision: 2141

Log:
removed paged_geometry from cmake build system

Modified:
    trunk/CMakeLists.txt

Modified: trunk/CMakeLists.txt
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/CMakeLists.txt (original)
+++ trunk/CMakeLists.txt Sat May  3 20:51:34 2008
@@ -13,7 +13,6 @@
 		"${iris2_SOURCE_DIR}/lugre/lib/caelum/include"
 		"${iris2_SOURCE_DIR}/lugre/lib/cadune_tree/include"
 		"${iris2_SOURCE_DIR}/lugre/lib/md5/include"
-		"${iris2_SOURCE_DIR}/lugre/lib/paged_geometry/include"
 	)
 	SET(LUA_LIBNAMES ${PKGlua_LIBRARIES})
 ELSE(USE_SYSTEM_LUA)
@@ -23,7 +22,6 @@
 		"${iris2_SOURCE_DIR}/lugre/lib/caelum/include"
 		"${iris2_SOURCE_DIR}/lugre/lib/cadune_tree/include"
 		"${iris2_SOURCE_DIR}/lugre/lib/md5/include"
-		"${iris2_SOURCE_DIR}/lugre/lib/paged_geometry/include"
 	)
 	SET(LUA_LIBNAMES lugrelua)
 ENDIF(USE_SYSTEM_LUA)
@@ -49,7 +47,6 @@
 	${PKGlua_LIBRARY_DIRS}
 	"${iris2_BINARY_DIR}/lugre/lib/lua-5.1.3"
 	"${iris2_BINARY_DIR}/lugre/lib/md5"
-	"${iris2_BINARY_DIR}/lugre/lib/paged_geometry"
 	"${iris2_BINARY_DIR}/lugre/lib/caelum"
 	"${iris2_BINARY_DIR}/lugre/lib/cadune_tree"
 	"${iris2_BINARY_DIR}/lugre"
@@ -82,7 +79,6 @@
 	lugre
 	lugrelib_cadune_tree
 	lugrelib_md5
-	lugrelib_paged_geometry
 	lugrelib_caelum
 	${LUA_LIBNAMES}
 )



From no-reply at zwischenwelt.org  Sun May  4 14:22:22 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 04 May 2008 12:22:22 -0000
Subject: [Iris-commit] [IRIS] r2142 - in /trunk: bin/iris2.exe
 data/profiles/gfx_high.lua data/profiles/gfx_ultrahigh.lua
Message-ID: <20080504122222.AB2431C18687@zwischenwelt.org>

Author: sience
Date: Sun May  4 14:22:21 2008
New Revision: 2142

Log:
-updated profile, because gEnableLowDetailTerrainFarSight doesn't work anym=
ore (white textures)
-new win32 binary

Modified:
    trunk/bin/iris2.exe
    trunk/data/profiles/gfx_high.lua
    trunk/data/profiles/gfx_ultrahigh.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/profiles/gfx_high.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_high.lua (original)
+++ trunk/data/profiles/gfx_high.lua Sun May  4 14:22:21 2008
@@ -8,3 +8,8 @@
 gMobileCastShadows =3D true
 =

 gSightRange	=3D 6
+
+-- update the map not every frame, decrease for free-flight-videos
+Renderer3D.gMapUpdateInterval =3D 30
+-- increase for free-flight-videos
+Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 1

Modified: trunk/data/profiles/gfx_ultrahigh.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_ultrahigh.lua (original)
+++ trunk/data/profiles/gfx_ultrahigh.lua Sun May  4 14:22:21 2008
@@ -10,8 +10,13 @@
 --gUseHumanSkinShader =3D true -- currently doesn't work
 =

 gSightRange	=3D 8
-gEnableLowDetailTerrainFarSight =3D true
-gEnableLowDetailTerrainFarSightRangeAdd =3D 2
+--gEnableLowDetailTerrainFarSight =3D true
+--gEnableLowDetailTerrainFarSightRangeAdd =3D 2
+
+-- update the map not every frame, decrease for free-flight-videos
+Renderer3D.gMapUpdateInterval =3D 20
+-- increase for free-flight-videos
+Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 2
 =

 gPreloadStaticMesh =3D true
 =




From no-reply at zwischenwelt.org  Mon May  5 03:29:58 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 05 May 2008 01:29:58 -0000
Subject: [Iris-commit] [IRIS] r2143 - in /trunk/lua: lib.3d.map.lua
	lib.walking3.lua net.walk.lua
Message-ID: <20080505012959.5473C1C1867E@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May  5 03:29:55 2008
New Revision: 2143

Log:
fixed spelling : bad:notority good:notoriEty,  added GetStaticsAtAbsPos for=
 scripting

Modified:
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.walking3.lua
    trunk/lua/net.walk.lua

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Mon May  5 03:29:55 2008
@@ -67,9 +67,14 @@
 end
 =

 -- returns tiletype,z        posx,posy in absolute tilecoords
-function GetGroundAtAbsPos (posx,posy)
-	local bx,by =3D math.floor(posx/8),math.floor(posy/8)
-	return gGroundBlockLoader:GetTile(bx,by,posx-8*bx,posy-8*by)
+function GetGroundAtAbsPos (xloc,yloc)
+	local bx,by =3D math.floor(xloc/8),math.floor(yloc/8)
+	return gGroundBlockLoader:GetTile(bx,by,xloc-8*bx,yloc-8*by)
+end
+
+-- returns an array,  {{artid=3D?,zloc=3D?,hue=3D?},{artid=3D?,zloc=3D?,hu=
e=3D?},...}
+function GetStaticsAtAbsPos (xloc,yloc)
+	return W3_GetStaticTiles(xloc,yloc) -- o.artid,o.zloc,o.hue   -- todo... =
other caching ?
 end
 =

 -- param is the area where normal mapblocks are loaded

Modified: trunk/lua/lib.walking3.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking3.lua (original)
+++ trunk/lua/lib.walking3.lua Mon May  5 03:29:55 2008
@@ -83,7 +83,7 @@
 		local n =3D xloc..","..yloc
 		local arr =3D b.statics[n]
 		if (not arr) then arr =3D {} b.statics[n] =3D arr end
-		table.insert(arr,{zloc=3DiZ,artid=3DiTileTypeID,bIsStatic=3Dtrue})
+		table.insert(arr,{zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,bIsStatic=3Dt=
rue})
 	end
 	=

 	-- ground

Modified: trunk/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.walk.lua (original)
+++ trunk/lua/net.walk.lua Mon May  5 03:29:55 2008
@@ -212,12 +212,12 @@
 =

 =

 -- Accept Movement Request and or Resync
--- TODO : change player notority <- check if this is needed
+-- TODO : change player notoriety <- check if this is needed
 function gPacketHandler.kPacket_Accept_Movement_Resync_Request()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local iSeqNum =3D input:PopNetUint8()
-	local player_status_or_notority =3D input:PopNetUint8()  -- correct use u=
nknown
+	local player_status_or_notoriety =3D input:PopNetUint8()  -- correct use =
unknown
 	=

 	local request =3D gWalkRequests[iSeqNum]
 	=




From no-reply at zwischenwelt.org  Mon May  5 19:17:28 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 05 May 2008 17:17:28 -0000
Subject: [Iris-commit] [IRIS] r2144 - /trunk/CMakeLists.txt
Message-ID: <20080505171730.47EEA153C00D@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May  5 19:17:19 2008
New Revision: 2144

Log:
btbn : cmake : fixed working dir for exe

Modified:
    trunk/CMakeLists.txt

Modified: trunk/CMakeLists.txt
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/CMakeLists.txt (original)
+++ trunk/CMakeLists.txt Mon May  5 19:17:19 2008
@@ -69,6 +69,7 @@
 =

 FILE(GLOB iris2_SOURCE_FILES RELATIVE "${iris2_SOURCE_DIR}" "${iris2_SOURC=
E_DIR}/src/*.cpp")
 ADD_EXECUTABLE(iris2 ${iris2_SOURCE_FILES})
+SET(EXECUTABLE_OUTPUT_PATH ${iris2_SOURCE_DIR}/bin)
 =

 TARGET_LINK_LIBRARIES(iris2
 	${PKGOGRE_LIBRARIES}



From no-reply at zwischenwelt.org  Mon May  5 19:25:41 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 05 May 2008 17:25:41 -0000
Subject: [Iris-commit] [IRIS] r2145 - in /trunk: cmake.sh
	lua/2d/lib.2d.config.lua
Message-ID: <20080505172542.236F11C18681@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May  5 19:25:41 2008
New Revision: 2145

Log:
adjusted cmake.sh, exe is now in bin dir,   killed obsolete 2d file

Removed:
    trunk/lua/2d/lib.2d.config.lua
Modified:
    trunk/cmake.sh

Modified: trunk/cmake.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/cmake.sh (original)
+++ trunk/cmake.sh Mon May  5 19:25:41 2008
@@ -4,4 +4,4 @@
 cmake ..
 make
 popd
-echo "to start : cd bin/ && ../build/iris2"
+echo "to start : cd bin/ && ./iris2"



From no-reply at zwischenwelt.org  Mon May  5 20:30:09 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 05 May 2008 18:30:09 -0000
Subject: [Iris-commit] [IRIS] r2146 - /trunk/plugins/hudenemylist.lua
Message-ID: <20080505183009.27261153C00D@zwischenwelt.org>

Author: sience
Date: Mon May  5 20:30:08 2008
New Revision: 2146

Log:
-patch from cougar for enemylist tooltips added

Modified:
    trunk/plugins/hudenemylist.lua

Modified: trunk/plugins/hudenemylist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/plugins/hudenemylist.lua (original)
+++ trunk/plugins/hudenemylist.lua Mon May  5 20:30:08 2008
@@ -92,6 +92,14 @@
 		end
 	end
 	=

+	-- Mod f=C3=BCr Tooltip Funktion	=

+	bar.widget_bg.tooltip_offx =3D kUOToolTippOffX -- Both defined at
+	bar.widget_bg.tooltip_offy =3D kUOToolTippOffY -- obj.container.lua
+	bar.widget_bg.stylesetname =3D gGuiDefaultStyleSet
+	bar.widget_bg.on_simple_tooltip =3D function (widget) =

+		return (body.name) or "?" =

+	end =

+	-- Ende Tooltip Mod
 =

 	local matname =3D GetPlainTextureMat("bar07.png",true)
 	local col_back =3D {0,0,0,1}



From no-reply at zwischenwelt.org  Mon May  5 22:36:02 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 05 May 2008 20:36:02 -0000
Subject: [Iris-commit] [IRIS] r2147 - /trunk/lua/2d/
Message-ID: <20080505210003.21CD8159C020@zwischenwelt.org>

Author: sience
Date: Mon May  5 22:36:02 2008
New Revision: 2147

Log:
-obsolete directory removed

Removed:
    trunk/lua/2d/



From no-reply at zwischenwelt.org  Thu May  8 13:12:29 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 08 May 2008 11:12:29 -0000
Subject: [Iris-commit] [IRIS] r2148 - /rawdata/sd_pd/houseparts.blend
Message-ID: <20080508111230.1A1CB153C00D@zwischenwelt.org>

Author: hagish
Date: Thu May  8 13:12:27 2008
New Revision: 2148

Log:
rawdata update

Modified:
    rawdata/sd_pd/houseparts.blend

Modified: rawdata/sd_pd/houseparts.blend
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Fri May  9 00:21:40 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 08 May 2008 22:21:40 -0000
Subject: [Iris-commit] [IRIS] r2149 - in /trunk: lua/lib.mainmenu.lua
 lua/lib.uoanim.lua lua/main.lua src/builder.cpp
Message-ID: <20080508222140.DD6B2153C00D@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  9 00:21:40 2008
New Revision: 2149

Log:
offline mode : can now set nonstandard map via config (doesn't work for -so)

Added:
    trunk/lua/lib.uoanim.lua
Modified:
    trunk/lua/lib.mainmenu.lua
    trunk/lua/main.lua
    trunk/src/builder.cpp

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Fri May  9 00:21:40 2008
@@ -159,6 +159,7 @@
 	LoadShardfilter(shard.gCustomArtFilterFilePath)
 =

 	if (shard.gStartGameWithoutNetwork =3D=3D true) then
+		for k,v in pairs(shard) do _G[k] =3D v end
 		StartOfflineMode()
 	elseif(shard.gStartInDebugMode =3D=3D true) then
 		StartDebugMenu()

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Fri May  9 00:21:40 2008
@@ -83,6 +83,7 @@
 dofile(libpath .. "lib.pathfind.lua")
 dofile(libpath .. "lib.plugin.lua")
 dofile(libpath .. "lib.uoutils.lua")
+dofile(libpath .. "lib.uoanim.lua")
 =

 dofile(libpath .. "gui/gui.main.lua")
 dofile(libpath .. "obj/obj.main.lua")

Modified: trunk/src/builder.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/builder.cpp (original)
+++ trunk/src/builder.cpp Fri May  9 00:21:40 2008
@@ -29,8 +29,6 @@
 	for (uint32* pOutEnd =3D &pOut[iWidth*iHeight];pOut<pOutEnd;++pIn,++pOut)=
 *pOut =3D Color16To32(*pIn);
 }
 =

-
-/// test : WriteMapImageToFile(896,512,"/anime2/ultimadownload/uo/map0.mul=
","/anime2/ultimadownload/uo/radarcol.mul","uomapbig.png",true);
 =

 /// file type of output determined by ending, ogre supports also .png, .jp=
g, .tga etc...
 /// example : w=3D896,h=3D512,map=3Dyouruodir/map0.mul,radar=3Dyouruodir/r=
adarcol.mul



From no-reply at zwischenwelt.org  Fri May  9 01:04:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 08 May 2008 23:04:51 -0000
Subject: [Iris-commit] [IRIS] r2150 - in /trunk: data/config.lua.dist
 data/models/models/textures_skipped_in_atlas.txt lua/gui/gui.healthbar.lua
 lua/gui/gui.paperdoll.lua lua/net/net.packethandlers.lua
Message-ID: <20080508230451.C8304153C00D@zwischenwelt.org>

Author: sience
Date: Fri May  9 01:04:51 2008
New Revision: 2150

Log:
-small discription changes
-pet rename packets added as comments
-paperdoll tooltips requests temp. disabled (i think it's wrong there)
-2 texatlas skips added

Modified:
    trunk/data/config.lua.dist
    trunk/data/models/models/textures_skipped_in_atlas.txt
    trunk/lua/gui/gui.healthbar.lua
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/net/net.packethandlers.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Fri May  9 01:04:51 2008
@@ -77,7 +77,7 @@
 -- sightrange is in blocks (8x8 tiles), larger values let you see further,=
 but will result in lower fps
 gSightRange	=3D 4
 =

--- 0 Trammel, 1 Felucca, 2 Ilshenar, 3 Malas, 4 Tokuno
+-- 0 Felucca, 1 Trammel, 2 Ilshenar, 3 Malas, 4 Tokuno
 gMapIndex =3D 0
 =

 gCompassZoomFactor =3D 1.5
@@ -358,7 +358,7 @@
 =

 gMaps =3D {}
 gMaps[0] =3D {
-	name =3D "Trammel",
+	name =3D "Felucca",
 	mapwidth =3D 896,
 	mapheight =3D 512,
 	skybox =3D "cleansky",
@@ -377,7 +377,7 @@
 --	map_diff_data	=3D "mapdif0.mul"
 }
 gMaps[1] =3D {
-	name =3D "Felucca",
+	name =3D "Trammel",
 	mapwidth =3D 896,
 	mapheight =3D 512,
 	skybox =3D "cleansky",

Modified: trunk/data/models/models/textures_skipped_in_atlas.txt
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/models/textures_skipped_in_atlas.txt (original)
+++ trunk/data/models/models/textures_skipped_in_atlas.txt Fri May  9 01:04=
:51 2008
@@ -2,3 +2,5 @@
 tex_fernleaf
 tex_cedars_firneedle
 tex_403
+tex_409
+tex_549

Modified: trunk/lua/gui/gui.healthbar.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.healthbar.lua (original)
+++ trunk/lua/gui/gui.healthbar.lua Fri May  9 01:04:51 2008
@@ -73,6 +73,7 @@
 	local mat =3D GetGumpMat(iGumpID,hueid)
 	local widget =3D dialog.controls["hitsbar"]
 	widget.gfx:SetMaterial(mat)
+
 	--[[ =

 	gui.gumpparser.lua:148:function GumpParser(Gumpdata, Clientsidemode)
 	{ gumppic 35 38 2054 hitsbar }
@@ -168,6 +169,27 @@
 	OpenHealthbar(mobile,iMouseX - 50,iMouseY - 30)
 end
 =

+--[[
+
+-- pet rename packet
+75 - Rename MOB
+Rename character
+0x23 bytes
+________________________________________
+byte	ID (75)
+dword	Serial
+char[30]	Name
+
+00:15:22.62 Server -> Client: 0x11 (SendStats), frequ: 1, len: 0x2B
+0000: 11 2B 00 00 00 81 3E 7A 61 68 75 00 00 00 00 00 ->.+....>zahu.....
+0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ->................
+0020: 00 00 00 00 00 00 19 00 19 01 00                ->...........
+
+23:43:15.62 Client -> Server: 0x75 (Rename), frequ: 1, len: 0x23
+0000: 75 00 00 81 3E 7A 61 68 75 00 66 65 6D 61 6C 65 ->u...>zahu.female
+0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ->................
+0020: 00 00 00                                        ->...
+]]--
 -- Open Healthbar Gump
 function OpenHealthbar (mobile,x,y)
 	if mobile =3D=3D nil then return end

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Fri May  9 01:04:51 2008
@@ -244,12 +244,13 @@
 		Client_SetBottomLine("")
 	end
 =

-	=

+
+	-- SiENcE: not needed as Ticket -> http://zwischenwelt.org/trac/iris/chan=
geset/2062
 	-- request tooltip if there is no
-	local tt =3D AosToolTip_GetText(widget.item.serial)
-	if not tt or tt =3D=3D "" then
-		Send_ToolTipRequest(widget.item.serial)
-	end
+--	local tt =3D AosToolTip_GetText(widget.item.serial)
+--	if not tt or tt =3D=3D "" then
+--		Send_ToolTipRequest(widget.item.serial)
+--	end
 =

 	if (gTooltipSupport) then
 		widget.tooltip_offx =3D kUOToolTippOffX

Modified: trunk/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.packethandlers.lua (original)
+++ trunk/lua/net/net.packethandlers.lua Fri May  9 01:04:51 2008
@@ -73,8 +73,8 @@
 	local objrevision_hash =3D input:PopNetUint32()
 	printdebug("net",sprintf("NET: AOSObjProp objserial=3D0x%08x objrevision_=
hash=3D0x%08x\n",objserial,objrevision_hash))
 	if (AosToolTip_GetHash(objserial) ~=3D objrevision_hash) then
-		--~ print("Send_ToolTipRequest",objserial,objrevision_hash)
 		AosToolTip_SetHash(objserial,objrevision_hash)
+		-- print("Send_ToolTipRequest",objserial,objrevision_hash)
 		Send_ToolTipRequest(objserial)
 	end
 end



From no-reply at zwischenwelt.org  Fri May  9 01:23:09 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 08 May 2008 23:23:09 -0000
Subject: [Iris-commit] [IRIS] r2151 - in /trunk: include/builder_common.h
 include/data.h lua/lib.uoanim.lua src/builder.cpp src/builder_anim.cpp
 src/builder_art.cpp src/builder_font.cpp src/builder_gump.cpp
 src/builder_map.cpp src/builder_tex.cpp
Message-ID: <20080508232310.7F3F6153C00D@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  9 01:23:09 2008
New Revision: 2151

Log:
added option to anim2d to disable 2^n size of the output, split builder.cpp=
 into multiple files

Added:
    trunk/include/builder_common.h
    trunk/src/builder_anim.cpp
    trunk/src/builder_art.cpp
    trunk/src/builder_font.cpp
    trunk/src/builder_gump.cpp
    trunk/src/builder_map.cpp
    trunk/src/builder_tex.cpp
Modified:
    trunk/include/data.h
    trunk/lua/lib.uoanim.lua
    trunk/src/builder.cpp

Modified: trunk/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data.h (original)
+++ trunk/include/data.h Fri May  9 01:23:09 2008
@@ -852,8 +852,9 @@
 			int GetCenterY () { return mCenterY; }
 			int GetFrames() { return mFrames; }
 			=

-			/// allocates and returns a buffer in the pBuffer param
-			template <class _T> bool Decode(short* &pBuffer, const int iFrame, _T& =
filter, short* ColorTable) { PROFILE
+			/// allocates and returns a 16-bit buffer in the pBuffer param, backgro=
und/transparency =3D 0
+			/// bTexSize : if true, output size will be 2^n
+			template <class _T> bool Decode(short* &pBuffer, const int iFrame, _T& =
filter, short* ColorTable,bool bTexSize=3Dtrue) { PROFILE
 				const char*	pMyRawData =3D mpRawData;
 				uint16* Palette =3D (uint16 *)pMyRawData;
 				pMyRawData +=3D 512;
@@ -878,13 +879,19 @@
 				mHeight =3D *(uint16 *)pMyRawData;
 				pMyRawData +=3D 2;
 				=

-				mTexWidth =3D 1;
-				while (mTexWidth < mWidth) {
-					mTexWidth =3D mTexWidth << 1;
-				}
-				mTexHeight =3D 1;
-				while (mTexHeight < mHeight) {
-					mTexHeight =3D mTexHeight << 1;
+				if (bTexSize) {
+					mTexWidth =3D 1;
+					while (mTexWidth < mWidth) {
+						mTexWidth =3D mTexWidth << 1;
+					}
+					mTexHeight =3D 1;
+					while (mTexHeight < mHeight) {
+						mTexHeight =3D mTexHeight << 1;
+					}
+				} else {
+					// for image output when used in a texatlas
+					mTexWidth =3D mWidth;
+					mTexHeight =3D mHeight;
 				}
 =

 				pBuffer =3D new short[mTexWidth*mTexHeight];

Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Fri May  9 01:23:09 2008
@@ -1,6 +1,25 @@
 -- 2d char anim graphics
 =

+kAnim_IdRangeLen_HighDetailed	=3D 200  -- mHighDetailed
+kAnim_IdRangeLen_LowDetailed	=3D 200  -- mLowDetailed
+
+-- iID is probably bodyid, and animid the animation ? ported from varans c=
ode
+function Anim_GetRealID (iID,iAnimID) =

+	if (iID < kAnim_IdRangeLen_HighDetailed) then return iAnimID + iID*110 end
+	if (iID < kAnim_IdRangeLen_HighDetailed + kAnim_IdRangeLen_LowDetailed) t=
hen
+		return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + (iID-kAnim_IdRangeL=
en_HighDetailed)*65
+	end
+	return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + kAnim_IdRangeLen_Low=
Detailed*65 + (iID-kAnim_IdRangeLen_HighDetailed-kAnim_IdRangeLen_LowDetail=
ed)*175
+end
+
+
+
+
 --[[
+
+TODO : rewrite  cAnim::Decode  :  to not use 2^n width	 and to extract mor=
e than one frame ?
+	Decode(short* &pBuffer, const int iFrame, _T& filter, short* ColorTable,b=
ool bTexSize=3Dtrue)  -- use bTexSize=3Dfalse here
+
 gAnimLoader   mHighDetailed   mLowDetailed  : 200,200,
 gAnimDataLoader
 =

@@ -22,21 +41,33 @@
 2.0K animinfo.mul
 186M anim.mul
 =

+	=

 =

-
-class cAnim : public cIndexedRawData     : commmon baseclass used by all, =
members : =

+class cAnim : public cIndexedRawData     : common baseclass used by all, m=
embers : =

 		eDataType	miDataType;
 		int			miID;
 		RawIndex*	mpRawIndex; ///< memory not owned by this class
 		char*		mpRawData; 	///< memory not owned by this class
+	int	GetWidth () { return mWidth; }
+	int	GetHeight () { return mHeight; }
+	int GetTexWidth () { return mTexWidth; }
+	int GetTexHeight () { return mTexHeight; }
+	int GetCenterX () { return mCenterX; }
+	int GetCenterY () { return mCenterY; }
+	int GetFrames() { return mFrames; }
+	... Decode ...
 	=

-		cAnimLoader (const int iHighDetailed, const int iLowDetailed) {};
-		RawAnimData*		cAnimDataLoader::GetAnimDataType		(const int iID);
+cAnimLoader (const int iHighDetailed, const int iLowDetailed) {};
+virtual	cAnim*	cAnimLoader::GetAnim	(const int iID)
+
+RawAnimData*		cAnimDataLoader::GetAnimDataType		(const int iID);
 		=

 builder.cpp :
-	void	GenerateAnimBitMask	(cAnimLoader& oAnimLoader, const int iID, const =
int iAnimID, const int iFrame, cBitMask& bitmask);
-	bool	GenerateAnimMaterial				(cAnimLoader& oAnimLoader		,const char* szMa=
tName,const int iID,const int iAnimID,const int iFrame, int& iWidth, int& i=
Height, int& iCenterX, int& iCenterY, int& iFrames, cHueLoader* pHueLoader,=
 short iHue);
+	void	GenerateAnimBitMask		(cAnimLoader& oAnimLoader, const int iID, const=
 int iAnimID, const int iFrame, cBitMask& bitmask);
+	bool	GenerateAnimMaterial	(cAnimLoader& oAnimLoader, const char* szMatNam=
e,const int iID,const int iAnimID,const int iFrame, int& iWidth, int& iHeig=
ht, int& iCenterX, int& iCenterY, int& iFrames, cHueLoader* pHueLoader, sho=
rt iHue);
 =

+		bitmask.SetDataFrom16BitImage(pImgRaw,anim->GetTexWidth(),anim->GetTexHe=
ight());
+		=

 	struct RawAnimData {
 		int8 miFrames[64];
 		char miUnknown;

Modified: trunk/src/builder.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/builder.cpp (original)
+++ trunk/src/builder.cpp Fri May  9 01:23:09 2008
@@ -1,85 +1,9 @@
-#include "lugre_prefix.h"
-#include "builder.h"
-#include "data.h"
-#include "lugre_ogrewrapper.h"
-#include "lugre_scripting.h"
-#include "lugre_bitmask.h"
-#include "lugre_robstring.h"
-#include <Ogre.h>
-#include <OgreFont.h>
-#include <OgreFontManager.h>
-#include <OgreBitwise.h>
-#include <map>
+#include "builder_common.h"
 =

 =

-using namespace Lugre;
-
-/// color format conversion from Ogre::PF_A1R5G5B5 to Ogre::PF_A8R8G8B8
-/// maps [0x00,0x1f] to [0x00,0xff] for rgb
-/// maps [0x00,0x01] to [0x00,0xff] for alpha
-inline uint32		Color16To32	(const uint16 x) {
-	return	((x & 0x8000)?0xff000000:0x00000000) | // alpha
-			(uint32(float(0xff)*float((x >> 10) & 0x1F)/float(0x1f)) << 16) | // r
-			(uint32(float(0xff)*float((x >>  5) & 0x1F)/float(0x1f)) << 8) | // g
-			(uint32(float(0xff)*float((x >>  0) & 0x1F)/float(0x1f)) << 0); // b
-	// using float instead of <<3 to map 0 to 0 and max to max
-}
 =

 void	ColorBuffer16To32	(const int iWidth,const int iHeight,const uint16* p=
In,uint32* pOut) {
 	for (uint32* pOutEnd =3D &pOut[iWidth*iHeight];pOut<pOutEnd;++pIn,++pOut)=
 *pOut =3D Color16To32(*pIn);
-}
-
-
-/// file type of output determined by ending, ogre supports also .png, .jp=
g, .tga etc...
-/// example : w=3D896,h=3D512,map=3Dyouruodir/map0.mul,radar=3Dyouruodir/r=
adarcol.mul
-void	WriteMapImageToFile		(cGroundBlockLoader& oGroundBlockLoader,cRadarCo=
lorLoader& radarColors,cStaticBlockLoader* pStaticBlockLoader,const char* s=
zOutPath,const bool bBig) { PROFILE
-	int iMapImgW =3D oGroundBlockLoader.miMapW * (bBig?8:1);
-	int iMapImgH =3D oGroundBlockLoader.miMapH * (bBig?8:1);
-	=

-	short	*pMapImgRaw16 =3D new short[iMapImgW*iMapImgH];
-	uint32	*pMapImgRaw32 =3D new uint32[iMapImgW*iMapImgH];
-	=

-	//short *pMapImgRaw =3D new short[iMapImgW*iMapImgH] ;
-	//delete [] pMapImgRaw;
-	=

-	GenerateMapImageRaw(0,0,iMapImgW,iMapImgH,oGroundBlockLoader,radarColors,=
pStaticBlockLoader,pMapImgRaw16,bBig);
-	ColorBuffer16To32(iMapImgW,iMapImgH,(uint16*)pMapImgRaw16,pMapImgRaw32);
-	Ogre::Image img; =

-	//Ogre::PixelFormat	eFormat =3D Ogre::PF_A1R5G5B5;
-	Ogre::PixelFormat	eFormat =3D Ogre::PF_A8R8G8B8;
-	=

-	/*Ogre::DataStreamPtr imgstream(new Ogre::MemoryDataStream(pMapImgRaw16,i=
MapImgW*iMapImgH*sizeof(short)));
-	img.loadRawData( imgstream, iMapImgW, iMapImgH, eFormat ); // long : PF_A=
8R8G8B8
-	=

-	// PF_A8R8G8B8
-	*/
-	assert((iMapImgW*iMapImgH*sizeof(uint32)) =3D=3D Ogre::PixelUtil::getMemo=
rySize(iMapImgW,iMapImgH,1,eFormat));
-	img.loadDynamicImage((Ogre::uchar*)pMapImgRaw32,iMapImgW,iMapImgH,1,eForm=
at);
-	img.save(szOutPath);
-
-	delete [] pMapImgRaw16;
-	delete [] pMapImgRaw32;
-}
-
-Ogre::TexturePtr	GenerateTexture_16Bit	(const char* szMatName,short* pBuf,=
const int iWidth,const int iHeight)
-{PROFILE
-	assert(pBuf && "buffer not set");
-		=

-	uint32	*pBuf32 =3D new uint32[iWidth*iHeight];
-	ColorBuffer16To32(iWidth,iHeight,(uint16*)pBuf,(uint32*)pBuf32);
-	=

-	Ogre::DataStreamPtr imgstream(new Ogre::MemoryDataStream(pBuf32,iWidth*iH=
eight*sizeof(uint32)));
-	//Ogre::Image img; =

-	//img.loadRawData( imgstream, iWidth, iHeight, Ogre::PF_A1R5G5B5 ); // lo=
ng : PF_A8R8G8B8
-	//Ogre::TextureManager::getSingleton().loadImage( szMatName ,Ogre::Resour=
ceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, img );
-
-	Ogre::TexturePtr t =3D Ogre::TextureManager::getSingleton().loadRawData(s=
zMatName,
-		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,
-		imgstream, iWidth, iHeight, Ogre::PF_A8R8G8B8 ); // long : PF_A8R8G8B8 s=
hort : PF_A1R5G5B5
-
-	delete [] pBuf32;
-
-	return t;
 }
 =

 bool	GenerateMaterial_16Bit	(const char* szMatName,short* pBuf,const int i=
Width,const int iHeight,const bool bPixelExact,const bool bHasAlpha,const b=
ool bEnableLighting,const bool bEnableDepthWrite,const bool bClamp) { PROFI=
LE
@@ -107,547 +31,12 @@
 	return true;
 }
 =

-
-bool	GenerateMapMaterial		(cGroundBlockLoader& oGroundBlockLoader,cRadarCo=
lorLoader& radarColors,const char* szMatName,const bool bBig) { PROFILE
-	int iMapImgMinW =3D oGroundBlockLoader.miMapW * (bBig?8:1);
-	int iMapImgMinH =3D oGroundBlockLoader.miMapH * (bBig?8:1);
-	int iMapImgW =3D 16; while (iMapImgW < iMapImgMinW) iMapImgW *=3D 2; // t=
exture must be potence of 2
-	int iMapImgH =3D 16; while (iMapImgH < iMapImgMinH) iMapImgH *=3D 2; // t=
exture must be potence of 2
-	//iMapImgW =3D iMapImgH =3D 512;
-	short *pMapImgRaw =3D new short[iMapImgW*iMapImgH] ;
-	=

-	//printf("GenerateMapMaterial %s : %dx%d\n",szMatName,iMapImgW,iMapImgH);
-	GenerateMapImageRaw(0,0,iMapImgW,iMapImgH,oGroundBlockLoader,radarColors,=
0,pMapImgRaw,bBig);
-	GenerateMaterial_16Bit(szMatName,pMapImgRaw,iMapImgW,iMapImgH,true,false,=
false,false);
-	=

-	delete [] pMapImgRaw;
-	return true;
-}
-
-
-
-void	GenerateArtBitMask	(cArtMapLoader& oArtMapLoader,	const int iID,cBitM=
ask& bitmask) { PROFILE
-	bitmask.Reset();
-	cArtMap *art =3D oArtMapLoader.GetArtMap(iID);
-	//printf("GenerateArtBitMask for id%d : %08x\n",iID,art);
-	if (art =3D=3D 0) return;
-	int iImgW =3D art->GetWidth();
-	int iImgH =3D art->GetHeight();
-	=

-	short *pImgRaw =3D new short[iImgW*iImgH];
-	memset(pImgRaw,0,2*iImgW*iImgH);
-	cSetHighBitFilter Filter;
-	art->Decode(pImgRaw,iImgW*2,Filter,0);
-	bitmask.SetDataFrom16BitImage(pImgRaw,iImgW,iImgH);
-
-	delete [] pImgRaw;
-}
-
-void	GenerateGumpBitMask	(cGumpLoader& oGumpLoader,		const int iID,cBitMas=
k& bitmask) { PROFILE
-	bitmask.Reset();
-	cGump *gump =3D oGumpLoader.GetGump(iID);
-	if (gump =3D=3D 0) return;
-	int iImgW =3D gump->GetWidth();
-	int iImgH =3D gump->GetHeight();
-	short *pImgRaw =3D new short[iImgW*iImgH] ;
-	memset(pImgRaw,0,2*iImgW*iImgH);
-	cSetHighBitFilter Filter;
-	gump->Decode(pImgRaw,iImgW*2,Filter,0);
-	bitmask.SetDataFrom16BitImage(pImgRaw,iImgW,iImgH);
-	delete [] pImgRaw;
-}
-
-void	GenerateAnimBitMask	(cAnimLoader& oAnimLoader, const int iID, const i=
nt iAnimID, const int iFrame, cBitMask& bitmask) { PROFILE
-	bitmask.Reset();
-
-	int RealID;
-	if (iID < oAnimLoader.mHighDetailed) {
-		RealID =3D iID*110;
-	} else if (iID < oAnimLoader.mHighDetailed + oAnimLoader.mLowDetailed) {
-		RealID =3D oAnimLoader.mHighDetailed*110 + (iID-oAnimLoader.mHighDetaile=
d)*65;
-	} else {
-		RealID =3D oAnimLoader.mHighDetailed*110 + oAnimLoader.mLowDetailed*65 +=
 (iID-oAnimLoader.mHighDetailed-oAnimLoader.mLowDetailed)*175;
-	}
-	RealID +=3D iAnimID;
-
-	cAnim *anim =3D oAnimLoader.GetAnim( RealID );
-
-	if (!anim) {
-		return;
-	}
-
-	cSetHighBitFilter Filter;
-	short *pImgRaw =3D 0;
-	if (anim->Decode( pImgRaw, iFrame, Filter, 0 )) {
-		bitmask.SetDataFrom16BitImage(pImgRaw,anim->GetTexWidth(),anim->GetTexHe=
ight());
-		delete [] pImgRaw;
-	}
-}
-
-/// generates a raw buffer containing the artmap image data, you need to d=
elete this buffer (delete []) by yourself
-/// this function will store the image size in iTexW and iTexH
-/// if bPixelExact is true, the result width and height will be increased =
to be a power of two, to avoid texture-scaling artifacts
-short *GenerateArtRaw(cArtMapLoader& oArtMapLoader, const int iID, const b=
ool bPixelExact, const bool bInvertY, const bool bInvertX, cHueLoader* pHue=
Loader,const short iHue, int &iTexW, int &iTexH) { PROFILE
-	cArtMap *art =3D oArtMapLoader.GetArtMap(iID);
-	if (art =3D=3D 0) return 0;
-	int iImgW =3D art->GetWidth();
-	int iImgH =3D art->GetHeight();
-	iTexW =3D iImgW;
-	iTexH =3D iImgH;
-	if (bPixelExact) {
-		iTexW =3D iTexH =3D 16;
-		while (iTexW < iImgW) iTexW <<=3D 1;
-		while (iTexH < iImgH) iTexH <<=3D 1;
-	}
-	=

-	short *pImgRaw =3D new short[iTexW*iTexH] ;
-	memset(pImgRaw,0,2*iTexW*iTexH);
-	if( iHue && pHueLoader ) {
-		cHueFilter Filter;
-		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
-		art->Decode(pImgRaw,iTexW*2,Filter,ColorTable);
-	} else {
-		cSetHighBitFilter Filter;
-		art->Decode(pImgRaw,iTexW*2,Filter,0);
-	}
-	=

-	if (bInvertY) { // invert y, TODO : move this to decode
-		short swap;
-		for (int y=3D0;y<iImgH/2;++y) {
-			for (int x=3D0;x<iImgW;++x) {
-				swap =3D pImgRaw[y*iTexW+x];
-				pImgRaw[y*iTexW+x] =3D pImgRaw[(iImgH-1-y)*iTexW+x];
-				pImgRaw[(iImgH-1-y)*iTexW+x] =3D swap;
-			}
-		}
-	}
-	if (bInvertX) { =

-		// todo ..
-	}
-	=

-	return pImgRaw;
-}
-
-/// WARNING ! bPixelExact changes size to 2^n where n >=3D 4
-bool	GenerateArtMaterial	(cArtMapLoader& oArtMapLoader,const char* szMatNa=
me,const int iID,const bool bPixelExact,const bool bInvertY,const bool bInv=
ertX,const bool bHasAlpha,const bool bEnableLighting,const bool bEnableDept=
hWrite,cHueLoader* pHueLoader,const short iHue) { PROFILE
-	int iTexW, iTexH;
-	=

-	short *pImgRaw =3D GenerateArtRaw(oArtMapLoader, iID,bPixelExact, bInvert=
Y, bInvertX, pHueLoader, iHue, iTexW, iTexH);
-
-	if(pImgRaw =3D=3D 0){
-		printf("ERROR could not create art raw id=3D%i\n",iID);
-		return false;
-	}
-	=

-	GenerateMaterial_16Bit(szMatName,pImgRaw,iTexW,iTexH,bPixelExact,bHasAlph=
a,bEnableLighting,bEnableDepthWrite);
-	=

-	delete [] pImgRaw;
-	=

-	return true;
-}
-
-// TODO : dublicate : WriteArtMapToImage
-bool	GenerateArtImage(Ogre::Image &image, cArtMapLoader& oArtMapLoader,con=
st int iID,const bool bPixelExact,const bool bInvertY,const bool bInvertX,c=
HueLoader* pHueLoader,const short iHue) { PROFILE
-	int iTexW, iTexH;
-	=

-	short *pImgRaw =3D GenerateArtRaw(oArtMapLoader, iID,bPixelExact, bInvert=
Y, bInvertX, pHueLoader, iHue, iTexW, iTexH);
-
-	if(pImgRaw =3D=3D 0){
-		printf("ERROR could not create art raw id=3D%i\n",iID);
-		return false;
-	}
-
-	uint32	*pBuf32 =3D new uint32[iTexW*iTexH];
-	ColorBuffer16To32(iTexW,iTexH,(uint16*)pImgRaw,(uint32*)pBuf32);
-	=

-	Ogre::DataStreamPtr imgstream(new Ogre::MemoryDataStream(pBuf32,iTexW*iTe=
xH*sizeof(uint32)));
-	//Ogre::Image img; =

-	//img.loadRawData( imgstream, iWidth, iHeight, Ogre::PF_A1R5G5B5 ); // lo=
ng : PF_A8R8G8B8
-	//Ogre::TextureManager::getSingleton().loadImage( szMatName ,Ogre::Resour=
ceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, img );
-
-	image.loadRawData(imgstream, iTexW, iTexH, Ogre::PF_A8R8G8B8 ); // long :=
 PF_A8R8G8B8 short : PF_A1R5G5B5
-	=

-	//printf("GenerateArtImage: w=3D%i h=3D%i\n",iTexW,iTexH);
-	=

-	delete [] pBuf32;
-	delete [] pImgRaw;
-	=

-	return true;
-}
-
-
-/// WARNING ! changes size to 2^n where n >=3D 4
-bool	GenerateGumpMaterial	(cGumpLoader& oGumpLoader,const char* szMatName,=
const int iID,const bool bHasAlpha,cHueLoader* pHueLoader,short iHue) { PRO=
FILE
-	cGump *gump =3D oGumpLoader.GetGump(iID);
-	if (gump =3D=3D 0) return false;
-	int iImgW =3D gump->GetWidth();
-	int iImgH =3D gump->GetHeight();
-	int iTexW =3D iImgW;
-	int iTexH =3D iImgH;
-	if (1) { // gumps are always pixel-exact
-		iTexW =3D iTexH =3D 16;
-		while (iTexW < iImgW) iTexW <<=3D 1;
-		while (iTexH < iImgH) iTexH <<=3D 1;
-	}
-	short *pImgRaw =3D new short[iTexW*iTexH] ;
-	memset(pImgRaw,0,2*iTexW*iTexH);
-	if( iHue && pHueLoader ) {
-		bool PartialHue =3D (iHue & 0x8000);
-		iHue =3D iHue & 0x7FFF;
-		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
-
-		if (PartialHue) {
-			cPartialHueFilter Filter;
-			gump->Decode(pImgRaw,iTexW*2,Filter,ColorTable);
-		} else {
-			cHueFilter Filter;
-			gump->Decode(pImgRaw,iTexW*2,Filter,ColorTable);
-		}
-	} else {
-		cSetHighBitFilter Filter;
-		gump->Decode(pImgRaw,iTexW*2,Filter,0);
-	}
-	=

-	// make gumps with non 2^n size a bit tilable (not completely correct, bu=
t its good a start)
-	if (1) {
-		int x,y;
-		for (y=3D0;y<iTexH;++y)
-		for (x=3D0;x<iTexW;++x) {
-			if (x >=3D iImgW || y >=3D iImgH) =

-				pImgRaw[y*iTexW+x] =3D pImgRaw[(y%iImgH)*iTexW+(x%iImgW)];
-		}
-	}
-	bool bPixelExact =3D true;
-	bool bEnableLighting =3D false;
-	bool bEnableDepthWrite =3D false;
-	bool bClamp =3D false;
-	GenerateMaterial_16Bit(szMatName,pImgRaw,iTexW,iTexH,bPixelExact,bHasAlph=
a,bEnableLighting,bEnableDepthWrite,bClamp);
-	=

-	delete [] pImgRaw;
-	=

-	return true;
-}
-
-bool	WriteArtMapToFile	(cArtMapLoader& oArtMapLoader,const char* szFilePat=
h,const int iID,cHueLoader* pHueLoader,const short iHue) {
-	Ogre::Image img;
-	if (!WriteArtMapToImage(img,oArtMapLoader,iID,pHueLoader,iHue)) return fa=
lse;
-	img.save(szFilePath);
-	return true;
-}
-
-// TODO : dublicate : GenerateArtImage
-bool	WriteArtMapToImage					(Ogre::Image& pDest,cArtMapLoader& oArtMapLoad=
er,const int iID,cHueLoader* pHueLoader,const short iHue) {
-	int iImgW, iImgH;
-	bool bPixelExact =3D false; // setting this to true would lead to image s=
ize being increased until a multiple of 2 is reached
-	bool bInvertX =3D false;
-	bool bInvertY =3D false;
-	=

-	short *pImgRaw =3D GenerateArtRaw(oArtMapLoader, iID,bPixelExact, bInvert=
Y, bInvertX, pHueLoader, iHue, iImgW, iImgH);
-
-	if (pImgRaw =3D=3D 0){
-		printf("ERROR in WriteArtMapToImage, could not create art raw id=3D%i\n"=
,iID);
-		return false;
-	}
-	=

-	// convert from 16 to 32 bits
-	uint32	*pBuf32 =3D new uint32[iImgW*iImgH];
-	ColorBuffer16To32(iImgW,iImgH,(uint16*)pImgRaw,(uint32*)pBuf32);
-	delete [] pImgRaw;
-	=

-	pDest.loadDynamicImage((Ogre::uchar*)pBuf32,iImgW,iImgH,1,Ogre::PF_A8R8G8=
B8,true); // autoDelete pBuf32
-	return true;
-}
-
-bool	WriteTexMapToFile	(cTexMapLoader& oTexMapLoader,const char* szFilePat=
h,const int iID,cHueLoader* pHueLoader,const short iHue) { PROFILE
-	//~ printf("WriteTexMapToFile path=3D%s id=3D%d hueloader=3D0x%x hue=3D%d=
\n",szFilePath,iID,(int)pHueLoader,iHue);
-	cTexMap *texmap =3D oTexMapLoader.GetTexMap(iID);
-	if (texmap =3D=3D 0) return false;
-	int iImgW =3D texmap->GetWidth();
-	int iImgH =3D texmap->GetHeight();
-	//~ printf("WriteTexMapToFile w=3D%d h=3D%d texmap=3D0x%x\n",iImgW,iImgH,=
texmap);
-	//~ printf("WriteTexMapToFile mpRawData=3D0x%x mpRawIndex=3D0x%x\n ",(int=
)texmap->mpRawData,(int)texmap->mpRawIndex);
-	//~ if (texmap->mpRawIndex) {
-		//~ RawIndex* p =3D texmap->mpRawIndex;	=

-		//~ printf("WriteTexMapToFile miOffset=3D0x%x miLength=3D0x%x miExtra=3D=
0x%x\n ",(int)p->miOffset,(int)p->miLength,(int)p->miExtra);
-	//~ }
-	=

-	short *pImgRaw =3D new short[iImgW*iImgH] ;
-	memset(pImgRaw,0,2*iImgW*iImgH); // not really needed here, as the format=
 does not allow empty pixels, but safe is safe
-	if( iHue && pHueLoader ) {
-		cHueFilter Filter;
-		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
-		texmap->Decode(pImgRaw,Filter,ColorTable);
-	} else {
-		cSetHighBitFilter Filter;
-		texmap->Decode(pImgRaw,Filter,0);
-	}
-
-	uint32	*pBuf32 =3D new uint32[iImgW*iImgH];
-	ColorBuffer16To32(iImgW,iImgH,(uint16*)pImgRaw,(uint32*)pBuf32);
-	Ogre::DataStreamPtr imgstream(new Ogre::MemoryDataStream(pBuf32,iImgW*iIm=
gH*sizeof(uint32)));
-	=

-	Ogre::Image image;
-	image.loadRawData(imgstream, iImgW, iImgH, Ogre::PF_A8R8G8B8 ); // long :=
 PF_A8R8G8B8 short : PF_A1R5G5B5
-	image.save(szFilePath);
-	=

-	delete [] pBuf32;
-	delete [] pImgRaw;
-	=

-	return true;
-}
-
-bool	GenerateTexMapMaterial	(cTexMapLoader& oTexMapLoader,const char* szMa=
tName,const int iID,const bool bHasAlpha,const bool bEnableLighting,const b=
ool bEnableDepthWrite,const bool bPixelExact,cHueLoader* pHueLoader,const s=
hort iHue) { PROFILE
-	cTexMap *texmap =3D oTexMapLoader.GetTexMap(iID);
-	if (texmap =3D=3D 0) return false;
-	int iImgW =3D texmap->GetWidth();
-	int iImgH =3D texmap->GetHeight();
-
-	short *pImgRaw =3D new short[iImgW*iImgH] ;
-	memset(pImgRaw,0,2*iImgW*iImgH); // not really needed here, as the format=
 does not allow empty pixels, but safe is safe
-	if( iHue && pHueLoader ) {
-		cHueFilter Filter;
-		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
-		texmap->Decode(pImgRaw,Filter,ColorTable);
-	} else {
-		cSetHighBitFilter Filter;
-		texmap->Decode(pImgRaw,Filter,0);
-	}
-
-	GenerateMaterial_16Bit(szMatName,pImgRaw,iImgW,iImgH,bPixelExact,bHasAlph=
a,bEnableLighting,bEnableDepthWrite);
-	=

-	delete [] pImgRaw;
-	=

-	return true;
-}
-
-bool	GenerateAnimMaterial	(cAnimLoader& oAnimLoader,const char* szMatName,=
const int iID,const int iAnimID,const int iFrame, int& iWidth, int& iHeight=
, int& iCenterX, int& iCenterY, int& iFrames, cHueLoader* pHueLoader, short=
 iHue) { PROFILE
-	int RealID;
-	if (iID < oAnimLoader.mHighDetailed) {
-		RealID =3D iID*110;
-	} else if (iID < oAnimLoader.mHighDetailed + oAnimLoader.mLowDetailed) {
-		RealID =3D oAnimLoader.mHighDetailed*110 + (iID-oAnimLoader.mHighDetaile=
d)*65;
-	} else {
-		RealID =3D oAnimLoader.mHighDetailed*110 + oAnimLoader.mLowDetailed*65 +=
 (iID-oAnimLoader.mHighDetailed-oAnimLoader.mLowDetailed)*175;
-	}
-
-	RealID +=3D iAnimID;
-
-	cAnim *anim =3D oAnimLoader.GetAnim( RealID );
-
-	if (!anim) {
-		return false;
-	}
-
-	short *pImgRaw =3D 0;
-	if( iHue && pHueLoader ) {
-		bool PartialHue =3D (iHue & 0x8000);
-		iHue =3D iHue & 0x7FFF;
-		=

-		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
-
-		if (PartialHue) {
-			cPartialHueFilter Filter;
-			if (!anim->Decode( pImgRaw, iFrame, Filter, ColorTable )) {
-				return false;
-			}
-		} else {
-			cHueFilter Filter;
-			if (!anim->Decode( pImgRaw, iFrame, Filter, ColorTable )) {
-				return false;
-			}
-		}
-	} else {
-		cSetHighBitFilter Filter;
-		if (!anim->Decode( pImgRaw, iFrame, Filter, 0 )) {
-			return false;
-		}
-	}
-
-	iWidth =3D anim->GetWidth();
-	iHeight =3D anim->GetHeight();
-	iCenterX =3D anim->GetCenterX();
-	iCenterY =3D anim->GetCenterY();
-	iFrames =3D anim->GetFrames();
-
-	bool bHasAlpha =3D true;
-	bool bPixelExact =3D true;
-	bool bEnableLighting =3D false;
-	bool bEnableDepthWrite =3D false;
-	bool bClamp =3D false;
-	GenerateMaterial_16Bit(szMatName,pImgRaw,anim->GetTexWidth(),anim->GetTex=
Height(),bPixelExact,bHasAlpha,bEnableLighting,bEnableDepthWrite,bClamp);
-	=

-	delete [] pImgRaw;
-
-	return true;
-}
-
-/// render radar map for dbx,dby blocks starting at bx0,by0
-bool	GenerateRadarImage		(Ogre::Image& pDest,const int bx0,const int by0,c=
onst int dbx,const int dby,cGroundBlockLoader& oGroundBlockLoader, cStaticB=
lockLoader& oStaticBlockLoader, cRadarColorLoader& oRadarColorLoader) {
-	int iImgW =3D dbx*8;
-	int iImgH =3D dby*8;
-	if (iImgW <=3D 0 || iImgH <=3D 0) return false;
-	=

-	// prepare vars
-	uint32* pBuf =3D new uint32[iImgW*iImgH];
-	int heightmap[8*8]; // like a z-buffer, for statics
-	=

-	// iterate over blocks
-	for (int ay=3D0;ay<dby;++ay)
-	for (int ax=3D0;ax<dbx;++ax) {
-		// first step, ground
-		cGroundBlock* pGroundBlock =3D oGroundBlockLoader.GetGroundBlock(bx0+ax,=
by0+ay);
-		if (pGroundBlock) {
-			for (int ty=3D0;ty<8;++ty)
-			for (int tx=3D0;tx<8;++tx) {
-				heightmap[ty*8+tx] =3D pGroundBlock->mpRawGroundBlock->mTiles[ty][tx].=
miZ;
-				pBuf[(ay*8+ty)*iImgW+ax*8+tx] =3D Color16To32( oRadarColorLoader.GetCo=
l16( pGroundBlock->mpRawGroundBlock->mTiles[ty][tx].miTileType ) );
-			}
-		} else {
-			for (int ty=3D0;ty<8;++ty)
-			for (int tx=3D0;tx<8;++tx) {
-				heightmap[ty*8+tx] =3D -128;
-				pBuf[(ay*8+ty)*iImgW+ax*8+tx] =3D 0;
-			}
-		}
-		=

-		// second step, statics
-		cStaticBlock* pStaticBlock =3D oStaticBlockLoader.GetStaticBlock(bx0+ax,=
by0+ay);
-		if (pStaticBlock) {
-			for( int s=3D0; s<pStaticBlock->Count(); s++ ) {
-				int tx =3D pStaticBlock->mpRawStaticList[s].miX;
-				int ty =3D pStaticBlock->mpRawStaticList[s].miY;
-				int tz =3D pStaticBlock->mpRawStaticList[s].miZ;
-				int iTileType =3D pStaticBlock->mpRawStaticList[s].miTileID;
-				//~ int iHue =3D pStaticBlock->mpRawStaticList[s].miHue; // TODO ? mod=
ify radar-color using hueloader ? is this needed ?
-				if (heightmap[ty*8+tx] <=3D tz) {
-					heightmap[ty*8+tx] =3D  tz;
-					pBuf[(ay*8+ty)*iImgW+ax*8+tx] =3D Color16To32( oRadarColorLoader.GetC=
ol16( 0x4000 + iTileType ) );
-				}
-			}
-		}
-	}
-	pDest.loadDynamicImage((Ogre::uchar*)pBuf,iImgW,iImgH,1,Ogre::PF_A8R8G8B8=
,true); // autoDelete pBuf32
-	return true;
-}
-
-Ogre::TexturePtr	GenerateRadarImageRaw (int iPosX, int iPosY, cGroundBlock=
Loader& oGroundBlockLoader, cStaticBlockLoader& oStaticBlockLoader, cRadarC=
olorLoader& oRadarColorLoader, const char* szMatName) { PROFILE
-	short* pRawBuffer =3D new short[64*64];
-	memset( pRawBuffer, 0, 64*64*2 );
-
-	signed char heightmap[8*8];
-	for( int by=3D0; by < 8; by++ ) {
-		for( int bx=3D0; bx < 8; bx++ ) {
-			cGroundBlock* pGroundBlock =3D oGroundBlockLoader.GetGroundBlock(iPosX/=
8 + bx, iPosY/8 + by);
-			if (pGroundBlock) {
-				for( int y=3D0; y < 8; y++ ) {
-					for( int x=3D0; x < 8; x++ ) {
-						heightmap[y*8+x] =3D pGroundBlock->mpRawGroundBlock->mTiles[y][x].mi=
Z;
-						pRawBuffer[(by*8+y)*64+bx*8+x] =3D oRadarColorLoader.GetCol16( pGrou=
ndBlock->mpRawGroundBlock->mTiles[y][x].miTileType );
-					}
-				}
-			} else {
-				for( int y=3D0; y < 8; y++ ) {
-					for( int x=3D0; x < 8; x++ ) {
-						heightmap[y*8+x] =3D -128;
-					}
-				}
-			}
-
-			cStaticBlock* pStaticBlock =3D oStaticBlockLoader.GetStaticBlock(iPosX/=
8 + bx, iPosY/8 + by);
-			if (pStaticBlock) {
-				for( int s=3D0; s<pStaticBlock->Count(); s++ ) {
-					char pBx =3D pStaticBlock->mpRawStaticList[s].miX;
-					char pBy =3D pStaticBlock->mpRawStaticList[s].miY;
-					signed char pBz =3D pStaticBlock->mpRawStaticList[s].miZ;
-					short pBid =3D pStaticBlock->mpRawStaticList[s].miTileID;
-					short pBHue =3D pStaticBlock->mpRawStaticList[s].miHue;
-					if( pStaticBlock->mpRawStaticList[s].miZ >=3D heightmap[pBy*8+pBx] ) {
-						heightmap[pBy*8+pBx] =3D pBz;
-						pRawBuffer[(by*8+pBy)*64+bx*8+pBx] =3D oRadarColorLoader.GetCol16( 0=
x4000 + pBid );
-					}
-				}
-			}
-		}
-	}
-
-	bool bHasAlpha =3D false;
-	bool bPixelExact =3D true;
-	bool bEnableLighting =3D false;
-	bool bEnableDepthWrite =3D false;
-	bool bClamp =3D false;
-	Ogre::TexturePtr TexPointer =3D GenerateTexture_16Bit( szMatName, pRawBuf=
fer, 64, 64 );
-
-	delete [] pRawBuffer;
-
-	return TexPointer;
-}
-
-/// TODO : warning : area outside map (or where oGroundBlockLoader.Get ret=
urns 0) is not changed
-/// writes iImgW * iImgH SHORTs to pBuffer, in the format Ogre::PF_A1R5G5B=
5 (16 bit)
-/// if (bBig) { 1 pixel for every tile (8x8 per mapblock) } else { 1 pixel=
 for every mapblock : left-top-tile [0][0] }
-/// iLeftTileNum,iTopTileNum is where the left,top of the image will be on=
 the world map, in tile coords
-/// tilecoords =3D map-block-coords * 8
-void	GenerateMapImageRaw	(int iLeftTileNum,int iTopTileNum,int iImgW,int i=
ImgH,cGroundBlockLoader& oGroundBlockLoader,cRadarColorLoader& radarCols,cS=
taticBlockLoader* pStaticBlockLoader,short* pRawBuffer,bool bBig) { PROFILE
-	if (!pRawBuffer) return;
-	if (bBig) {
-		int i,mx,my,tx,ty,imgx,imgy;
-		cGroundBlock* pGroundBlock;
-		// +7 : round upwards
-		for (mx=3DiLeftTileNum/8;mx<(iLeftTileNum+iImgW+7)/8;++mx)
-		for (my=3D iTopTileNum/8;my<( iTopTileNum+iImgH+7)/8;++my) {
-			pGroundBlock =3D oGroundBlockLoader.GetGroundBlock(mx,my);
-			imgy =3D my*8-iTopTileNum;
-			imgx =3D mx*8-iLeftTileNum;
-			if (imgy < 0 || imgy >=3D iImgH) continue;
-			if (imgx < 0 || imgx >=3D iImgW) continue;
-			for (ty=3D0;ty<8;++ty) for (tx=3D0;tx<8;++tx) {
-				pRawBuffer[iImgW*imgy+imgx] =3D pGroundBlock ? radarCols.GetCol16(pGro=
undBlock->mpRawGroundBlock->mTiles[ty][tx].miTileType) : 0;
-			}
-			// TODO : broken.... (only one pixel per block ? should be 8)
-			// TODO : statics
-		}
-	} else { // not big =

-		int i,mx,my,tx,ty;
-		int iLeftBlockNum =3D iLeftTileNum/8;
-		int  iTopBlockNum =3D  iTopTileNum/8;
-		short	block[8*8];
-		uint16	avgcol;
-		cGroundBlock* pGroundBlock;
-		for (mx=3DiLeftBlockNum;mx<iLeftBlockNum+iImgW;++mx)
-		for (my=3D iTopBlockNum;my< iTopBlockNum+iImgH;++my) {
-			pGroundBlock =3D oGroundBlockLoader.GetGroundBlock(mx,my);
-			for (ty=3D0;ty<8;++ty) for (tx=3D0;tx<8;++tx)
-				block[tx+8*ty] =3D pGroundBlock ? radarCols.GetCol16(pGroundBlock->mpR=
awGroundBlock->mTiles[ty][tx].miTileType) : 0;
-			cStaticBlock* pStaticBlock =3D pStaticBlockLoader ? pStaticBlockLoader-=
>GetStaticBlock(mx,my) : 0;
-			if (pStaticBlock) for (i=3D0;i<pStaticBlock->Count();++i) {
-				RawStatic& s =3D pStaticBlock->mpRawStaticList[i]; // .miTileID .miX .=
miY .miZ .miHue);
-				short col =3D radarCols.GetCol16(s.miTileID + 0x4000);
-				if (col !=3D 0 && s.miX >=3D 0 && s.miY >=3D 0 && s.miX < 8 && s.miY <=
 8) block[s.miX+8*s.miY] =3D col;
-			}
-			float r =3D 0;
-			float g =3D 0;
-			float b =3D 0;
-			for (ty=3D0;ty<8;++ty) for (tx=3D0;tx<8;++tx) {
-				uint16 x =3D *(uint16*)&block[tx+8*ty];
-				r +=3D float((x >> 10) & 0x1F)/float(0x1f);
-				g +=3D float((x >>  5) & 0x1F)/float(0x1f);
-				b +=3D float((x >>  0) & 0x1F)/float(0x1f);
-			}
-			avgcol =3D	(uint16(float(0x1f)*(r/64.0)) << 10) | // r
-						(uint16(float(0x1f)*(g/64.0)) <<  5) | // g
-						(uint16(float(0x1f)*(b/64.0)) <<  0);  // b
-			pRawBuffer[iImgW*(my-iTopBlockNum)+(mx-iLeftBlockNum)] =3D *(short*)&av=
gcol;
-		}
-	}
-}
-
-/*
 Ogre::TexturePtr	GenerateTexture_16Bit	(const char* szMatName,short* pBuf,=
const int iWidth,const int iHeight)
 {PROFILE
 	assert(pBuf && "buffer not set");
 		=

 	uint32	*pBuf32 =3D new uint32[iWidth*iHeight];
-	ColorBuffer16To32(iWidth,iHeight,pBuf,pBuf32);
+	ColorBuffer16To32(iWidth,iHeight,(uint16*)pBuf,(uint32*)pBuf32);
 	=

 	Ogre::DataStreamPtr imgstream(new Ogre::MemoryDataStream(pBuf32,iWidth*iH=
eight*sizeof(uint32)));
 	//Ogre::Image img; =

@@ -661,351 +50,4 @@
 	delete [] pBuf32;
 =

 	return t;
-}*/
-
-Ogre::FontPtr	GenerateUniFont	(cUniFontFileLoader& oUniFontFileLoader, con=
st char *szName, =

-	const int code_first, const int code_last,
-	const float letter_r, const float letter_g, const float letter_b, const f=
loat letter_a,
-	const float border_r, const float border_g, const float border_b, const f=
loat border_a,
-	const float free_r, const float free_g, const float free_b, const float f=
ree_a){ PROFILE
-
-	int first =3D code_first,last =3D code_last;
-
-	// borders
-	if(first < 0)first =3D 0;
-	if(last >=3D oUniFontFileLoader.GetLetterNumbers())last =3D oUniFontFileL=
oader.GetLetterNumbers() - 1;
-	if(last < first)last =3D first;
-	=

-	// number of letters to load
-	unsigned int letters =3D last - first + 1;
-
-	std::map<const char *,Ogre::Rectangle> lCache;
-
-	// max letter size (without border space)
-	unsigned int maxw =3D oUniFontFileLoader.GetMaxWidth();
-	unsigned int maxh =3D oUniFontFileLoader.GetMaxHeight();
-	// size + border (fontborder and freepixel)
-	// 6 + 2
-	unsigned int letw =3D maxw + 4;
-	unsigned int leth =3D maxh + 4;
-	// offset to the start of maxletter size
-	unsigned int letx =3D 4;
-	unsigned int lety =3D 4;
-	// size of the texture that stores all letter images (2^n)
-	unsigned int texw =3D 1;
-	unsigned int texh =3D 1;
-	// OBSOLETE 16*16 is enough space to store all 255 letters
-	//int size =3D sqrt(float(oUniFontFileLoader.GetLetterNumbers())*oUniFont=
FileLoader.GetLetterUsage());
-	int size =3D (int)((float)mymax(letw,leth) * sqrt(float(letters)));
-	texw =3D Ogre::Bitwise::firstPO2From(size);
-	texh =3D Ogre::Bitwise::firstPO2From(size);
-	=

-	// imagebuffer
-	unsigned int buffersize =3D Ogre::PixelUtil::getMemorySize(texw,texh,1,Og=
re::PF_A4R4G4B4);
-	char *buffer =3D new char[buffersize];
-	// zero the buffer
-	memset(buffer,0,buffersize);
-	=

-	// position of the current letter in the texture in pixels
-	unsigned int posx =3D 0;
-	unsigned int posy =3D 0;
-	=

-	// TODO create manual loader for this resource
-	Ogre::FontPtr font =3D Ogre::FontManager::getSingleton().create(szName,Og=
re::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-	=

-	font->setType(Ogre::FT_IMAGE);
-	=

-	unsigned short *p =3D (unsigned short *)buffer;
-	=

-	// paint all letters in the texture
-	const RawUniFontFileLetterHeader *hd;
-	const char *data;
-
-	for(int i =3D first;i <=3D last; ++i){
-		//if(i % 10 =3D=3D 0 || i =3D=3D first || i =3D=3D last)printf("[%05.1f%=
%] code=3D%d posx=3D%d posy=3D%d texw=3D%d texh=3D%d\n",100.0*float(i - cod=
e_first)/float(letters),i,posx,posy,texw,texh);
-
-		// get letter data
-		hd =3D oUniFontFileLoader.GetLetterHeader(i);
-		data =3D oUniFontFileLoader.GetLetterData(i);
-
-		//printf("check letter %i at %x\n",i,data);
-
-		// skip if invalid offset
-		if(data =3D=3D 0)continue;
-
-		// letter already rendered?
-		if(lCache.find(data) =3D=3D lCache.end()){
-			// decode letter and store in image
-
-			// iterator over all pixels (letw,leth)
-			for(int x =3D 0;x < letw; ++x)
-			for(int y =3D 0;y < leth; ++y){
-				// calculate letter space to letter data buffer space
-				int dx =3D x - letx - hd->miXOffset;
-				int dy =3D y - lety - hd->miYOffset;
-				// calc position of the pixel in the image buffer
-				int ix =3D posx + x;
-				int iy =3D posy + y;
-				// read out pixel
-				float r,g,b,a;
-				=

-				if(oUniFontFileLoader.IsPixelBorder(data,hd->miWidth,hd->miHeight,dx,d=
y)){
-					r =3D border_r; g =3D border_g; b =3D border_b; a =3D border_a;
-				} else if(oUniFontFileLoader.IsPixelInside(data,hd->miWidth,hd->miHeig=
ht,dx,dy)){
-					r =3D letter_r; g =3D letter_g; b =3D letter_b; a =3D letter_a;
-				} else {
-					r =3D free_r; g =3D free_g; b =3D free_b; a =3D free_a;
-				}
-				=

-				// store color in image
-				Ogre::PixelUtil::packColour(r,g,b,a,Ogre::PF_A4R4G4B4,&p[ix + iy*texw]=
);			=

-			}
-			=

-			// left and right borders of the letter in pixels
-			int l =3D posx + letx + hd->miXOffset - 1;
-			int r =3D posx + letx + hd->miXOffset + hd->miWidth + 1;
-			=

-			// set glyphe text coords
-			float u1 =3D float(l)/float(texw);
-			float v1 =3D float(posy + lety - 1)/float(texh);
-			float u2 =3D float(r)/float(texw);
-			float v2 =3D float(posy + lety + maxh + 1)/float(texh);
-			font->setGlyphTexCoords(i,u1,v1,u2,v2,float(texw)/float(texh));  =

-			=

-			//printf("%c: u1=3D%f v1=3D%f u2=3D%f v2=3D%f\n",i,u1,v1,u2,v2);
-			//printf("   u1=3D%f v1=3D%f u2=3D%f v2=3D%f\n",u1*float(texw),v1*float=
(texh),u2*float(texw),v2*float(texh));
-			//printf("   h=3D%d\n",int((v2-v1)*float(texh)));
-			=

-			// move window in texture to next free space
-			posx +=3D letw;
-			if(posx + letw >=3D texw){
-				// oki one line is full, so move the window to the next
-				posx =3D 0;
-				posy +=3D leth;
-			}
-
-			// store generated rect under data pointer in cache
-			{
-				Ogre::Rectangle r;
-				r.left =3D u1;r.right =3D u2;
-				r.top =3D v1;r.bottom =3D v2;
-				lCache[data] =3D r;
-			}
-		} else {
-			// use already written part if the image
-			Ogre::Rectangle r(lCache.find(data)->second);
-			// set glyphe text coords
-			font->setGlyphTexCoords(i,r.left,r.top,r.right,r.bottom,float(texw)/flo=
at(texh));
-		}
-	}
-
-	// create image
-	Ogre::Image img;
-	img.loadDynamicImage((Ogre::uchar *)buffer,texw,texh,Ogre::PF_A4R4G4B4);
-	=

-	//img.resize(texw*2,texh*2,Ogre::Image::FILTER_NEAREST);
-	=

-	// save on disk
-	/*
-	printf("save image...\n");
-	std::string filename =3D std::string(szName) + std::string(".png");
-	img.save(filename);
-	printf("done\n");
-	*/
-	=

-	// generate texture name from the fontname
-	std::string sTexName =3D std::string(szName) + std::string("_tex");
-
-	// create texture from image
-	Ogre::TexturePtr t =3D Ogre::TextureManager::getSingleton().loadImage(sTe=
xName,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,
-		img,Ogre::TEX_TYPE_2D,0);
-	=

-	/*
-	Ogre::DataStreamPtr imgstream(new Ogre::MemoryDataStream(buffer,buffersiz=
e));
-	Ogre::TexturePtr t =3D Ogre::TextureManager::getSingleton().loadRawData(s=
TexName,
-		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,
-		imgstream, texw, texh, Ogre::PF_A4R4G4B4 );*/
-	=

-	// assign texture to font
-	font->setSource(sTexName);
-	=

-	font->load();
-	=

-	delete [] buffer;
-	=

-	// set additional mterial parameter
-	Ogre::MaterialPtr material =3D font->getMaterial();
-	Ogre::TextureUnitState *texLayer =3D material->getTechnique(0)->getPass(0=
)->getTextureUnitState(0);
-	=

-	texLayer->setTextureFiltering(Ogre::TFO_NONE);
-	=

-	//texLayer->setTextureAddressingMode( Ogre::TextureUnitState::TAM_CLAMP );
-	//material->setSceneBlending( SBT_ADD );
-	//material->getTechnique(0)->getPass(0)->setCullingMode( Ogre::CULL_NONE =
) ;
-	//material->getTechnique(0)->getPass(0)->setManualCullingMode( Ogre::MANU=
AL_CULL_NONE ) ;
-	//material->getTechnique(0)->getPass(0)->setLightingEnabled( false );
-	//material->setDepthWriteEnabled( false );
-	//material->setDepthCheckEnabled( bEnableDepthWrite );
-	=

-	return font;
 }
-
-bool	WriteFontGlyphToImage				(Ogre::Image& pDest,cUniFontFileLoader& oUni=
FontFileLoader,const int iCharCode,
-	const Ogre::ColourValue& vInner,
-	const Ogre::ColourValue& vBorder,
-	const Ogre::ColourValue& vBackground) {
-	RawUniFontFileLetterHeader*	pHead =3D oUniFontFileLoader.GetLetterHeader(=
	iCharCode);
-	const char*					pData =3D oUniFontFileLoader.GetLetterData(	iCharCode);
-	if (!pData) return false;
-
-	int b =3D 2; // image border around the raw font data
-	int w =3D b + pHead->miWidth	+ b;  // border on all sides, 2 for
-	int h =3D b + pHead->miHeight	+ b;
-	if (w =3D=3D 0 || h =3D=3D 0) return false;
-		=

-	Ogre::PixelFormat iFormat =3D Ogre::PF_BYTE_RGBA; // Ogre::PF_BYTE_BGRA;
-	Ogre::uint32* pBuf =3D new Ogre::uint32[w*h];
-	for (int y=3D0;y<h;++y)
-	for (int x=3D0;x<w;++x) {
-		bool bInside =3D 				oUniFontFileLoader.IsPixelInside(pData,pHead->miWid=
th,pHead->miHeight,x-b,y-b);
-		bool bBorder =3D !bInside &&	oUniFontFileLoader.IsPixelBorder(pData,pHea=
d->miWidth,pHead->miHeight,x-b,y-b);
-		Ogre::PixelUtil::packColour(bInside?vInner:(bBorder?vBorder:vBackground)=
,iFormat,&pBuf[y*w+x]); // write to buffer
-	}
-	pDest.loadDynamicImage((Ogre::uchar*)pBuf,w,h,1,iFormat,true); // autoDel=
ete
-	return true;
-}
-
-
-bool	GenerateHeightMap(cGroundBlockLoader* oGroundBlockLoader, const int i=
BlockX, const int iBlockY, signed char* fValues ) { PROFILE
-	int OldBX =3D -1;
-	int OldBY =3D -1;
-	cGroundBlock* Block =3D 0;
-	for( int y=3D0; y<=3D8; y++ ) {
-		for( int x=3D0; x<=3D8; x++ ) {
-			int NewBX =3D iBlockX + x/8;
-			int NewBY =3D iBlockY + y/8;
-			int TileX =3D x % 8;
-			int TileY =3D y % 8;
-
-			if (OldBX !=3D NewBX || OldBY !=3D NewBY) {
-				Block =3D oGroundBlockLoader->GetGroundBlock( NewBX, NewBY );
-				OldBX =3D NewBX;
-				OldBY =3D NewBY;
-			}
-			=

-			if (Block) {
-				fValues[y*9+x] =3D Block->mpRawGroundBlock->mTiles[TileY][TileX].miZ;
-			} else {
-				fValues[y*9+x] =3D 0;
-			}
-		}
-	}
-	return true;
-}
-
-bool	GenerateNormals(cGroundBlockLoader* oGroundBlockLoader, const int iBl=
ockX, const int iBlockY, float* fValues ) { PROFILE
-	signed char heightmap[11][11];
-
-	int OldBX =3D -1;
-	int OldBY =3D -1;
-	cGroundBlock* Block =3D 0;
-	for( int y=3D-1; y<=3D9; y++ ) {
-		for( int x=3D-1; x<=3D9; x++ ) {
-			int NewBX =3D iBlockX + (8 + x)/8 - 1;
-			int NewBY =3D iBlockY + (8 + y)/8 - 1;
-			int TileX =3D (x + 8) % 8;
-			int TileY =3D (y + 8) % 8;
-
-			if (OldBX !=3D NewBX || OldBY !=3D NewBY) {
-				Block =3D oGroundBlockLoader->GetGroundBlock( NewBX, NewBY );
-				OldBX =3D NewBX;
-				OldBY =3D NewBY;
-			}
-			=

-			if (Block) {
-				heightmap[x+1][y+1] =3D Block->mpRawGroundBlock->mTiles[TileX][TileY].=
miZ;
-			} else {
-				heightmap[x+1][y+1] =3D 0;
-			}
-		}
-	}
-
-	Ogre::Vector3 NormalMap[10][10][4];
-	for( int y=3D-1; y<=3D8; y++ ) {
-		for( int x=3D-1; x<=3D8; x++ ) {
-			signed char cell =3D heightmap[x+1][y+1];
-			signed char left =3D heightmap[x+1][y+2];
-			signed char right =3D heightmap[x+2][y+1];
-			signed char bottom =3D heightmap[x+2][y+2];
-
-			if (cell =3D=3D left && cell =3D=3D right && cell =3D=3D bottom) {
-				NormalMap[x+1][y+1][0] =3D Ogre::Vector3( 0, 0, 1 );
-				NormalMap[x+1][y+1][1] =3D Ogre::Vector3( 0, 0, 1 );
-				NormalMap[x+1][y+1][2] =3D Ogre::Vector3( 0, 0, 1 );
-				NormalMap[x+1][y+1][3] =3D Ogre::Vector3( 0, 0, 1 );
-			} else {
-				Ogre::Vector3 v1, v2;
-				v1 =3D Ogre::Vector3( -22, 22, (cell-right)*4 );
-				v2 =3D Ogre::Vector3( -22, -22, (left-cell)*4 );
-//				NormalMap[x+1][y+1][0] =3D v1.crossProduct( v2 ).normalise();
-//bugfix Arahil
-				NormalMap[x+1][y+1][0] =3D v1.crossProduct( v2 );
-				NormalMap[x+1][y+1][0].normalise();
-
-				v1 =3D Ogre::Vector3( 22, 22, (right-bottom)*4 );
-				v2 =3D Ogre::Vector3( -22, 22, (cell-right)*4 );
-//				NormalMap[x+1][y+1][1] =3D v1.crossProduct( v2 ).normalise();
-//bugfix Arahil
-				NormalMap[x+1][y+1][1] =3D v1.crossProduct( v2 );
-				NormalMap[x+1][y+1][1].normalise();
-
-				v1 =3D Ogre::Vector3( 22, -22, (bottom-left)*4 );
-				v2 =3D Ogre::Vector3( 22, 22, (right-bottom)*4 );
-//				NormalMap[x+1][y+1][2] =3D v1.crossProduct( v2 ).normalise();
-//bugfix Arahil
-				NormalMap[x+1][y+1][2] =3D v1.crossProduct( v2 );
-				NormalMap[x+1][y+1][2].normalise();
-
-				v1 =3D Ogre::Vector3( -22, -22, (left-cell)*4 );
-				v2 =3D Ogre::Vector3( 22, -22, (bottom-left)*4 );
-//				NormalMap[x+1][y+1][3] =3D v1.crossProduct( v2 ).normalise();
-//bugfix Arahil
-				NormalMap[x+1][y+1][3] =3D v1.crossProduct( v2 );
-				NormalMap[x+1][y+1][3].normalise();
-			}
-		}
-	}
-
-	for( int y=3D0; y<=3D7; y++ ) {
-		for( int x=3D0; x<=3D7; x++ ) {
-			Ogre::Vector3 v;
-			v =3D NormalMap[x][y][2] + NormalMap[x][y+1][1] + NormalMap[x+1][y][3] =
+ NormalMap[x+1][y+1][0];
-			v.normalise();
-			fValues[((y*8+x)*4+0)*3+0] =3D v.x;
-			fValues[((y*8+x)*4+0)*3+1] =3D v.y;
-			fValues[((y*8+x)*4+0)*3+2] =3D v.z;
-
-			v =3D NormalMap[x+1][y][2] + NormalMap[x+1][y+1][1] + NormalMap[x+2][y]=
[3] + NormalMap[x+2][y+1][0];
-			v.normalise();
-			fValues[((y*8+x)*4+1)*3+0] =3D v.x;
-			fValues[((y*8+x)*4+1)*3+1] =3D v.y;
-			fValues[((y*8+x)*4+1)*3+2] =3D v.z;
-
-//			v =3D NormalMap[x+1][y+1][2] + NormalMap[x][y+2][1] + NormalMap[x+2][=
y][3] + NormalMap[x+2][y+2][0];
-//Patch from Arahil
-			v =3D NormalMap[x+1][y+1][2] + NormalMap[x+1][y+2][1] + NormalMap[x+2][=
y+1][3] + NormalMap[x+2][y+2][0];
-			v.normalise();
-			fValues[((y*8+x)*4+2)*3+0] =3D v.x;
-			fValues[((y*8+x)*4+2)*3+1] =3D v.y;
-			fValues[((y*8+x)*4+2)*3+2] =3D v.z;
-
-			v =3D NormalMap[x][y+1][2] + NormalMap[x][y+2][1] + NormalMap[x+1][y+1]=
[3] + NormalMap[x+1][y+2][0];
-			v.normalise();
-			fValues[((y*8+x)*4+3)*3+0] =3D v.x;
-			fValues[((y*8+x)*4+3)*3+1] =3D v.y;
-			fValues[((y*8+x)*4+3)*3+2] =3D v.z;
-		}
-	}
-
-	return true;
-}



From no-reply at zwischenwelt.org  Fri May  9 19:51:19 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 09 May 2008 17:51:19 -0000
Subject: [Iris-commit] [IRIS] r2152 - in /trunk: include/ src/
Message-ID: <20080509175122.08F781524040@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  9 19:51:14 2008
New Revision: 2152

Log:
data loader code : reorganized, split big source files and headers into mul=
tiple small

Added:
    trunk/include/data_anim.h
    trunk/include/data_artmap.h
    trunk/include/data_common.h
      - copied, changed from r2151, trunk/include/builder_common.h
    trunk/include/data_font.h
    trunk/include/data_groundblock.h
    trunk/include/data_gump.h
    trunk/include/data_hue.h
    trunk/include/data_indexed.h
    trunk/include/data_light.h
    trunk/include/data_lookup.h
    trunk/include/data_mapinfo.h
    trunk/include/data_multi.h
    trunk/include/data_radar.h
    trunk/include/data_raw.h
    trunk/include/data_sound.h
    trunk/include/data_staticblock.h
    trunk/include/data_texmap.h
    trunk/include/data_tiletype.h
    trunk/src/data_anim.cpp
    trunk/src/data_artmap.cpp
    trunk/src/data_common.cpp
      - copied, changed from r2151, trunk/src/builder.cpp
    trunk/src/data_font.cpp
    trunk/src/data_groundblock.cpp
    trunk/src/data_gump.cpp
    trunk/src/data_hue.cpp
    trunk/src/data_light.cpp
    trunk/src/data_lookupfile.cpp
    trunk/src/data_map.cpp
    trunk/src/data_mapinfo.cpp
    trunk/src/data_multi.cpp
    trunk/src/data_radar.cpp
    trunk/src/data_sound.cpp
    trunk/src/data_staticblock.cpp
    trunk/src/data_texmap.cpp
    trunk/src/data_tiletype.cpp
Removed:
    trunk/include/builder_common.h
    trunk/include/radar.h
    trunk/src/builder.cpp
    trunk/src/builder_anim.cpp
    trunk/src/builder_art.cpp
    trunk/src/builder_font.cpp
    trunk/src/builder_gump.cpp
    trunk/src/builder_map.cpp
    trunk/src/builder_tex.cpp
    trunk/src/radar.cpp
    trunk/src/radar_L.cpp
Modified:
    trunk/include/data.h
    trunk/src/data.cpp
    trunk/src/scripting.iris.cpp

Modified: trunk/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data.h (original)
+++ trunk/include/data.h Fri May  9 19:51:14 2008
@@ -21,22 +21,22 @@
 #define INDEX_UNDEFINED_OFFSET	((uint32)(0xFFFFFFFF))
 #define INDEX_UNDEFINED_LENGTH	((uint32)(0xFFFFFFFF))
 =

-// Compiler directives for packed structs (not 4byte aligned)
-#ifdef WIN32
-#pragma pack(push, 1)
-#endif
-
-#if  	defined(WIN32) && !defined(__MINGW32__)
-// Visual C pragma
-#define STRUCT_PACKED
-#else
-// GCC packed attribute
-#define STRUCT_PACKED	__attribute__ ((packed))
-#endif
-
 =

 using namespace Lugre;
 =

+
+// ***** ***** ***** ***** ***** utilities
+
+
+class TiXmlHandle;
+class lua_State;
+
+void	LuaRegisterData 	(lua_State *L);
+
+const char* GetTiXmlHandleText (const TiXmlHandle& handle,const char* szFa=
llback=3D"");
+const char* GetTiXmlHandleAttr (const TiXmlHandle& handle,const char* szAt=
trName,const char* szFallback=3D"");
+
+	=

 class FileNotFoundException : public std::runtime_error { public:
 	FileNotFoundException(const std::string& sFilePath) : std::runtime_error(=
"FileNotFoundException : "+sFilePath) { }
 };
@@ -54,941 +54,63 @@
 	*destpos =3D value;
 	return true;
 }
- =

-class TiXmlHandle;
 =

-/// utilities
 =

-	class 	lua_State;
-	void	LuaRegisterData 	(lua_State *L);
+/// loads complete file into one big buffer, has far better performance th=
an loading small chunks, but uses more ram
+class cFullFileLoader { public :
+	char*		mpFullFileBuffer;
+	int			miFullFileSize;
+	cFullFileLoader				(const char* szFile);
+	virtual ~cFullFileLoader	();
+};
 =

-	const char* GetTiXmlHandleText (const TiXmlHandle& handle,const char* szF=
allback=3D"");
-	const char* GetTiXmlHandleAttr (const TiXmlHandle& handle,const char* szA=
ttrName,const char* szFallback=3D"");
-	=

+struct RawIndex;
+/// ideal for the design pattern flyweight, like cGroundBlock is a flyweig=
ht, and cGroundBlockLoader_FullFile:cFullFileLoader is the flyweight factory
 =

-	/// loads complete file into one big buffer, has far better performance t=
han loading small chunks, but uses more ram
-	class cFullFileLoader { public :
-		char*		mpFullFileBuffer;
-		int			miFullFileSize;
-		cFullFileLoader				(const char* szFile);
-		virtual ~cFullFileLoader	();
-	};
-	=

-	struct RawIndex;
-	/// ideal for the design pattern flyweight, like cGroundBlock is a flywei=
ght, and cGroundBlockLoader_FullFile:cFullFileLoader is the flyweight facto=
ry
+class cIndexFile : public cFullFileLoader { public : =

+	cIndexFile 						(const char* szIndexFile);
+	inline unsigned int GetRawIndexCount 	() { return miFullFileSize/12; }
+	inline RawIndex* GetRawIndex 	(const int iID) { return (iID < 0 || iID >=
=3D miFullFileSize/12) ? 0 : (RawIndex*)(mpFullFileBuffer + iID*12); } ///<=
 sizeof(RawIndex) =3D 12 =

+};
 =

-	class cIndexFile : public cFullFileLoader { public : =

-		cIndexFile 						(const char* szIndexFile);
-		inline unsigned int GetRawIndexCount 	() { return miFullFileSize/12; }
-		inline RawIndex* GetRawIndex 	(const int iID) { return (iID < 0 || iID >=
=3D miFullFileSize/12) ? 0 : (RawIndex*)(mpFullFileBuffer + iID*12); } ///<=
 sizeof(RawIndex) =3D 12 =

-	};
-
-	class cIndexedFullFile : public cFullFileLoader { public :
-		cIndexFile			mIndexFile;
-		cIndexedFullFile	(const char* szIndexFile,const char* szDataFile);
-	};
+class cIndexedFullFile : public cFullFileLoader { public :
+	cIndexFile			mIndexFile;
+	cIndexedFullFile	(const char* szIndexFile,const char* szDataFile);
+};
 	=

 	=

-/// endian stuff
-
-	=

-	bool			IsEndianConversionNeed	();
-	uint32	IRIS_SwapU32			(uint32	val);
-	  int32	IRIS_SwapI32			(  int32  val);
-	uint16	IRIS_SwapU16			(uint16 val);
-	  int16	IRIS_SwapI16			(  int16 val);
-	float   		IRIS_FloatFromLittle	(float val);
+// ***** ***** ***** ***** ***** endian stuff
 =

 =

-/// packed structs used by uo
+bool			IsEndianConversionNeed	();
+uint32	IRIS_SwapU32			(uint32	val);
+  int32	IRIS_SwapI32			(  int32  val);
+uint16	IRIS_SwapU16			(uint16 val);
+  int16	IRIS_SwapI16			(  int16 val);
+float   		IRIS_FloatFromLittle	(float val);
 =

 =

-	/// struct for mapX.mul - contains information about ground tiles
-	/// see also cGroundBlock
-	struct RawGroundTile {
-		uint16 	miTileType; ///< always smaller 0x00004000 in GroundTile, see al=
so RawGroundTileType,cGroundTileType
-		int8 	miZ;
-	} STRUCT_PACKED; // 3 bytes
 =

-	/// see also cGroundBlock
-	struct RawGroundBlock {
-		struct RawGroundTile mTiles[8][8]; /// [y][x]
-	} STRUCT_PACKED; // 8*8*3 =3D 192
-	=

-	/// struct for tiledata.mul first half (id < cStaticTileType::GetFirstID(=
) )
-	struct RawGroundTileType {
-		uint32 	miFlags;
-		uint16	miTexID;
-		char 			msName[20]; ///< TODO is this always zero terminated ?!?
-	} STRUCT_PACKED; // 26 bytes
-	=

-	/// struct for tiledata.mul second half (id >=3D cStaticTileType::GetFirs=
tID() )
-	struct RawStaticTileType {
-		uint32 	miFlags;
-		char 	miWeight; ///< 255/ff means not movable
-		char 	miQuality; ///< (If Wearable, this is a Layer. If Light Source, th=
is is Light ID)
-		uint16 	miUnknown;
-		char 	miUnknown1;
-		char 	miQuantity; ///< bodyID in valley   (if Weapon, this is Weapon Cla=
ss. If Armor, Armor Class)
-		uint16 	miAnimID; ///< Appearance, (The Body ID the animatation. Add 50,=
000 and 60,000 respectivefully to get the two gump indicies assocaited with=
 this tile)
-		char 	miUnknown2;
-		char 	miHue; ///< (perhaps colored light?)
-		uint16 	miUnknown3;  ///<  1st byte unknown, 2nd byte : Value
-		char 	miHeight; ///< (If Conatainer, this is how much the container can =
hold)
-		char 			msName[20]; ///< TODO is this always zero terminated ?!?
-	} STRUCT_PACKED; // 37 bytes
-	/// ?!? The art entry is like the static entry, except that Weight is the=
 low byte of TextureID and Quality is the high byte.
-	=

-	/// struct for static index entry
-	struct RawIndex {
-		uint32 miOffset;
-		uint32 miLength;
-		uint32 miExtra;		=

-	} STRUCT_PACKED; // 12 bytes
-	=

-	/// some checks if the index contains valid data
-	inline const bool IsIndexValid(const RawIndex *p){
-		return p && p->miOffset !=3D INDEX_UNDEFINED_OFFSET && p->miOffset !=3D =
INDEX_UNDEFINED_LENGTH;
-	}
-	=

-	/// struct for staticsX.mul - contains information about static tiles
-	struct RawStatic {
-		uint16 	miTileID;
-		char 	miX; ///< offset in block, (0..7)
-		char 	miY; ///< offset in block, (0..7)
-		int8 	miZ; ///< like RawGroundTile.miZ
-		uint16 	miHue;
-	}  STRUCT_PACKED; // 7 bytes
-	=

+// ***** ***** ***** ***** ***** parts
 =

-	/*
-		WORD BlockNum
-		WORD X
-		WORD Y
-		WORD Alt
-		UDWORD Flags
+#include "data_raw.h"
 =

-		Once 16384+BlockNum has been looked up in ART, the block can be drawn us=
ing the following positioning:
-
-		DrawX =3D LeftMostX + (MultiBlock.X - MultiBlock.Y) * 22 - (Block.Width =
shr 1)
-		DrawY =3D TopMostY + (MultiBlock.X + MultiBlock.Y) * 22 - Block.Height -=
 MultiBlock.Alt * 4 =

-	*/
-	/// struct for multi.mul - contains information about multiparts
-	struct RawMultiPart {
-		uint16 	miBlockNum;
-		int16 	miX;
-		int16 	miY;
-		int16 	miZ;
-		uint32 	miFlags;
-	}  STRUCT_PACKED; // 12 bytes
-
-	// warning, don't use int for dword(32 bit), int might be 64 bit on new s=
ystems !
-
-	struct RawAnimData {
-		int8 miFrames[64];
-		char miUnknown;
-		char miCount;
-		char miFrameInterval;
-		char miFrameStart;
-	}  STRUCT_PACKED;
-	=

-	// see also : fonts.mul : http://arachnide.sourceforge.net/formats/fonts/=
index.html, seems to be wrong though...
-	// unifont letter header
-	struct RawUniFontFileLetterHeader {
-		int8 miXOffset;
-		int8 miYOffset;
-		char miWidth;
-		char miHeight;
-	} STRUCT_PACKED;
-	=

-// ***** ***** ***** ***** ***** cUniFontFileLoader
-
-	/// loads a complete uo unifont, =

-	class cUniFontFileLoader : public cFullFileLoader, public Lugre::cSmartPo=
intable { public :
-		cUniFontFileLoader				(const char* szFile);
-		// returns the number of letters in the file
-		const int GetLetterNumbers();
-		// persentage [0-1] of really different letters
-		const float GetLetterUsage();
-		// returns the header of the given letter code or 0 on error
-		RawUniFontFileLetterHeader*		GetLetterHeader	(const unsigned int iCode);
-		// returns the pointer to the beginning of the given letter data or 0 on=
 error
-		const char*						GetLetterData	(const unsigned int iCode);
-		// calculate the maximum sizes (respect offsets)
-		char					GetMaxWidth();
-		char					GetMaxHeight();
-		virtual	~cUniFontFileLoader		();
-		=

-		// static stuff
-		=

-		/// read out the pixel at x,y in data of one letter (with given width w =
and height h of buffer)
-		/// this ignores the offsets of the letter, position only local in data
-		/// returns 1 if the pixel ist visible and 0 if invisible
-		const bool		IsPixelInside	(const char *data, const int w, const int h, c=
onst int x, const int y);
-		=

-		/// @see IsPixelInside
-		/// returns true if the pixel is a border pixel (has visible non border =
neightbours, a normal visible pixel is no border)
-		const bool		IsPixelBorder	(const char *data, const int w, const int h, c=
onst int x, const int y);
-	};
-	=

-// ***** ***** ***** ***** ***** cMapInfo
-	=

-		=

-	/// infos about a single map, usually iMapNum is in 0-4, "data/xml/Maps.x=
ml"
-	class cMapInfo { public:
-		int			miID;
-		int			miWidth;
-		int			miHeight;
-		std::string msName;
-		std::string msSkyBox;
-		int 		miBaseID;
-		int 		miFogR;
-		int 		miFogG;
-		int 		miFogB;
-		=

-		bool	Load	(const int iMapNum,const char* szFile=3D"data/xml/Maps.xml");
-		void	Print	();
-	};
-	=

-// ***** ***** ***** ***** ***** lookup table
-	=

-/// a simple id lookup table for diff files
-class cLookupFile { public :
-	cLookupFile					(const char* szFile);
-	/// check if the lookup table contains the given id
-	const bool Contains			(const uint32 id);
-	/// lookup an id
-	const uint32 Lookup	(const uint32 id);
-	virtual ~cLookupFile			();
-private:
-	std::map<uint32,uint32>	mLookupTable;
-};	=

-	=

-// ***** ***** ***** ***** ***** GroundBlock
-	=

-
-	/// loads a single block (8x8 tiles) from a map*.mul file in the uo dir, =
contains only ground info, no statics
-	class cGroundBlock { public:
-		int				miX;
-		int				miY;
-		RawGroundBlock*	mpRawGroundBlock; ///< memory not owned by this class
-		=

-		cGroundBlock	();
-		inline static int	GetBlockNumber	(const int iX,const int iY,const int iM=
apH) { return (iX * iMapH) + iY; }
-		inline static int	GetRawOffset	(const int iBlockNumber) { return iBlockN=
umber * 196 + 4; }
-		inline static int	GetRawOffset	(const int iX,const int iY,const int iMap=
H) { return ( ( iX * iMapH ) + iY ) * 196 + 4; }
-		inline static int	GetRawLength	() 											{ return sizeof(RawGroundBl=
ock); } ///< 192
-		inline static int	CalcMapW		(const int iMapH,const int iFileSize) 		{ re=
turn iFileSize / (196 * iMapH); } =

-	};
-
-	/// abstract base class
-	class cGroundBlockLoader : public Lugre::cSmartPointable { public :
-		int				miMapW;
-		int				miMapH;
-		cGroundBlockLoader						(const int iMapH);
-		=

-		/// result of Get is only guaranteed to be valid until next Get call, un=
less PrepareGroupLoading below is used and succeeds
-		virtual	cGroundBlock*	GetGroundBlock	(const int iX,const int iY) =3D 0;
-		=

-		/// bx,by is the center
-		/// used for terrain
-		/// returns true on success, false if not possible
-		/// not all loader implementations might implement this
-		/// guarantees that as long as all succeeding GetGroundBlock calls are i=
nside the area, they don't invalidate each other,
-		/// e.g. you can load more than one block at once
-		/// warning, as soon as something outside the area is requested, all loa=
ded blocks could be invalidated
-		/// not implemented by default -> fails
-		/// 17.12.2007,ghoulsblade : not yet implemented anywhere due to diffloa=
der would also have to be adjusted (or disabled)
-		virtual bool PrepareGroupLoading (const int iBX,const int iBY,const int =
iRadius) { return false; }
-	};
-
-	/// dummy loader, doesn't load anything, just repeats a predefined mapblo=
ck
-	class cGroundBlockLoader_Dummy : public cGroundBlockLoader { public :
-		cGroundBlock 	mLastGroundBlock;
-		RawGroundBlock	mRawGroundBlock;
-		cGroundBlockLoader_Dummy				(const int iTileType,const int iZ);
-		virtual	cGroundBlock*	GetGroundBlock	(const int iX,const int iY);
-	};
-
-	/// loads blocks only on demand, rather slow, but uses little memory
-	class cGroundBlockLoader_OnDemand : public cGroundBlockLoader { public :
-		cGroundBlock 	mLastGroundBlock;
-		std::ifstream	mFileStream;
-		int				miFileSize;
-		RawGroundBlock	mLastRawGroundBlock;
-		cGroundBlockLoader_OnDemand			(const int iMapH,const char* szFile, const=
 char *szDiffLookup =3D 0, const char *szDiffData =3D 0);
-		virtual	cGroundBlock*	GetGroundBlock	(const int iX,const int iY);
-		virtual	~cGroundBlockLoader_OnDemand	();
-
-	private:
-		cGroundBlock*	GetGroundBlock	(const int iBlockNumber);
-		=

-		cLookupFile *mpDiffLookupFile;
-		cGroundBlockLoader_OnDemand *mpDiffLoader;
-	};
-
-	/// loads complete map into one big buffer, usually around 90 mb, used fo=
r high-speed loading of the entire map
-	class cGroundBlockLoader_FullFile : public cGroundBlockLoader, public cFu=
llFileLoader { public :
-		cGroundBlock 	mLastGroundBlock;
-		cGroundBlockLoader_FullFile				(const int iMapH,const char* szFile, cons=
t char *szDiffLookup =3D 0, const char *szDiffData =3D 0);
-		virtual	cGroundBlock*	GetGroundBlock	(const int iX,const int iY);
-		virtual	~cGroundBlockLoader_FullFile		();
-
-	private:
-		cGroundBlock*	GetGroundBlock	(const int iBlockNumber);
-		=

-		cLookupFile *mpDiffLookupFile;
-		cGroundBlockLoader_FullFile *mpDiffLoader;
-	};
-	=

-	=

-// ***** ***** ***** ***** ***** statics
-	=

-	=

-	/// holds one map block of statics
-	class cStaticBlock { public :
-		int			miX;
-		int			miY;
-		RawIndex*	mpRawIndex; 		///< memory not owned by this class
-		RawStatic*	mpRawStaticList; 	///< memory not owned by this class, array,=
 see mpRawStaticIndex for size
-		=

-		cStaticBlock		();
-		inline int Count 	() { return mpRawIndex ? (mpRawIndex->miLength / sizeo=
f(RawStatic)) : 0; }
-		inline static int	CalcMapW			(const int iMapH,const int iIndexFileSize) =
				{ return iIndexFileSize / (sizeof(RawIndex) * iMapH); } =

-		inline static int	BlockCoordsToIndex	(const int iBlockX,const int iBlock=
Y,const int iMapH)	{ return iBlockX*iMapH + iBlockY; }
-	};
-	=

-	/// abstract base class
-	class cStaticBlockLoader : public Lugre::cSmartPointable { public :
-		int				miMapW;
-		int				miMapH;
-		cStaticBlockLoader						(const int iMapH);
-		virtual	cStaticBlock*	GetStaticBlock	(const int iX,const int iY) =3D 0; =
///< result of Get is only valid until next Get call
-	};
-	=

-	/// loads complete file into one big buffer, usually 5mb, used for high-s=
peed loading
-	class cStaticBlockLoader_IndexedFullFile : public cStaticBlockLoader, pub=
lic cIndexedFullFile { public :
-		cStaticBlock 	mLastStaticBlock;
-		/// szDiffLookup, szDiffIndex and szDiffData are diff files. you can lea=
ve them out or specify ALL 3 of them together
-		cStaticBlockLoader_IndexedFullFile		(const int iMapH,const char* szIndex=
File,const char* szDataFile, const char *szDiffLookup =3D 0, const char *sz=
DiffIndex =3D 0, const char *szDiffData =3D 0);
-		virtual	cStaticBlock*	GetStaticBlock	(const int iX,const int iY); ///< r=
esult of Get is only valid until next Get call
-		~cStaticBlockLoader_IndexedFullFile	();
-	private:
-		cLookupFile *mpDiffLookupFile;
-		cIndexedFullFile *mpDiffIndexedFullFile;
-	};
-
-
-// ***** ***** ***** ***** ***** TileType
-	=

-	=

-	/// static-tile-type (id >=3D 0x00004000 =3D 32*512, otherwise cGroundTil=
eType), from tiledata.mul
-	/// todo : enum for flags, utility functions for interpreting them, but n=
o iris-specific interpretations, those belong to a seperate filter class
-	class cStaticTileType { public:
-		int					miID;
-		RawStaticTileType*	mpRawStaticTileType; ///< memory not owned by this cl=
ass
-		=

-		cStaticTileType	();
-		inline static int	GetFirstID		() 				{ return TILETYPE_STATIC_ID_START; =
} ///< TODO : unhardcode, read from config ? interesting for shards ?
-		inline static bool	IsValidID		(const int iID) { return iID >=3D GetFirst=
ID(); }
-		inline static int	GetRawOffset	(const int iID) { return (512*836)+(((iID=
-512*32)/32)*1188) + 4 + ((iID-512*32)%32)*37; } // id=3D512*32 : 428036 =

-		inline static int	GetRawLength	() 				{ return sizeof(RawStaticTileType)=
; } ///< 37
-		inline static int	GetEndID		(const int iFileSize) { return 512*32 + ((iF=
ileSize - sizeof(RawStaticTileType) - (512*836 + 4)) / 1188 ) * 32; }
-	};
-
-	/// ground-tile-type (id < 0x00004000 =3D 32*512, otherwise RawStaticTile=
Type), from tiledata.mul
-	/// todo : enum for flags, utility functions for interpreting them, but n=
o iris-specific interpretations, those belong to a seperate filter class
-	class cGroundTileType { public:
-		int					miID;
-		RawGroundTileType*	mpRawGroundTileType; ///< memory not owned by this cl=
ass
-		=

-		cGroundTileType	();
-		inline static bool	IsValidID		(const int iID) { return iID >=3D 0 && iID=
 < cStaticTileType::GetFirstID(); }
-		inline static int	GetRawOffset	(const int iID) { return (iID/32)*836 + 4=
 + (iID%32)*26; }  // id=3D512*32 : 428036 =

-		inline static int	GetRawLength	() 				{ return sizeof(RawGroundTileType)=
; } ///< 26
-	};
-	=

-	=

-	/// abstract base class
-	class cTileTypeLoader : public Lugre::cSmartPointable { public :
-		virtual	cGroundTileType*	GetGroundTileType	(const int iID) =3D 0; ///< r=
esult of Get is only valid until next Get call
-		virtual	cStaticTileType*	GetStaticTileType	(const int iID) =3D 0; ///< r=
esult of Get is only valid until next Get call
-		virtual	int					GetEndID			() =3D 0; ///< the returned id is not valid, =
some ids right before it might also be not valid
-	};
-	=

-	/// loads complete file into one big buffer, usually <1mb, used for high-=
speed loading
-	class cTileTypeLoader_FullFile : public cTileTypeLoader, public cFullFile=
Loader { public :
-		cGroundTileType 	mLastGroundTileType;
-		cStaticTileType 	mLastStaticTileType;
-		cTileTypeLoader_FullFile						(const char* szFile);
-		virtual	cGroundTileType*	GetGroundTileType	(const int iID); ///< result =
of Get is only valid until next Get call
-		virtual	cStaticTileType*	GetStaticTileType	(const int iID); ///< result =
of Get is only valid until next Get call
-		virtual	int					GetEndID			();
-	};
-
-// ***** ***** ***** ***** ***** AnimData
-
-	class cAnimDataLoader : public Lugre::cSmartPointable, public cFullFileLo=
ader { public :
-		RawAnimData*		mpLastAnimData;		=

-		cAnimDataLoader							(const char* szFile);
-		RawAnimData*		GetAnimDataType		(const int iID);
-	};
-	=

-// ***** ***** ***** ***** ***** RadarColors
-	=

-	=

-	/// holds a color for each tiletype to be presented on a radar or map lik=
e display
-	/// reads entire file on construction, changes raw data so that alpha bit=
 is set to opaque, so Ogre::PF_A1R5G5B5 can be used directly
-	class cRadarColorLoader : public Lugre::cSmartPointable, public cFullFile=
Loader { public:
-		cRadarColorLoader	(const char* szFile);
-		inline short	GetCol16	(const int iID) { return (iID < 0 || iID >=3D miFu=
llFileSize/sizeof(short)) ? 0 : ((short*)mpFullFileBuffer)[iID]; } 	///< fo=
r Ogre::PF_A1R5G5B5
-	};
-	=

-
-//	***** ***** ***** ***** ***** cHue
-	=

-
-	class cHue { public :
-		int 	miID;	//< hue id
-		char*	mpRawData;
-		=

-		cHue();
-		short*		GetColors();//< array of 32 colors					=

-		std::string	GetName();	//< hue name
-	};
-	=

-	/// loads complete hue into one big buffer, usually around 300k, used for=
 high-speed loading of the entire hue buffer
-	class cHueLoader : public Lugre::cSmartPointable, public cFullFileLoader =
{ public :
-		cHue		mLastHue;
-		cHueLoader		(const char* szDataFile);
-		int		GetMaxHueID		();
-		cHue*	GetHue	(const int iID); ///< result of Get is only valid until nex=
t Get call
-	};
-	=

-// ***** ***** ***** ***** ***** cIndexedRawData
-	=

-	=

-	/// baseclass for texmap,art,gump,anim,sound.. =

-	/// can be used for any raw data file that is using an uo-style index fil=
e and addresses chunks via id
-	class cIndexedRawData { public:
-		enum eDataType {
-			kDataType_TexMap,
-			kDataType_Art,
-			kDataType_Gump,
-			kDataType_Anim,
-			kDataType_Sound,
-			kDataType_Hue,
-			kDataType_Light
-		};
-		=

-		eDataType	miDataType;
-		int			miID;
-		RawIndex*	mpRawIndex; ///< memory not owned by this class
-		char*		mpRawData; 	///< memory not owned by this class
-		=

-		cIndexedRawData		(const eDataType iDataType);
-	};
-	=

-	/// loads complete file into one big buffer, used for high-speed loading
-	template <class _T> class cIndexedRawDataLoader_IndexedFullFile : public =
cIndexedFullFile { public :
-		_T 	mLastChunk;
-		cIndexedRawDataLoader_IndexedFullFile	(const char* szIndexFile,const cha=
r* szDataFile) : cIndexedFullFile(szIndexFile,szDataFile) {}
-		inline _T*		GetChunk				(const int iID) { PROFILE ///< result of Get is =
only valid until next Get call
-			RawIndex* pRawIndex =3D mIndexFile.GetRawIndex(iID);
-			if (!IsIndexValid(pRawIndex)) { printf("GetChunk failed to load index\n=
"); return 0; }
-			if (pRawIndex->miLength <=3D 0) return 0;
-			if (pRawIndex->miOffset + pRawIndex->miLength > miFullFileSize) { =

-				//PROFILE_PRINT_STACKTRACE =

-				//printf("index points to invalid memory : offset=3D%d len=3D%d filele=
n=3D%d\n",pRawIndex->miOffset,pRawIndex->miLength,miFullFileSize); =

-				return 0; =

-			}
-			if (!pRawIndex || pRawIndex->miOffset + pRawIndex->miLength > miFullFil=
eSize) return 0; // index must be valid, and must point to a valid rawblock
-			mLastChunk.mpRawIndex =3D pRawIndex;
-			mLastChunk.mpRawData =3D mpFullFileBuffer + pRawIndex->miOffset;
-			mLastChunk.miID =3D iID;
-			return &mLastChunk;
-		}
-	};
-	=

-	/// loads data only on demand, used for memory-saving
-	template <class _T> class cIndexedRawDataLoader_IndexedOnDemand { public :
-		cIndexFile		mIndexFile;
-		char*			mpBuffer;
-		long			miBufferSize;
-		std::ifstream	mFileStream;
-		int				miFileSize; =

-		_T 				mLastChunk;
-		=

-		cIndexedRawDataLoader_IndexedOnDemand	(const char* szIndexFile,const cha=
r* szDataFile) =

-			: mIndexFile(szIndexFile), mFileStream(szDataFile,std::ios::in | std::i=
os::binary), mpBuffer(0), miBufferSize(0) { PROFILE
-			if (!mFileStream) throw FileNotFoundException(szDataFile);
-			mFileStream.seekg(0, std::ios::end);
-			miFileSize =3D mFileStream.tellg();
-		}
-
-		inline _T* GetChunk (const int iID) { PROFILE ///< result of Get is only=
 valid until next Get call =

-			RawIndex* pRawIndex =3D mIndexFile.GetRawIndex(iID); =

-			if (!IsIndexValid(pRawIndex) || pRawIndex->miOffset < 0 || pRawIndex->m=
iOffset + pRawIndex->miLength > miFileSize) return 0; // index must be vali=
d, and must point to a valid rawblock =

-			if (pRawIndex->miLength <=3D 0) return 0;
-			=

-			// resize buffer if too small
-			if (miBufferSize < pRawIndex->miLength) {
-				miBufferSize =3D pRawIndex->miLength; =

-				if (mpBuffer) delete [] mpBuffer;
-				mpBuffer =3D new char [miBufferSize];
-			}
-			=

-			// read in raw data from file
-			mFileStream.seekg(pRawIndex->miOffset, std::ios::beg);
-			mFileStream.read(mpBuffer,pRawIndex->miLength);
-			=

-			// init other membervars
-			mLastChunk.mpRawIndex =3D pRawIndex;
-			mLastChunk.mpRawData =3D mpBuffer;
-			mLastChunk.miID =3D iID; =

-			return &mLastChunk; =

-		}
-	};
-	=

-/// todo : variant with blockwise caching
-	=

-
-// ***** ***** ***** ***** ***** Art Filters =

-
-	class cIdentityFilter { public : inline short  operator () (short value, =
short* ColorTable) { return value; } }; =

-	=

-	class cSetHighBitFilter { public : inline short operator () (short value,=
 short* ColorTable) { return value | 0x8000; } }; =

-
-	class cHueFilter { public : inline short operator () (short value, short*=
 ColorTable) {
-		return ColorTable[mymax(0,mymin(31,(value >> 10) & 0x1F))] | 0x8000; =

-	} };
-
-	class cPartialHueFilter { public : inline short operator () (short value,=
 short* ColorTable) { =

-		if ((value >> 10) & 0x1F =3D=3D (value >> 5) & 0x1F && (value >> 10) & 0=
x1F =3D=3D value & 0x1F) {
-			return ColorTable[mymax(0,mymin(31,(value >> 10) & 0x1F))] | 0x8000;
-		} else {
-			return value | 0x8000;
-		}
-	} };
-
-// ***** ***** ***** ***** ***** cTexMap
-	=

-
-	class cTexMap : public cIndexedRawData { public :
-		cTexMap();
-		inline int	GetWidth	() { return mpRawIndex ? (mpRawIndex->miLength >=3D =
(128*128*2)?128:64) : 0; }
-		inline int	GetHeight	() { return GetWidth(); }
-		template <class _T> void Decode( short *pBuffer, _T& filter, short* Colo=
rTable ) { PROFILE
-			int w =3D GetWidth();
-			short* p =3D (short*)mpRawData;
-			for (int y=3D0;y<w;++y)
-				for (int x=3D0;x<w;++x) {
-					*pBuffer =3D filter( *p, ColorTable );
-					pBuffer++;
-					p++;
-				}
-		}
-		/// todo : GenerateOgreTexture ? parameterized with hue ?
-		/// height =3D Index->miExtra=3D=3D1 ? 128 : 64 , but length is more rel=
iable
-	};
-	=

-	/// abstract base class
-	class cTexMapLoader : public Lugre::cSmartPointable { public :
-		virtual	cTexMap*	GetTexMap	(const int iID) =3D 0; ///< result of Get is =
only valid until next Get call
-		virtual unsigned int	GetCount	() =3D 0;	///< number of texmaps
-	};
-	=

-	/// loads complete file into one big buffer
-	class cTexMapLoader_IndexedFullFile : public cTexMapLoader, public cIndex=
edRawDataLoader_IndexedFullFile<cTexMap> { public :
-		cTexMapLoader_IndexedFullFile	(const char* szIndexFile,const char* szDat=
aFile);
-		virtual	cTexMap*		GetTexMap	(const int iID); ///< result of Get is only =
valid until next Get call
-		virtual unsigned int	GetCount	() { return mIndexFile.miFullFileSize / 12=
; }
-	};
-	=

-	/// loads data only on demand
-	class cTexMapLoader_IndexedOnDemand : public cTexMapLoader, public cIndex=
edRawDataLoader_IndexedOnDemand<cTexMap> { public :
-		cTexMapLoader_IndexedOnDemand	(const char* szIndexFile,const char* szDat=
aFile);
-		virtual	cTexMap*		GetTexMap	(const int iID); ///< result of Get is only =
valid until next Get call
-		virtual unsigned int	GetCount	() { return mIndexFile.miFullFileSize / 12=
; }
-	};
-	=

-	=

-// ***** ***** ***** ***** ***** cArtMap
-
-	=

-	class cArtMap : public cIndexedRawData { public :
-		cArtMap();
-		int	GetWidth	();
-		int	GetHeight	();
-		void	CalcVisibleAABB(int& minx, int& miny, int& maxx, int& maxy);
-		void	SearchCursorHotspot		(int& iX,int& iY); ///< returns hotspot coords=
 in iX,iY. search using different pixel on image border
-		template <class _T> void Decode( short *pBuffer, const int iPitch, _T& f=
ilter, short* ColorTable ) { PROFILE	///< decodes the art image into a pixe=
lbuffer (1short/pixel), pitch=3DLength of a surface scanline in bytes
-			int		iBufferSize =3D iPitch*GetHeight();
-			=

-			if( miID < 0x4000 ){
-				//map tile format, 44x44 pixel
-				short *dst =3D pBuffer;
-				short *src =3D (short *)mpRawData;
-
-				short *adst =3D dst;
-				short *asrc =3D src;
-
-				for(int pixelsInHalfRow =3D 1;pixelsInHalfRow <=3D 22;++pixelsInHalfRo=
w){
-					dst +=3D 22-pixelsInHalfRow;
-					for( int i=3D0; i < pixelsInHalfRow*2; i++ ) {
-						SecureWrite(dst,filter( *src, ColorTable ),pBuffer,iBufferSize,"cArt=
Map::Decode_A",miID);
-						dst++;
-						src++;
-					}
-					dst +=3D 22-pixelsInHalfRow;
-					dst +=3D iPitch / 2 - 44;
-				}												=

-
-				for(int pixelsInHalfRow =3D 22;pixelsInHalfRow >=3D 1;--pixelsInHalfRo=
w){
-					dst +=3D 22-pixelsInHalfRow;
-					for( int i=3D0; i < pixelsInHalfRow*2; i++ ) {
-						SecureWrite(dst,filter( *src, ColorTable ),pBuffer,iBufferSize,"cArt=
Map::Decode_B",miID);
-						dst++;
-						src++;
-					}
-					dst +=3D 22-pixelsInHalfRow;
-					dst +=3D iPitch / 2 - 44;
-				}												=

-			} else {
-				//run tile format
-				//reading width and height but skipping a strange 4byte header
-				short *input =3D (short *)(mpRawData+4);
-				int width =3D input[0];
-				int height =3Dinput[1];
-				int streamloc =3D 2+height;
-				int index;
-
-				int X=3D0;
-				int Y=3D0;
-				for ( Y=3D0; Y < height; ++Y ){
-					X=3D0;
-					index =3D (2 +Y);
-					short offset;
-					offset =3D input[index] ;
-					index =3D streamloc + offset;
-					short xOffset =3D 1;
-					short xRun =3D 1;
-					short runColor;
-												=

-					while ( xOffset+xRun !=3D0 ){
-						xOffset =3D input[index];
-						++index;
-						xRun =3D input[index];
-						++index;
-						if ( (xOffset+xRun!=3D0) ){
-							X+=3DxOffset;
-							for ( short jj=3D0; jj < xRun; ++jj ){
-								runColor=3D (0x7FFF & input[index]);
-								++index;
-								short *pixel =3D (short *) (((char *)(pBuffer + X)) + (Y*iPitch));
-								if ( runColor !=3D 0 ) //is this check really necessary?
-									SecureWrite(pixel,filter( runColor, ColorTable ),pBuffer,iBufferS=
ize,"cArtMap::Decode_C",miID);
-								++X;
-							}
-						}
-					}
-				}
-			}
-		}
-	};
-	=

-	/// abstract base class
-	class cArtMapLoader : public Lugre::cSmartPointable { public :
-		virtual	cArtMap*	GetArtMap	(const int iID) =3D 0; ///< result of Get is =
only valid until next Get call
-		virtual unsigned int	GetCount	() =3D 0;	///< number of artmaps
-	};
-	=

-	/// loads complete file into one big buffer
-	class cArtMapLoader_IndexedFullFile : public cArtMapLoader, public cIndex=
edRawDataLoader_IndexedFullFile<cArtMap> { public :
-		cArtMapLoader_IndexedFullFile	(const char* szIndexFile,const char* szDat=
aFile);
-		virtual	cArtMap*	GetArtMap	(const int iID) ; ///< result of Get is only =
valid until next Get call
-		virtual unsigned int	GetCount	();	///< number of artmaps
-	};
-	=

-	/// loads data only on demand
-	class cArtMapLoader_IndexedOnDemand : public cArtMapLoader, public cIndex=
edRawDataLoader_IndexedOnDemand<cArtMap> { public :
-		cArtMapLoader_IndexedOnDemand	(const char* szIndexFile,const char* szDat=
aFile);
-		virtual	cArtMap*	GetArtMap	(const int iID) ; ///< result of Get is only =
valid until next Get call
-		virtual unsigned int	GetCount	();	///< number of artmaps
-	};
-	=

-	=

-// ***** ***** ***** ***** ***** multi loader
-
-	/// abstract base class
-	class cMultiLoader : public Lugre::cSmartPointable { public :
-		virtual	unsigned int	CountMultiParts	(const int iID) =3D 0; ///< number =
of parts the multi iID has
-		virtual	RawMultiPart*	GetMultiParts	(const int iID) =3D 0; ///< points t=
o the startpart of the multi iID, from this CountMultiParts(iID) parts valid
-	};
-	=

-	/// loads complete file into one big buffer
-	class cMultiLoader_IndexedFullFile : public cMultiLoader, public cIndexed=
FullFile { public :
-		cMultiLoader_IndexedFullFile	(const char* szIndexFile,const char* szData=
File);
-		virtual	unsigned int	CountMultiParts	(const int iID); ///< number of par=
ts the multi iID has
-		virtual	RawMultiPart*	GetMultiParts	(const int iID); ///< points to the =
startpart of the multi iID, from this CountMultiParts(iID) parts valid
-	};
-	=

-// ***** ***** ***** ***** ***** cGump
-
-	=

-	class cGump : public cIndexedRawData { public :
-		cGump();
-		int	GetWidth	();
-		int	GetHeight	();
-		template <class _T> void Decode(short *pBuffer, const int iPitch, _T& fi=
lter, short* ColorTable) { PROFILE	//< decodes the gump image into a pixelb=
uffer (1short/pixel), pitch=3DLength of a surface scanline in bytes
-			int w =3D GetWidth();
-			int h =3D GetHeight();
-			int	iBufferSize =3D iPitch*GetHeight();
-
-			long *LookupList =3D (long *)mpRawData;
-			char *pStart =3D mpRawData;
-				=

-			for(int Y =3D 0; Y < h; Y++) {
-				int Size;
-				if (Y < h-1) {
-					Size =3D LookupList[Y+1] - LookupList[Y];
-				} else {
-					Size =3D mpRawIndex->miLength / 4 - LookupList[Y];
-				}
-	=

-				int X =3D 0;
-				short *Value	=3D (short *)(pStart + LookupList[Y]*4);
-				short *Run		=3D (short *)(pStart + LookupList[Y]*4 + 2);
-				for(int i =3D 0; i < Size; i++) {
-					if (*Value > 0) {
-						for(int j =3D 0; j < *Run; j++) {
-							SecureWrite( (short *)(((char*)(pBuffer + X)) + Y*iPitch), filter( =
*Value, ColorTable ), pBuffer, iBufferSize, "cGump::Decode", miID );
-							X++;
-						}
-					} else {
-						X +=3D *Run;
-					}
-
-					Value +=3D 2;
-					Run +=3D 2;
-				}
-			}
-		}
-	};
-	=

-	/// abstract base class
-	class cGumpLoader : public Lugre::cSmartPointable { public :
-		virtual	cGump*	GetGump	(const int iID) =3D 0; ///< result of Get is only=
 valid until next Get call
-	};
-	=

-	/// loads complete file into one big buffer
-	class cGumpLoader_IndexedFullFile : public cGumpLoader, public cIndexedRa=
wDataLoader_IndexedFullFile<cGump> { public :
-		cGumpLoader_IndexedFullFile	(const char* szIndexFile,const char* szDataF=
ile);
-		virtual	cGump*	GetGump	(const int iID) ; ///< result of Get is only vali=
d until next Get call
-	};
-	=

-	/// loads data only on demand
-	class cGumpLoader_IndexedOnDemand : public cGumpLoader, public cIndexedRa=
wDataLoader_IndexedOnDemand<cGump> { public :
-		cGumpLoader_IndexedOnDemand	(const char* szIndexFile,const char* szDataF=
ile);
-		virtual	cGump*	GetGump	(const int iID) ; ///< result of Get is only vali=
d until next Get call
-	};
-
-
-// ***** ***** ***** ***** ***** cSound
-
-	=

-	class cSound : public cIndexedRawData { public :
-		cSound();
-		std::string	GetName();	//< soundfile name
-		const char*	GetPCMBuffer();	//< pcm buffer, 16bit mono 22050khz
-		int			GetPCMBufferSize();	//< pcm data size in bytes
-		=

-		// some pcm parameter
-		bool		IsMono();	//< probably everytime true
-		int			GetBitrate();	//< is always 16 in uo
-		int			GetKHz();	//< 22050 in uo
-	};
-	=

-	/// abstract base class
-	class cSoundLoader : public Lugre::cSmartPointable { public :
-		virtual	cSound*	GetSound	(const int iID) =3D 0; ///< result of Get is on=
ly valid until next Get call
-	};
-	=

-	/// loads complete file into one big buffer
-	class cSoundLoader_IndexedFullFile : public cSoundLoader, public cIndexed=
RawDataLoader_IndexedFullFile<cSound> { public :
-		cSoundLoader_IndexedFullFile	(const char* szIndexFile,const char* szData=
File);
-		virtual	cSound*	GetSound	(const int iID) ; ///< result of Get is only va=
lid until next Get call
-	};
-	=

-	/// loads data only on demand
-	class cSoundLoader_IndexedOnDemand : public cSoundLoader, public cIndexed=
RawDataLoader_IndexedOnDemand<cSound> { public :
-		cSoundLoader_IndexedOnDemand	(const char* szIndexFile,const char* szData=
File);
-		virtual	cSound*	GetSound	(const int iID) ; ///< result of Get is only va=
lid until next Get call
-	};
-
-// ***** ***** ***** ***** ***** cAnim
-
-	class cAnim : public cIndexedRawData { =

-		private :
-			uint16 mWidth, mHeight;
-			uint16 mTexWidth, mTexHeight;
-			int16 mCenterX, mCenterY;
-			uint32 mFrames;
-		public :
-			cAnim() : cIndexedRawData( kDataType_Anim ) {
-				mWidth =3D 0;
-				mHeight =3D 0;
-				mTexWidth =3D 0;
-				mTexHeight =3D 0;
-				mCenterX =3D 0;
-				mCenterY =3D 0;
-				mFrames =3D 0;
-			}
-			int	GetWidth () { return mWidth; }
-			int	GetHeight () { return mHeight; }
-			int GetTexWidth () { return mTexWidth; }
-			int GetTexHeight () { return mTexHeight; }
-			int GetCenterX () { return mCenterX; }
-			int GetCenterY () { return mCenterY; }
-			int GetFrames() { return mFrames; }
-			=

-			/// allocates and returns a 16-bit buffer in the pBuffer param, backgro=
und/transparency =3D 0
-			/// bTexSize : if true, output size will be 2^n
-			template <class _T> bool Decode(short* &pBuffer, const int iFrame, _T& =
filter, short* ColorTable,bool bTexSize=3Dtrue) { PROFILE
-				const char*	pMyRawData =3D mpRawData;
-				uint16* Palette =3D (uint16 *)pMyRawData;
-				pMyRawData +=3D 512;
-
-				mFrames =3D *(uint32 *)pMyRawData;
-				pMyRawData +=3D 4;
-
-				uint32* LookupList =3D (uint32 *)pMyRawData;
-				=

-				if (iFrame >=3D mFrames) {
-					return false;
-				}
-
-				pMyRawData +=3D LookupList[ iFrame ] - 4;
-
-				mCenterX =3D *(int16 *)pMyRawData;
-				pMyRawData +=3D 2;
-				mCenterY =3D *(int16 *)pMyRawData;
-				pMyRawData +=3D 2;
-				mWidth =3D *(uint16 *)pMyRawData;
-				pMyRawData +=3D 2;
-				mHeight =3D *(uint16 *)pMyRawData;
-				pMyRawData +=3D 2;
-				=

-				if (bTexSize) {
-					mTexWidth =3D 1;
-					while (mTexWidth < mWidth) {
-						mTexWidth =3D mTexWidth << 1;
-					}
-					mTexHeight =3D 1;
-					while (mTexHeight < mHeight) {
-						mTexHeight =3D mTexHeight << 1;
-					}
-				} else {
-					// for image output when used in a texatlas
-					mTexWidth =3D mWidth;
-					mTexHeight =3D mHeight;
-				}
-
-				pBuffer =3D new short[mTexWidth*mTexHeight];
-				int		iBufferSize =3D 2*mTexWidth*mTexHeight;
-				memset( pBuffer, 0, iBufferSize );
-
-				uint32 Header =3D *(uint32 *)pMyRawData;
-				pMyRawData +=3D 4;
-
-				while (Header !=3D 0x7FFF7FFF) {
-					uint16 xRun =3D Header & 0xFFF;
-					int32 xOffset =3D ( Header >> 22 ) & 1023;
-					int32 yOffset =3D ( Header >> 12 ) & 1023;
-
-					if (xOffset & 0x200) {
-						xOffset =3D xOffset | ( 0xFFFFFFFF - 511 );
-					}
-
-					if (yOffset & 0x200) {
-						yOffset =3D yOffset | ( 0xFFFFFFFF - 511 );
-					}
-
-					int16 PX =3D xOffset + mCenterX;
-					int16 PY =3D yOffset + mCenterY + mHeight;
-
-					unsigned char* RunPixels =3D (unsigned char*)pMyRawData;
-					pMyRawData +=3D xRun;
-
-					for ( int k=3D0; k < xRun; k++ ) {
-						if ( ((PX+k) >=3D 0) && (PY >=3D 0) && ((PX+k) < mTexWidth) && (PY <=
 mTexHeight) ) {
-							SecureWrite(&pBuffer[ PY*mTexWidth + PX + k ],filter( Palette[ RunP=
ixels[k] ], ColorTable ),pBuffer,iBufferSize,"cAnim::Decode",miID);
-							//SecureWrite(&pBuffer[ PY*mTexWidth + PX + k ],0x1F,pBuffer,iBuffe=
rSize,"cAnim::Decode",miID);
-						}
-					}
-
-					Header =3D *(uint32 *)pMyRawData;
-					pMyRawData +=3D 4;
-				}
-				=

-				return true;
-			}
-	};
-	=

-	/// abstract base class
-	class cAnimLoader : public Lugre::cSmartPointable { public :
-		int mHighDetailed;
-		int mLowDetailed;
-		cAnimLoader (const int iHighDetailed, const int iLowDetailed) {};
-		virtual	cAnim*	GetAnim	(const int iID) =3D 0; ///< result of Get is only=
 valid until next Get call
-	};
-	=

-	/// loads complete file into one big buffer
-	class cAnimLoader_IndexedFullFile : public cAnimLoader, public cIndexedRa=
wDataLoader_IndexedFullFile<cAnim> { public :
-		cAnimLoader_IndexedFullFile	(const int iHighDetailed, const int iLowDeta=
iled, const char* szIndexFile, const char* szDataFile);
-		virtual	cAnim*	GetAnim	(const int iID) ; ///< result of Get is only vali=
d until next Get call
-	};
-	=

-	/// loads data only on demand
-	class cAnimLoader_IndexedOnDemand : public cAnimLoader, public cIndexedRa=
wDataLoader_IndexedOnDemand<cAnim> { public :
-		cAnimLoader_IndexedOnDemand	(const int iHighDetailed, const int iLowDeta=
iled, const char* szIndexFile, const char* szDataFile);
-		virtual	cAnim*	GetAnim	(const int iID) ; ///< result of Get is only vali=
d until next Get call
-	};
-
-// ***** ***** ***** ***** ***** cLight
-
-class cLight : public cIndexedRawData { public :
-		cLight();
-		int	GetWidth	();
-		int	GetHeight	();
-		template <class _T> void Decode( short *pBuffer, _T& filter, short* Colo=
rTable ) { PROFILE
-			int w =3D GetWidth();
-			int h =3D GetHeight();
-			for (int y=3D0;y<w;++y)
-				for (int x=3D0;x<w;++x) {
-					char color =3D *mpRawData;
-					*pBuffer =3D 0x8000 + (color << 10) + (color << 5) + color;
-
-					mpRawData++;
-					pBuffer++;
-				}
-		}
-	};
-	=

-	/// abstract base class
-	class cLightLoader : public Lugre::cSmartPointable { public :
-		virtual	cLight*		GetLight	(const int iID) =3D 0; ///< result of Get is o=
nly valid until next Get call
-	};
-	=

-	/// loads complete file into one big buffer
-	class cLightLoader_IndexedFullFile : public cLightLoader, public cIndexed=
RawDataLoader_IndexedFullFile<cLight> { public :
-		cLightLoader_IndexedFullFile	(const char* szIndexFile,const char* szData=
File);
-		virtual	cLight*		GetLight	(const int iID); ///< result of Get is only va=
lid until next Get call
-	};
-
-#ifdef WIN32
-#pragma pack(pop)
-#endif
+#include "data_indexed.h"
+#include "data_mapinfo.h"
+#include "data_lookup.h"
+#include "data_staticblock.h"
+#include "data_groundblock.h"
+#include "data_radar.h"
+#include "data_tiletype.h"
+#include "data_multi.h"
+#include "data_hue.h"
+#include "data_artmap.h"
+#include "data_texmap.h"
+#include "data_gump.h"
+#include "data_anim.h"
+#include "data_font.h"
+#include "data_light.h"
+#include "data_sound.h"
 =

 =

 #endif

Modified: trunk/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data.cpp (original)
+++ trunk/src/data.cpp Fri May  9 19:51:14 2008
@@ -33,77 +33,6 @@
 texmaps : collect for big multitile terrain texture ? highres textures ?
 */
 =

-/** TODO : doxygen me
-	UO Data Loaders
-
-	in standard UO there are 5 maps/worlds numbered 0-4, there size was hardc=
oded in UO and is stored in data/xml/Maps.xml in iris
-
-	# ground data (groundTileTypeID+z) is stored in map*.mul where *=3Dmapnum=
 , they are organized in Blocks of 8x8 ground-tiles
-
-	# radarcolor is stored in radarcol.mul, assigns a 16 bit color for every =
groundTileTypeID (<0x00004000) to be displayed on worldmap or so
-
-	# tileType data is stored in tiledata.mul : flags, id_override for texture
-
-	# Art means 2D graphics, most in iso perspektive, data comes from artidx.=
mul and art.mul
-	used for both iso-ground tiles and 2d gfx for statics, art-index =3D tile=
TypeIndex
-
-	# textures are mainly used for ground tiles, data comes from texidx.mul a=
nd texmaps.mul
-	art-index =3D tileTypeIndex, if not overridden by id_override in tileType=
 (tiledata.mul)
-	only two resolutions are possible, both are quite low  : (myRawIndex.miEx=
tra=3D=3D1)?128:64
-	TODO : iris has highres textures, ask science where they are stored
-	TODO : to display a full high-res texture on a single tile looks bad, =

-		find a way to distribute them across multiple tiles without loosing too =
much performance... =

-		maybe different drawing options, that the user can choose from ?
-
-	in UO there are "statics" and "dynamics",
-	"statics" are things that are (usually) unmovable : walls, trees, etc
-	"dynamics" can be interacted with, e.g. doors
-	While "dynamics" are transmitted from the server, "statics" are loaded fr=
om the client data.
-
-	# statics (staticTypeID,x,y,z) are stored in staidx*.mul and statics*.mul=
 where *=3Dmapnum
-	as there can be any number of statics per block (8x8 tiles), an index fil=
e (staidx*.mul) is used, =

-	which stores offset and length(bytes) of the actual static data in the st=
atics*.mul file.
-	There is one index entry per block(8x8 tiles), which is equivalent to a B=
lock of ground tiles.
-
-	# staticType : model data comes from iris/data/models.uim and models-patc=
hinfo.xml
-	Iris artists have modelled a vast amount of statics in 3D to be used inst=
ead of the 2D tilegfx from uo.
-	TODO ... irisedit ... textures, materials, ... own format ....  import fr=
om 3dsmax format....
-	iris.imc --optimize-- : models.uim, models_patchinfo.xml
-
-	# todo ... chars,clothes,weapons : granny models von AOS, loaded from uo =
dir
-
-	universal editor for uo files : mulpatcher : http://varan.uodev.de
-
-	# gumps =3D dialogs : iris layout comes from .gfm files
-	# verdata is used for patch-infos (override data in other mul files, deta=
ils unknown..)
-
-	animgumps (anim*.mul?)  : paperdoll, trading ...
-	nonanimgumps : buttons, dialog-background
-
-	# multis are things like houses (and ships?) that consist of grouped stat=
ics (multi.idx,multi.mul), ask varan
-
-	#hues : color-palette based replacement for gray values for fonts, clothe=
s, chars, statics....
-
-	// hues : coloring all sorts of things
-	// animgumps : paperdoll, trading ...
-	// nonanimgumps : buttons, dialog-background
-	// stitchin  : clothes replace modelpart...
-	// cliloc : language localisation
-	// verdata : patch-infos
-	// iris.imc --optimize-- : models.uim, models_patchinfo.xml
-	// gump layouts : .gfm
-	=

-	# raw data pointers
-	Classes like cGroundBlock contain pointers to raw data like "RawGroundBlo=
ck* mpRawGroundBlock;", thei constructors usually set these pointers to zer=
o.
-	The classes don't own the memory pointed to by these, as it is usually al=
located centrally by one of the loaders for better performance.
-	Also the don't try to release the memory pointed to.
-	Classes that are interesting for full-file loadding, like cGroundBlock, s=
houldn't be used directly, =

-	Please use them only trough loaders like cGroundBlockLoader_FullFile, who=
 do all the memory management for them.
-
-	// get length of file:
-  is.seekg (0, ios::end);
-  length =3D is.tellg();
-*/
 =

 // ***** ***** ***** ***** ***** utils =

 =

@@ -150,6 +79,17 @@
 		: mIndexFile(szIndexFile), cFullFileLoader(szDataFile) {}
 =

 	=

+
+// ***** ***** ***** ***** ***** cIndexedRawData
+
+
+cIndexedRawData::cIndexedRawData 	(const eDataType iDataType) : miDataType=
(iDataType), mpRawIndex(0), mpRawData(0) {}
+
+
+
+
+
+	=

 // ***** ***** ***** ***** ***** Endian
 =

 	=

@@ -222,782 +162,86 @@
 }
 */
 =

-// ***** ***** ***** ***** ***** cMapInfo
-
-
-/// loads data/xml/MapInfo.xml
-bool	cMapInfo::Load	(const int iMapNum,const char* szFile) { PROFILE
-	miFogR =3D miFogG =3D miFogB =3D 255;
-	miBaseID =3D -1;
-	=

-	// structure is like this :
-	/*
-	<MAPS>
-	 <MAP>
-	  <NAME>Felucca</NAME>
-	  <ID>1</ID>
-	  <WIDTH>896</WIDTH>
-	  <HEIGHT>512</HEIGHT>
-	  <BASE_ID>0</BASE_ID>
-	  <SKYBOX>./textures/skybox/darksun</SKYBOX>
-	  <FOG_COLOR red=3D"97" green=3D"76" blue=3D"33"/>
-	 </MAP>
-	 ...
-	</MAPS>
-	*/
-	=

-	TiXmlDocument	doc;
-	if (!doc.LoadFile(szFile)) { printf("cMapInfo::Load(%d,%s) : file not fou=
nd\n",iMapNum,szFile); return false; }
-	=

-	TiXmlHandle		mapHandle =3D TiXmlHandle(&doc).FirstChild("MAPS").Child("MA=
P",iMapNum);
-	=

-	if (!mapHandle.Element()) { printf("cMapInfo::Load(%d,%s) : MapTag not fo=
und\n",iMapNum,szFile); return false; }
-	=

-	msName 		=3D 		GetTiXmlHandleText(mapHandle.FirstChild("NAME"));
-	msSkyBox 	=3D 		GetTiXmlHandleText(mapHandle.FirstChild("SKYBOX"));
-	miID 		=3D atoi(	GetTiXmlHandleText(mapHandle.FirstChild("ID"),"-1"));
-	miBaseID 	=3D atoi(	GetTiXmlHandleText(mapHandle.FirstChild("BASE_ID"),"-=
1"));
-	miWidth 	=3D atoi(	GetTiXmlHandleText(mapHandle.FirstChild("WIDTH"),"0"));
-	miHeight 	=3D atoi(	GetTiXmlHandleText(mapHandle.FirstChild("HEIGHT"),"0"=
));
-	miFogR		=3D atoi( GetTiXmlHandleAttr(mapHandle.FirstChild("FOG_COLOR"),"r=
ed","255"));
-	miFogG		=3D atoi( GetTiXmlHandleAttr(mapHandle.FirstChild("FOG_COLOR"),"g=
reen","255"));
-	miFogB		=3D atoi( GetTiXmlHandleAttr(mapHandle.FirstChild("FOG_COLOR"),"b=
lue","255"));
-	if (iMapNum !=3D miID) { printf("cMapInfo::Load(%d,%s) : id mismatch : %d=
\n",iMapNum,szFile,miID); return false; }
-	return true;
-}
-
-void	cMapInfo::Print	() { PROFILE
-	printf("id=3D%d,w=3D%d,h=3D%d,name=3D%s,sky=3D%s,baseid=3D%d,fogrgb(%d,%d=
,%d)\n",miID,miWidth,miHeight,msName.c_str(),msSkyBox.c_str(),miBaseID,miFo=
gR,miFogG,miFogB);
-}
-
-
-// ***** ***** ***** ***** ***** GroundBlock
-
-
-cGroundBlock::cGroundBlock				() : mpRawGroundBlock(0) {}
-
-cGroundBlockLoader::cGroundBlockLoader	(const int iMapH) : miMapH(iMapH), =
miMapW(0)  {}
-	=

-	=

-// ***** ***** ***** ***** ***** cGroundBlockLoader_Dummy
-	=

-cGroundBlockLoader_Dummy::cGroundBlockLoader_Dummy			(const int iTileType,=
const int iZ) : cGroundBlockLoader(0) {
-	mLastGroundBlock.mpRawGroundBlock =3D &mRawGroundBlock;
-	for (int i=3D0;i<8;++i) for (int j=3D0;j<8;++j) {
-		int ibow =3D (i<4)?i:4;
-		int jbow =3D (j<4)?j:4; // could be used for a nice z-hill
-		mRawGroundBlock.mTiles[i][j].miTileType =3D iTileType;
-		mRawGroundBlock.mTiles[i][j].miZ =3D iZ;
-	}
-	//for (int i=3D0;i<8;++i) mRawGroundBlock.mTiles[i][0].miZ =3D 3;
-}
-
-cGroundBlock*	cGroundBlockLoader_Dummy::GetGroundBlock	(const int iX,const=
 int iY) {
-	return &mLastGroundBlock;
-}
-	=

-// ***** ***** ***** ***** ***** cGroundBlockLoader_OnDemand
-
-/* TODO both (full,ondemand) loader use almost the same patch code, this c=
ould be moved to a common base class */
-
-	=

-cGroundBlockLoader_OnDemand::cGroundBlockLoader_OnDemand	(const int iMapH,=
const char* szFile, const char *szDiffLookup, const char *szDiffData)
-	: mFileStream(szFile,std::ios::in | std::ios::binary), cGroundBlockLoader=
(iMapH), mpDiffLookupFile(0), mpDiffLoader(0) { PROFILE
-	if (!mFileStream) throw FileNotFoundException(szFile);
-	mFileStream.seekg(0, std::ios::end);
-	miFileSize =3D mFileStream.tellg();
-	miMapW =3D cGroundBlock::CalcMapW(miMapH,miFileSize);
-	mLastGroundBlock.mpRawGroundBlock =3D &mLastRawGroundBlock;
-
-	// use diff file? (if all are present)
-	if(szDiffLookup && szDiffData){
-		// create lookup file
-		mpDiffLookupFile =3D new cLookupFile(szDiffLookup);
-		// and patch data file
-		mpDiffLoader =3D new cGroundBlockLoader_OnDemand(iMapH,szDiffData);
-	}
-}
-		=

-/// WARNING this is only an internal unpatched load call
-cGroundBlock*	cGroundBlockLoader_OnDemand::GetGroundBlock	(const int iBloc=
kNumber){ PROFILE
-	// normal unpatched data
-	mFileStream.seekg(cGroundBlock::GetRawOffset(iBlockNumber), std::ios::beg=
);
-	mFileStream.read((char*)&mLastRawGroundBlock,cGroundBlock::GetRawLength()=
);
-	// and return the unpatched block, you also need to set the position	=

-	return &mLastGroundBlock;
-}
-
-cGroundBlock*	cGroundBlockLoader_OnDemand::GetGroundBlock	(const int iX,co=
nst int iY) { PROFILE
-	if ( ( iX >=3D miMapW ) || ( iY >=3D miMapH ) || ( iX < 0 ) || ( iY < 0 )=
) return 0;
-	=

-	// calculate block number
-	int index =3D cGroundBlock::GetBlockNumber(iX,iY,miMapH);
-	=

-	// apply diff patch?
-	if(mpDiffLookupFile && mpDiffLoader && mpDiffLookupFile->Contains(index)){
-		// yes, apply a patch
-		=

-		// lookup new index
-		index =3D mpDiffLookupFile->Lookup(index);
-		=

-		// and use patch file's loader
-		cGroundBlock*	block =3D mpDiffLoader->GetGroundBlock(index);
-		// keep original x,y values
-		block->miX =3D iX;
-		block->miY =3D iY;
-		// and return the patched block
-		return block;
-	} else {
-		// normal unpatched data
-		mFileStream.seekg(cGroundBlock::GetRawOffset(iX,iY,miMapH), std::ios::be=
g);
-		mFileStream.read((char*)&mLastRawGroundBlock,cGroundBlock::GetRawLength(=
));
-		// store position
-		mLastGroundBlock.miX =3D iX;
-		mLastGroundBlock.miY =3D iY;
-		// and return the unpatched block
-		return &mLastGroundBlock;
-	}
-}
-
-cGroundBlockLoader_OnDemand::~cGroundBlockLoader_OnDemand () { PROFILE
-	// kill diff file stuff if present
-	if(mpDiffLookupFile)delete mpDiffLookupFile;
-	if(mpDiffLoader)delete mpDiffLoader;
-}
-
-// ***** ***** ***** ***** ***** cGroundBlockLoader_FullFile
-
-
-cGroundBlockLoader_FullFile::cGroundBlockLoader_FullFile	(const int iMapH,=
const char* szFile, const char *szDiffLookup, const char *szDiffData)
-	: cGroundBlockLoader(iMapH), cFullFileLoader(szFile), mpDiffLookupFile(0)=
, mpDiffLoader(0) { PROFILE
-	miMapW =3D cGroundBlock::CalcMapW(miMapH,miFullFileSize);
-		=

-	// use diff file? (if all are present)
-	if(szDiffLookup && szDiffData){
-		// create lookup file
-		mpDiffLookupFile =3D new cLookupFile(szDiffLookup);
-		// and patch data file
-		mpDiffLoader =3D new cGroundBlockLoader_FullFile(iMapH,szDiffData);
-	}
-}
-
-/// WARNING this is only an internal unpatched load call
-cGroundBlock*	cGroundBlockLoader_FullFile::GetGroundBlock	(const int iBloc=
kNumber){ PROFILE
-	// normal unpatched data
-	mLastGroundBlock.mpRawGroundBlock =3D (RawGroundBlock*)(mpFullFileBuffer =
+ cGroundBlock::GetRawOffset(iBlockNumber));
-	// and return the unpatched block, you also need to set the position	=

-	return &mLastGroundBlock;
-}
-
-cGroundBlock*	cGroundBlockLoader_FullFile::GetGroundBlock	(const int iX,co=
nst int iY) { PROFILE
-	if ( ( iX >=3D miMapW ) || ( iY >=3D miMapH ) || ( iX < 0 ) || ( iY < 0 )=
) return 0;
-
-	// calculate block number
-	int index =3D cGroundBlock::GetBlockNumber(iX,iY,miMapH);
-	=

-	// apply diff patch?
-	if(mpDiffLookupFile && mpDiffLoader && mpDiffLookupFile->Contains(index)){
-		// yes, apply a patch
-		=

-		// lookup new index
-		index =3D mpDiffLookupFile->Lookup(index);
-		=

-		// and use patch file's loader
-		cGroundBlock*	block =3D mpDiffLoader->GetGroundBlock(index);
-		// keep original x,y values
-		block->miX =3D iX;
-		block->miY =3D iY;
-		// and return the patched block
-		return block;
-	} else {
-		// normal unpatched data
-		mLastGroundBlock.mpRawGroundBlock =3D (RawGroundBlock*)(mpFullFileBuffer=
 + cGroundBlock::GetRawOffset(iX,iY,miMapH));
-		// store position
-		mLastGroundBlock.miX =3D iX;
-		mLastGroundBlock.miY =3D iY;
-		=

-		return &mLastGroundBlock;
-	}
-
-}
-
-cGroundBlockLoader_FullFile::~cGroundBlockLoader_FullFile () { PROFILE
-	// kill diff file stuff if present
-	if(mpDiffLookupFile)delete mpDiffLookupFile;
-	if(mpDiffLoader)delete mpDiffLoader;
-}
-
-
-// ***** ***** ***** ***** ***** StaticBlock
-
-
-cStaticBlock::cStaticBlock	() : mpRawIndex(0), mpRawStaticList(0) {}
-	=

-cStaticBlockLoader::cStaticBlockLoader	(const int iMapH) : miMapH(iMapH), =
miMapW(0)  {}
-	=

-
-// ***** ***** ***** ***** ***** cStaticBlockLoader_IndexedFullFile
-
-cStaticBlockLoader_IndexedFullFile::~cStaticBlockLoader_IndexedFullFile ()=
{ PROFILE
-	// kill diff file stuff if present
-	if(mpDiffLookupFile)delete mpDiffLookupFile;
-	if(mpDiffIndexedFullFile)delete mpDiffIndexedFullFile;
-}
-
-cStaticBlockLoader_IndexedFullFile::cStaticBlockLoader_IndexedFullFile	(co=
nst int iMapH,const char* szIndexFile,const char* szDataFile, const char *s=
zDiffLookup, const char *szDiffIndex, const char *szDiffData)
-	: cStaticBlockLoader(iMapH), cIndexedFullFile(szIndexFile,szDataFile), mp=
DiffLookupFile(0), mpDiffIndexedFullFile(0) { PROFILE
-	miMapW =3D cStaticBlock::CalcMapW(miMapH,mIndexFile.miFullFileSize);
-	printf("cStaticBlockLoader_IndexedFullFile miMapW=3D%d\n",miMapW);
-	=

-	// use diff file? (if all are present)
-	if(szDiffLookup && szDiffIndex && szDiffData){
-		// create lookup file
-		mpDiffLookupFile =3D new cLookupFile(szDiffLookup);
-		// and patch data file
-		mpDiffIndexedFullFile =3D new cIndexedFullFile(szDiffIndex,szDiffData);
-	}
-}
-
-cStaticBlock*	cStaticBlockLoader_IndexedFullFile::GetStaticBlock		(const i=
nt iX,const int iY) { PROFILE
-	if ( ( iX >=3D miMapW ) || ( iY >=3D miMapH ) || ( iX < 0 ) || ( iY < 0 )=
) return 0;
-	int index =3D cStaticBlock::BlockCoordsToIndex(iX,iY,miMapH);
-
-	// apply diff patch?
-	if(mpDiffLookupFile && mpDiffIndexedFullFile && mpDiffLookupFile->Contain=
s(index)){
-		// yes, apply a patch
-		=

-		// lookup new index
-		index =3D mpDiffLookupFile->Lookup(index);
-		=

-		RawIndex* pRawIndex =3D mpDiffIndexedFullFile->mIndexFile.GetRawIndex(in=
dex);
-		if (!IsIndexValid(pRawIndex)) return 0;
-		pRawIndex->miOffset &=3D 0x0fffFFFF; // avoid strange uo flags
-		pRawIndex->miLength &=3D 0x0fffFFFF; // avoid strange uo flags
-		if (pRawIndex->miOffset + pRawIndex->miLength > mpDiffIndexedFullFile->m=
iFullFileSize) return 0; // index must be valid, and must point to a valid =
rawblock
-		mLastStaticBlock.mpRawIndex =3D pRawIndex;
-		mLastStaticBlock.mpRawStaticList =3D (RawStatic*)(mpDiffIndexedFullFile-=
>mpFullFileBuffer + pRawIndex->miOffset);
-		mLastStaticBlock.miX =3D iX;
-		mLastStaticBlock.miY =3D iY;
-	} else {
-		// normal unpatched data
-		RawIndex* pRawIndex =3D mIndexFile.GetRawIndex(index);
-		if (!IsIndexValid(pRawIndex)) return 0;
-		pRawIndex->miOffset &=3D 0x0fffFFFF; // avoid strange uo flags
-		pRawIndex->miLength &=3D 0x0fffFFFF; // avoid strange uo flags
-		if (pRawIndex->miOffset + pRawIndex->miLength > miFullFileSize) return 0=
; // index must be valid, and must point to a valid rawblock
-		mLastStaticBlock.mpRawIndex =3D pRawIndex;
-		mLastStaticBlock.mpRawStaticList =3D (RawStatic*)(mpFullFileBuffer + pRa=
wIndex->miOffset);
-		mLastStaticBlock.miX =3D iX;
-		mLastStaticBlock.miY =3D iY;
-	}
-	return &mLastStaticBlock;
-}
-	=

-
-// ***** ***** ***** ***** ***** cRadarColorLoader
-
-
-cRadarColorLoader::cRadarColorLoader	(const char* szFile) : cFullFileLoade=
r(szFile) { PROFILE
-	int i; for (i=3D0;i<miFullFileSize/2;++i) ((short*)mpFullFileBuffer)[i] |=
=3D 0x8000; // set unused bit, to have correct alpha (opaque) for Ogre::PF_=
A1R5G5B5
-}
-
-
-// ***** ***** ***** ***** ***** TileTypes
-
-
-cGroundTileType::cGroundTileType	() : mpRawGroundTileType(0) {}
-cStaticTileType::cStaticTileType	() : mpRawStaticTileType(0) {}
-	=

-
-// ***** ***** ***** ***** ***** cTileTypeLoader_FullFile
-
-
-cTileTypeLoader_FullFile::cTileTypeLoader_FullFile		(const char* szFile) :=
 cFullFileLoader(szFile) {}
-	=

-cGroundTileType*	cTileTypeLoader_FullFile::GetGroundTileType	(const int iI=
D) { PROFILE
-	if (!cGroundTileType::IsValidID(iID)) return 0; //  upper bounds check fo=
r id is within IsValidID() for ground types
-	mLastGroundTileType.mpRawGroundTileType =3D (RawGroundTileType*)(mpFullFi=
leBuffer + cGroundTileType::GetRawOffset(iID));
-	mLastGroundTileType.miID =3D iID;
-	return &mLastGroundTileType;
-}
-
-int					cTileTypeLoader_FullFile::GetEndID			() { PROFILE
-	return cStaticTileType::GetEndID(miFullFileSize);
-}
-
-cStaticTileType*	cTileTypeLoader_FullFile::GetStaticTileType	(const int iI=
D) { PROFILE
-	if (!cStaticTileType::IsValidID(iID)) return 0;
-	if (cStaticTileType::GetRawOffset(iID) + cStaticTileType::GetRawLength() =
> miFullFileSize) return 0;
-	mLastStaticTileType.mpRawStaticTileType =3D (RawStaticTileType*)(mpFullFi=
leBuffer + cStaticTileType::GetRawOffset(iID));
-	mLastStaticTileType.miID =3D iID;
-	return &mLastStaticTileType;
-}
-
-
-// ***** ***** ***** ***** ***** cAnimDataLoader_FullFile
-
-cAnimDataLoader::cAnimDataLoader		(const char* szFile) : cFullFileLoader(s=
zFile) {}
-
-RawAnimData*	cAnimDataLoader::GetAnimDataType(const int iID) { PROFILE
-	mpLastAnimData =3D (RawAnimData*)(mpFullFileBuffer + (iID/8)*(4+8*68) + 4=
 + (iID%8)*68);
-	return mpLastAnimData;
-}
-
-
-// ***** ***** ***** ***** ***** cIndexedRawData
-
-
-cIndexedRawData::cIndexedRawData 	(const eDataType iDataType) : miDataType=
(iDataType), mpRawIndex(0), mpRawData(0) {}
-
-
-// ***** ***** ***** ***** ***** cTexMap
-
-
-cTexMap::cTexMap					() : cIndexedRawData(kDataType_TexMap) {}
-	=

-cTexMapLoader_IndexedFullFile::cTexMapLoader_IndexedFullFile	(const char* =
szIndexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedFullFile<cTexMap>(szIndexFile,szDataFile) =
{}
-
-cTexMap*	cTexMapLoader_IndexedFullFile::GetTexMap			(const int iID) { PROF=
ILE return GetChunk(iID); }
-
-cTexMapLoader_IndexedOnDemand::cTexMapLoader_IndexedOnDemand	(const char* =
szIndexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedOnDemand<cTexMap>(szIndexFile,szDataFile) =
{}
-
-cTexMap*	cTexMapLoader_IndexedOnDemand::GetTexMap			(const int iID) { PROF=
ILE return GetChunk(iID); }
-
-
-// ***** ***** ***** ***** ***** cGump
-
-
-cGump::cGump					() : cIndexedRawData(kDataType_Gump) {}
-
-cGumpLoader_IndexedFullFile::cGumpLoader_IndexedFullFile	(const char* szIn=
dexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedFullFile<cGump>(szIndexFile,szDataFile) {}
-
-cGump*	cGumpLoader_IndexedFullFile::GetGump				(const int iID) { PROFILE r=
eturn GetChunk(iID); }
-
-cGumpLoader_IndexedOnDemand::cGumpLoader_IndexedOnDemand	(const char* szIn=
dexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedOnDemand<cGump>(szIndexFile,szDataFile) {}
-
-cGump*	cGumpLoader_IndexedOnDemand::GetGump				(const int iID) { PROFILE r=
eturn GetChunk(iID); }
-
-int	cGump::GetWidth	(){
-				return ((mpRawIndex->miExtra >> 16 ) & 0xFFFF);
-}
-
-int	cGump::GetHeight	(){
-				return (mpRawIndex->miExtra & 0xFFFF);
-}
-
-
-// ***** ***** ***** ***** ***** cHue
-
-
-cHue::cHue () : mpRawData(0) {}
-
-short *cHue::GetColors() { return (short *)(mpRawData); }
-
-std::string cHue::GetName() { return std::string(mpRawData+64+4,20); }
-
-
-cHueLoader	::cHueLoader	(const char* szDataFile) : cFullFileLoader(szDataF=
ile) {}
-	=

-int		cHueLoader::GetMaxHueID		() { =

-	// miFullFileSize =3D 265500
-	int eightblocks =3D (miFullFileSize - 4) / 708; // (265500 - 4) / 708 =3D=
 374.99...
-	int singles =3D ((miFullFileSize - 4) - 708*eightblocks) / 88;// ((265500=
 - 4) - 708*374)/ 88 =3D 704 / 88 =3D 8
-	return eightblocks*8 + singles; // 374*8 + 8 =3D 3000
-}
-
-cHue*	cHueLoader	::GetHue	(const int iID){
-	if (iID < 0 || iID >=3D GetMaxHueID()) return GetHue(0); // illegal hue a=
sked
-	mLastHue.miID =3D iID;
-	mLastHue.mpRawData =3D mpFullFileBuffer+((((8*88)+4)*(iID/8)) + 4 + (88*(=
iID%8)));
-	return &mLastHue;
-}
-
-
-
-// ***** ***** ***** ***** ***** cArtMap
-
-
-
-cArtMap::cArtMap					() : cIndexedRawData(kDataType_Art) {}
-
-cArtMapLoader_IndexedFullFile::cArtMapLoader_IndexedFullFile	(const char* =
szIndexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedFullFile<cArtMap>(szIndexFile,szDataFile) =
{}
-
-cArtMap*	cArtMapLoader_IndexedFullFile::GetArtMap			(const int iID) { PROF=
ILE return GetChunk(iID); }
-
-cArtMapLoader_IndexedOnDemand::cArtMapLoader_IndexedOnDemand	(const char* =
szIndexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedOnDemand<cArtMap>(szIndexFile,szDataFile) =
{}
-
-cArtMap*	cArtMapLoader_IndexedOnDemand::GetArtMap			(const int iID) { PROF=
ILE return GetChunk(iID); }
-
-unsigned int	cArtMapLoader_IndexedFullFile::GetCount			() { PROFILE return=
 mIndexFile.miFullFileSize / 12; }
-
-unsigned int	cArtMapLoader_IndexedOnDemand::GetCount			() { PROFILE return=
 mIndexFile.miFullFileSize / 12; }
-
-	/*
-	if( ((uint32 *)mpRawData)[0] < 0xFFFF )return 44;	//first DWORD defines t=
he art type, <0xFFFF means a raw art
-	else return ((uint32 *)mpRawData)[2];	//and the other is a run art with d=
ynamic size
-	*/
-
-int	cArtMap::GetWidth	(){
-	if (miID < 0x4000) return 44;
-	else return ((short *)mpRawData)[2];
-}
-
-int	cArtMap::GetHeight	() {
-	if(miID < 0x4000)return 44;
-	else return ((short *)mpRawData)[3];
-}
-
-void	cArtMap::CalcVisibleAABB(int& minx, int& miny, int& maxx, int& maxy) =
{	=

-	// TODO this returns strange results so this functionality is implemented=
 via bitmasks
-	=

-	// read the size
-	int w =3D GetWidth();
-	int h =3D GetHeight();
-	short *pBuffer =3D new short[w*h];
-	cIdentityFilter Filter;
-	Decode(pBuffer,w*sizeof(short),Filter,0);
-	=

-	bool found =3D false;
-	=

-	int offset;
-	// this ignores and 1px border because of broken images or strange data i=
n the border
-	for(int y=3D1;y<h-2;++y){
-		for(int x=3D1;x<w-2;++x){
-			offset =3D y*w+x;
-			if(pBuffer[offset]){
-				if(!found){
-					minx =3D x;
-					maxx =3D x;
-					miny =3D y;
-					maxy =3D y;
-					found =3D true;
-				} else {
-					minx =3D mymin(x,minx);
-					maxx =3D mymax(x,maxx);
-					miny =3D mymin(y,miny);
-					maxy =3D mymax(y,maxy);
-				}
-			}
-		}
-	}
-
-	delete [] pBuffer;
-}
-
-void	cArtMap::SearchCursorHotspot		(int& iX,int& iY) { PROFILE
-	// read the size
-	int w =3D GetWidth();
-	int h =3D GetHeight();
-	iX =3D w/2;
-	iY =3D h/2;
-	// find the hotspot
-	int a,b;
-	short *pBuffer =3D new short[w*h];
-	cIdentityFilter Filter;
-	Decode(pBuffer,w*sizeof(short),Filter,0);
-	// x axis
-	for(int i=3D0;i<w;++i){
-		// neightbours
-		a =3D i-1;b =3D i+1;
-		if(a<0)a+=3Dw;
-		if(a>=3Dw)a-=3Dw;
-		if(b<0)b+=3Dw;
-		if(b>=3Dw)b-=3Dw;
-		=

-		if(pBuffer[a] !=3D pBuffer[i] && pBuffer[b] !=3D pBuffer[i]){
-			//hotspot found
-			iX =3D i;
-			break;
-		}
-	}
-	// y axis
-	for(int i=3D0;i<h;++i){
-		// neightbours
-		a =3D i-1;b =3D i+1;
-		if(a<0)a+=3Dh;
-		if(a>=3Dh)a-=3Dh;
-		if(b<0)b+=3Dh;
-		if(b>=3Dh)b-=3Dh;
-		=

-		if(pBuffer[w*a] !=3D pBuffer[w*i] && pBuffer[w*b] !=3D pBuffer[w*i]){
-			//hotspot found
-			iY =3D i;
-			break;
-		}
-	}
-	delete[] pBuffer;
-}
-
-// ***** ***** ***** ***** ***** cSound
-
-
-
-cSound::cSound					() : cIndexedRawData(kDataType_Sound) {}
-
-cSoundLoader_IndexedFullFile::cSoundLoader_IndexedFullFile	(const char* sz=
IndexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedFullFile<cSound>(szIndexFile,szDataFile) {}
-
-cSound*	cSoundLoader_IndexedFullFile::GetSound			(const int iID) { PROFILE=
 return GetChunk(iID); }
-
-cSoundLoader_IndexedOnDemand::cSoundLoader_IndexedOnDemand	(const char* sz=
IndexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedOnDemand<cSound>(szIndexFile,szDataFile) {}
-
-cSound*	cSoundLoader_IndexedOnDemand::GetSound			(const int iID) { PROFILE=
 return GetChunk(iID); }
-
-std::string	cSound::GetName(){return std::string(mpRawData,16);}
-const char*	cSound::GetPCMBuffer(){return mpRawData + 16 + 16;}
-int			cSound::GetPCMBufferSize(){return mpRawIndex->miLength - 32;}
-bool		cSound::IsMono(){return true;}
-int			cSound::GetBitrate(){return 16;}
-int			cSound::GetKHz(){return 22050;}
-
-// ***** ***** ***** ***** ***** cMultiLoader_IndexedFullFile
-
-cMultiLoader_IndexedFullFile::cMultiLoader_IndexedFullFile	(const char* sz=
IndexFile,const char* szDataFile)
-	: cIndexedFullFile(szIndexFile,szDataFile) { PROFILE
-}
-
-unsigned int	cMultiLoader_IndexedFullFile::CountMultiParts	(const int iID)=
{ PROFILE
-	RawIndex *rawIndex =3D mIndexFile.GetRawIndex(iID);
-	if(IsIndexValid(rawIndex))return rawIndex->miLength / sizeof(RawMultiPart=
);
-	else return 0;
-}
-
-RawMultiPart*	cMultiLoader_IndexedFullFile::GetMultiParts	(const int iID){=
 PROFILE
-	RawIndex *rawIndex =3D mIndexFile.GetRawIndex(iID);
-	if(!IsIndexValid(rawIndex))return 0;
-	if(rawIndex->miOffset =3D=3D INDEX_UNDEFINED_OFFSET) { printf("GetMultiPa=
rts failed to load index, undefined offset\n"); return 0; }
-	if(rawIndex)return (RawMultiPart*)(mpFullFileBuffer + rawIndex->miOffset);
-	else return 0;
-}
-
-// ***** ***** ***** ***** ***** cAnim
-
-
-cAnimLoader_IndexedFullFile::cAnimLoader_IndexedFullFile	(const int iHighD=
etailed, const int iLowDetailed, const char* szIndexFile, const char* szDat=
aFile) : cAnimLoader( iHighDetailed, iLowDetailed ), cIndexedRawDataLoader_=
IndexedFullFile<cAnim>(szIndexFile,szDataFile) {
-	mHighDetailed =3D iHighDetailed;
-	mLowDetailed =3D iLowDetailed;
-}
-
-cAnim*	cAnimLoader_IndexedFullFile::GetAnim			(const int iID) { PROFILE re=
turn GetChunk(iID); }
-
-cAnimLoader_IndexedOnDemand::cAnimLoader_IndexedOnDemand	(const int iHighD=
etailed, const int iLowDetailed, const char* szIndexFile, const char* szDat=
aFile) : cAnimLoader( iHighDetailed, iLowDetailed ), cIndexedRawDataLoader_=
IndexedOnDemand<cAnim>(szIndexFile,szDataFile) {
-	mHighDetailed =3D iHighDetailed;
-	mLowDetailed =3D iLowDetailed;
-}
-
-cAnim*	cAnimLoader_IndexedOnDemand::GetAnim			(const int iID) { PROFILE re=
turn GetChunk(iID); }
-
-// ***** ***** ***** ***** ***** cLight
-
-cLight::cLight					() : cIndexedRawData(kDataType_Light) {}
-
-int	cLight::GetWidth	(){
-				return ((mpRawIndex->miExtra >> 16 ) & 0xFFFF);
-}
-
-int	cLight::GetHeight	(){
-				return (mpRawIndex->miExtra & 0xFFFF);
-}
-
-cLightLoader_IndexedFullFile::cLightLoader_IndexedFullFile	(const char* sz=
IndexFile,const char* szDataFile) =

-	: cIndexedRawDataLoader_IndexedFullFile<cLight>(szIndexFile,szDataFile) {}
-
-cLight*	cLightLoader_IndexedFullFile::GetLight				(const int iID) { PROFIL=
E return GetChunk(iID); }
-
-// ***** ***** ***** ***** ***** cLookupFile
-
-cLookupFile::cLookupFile (const char* szFile) {
-	cFullFileLoader loader(szFile);
-	// read the lookuptable and store it in the map
-	if(loader.mpFullFileBuffer){
-		uint32 *buffer =3D (uint32 *)loader.mpFullFileBuffer;
-		// store all id <-> id mappings in the map
-		for(int i =3D 0;i < loader.miFullFileSize / 4; ++i){
-			mLookupTable[buffer[i]] =3D i;
-		}
-	}
-}
-
-const bool cLookupFile::Contains (const uint32 id){
-	return mLookupTable.find(id) !=3D mLookupTable.end();
-}
-
-const uint32 cLookupFile::Lookup (const uint32 id){
-	if(!Contains(id))return 0;
-	return mLookupTable[id];
-}
-
-cLookupFile::~cLookupFile (){
-	=

-}
-
-// ***** ***** ***** ***** ***** cUniFontFileLoader
-
-/*
-fonts.mul  ????????? different format ?
-unifont1.mul
-unifont2.mul
-unifont3.mul
-unifont4.mul
-unifont5.mul
-unifont6.mul
-unifont.mul
+
+
+
+
+
+	=

+// ***** ***** ***** ***** ***** notes
+
+
+/** TODO : doxygen me
+	UO Data Loaders
+
+	in standard UO there are 5 maps/worlds numbered 0-4, there size was hardc=
oded in UO and is stored in data/xml/Maps.xml in iris
+
+	# ground data (groundTileTypeID+z) is stored in map*.mul where *=3Dmapnum=
 , they are organized in Blocks of 8x8 ground-tiles
+
+	# radarcolor is stored in radarcol.mul, assigns a 16 bit color for every =
groundTileTypeID (<0x00004000) to be displayed on worldmap or so
+
+	# tileType data is stored in tiledata.mul : flags, id_override for texture
+
+	# Art means 2D graphics, most in iso perspektive, data comes from artidx.=
mul and art.mul
+	used for both iso-ground tiles and 2d gfx for statics, art-index =3D tile=
TypeIndex
+
+	# textures are mainly used for ground tiles, data comes from texidx.mul a=
nd texmaps.mul
+	art-index =3D tileTypeIndex, if not overridden by id_override in tileType=
 (tiledata.mul)
+	only two resolutions are possible, both are quite low  : (myRawIndex.miEx=
tra=3D=3D1)?128:64
+	TODO : iris has highres textures, ask science where they are stored
+	TODO : to display a full high-res texture on a single tile looks bad, =

+		find a way to distribute them across multiple tiles without loosing too =
much performance... =

+		maybe different drawing options, that the user can choose from ?
+
+	in UO there are "statics" and "dynamics",
+	"statics" are things that are (usually) unmovable : walls, trees, etc
+	"dynamics" can be interacted with, e.g. doors
+	While "dynamics" are transmitted from the server, "statics" are loaded fr=
om the client data.
+
+	# statics (staticTypeID,x,y,z) are stored in staidx*.mul and statics*.mul=
 where *=3Dmapnum
+	as there can be any number of statics per block (8x8 tiles), an index fil=
e (staidx*.mul) is used, =

+	which stores offset and length(bytes) of the actual static data in the st=
atics*.mul file.
+	There is one index entry per block(8x8 tiles), which is equivalent to a B=
lock of ground tiles.
+
+	# staticType : model data comes from iris/data/models.uim and models-patc=
hinfo.xml
+	Iris artists have modelled a vast amount of statics in 3D to be used inst=
ead of the 2D tilegfx from uo.
+	TODO ... irisedit ... textures, materials, ... own format ....  import fr=
om 3dsmax format....
+	iris.imc --optimize-- : models.uim, models_patchinfo.xml
+
+	# todo ... chars,clothes,weapons : granny models von AOS, loaded from uo =
dir
+
+	universal editor for uo files : mulpatcher : http://varan.uodev.de
+
+	# gumps =3D dialogs : iris layout comes from .gfm files
+	# verdata is used for patch-infos (override data in other mul files, deta=
ils unknown..)
+
+	animgumps (anim*.mul?)  : paperdoll, trading ...
+	nonanimgumps : buttons, dialog-background
+
+	# multis are things like houses (and ships?) that consist of grouped stat=
ics (multi.idx,multi.mul), ask varan
+
+	#hues : color-palette based replacement for gray values for fonts, clothe=
s, chars, statics....
+
+	// hues : coloring all sorts of things
+	// animgumps : paperdoll, trading ...
+	// nonanimgumps : buttons, dialog-background
+	// stitchin  : clothes replace modelpart...
+	// cliloc : language localisation
+	// verdata : patch-infos
+	// iris.imc --optimize-- : models.uim, models_patchinfo.xml
+	// gump layouts : .gfm
+	=

+	# raw data pointers
+	Classes like cGroundBlock contain pointers to raw data like "RawGroundBlo=
ck* mpRawGroundBlock;", thei constructors usually set these pointers to zer=
o.
+	The classes don't own the memory pointed to by these, as it is usually al=
located centrally by one of the loaders for better performance.
+	Also the don't try to release the memory pointed to.
+	Classes that are interesting for full-file loadding, like cGroundBlock, s=
houldn't be used directly, =

+	Please use them only trough loaders like cGroundBlockLoader_FullFile, who=
 do all the memory management for them.
+
+	// get length of file:
+  is.seekg (0, ios::end);
+  length =3D is.tellg();
 */
-cUniFontFileLoader::cUniFontFileLoader(const char* szFile) : cFullFileLoad=
er(szFile) { PROFILE
-	/*
-	for (int i=3D0;i<300;++i) {
-		RawUniFontFileLetterHeader*	pHead =3D GetLetterHeader(i);
-		const char*					pData =3D GetLetterData(	i);
-		if (!pData) continue;
-		int w =3D (int)pHead->miWidth;
-		int h =3D (int)pHead->miHeight;
-		if (w =3D=3D 0 && h =3D=3D 0) continue;
-		const char*					pNextBigger =3D 0;
-		for (int j=3D0;j<0xFFFF;++j) {
-			const char*	pOtherData =3D (const char*)GetLetterHeader(j);
-			if (pOtherData && pOtherData > pData) {
-				if (!pNextBigger || pOtherData < pNextBigger) pNextBigger =3D pOtherDa=
ta;
-			}
-		}
-		int iMySize =3D pNextBigger ? (pNextBigger - pData) : 0;
-		int iExpectedSize =3D ((w+7)/8)*h;
-		int iSizeDiff =3D iMySize - iExpectedSize;
-		if (iSizeDiff !=3D 0) printf("char %d : w=3D%3d h=3D%3d mem=3D%4d (%4d+%=
4d %s)\n",i,w,h,iMySize,iExpectedSize,iSizeDiff,(iSizeDiff!=3D0)?"########"=
:"");
-	}
-	*/
-	/*
-	int mw =3D GetMaxWidth();
-	int mh =3D GetMaxHeight();
-	=

-	printf("maxw=3D%d maxh=3D%d\n",mw,mh);
-
-	const RawUniFontFileLetterHeader *h;
-	const char *offset ;
-	for(char i =3D 0;i < kLetterNumbers; ++i){
-		h =3D GetLetterHeader(i);
-		offset =3D GetLetterData(i);
-		if(h){
-			printf("code=3D%d offset=3D%d x=3D%d y=3D%d w=3D%d h=3D%d\n",i,offset-m=
pFullFileBuffer,h->miXOffset,h->miYOffset,h->miWidth,h->miHeight);
-			=

-			// simple dump of letter
-			for(int y=3D0;y<mh;++y){
-				for(int x=3D0;x<mw;++x){
-					int lx =3D x - h->miXOffset;
-					int ly =3D y - h->miYOffset;
-					=

-					if(lx < 0 || lx >=3D h->miWidth || ly < 0 || ly >=3D h->miHeight)prin=
tf("-");
-					else if(IsPixelBorder(offset,h->miWidth,h->miHeight,lx,ly))printf("."=
);
-					else if(IsPixelInside(offset,h->miWidth,h->miHeight,lx,ly))printf("#"=
);
-					else printf("~");
-				}
-				printf("\n");
-			}
-			printf("\n");
-		} else printf("code=3D%d -\n",i);
-	}
-	*/
-}
-
-
-const int cUniFontFileLoader::GetLetterNumbers(){return 0xFFFF;}
-const float cUniFontFileLoader::GetLetterUsage(){
-	std::map<const char *,int> lCache;
-	for(int i=3D0;i<GetLetterNumbers();++i){
-		const char * data =3D GetLetterData(i);
-		if(lCache.find(data) =3D=3D lCache.end())lCache[data] =3D 1;
-		else lCache[data] =3D lCache[data] + 1;
-	}
-	float usage =3D float(lCache.size()) / float(GetLetterNumbers());
-	printf("usage=3D%f.2\n",usage);
-	return usage;
-}
-
-RawUniFontFileLetterHeader* cUniFontFileLoader::GetLetterHeader	(const uns=
igned int iCode){ PROFILE
-	// read out offset of letter header
-	if (iCode * sizeof(int32) + sizeof(int32) >=3D  miFullFileSize) return 0;=
 // check if iCode is valid
-	int32 offset =3D ((int32 *)(mpFullFileBuffer))[iCode];
-	if (offset < 0 || offset + sizeof(RawUniFontFileLetterHeader) >=3D miFull=
FileSize) return 0; // check if offset is valid
-	return (RawUniFontFileLetterHeader *)(mpFullFileBuffer + offset);
-}
-
-const char* cUniFontFileLoader::GetLetterData	(const unsigned int iCode){ =
PROFILE
-	char *p =3D (char *)GetLetterHeader(iCode);
-	if (!p) return 0;
-	return p + sizeof(RawUniFontFileLetterHeader);
-}
-
-cUniFontFileLoader::~cUniFontFileLoader(){ PROFILE
-
-}
-
-char cUniFontFileLoader::GetMaxWidth(){ PROFILE
-	char m =3D 0;
-	const RawUniFontFileLetterHeader *h;
-	for(unsigned int i =3D 0;i < GetLetterNumbers(); ++i){
-		h =3D GetLetterHeader(i);
-		if(h){
-			// size
-			int x =3D h->miXOffset + h->miWidth;
-			// new max found?
-			if(x > m){
-				m =3D x;
-			}
-		}
-	}
-	return m;
-}
-
-char cUniFontFileLoader::GetMaxHeight(){ PROFILE
-	char m =3D 0;
-	const RawUniFontFileLetterHeader *h;
-	for(unsigned int i =3D 0;i < GetLetterNumbers(); ++i){
-		h =3D GetLetterHeader(i);
-		if(h){
-			// size
-			int x =3D h->miYOffset + h->miHeight;
-			// new max found?
-			if(x > m)m =3D x;
-		}
-	}
-	return m;
-}
-
-const bool cUniFontFileLoader::IsPixelInside (const char *data, const int =
w, const int h, const int x, const int y) {
-	if (data =3D=3D 0) return false;
-	if (x < 0 || x >=3D w || y < 0 || y >=3D h) return false;
-	int iOffset =3D x/8 + y*((w+7)/8); // +7 / 8 : round upwards
-	if (iOffset + (data - mpFullFileBuffer) >=3D  miFullFileSize) return fals=
e; // boundscheck
-	return (data[iOffset] & (1 << (7 - (x%8)))) !=3D 0;
-}
-
-const bool cUniFontFileLoader::IsPixelBorder (const char *data, const int =
w, const int h, const int x, const int y) {
-	if (data =3D=3D 0) return false;
-	if (IsPixelInside(data,w,h,x,y)) return false; // only non visbile pixels=
 can be borders
-	=

-	// check for visible neighbours
-	return (IsPixelInside(data,w,h,x-1,y-1) ||
-			IsPixelInside(data,w,h,x  ,y-1) ||
-			IsPixelInside(data,w,h,x+1,y-1) ||
-			=

-			IsPixelInside(data,w,h,x-1,y  ) ||
-			IsPixelInside(data,w,h,x  ,y  ) ||
-			IsPixelInside(data,w,h,x+1,y  ) ||
-
-			IsPixelInside(data,w,h,x-1,y+1) ||
-			IsPixelInside(data,w,h,x  ,y+1) ||
-			IsPixelInside(data,w,h,x+1,y+1));
-}
-
-	=

-// ***** ***** ***** ***** ***** notes
-
 =

 	/*
 	texmap	 	texidx.mul,texmaps.mul 	: ca 22mb 	textures (ground : 3d)

Modified: trunk/src/scripting.iris.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.iris.cpp (original)
+++ trunk/src/scripting.iris.cpp Fri May  9 19:51:14 2008
@@ -11,7 +11,6 @@
 #include "builder.h"
 #include "pathsearch.h"
 #include "terrain.h"
-#include "radar.h"
 #include "spritemanager.h"
 #include "ogremanualloader.h"
 #include "huffman.h"
@@ -494,7 +493,6 @@
 			Granny_LuaRegister(L);
 			LuaRegisterData(L);
 			LuaRegisterBuilder(L);
-			LuaRegisterRadar(L);
 			cSpriteManager::LuaRegister(L);
 			cManualArtMaterialLoader::LuaRegister(L);
 			cSprite::LuaRegister(L);



From no-reply at zwischenwelt.org  Fri May  9 20:17:06 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 09 May 2008 18:17:06 -0000
Subject: [Iris-commit] [IRIS] r2153 - in /trunk: include/ src/
Message-ID: <20080509181707.8206A153C00D@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  9 20:17:03 2008
New Revision: 2153

Log:
split data_L.cpp into multiple files

Added:
    trunk/include/data_luabind_common.h
    trunk/src/data_anim_L.cpp
    trunk/src/data_artmap_L.cpp
    trunk/src/data_font_L.cpp
    trunk/src/data_groundblock_L.cpp
    trunk/src/data_gump_L.cpp
    trunk/src/data_hue_L.cpp
    trunk/src/data_multi_L.cpp
    trunk/src/data_radar_L.cpp
    trunk/src/data_sound_L.cpp
    trunk/src/data_staticblock_L.cpp
    trunk/src/data_texmap_L.cpp
    trunk/src/data_tiletype_L.cpp
Modified:
    trunk/src/data_L.cpp

Modified: trunk/src/data_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_L.cpp (original)
+++ trunk/src/data_L.cpp Fri May  9 20:17:03 2008
@@ -1,994 +1,34 @@
-#include "lugre_prefix.h"
-#include "data.h"
-#include "lugre_scripting.h"
-#include "lugre_luabind.h"
-#include "lugre_ogrewrapper.h"
-#include "builder.h"
-#include "lugre_bitmask.h"
-#include "lugre_sound.h"
-#include "lugre_image.h"
-#include <string>
-#include <stdlib.h>
-#include <map>
+#include "data_luabind_common.h"
 =

-extern "C" {
-	#include "lua.h"
-	#include "lauxlib.h"
-	#include "lualib.h"
-}
-
-
-using namespace Lugre;
-
-class cGroundBlockLoader_L : public cLuaBind<cGroundBlockLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateGroundBlockLoader",	&cGroundBlockLoader_L::Create=
GroundBlockLoader);
-			lua_register(L,"CreateGroundBlockLoaderWithDiff",	&cGroundBlockLoader_L=
::CreateGroundBlockLoaderWithDiff);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cGroundBlockLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetMapW);
-			REGISTER_METHOD(GetMapH);
-			REGISTER_METHOD(WriteMapImageToFile);
-			REGISTER_METHOD(GetTile);
-			REGISTER_METHOD(GetTile2);
-			REGISTER_METHOD(GetNormals);
-			REGISTER_METHOD(GetHeightMap);
-			REGISTER_METHOD(CountTileTypes);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cGroundBlockLoader*	CreateGroundBlockLoader		(string type,int maph,s=
tring file); for lua
-		static int				CreateGroundBlockLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cGroundBlockLoader* target =3D 0;
-			if (mystricmp(type,"Dummy") =3D=3D 0) target =3D new cGroundBlockLoader=
_Dummy(luaL_checkint(L,2),luaL_checkint(L,3));
-			if (mystricmp(type,"OnDemand") =3D=3D 0) target =3D new cGroundBlockLoa=
der_OnDemand(luaL_checkint(L,2),luaL_checkstring(L,3));
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cGroundBlockLoa=
der_FullFile(luaL_checkint(L,2),luaL_checkstring(L,3));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-		/// cGroundBlockLoader*	CreateGroundBlockLoaderWithDiff		(string type,in=
t maph,string file, string difflookup, string diffdata); for lua
-		static int				CreateGroundBlockLoaderWithDiff		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cGroundBlockLoader* target =3D 0;
-			if (mystricmp(type,"Dummy") =3D=3D 0) target =3D new cGroundBlockLoader=
_Dummy(luaL_checkint(L,2),luaL_checkint(L,3));
-			if (mystricmp(type,"OnDemand") =3D=3D 0) target =3D new cGroundBlockLoa=
der_OnDemand(luaL_checkint(L,2),luaL_checkstring(L,3),luaL_checkstring(L,4)=
,luaL_checkstring(L,5));
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cGroundBlockLoa=
der_FullFile(luaL_checkint(L,2),luaL_checkstring(L,3),luaL_checkstring(L,4)=
,luaL_checkstring(L,5));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy				(lua_State *L) { PROFILE delete checkudata_alive(L=
); return 0; }
-		static int	GetMapW				(lua_State *L) { PROFILE lua_pushnumber(L,checkuda=
ta_alive(L)->miMapW); return 1; }
-		static int	GetMapH				(lua_State *L) { PROFILE lua_pushnumber(L,checkuda=
ta_alive(L)->miMapH); return 1; }	=

-		=

-		/// for lua  tiletype,z		GetTile		(blockx, blocky, tilex, tiley)
-		static int	GetTile				(lua_State *L) { PROFILE =

-			cGroundBlockLoader* target =3D checkudata_alive(L);
-			cGroundBlock* pGroundBlock =3D target->GetGroundBlock(luaL_checkint(L,2=
),luaL_checkint(L,3));
-			if (!pGroundBlock) return 0;
-			RawGroundBlock* pChunk =3D pGroundBlock->mpRawGroundBlock;
-			if (!pChunk) return 0;
-			int tx =3D mymax(0,mymin(7,luaL_checkint(L,4)));
-			int ty =3D mymax(0,mymin(7,luaL_checkint(L,5)));
-			RawGroundTile* pTile =3D &pChunk->mTiles[ty][tx];
-			lua_pushnumber(L,pTile->miTileType);
-			lua_pushnumber(L,pTile->miZ);
-			return 2; =

-		}
-		=

-		/// for lua  tiletype,z		GetTile2	(xloc,yloc)
-		static int					GetTile2	(lua_State *L) { PROFILE =

-			int x =3D luaL_checkint(L,2);
-			int y =3D luaL_checkint(L,3);
-			if (x < 0 || y < 0) return 0;
-			cGroundBlockLoader* target =3D checkudata_alive(L);
-			cGroundBlock* pGroundBlock =3D target->GetGroundBlock(x/8,y/8);
-			if (!pGroundBlock) return 0;
-			RawGroundBlock* pChunk =3D pGroundBlock->mpRawGroundBlock;
-			if (!pChunk) return 0;
-			RawGroundTile* pTile =3D &pChunk->mTiles[y%8][x%8];
-			lua_pushnumber(L,pTile->miTileType);
-			lua_pushnumber(L,pTile->miZ);
-			return 2; =

-		}	=

-
-		// void		WriteMapImageToFile	(radarcolorloader*,staticblockloader,string=
 filepath,bool big)  for lua
-		static int	WriteMapImageToFile	(lua_State *L) { PROFILE =

-			cRadarColorLoader* pRadarColorLoader =3D cLuaBind<cRadarColorLoader>::c=
heckudata(L,2);
-			cStaticBlockLoader* pStaticBlockLoader =3D cLuaBind<cStaticBlockLoader>=
::checkudata(L,3);
-			if (!pRadarColorLoader) return 0;
-			bool bBig=3D		(lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ? lua_toboolean=
(L,5) : false;
-			::WriteMapImageToFile(*checkudata_alive(L),*pRadarColorLoader,pStaticBl=
ockLoader,luaL_checkstring(L,4),bBig);
-			return 0; =

-		}
-
-		static int	GetNormals (lua_State *L) { PROFILE
-			cGroundBlockLoader* pGroundBlockLoader =3D checkudata_alive(L);
-			=

-			float *pData =3D new float[64*4*3];
-			GenerateNormals( pGroundBlockLoader, luaL_checkint(L,2), luaL_checkint(=
L,3), pData );
-
-			lua_newtable( L );
-			for (int i=3D0; i < 64*4*3; i++) {
-				lua_pushnumber( L, pData[i] );
-				lua_rawseti( L, -2, i );
-			}
-
-			return 1;
-		}
-
-		/// for lua : map<tiletypeid,count> CountTileTypes ()
-		static int	CountTileTypes (lua_State *L) { PROFILE
-			cGroundBlockLoader* pGroundBlockLoader =3D checkudata_alive(L);
-			std::map<int,int> myTileTypeCounter;
-			=

-			// iterate over the whole map, counting tiletypes
-			for (int x=3D0;x<pGroundBlockLoader->miMapW;++x)
-			for (int y=3D0;y<pGroundBlockLoader->miMapH;++y) {
-				cGroundBlock* pGroundBlock =3D pGroundBlockLoader->GetGroundBlock(x,y);
-				if (!pGroundBlock) continue;
-				RawGroundBlock* pChunk =3D pGroundBlock->mpRawGroundBlock;
-				if (!pChunk) continue;
-					=

-				for (int tx=3D0;tx<7;++tx)
-				for (int ty=3D0;ty<7;++ty) {
-					++myTileTypeCounter[pChunk->mTiles[ty][tx].miTileType];
-				}
-			}
-			=

-			lua_newtable(L);
-			for (std::map<int,int>::iterator itor=3DmyTileTypeCounter.begin();itor!=
=3DmyTileTypeCounter.end();++itor) {
-				lua_pushnumber( L, (*itor).second );
-				lua_rawseti( L, -2, (*itor).first );
-			}
-			return 1;
-		}
-			=

-			=

-		static int	GetHeightMap (lua_State *L) { PROFILE
-			cGroundBlockLoader* pGroundBlockLoader =3D checkudata_alive(L);
-			=

-			signed char *pData =3D new signed char[81];
-			GenerateHeightMap( pGroundBlockLoader, luaL_checkint(L,2), luaL_checkin=
t(L,3), pData );
-
-			lua_newtable( L );
-			for (int i=3D0; i < 81; i++) {
-				lua_pushnumber( L, pData[i] );
-				lua_rawseti( L, -2, i );
-			}
-
-			return 1;
-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.groundblockloader";=
 }
-};
-
-class cUniFontFileLoader_L : public cLuaBind<cUniFontFileLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateUniFontLoader",	&cUniFontFileLoader_L::CreateUniF=
ontLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cUniFontFileLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetMaxWidth);
-			REGISTER_METHOD(GetMaxHeight);
-			REGISTER_METHOD(CountLetters);
-			REGISTER_METHOD(WriteGlyphToImage);
-			REGISTER_METHOD(GetGlyphInfo);
-			REGISTER_METHOD(GetDefaultHeight);
-			REGISTER_METHOD(CreateOgreFont);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cUniFontFileLoader*	CreateUniFontLoader		(string file); for lua
-		static int				CreateUniFontLoader		(lua_State *L) { PROFILE
-			const char* file =3D luaL_checkstring(L,1);
-			cUniFontFileLoader* target =3D new cUniFontFileLoader(file);
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy				(lua_State *L) { PROFILE delete checkudata_alive(L=
); return 0; }
-		static int	GetMaxWidth			(lua_State *L) { PROFILE lua_pushnumber(L,check=
udata_alive(L)->GetMaxWidth()); return 1; }
-		static int	GetMaxHeight		(lua_State *L) { PROFILE lua_pushnumber(L,check=
udata_alive(L)->GetMaxHeight()); return 1; }	=

-		static int	GetDefaultHeight	(lua_State *L) { PROFILE lua_pushnumber(L,ch=
eckudata_alive(L)->GetMaxHeight()+2); return 1; }	=

-		static int	CountLetters		(lua_State *L) { PROFILE lua_pushnumber(L,check=
udata_alive(L)->GetLetterNumbers()); return 1; }	=

-		=

-		/// return true on success
-		/// loads the glyph for iCharCode into a Ogre::Image (lua wrapper : cIma=
ge)
-		/// bSuccess	WriteGlyphToImage	(pImage,iCharCode)
-		static int		WriteGlyphToImage	(lua_State *L) { PROFILE =

-			cImage*	pImage		=3D cLuaBind<cImage>::checkudata_alive(L,2);
-			int		iCharCode	=3D luaL_checkint(L,3); // Ogre::Font::CodePoint ?  unic=
ode
-			if (!WriteFontGlyphToImage(pImage->mImage,*checkudata_alive(L),iCharCod=
e)) return 0;
-			lua_pushboolean(L,true);
-			return 1; =

-		}
-		=

-		/// for lua  xoffset,yoffset,w,h	GetGlyphInfo	(iCharCode)
-		static int							GetGlyphInfo	(lua_State *L) { PROFILE =

-			RawUniFontFileLetterHeader *h =3D checkudata_alive(L)->GetLetterHeader(=
luaL_checkint(L,2));
-			if (!h) return 0;
-			lua_pushnumber(L,h->miXOffset);
-			lua_pushnumber(L,h->miYOffset);
-			lua_pushnumber(L,h->miWidth);
-			lua_pushnumber(L,h->miHeight);
-			return 4;
-		}	=

-
-		/// for lua CreateOgreFont(fontname)
-		static int	CreateOgreFont				(lua_State *L) { PROFILE =

-			cUniFontFileLoader* target =3D checkudata_alive(L);
-			if (!target) return 0;
-			=

-			std::string sFontName =3D luaL_checkstring(L,2);
-			=

-			// load only ascii atm
-			GenerateUniFont(*target,sFontName.c_str(),0,255);
-			=

-			return 0; =

-		}	=

-		=

-		// see also l_ExportOgreFont in lugre/src/lugre_scripting.ogre.cpp
-		=

-		virtual const char* GetLuaTypeName () { return "iris.unifontloader"; }
-};
-
-class cRadarColorLoader_L : public cLuaBind<cRadarColorLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateRadarColorLoader",	&cRadarColorLoader_L::CreateRa=
darColorLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cRadarColorLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cRadarColorLoader*	CreateRadarColorLoader		(string type,int maph,str=
ing file); for lua
-		static int				CreateRadarColorLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cRadarColorLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cRadarColorLoad=
er(luaL_checkstring(L,2));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		=

-		virtual const char* GetLuaTypeName () { return "iris.RadarColorLoader"; }
-};
-
-class cHueLoader_L : public cLuaBind<cHueLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateHueLoader",	&cHueLoader_L::CreateHueLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cHueLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetColor);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cHueLoader*	CreateHueLoader		(string type,string file); for lua
-		static int				CreateHueLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cHueLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cHueLoader(luaL=
_checkstring(L,2));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		=

-		static int	GetColor		(lua_State *L) { PROFILE =

-			cHue* pHue =3D checkudata_alive(L)->GetHue(luaL_checkint(L,2));
-			if (!pHue) return 0;
-			int iColorIndex =3D luaL_checkint(L,3);
-			if (iColorIndex < 0 || iColorIndex >=3D 32) return 0;
-			uint16 x =3D uint16(pHue->GetColors()[iColorIndex]); =

-			lua_pushnumber(L,float((x >> 10) & 0x1F)/float(0x1f)); // r
-			lua_pushnumber(L,float((x >>  5) & 0x1F)/float(0x1f)); // g
-			lua_pushnumber(L,float((x >>  0) & 0x1F)/float(0x1f)); // b
-			lua_pushnumber(L,(x & 0x8000)?1.0:0.0); // a
-			return 4; =

-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.HueLoader"; }
-};
-
-class cAnimDataLoader_L : public cLuaBind<cAnimDataLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateAnimDataLoader",	&cAnimDataLoader_L::CreateAnimDa=
taLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cAnimDataLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetAnimDataType);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cAnimDataLoader*	CreateAnimDataLoader		(string type,string file); fo=
r lua
-		static int				CreateAnimDataLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cAnimDataLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cAnimDataLoader=
(luaL_checkstring(L,2));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		static int  GetAnimDataType	(lua_State *L) { PROFILE
-			RawAnimData* AnimDataType =3D checkudata_alive(L)->GetAnimDataType(luaL=
_checkint(L,2));
-			if (!AnimDataType) {
-				return 0;
-			} else {
-				lua_newtable(L);
-				for (int i=3D0; i < 64; i++ ) {
-					lua_pushnumber( L, AnimDataType->miFrames[i] );
-					lua_rawseti(L,-2,i);
-				}
-				lua_pushnumber( L, AnimDataType->miUnknown );
-				lua_pushnumber( L, AnimDataType->miCount );
-				lua_pushnumber( L, AnimDataType->miFrameInterval );
-				lua_pushnumber( L, AnimDataType->miFrameStart );
-				return 5;
-			}
-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.AnimDataLoader"; }
-};
-
-class cTileTypeLoader_L : public cLuaBind<cTileTypeLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateTileTypeLoader",	&cTileTypeLoader_L::CreateTileTy=
peLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cTileTypeLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetGroundTileType);
-			REGISTER_METHOD(GetStaticTileType);
-			REGISTER_METHOD(GetGroundTileTexture);
-			REGISTER_METHOD(GetEndID);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cTileTypeLoader*	CreateTileTypeLoader		(string type,string sDataFile=
); for lua
-		static int				CreateTileTypeLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cTileTypeLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cTileTypeLoader=
_FullFile(luaL_checkstring(L,2));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		static int	GetGroundTileType	(lua_State *L) { PROFILE =

-			cGroundTileType* pChunk =3D checkudata_alive(L)->GetGroundTileType(luaL=
_checkint(L,2));
-			RawGroundTileType* pRawChunk =3D pChunk ? pChunk->mpRawGroundTileType :=
 0;
-			if (!pRawChunk) return 0;
-				=

-			lua_pushnumber(L,pRawChunk->miFlags); =

-			lua_pushnumber(L,pRawChunk->miTexID); =

-			lua_pushstring(L,std::string(pRawChunk->msName,20).c_str()); =

-			return 3; =

-		}
-		static int GetGroundTileTexture	(lua_State *L) { PROFILE =

-			cGroundTileType* pChunk =3D checkudata_alive(L)->GetGroundTileType(luaL=
_checkint(L,2));
-			RawGroundTileType* pRawChunk =3D pChunk ? pChunk->mpRawGroundTileType :=
 0;
-			if (!pRawChunk) return 0;
-
-			lua_pushnumber(L,pRawChunk->miTexID);
-			return 1;
-		}
-		=

-		/// the returned id is not valid, some ids right before it might also be=
 not valid
-		static int GetEndID	(lua_State *L) { PROFILE =

-			lua_pushnumber(L,checkudata_alive(L)->GetEndID());
-			return 1;
-		}
-		=

-		static int	GetStaticTileType	(lua_State *L) { PROFILE =

-			cStaticTileType* pChunk =3D checkudata_alive(L)->GetStaticTileType(luaL=
_checkint(L,2));
-			RawStaticTileType* pRawChunk =3D pChunk ? pChunk->mpRawStaticTileType :=
 0;
-			//~ if (!pRawChunk) { printf("GetStaticTileType : id (%d) not found c=
=3D%08x,rc=3D%08x\n",luaL_checkint(L,2),pChunk,pRawChunk);return 0; }
-			//~ if (!pRawChunk) { MyCrash("GetStaticTileType debug\n"); }
-			if (!pRawChunk) return 0;
-			lua_pushnumber(L,pRawChunk->miFlags); =

-			lua_pushnumber(L,pRawChunk->miWeight); =

-			lua_pushnumber(L,pRawChunk->miQuality); =

-			lua_pushnumber(L,pRawChunk->miUnknown); =

-			lua_pushnumber(L,pRawChunk->miUnknown1); =

-			lua_pushnumber(L,pRawChunk->miQuantity); =

-			lua_pushnumber(L,pRawChunk->miAnimID); =

-			lua_pushnumber(L,pRawChunk->miUnknown2); =

-			lua_pushnumber(L,pRawChunk->miHue); =

-			lua_pushnumber(L,pRawChunk->miUnknown3); =

-			lua_pushnumber(L,pRawChunk->miHeight); =

-			lua_pushstring(L,std::string(pRawChunk->msName,20).c_str()); =

-			return 12; =

-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.TileTypeLoader"; }
-};
-
-class cTexMapLoader_L : public cLuaBind<cTexMapLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateTexMapLoader",	&cTexMapLoader_L::CreateTexMapLoad=
er);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cTexMapLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetCount);
-			REGISTER_METHOD(CreateMaterial);
-			REGISTER_METHOD(ExportToFile);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cTexMapLoader*	CreateTexMapLoader		(string type,string sIndexFile,st=
ring sDataFile); for lua
-		static int			CreateTexMapLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cTexMapLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cTexMapLoader_I=
ndexedFullFile(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			if (mystricmp(type,"OnDemand") =3D=3D 0) target =3D new cTexMapLoader_I=
ndexedOnDemand(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		=

-		/// for lua : int GetCount()
-		static int	GetCount			(lua_State *L) { PROFILE =

-			lua_pushnumber(L,checkudata_alive(L)->GetCount()); =

-			return 1; =

-		}
-		=

-		/// for lua : sMatName	CreateMaterial	(iTexMapID,bHasAlpha,bEnableLighti=
ng,bEnableDepthWrite,bPixelExact,pHueLoader=3Dnil,iHue=3D0)
-		static int	CreateMaterial	(lua_State *L) { PROFILE =

-			int i=3D2;
-			bool bHasAlpha=3D			(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? lua_t=
oboolean(L,i) : true;
-			bool bEnableLighting=3D	(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : false;
-			bool bEnableDepthWrite=3D	(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 lua_toboolean(L,i) : true;
-			bool bPixelExact=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? lua_=
toboolean(L,i) : true;
-			cHueLoader* pHueLoader=3D (lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 cLuaBind<cHueLoader>::checkudata(L,i) : 0;
-			short bHue=3D				(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? luaL_che=
ckint(L,i) : 0;
-			=

-			std::string myname =3D cOgreWrapper::GetUniqueName();
-			if (!GenerateTexMapMaterial(*checkudata_alive(L),myname.c_str(),luaL_ch=
eckint(L,2),
-				bHasAlpha,bEnableLighting,bEnableDepthWrite,bPixelExact,pHueLoader,bHu=
e))
-				myname =3D "";
-			lua_pushstring(L,myname.c_str()); =

-			return 1; =

-		}
-		=

-		/// for lua : bSuccess	ExportToFile (sFilePath,iTexMapID,pHueLoader=3Dni=
l,iHue=3D0)
-		/// exports the texmap to the filepath, e.g. myfile.png, returns true on=
 successs
-		static int	ExportToFile	(lua_State *L) { PROFILE =

-			std::string	sFilePath =3D luaL_checkstring(L,2);
-			int			iTexMapID =3D luaL_checkint(L,3);
-			cHueLoader* pHueLoader=3D (lua_gettop(L) >=3D 4 && !lua_isnil(L,4)) ? c=
LuaBind<cHueLoader>::checkudata(L,4) : 0;
-			short 		iHue=3D		(lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ? luaL_check=
int(L,5) : 0;
-			=

-			if (!WriteTexMapToFile(*checkudata_alive(L),sFilePath.c_str(),iTexMapID=
,pHueLoader,iHue)) return 0;
-			lua_pushboolean(L,true); =

-			return 1; =

-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.texmaploader"; }
-};
-
-class cAnimLoader_L : public cLuaBind<cAnimLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateAnimLoader",	&cAnimLoader_L::CreateAnimLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cAnimLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(CreateMaterial);
-			REGISTER_METHOD(CreateBitMask);
-			REGISTER_METHOD(GetAnimType);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		static int			CreateAnimLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cAnimLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cAnimLoader_Ind=
exedFullFile(luaL_checkint(L,2),luaL_checkint(L,3),luaL_checkstring(L,4),lu=
aL_checkstring(L,5));
-			if (mystricmp(type,"OnDemand") =3D=3D 0) target =3D new cAnimLoader_Ind=
exedOnDemand(luaL_checkint(L,2),luaL_checkint(L,3),luaL_checkstring(L,4),lu=
aL_checkstring(L,5));
-
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		static int  CreateBitMask	(lua_State *L) { PROFILE
-			cBitMask* pTarget =3D new cBitMask();
-			GenerateAnimBitMask(*checkudata_alive(L),luaL_checkint(L,2),luaL_checki=
nt(L,3),luaL_checkint(L,4),*pTarget);
-			return cLuaBind<cBitMask>::CreateUData(L,pTarget);
-		}
-		static int	CreateMaterial	(lua_State *L) { PROFILE =

-			int i=3D4;
-			cHueLoader* pHueLoader=3D (lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 cLuaBind<cHueLoader>::checkudata(L,i) : 0;
-			unsigned short iHue=3D				(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 luaL_checkint(L,i) : 0;
-			=

-			std::string myname =3D cOgreWrapper::GetUniqueName();
-			int iWidth, iHeight, iCenterX, iCenterY, iFrames;
-			if (!GenerateAnimMaterial(*checkudata_alive(L),myname.c_str(),luaL_chec=
kint(L,2),luaL_checkint(L,3),luaL_checkint(L,4),iWidth,iHeight,iCenterX,iCe=
nterY,iFrames,pHueLoader,iHue)) {
-				myname =3D "";
-				lua_pushstring(L,myname.c_str()); =

-				return 1; =

-			} else {
-				lua_pushstring(L,myname.c_str());
-				lua_pushnumber(L,iWidth);
-				lua_pushnumber(L,iHeight);
-				lua_pushnumber(L,iCenterX);
-				lua_pushnumber(L,iCenterY);
-				lua_pushnumber(L,iFrames);
-				return 6;
-			}
-		}
-
-		static int	GetAnimType		(lua_State *L) { PROFILE
-			cAnimLoader* AnimLoader =3D checkudata_alive(L);
-			int AnimID =3D luaL_checkint(L,2);
-			if (AnimID < AnimLoader->mHighDetailed) {
-				lua_pushnumber(L,0);
-			} else if (AnimID < AnimLoader->mHighDetailed + AnimLoader->mLowDetaile=
d) {
-				lua_pushnumber(L,1);
-			} else {
-				lua_pushnumber(L,2);
-			}
-			return 1;
-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.animloader"; }
-};
-
-class cArtMapLoader_L : public cLuaBind<cArtMapLoader> { public:
-	static std::map<cArtMapLoader*,cArtMap*>	mLastChunk;
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateArtMapLoader",	&cArtMapLoader_L::CreateArtMapLoad=
er);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cArtMapLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(CreateMaterial);
-			REGISTER_METHOD(CreateBitMask);
-			REGISTER_METHOD(Load);
-			REGISTER_METHOD(GetSize);
-			REGISTER_METHOD(CalcVisibleAABB);
-			REGISTER_METHOD(SearchCursorHotspot);
-			REGISTER_METHOD(GetCount);
-			REGISTER_METHOD(ExportToFile);
-			REGISTER_METHOD(ExportToImage);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cArtMapLoader*	CreateArtMapLoader		(string type,string sIndexFile,st=
ring sDataFile); for lua
-		static int			CreateArtMapLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cArtMapLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cArtMapLoader_I=
ndexedFullFile(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			if (mystricmp(type,"OnDemand") =3D=3D 0) target =3D new cArtMapLoader_I=
ndexedOnDemand(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		=

-		static int	CreateBitMask	(lua_State *L) { PROFILE =

-			cBitMask* pTarget =3D new cBitMask();
-			GenerateArtBitMask(*checkudata_alive(L),luaL_checkint(L,2),*pTarget);
-			return cLuaBind<cBitMask>::CreateUData(L,pTarget);
-		}
-		=

-		static int	CreateMaterial	(lua_State *L) { PROFILE =

-			//std::string myname =3D strprintf("uo_art_%i",luaL_checkint(L,2));
-			std::string myname =3D cOgreWrapper::GetUniqueName();
-			int i=3D2;
-			bool bPixelExact=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? lua_=
toboolean(L,i) : false; // WARNING ! bPixelExact changes size to 2^n
-			bool bInvertY=3D			(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? lua_to=
boolean(L,i) : true;
-			bool bInvertX=3D			(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? lua_to=
boolean(L,i) : true;
-			bool bHasAlpha=3D			(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? lua_t=
oboolean(L,i) : true;
-			bool bEnableLighting=3D	(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : false;
-			bool bEnableDepthWrite=3D	(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 lua_toboolean(L,i) : true;
-			cHueLoader* pHueLoader=3D (lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 cLuaBind<cHueLoader>::checkudata(L,i) : 0;
-			short bHue=3D				(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? luaL_che=
ckint(L,i) : 0;
-			=

-			if (!GenerateArtMaterial(*checkudata_alive(L),myname.c_str(),luaL_check=
int(L,2),
-					bPixelExact,bInvertY,bInvertX,bHasAlpha,bEnableLighting,bEnableDepthW=
rite,pHueLoader,bHue))
-				myname =3D "";
-			lua_pushstring(L,myname.c_str()); =

-			return 1; =

-		}
-		=

-		/// for lua : bSuccess	ExportToFile (sFilePath,iArtMapID,pHueLoader=3Dni=
l,iHue=3D0)
-		/// exports the artmap to the filepath, e.g. myfile.png, returns true on=
 successs
-		static int	ExportToFile	(lua_State *L) { PROFILE =

-			std::string	sFilePath =3D luaL_checkstring(L,2);
-			int			iArtMapID =3D luaL_checkint(L,3);
-			cHueLoader* pHueLoader=3D (lua_gettop(L) >=3D 4 && !lua_isnil(L,4)) ? c=
LuaBind<cHueLoader>::checkudata(L,4) : 0;
-			short 		iHue=3D		(lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ? luaL_check=
int(L,5) : 0;
-			=

-			if (!WriteArtMapToFile(*checkudata_alive(L),sFilePath.c_str(),iArtMapID=
,pHueLoader,iHue)) return 0;
-			lua_pushboolean(L,true); =

-			return 1; =

-		}
-		=

-		/// return true on success
-		/// loads the artmap into a Ogre::Image (lua wrapper : cImage)
-		/// bSuccess	ExportToImage	(pImage,iArtMapID,pHueLoader=3Dnil,iHue=3D0)
-		static int		ExportToImage	(lua_State *L) { PROFILE =

-			cImage*		pImage			=3D cLuaBind<cImage>::checkudata_alive(L,2);
-			int			iArtMapID		=3D luaL_checkint(L,3);
-			cHueLoader* pHueLoader		=3D (lua_gettop(L) >=3D 4 && !lua_isnil(L,4)) ?=
 cLuaBind<cHueLoader>::checkudata(L,4) : 0;
-			short 		iHue			=3D (lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ? luaL_che=
ckint(L,5) : 0;
-			=

-			if (!WriteArtMapToImage(pImage->mImage,*checkudata_alive(L),iArtMapID,p=
HueLoader,iHue)) return 0;
-			lua_pushboolean(L,true);
-			return 1; =

-		}
-		=

-		/// int gArtMapLoader:GetCount() for lua
-		static int	GetCount			(lua_State *L) { PROFILE =

-			lua_pushnumber(L,checkudata_alive(L)->GetCount()); =

-			return 1; =

-		}
- =

-
-		/// void	gArtMapLoader:Load(id) for lua
-		static int	Load			(lua_State *L) { PROFILE =

-			cArtMapLoader* pLoader =3D checkudata_alive(L);
-			mLastChunk[pLoader] =3D pLoader->GetArtMap(luaL_checkint(L,2));
-			return 0; =

-		}
-		=

-		/// iWidth,iHeight =3D gArtMapLoader:GetSize() for last chunk loaded by =
Load() for lua
-		static int	GetSize			(lua_State *L) { PROFILE =

-			cArtMap* pLastChunk =3D mLastChunk[checkudata_alive(L)];
-			lua_pushnumber(L,pLastChunk?pLastChunk->GetWidth():0); =

-			lua_pushnumber(L,pLastChunk?pLastChunk->GetHeight():0); =

-			return 2; =

-		}
-		=

-		/// iX,iY =3D gArtMapLoader:SearchCursorHotspot() for last chunk loaded =
by Load() for lua
-		static int	SearchCursorHotspot			(lua_State *L) { PROFILE =

-			cArtMap* pLastChunk =3D mLastChunk[checkudata_alive(L)];
-			int iX =3D 0,iY=3D 0;
-			if (pLastChunk) pLastChunk->SearchCursorHotspot(iX,iY);
-			lua_pushnumber(L,iX); =

-			lua_pushnumber(L,iY); =

-			return 2; =

-		}
-		=

-		/// minx,miny,maxx,maxy =3D gArtMapLoader:CalcVisibleAABB() for last chu=
nk loaded by Load() for lua
-		static int	CalcVisibleAABB			(lua_State *L) { PROFILE =

-			cArtMap* pLastChunk =3D mLastChunk[checkudata_alive(L)];
-			int minx,miny,maxx,maxy;
-			=

-			if (pLastChunk) pLastChunk->CalcVisibleAABB(minx,miny,maxx,maxy);
-			lua_pushnumber(L,minx); =

-			lua_pushnumber(L,miny); =

-			lua_pushnumber(L,maxx); =

-			lua_pushnumber(L,maxy); =

-			return 4; =

-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.artmaploader"; }
-};
-std::map<cArtMapLoader*,cArtMap*>	cArtMapLoader_L::mLastChunk;
-
-class cStaticBlockLoader_L : public cLuaBind<cStaticBlockLoader> { public:
-	static std::map<cStaticBlockLoader*,cStaticBlock*>	mLastBlock;
-	=

-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateStaticBlockLoader",	&cStaticBlockLoader_L::Create=
StaticBlockLoader);
-			lua_register(L,"CreateStaticBlockLoaderWithDiff",	&cStaticBlockLoader_L=
::CreateStaticBlockLoaderWithDiff);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cStaticBlockLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetMapW);
-			REGISTER_METHOD(GetMapH);
-			REGISTER_METHOD(Load);
-			REGISTER_METHOD(Count);
-			REGISTER_METHOD(GetStatic);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cStaticBlockLoader*	CreateStaticBlockLoader		(string type,int maph,s=
tring sIndexFile,string sDataFile); for lua
-		static int				CreateStaticBlockLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cStaticBlockLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cStaticBlockLoa=
der_IndexedFullFile(luaL_checkint(L,2),luaL_checkstring(L,3),luaL_checkstri=
ng(L,4));
-			return target ? CreateUData(L,target) : 0;
-		}
-
-		/// cStaticBlockLoader*	CreateStaticBlockLoaderWithDiff		(string type,in=
t maph,string sIndexFile,string sDataFile, string sDiffLookup, sDiffIndex, =
sDiffData); for lua
-		static int				CreateStaticBlockLoaderWithDiff		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cStaticBlockLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cStaticBlockLoa=
der_IndexedFullFile(luaL_checkint(L,2),luaL_checkstring(L,3),luaL_checkstri=
ng(L,4),
-				luaL_checkstring(L,5),luaL_checkstring(L,6),luaL_checkstring(L,7));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		static int	GetMapW			(lua_State *L) { PROFILE lua_pushnumber(L,checkudat=
a_alive(L)->miMapW); return 1; }
-		static int	GetMapH			(lua_State *L) { PROFILE lua_pushnumber(L,checkudat=
a_alive(L)->miMapH); return 1; }
-		=

-		/// void	gStaticBlockLoader:Load(x,y) for lua
-		static int	Load			(lua_State *L) { PROFILE =

-			cStaticBlockLoader* pLoader =3D checkudata_alive(L);
-			mLastBlock[pLoader] =3D pLoader->GetStaticBlock(luaL_checkint(L,2),luaL=
_checkint(L,3));
-			return 0; =

-		}
-		=

-		/// iStaticCount =3D gStaticBlockLoader:Count() for last block loaded by=
 Load() for lua
-		static int	Count			(lua_State *L) { PROFILE =

-			cStaticBlock* pLastBlock =3D mLastBlock[checkudata_alive(L)];
-			lua_pushnumber(L,pLastBlock?pLastBlock->Count():0); =

-			return 1; =

-		}
-		=

-		/// iTileID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) for last b=
lock loaded by Load() for lua
-		static int	GetStatic		(lua_State *L) { PROFILE =

-			cStaticBlock* pLastBlock =3D mLastBlock[checkudata_alive(L)];
-			int i =3D luaL_checkint(L,2);
-			if (!pLastBlock || i < 0 || i >=3D pLastBlock->Count()) return 0;
-			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miTileID); =

-			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miX); =

-			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miY); =

-			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miZ); =

-			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miHue);
-			return 5; =

-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.staticblockloader";=
 }
-};
-std::map<cStaticBlockLoader*,cStaticBlock*>	cStaticBlockLoader_L::mLastBlo=
ck;
-
-class cGumpLoader_L : public cLuaBind<cGumpLoader> { public:
-	static std::map<cGumpLoader*,cGump*>	mLastChunk;
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateGumpLoader",	&cGumpLoader_L::CreateGumpLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cGumpLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(CreateBitMask);
-			REGISTER_METHOD(CreateMaterial);
-			REGISTER_METHOD(Load);
-			REGISTER_METHOD(GetSize);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cGumpLoader*	CreateGumpLoader		(string type,string sIndexFile,string=
 sDataFile); for lua
-		static int			CreateGumpLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cGumpLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cGumpLoader_Ind=
exedFullFile(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			if (mystricmp(type,"OnDemand") =3D=3D 0) target =3D new cGumpLoader_Ind=
exedOnDemand(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		=

-		static int	CreateBitMask	(lua_State *L) { PROFILE =

-			cBitMask* pTarget =3D new cBitMask();
-			GenerateGumpBitMask(*checkudata_alive(L),luaL_checkint(L,2),*pTarget);
-			return cLuaBind<cBitMask>::CreateUData(L,pTarget);
-		}
-		=

-		static int	CreateMaterial	(lua_State *L) { PROFILE =

-			std::string myname =3D cOgreWrapper::GetUniqueName();
-			int i=3D2;
-			bool bHasAlpha=3D			(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? lua_t=
oboolean(L,i) : true;
-			cHueLoader* pHueLoader=3D (lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 cLuaBind<cHueLoader>::checkudata(L,i) : 0;
-			short bHue=3D				(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? luaL_che=
ckint(L,i) : 0;
-
-			if (!GenerateGumpMaterial(*checkudata_alive(L),myname.c_str(),luaL_chec=
kint(L,2),bHasAlpha,pHueLoader,bHue)) // WARNING ! changes size to 2^n wher=
e n >=3D 4
-				myname =3D "";
-			lua_pushstring(L,myname.c_str()); =

-			return 1; =

-		}
-		=

-		/// void	gGumpLoader:Load(id) for lua
-		static int	Load			(lua_State *L) { PROFILE =

-			cGumpLoader* pLoader =3D checkudata_alive(L);
-			mLastChunk[pLoader] =3D pLoader->GetGump(luaL_checkint(L,2));
-			return 0; =

-		}
-		=

-		/// iWidth,iHeight =3D gGumpLoader:GetSize() for last chunk loaded by Lo=
ad() for lua
-		static int	GetSize			(lua_State *L) { PROFILE =

-			cGump* pLastChunk =3D mLastChunk[checkudata_alive(L)];
-			lua_pushnumber(L,pLastChunk?pLastChunk->GetWidth():0); =

-			lua_pushnumber(L,pLastChunk?pLastChunk->GetHeight():0); =

-			return 2; =

-		}
-		=

-		virtual const char* GetLuaTypeName () { return "iris.GumpLoader"; }
-};
-std::map<cGumpLoader*,cGump*>	cGumpLoader_L::mLastChunk;
-
-
-class cSoundLoader_L : public cLuaBind<cSoundLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateSoundLoader",	&cSoundLoader_L::CreateSoundLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cSoundLoader_L::methodname));
-			//REGISTER_METHOD(CreateSoundSource)
-			REGISTER_METHOD(Destroy);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cSoundLoader*	CreateSoundLoader		(string type,string sFile); for lua
-		static int					CreateSoundLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cSoundLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cSoundLoader_In=
dexedFullFile(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			if (mystricmp(type,"OnDemand") =3D=3D 0) target =3D new cSoundLoader_In=
dexedOnDemand(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy				(lua_State *L) { PROFILE delete checkudata_alive(L=
); return 0; }
-		=

-		/*
-		static int	CreateSoundSource	(lua_State *L) { PROFILE
-			cSoundLoader *loader =3D checkudata_alive(L);
-			cSound *s =3D loader->GetSound(luaL_checkint(L,2));
-			=

-			if(s =3D=3D 0)return 0;
-			=

-			cSoundBufferPtr pBuffer(new cSoundBuffer(s->GetPCMBuffer(),s->GetPCMBuf=
ferSize(),
-												s->IsMono()?1:2,s->GetBitrate(),s->GetKHz()));
-			cSoundSource* target =3D new cSoundSourceBuffer(pBuffer);
-			return cLuaBind<cSoundSource>::CreateUData(L,target);
-		}
-		*/
-
-		virtual const char* GetLuaTypeName () { return "iris.SoundLoader"; }
-};
-
-class cMultiLoader_L : public cLuaBind<cMultiLoader> { public:
-	// implementation of cLuaBind
-
-		/// called by Register(), registers object-methods (see cLuaBind constru=
ctor for examples)
-		virtual void RegisterMethods	(lua_State *L) { PROFILE
-			lua_register(L,"CreateMultiLoader",	&cMultiLoader_L::CreateMultiLoader);
-			=

-			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cMultiLoader_L::methodname));
-			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(CountMultiParts);
-			REGISTER_METHOD(GetMultiParts);
-			#undef REGISTER_METHOD
-		}
-
-	// static methods exported to lua
-		=

-		/// cMultiLoader*	CreateMultiLoader		(string type,string sIndexFile,stri=
ng sDataFile); for lua
-		static int			CreateMultiLoader		(lua_State *L) { PROFILE
-			const char* type =3D luaL_checkstring(L,1);
-			cMultiLoader* target =3D 0;
-			if (mystricmp(type,"FullFile") =3D=3D 0) target =3D new cMultiLoader_In=
dexedFullFile(luaL_checkstring(L,2),luaL_checkstring(L,3));
-			return target ? CreateUData(L,target) : 0;
-		}
-		=

-	// object methods exported to lua
-
-		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		=

-		/// number of parts the multi with id has
-		static int	CountMultiParts	(lua_State *L) { PROFILE =

-			int id =3D static_cast<int>(luaL_checknumber(L,2));
-			cMultiLoader *loader =3D checkudata_alive(L);
-			lua_pushnumber(L,loader->CountMultiParts(id)); =

-			return 1; =

-		}
-		=

-		/// read out the part of the given multi, (blocknum,x,y,z,flags)
-		static int	GetMultiParts	(lua_State *L) { PROFILE =

-			int id =3D static_cast<int>(luaL_checknumber(L,2));
-			int part =3D static_cast<int>(luaL_checknumber(L,3));
-
-			cMultiLoader *loader =3D checkudata_alive(L);
-			if(!loader)return 0;
-
-			//int count =3D loader->CountMultiParts(id);
-			RawMultiPart *rawpart =3D loader->GetMultiParts(id);
-			if(!rawpart)return 0;
-
-			lua_pushnumber(L,rawpart[part].miBlockNum); =

-			lua_pushnumber(L,rawpart[part].miX); =

-			lua_pushnumber(L,rawpart[part].miY); =

-			lua_pushnumber(L,rawpart[part].miZ); =

-			lua_pushnumber(L,rawpart[part].miFlags); =

-			return 5; =

-		}
-
-		virtual const char* GetLuaTypeName () { return "iris.MultiLoader"; }
-};
-
+void	LuaRegisterData_GroundBlock 	(lua_State *L);
+void	LuaRegisterData_StaticBlock 	(lua_State *L);
+void	LuaRegisterData_Radar 			(lua_State *L);
+void	LuaRegisterData_TileType 		(lua_State *L);
+void	LuaRegisterData_TexMap	 		(lua_State *L);
+void	LuaRegisterData_ArtMap	 		(lua_State *L);
+void	LuaRegisterData_Anim	 		(lua_State *L);
+void	LuaRegisterData_Gump	 		(lua_State *L);
+void	LuaRegisterData_Sound	 		(lua_State *L);
+void	LuaRegisterData_Hue		 		(lua_State *L);
+void	LuaRegisterData_Multi		 	(lua_State *L);
+void	LuaRegisterData_Font		 	(lua_State *L);
 =

 /// lua binding
 void	LuaRegisterData 	(lua_State *L) { PROFILE
-	cLuaBind<cGroundBlockLoader>::GetSingletonPtr(new cGroundBlockLoader_L())=
->LuaRegister(L);
-	cLuaBind<cRadarColorLoader>::GetSingletonPtr(new cRadarColorLoader_L())->=
LuaRegister(L);
-	cLuaBind<cTileTypeLoader>::GetSingletonPtr(new cTileTypeLoader_L())->LuaR=
egister(L);
-	cLuaBind<cTexMapLoader>::GetSingletonPtr(new cTexMapLoader_L())->LuaRegis=
ter(L);
-	cLuaBind<cArtMapLoader>::GetSingletonPtr(new cArtMapLoader_L())->LuaRegis=
ter(L);
-	cLuaBind<cAnimLoader>::GetSingletonPtr(new cAnimLoader_L())->LuaRegister(=
L);
-	cLuaBind<cStaticBlockLoader>::GetSingletonPtr(new cStaticBlockLoader_L())=
->LuaRegister(L);
-	cLuaBind<cGumpLoader>::GetSingletonPtr(new cGumpLoader_L())->LuaRegister(=
L);
-	cLuaBind<cSoundLoader>::GetSingletonPtr(new cSoundLoader_L())->LuaRegiste=
r(L);
-	cLuaBind<cHueLoader>::GetSingletonPtr(new cHueLoader_L())->LuaRegister(L);
-	cLuaBind<cMultiLoader>::GetSingletonPtr(new cMultiLoader_L())->LuaRegiste=
r(L);
-	cLuaBind<cAnimDataLoader>::GetSingletonPtr(new cAnimDataLoader_L())->LuaR=
egister(L);
-	cLuaBind<cUniFontFileLoader>::GetSingletonPtr(new cUniFontFileLoader_L())=
->LuaRegister(L);
+	LuaRegisterData_GroundBlock 	(L);
+	LuaRegisterData_StaticBlock 	(L);
+	LuaRegisterData_Radar 			(L);
+	LuaRegisterData_TileType 		(L);
+	LuaRegisterData_TexMap	 		(L);
+	LuaRegisterData_ArtMap	 		(L);
+	LuaRegisterData_Anim	 		(L);
+	LuaRegisterData_Gump	 		(L);
+	LuaRegisterData_Sound	 		(L);
+	LuaRegisterData_Hue		 		(L);
+	LuaRegisterData_Multi		 	(L);
+	LuaRegisterData_Font		 	(L);
 }
+	=

+	=

+	=

 =




From no-reply at zwischenwelt.org  Fri May  9 22:23:01 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 09 May 2008 20:23:01 -0000
Subject: [Iris-commit] [IRIS] r2154 - in /trunk/lua: ./ obj/
Message-ID: <20080509210019.87EEF1C18654@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  9 22:23:00 2008
New Revision: 2154

Log:
dummy 2d renderer, black screen, but no crash

Added:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.light.lua
Modified:
    trunk/lua/lib.3d.cam.lua
    trunk/lua/lib.3d.mobile.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.3d.walksmooth.lua
    trunk/lua/lib.compass.lua
    trunk/lua/lib.loading.lua
    trunk/lua/lib.macrolist.lua
    trunk/lua/lib.mainmenu.lua
    trunk/lua/lib.pathfind.lua
    trunk/lua/lib.renderer.lua
    trunk/lua/lib.test.lua
    trunk/lua/main.lua
    trunk/lua/net.walk.lua
    trunk/lua/obj/obj.mobile.lua

Modified: trunk/lua/lib.3d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.cam.lua (original)
+++ trunk/lua/lib.3d.cam.lua Fri May  9 22:23:00 2008
@@ -22,6 +22,17 @@
 Renderer3D.gCamMoveWithMouse_OffX	=3D nil
 Renderer3D.gCamMoveWithMouse_OffY	=3D nil
 		=

+function Renderer3D:CamInit()
+	--print("activating Renderer3D")
+	local cam =3D GetMainCam()
+	cam:SetFOVy(gfDeg2Rad*45)
+	cam:SetNearClipDistance(0.5) -- old : 1
+	cam:SetFarClipDistance(2000) -- ogre defaul : 100000
+	cam:SetProjectionType(kCamera_PT_PERSPECTIVE) -- perspective
+	self.gbCamRotChanged =3D true
+end	=

+
+
 function Renderer3D:CamKeyUp(key)
 	if (key =3D=3D gInput_CamMouseButton and self.gCamMoveWithMouse) then =

 		self.gCamMoveWithMouse =3D false =

@@ -251,23 +262,22 @@
 end
 =

 -- can return floating point block position
-function Renderer3D:UpdateCompass()
+function Renderer3D:GetCompassInfo()
 	local ax,ay,az =3D GetMainCam():GetEulerAng()
-	local xmirror =3D false
 	=

 	-- if in third person, center compass on player instead of on cam
 	if (Renderer3D.gCamMode =3D=3D Renderer3D.kCamMode_Third) then
 		local x,y,z =3D gTileFreeWalk:GetExactLocalPos()
 		local xloc,yloc,zloc =3D self:LocalToUOPos(x,y,z*10)
 		--~ local xloc,yloc,zloc =3D GetPlayerPos()
-		if (xloc) then return ax, xloc/8, yloc/8, xmirror end
+		if (xloc) then return ax, xloc, yloc end
 	end
 		=

 	local camx,camy,camz =3D GetMainCam():GetPos()
-	local iCamOverBlockX =3D self.giMapOriginX*self.ROBMAP_CHUNK_SIZE + camx/8
-	local iCamOverBlockY =3D self.giMapOriginY*self.ROBMAP_CHUNK_SIZE + camy/8
-	=

-	return ax, -iCamOverBlockX, iCamOverBlockY, xmirror
+	local iCamOverLocX =3D self.giMapOriginX*self.ROBMAP_CHUNK_SIZE*8 + camx
+	local iCamOverLocY =3D self.giMapOriginY*self.ROBMAP_CHUNK_SIZE*8 + camy
+	=

+	return ax, -iCamOverLocX, iCamOverLocY
 end
 =

 --[[

Modified: trunk/lua/lib.3d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mobile.lua (original)
+++ trunk/lua/lib.3d.mobile.lua Fri May  9 22:23:00 2008
@@ -2,7 +2,7 @@
 -- manages all visual things for mobiles : body,energybar,aura,selection m=
arker,name, text over head...
 =

 -- called from obj.mobile.lua
-function UpdateMobileModel (mobile)
+function Renderer3D:UpdateMobileModel (mobile)
 	if (gTestNoMobileGfxNodes) then return end
 	if (not mobile.bodygfx) then mobile.bodygfx =3D CreateBodyGfx() end
 	mobile.bodygfx:MarkForUpdate(mobile.artid,mobile.hue,GetMobileEquipmentLi=
st(mobile))

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Fri May  9 22:23:00 2008
@@ -3,6 +3,16 @@
 -- see also lib.3d.dynamic.lua
 =

 Renderer3D =3D {}
+
+dofile(libpath .. "lib.3d.mobile.lua")
+dofile(libpath .. "lib.3d.dynamic.lua")
+dofile(libpath .. "lib.3d.mousepick.lua")
+dofile(libpath .. "lib.3d.map.lua")
+dofile(libpath .. "lib.3d.combat.lua")
+dofile(libpath .. "lib.3d.cam.lua")
+dofile(libpath .. "lib.3d.walksmooth.lua")
+
+
 gRendererList[ "Renderer3d" ] =3D Renderer3D
 =

 -- static Factor to rise the Z-Level for statics+dynamics
@@ -12,11 +22,29 @@
 Renderer3D.gDynamicMaxRenderDist =3D 128 -- 0 means always rendered  -- TO=
DO : make this dependant on bounding sphere size, e.g. in pixel size ?
 Renderer3D.gDynamicZAdd =3D 0.2 -- add a bit to make sure all dynamics can=
 be clicked and none are below the floor, todo : improve this by detecting =
floor height and model bbox
 =

-function Renderer3D:PreInit ()
-	-- load texture atlas
-	LoadTexAtlas()
-	MultiTexTerrainInit()
-end
+function Renderer3D:SetOfflineStartPos (x,y,z)
+	gTileFreeWalk:SetPos_All(x+0.5,y+0.5,z) -- + for both might be wrong..
+end
+
+
+
+function Renderer3D:SetLastConfirmedUOPos(xloc,yloc,zloc) gTileFreeWalk:Im=
pl_SetLastConfirmedUOPos(xloc,yloc,zloc) end -- walk
+function Renderer3D:SetLastRequestedUOPos(xloc,yloc,zloc) gTileFreeWalk:Im=
pl_SetLastRequestedUOPos(xloc,yloc,zloc) end -- walk
+
+--- for AttackMobile macro
+function Renderer3D:SetViewDir(dx,dy) gTileFreeWalk:SetViewDir(dx,dy) end
+
+-- for hotkey
+function Renderer3D:OfflineTeleportToMouse()
+	gTileFreeWalk:SetPos_All(gTileFreeWalk:RoundPos(gTileFreeWalk:MousePickPo=
s()))
+end
+
+-- used by MacroRead_GetPlayerPosition when no playermobile found (yet)
+function Renderer3D:GetExactLocalPos()
+	sx,sy,sz =3D gTileFreeWalk:GetExactLocalPos()
+	return -sx,sy,sz
+end
+
 =

 -- warning !you still have to do 0.1 z factor seperately
 function Renderer3D:UOPosToLocal (xloc,yloc,z) =

@@ -39,34 +67,6 @@
 	--print("TranslateOsiWalkAngle",-x,camangdeg)
 	--return -x + camangdeg - 3*45
 	return x - camangdeg + 5*45
-end
-
--- initializes Worldlight for normal SkyBox
-function Renderer3D:SetupWorldlight ()
-	if (gUseCaelumSkysystem) then return end
-
-	Client_ClearLights()
-
-	-- Sun Light
-	gDirectionalLightSun =3D Client_AddDirectionalLight(
-								gSunLightDirection.x,
-								gSunLightDirection.y,
-								gSunLightDirection.z)
-	=

-	Client_SetLightDiffuseColor(gDirectionalLightSun,
-								gSunLightDiffuse.r,
-								gSunLightDiffuse.g,
-								gSunLightDiffuse.b)
-
-	Client_SetLightSpecularColor(gDirectionalLightSun,
-								gSunLightSpecular.r,
-								gSunLightSpecular.g,
-								gSunLightSpecular.b)
-
-	-- Ambient Light
-	Client_SetAmbientLight( gAmbientLight.r,
-							gAmbientLight.g,
-							gAmbientLight.b, 1.0)
 end
 =

 function Renderer3D:SetMapEnvironment (bUnderGround)
@@ -186,7 +186,7 @@
 	Renderer3D.gbNeedCorrectAspectRatio =3D true
 end
 =

-function Renderer3D:CorrectAspectRatio (w,h)
+function Renderer3D:CorrectAspectRatio ()
 	if (not Renderer3D.gbNeedCorrectAspectRatio) then return end
 	Renderer3D.gbNeedCorrectAspectRatio =3D false
 	local vp =3D GetMainViewport()
@@ -194,24 +194,28 @@
 	GetMainCam():SetAspectRatio(vp:GetActualWidth() / vp:GetActualHeight())
 end
 =

+function Renderer3D:FirstInit ()
+	if (self.bFirstInitDone) then return end
+	self.bFirstInitDone =3D true
+	-- load texture atlas
+	LoadTexAtlas()
+	MultiTexTerrainInit()
+end
+
+	=

 function Renderer3D:Init()
-	--print("activating Renderer3D")
-	local cam =3D GetMainCam()
-	cam:SetFOVy(gfDeg2Rad*45)
-	cam:SetNearClipDistance(0.5) -- old : 1
-	cam:SetFarClipDistance(2000) -- ogre defaul : 100000
-	cam:SetProjectionType(kCamera_PT_PERSPECTIVE) -- perspective
-
+	self:FirstInit()
+	self:CamInit()
+	=

 	-- for 2D/3D renderer switching
 	self.gbActive =3D true
 =

 	-- initialize Worldlight for normal SkyBox
-	self.SetupWorldlight()
+	SetupWorldLight_Default()
 =

 	-- initialize Shadowsystem
 	self:SetupShadows()
 =

-	self.gbCamRotChanged =3D true
 	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
) then self:AddDynamicItem(dynamic) end end
 	for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile) end
 end

Modified: trunk/lua/lib.3d.walksmooth.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.walksmooth.lua (original)
+++ trunk/lua/lib.3d.walksmooth.lua Fri May  9 22:23:00 2008
@@ -97,6 +97,7 @@
 end
 =

 function Renderer3D:NotifyPlayerTeleported ()
+	gTileFreeWalk:NotifyPlayerMobileTeleport(GetPlayerMobile())
 	self:WalkSmoothReset(GetPlayerMobile())
 end
 =


Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Fri May  9 22:23:00 2008
@@ -183,7 +183,7 @@
 			local mygfx =3D gIrisCompassDialog.compassframe_rot.gfx
 			mygfx:InitRROC()
 			mygfx:SetMaterial("compassframe_rot")
-			local ax, iCamOverBlockX, iCamOverBlockY, MirrorX =3D gCurrentRenderer:=
UpdateCompass()
+			local ax, cxloc, cyloc =3D gCurrentRenderer:GetCompassInfo()
 			local r =3D math.sqrt( halfwidth*halfwidth + halfwidth*halfwidth )
 			local rsin =3D halfwidth * math.sin(- ax + gfDeg2Rad*90)
 			local rcos =3D halfwidth * math.cos(- ax + gfDeg2Rad*90)
@@ -321,14 +321,11 @@
 =

 -- returns the relative position in px (from the compass center) of a give=
n uo location in tiles
 function GetRelativeCompasUOPositionInPx	(xloc, yloc)
-	local angle, iCamOverBlockX, iCamOverBlockY, MirrorX =3D gCurrentRenderer=
:UpdateCompass()
+	local angle, cxloc, cyloc =3D gCurrentRenderer:GetCompassInfo()
 	local vw,vh =3D GetViewportSize() -- uses overlay manager
 	local z =3D GetMaxZ()
 	local mx =3D vw - gCompassSize/2 - gCompassOff
 	local my =3D 15 + gCompassSize/2 + gCompassOff
-	=

-	local cxloc =3D iCamOverBlockX*8
-	local cyloc =3D iCamOverBlockY*8
 	=

 	local px =3D xloc - cxloc
 	local py =3D yloc - cyloc
@@ -355,8 +352,8 @@
 function UpdateCompass ()
 	if (gDisableCompass) then return end
 	if (gIrisCompassDialog and gIrisCompassDialog.bDoUpdate) then	=

-		-- ax =3D camera angle, iCamOverBlockX*8 =3D tileposition, iCamOverBlock=
Y*8 =3D tileposition, MirrorX =3D strage mirror hack
-		local ax, iCamOverBlockX, iCamOverBlockY, MirrorX =3D gCurrentRenderer:U=
pdateCompass()
+		-- ax =3D camera angle, cxloc, cyloc =3D tileposition
+		local ax, cxloc, cyloc =3D gCurrentRenderer:GetCompassInfo()
 		local vw,vh =3D GetViewportSize() -- uses overlay manager
 		local z =3D GetMaxZ()
 		local mx =3D vw - gCompassSize/2 - gCompassOff
@@ -366,7 +363,7 @@
 		=

 		-- detail compass
 		if (not bRough) then
-			local xloc,yloc =3D iCamOverBlockX*8, iCamOverBlockY*8
+			local xloc,yloc =3D cxloc, cyloc
 			UpdateDetailMapCacheIfNeeded(xloc,yloc)
 			local mygfx =3D gIrisCompassDialog.detailcompass.gfx
 			=

@@ -440,27 +437,10 @@
 			mygfx:RenderableEnd()
 		=

 		end
-		=

-		-- old radar
-		--[[
-		if (gIrisCompassDialog.radar) then
-			--MemProfile("a")
-			gIrisCompassDialog.radar:SetLocation( iCamOverBlockX*8, iCamOverBlockY*=
8 ) -- TODO : memleak, old tiles (and textures?) not freed
-			--MemProfile("c")
-			gIrisCompassDialog.radar:SetAngle( ax )
-			gIrisCompassDialog.radar:SetPosition( mx, my )
-		=

-			if (MirrorX) then
-				gIrisCompassDialog.radar:SetMirrorX( true )
-			else
-				gIrisCompassDialog.radar:SetMirrorX( false )
-			end
-		end
-		]]--
 =

 		if (gIrisCompassDialog.compass.gfx and bRough) then
 			gIrisCompassDialog.compass.gfx:SetAngBias(ax)
-			gIrisCompassDialog.compass.gfx:SetUVMid(iCamOverBlockX/gCompassMapW, iC=
amOverBlockY/gCompassMapH)
+			gIrisCompassDialog.compass.gfx:SetUVMid(cxloc/8/gCompassMapW, cyloc/8/g=
CompassMapH)
 		end
 =

 		-- rotating compass part

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Fri May  9 22:23:00 2008
@@ -245,7 +245,7 @@
 	-- destroy old ground and static loaders
 	if (gGroundBlockLoader) then gGroundBlockLoader:Destroy() gGroundBlockLoa=
der =3D nil end
 	if (gStaticBlockLoader) then gStaticBlockLoader:Destroy() gStaticBlockLoa=
der =3D nil end
-	Renderer3D:ClearMapCache()
+	gCurrentRenderer:ClearMapCache()
 end
 =

 -- Loads Maps+Statics+Diff Files (only pre 6.0.0)

Modified: trunk/lua/lib.macrolist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.macrolist.lua (original)
+++ trunk/lua/lib.macrolist.lua Fri May  9 22:23:00 2008
@@ -228,8 +228,7 @@
 	if mobile then
 		sx,sy,sz =3D mobile.xloc,mobile.yloc,mobile.zloc * 0.1
 	else
-		sx,sy,sz =3D gTileFreeWalk:GetExactLocalPos()
-		sx =3D -sx
+		sx,sy,sz =3D gCurrentRenderer:GetExactLocalPos()
 	end	=

 	return sx,sy,sz
 end
@@ -402,7 +401,7 @@
 				local px,py,pz =3D GetPlayerTilePosition()
 				local dx,dy,dz =3D Vector.sub(px,py,pz, tx,ty,tz)
 				dx,dy,dz =3D Vector.normalise_to_len(dx,dy,dz, 1)
-				gTileFreeWalk:SetViewDir(dx,dy)
+				gCurrentRenderer:SetViewDir(dx,dy)
 				dx,dy,dz =3D Vector.add(tx,ty,tz, dx,dy,dz)
 				dx =3D round(dx)
 				dy =3D round(dy)

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Fri May  9 22:23:00 2008
@@ -110,12 +110,11 @@
 =

 	-- Binds key and Inits all InGame-Data
 	StartInGame() -- otherwise handled by the serverpacket (kPacket_Login_Com=
plete)
-	gTileFreeWalk:SetPos_All(x+0.5,y+0.5,z) -- + for both might be wrong..
+	gCurrentRenderer:SetOfflineStartPos(x,y,z)
+	=

 =

 	-- offline : tilefree walk teleport
-	BindDown("f6",function ()
-		gTileFreeWalk:SetPos_All(gTileFreeWalk:RoundPos(gTileFreeWalk:MousePickP=
os()))
-	end)
+	BindDown("f6",function () gCurrentRenderer:OfflineTeleportToMouse() end)
 	=

 	-- Unbind some keys only for offline mode (rest is the same as InGame)
 	UnBindArr({"u","q","e","tab","r","t","k","j","b","p","g","h","y"})

Modified: trunk/lua/lib.pathfind.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.pathfind.lua (original)
+++ trunk/lua/lib.pathfind.lua Fri May  9 22:23:00 2008
@@ -13,8 +13,7 @@
 	if mobile then
 		sx,sy,sz =3D mobile.xloc,mobile.yloc,mobile.zloc
 	else
-		sx,sy,sz =3D gTileFreeWalk:GetExactLocalPos()
-		sx =3D -sx
+		sx,sy,sz =3D gCurrentRenderer:GetExactLocalPos()
 		sz =3D sz * 10
 	end
 	return math.floor(sx),math.floor(sy),math.floor(sz)

Modified: trunk/lua/lib.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.renderer.lua (original)
+++ trunk/lua/lib.renderer.lua Fri May  9 22:23:00 2008
@@ -23,8 +23,8 @@
 end
 =

 -- called from c
-function NotifyMainWindowResized (w,h)
-	gCurrentRenderer:NotifyMainWindowResized(w,h) -- set aspect ratio
+function NotifyMainWindowResized (w,h) =

+	NotifyListener("Hook_MainWindowResized",w,h) -- warning, only use this to=
 mark as changed, might be called more than once per frame
 end
 =

 --###############################
@@ -33,5 +33,3 @@
 =

 -- renderer interface changes, remove these if implemented --
 -- example : if (not Renderer2D.SomeNewMethod) then Renderer2D.SomeNewMeth=
od =3D function() end end
-
-Renderer2D =3D Renderer2D or {}

Modified: trunk/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.test.lua (original)
+++ trunk/lua/lib.test.lua Fri May  9 22:23:00 2008
@@ -4,6 +4,46 @@
 function TestGuiSystem2_Step ()
 	local widget =3D gui.GetWidgetUnderMouse()
 	Client_SetBottomLine("TestGuiSystem2 WidgetUnderMouse : "..(widget and (w=
idget.mytext or "unknown") or "NONE"))
+end
+
+function GrassTestStep()
+	------------------------------------------ obsolete, just for testing ---=
--------------------------------
+	--[[	=

+	if gGrass and gStaticLoader then =

+		gGrass:Update() =

+	elseif GetMainCam() and gStaticBlockLoader then
+		gGrass =3D CreatePagedGeometry(GetMainCam(), 50)
+		gGrass:AddDetailLevel("batch",100,50)
+		--gGrass:AddDetailLevel("impostor",500,50)
+
+		local x,y,z =3D gCurrentRenderer:LocalToUOPos(GetMainCam():GetPos())
+		gStaticLoader =3D CreatePagedGeometryStaticLoader(gGrass, gStaticBlockLo=
ader, -1,1,10, x,y,z)
+		gStaticLoader:AssignToPagedGeometry(gGrass)
+		=

+		gGrassLoader =3D CreateGrassLoader(gGrass)
+		gGrassLoader:AssignToPagedGeometry(gGrass)
+
+		gGrassLoader:SetHeightFunction(function(x,z)
+			return x+z
+		end)
+
+		local l =3D gGrassLoader:AddLayer("grass")
+
+		l:SetMinimumSize(2.0, 2.0)
+		l:SetMaximumSize(2.5, 2.5)
+		l:SetAnimationEnabled(true)
+		l:SetSwayDistribution(10.0)
+		l:SetSwayLength(0.5)
+		l:SetSwaySpeed(0.5)
+		l:SetDensity(1.5)
+		l:SetFadeTechnique(false,true)
+		=

+		l:SetColorMapFileColor("terrain_texture.jpg")
+		l:SetDensityMapFileAlpha("grass_density.png")
+		l:SetMapBounds(-1500, -1500, 1500, 1500)
+	end
+	]]--
+	-------------------------------------------------------------------------=
---------------------------------
 end
 =

 function TestZLib()

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Fri May  9 22:23:00 2008
@@ -34,12 +34,7 @@
 -- renderer second
 gRendererList =3D {}
 dofile(libpath .. "lib.3d.renderer.lua")
-dofile(libpath .. "lib.3d.mobile.lua")
-dofile(libpath .. "lib.3d.dynamic.lua")
-dofile(libpath .. "lib.3d.mousepick.lua")
-dofile(libpath .. "lib.3d.map.lua")
-dofile(libpath .. "lib.3d.combat.lua")
-dofile(libpath .. "lib.3d.cam.lua")
+dofile(libpath .. "lib.2d.renderer.lua")
 =

 dofile(libpath .. "lib.renderer.lua")
 dofile(libpath .. "lib.uoids.lua")
@@ -71,7 +66,6 @@
 dofile(libpath .. "lib.fallback.lua")
 dofile(libpath .. "lib.charcreate.lua")
 dofile(libpath .. "lib.devtool.lua")
-dofile(libpath .. "lib.3d.walksmooth.lua")
 dofile(libpath .. "lib.mount.lua")
 dofile(libpath .. "lib.debug.lua")
 dofile(libpath .. "lib.uodragdrop.lua")
@@ -79,6 +73,7 @@
 dofile(libpath .. "lib.tilefreewalk.lua")
 dofile(libpath .. "lib.bugreport.lua")
 dofile(libpath .. "lib.buff.lua")
+dofile(libpath .. "lib.light.lua")
 dofile(libpath .. "lib.unifont.lua")
 dofile(libpath .. "lib.pathfind.lua")
 dofile(libpath .. "lib.plugin.lua")
@@ -320,8 +315,6 @@
 	PreLoad()
 	=

 	InvokeExporters()
-	=

-	gCurrentRenderer:PreInit()
 =

 	MainMenuFinishedPreLoading()
 =

@@ -343,44 +336,7 @@
 =

 	-- mainloop
 	while (Client_IsAlive()) do =

-		------------------------------------------ obsolete, just for testing --=
---------------------------------
-		--[[	=

-		if gGrass and gStaticLoader then =

-			gGrass:Update() =

-		elseif GetMainCam() and gStaticBlockLoader then
-			gGrass =3D CreatePagedGeometry(GetMainCam(), 50)
-			gGrass:AddDetailLevel("batch",100,50)
-			--gGrass:AddDetailLevel("impostor",500,50)
-
-			local x,y,z =3D gCurrentRenderer:LocalToUOPos(GetMainCam():GetPos())
-			gStaticLoader =3D CreatePagedGeometryStaticLoader(gGrass, gStaticBlockL=
oader, -1,1,10, x,y,z)
-			gStaticLoader:AssignToPagedGeometry(gGrass)
-			=

-			gGrassLoader =3D CreateGrassLoader(gGrass)
-			gGrassLoader:AssignToPagedGeometry(gGrass)
-
-			gGrassLoader:SetHeightFunction(function(x,z)
-				return x+z
-			end)
-
-			local l =3D gGrassLoader:AddLayer("grass")
-
-			l:SetMinimumSize(2.0, 2.0)
-			l:SetMaximumSize(2.5, 2.5)
-			l:SetAnimationEnabled(true)
-			l:SetSwayDistribution(10.0)
-			l:SetSwayLength(0.5)
-			l:SetSwaySpeed(0.5)
-			l:SetDensity(1.5)
-			l:SetFadeTechnique(false,true)
-			=

-			l:SetColorMapFileColor("terrain_texture.jpg")
-			l:SetDensityMapFileAlpha("grass_density.png")
-			l:SetMapBounds(-1500, -1500, 1500, 1500)
-		end
-		]]--
-		------------------------------------------------------------------------=
----------------------------------
-	=

+		GrassTestStep()
 		MainStep() =

 	end
 end
@@ -430,7 +386,7 @@
 		StepUODragDrop()
 		PingStep()
 		gCurrentRenderer:CombatGuiStep()
-		if (gCurrentRenderer.MobileAnimStep) then gCurrentRenderer:MobileAnimSte=
p() end
+		gCurrentRenderer:MobileAnimStep()
 		gCurrentRenderer:CamStep()
 		GuiStep()
 	else

Modified: trunk/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.walk.lua (original)
+++ trunk/lua/net.walk.lua Fri May  9 22:23:00 2008
@@ -196,7 +196,7 @@
 	=

 	-- set player pos
 	SetPlayerPos(xloc,yloc,zloc,iFullDir)
-	gTileFreeWalk:Impl_SetLastRequestedUOPos(xloc,yloc,zloc)
+	gCurrentRenderer:SetLastRequestedUOPos(xloc,yloc,zloc)
 	return true
 end
 =

@@ -223,7 +223,8 @@
 	=

 	if (request) then
 		gWalkRequests[iSeqNum] =3D nil -- request has been handled, remove from =
queue
-		gTileFreeWalk:Impl_SetLastConfirmedUOPos(request.xloc,request.yloc,reque=
st.zloc)
+		gCurrentRenderer:SetLastConfirmedUOPos(request.xloc,request.yloc,request=
.zloc)
+	=

 		-- todo : tilefree : set last confirmed pos
 		--~ WalkLog("kPacket_Accept_Movement ok")
 	else
@@ -253,7 +254,6 @@
 	WalkLog("kPacket_Block_Movement start")
 	ResetWalkQueue()
 	SetPlayerPos(xloc,yloc,zloc,dir)
-	gTileFreeWalk:NotifyPlayerMobileTeleport(GetPlayerMobile())
 	gCurrentRenderer:NotifyPlayerTeleported()
 	=

 	Send_Accept_Block_Movement(seqnumber)
@@ -314,7 +314,6 @@
 	=

 	ResetWalkQueue()
 	SetPlayerPos(mobiledata.xloc,mobiledata.yloc,mobiledata.zloc,mobiledata.d=
ir) -- always call this, affects gPlayerPos
-	gTileFreeWalk:NotifyPlayerMobileTeleport(GetPlayerMobile())
 	gCurrentRenderer:NotifyPlayerTeleported()
 	MultiTexTerrain_NotifyTeleport()
 	WalkLog("NotifyTeleport end")

Modified: trunk/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.mobile.lua (original)
+++ trunk/lua/obj/obj.mobile.lua Fri May  9 22:23:00 2008
@@ -152,8 +152,7 @@
 		if (paperdoll) then RebuildPaperdoll(paperdoll) end
 		=

 		-- TODO : UpdateMobileModel does check for changes, but still a little e=
xpensive, only call if neccessary ?
-		if (gCurrentRenderer =3D=3D Renderer3D) then UpdateMobileModel(self) end =

-		if (gCurrentRenderer =3D=3D Renderer2D) then assert(false,"FIXME?") gCur=
rentRenderer:UpdateMobileEquipment(self) end
+		gCurrentRenderer:UpdateMobileModel(self)
 	end
 =

 	self:NotifyListener("Mobile_Update")



From no-reply at zwischenwelt.org  Fri May  9 22:31:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 09 May 2008 20:31:14 -0000
Subject: [Iris-commit] [IRIS] r2155 - /trunk/lua/lib.2d.renderer.lua
Message-ID: <20080509210019.A6FEC1524038@zwischenwelt.org>

Author: ghoulsblade
Date: Fri May  9 22:31:14 2008
New Revision: 2155

Log:
2d disables skybox on mapload

Modified:
    trunk/lua/lib.2d.renderer.lua

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Fri May  9 22:31:14 2008
@@ -22,7 +22,7 @@
 	=

 	-- for 2D/3D renderer switching
 	self.gbActive =3D true
-
+	=

 	-- initialize Worldlight for normal SkyBox
 	SetupWorldLight_Default()
 	=

@@ -30,7 +30,11 @@
 	--~ for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile=
) end
 end
 =

-function Renderer2D:DeInit							() end
+function Renderer2D:DeInit							() =

+	self.gbActive =3D false
+end
+
+
 function Renderer2D:DestroyMobileGfx				() end
 function Renderer2D:DestroyMousePickItemBySerial	() end
 function Renderer2D:RemoveDynamicItem				() end
@@ -61,6 +65,11 @@
 function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc
 function Renderer2D:UpdateMobile				() end -- ???
 =

+-- skybox,fog etc for 3d
+function Renderer2D:SetMapEnvironment			() =

+	GetMainViewport():SetBackCol(0,0,0)
+	Client_SetSkybox()
+end
 =

 function Renderer2D:SetLastConfirmedUOPos(xloc,yloc,zloc) end -- walk
 function Renderer2D:SetLastRequestedUOPos(xloc,yloc,zloc) end -- walk
@@ -81,7 +90,6 @@
 function Renderer2D:NotifyHPChange				(serial, old, curvalue) end
 function Renderer2D:NotifyPlayerTeleported		() end
 function Renderer2D:BlendOutLayersAbovePlayer	() end
-function Renderer2D:SetMapEnvironment			() end -- skybox,fog etc for 3d
 function Renderer2D:ClearMapCache				() end
 =

 function Renderer2D:TerrainRayIntersect_Hit		(...) end -- ??? might not be=
 needed



From no-reply at zwischenwelt.org  Sat May 10 00:42:13 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 09 May 2008 22:42:13 -0000
Subject: [Iris-commit] [IRIS] r2156 -
	/trunk/data/models/atlas/tex_atlas_alpha_med.material
Message-ID: <20080509224213.7CD2C1C184EB@zwischenwelt.org>

Author: sience
Date: Sat May 10 00:42:12 2008
New Revision: 2156

Log:
-small fix

Modified:
    trunk/data/models/atlas/tex_atlas_alpha_med.material

Modified: trunk/data/models/atlas/tex_atlas_alpha_med.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_alpha_med.material (original)
+++ trunk/data/models/atlas/tex_atlas_alpha_med.material Sat May 10 00:42:1=
2 2008
@@ -1,5 +1,3 @@
-import * from textures.material
-
 material tex_atlas_alpha_med0 : atlas_base_alpha =

 { =

 	technique =




From no-reply at zwischenwelt.org  Sat May 10 00:51:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 09 May 2008 22:51:20 -0000
Subject: [Iris-commit] [IRIS] r2157 - in /trunk: bin/iris2.exe
 data/models/atlas/tex_atlas_med.material vs8/iris.vcproj
Message-ID: <20080509225121.8F0B81C18513@zwischenwelt.org>

Author: sience
Date: Sat May 10 00:51:18 2008
New Revision: 2157

Log:
-tex_atlas_med.material fixed
-updates to project files
-new binary

Modified:
    trunk/bin/iris2.exe
    trunk/data/models/atlas/tex_atlas_med.material
    trunk/vs8/iris.vcproj

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_med.material (original)
+++ trunk/data/models/atlas/tex_atlas_med.material Sat May 10 00:51:18 2008
@@ -1,5 +1,3 @@
-import * from textures.material
-
 material tex_atlas_med0 : atlas_base =

 { =

 	technique =


Modified: trunk/vs8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vs8/iris.vcproj (original)
+++ trunk/vs8/iris.vcproj Sat May 10 00:51:18 2008
@@ -205,10 +205,6 @@
 			UniqueIdentifier=3D"{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
 			<File
-				RelativePath=3D"..\src\builder.cpp"
-				>
-			</File>
-			<File
 				RelativePath=3D"..\src\builder_L.cpp"
 				>
 			</File>
@@ -217,10 +213,126 @@
 				>
 			</File>
 			<File
+				RelativePath=3D"..\src\data_anim.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_anim_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_artmap.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_artmap_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_common.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_font.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_font_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_groundblock.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_groundblock_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_gump.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_gump_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_hue.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_hue_L.cpp"
+				>
+			</File>
+			<File
 				RelativePath=3D"..\src\data_L.cpp"
 				>
 			</File>
 			<File
+				RelativePath=3D"..\src\data_light.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_lookupfile.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_map.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_mapinfo.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_multi.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_multi_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_radar.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_radar_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_sound.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_sound_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_staticblock.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_staticblock_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_texmap.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_texmap_L.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_tiletype.cpp"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\src\data_tiletype_L.cpp"
+				>
+			</File>
+			<File
 				RelativePath=3D"..\src\granny_L.cpp"
 				>
 			</File>
@@ -265,14 +377,6 @@
 				>
 			</File>
 			<File
-				RelativePath=3D"..\src\radar.cpp"
-				>
-			</File>
-			<File
-				RelativePath=3D"..\src\radar_L.cpp"
-				>
-			</File>
-			<File
 				RelativePath=3D"..\src\scripting.iris.cpp"
 				>
 			</File>
@@ -291,14 +395,6 @@
 			<File
 				RelativePath=3D"..\src\terrain_multitex.cpp"
 				>
-				<FileConfiguration
-					Name=3D"Release|Win32"
-					>
-					<Tool
-						Name=3D"VCCLCompilerTool"
-						GeneratePreprocessedFile=3D"0"
-					/>
-				</FileConfiguration>
 			</File>
 		</Filter>
 		<Filter
@@ -315,6 +411,82 @@
 				>
 			</File>
 			<File
+				RelativePath=3D"..\include\data_anim.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_artmap.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_common.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_font.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_groundblock.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_gump.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_hue.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_indexed.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_light.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_lookup.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_luabind_common.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_mapinfo.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_multi.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_radar.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_raw.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_sound.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_staticblock.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_texmap.h"
+				>
+			</File>
+			<File
+				RelativePath=3D"..\include\data_tiletype.h"
+				>
+			</File>
+			<File
 				RelativePath=3D"..\include\grannyloader_i2.h"
 				>
 			</File>
@@ -336,10 +508,6 @@
 			</File>
 			<File
 				RelativePath=3D"..\include\pathsearch.h"
-				>
-			</File>
-			<File
-				RelativePath=3D"..\include\radar.h"
 				>
 			</File>
 			<File



From no-reply at zwischenwelt.org  Sat May 10 01:26:07 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 09 May 2008 23:26:07 -0000
Subject: [Iris-commit] [IRIS] r2158 - in /trunk/lua: lib.2d.cam.lua
	lib.2d.renderer.lua
Message-ID: <20080509232609.3AE0F1524037@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 01:26:06 2008
New Revision: 2158

Log:
first watertile drawn in 2d new 2d mode : ortho cam setup seems to work

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 10 01:26:06 2008
@@ -1,22 +1,94 @@
 -- ortho cam
 =

+--[[
+
+	int w =3D cOgreWrapper::GetSingleton().mViewport->getActualWidth();
+	int h =3D cOgreWrapper::GetSingleton().mViewport->getActualHeight();
+
+	Ogre::Matrix4 ViewportMatrix =3D Ogre::Matrix4::getScale( 2.0/w, -2.0/h, =
1.0 ); // pixel-coordinate system =

+	ViewportMatrix.setTrans(Ogre::Vector3(-1.0, +1.0,0.0)); // 0,0 =3D left-t=
op
+	pRenderSys._setViewMatrix(			ViewportMatrix );
+	pRenderSys._setProjectionMatrix(	Ogre::Matrix4::IDENTITY );
+	pRenderSys._setWorldMatrix( 		Ogre::Matrix4::IDENTITY );
+]]--
+
+function Renderer2D:CamTestTile ()
+	-- create water
+	local gfx =3D CreateRootGfx3D()
+	local vc =3D 4
+	local ic =3D 6 * 2
+
+	gfx:SetSimpleRenderable()
+	gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
+
+	-- print("DEBUG","WATERSTART",count,vc,ic)
+	local x,y,z =3D 0,0,0
+	=

+	local w,h =3D 3,4
+	gfx:RenderableVertex(-x  ,y  ,z, 0,0,1, 0,0)
+	gfx:RenderableVertex(-x-w,y  ,z, 0,0,1, w,0)
+	gfx:RenderableVertex(-x  ,y+h,z, 0,0,1, 0,h)
+	gfx:RenderableVertex(-x-w,y+h,z, 0,0,1, w,h)
+	=

+	gfx:RenderableIndex3(0, 1, 2)
+	gfx:RenderableIndex3(1, 3, 2)
+	gfx:RenderableIndex3(0, 2, 1)
+	gfx:RenderableIndex3(1, 2, 3)
+
+	gfx:RenderableEnd()
+
+	local mat =3D GetPlainTextureMat("terrain1_mosa02.png")
+	--~ gfx:SetMaterial("BaseWhiteNoLighting")
+	--~ gfx:SetMaterial("water")
+	gfx:SetMaterial(mat)
+end
+
+
+Renderer2D.gCamAngle =3D 0
+
 function Renderer2D:CamInit ()
+	self:CamTestTile()
+	=

 	self.gbNeedCorrectAspectRatio =3D true
-	--[[ =

-	-- lugre
 	local cam =3D GetMainCam() =

+	local vp =3D GetMainViewport()
+	local viewport_w =3D vp:GetActualWidth()
+	local viewport_h =3D vp:GetActualHeight()
+	=

+	=

+	=

+	--~ local visible_h =3D viewport_h -- for pixel coordinate system
+	local yscale =3D 1.0 / math.sin(0.25*math.pi) -- uo tiles are quadratic i=
n iso, but would be y~0.7~sin(45 deg)
+	--~ yscale =3D 1
+	cam:SetAspectRatio(yscale * viewport_w / viewport_h )
+	local tile_h =3D 44  -- 44x44 pixels on screen, but rotated by 45 degree =
(diag=3D44.. but worldunit rotated as well) -> 44
+	local visible_h =3D viewport_h / tile_h -- coordinate system so that size=
 of 1 tile =3D 1 world unit
+	self.fNearClip =3D 0.5 * visible_h
 	cam:SetFOVy( gfDeg2Rad*90 )
-	cam:SetNearClipDistance( 0.5 * GetMainViewport():GetActualHeight() )
+	cam:SetNearClipDistance( self.fNearClip )
 	cam:SetFarClipDistance( 100000.0 )
-	cam:SetProjectionType(1)
+	cam:SetProjectionType(kCamera_PT_ORTHOGRAPHIC)
 	=

-	--  iris 3d + ortho (unfinished)
-	local cam =3D GetMainCam()
-	cam:SetFOVy(gfDeg2Rad*45)
-	cam:SetNearClipDistance(0.5) -- old : 1
-	cam:SetFarClipDistance(2000) -- ogre defaul : 100000
-	cam:SetProjectionType(kCamera_PT_ORTHOGRAPHIC) -- perspective
-	]]--
+	local xang =3D gfDeg2Rad * 45
+	local zang =3D gfDeg2Rad * (45+180)
+	local w1,x1,y1,z1 =3D Quaternion.fromAngleAxis(zang,0,0,1)	=

+	local w2,x2,y2,z2 =3D Quaternion.fromAngleAxis(xang,1,0,0)	=

+	local w,x,y,z =3D Quaternion.Mul(w1,x1,y1,z1, w2,x2,y2,z2)
+	=

+	=

+	local camdist =3D self.fNearClip+100
+	=

+	cam:SetRot(w,x,y,z)
+	cam:SetPos(Quaternion.ApplyToVector(0,0,camdist,w,x,y,z))
+end
+
+function Renderer2D:CamStep						() =

+	--~ print("Renderer2D:CamStep",math.floor(Renderer2D.gCamAngle/gfDeg2Rad))
+	--~ local cam =3D GetMainCam() =

+	--~ Renderer2D.gCamAngle =3D Renderer2D.gCamAngle + 0.2 * gfDeg2Rad
+	--~ local w3,x3,y3,z3 =3D Quaternion.fromAngleAxis(Renderer2D.gCamAngle,1=
,0,0)	=

+
+	--~ cam:SetRot(w3,x3,y3,z3)
 end
 =

 function Renderer2D:CorrectAspectRatio ()

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 10 01:26:06 2008
@@ -59,7 +59,6 @@
 function Renderer2D:MousePickStep				() end
 function Renderer2D:CombatGuiStep				() end
 function Renderer2D:MobileAnimStep				() end
-function Renderer2D:CamStep						() end
 function Renderer2D:SetOfflineStartPos			(x,y,z) end
 =

 function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc



From no-reply at zwischenwelt.org  Sat May 10 15:46:04 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 10 May 2008 13:46:04 -0000
Subject: [Iris-commit] [IRIS] r2159 - in /trunk/lua: lib.2d.cam.lua
 lib.2d.renderer.lua lib.terrain.multitex.lua
Message-ID: <20080510134605.3AA9B1C182F8@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 15:46:04 2008
New Revision: 2159

Log:
2d terrain test

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 10 15:46:04 2008
@@ -11,6 +11,18 @@
 	pRenderSys._setProjectionMatrix(	Ogre::Matrix4::IDENTITY );
 	pRenderSys._setWorldMatrix( 		Ogre::Matrix4::IDENTITY );
 ]]--
+
+
+Renderer2D.iTestZeroBX,Renderer2D.iTestZeroBY =3D 653,424
+
+function Renderer2D:CamTestBlock ()
+	local bx,by =3D Renderer2D.iTestZeroBX,Renderer2D.iTestZeroBY
+	for ax =3D -1,1 do
+	for ay =3D -1,1 do
+		local gfx =3D MakeMultiTexTerrainGfx(bx+ax,by+ay)
+	end
+	end
+end
 =

 function Renderer2D:CamTestTile ()
 	-- create water
@@ -44,9 +56,9 @@
 end
 =

 =

-Renderer2D.gCamAngle =3D 0
 =

 function Renderer2D:CamInit ()
+
 	self:CamTestTile()
 	=

 	self.gbNeedCorrectAspectRatio =3D true
@@ -60,7 +72,7 @@
 	--~ local visible_h =3D viewport_h -- for pixel coordinate system
 	local yscale =3D 1.0 / math.sin(0.25*math.pi) -- uo tiles are quadratic i=
n iso, but would be y~0.7~sin(45 deg)
 	--~ yscale =3D 1
-	cam:SetAspectRatio(yscale * viewport_w / viewport_h )
+	cam:SetAspectRatio( yscale * viewport_w / viewport_h )
 	local tile_h =3D 44  -- 44x44 pixels on screen, but rotated by 45 degree =
(diag=3D44.. but worldunit rotated as well) -> 44
 	local visible_h =3D viewport_h / tile_h -- coordinate system so that size=
 of 1 tile =3D 1 world unit
 	self.fNearClip =3D 0.5 * visible_h
@@ -69,20 +81,26 @@
 	cam:SetFarClipDistance( 100000.0 )
 	cam:SetProjectionType(kCamera_PT_ORTHOGRAPHIC)
 	=

-	local xang =3D gfDeg2Rad * 45
+	local xang =3D gfDeg2Rad * (45) =

 	local zang =3D gfDeg2Rad * (45+180)
 	local w1,x1,y1,z1 =3D Quaternion.fromAngleAxis(zang,0,0,1)	=

 	local w2,x2,y2,z2 =3D Quaternion.fromAngleAxis(xang,1,0,0)	=

 	local w,x,y,z =3D Quaternion.Mul(w1,x1,y1,z1, w2,x2,y2,z2)
 	=

 	=

-	local camdist =3D self.fNearClip+100
+	local camdist =3D self.fNearClip+300
 	=

 	cam:SetRot(w,x,y,z)
-	cam:SetPos(Quaternion.ApplyToVector(0,0,camdist,w,x,y,z))
+	local px,py,pz =3D Quaternion.ApplyToVector(0,0,camdist,w,x,y,z)
+	--~ local bx,by =3D 653,424
+	local bx,by =3D 0,0
+	cam:SetPos(px+bx*8,py+by*8,pz)
 end
 =

 function Renderer2D:CamStep						() =

+	local curticks =3D Client_GetTicks()
+	if (not self.blockload) then self.blockload =3D curticks end
+	--~ if (curticks > self.blockload + 1000*5) then self:CamTestBlock() self=
.blockload =3D nil print("blockload") end
 	--~ print("Renderer2D:CamStep",math.floor(Renderer2D.gCamAngle/gfDeg2Rad))
 	--~ local cam =3D GetMainCam() =

 	--~ Renderer2D.gCamAngle =3D Renderer2D.gCamAngle + 0.2 * gfDeg2Rad

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 10 15:46:04 2008
@@ -13,6 +13,7 @@
 	if (self.bFirstInitDone) then return end
 	self.bFirstInitDone =3D true
 	RegisterListener("Hook_MainWindowResized",function () Renderer2D.gbNeedCo=
rrectAspectRatio =3D true end)
+	MultiTexTerrainInit()
 end
 	=

 =

@@ -48,7 +49,7 @@
 -- returns ax,xloc,yloc  (ax =3D angle, constant for iso cam)
 function Renderer2D:GetCompassInfo				() =

 	local ax =3D (180+45)*gfDeg2Rad
-	local xloc,yloc =3D 0,0 -- TODO
+	local xloc,yloc =3D Renderer2D.iTestZeroBX*8,Renderer2D.iTestZeroBY*8 -- =
TODO
 	return ax,xloc,yloc
 end
 =

@@ -68,13 +69,21 @@
 function Renderer2D:SetMapEnvironment			() =

 	GetMainViewport():SetBackCol(0,0,0)
 	Client_SetSkybox()
+	=

 end
 =

 function Renderer2D:SetLastConfirmedUOPos(xloc,yloc,zloc) end -- walk
 function Renderer2D:SetLastRequestedUOPos(xloc,yloc,zloc) end -- walk
 function Renderer2D:SetViewDir(dx,dy)			end --- for AttackMobile macro
 function Renderer2D:OfflineTeleportToMouse		() end
-function Renderer2D:UOPosToLocal				(...) end -- ??? needed for multitex-t=
errain ?
+
+
+function Renderer2D:UOPosToLocal				(xloc,yloc,z) -- needed for multitex-t=
errain ?
+	return	-(xloc - Renderer2D.iTestZeroBX * 8 - 4),
+			 (yloc - Renderer2D.iTestZeroBY * 8 - 4),
+			(z or 0)
+end
+
 function Renderer2D:InitLocalCam				(x,y,z) end -- ??? offline mode ?
 function Renderer2D:CamChangeZoom				() end
 function Renderer2D:ChangeCamMode				() end

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May 10 15:46:04 2008
@@ -105,8 +105,8 @@
 =

 function MultiTexTerrainInit ()
 	if (not gEnableMultiTexTerrain) then return end
-	=

-	print(MultiTexTerrainInit)
+	if (gMultiTexTerrainInitDone) then return end
+	gMultiTexTerrainInitDone =3D true
 	=

 	-- TerrainMultiTex_AddTexCoordSet (iMode,tx,ty,tw,th,iTileSpan)  -- 0:gro=
und,1:mainmask,2:mask
 	local e =3D 1/4
@@ -350,7 +350,7 @@
 	gfx.x =3D x
 	gfx.y =3D y
 	gfx.z =3D z
-	gfx:SetPosition(x,y,z)
+	gfx:SetPosition(x,y,z) print("MakeMultiTexTerrainGfx",x,y,z,gGroundBlockL=
oader,bx,by,kMultiTexTerrainChunkSize)
 	Gfx3D_SetMultiTexTerrain(gfx,gGroundBlockLoader,bx,by,kMultiTexTerrainChu=
nkSize,kMultiTexTerrainChunkSize)
 	gfx:SetMaterial(MultiTexTerrainGetMat())
 	gfx:SetCastShadows(gTerrainCastShadows)



From no-reply at zwischenwelt.org  Sat May 10 17:34:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 10 May 2008 15:34:31 -0000
Subject: [Iris-commit] [IRIS] r2160 - in /trunk/lua: lib.2d.cam.lua
 lib.2d.renderer.lua lib.terrain.multitex.lua
Message-ID: <20080510153431.D0F3A1524040@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 17:34:30 2008
New Revision: 2160

Log:
2d : arrowkeys move cam around

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 10 17:34:30 2008
@@ -12,14 +12,24 @@
 	pRenderSys._setWorldMatrix( 		Ogre::Matrix4::IDENTITY );
 ]]--
 =

+Renderer2D.fCamDistClipAdd =3D 300
 =

-Renderer2D.iTestZeroBX,Renderer2D.iTestZeroBY =3D 653,424
+Renderer2D.pCamTestBlocks =3D {}
 =

 function Renderer2D:CamTestBlock ()
-	local bx,by =3D Renderer2D.iTestZeroBX,Renderer2D.iTestZeroBY
+	local xloc,yloc =3D self:GetCamPos()
+	local bx,by =3D math.floor(xloc/8 - 0.5),math.floor(yloc/8 - 0.5)
+	if (self.pCamTestBlockX =3D=3D bx and self.pCamTestBlockY =3D=3D by) then=
 return end
+	print("CamTestBlock",bx,by)
+	=

+	-- moved, new block
+	self.pCamTestBlockX =3D bx
+	self.pCamTestBlockY =3D by
+	for k,v in pairs(self.pCamTestBlocks) do v:Destroy() end
+	self.pCamTestBlocks =3D {}
 	for ax =3D -1,1 do
 	for ay =3D -1,1 do
-		local gfx =3D MakeMultiTexTerrainGfx(bx+ax,by+ay)
+		table.insert(self.pCamTestBlocks,MakeMultiTexTerrainGfx(bx+ax,by+ay))
 	end
 	end
 end
@@ -59,7 +69,7 @@
 =

 function Renderer2D:CamInit ()
 =

-	self:CamTestTile()
+	--~ self:CamTestTile()
 	=

 	self.gbNeedCorrectAspectRatio =3D true
 	local cam =3D GetMainCam() =

@@ -87,20 +97,33 @@
 	local w2,x2,y2,z2 =3D Quaternion.fromAngleAxis(xang,1,0,0)	=

 	local w,x,y,z =3D Quaternion.Mul(w1,x1,y1,z1, w2,x2,y2,z2)
 	=

-	=

-	local camdist =3D self.fNearClip+300
-	=

+	self.fCamDist =3D self.fNearClip + self.fCamDistClipAdd
+	self.qCamRot =3D {w,x,y,z}
 	cam:SetRot(w,x,y,z)
-	local px,py,pz =3D Quaternion.ApplyToVector(0,0,camdist,w,x,y,z)
-	--~ local bx,by =3D 653,424
-	local bx,by =3D 0,0
-	cam:SetPos(px+bx*8,py+by*8,pz)
+	self:SetCamPos(0,0)
+	self:SetCamPos(653*8,424*8)
+end
+
+-- returns xloc,yloc in uo coords
+function Renderer2D:GetCamPos () return self.fCamPosXLoc,self.fCamPosYLoc =
end
+
+function Renderer2D:SetCamPos (xloc,yloc)
+	--~ print("SetCamPos",xloc,yloc,self.fCamDist)
+	self.fCamPosXLoc =3D xloc
+	self.fCamPosYLoc =3D yloc
+	local px,py,pz =3D Quaternion.ApplyToVector(0,0,self.fCamDist,unpack(self=
.qCamRot))
+	local x,y,z =3D self:UOPosToLocal(xloc,yloc,0)
+	GetMainCam():SetPos(px+x,py+y,pz+z)
 end
 =

 function Renderer2D:CamStep						() =

 	local curticks =3D Client_GetTicks()
-	if (not self.blockload) then self.blockload =3D curticks end
-	--~ if (curticks > self.blockload + 1000*5) then self:CamTestBlock() self=
.blockload =3D nil print("blockload") end
+	local xloc,yloc =3D self:GetCamPos()
+	local move =3D 4 * 8 * gSecondsSinceLastFrame
+	local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[k=
ey_right] and 1 or 0))
+	local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[key=
_down] and 1 or 0))
+	if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end
+	self:CamTestBlock()
 	--~ print("Renderer2D:CamStep",math.floor(Renderer2D.gCamAngle/gfDeg2Rad))
 	--~ local cam =3D GetMainCam() =

 	--~ Renderer2D.gCamAngle =3D Renderer2D.gCamAngle + 0.2 * gfDeg2Rad

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 10 17:34:30 2008
@@ -49,7 +49,7 @@
 -- returns ax,xloc,yloc  (ax =3D angle, constant for iso cam)
 function Renderer2D:GetCompassInfo				() =

 	local ax =3D (180+45)*gfDeg2Rad
-	local xloc,yloc =3D Renderer2D.iTestZeroBX*8,Renderer2D.iTestZeroBY*8 -- =
TODO
+	local xloc,yloc =3D self:GetCamPos()
 	return ax,xloc,yloc
 end
 =

@@ -79,9 +79,9 @@
 =

 =

 function Renderer2D:UOPosToLocal				(xloc,yloc,z) -- needed for multitex-t=
errain ?
-	return	-(xloc - Renderer2D.iTestZeroBX * 8 - 4),
-			 (yloc - Renderer2D.iTestZeroBY * 8 - 4),
-			(z or 0)
+	return	-(xloc),
+			 (yloc),
+			 (z or 0)
 end
 =

 function Renderer2D:InitLocalCam				(x,y,z) end -- ??? offline mode ?

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sat May 10 17:34:30 2008
@@ -350,7 +350,7 @@
 	gfx.x =3D x
 	gfx.y =3D y
 	gfx.z =3D z
-	gfx:SetPosition(x,y,z) print("MakeMultiTexTerrainGfx",x,y,z,gGroundBlockL=
oader,bx,by,kMultiTexTerrainChunkSize)
+	gfx:SetPosition(x,y,z) -- print("MakeMultiTexTerrainGfx",x,y,z,gGroundBlo=
ckLoader,bx,by,kMultiTexTerrainChunkSize)
 	Gfx3D_SetMultiTexTerrain(gfx,gGroundBlockLoader,bx,by,kMultiTexTerrainChu=
nkSize,kMultiTexTerrainChunkSize)
 	gfx:SetMaterial(MultiTexTerrainGetMat())
 	gfx:SetCastShadows(gTerrainCastShadows)



From no-reply at zwischenwelt.org  Sat May 10 17:45:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 10 May 2008 15:45:33 -0000
Subject: [Iris-commit] [IRIS] r2161 - /trunk/lua/lib.2d.cam.lua
Message-ID: <20080510154533.EE16C1524040@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 17:45:33 2008
New Revision: 2161

Log:
2d card wider, movement faster

Modified:
    trunk/lua/lib.2d.cam.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 10 17:45:33 2008
@@ -20,15 +20,15 @@
 	local xloc,yloc =3D self:GetCamPos()
 	local bx,by =3D math.floor(xloc/8 - 0.5),math.floor(yloc/8 - 0.5)
 	if (self.pCamTestBlockX =3D=3D bx and self.pCamTestBlockY =3D=3D by) then=
 return end
-	print("CamTestBlock",bx,by)
+	--~ print("CamTestBlock",bx,by)
 	=

 	-- moved, new block
 	self.pCamTestBlockX =3D bx
 	self.pCamTestBlockY =3D by
 	for k,v in pairs(self.pCamTestBlocks) do v:Destroy() end
 	self.pCamTestBlocks =3D {}
-	for ax =3D -1,1 do
-	for ay =3D -1,1 do
+	for ax =3D -2,2 do
+	for ay =3D -2,2 do
 		table.insert(self.pCamTestBlocks,MakeMultiTexTerrainGfx(bx+ax,by+ay))
 	end
 	end
@@ -119,7 +119,7 @@
 function Renderer2D:CamStep						() =

 	local curticks =3D Client_GetTicks()
 	local xloc,yloc =3D self:GetCamPos()
-	local move =3D 4 * 8 * gSecondsSinceLastFrame
+	local move =3D 16 * gSecondsSinceLastFrame  * (gKeyPressed[key_lshift] an=
d 8*16 or 1)
 	local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[k=
ey_right] and 1 or 0))
 	local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[key=
_down] and 1 or 0))
 	if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end



From no-reply at zwischenwelt.org  Sat May 10 18:07:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 10 May 2008 16:07:16 -0000
Subject: [Iris-commit] [IRIS] r2162 - in /trunk/lua: lib.2d.cam.lua
 lib.2d.renderer.lua lib.3d.renderer.lua lib.renderer.lua
Message-ID: <20080510160716.DDCD51524037@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 18:07:14 2008
New Revision: 2162

Log:
fix for window resizing : 2d cam

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.renderer.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 10 18:07:14 2008
@@ -67,48 +67,53 @@
 =

 =

 =

-function Renderer2D:CamInit ()
-
-	--~ self:CamTestTile()
-	=

-	self.gbNeedCorrectAspectRatio =3D true
+function Renderer2D:CamSetAspectRatio ()
 	local cam =3D GetMainCam() =

 	local vp =3D GetMainViewport()
 	local viewport_w =3D vp:GetActualWidth()
 	local viewport_h =3D vp:GetActualHeight()
 	=

-	=

-	=

-	--~ local visible_h =3D viewport_h -- for pixel coordinate system
 	local yscale =3D 1.0 / math.sin(0.25*math.pi) -- uo tiles are quadratic i=
n iso, but would be y~0.7~sin(45 deg)
-	--~ yscale =3D 1
-	cam:SetAspectRatio( yscale * viewport_w / viewport_h )
 	local tile_h =3D 44  -- 44x44 pixels on screen, but rotated by 45 degree =
(diag=3D44.. but worldunit rotated as well) -> 44
 	local visible_h =3D viewport_h / tile_h -- coordinate system so that size=
 of 1 tile =3D 1 world unit
+	=

 	self.fNearClip =3D 0.5 * visible_h
-	cam:SetFOVy( gfDeg2Rad*90 )
+	self.fCamDist =3D self.fNearClip + self.fCamDistClipAdd
+	=

 	cam:SetNearClipDistance( self.fNearClip )
+	cam:SetAspectRatio( yscale * viewport_w / viewport_h )
+	=

+	self:SetCamPos(self:GetCamPos()) -- nearclip changed
+end
+
+function Renderer2D:CamInit ()
+	--~ self:CamTestTile()
+	=

+	-- cam params that don't change
+	local cam =3D GetMainCam() =

 	cam:SetFarClipDistance( 100000.0 )
 	cam:SetProjectionType(kCamera_PT_ORTHOGRAPHIC)
+	cam:SetFOVy( gfDeg2Rad*90 )
 	=

+	-- cam rotation
 	local xang =3D gfDeg2Rad * (45) =

 	local zang =3D gfDeg2Rad * (45+180)
 	local w1,x1,y1,z1 =3D Quaternion.fromAngleAxis(zang,0,0,1)	=

 	local w2,x2,y2,z2 =3D Quaternion.fromAngleAxis(xang,1,0,0)	=

 	local w,x,y,z =3D Quaternion.Mul(w1,x1,y1,z1, w2,x2,y2,z2)
-	=

-	self.fCamDist =3D self.fNearClip + self.fCamDistClipAdd
 	self.qCamRot =3D {w,x,y,z}
 	cam:SetRot(w,x,y,z)
-	self:SetCamPos(0,0)
-	self:SetCamPos(653*8,424*8)
+	=

+	-- main cam setup
+	self.fCamPosXLoc =3D 653*8
+	self.fCamPosYLoc =3D 424*8
+	self:CamSetAspectRatio()
 end
 =

 -- returns xloc,yloc in uo coords
 function Renderer2D:GetCamPos () return self.fCamPosXLoc,self.fCamPosYLoc =
end
 =

 function Renderer2D:SetCamPos (xloc,yloc)
-	--~ print("SetCamPos",xloc,yloc,self.fCamDist)
 	self.fCamPosXLoc =3D xloc
 	self.fCamPosYLoc =3D yloc
 	local px,py,pz =3D Quaternion.ApplyToVector(0,0,self.fCamDist,unpack(self=
.qCamRot))
@@ -117,6 +122,11 @@
 end
 =

 function Renderer2D:CamStep						() =

+	if (self.gbNeedCorrectAspectRatio) then
+		self.gbNeedCorrectAspectRatio =3D false
+		self:CamSetAspectRatio()
+	end
+	=

 	local curticks =3D Client_GetTicks()
 	local xloc,yloc =3D self:GetCamPos()
 	local move =3D 16 * gSecondsSinceLastFrame  * (gKeyPressed[key_lshift] an=
d 8*16 or 1)

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 10 18:07:14 2008
@@ -103,6 +103,5 @@
 function Renderer2D:TerrainRayIntersect_Hit		(...) end -- ??? might not be=
 needed
 =

 =

-function Renderer2D:NotifyMainWindowResized (w,h) self.gbNeedCorrectAspect=
Ratio =3D true end
 =

 =


Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sat May 10 18:07:14 2008
@@ -181,10 +181,6 @@
 	end
 end
 =

---- warning ! this gets called a lot while user resizes window
-function Renderer3D:NotifyMainWindowResized (w,h)
-	Renderer3D.gbNeedCorrectAspectRatio =3D true
-end
 =

 function Renderer3D:CorrectAspectRatio ()
 	if (not Renderer3D.gbNeedCorrectAspectRatio) then return end
@@ -200,6 +196,7 @@
 	-- load texture atlas
 	LoadTexAtlas()
 	MultiTexTerrainInit()
+	RegisterListener("Hook_MainWindowResized",function () Renderer3D.gbNeedCo=
rrectAspectRatio =3D true end)
 end
 =

 	=


Modified: trunk/lua/lib.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.renderer.lua (original)
+++ trunk/lua/lib.renderer.lua Sat May 10 18:07:14 2008
@@ -23,6 +23,7 @@
 end
 =

 -- called from c
+--- warning ! this gets called a lot while user resizes window
 function NotifyMainWindowResized (w,h) =

 	NotifyListener("Hook_MainWindowResized",w,h) -- warning, only use this to=
 mark as changed, might be called more than once per frame
 end



From no-reply at zwischenwelt.org  Sat May 10 18:32:38 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 10 May 2008 16:32:38 -0000
Subject: [Iris-commit] [IRIS] r2163 - in /trunk/lua: lib.2d.cam.lua
	lib.compass.lua
Message-ID: <20080510163240.266AB1C186BC@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 18:32:37 2008
New Revision: 2163

Log:
compass now handles window resize well, thanks to btbn for this patch

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.compass.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 10 18:32:37 2008
@@ -66,8 +66,8 @@
 end
 =

 =

-
-function Renderer2D:CamSetAspectRatio ()
+-- updates aspect ratio, zoom etc
+function Renderer2D:CamUpdateParams ()
 	local cam =3D GetMainCam() =

 	local vp =3D GetMainViewport()
 	local viewport_w =3D vp:GetActualWidth()
@@ -107,7 +107,7 @@
 	-- main cam setup
 	self.fCamPosXLoc =3D 653*8
 	self.fCamPosYLoc =3D 424*8
-	self:CamSetAspectRatio()
+	self:CamUpdateParams()
 end
 =

 -- returns xloc,yloc in uo coords
@@ -124,7 +124,7 @@
 function Renderer2D:CamStep						() =

 	if (self.gbNeedCorrectAspectRatio) then
 		self.gbNeedCorrectAspectRatio =3D false
-		self:CamSetAspectRatio()
+		self:CamUpdateParams()
 	end
 	=

 	local curticks =3D Client_GetTicks()

Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Sat May 10 18:32:37 2008
@@ -7,6 +7,7 @@
 gDetailMapCacheMaterial =3D nil
 gDetailMapCacheBX =3D nil
 gDetailMapCacheBY =3D nil
+gbCompassLayoutDirty =3D false
 kDetailMapCacheSize =3D 256
 kDetailMapCacheViewRad =3D 80
 =

@@ -121,6 +122,13 @@
 function InitCompassIfNeeded () =

 	if (gDisableCompass) then return end
 	if (gIrisCompassDialog) then return end
+
+	RegisterListener("Hook_MainWindowResized",
+		function()
+			gbCompassLayoutDirty =3D true
+		end
+	)
+
 	local iGumpID_BigCompass =3D (hex2num("0x1393")) -- big compass
 	local iGumpID_SmallCompass =3D (hex2num("0x1392")) -- small compass
 =

@@ -351,6 +359,29 @@
 -- called every frame
 function UpdateCompass ()
 	if (gDisableCompass) then return end
+	=

+	if(gbCompassLayoutDirty) then
+		gbCompassLayoutDirty =3D false
+		local vw,vh =3D GetViewportSize()
+		gIrisCompassDialog.rootwidget.gfx:SetPos(vw-gCompassSize - gCompassOff,1=
5 + gCompassOff)
+		if (gIrisCompassDialog.compassframe_static) then
+			local z =3D GetMaxZ()
+			local mx =3D vw - gCompassSize/2 - gCompassOff
+			local my =3D 15 + gCompassSize/2 + gCompassOff
+			local halfwidth =3D 128
+
+			local mygfx =3D gIrisCompassDialog.compassframe_static.gfx
+			mygfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
+			mygfx:RenderableVertex(((mx - halfwidth)/vw * 2.0 - 1.0),((my - halfwid=
th)/vh * (-2.0) + 1.0),z, 0,0)
+			mygfx:RenderableVertex(((mx + halfwidth)/vw * 2.0 - 1.0),((my - halfwid=
th)/vh * (-2.0) + 1.0),z, 1,0)
+			mygfx:RenderableVertex(((mx - halfwidth)/vw * 2.0 - 1.0),((my + halfwid=
th)/vh * (-2.0) + 1.0),z, 0,1)
+			mygfx:RenderableVertex(((mx + halfwidth)/vw * 2.0 - 1.0),((my + halfwid=
th)/vh * (-2.0) + 1.0),z, 1,1)
+			mygfx:RenderableIndex3(0,1,2)
+			mygfx:RenderableIndex3(1,3,2)
+			mygfx:RenderableEnd()
+		end
+	end
+	=

 	if (gIrisCompassDialog and gIrisCompassDialog.bDoUpdate) then	=

 		-- ax =3D camera angle, cxloc, cyloc =3D tileposition
 		local ax, cxloc, cyloc =3D gCurrentRenderer:GetCompassInfo()



From no-reply at zwischenwelt.org  Sat May 10 19:05:02 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 10 May 2008 17:05:02 -0000
Subject: [Iris-commit] [IRIS] r2164 - /trunk/repairmusic.sh
Message-ID: <20080510170503.5B5A61C18318@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 19:05:01 2008
New Revision: 2164

Log:
script to reencode uo mp3s to make them play under OpenAL under linux, than=
ks to btbn

Added:
    trunk/repairmusic.sh   (with props)



From no-reply at zwischenwelt.org  Sat May 10 19:12:57 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 10 May 2008 17:12:57 -0000
Subject: [Iris-commit] [IRIS] r2165 - /trunk/repairmusic.sh
Message-ID: <20080510171257.0FBCF153C00F@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 10 19:12:56 2008
New Revision: 2165

Log:
repairmusic script fixed

Modified:
    trunk/repairmusic.sh

Modified: trunk/repairmusic.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/repairmusic.sh (original)
+++ trunk/repairmusic.sh Sat May 10 19:12:56 2008
@@ -1,9 +1,5 @@
 #!/bin/bash
-for i in *.mp3; dompg123 -w "$(echo $i | sed "s/.mp3/.wav/")" "$i"; done
-rm *.mp3
-for i in *.wav; do lame -h -V2 $i $(echo $i | sed "s/.wav/.mp3/"); done
-rm *.wav
-(06:41:55 PM) Btbn(iris-linux,de,vm): for i in *.mp3; do
+for i in *.mp3; do
     mpg123 -w "$(echo $i | sed "s/.mp3/.wav/")" "$i";
 done
 rm *.mp3



From no-reply at zwischenwelt.org  Sun May 11 04:39:17 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 11 May 2008 02:39:17 -0000
Subject: [Iris-commit] [IRIS] r2166 - in /trunk/lua: lib.2d.cam.lua
 lib.2d.map.lua lib.2d.renderer.lua lib.3d.map.lua lib.3d.renderer.lua
 lib.loading.lua lib.map.lua lib.walking3.lua main.lua
Message-ID: <20080511023917.BAD021C1833D@zwischenwelt.org>

Author: ghoulsblade
Date: Sun May 11 04:39:16 2008
New Revision: 2166

Log:
lib.map.lua : unified map caching, to be used by renderers,walkcode,macros =
etc.. , maploader for 2d renderer startet (priority based design, to be exe=
cuted in many small steps for smoother loading)

Added:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.map.lua
Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.loading.lua
    trunk/lua/lib.walking3.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sun May 11 04:39:16 2008
@@ -1,38 +1,10 @@
 -- ortho cam
 =

---[[
 =

-	int w =3D cOgreWrapper::GetSingleton().mViewport->getActualWidth();
-	int h =3D cOgreWrapper::GetSingleton().mViewport->getActualHeight();
-
-	Ogre::Matrix4 ViewportMatrix =3D Ogre::Matrix4::getScale( 2.0/w, -2.0/h, =
1.0 ); // pixel-coordinate system =

-	ViewportMatrix.setTrans(Ogre::Vector3(-1.0, +1.0,0.0)); // 0,0 =3D left-t=
op
-	pRenderSys._setViewMatrix(			ViewportMatrix );
-	pRenderSys._setProjectionMatrix(	Ogre::Matrix4::IDENTITY );
-	pRenderSys._setWorldMatrix( 		Ogre::Matrix4::IDENTITY );
-]]--
-
+Renderer2D.fCamPosXLoc =3D 0
+Renderer2D.fCamPosYLoc =3D 0
+Renderer2D.fCamPosZLoc =3D 0
 Renderer2D.fCamDistClipAdd =3D 300
-
-Renderer2D.pCamTestBlocks =3D {}
-
-function Renderer2D:CamTestBlock ()
-	local xloc,yloc =3D self:GetCamPos()
-	local bx,by =3D math.floor(xloc/8 - 0.5),math.floor(yloc/8 - 0.5)
-	if (self.pCamTestBlockX =3D=3D bx and self.pCamTestBlockY =3D=3D by) then=
 return end
-	--~ print("CamTestBlock",bx,by)
-	=

-	-- moved, new block
-	self.pCamTestBlockX =3D bx
-	self.pCamTestBlockY =3D by
-	for k,v in pairs(self.pCamTestBlocks) do v:Destroy() end
-	self.pCamTestBlocks =3D {}
-	for ax =3D -2,2 do
-	for ay =3D -2,2 do
-		table.insert(self.pCamTestBlocks,MakeMultiTexTerrainGfx(bx+ax,by+ay))
-	end
-	end
-end
 =

 function Renderer2D:CamTestTile ()
 	-- create water
@@ -91,7 +63,8 @@
 	=

 	-- cam params that don't change
 	local cam =3D GetMainCam() =

-	cam:SetFarClipDistance( 100000.0 )
+	--~ cam:SetFarClipDistance( 100000.0 )
+	cam:SetFarClipDistance( 2000.0 )
 	cam:SetProjectionType(kCamera_PT_ORTHOGRAPHIC)
 	cam:SetFOVy( gfDeg2Rad*90 )
 	=

@@ -105,19 +78,18 @@
 	cam:SetRot(w,x,y,z)
 	=

 	-- main cam setup
-	self.fCamPosXLoc =3D 653*8
-	self.fCamPosYLoc =3D 424*8
 	self:CamUpdateParams()
 end
 =

 -- returns xloc,yloc in uo coords
-function Renderer2D:GetCamPos () return self.fCamPosXLoc,self.fCamPosYLoc =
end
+function Renderer2D:GetCamPos () return self.fCamPosXLoc,self.fCamPosYLoc,=
self.fCamPosZLoc end
 =

-function Renderer2D:SetCamPos (xloc,yloc)
+function Renderer2D:SetCamPos (xloc,yloc,zloc)
 	self.fCamPosXLoc =3D xloc
 	self.fCamPosYLoc =3D yloc
+	self.fCamPosZLoc =3D zloc or 0
 	local px,py,pz =3D Quaternion.ApplyToVector(0,0,self.fCamDist,unpack(self=
.qCamRot))
-	local x,y,z =3D self:UOPosToLocal(xloc,yloc,0)
+	local x,y,z =3D self:UOPosToLocal(xloc,yloc,zloc or 0)
 	GetMainCam():SetPos(px+x,py+y,pz+z)
 end
 =

@@ -127,26 +99,12 @@
 		self:CamUpdateParams()
 	end
 	=

+	-- keyboard move cam
 	local curticks =3D Client_GetTicks()
 	local xloc,yloc =3D self:GetCamPos()
 	local move =3D 16 * gSecondsSinceLastFrame  * (gKeyPressed[key_lshift] an=
d 8*16 or 1)
 	local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[k=
ey_right] and 1 or 0))
 	local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[key=
_down] and 1 or 0))
 	if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end
-	self:CamTestBlock()
-	--~ print("Renderer2D:CamStep",math.floor(Renderer2D.gCamAngle/gfDeg2Rad))
-	--~ local cam =3D GetMainCam() =

-	--~ Renderer2D.gCamAngle =3D Renderer2D.gCamAngle + 0.2 * gfDeg2Rad
-	--~ local w3,x3,y3,z3 =3D Quaternion.fromAngleAxis(Renderer2D.gCamAngle,1=
,0,0)	=

-
-	--~ cam:SetRot(w3,x3,y3,z3)
 end
 =

-function Renderer2D:CorrectAspectRatio ()
-	if (not self.gbNeedCorrectAspectRatio) then return end
-	self.gbNeedCorrectAspectRatio =3D false
-	local vp =3D GetMainViewport()
-	--~ GetMainCam():SetAspectRatio(vp:GetActualWidth() / vp:GetActualHeight(=
))
-end
-
-

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sun May 11 04:39:16 2008
@@ -8,6 +8,7 @@
 Renderer2D =3D {}
 =

 dofile(libpath .. "lib.2d.cam.lua")
+dofile(libpath .. "lib.2d.map.lua")
 =

 function Renderer2D:FirstInit ()
 	if (self.bFirstInitDone) then return end
@@ -35,8 +36,20 @@
 	self.gbActive =3D false
 end
 =

+-- called from mainstep while ingame
+function Renderer2D:MainStep	()
+	self:CamStep()
+	self:MapStep()
+	-- TODO : self:CombatGuiStep() ?
+	-- TODO : self:MobileAnimStep() ?
+	-- TODO : self:MousePickStep() ?
+end
 =

-function Renderer2D:DestroyMobileGfx				() end
+ -- 653*8
+ -- 424*8
+
+ =

+ function Renderer2D:DestroyMobileGfx				() end
 function Renderer2D:DestroyMousePickItemBySerial	() end
 function Renderer2D:RemoveDynamicItem				() end
 function Renderer2D:AddDynamicItem					() end
@@ -56,11 +69,9 @@
 -- used by MacroRead_GetPlayerPosition when no playermobile found (yet)
 function Renderer2D:GetExactLocalPos() return 0,0,0 end
 =

-function Renderer2D:UpdateMap					() end -- called from mainstep while ing=
ame
 function Renderer2D:MousePickStep				() end
-function Renderer2D:CombatGuiStep				() end
-function Renderer2D:MobileAnimStep				() end
-function Renderer2D:SetOfflineStartPos			(x,y,z) end
+function Renderer2D:SetOfflineStartPos			(x,y,z) self:SetCamPos(-x,y,z) end
+
 =

 function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc
 function Renderer2D:UpdateMobile				() end -- ???
@@ -98,7 +109,7 @@
 function Renderer2D:NotifyHPChange				(serial, old, curvalue) end
 function Renderer2D:NotifyPlayerTeleported		() end
 function Renderer2D:BlendOutLayersAbovePlayer	() end
-function Renderer2D:ClearMapCache				() end
+function Renderer2D:ClearMapCache				() self:MapClear() end
 =

 function Renderer2D:TerrainRayIntersect_Hit		(...) end -- ??? might not be=
 needed
 =


Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Sun May 11 04:39:16 2008
@@ -66,16 +66,6 @@
 	end
 end
 =

--- returns tiletype,z        posx,posy in absolute tilecoords
-function GetGroundAtAbsPos (xloc,yloc)
-	local bx,by =3D math.floor(xloc/8),math.floor(yloc/8)
-	return gGroundBlockLoader:GetTile(bx,by,xloc-8*bx,yloc-8*by)
-end
-
--- returns an array,  {{artid=3D?,zloc=3D?,hue=3D?},{artid=3D?,zloc=3D?,hu=
e=3D?},...}
-function GetStaticsAtAbsPos (xloc,yloc)
-	return W3_GetStaticTiles(xloc,yloc) -- o.artid,o.zloc,o.hue   -- todo... =
other caching ?
-end
 =

 -- param is the area where normal mapblocks are loaded
 function Renderer3D:RebuildLowDetailTerrain (minx,maxx,miny,maxy)

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sun May 11 04:39:16 2008
@@ -26,6 +26,13 @@
 	gTileFreeWalk:SetPos_All(x+0.5,y+0.5,z) -- + for both might be wrong..
 end
 =

+function Renderer3D:MainStep	()
+	self:CombatGuiStep()
+	self:MobileAnimStep()
+	self:CamStep()
+	self:UpdateMap()
+	self:MousePickStep()
+end
 =

 =

 function Renderer3D:SetLastConfirmedUOPos(xloc,yloc,zloc) gTileFreeWalk:Im=
pl_SetLastConfirmedUOPos(xloc,yloc,zloc) end -- walk

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Sun May 11 04:39:16 2008
@@ -246,6 +246,7 @@
 	if (gGroundBlockLoader) then gGroundBlockLoader:Destroy() gGroundBlockLoa=
der =3D nil end
 	if (gStaticBlockLoader) then gStaticBlockLoader:Destroy() gStaticBlockLoa=
der =3D nil end
 	gCurrentRenderer:ClearMapCache()
+	MapClearCache()
 end
 =

 -- Loads Maps+Statics+Diff Files (only pre 6.0.0)
@@ -258,6 +259,7 @@
 =

 	profile:StartSection("clearcache")
 	gCurrentRenderer:ClearMapCache()
+	MapClearCache()
 	print("gMapIndex",gMapIndex)
 =

 	if (not gInitialMapLoaded) then LoadingProfile("load MapInfo") end

Modified: trunk/lua/lib.walking3.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking3.lua (original)
+++ trunk/lua/lib.walking3.lua Sun May 11 04:39:16 2008
@@ -20,9 +20,7 @@
 kAlwaysIgnoreDoors			=3D false
 kIgnoreMovableImpassables	=3D false
 =

-gW3CacheBlocks =3D {}
 gW3ItemTypeFlagsCache =3D {}
-kW3CacheBlocks_MaxSqDist =3D 8*8
 =

 -- returns bClientSidePassable,zloc
 function GetNearestGroundLevel (xloc,yloc,iStartZ,iDir)
@@ -52,59 +50,6 @@
 	return bMoveIsOk,newZ
 end
 =

-
-
-
-function W3_GetCacheBlock (xloc,yloc)
-	local bx =3D math.floor(xloc/8) -- block
-	local by =3D math.floor(yloc/8) -- block
-	local n =3D bx..","..by
-	local b =3D gW3CacheBlocks[n]
-	if (b) then return b end
-	=

-	-- create new cacheblock
-	b =3D { bx=3Dbx,by=3Dby }
-	gW3CacheBlocks[n] =3D b
-	=

-	-- erase blocks outside maxdist
-	for k,v in pairs(gW3CacheBlocks) do
-		if (sqdist2(v.bx,v.by,bx,by) > kW3CacheBlocks_MaxSqDist) then
-			gW3CacheBlocks[k] =3D nil -- erase block from cache
-		end
-	end
-	=

-	-- statics
-	b.statics =3D {}
-	gStaticBlockLoader:Load(bx,by) -- following gStaticBlockLoader commands o=
perate on this loaded block
-	local iStaticCount =3D gStaticBlockLoader:Count()
-	for i =3D 0,iStaticCount-1 do
-		local iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-		local xloc,yloc =3D bx*8 + iX,by*8 + iY
-		local n =3D xloc..","..yloc
-		local arr =3D b.statics[n]
-		if (not arr) then arr =3D {} b.statics[n] =3D arr end
-		table.insert(arr,{zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,bIsStatic=3Dt=
rue})
-	end
-	=

-	-- ground
-	b.ground =3D {}
-	for ty =3D 0,7 do
-	for tx =3D 0,7 do
-		local xloc,yloc =3D bx*8+tx,by*8+ty
-		local iTileType,zloc =3D gGroundBlockLoader:GetTile2(xloc,yloc)  -- TODO=
 : season translation ??? iTranstile	=

-		-- RunUO1.0/src/TileMatrix.cs:600: public bool Ignored
-		local bIgnored =3D iTileType =3D=3D 2 or iTileType =3D=3D 0x1DB or ( iTi=
leType >=3D 0x1AE and iTileType <=3D 0x1B5 )
-		b.ground[xloc..","..yloc] =3D {iTileType=3DiTileType,zloc=3Dzloc,bIgnore=
d=3DbIgnored,flags=3DGetGroundTileType(iTileType).miFlags}
-	end
-	end
-	=

-	return b
-end
-
-function W3_GetStaticTiles		(xloc,yloc)	return W3_GetCacheBlock(xloc,yloc)=
.statics[xloc..","..yloc] or {} end =

-function W3_GetLandTile			(xloc,yloc)	return W3_GetCacheBlock(xloc,yloc).g=
round[xloc..","..yloc] end
-function W3_GetMapW				()			return gGroundBlockLoader:GetMapW() * 8 end
-function W3_GetMapH				()			return gGroundBlockLoader:GetMapH() * 8 end
 =

 -- old : Movable runuo:ImplFlag.Movable , probably true for dynamic, false=
 for static    (door?)
 function W3_ItemIsMovable		(item)		return not item.bIsStatic end
@@ -130,9 +75,7 @@
 =

 -- considers statics, dynamics and multis
 function W3_ForAllItemsAtPos	(xloc,yloc,fun,param)
-	local b =3D W3_GetCacheBlock(xloc,yloc)
-	local n =3D xloc..","..yloc
-	for k,static in pairs(b.statics[n] or {}) do fun(static,param) end
+	for k,static in pairs(MapGetStatics(xloc,yloc)) do fun(static,param) end
 	for k,dynamic in pairs(GetDynamicList()) do
 		if (DynamicIsInWorld(dynamic) and dynamic.artid) then
 			if (dynamic.artid >=3D gMulti_ID) then -- multi =

@@ -149,10 +92,10 @@
 -- returns min,avg,max of 4 vertices
 function W3_GetAverageZ			(xloc,yloc)			=

 	-- /cavern/RunUO1.0/src/Map.cs:173:        public void GetAverageZ
-	local zTop		=3D W3_GetLandTile(xloc  ,yloc  ).zloc
-	local zLeft		=3D W3_GetLandTile(xloc  ,yloc+1).zloc
-	local zRight	=3D W3_GetLandTile(xloc+1,yloc  ).zloc
-	local zBottom	=3D W3_GetLandTile(xloc+1,yloc+1).zloc
+	local zTop		=3D MapGetGround(xloc  ,yloc  ).zloc
+	local zLeft		=3D MapGetGround(xloc  ,yloc+1).zloc
+	local zRight	=3D MapGetGround(xloc+1,yloc  ).zloc
+	local zBottom	=3D MapGetGround(xloc+1,yloc+1).zloc
 =

 	local z,top,avg =3D zTop,zTop
 	if ( zLeft   < z ) then z =3D zLeft	end
@@ -184,7 +127,7 @@
 	local xLeft		, yLeft		=3D ApplyDir( d - 1, xStart	,yStart	)
 	local xRight	, yRight	=3D ApplyDir( d + 1, xStart	,yStart	)
 =

-	if ( xForward < 0 or yForward < 0 or xForward >=3D W3_GetMapW() or yForwa=
rd >=3D W3_GetMapH() ) then return false,newZ end
+	if ( xForward < 0 or yForward < 0 or xForward >=3D MapGetWInTiles() or yF=
orward >=3D MapGetHInTiles() ) then return false,newZ end
 	=

 	local checkDiagonals =3D DirIsDiagonal(d) -- see lib.protocol.lua:56:
 =

@@ -262,13 +205,13 @@
 function W3_Check(  mobile,  items,  x,  y,  startTop,  startZ,  canSwim, =
 cantWalk )
 	local newZ =3D 0
 =

-	local tiles			 =3D W3_GetStaticTiles( x, y ) -- Tile[]
-	local landTile		 =3D W3_GetLandTile( x, y ) -- Tile
+	local tiles			 =3D MapGetStatics( x, y ) -- Tile[]
+	local landTile		 =3D MapGetGround( x, y ) -- Tile
 	local landTileFlags  =3D landTile.flags
 	local landTileIsWet	 =3D TestMask(landTileFlags,kTileFlag.Wet)
 =

 	local landBlocks =3D TestMask(landTileFlags,kTileFlag.Impassable) -- bool
-	local considerLand =3D not landTile.bIgnored -- bool
+	local considerLand =3D not landTile.bIgnoredByWalk -- bool
 =

 	if ( landBlocks and canSwim and landTileIsWet ) then
 		landBlocks =3D false
@@ -421,7 +364,7 @@
 	local landZ 		=3D 0
 	local landCenter	=3D 0
 	local landTop		=3D 0
-	local landTile 		=3D W3_GetLandTile( posx, posy ) -- Tile
+	local landTile 		=3D MapGetGround( posx, posy ) -- Tile
 	local landTileFlags	=3D landTile.flags
 	local landBlocks	=3D TestMask(landTileFlags, kTileFlag.Impassable)
 =

@@ -433,7 +376,7 @@
 =

 	landZ,landCenter,landTop =3D W3_GetAverageZ( posx, posy)
 =

-	local considerLand =3D not landTile.bIgnored
+	local considerLand =3D not landTile.bIgnoredByWalk
 =

 	local zCenter =3D 0
 	local isSet =3D false
@@ -445,7 +388,7 @@
 		isSet =3D true
 	end
 =

-	local staticTiles =3D W3_GetStaticTiles( posx, posy ) -- Tile[]
+	local staticTiles =3D MapGetStatics( posx, posy ) -- Tile[]
 =

 	for i,tile in pairs(staticTiles) do -- Tile
 		local itemtype =3D GetStaticTileType(BitwiseAND(tile.artid , 0x3FFF)) --=
 ItemData

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sun May 11 04:39:16 2008
@@ -46,6 +46,7 @@
 dofile(libpath .. "lib.protocol.lua")
 dofile(libpath .. "lib.mousepick.lua")
 dofile(libpath .. "lib.data.lua")
+dofile(libpath .. "lib.map.lua")
 dofile(libpath .. "lib.cliloc.lua")
 dofile(libpath .. "lib.macrolist.lua")
 dofile(libpath .. "lib.walking2.lua")
@@ -381,14 +382,10 @@
 	NetStep()
 =

 	if (gInGameStarted) then
-		gCurrentRenderer:UpdateMap()
-		gCurrentRenderer:MousePickStep()
+		gCurrentRenderer:MainStep()
 		StepUODragDrop()
+		GuiStep()
 		PingStep()
-		gCurrentRenderer:CombatGuiStep()
-		gCurrentRenderer:MobileAnimStep()
-		gCurrentRenderer:CamStep()
-		GuiStep()
 	else
 		StepMainMenu()
 	end



From no-reply at zwischenwelt.org  Sun May 11 17:09:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 11 May 2008 15:09:16 -0000
Subject: [Iris-commit] [IRIS] r2169 - /trunk/lua/lib.artatlas.lua
Message-ID: <20080511150918.403C9152403D@zwischenwelt.org>

Author: ghoulsblade
Date: Sun May 11 17:09:16 2008
New Revision: 2169

Log:
forgot to add file

Added:
    trunk/lua/lib.artatlas.lua



From no-reply at zwischenwelt.org  Sun May 11 16:50:43 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 11 May 2008 14:50:43 -0000
Subject: [Iris-commit] [IRIS] r2167 - in /trunk/lua: lib.2d.map.lua
	lib.map.lua main.lua
Message-ID: <20080511145043.A8BD81524037@zwischenwelt.org>

Author: ghoulsblade
Date: Sun May 11 16:50:43 2008
New Revision: 2167

Log:
mapload fix for fractions, worked on 2d maploader

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.map.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Sun May 11 16:50:43 2008
@@ -16,9 +16,8 @@
 k2DMapJob =3D {}
 k2DMapJob.TerrainGfx	=3D {fPrio=3D1.00} -- load&gfx in one step, quick
 k2DMapJob.StaticList	=3D {fPrio=3D2.00} -- data from file, index
-k2DMapJob.StaticCalc	=3D {fPrio=3D2.01} -- list what is to be loaded...
-k2DMapJob.StaticLoad	=3D {fPrio=3D2.02} -- load textures to texatlas etc ,=
 might be done multiple times
-k2DMapJob.StaticGfx		=3D {fPrio=3D2.03} =

+k2DMapJob.StaticLoad	=3D {fPrio=3D2.01} -- load textures to texatlas etc ,=
 might be done in multiple steps
+k2DMapJob.StaticGfx		=3D {fPrio=3D2.02} =

 k2DMapJob.WaterLoad		=3D {fPrio=3D3.00} -- load ground info
 k2DMapJob.WaterCalc		=3D {fPrio=3D3.01}
 k2DMapJob.WaterGfx		=3D {fPrio=3D3.02}
@@ -29,7 +28,7 @@
 function Renderer2D:MapStep	()
 	local iCurTicks =3D Client_GetTicks()
 	if (iCurTicks < Renderer2D.iNextMapStep) then return end
-	Renderer2D.iNextMapStep =3D iCurTicks + Renderer2D.kGoodTicksBetweenFrame=
s -- often, but small steps
+	Renderer2D.iNextMapStep =3D iCurTicks + 0.5*Renderer2D.kGoodTicksBetweenF=
rames -- often, but small steps
 	=

 	-- do some work until we run out of time
 	local iAllowedTimeEnd =3D iCurTicks + Renderer2D.kMapLoadAllowedTicksPerF=
rame
@@ -101,6 +100,7 @@
 =

 -- doesn't remove the block from the list, only destroys data
 function Renderer2D:MapDestroyBlockData	(block) =

+	ArtAtlasUnLock(block) -- release atlas mat lock
 	if (block.gfx_terrain) then block.gfx_terrain:Destroy() block.gfx_terrain=
 =3D nil end
 end
 =

@@ -124,32 +124,47 @@
 -- statics : load infos from file
 function k2DMapJob.StaticList.fun	(block)
 	block.statics =3D MapGetBlockStatics(block.bx,block.by)
-	block.pJob =3D k2DMapJob.StaticCalc
-end
-
--- statics : analyze infos and collect what artid-hue combos are needed
-function k2DMapJob.StaticCalc.fun	(block)
-	block.types_hues =3D {}
-	for k,static in pairs(block.statics) do
-		local iTileTypeID,iHue =3D static.artid,static.hue
-		if (not block.types_hues[iTileTypeID]) then =

-				block.types_hues[iTileTypeID] =3D {} =

-		end
-				block.types_hues[iTileTypeID][iHue] =3D true
-	end
-	=

-	=

-	=

 	block.pJob =3D k2DMapJob.StaticLoad
 end
 =

--- statics : load textures to atlas
-function k2DMapJob.StaticLoad.fun	(block) =

+-- statics : analyze, load textures to atlas
+function k2DMapJob.StaticLoad.fun	(block)
+	-- load atlas : artid-hue
+	block.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Ar=
tAtlasLoadAndLock)
+	block.pStaticGroups =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see ArtAt=
lasLoadAndLock)
+	for k,static in pairs(block.statics) do
+		local iTileTypeID	=3D static.artid
+		local iHue			=3D static.hue
+		=

+		local arr =3D block.pStaticAtlasMats[iTileTypeID]
+		if (not arr) then arr =3D {} block.pStaticAtlasMats[iTileTypeID] =3D arr=
 end
+		=

+		-- get/load atlas mat
+		local atlasmat =3D arr[iHue]
+		if (not atlasmat) then
+			atlasmat =3D ArtAtlasLoadAndLock(iTileTypeID,iHue,block)
+			arr[iHue] =3D atlasmat
+		end
+		=

+		-- add to matname group
+		local matname =3D atlasmat.matname
+		local group =3D block.pStaticGroups[matname]
+		if (not group) then group =3D {} block.pStaticGroups[matname] =3D group =
end
+		=

+		table.insert(group,static)
+	end
 	block.pJob =3D k2DMapJob.StaticGfx
 end
 =

 -- statics : create gfx
 function k2DMapJob.StaticGfx.fun	(block) =

+	for matname,group in pairs(block.pStaticGroups) do
+		-- TODO : create fastbatch with matname and size=3Dtable.getn(group)
+		for k,static in pairs(group) do
+			local atlasmat =3D block.pStaticAtlasMats[static.artid][static.hue]
+			-- todo : add sprit with atlasmat texcoords and size
+		end
+	end
 	block.pJob =3D k2DMapJob.WaterLoad
 end
 =


Modified: trunk/lua/lib.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.map.lua (original)
+++ trunk/lua/lib.map.lua Sun May 11 16:50:43 2008
@@ -7,10 +7,10 @@
 =

 =

 -- {iTileType=3D?,zloc=3D?,bIgnoredByWalk=3D?,flags=3D?}
-function MapGetGround		(xloc,yloc)	return MapGetCacheBlock(math.floor(xloc=
/8),math.floor(yloc/8)).ground[ 		 (yloc % 8)*10 + (xloc % 8)] end
+function MapGetGround		(xloc,yloc)	return MapGetCacheBlock(math.floor(xloc=
/8),math.floor(yloc/8)).ground[ 		 (math.floor(yloc) % 8)*10 + (math.floor(=
xloc) % 8)] end
 =

 -- {{zloc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,bIsStatic=3Dtrue},...} -=
- xloc,yloc absolute
-function MapGetStatics		(xloc,yloc)	return MapGetCacheBlock(math.floor(xlo=
c/8),math.floor(yloc/8)).statics_bypos[(yloc % 8)*10 + (xloc % 8)] end =

+function MapGetStatics		(xloc,yloc)	return MapGetCacheBlock(math.floor(xlo=
c/8),math.floor(yloc/8)).statics_bypos[(math.floor(yloc) % 8)*10 + (math.fl=
oor(xloc) % 8)] end =

 function MapGetBlockStatics	(bx,by)		return MapGetCacheBlock(bx,by).static=
s_all end =

 =

 -- returns tiletype,z       xloc,yloc in absolute tilecoords

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sun May 11 16:50:43 2008
@@ -47,6 +47,7 @@
 dofile(libpath .. "lib.mousepick.lua")
 dofile(libpath .. "lib.data.lua")
 dofile(libpath .. "lib.map.lua")
+dofile(libpath .. "lib.artatlas.lua")
 dofile(libpath .. "lib.cliloc.lua")
 dofile(libpath .. "lib.macrolist.lua")
 dofile(libpath .. "lib.walking2.lua")
@@ -319,6 +320,8 @@
 =

 	MainMenuFinishedPreLoading()
 =

+	if (gCommandLineSwitches["-2d"]) then gCurrentRenderer =3D Renderer2D end
+	if (gCommandLineSwitches["-3d"]) then gCurrentRenderer =3D Renderer3D end
 	gCurrentRenderer:Init()
 	=

 	-- set fadelines font



From no-reply at zwischenwelt.org  Sun May 11 16:55:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 11 May 2008 14:55:46 -0000
Subject: [Iris-commit] [IRIS] r2168 - /trunk/lua/main.lua
Message-ID: <20080511145554.549111524039@zwischenwelt.org>

Author: ghoulsblade
Date: Sun May 11 16:55:31 2008
New Revision: 2168

Log:
renderer switches at startup : -2d -3d

Modified:
    trunk/lua/main.lua

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sun May 11 16:55:31 2008
@@ -274,6 +274,8 @@
 	=

 	if (gCommandLineSwitches["-profile"]) then StartGlobalProfiler() end
 	if (gCommandLineSwitches["-walk3"]) then gUseWalk3 =3D true end
+	if (gCommandLineSwitches["-2d"]) then gCurrentRenderer =3D Renderer2D end
+	if (gCommandLineSwitches["-3d"]) then gCurrentRenderer =3D Renderer3D end
 	=

 	CheckUODir()
 	=

@@ -320,8 +322,6 @@
 =

 	MainMenuFinishedPreLoading()
 =

-	if (gCommandLineSwitches["-2d"]) then gCurrentRenderer =3D Renderer2D end
-	if (gCommandLineSwitches["-3d"]) then gCurrentRenderer =3D Renderer3D end
 	gCurrentRenderer:Init()
 	=

 	-- set fadelines font



From no-reply at zwischenwelt.org  Sun May 11 23:18:19 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 11 May 2008 21:18:19 -0000
Subject: [Iris-commit] [IRIS] r2170 - in /trunk/data/models:
 materials/textures.material models/to_010000/mdl_009419.mesh
 models/to_011000/mdl_010265.mesh textures/tex_paperwall.png
 textures/tex_table.png
Message-ID: <20080511211819.3C874153C00D@zwischenwelt.org>

Author: hagish
Date: Sun May 11 23:18:18 2008
New Revision: 2170

Log:
new models: paperwall, table

Added:
    trunk/data/models/models/to_010000/mdl_009419.mesh   (with props)
    trunk/data/models/models/to_011000/mdl_010265.mesh   (with props)
    trunk/data/models/textures/tex_paperwall.png   (with props)
    trunk/data/models/textures/tex_table.png   (with props)
Modified:
    trunk/data/models/materials/textures.material

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Sun May 11 23:18:18 2008
@@ -8408,6 +8408,34 @@
 			texture_unit =

 			{ =

 				texture tex_sattel.png =

+			}	=

+		}
+	} =

+}
+
+material tex_table : tex_base
+{ =

+	technique =

+	{ =

+		pass =

+		{		=

+			texture_unit =

+			{ =

+				texture tex_table.png =

+			}	=

+		}
+	} =

+}
+
+material tex_paperwall : tex_base
+{ =

+	technique =

+	{ =

+		pass =

+		{		=

+			texture_unit =

+			{ =

+				texture tex_paperwall.png =

 			}	=

 		}
 	} =




From no-reply at zwischenwelt.org  Mon May 12 01:21:25 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 11 May 2008 23:21:25 -0000
Subject: [Iris-commit] [IRIS] r2171 - in /trunk: data/base/main.material
 lua/lib.2d.map.lua lua/lib.artatlas.lua lua/lib.map.lua src/data_artmap.cpp
Message-ID: <20080511232125.CD6E41524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 01:21:22 2008
New Revision: 2171

Log:
first 2d statics

Modified:
    trunk/data/base/main.material
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.artatlas.lua
    trunk/lua/lib.map.lua
    trunk/src/data_artmap.cpp

Modified: trunk/data/base/main.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/base/main.material (original)
+++ trunk/data/base/main.material Mon May 12 01:21:22 2008
@@ -383,6 +383,22 @@
 	}
 }
 =

+material renderer2dbillboard
+{
+	technique
+	{
+		pass
+		{
+			scene_blend alpha_blend
+			// alpha_rejection less 128
+			alpha_rejection greater 128
+			lighting off
+			ambient 1.0 1.0 1.0
+			diffuse 1.0 1.0 1.0
+		}
+	}
+}
+
 material tilefreewalk_markerbase
 {
 	technique

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 01:21:22 2008
@@ -3,10 +3,11 @@
 Renderer2D.pMapBlocks =3D {}
 Renderer2D.iNextMapStep =3D 0
 =

-Renderer2D.kMapLoadRad =3D 2
+Renderer2D.kMapLoadRad =3D 4
 Renderer2D.kGoodFPS =3D 25
 Renderer2D.kGoodTicksBetweenFrames =3D 1000 / Renderer2D.kGoodFPS -- 1000=
=3D1sec
 Renderer2D.kMapLoadAllowedTicksPerFrame =3D 0.5 * Renderer2D.kGoodTicksBet=
weenFrames =

+Renderer2D.kMapLoadStaticLoadAllowedTicks =3D 0.5 * Renderer2D.kGoodTicksB=
etweenFrames =

 =

 =

 --~ local bWeHaveSpareTime =3D gSecondsSinceLastFrame*1000 < Renderer2D.kG=
oodTicksBetweenFrames
@@ -28,7 +29,7 @@
 function Renderer2D:MapStep	()
 	local iCurTicks =3D Client_GetTicks()
 	if (iCurTicks < Renderer2D.iNextMapStep) then return end
-	Renderer2D.iNextMapStep =3D iCurTicks + 0.5*Renderer2D.kGoodTicksBetweenF=
rames -- often, but small steps
+	Renderer2D.iNextMapStep =3D iCurTicks + 0.1*Renderer2D.kGoodTicksBetweenF=
rames -- often, but small steps
 	=

 	-- do some work until we run out of time
 	local iAllowedTimeEnd =3D iCurTicks + Renderer2D.kMapLoadAllowedTicksPerF=
rame
@@ -102,6 +103,7 @@
 function Renderer2D:MapDestroyBlockData	(block) =

 	ArtAtlasUnLock(block) -- release atlas mat lock
 	if (block.gfx_terrain) then block.gfx_terrain:Destroy() block.gfx_terrain=
 =3D nil end
+	if (block.pStaticGroupGfx) then for k,v in pairs(block.pStaticGroupGfx) d=
o v:Destroy() end block.pStaticGroupGfx =3D nil end
 end
 =

 function Renderer2D:MapBlockStep	(block) =

@@ -117,22 +119,29 @@
 -- terrain : load and create gfx
 function k2DMapJob.TerrainGfx.fun	(block)
 	--~ print("MapBlockStep terrain",block.bx,block.by)
-	block.gfx_terrain =3D MakeMultiTexTerrainGfx(block.bx,block.by)
+	if ((block.bx % kMultiTexTerrainChunkSize) =3D=3D 0 and (block.by % kMult=
iTexTerrainChunkSize) =3D=3D 0) then
+		block.gfx_terrain =3D MakeMultiTexTerrainGfx(block.bx,block.by)
+	end
 	block.pJob =3D k2DMapJob.StaticList
 end
 =

 -- statics : load infos from file
 function k2DMapJob.StaticList.fun	(block)
 	block.statics =3D MapGetBlockStatics(block.bx,block.by)
+	block.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Ar=
tAtlasLoadAndLock)
+	block.pStaticGroups =3D {}
+	block.iStaticLoadingIndex =3D 1
+	block.iStaticLoadingIndexMax =3D table.getn(block.statics)
 	block.pJob =3D k2DMapJob.StaticLoad
 end
 =

 -- statics : analyze, load textures to atlas
 function k2DMapJob.StaticLoad.fun	(block)
 	-- load atlas : artid-hue
-	block.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Ar=
tAtlasLoadAndLock)
-	block.pStaticGroups =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see ArtAt=
lasLoadAndLock)
-	for k,static in pairs(block.statics) do
+	local iBlockLoadTicks =3D Client_GetTicks()
+	for i =3D block.iStaticLoadingIndex,block.iStaticLoadingIndexMax do
+		block.iStaticLoadingIndex =3D i+1
+		local static =3D block.statics[i]
 		local iTileTypeID	=3D static.artid
 		local iHue			=3D static.hue
 		=

@@ -140,30 +149,69 @@
 		if (not arr) then arr =3D {} block.pStaticAtlasMats[iTileTypeID] =3D arr=
 end
 		=

 		-- get/load atlas mat
-		local atlasmat =3D arr[iHue]
-		if (not atlasmat) then
-			atlasmat =3D ArtAtlasLoadAndLock(iTileTypeID,iHue,block)
-			arr[iHue] =3D atlasmat
+		local pAtlasPiece =3D arr[iHue]
+		local bCheckTime =3D false
+		if (not pAtlasPiece) then
+			pAtlasPiece =3D ArtAtlasLoadAndLock(iTileTypeID+0x4000,iHue,block)
+			arr[iHue] =3D pAtlasPiece
+			bCheckTime =3D true
 		end
 		=

 		-- add to matname group
-		local matname =3D atlasmat.matname
-		local group =3D block.pStaticGroups[matname]
-		if (not group) then group =3D {} block.pStaticGroups[matname] =3D group =
end
-		=

-		table.insert(group,static)
+		if (pAtlasPiece) then
+			local atlas =3D pAtlasPiece.atlas
+			local group =3D block.pStaticGroups[atlas]
+			if (not group) then group =3D {} block.pStaticGroups[atlas] =3D group e=
nd
+			=

+			table.insert(group,static)
+		end
+		=

+		-- if we are out of time, exit for now, and continue loading in the next=
 frame
+		if (bCheckTime and Client_GetTicks() - iBlockLoadTicks > Renderer2D.kMap=
LoadStaticLoadAllowedTicks) then print("k2DMapJob.StaticLoad split") return=
 end
 	end
 	block.pJob =3D k2DMapJob.StaticGfx
 end
 =

 -- statics : create gfx
 function k2DMapJob.StaticGfx.fun	(block) =

-	for matname,group in pairs(block.pStaticGroups) do
+	block.pStaticGroupGfx =3D {}
+	for atlas,group in pairs(block.pStaticGroups) do
+		local matname =3D ArtAtlasLoadMaterial(atlas)
+		-- TODO : sort by z for blendout upper floors
 		-- TODO : create fastbatch with matname and size=3Dtable.getn(group)
+		local spritecount =3D table.getn(group)
+		local x,y,z =3D gCurrentRenderer:UOPosToLocal(block.bx*8,block.by*8,0)
+		local gfx =3D CreateRootGfx3D()
+		table.insert(block.pStaticGroupGfx,gfx)
+		gfx:SetPosition(x,y,z)
+		gfx:SetSimpleRenderable()
+		--~ gfx:SetMaterial("BaseWhiteNoLighting")
+		gfx:SetMaterial(matname)
+		=

+		local vc =3D 4*spritecount
+		local ic =3D 6*spritecount
+		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
+		vc =3D 0
 		for k,static in pairs(group) do
-			local atlasmat =3D block.pStaticAtlasMats[static.artid][static.hue]
-			-- todo : add sprit with atlasmat texcoords and size
-		end
+			local pAtlasPiece =3D block.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
+			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
+			local sq2 =3D math.sqrt(2)
+			local scale =3D sq2 / 44
+			local cx =3D -(sq2 - 0.001*(k + 5*z)) -- sprites are too high normally,=
 cx,cy moves them down , k is for z-sorting
+			local cy =3D  (sq2 - 0.001*(k + 5*z))
+			local w =3D scale * pAtlasPiece.w * 0.5 / sq2
+			local h =3D scale * pAtlasPiece.h
+			gfx:RenderableVertex(x+cx-w,y+cy-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
+			gfx:RenderableVertex(x+cx+w,y+cy+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
+			gfx:RenderableVertex(x+cx-w,y+cy-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
+			gfx:RenderableVertex(x+cx+w,y+cy+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
+			--~ gfx:RenderableIndex3(vc+0,vc+1,vc+2)
+			--~ gfx:RenderableIndex3(vc+1,vc+3,vc+2)
+			gfx:RenderableIndex3(vc+0,vc+2,vc+1)
+			gfx:RenderableIndex3(vc+1,vc+2,vc+3)
+			vc =3D vc + 4
+		end
+		gfx:RenderableEnd()
 	end
 	block.pJob =3D k2DMapJob.WaterLoad
 end

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Mon May 12 01:21:22 2008
@@ -1,21 +1,90 @@
 -- loads artid graphics to one or multiple texture-atlases
 -- can also reorganizes atlases as needed with locking/unlocking system
 =

-gArtAtlasSize =3D 1024
+gArtAtlasSize =3D 512
 gLastArtAtlas =3D nil
 gArtAtlasCache =3D {}
+kArtAtlasDebugDumpAtlas =3D false
 =

 function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)
 	local n =3D iTileTypeID.."_"..iHue
 	local o =3D gArtAtlasCache[n] =

-	if (o) then return o end
+	if (o ~=3D nil) then return o end
+	gArtAtlasCache[n] =3D false
+	=

+	-- load image
+	local pImage =3D CreateImage()
+	if (not gArtMapLoader:ExportToImage(pImage,iTileTypeID,gHueLoader,iHue)) =
then pImage:Destroy() return end
+	if (not gArtMapLoader:GetSize(pImage,iTileTypeID,gHueLoader,iHue)) then p=
Image:Destroy() return end
+	=

+	-- load/create atlas
+	local w =3D gArtAtlasSize
+	if (gLastArtAtlas =3D=3D nil) then print("ArtAtlasLoadAndLock : create fi=
rst atlas") gLastArtAtlas =3D CreateTexAtlas(w,w) end -- only first time
+	=

+	-- add to exisiting texatlas or start a new one if it doesn't fit
+	local iBorderPixels=3D1
+	local bWrap=3Dfalse
+	local bSuccess,l,r,t,b =3D gLastArtAtlas:AddImage(pImage,iBorderPixels,bW=
rap)
+	if (not bSuccess) then =

+		=

+		if (kArtAtlasDebugDumpAtlas) then
+			local img2 =3D CreateImage()
+			gLastArtAtlas:MakeImage(img2)
+			img2:SaveAsFile("../artatlas_"..Client_GetTicks()..".png")
+			img2:Destroy()
+		end
+	=

+		-- not more space in the old atlas, start a new one
+		print("ArtAtlasLoadAndLock : create new atlas") =

+		gLastArtAtlas =3D CreateTexAtlas(w,w)
+		bSuccess,l,r,t,b =3D gLastArtAtlas:AddImage(pImage,iBorderPixels,bWrap)
+		if (not bSuccess) then print("warning : ArtAtlasLoadAndLock: art too big=
 for texatlas") pImage:Destroy() return end
+	end
+	local w =3D pImage:GetWidth()
+	local h =3D pImage:GetHeight()
+	pImage:Destroy()
+	=

+	-- create or update texatlas
+	gLastArtAtlas.bIsDirty =3D true -- only rebuild on demand, not for every =
add
+	=

+	-- return info about the allocated area for this glyph
 	o =3D {}
 	gArtAtlasCache[n] =3D o
-	=

-	o.matname =3D "bla"
+	o.atlas =3D gLastArtAtlas
+	o.u0 =3D l
+	o.v0 =3D t
+	o.u1 =3D r
+	o.v1 =3D b
+	o.w =3D w
+	o.h =3D h
 	=

 	return o
 end
 =

+-- param : ArtAtlasLoadAndLock(...).atlas
+-- creates/updates texture/material as needed
+-- returns matname
+function ArtAtlasLoadMaterial (atlas) =

+	if (atlas.bIsDirty) then
+		--~ local startt =3D Client_GetTicks()
+		atlas.bIsDirty =3D false
+		if (atlas.texname) then =

+			atlas:LoadToTexture(atlas.texname) -- update existing texture
+		else
+			atlas.texname =3D atlas:MakeTexture() -- generate new texture
+		end
+		--~ local startt2 =3D Client_GetTicks()
+		--~ print("ArtAtlasLoadMaterial t:",startt2-startt)
+	end
+	if (not atlas.matname) then =

+		local matname =3D CloneMaterial("renderer2dbillboard")
+		SetTexture(matname,atlas.texname)
+		--~ SetSceneBlend(matname,0,0,0)
+		--~ SetDepthWriteEnabled(matname,0,0,1)
+		atlas.matname =3D matname
+	end
+	return atlas.matname
+end
+
 function ArtAtlasUnLock (pLockKeeper) end
 =


Modified: trunk/lua/lib.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.map.lua (original)
+++ trunk/lua/lib.map.lua Mon May 12 01:21:22 2008
@@ -9,7 +9,7 @@
 -- {iTileType=3D?,zloc=3D?,bIgnoredByWalk=3D?,flags=3D?}
 function MapGetGround		(xloc,yloc)	return MapGetCacheBlock(math.floor(xloc=
/8),math.floor(yloc/8)).ground[ 		 (math.floor(yloc) % 8)*10 + (math.floor(=
xloc) % 8)] end
 =

--- {{zloc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,bIsStatic=3Dtrue},...} -=
- xloc,yloc absolute
+-- {{zloc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=
=3Dtrue},...} -- xloc,yloc absolute
 function MapGetStatics		(xloc,yloc)	return MapGetCacheBlock(math.floor(xlo=
c/8),math.floor(yloc/8)).statics_bypos[(math.floor(yloc) % 8)*10 + (math.fl=
oor(xloc) % 8)] end =

 function MapGetBlockStatics	(bx,by)		return MapGetCacheBlock(bx,by).static=
s_all end =

 =

@@ -59,7 +59,7 @@
 	end
 	for i =3D 0,iStaticCount-1 do
 		local iTileTypeID,tx,ty,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,xloc=3Dtx+bx*=
8,yloc=3Dty+by*8,bIsStatic=3Dtrue}
+		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,tx=3Dtx,ty=3D=
ty,xloc=3Dtx+bx*8,yloc=3Dty+by*8,bIsStatic=3Dtrue}
 		table.insert(b.statics_bypos[ty*10 + tx],static)
 		table.insert(b.statics_all,static)
 	end

Modified: trunk/src/data_artmap.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_artmap.cpp (original)
+++ trunk/src/data_artmap.cpp Mon May 12 01:21:22 2008
@@ -255,7 +255,7 @@
 	=

 	short *pImgRaw =3D GenerateArtRaw(oArtMapLoader, iID,bPixelExact, bInvert=
Y, bInvertX, pHueLoader, iHue, iImgW, iImgH);
 =

-	if (pImgRaw =3D=3D 0){
+	if (pImgRaw =3D=3D 0) {
 		printf("ERROR in WriteArtMapToImage, could not create art raw id=3D%i\n"=
,iID);
 		return false;
 	}



From no-reply at zwischenwelt.org  Mon May 12 02:42:40 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 00:42:40 -0000
Subject: [Iris-commit] [IRIS] r2172 - /trunk/lua/lib.2d.map.lua
Message-ID: <20080512004241.4445D1524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 02:42:40 2008
New Revision: 2172

Log:
2d map height fix

Modified:
    trunk/lua/lib.2d.map.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 02:42:40 2008
@@ -37,9 +37,10 @@
 	-- check if the cam moved and blocks nearby have to be initialized
 	local xloc,yloc =3D self:GetCamPos()
 	local bx,by =3D math.floor(xloc/8 - 0.5),math.floor(yloc/8 - 0.5)
-	if (self.pCamTestBlockX ~=3D bx or self.pCamTestBlockY ~=3D by) then =

-		self.pCamTestBlockX =3D bx
-		self.pCamTestBlockY =3D by
+	if (self.pMapFocusBlockX ~=3D bx or self.pMapFocusBlockY ~=3D by) then =

+		print("Renderer2D:MapStep focus:",bx*8,by*8)
+		self.pMapFocusBlockX =3D bx
+		self.pMapFocusBlockY =3D by
 		local r =3D Renderer2D.kMapLoadRad
 		for ax =3D -r,r do
 		for ay =3D -r,r do
@@ -74,8 +75,8 @@
 =

 function Renderer2D:MapDestroyBlocksOutsideRange	() =

 	local newarr =3D {}
-	local bx =3D self.pCamTestBlockX
-	local by =3D self.pCamTestBlockY
+	local bx =3D self.pMapFocusBlockX
+	local by =3D self.pMapFocusBlockY
 	local r =3D Renderer2D.kMapLoadRad
 	=

 	-- check all blocks and decide what to do
@@ -197,8 +198,9 @@
 			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
 			local sq2 =3D math.sqrt(2)
 			local scale =3D sq2 / 44
-			local cx =3D -(sq2 - 0.001*(k + 5*z)) -- sprites are too high normally,=
 cx,cy moves them down , k is for z-sorting
-			local cy =3D  (sq2 - 0.001*(k + 5*z))
+			-- -so 1420,1550
+			local cx =3D -(1 - 0.001*(k + 5*z)) -- sprites are too high normally, c=
x,cy moves them down , k is for z-sorting
+			local cy =3D  (1 - 0.001*(k + 5*z))
 			local w =3D scale * pAtlasPiece.w * 0.5 / sq2
 			local h =3D scale * pAtlasPiece.h
 			gfx:RenderableVertex(x+cx-w,y+cy-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)



From no-reply at zwischenwelt.org  Mon May 12 03:19:03 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 01:19:03 -0000
Subject: [Iris-commit] [IRIS] r2174 - /trunk/lua/lib.2d.map.lua
Message-ID: <20080512011903.2B2ED1524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 03:19:02 2008
New Revision: 2174

Log:
2d static tweaking performance

Modified:
    trunk/lua/lib.2d.map.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 03:19:02 2008
@@ -176,19 +176,23 @@
 -- statics : create gfx
 function k2DMapJob.StaticGfx.fun	(block) =

 	block.pStaticGroupGfx =3D {}
+	local sq2 =3D math.sqrt(2)
+	local scaleh =3D sq2 / 44
+	local scalew05 =3D 0.5 / 44 -- 0.5 : applied left and right, =

+	-- -so 1420,1550
+	-- -so 552,2088
 	for atlas,group in pairs(block.pStaticGroups) do
 		local matname =3D ArtAtlasLoadMaterial(atlas)
 		-- TODO : sort by z for blendout upper floors
-		-- TODO : create fastbatch with matname and size=3Dtable.getn(group)
 		local spritecount =3D table.getn(group)
 		local x,y,z =3D gCurrentRenderer:UOPosToLocal(block.bx*8,block.by*8,0)
 		local gfx =3D CreateRootGfx3D()
 		table.insert(block.pStaticGroupGfx,gfx)
 		gfx:SetPosition(x,y,z)
 		gfx:SetSimpleRenderable()
-		--~ gfx:SetMaterial("BaseWhiteNoLighting")
 		gfx:SetMaterial(matname)
 		=

+		-- generate geometry
 		local vc =3D 4*spritecount
 		local ic =3D 6*spritecount
 		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
@@ -196,24 +200,16 @@
 		for k,static in pairs(group) do
 			local pAtlasPiece =3D block.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
 			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-			local sq2 =3D math.sqrt(2)
-			local scale =3D sq2 / 44
-			-- -so 1420,1550
-			-- -so 552,2088
-			local cx =3D -1 -- sprites are too high normally, cx,cy moves them down=
 , k is for z-sorting
-			local cy =3D  1
 			local fOrderCorrection =3D 0.001*z + 0.01*k  -- + =3D nearer to cam    =
  -- guess this works ok for now, but far from ideal
-			local ox =3D  -1 * fOrderCorrection
-			local oy =3D   1 * fOrderCorrection
-			local oz =3D sq2 * fOrderCorrection
-			local w =3D scale * pAtlasPiece.w * 0.5 / sq2
-			local h =3D scale * pAtlasPiece.h
-			gfx:RenderableVertex(x+cx+ox-w,y+cy+oy-w,z+oz  , pAtlasPiece.u1,pAtlasP=
iece.v1)
-			gfx:RenderableVertex(x+cx+ox+w,y+cy+oy+w,z+oz  , pAtlasPiece.u0,pAtlasP=
iece.v1)
-			gfx:RenderableVertex(x+cx+ox-w,y+cy+oy-w,z+oz+h, pAtlasPiece.u1,pAtlasP=
iece.v0)
-			gfx:RenderableVertex(x+cx+ox+w,y+cy+oy+w,z+oz+h, pAtlasPiece.u0,pAtlasP=
iece.v0)
-			--~ gfx:RenderableIndex3(vc+0,vc+1,vc+2)
-			--~ gfx:RenderableIndex3(vc+1,vc+3,vc+2)
+			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

+			y =3D y +   1 * fOrderCorrection + 1
+			z =3D z + sq2 * fOrderCorrection
+			local w =3D scalew05 * pAtlasPiece.w
+			local h =3D scaleh   * pAtlasPiece.h
+			gfx:RenderableVertex(x-w,y-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
+			gfx:RenderableVertex(x+w,y+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
+			gfx:RenderableVertex(x-w,y-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
+			gfx:RenderableVertex(x+w,y+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
 			gfx:RenderableIndex3(vc+0,vc+2,vc+1)
 			gfx:RenderableIndex3(vc+1,vc+2,vc+3)
 			vc =3D vc + 4



From no-reply at zwischenwelt.org  Mon May 12 03:07:19 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 01:07:19 -0000
Subject: [Iris-commit] [IRIS] r2173 - /trunk/lua/lib.2d.map.lua
Message-ID: <20080512010719.F28DC1524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 03:07:18 2008
New Revision: 2173

Log:
2d : slight zorder improvement, fixed vertical offset

Modified:
    trunk/lua/lib.2d.map.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 03:07:18 2008
@@ -199,14 +199,19 @@
 			local sq2 =3D math.sqrt(2)
 			local scale =3D sq2 / 44
 			-- -so 1420,1550
-			local cx =3D -(1 - 0.001*(k + 5*z)) -- sprites are too high normally, c=
x,cy moves them down , k is for z-sorting
-			local cy =3D  (1 - 0.001*(k + 5*z))
+			-- -so 552,2088
+			local cx =3D -1 -- sprites are too high normally, cx,cy moves them down=
 , k is for z-sorting
+			local cy =3D  1
+			local fOrderCorrection =3D 0.001*z + 0.01*k  -- + =3D nearer to cam    =
  -- guess this works ok for now, but far from ideal
+			local ox =3D  -1 * fOrderCorrection
+			local oy =3D   1 * fOrderCorrection
+			local oz =3D sq2 * fOrderCorrection
 			local w =3D scale * pAtlasPiece.w * 0.5 / sq2
 			local h =3D scale * pAtlasPiece.h
-			gfx:RenderableVertex(x+cx-w,y+cy-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
-			gfx:RenderableVertex(x+cx+w,y+cy+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
-			gfx:RenderableVertex(x+cx-w,y+cy-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
-			gfx:RenderableVertex(x+cx+w,y+cy+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
+			gfx:RenderableVertex(x+cx+ox-w,y+cy+oy-w,z+oz  , pAtlasPiece.u1,pAtlasP=
iece.v1)
+			gfx:RenderableVertex(x+cx+ox+w,y+cy+oy+w,z+oz  , pAtlasPiece.u0,pAtlasP=
iece.v1)
+			gfx:RenderableVertex(x+cx+ox-w,y+cy+oy-w,z+oz+h, pAtlasPiece.u1,pAtlasP=
iece.v0)
+			gfx:RenderableVertex(x+cx+ox+w,y+cy+oy+w,z+oz+h, pAtlasPiece.u0,pAtlasP=
iece.v0)
 			--~ gfx:RenderableIndex3(vc+0,vc+1,vc+2)
 			--~ gfx:RenderableIndex3(vc+1,vc+3,vc+2)
 			gfx:RenderableIndex3(vc+0,vc+2,vc+1)



From no-reply at zwischenwelt.org  Mon May 12 15:44:09 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 13:44:09 -0000
Subject: [Iris-commit] [IRIS] r2175 - in /trunk: include/data_artmap.h
 lua/lib.2d.map.lua lua/lib.map.lua
Message-ID: <20080512134409.CFDB3153C00D@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 15:44:07 2008
New Revision: 2175

Log:
2d : playing with zorder correction, artmap:added comment

Modified:
    trunk/include/data_artmap.h
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.map.lua

Modified: trunk/include/data_artmap.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data_artmap.h (original)
+++ trunk/include/data_artmap.h Mon May 12 15:44:07 2008
@@ -7,10 +7,12 @@
 	int	GetHeight	();
 	void	CalcVisibleAABB(int& minx, int& miny, int& maxx, int& maxy);
 	void	SearchCursorHotspot		(int& iX,int& iY); ///< returns hotspot coords =
in iX,iY. search using different pixel on image border
+	=

+	// http://uo.stratics.com/heptazane/fileformats.shtml#3.4
 	template <class _T> void Decode( short *pBuffer, const int iPitch, _T& fi=
lter, short* ColorTable ) { PROFILE	///< decodes the art image into a pixel=
buffer (1short/pixel), pitch=3DLength of a surface scanline in bytes
 		int		iBufferSize =3D iPitch*GetHeight();
 		=

-		if( miID < 0x4000 ){
+		if( miID < 0x4000 ){ // TODO : if (Flag > $FFFF or Flag =3D=3D 0) instea=
d of check id ??  flag=3D*(short *)(mpRawData) , but seems the docs are wro=
ng here
 			//map tile format, 44x44 pixel
 			short *dst =3D pBuffer;
 			short *src =3D (short *)mpRawData;

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 15:44:07 2008
@@ -200,7 +200,7 @@
 		for k,static in pairs(group) do
 			local pAtlasPiece =3D block.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
 			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-			local fOrderCorrection =3D 0.001*z + 0.01*k  -- + =3D nearer to cam    =
  -- guess this works ok for now, but far from ideal
+			local fOrderCorrection =3D 0.0001*static.artid + 0*z - 0*static.iBlockI=
ndex  -- + =3D nearer to cam      -- guess this works ok for now, but far f=
rom ideal
 			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

 			y =3D y +   1 * fOrderCorrection + 1
 			z =3D z + sq2 * fOrderCorrection

Modified: trunk/lua/lib.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.map.lua (original)
+++ trunk/lua/lib.map.lua Mon May 12 15:44:07 2008
@@ -59,7 +59,7 @@
 	end
 	for i =3D 0,iStaticCount-1 do
 		local iTileTypeID,tx,ty,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,tx=3Dtx,ty=3D=
ty,xloc=3Dtx+bx*8,yloc=3Dty+by*8,bIsStatic=3Dtrue}
+		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,tx=3Dtx,ty=3D=
ty,xloc=3Dtx+bx*8,yloc=3Dty+by*8,iBlockIndex=3Di,bIsStatic=3Dtrue}
 		table.insert(b.statics_bypos[ty*10 + tx],static)
 		table.insert(b.statics_all,static)
 	end



From no-reply at zwischenwelt.org  Mon May 12 15:51:34 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 13:51:34 -0000
Subject: [Iris-commit] [IRIS] r2176 - in /trunk: COPYING bin/iris2.exe
 cb/iris2.cbp data/config.lua.dist data/profiles/gfx_ultrahigh.lua vc7/ vc8/
 vc9/ vs7/ vs8/ vs9/
Message-ID: <20080512135138.E64BC153C00D@zwischenwelt.org>

Author: sience
Date: Mon May 12 15:51:33 2008
New Revision: 2176

Log:
-new binary
-codeblocks prpject files updated
-COPYING - 2d renderer comments removed
-config.lua.dist adjusted
-gfx_ultrahigh.lua profile adjusted
-VS project names renamed to VC

Added:
    trunk/vc7/
      - copied from r2174, trunk/vs7/
    trunk/vc8/
      - copied from r2174, trunk/vs8/
    trunk/vc9/
      - copied from r2174, trunk/vs9/
Removed:
    trunk/vs7/
    trunk/vs8/
    trunk/vs9/
Modified:
    trunk/COPYING
    trunk/bin/iris2.exe
    trunk/cb/iris2.cbp
    trunk/data/config.lua.dist
    trunk/data/profiles/gfx_ultrahigh.lua

Modified: trunk/COPYING
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/COPYING (original)
+++ trunk/COPYING Mon May 12 15:51:33 2008
@@ -1,8 +1,3 @@
-the 2DRenderer is only available as compiled .luac file, =

-it is a optional closed source plugin that is not statically linked, =

-if you don't want it, you can delete the .luac file.
-(note : it will probably be opensourced soon)
-
 the models and textures in data/models/ are available under GNU GPLv3
 (they are from the iris1 team)
 =


Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/cb/iris2.cbp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/cb/iris2.cbp (original)
+++ trunk/cb/iris2.cbp Mon May 12 15:51:33 2008
@@ -14,7 +14,7 @@
 				<Option compiler=3D"gcc" />
 				<Option projectResourceIncludeDirsRelation=3D"1" />
 				<Compiler>
-					<Add option=3D"-march=3Dpentium3" />
+					<Add option=3D"-march=3Dpentium4" />
 					<Add option=3D"-fexpensive-optimizations" />
 					<Add option=3D"-O3" />
 					<Add option=3D"-frtti" />
@@ -28,8 +28,6 @@
 					<Add library=3D"OgreMain" />
 					<Add library=3D"OIS" />
 					<Add library=3D"..\libs\fmodx\libfmodex.a" />
-					<Add library=3D"..\libs\lua\LibLua.lib" />
-					<Add library=3D"..\libs\lua\LibLuaLib.lib" />
 					<Add library=3D"..\libs\zlib\libz.a" />
 					<Add directory=3D"$(OGRE_HOME)\bin\release" />
 					<Add directory=3D"$(OGRE_HOME)\Lib" />
@@ -57,12 +55,8 @@
 					<Add library=3D"ws2_32" />
 					<Add library=3D"OgreMain_d" />
 					<Add library=3D"OIS_d" />
-					<Add library=3D"..\libs\sdl\SDL.lib" />
 					<Add library=3D"..\libs\fmodx\libfmodex.a" />
-					<Add library=3D"..\libs\lua\LibLua.lib" />
-					<Add library=3D"..\libs\lua\LibLuaLib.lib" />
 					<Add library=3D"..\libs\zlib\libz.a" />
-					<Add library=3D"libode_d.a" />
 					<Add directory=3D"$(OGRE_HOME)\bin\debug" />
 					<Add directory=3D"..\libs" />
 					<Add directory=3D"..\libs\fmodx" />
@@ -87,13 +81,15 @@
 			<Add option=3D"-DMINGW" />
 			<Add option=3D'-DMAIN_WORKING_DIR=3D\&quot;../\&quot;' />
 			<Add option=3D"-DUSE_FMOD" />
+			<Add option=3D"-DUSE_LUGRE_LIB_MD5" />
 			<Add directory=3D"..\include" />
 			<Add directory=3D"$(OGRE_HOME)\include" />
 			<Add directory=3D"$(OGRE_HOME)\include\ois" />
 			<Add directory=3D"..\include\fmodx" />
-			<Add directory=3D"..\include\lua" />
 			<Add directory=3D"..\include\zlib" />
 			<Add directory=3D"..\lugre\include" />
+			<Add directory=3D"..\lugre\lib\lua-5.1.3\src" />
+			<Add directory=3D"..\lugre\lib\md5\include" />
 		</Compiler>
 		<Linker>
 			<Add option=3D"-Wl,--enable-auto-image-base" />
@@ -107,17 +103,41 @@
 		<Unit filename=3D"..\include\Makefile.am" />
 		<Unit filename=3D"..\include\builder.h" />
 		<Unit filename=3D"..\include\data.h" />
+		<Unit filename=3D"..\include\data_anim.h" />
+		<Unit filename=3D"..\include\data_artmap.h" />
+		<Unit filename=3D"..\include\data_common.h" />
+		<Unit filename=3D"..\include\data_font.h" />
+		<Unit filename=3D"..\include\data_groundblock.h" />
+		<Unit filename=3D"..\include\data_gump.h" />
+		<Unit filename=3D"..\include\data_hue.h" />
+		<Unit filename=3D"..\include\data_indexed.h" />
+		<Unit filename=3D"..\include\data_light.h" />
+		<Unit filename=3D"..\include\data_lookup.h" />
+		<Unit filename=3D"..\include\data_luabind_common.h" />
+		<Unit filename=3D"..\include\data_mapinfo.h" />
+		<Unit filename=3D"..\include\data_multi.h" />
+		<Unit filename=3D"..\include\data_radar.h" />
+		<Unit filename=3D"..\include\data_raw.h" />
+		<Unit filename=3D"..\include\data_sound.h" />
+		<Unit filename=3D"..\include\data_staticblock.h" />
+		<Unit filename=3D"..\include\data_texmap.h" />
+		<Unit filename=3D"..\include\data_tiletype.h" />
+		<Unit filename=3D"..\include\fmodx\fmod.h" />
+		<Unit filename=3D"..\include\fmodx\fmod.hpp" />
+		<Unit filename=3D"..\include\fmodx\fmod_codec.h" />
+		<Unit filename=3D"..\include\fmodx\fmod_dsp.h" />
+		<Unit filename=3D"..\include\fmodx\fmod_errors.h" />
+		<Unit filename=3D"..\include\fmodx\fmod_output.h" />
 		<Unit filename=3D"..\include\grannyloader_i2.h" />
 		<Unit filename=3D"..\include\grannyogreloader.h" />
 		<Unit filename=3D"..\include\grannyparser.h" />
 		<Unit filename=3D"..\include\huffman.h" />
-		<Unit filename=3D"..\include\legacydata.h" />
 		<Unit filename=3D"..\include\ogremanualloader.h" />
 		<Unit filename=3D"..\include\pathsearch.h" />
-		<Unit filename=3D"..\include\radar.h" />
 		<Unit filename=3D"..\include\spritemanager.h" />
 		<Unit filename=3D"..\include\terrain.h" />
-		<Unit filename=3D"..\lugre\include\config.h" />
+		<Unit filename=3D"..\include\zlib\zconf.h" />
+		<Unit filename=3D"..\include\zlib\zlib.h" />
 		<Unit filename=3D"..\lugre\include\lugre_BorderColourClipPaneOverlay.h" =
/>
 		<Unit filename=3D"..\lugre\include\lugre_ColourClipPaneOverlay.h" />
 		<Unit filename=3D"..\lugre\include\lugre_ColourClipTextOverlay.h" />
@@ -126,21 +146,29 @@
 		<Unit filename=3D"..\lugre\include\lugre_SortedOverlayContainer.h" />
 		<Unit filename=3D"..\lugre\include\lugre_beam.h" />
 		<Unit filename=3D"..\lugre\include\lugre_bitmask.h" />
+		<Unit filename=3D"..\lugre\include\lugre_cadune.h" />
+		<Unit filename=3D"..\lugre\include\lugre_caelum.h" />
 		<Unit filename=3D"..\lugre\include\lugre_camera.h" />
+		<Unit filename=3D"..\lugre\include\lugre_fastbatch.h" />
 		<Unit filename=3D"..\lugre\include\lugre_fifo.h" />
 		<Unit filename=3D"..\lugre\include\lugre_game.h" />
 		<Unit filename=3D"..\lugre\include\lugre_gfx2D.h" />
 		<Unit filename=3D"..\lugre\include\lugre_gfx3D.h" />
+		<Unit filename=3D"..\lugre\include\lugre_image.h" />
 		<Unit filename=3D"..\lugre\include\lugre_input.h" />
 		<Unit filename=3D"..\lugre\include\lugre_listener.h" />
 		<Unit filename=3D"..\lugre\include\lugre_luabind.h" />
 		<Unit filename=3D"..\lugre\include\lugre_luaxml.h" />
 		<Unit filename=3D"..\lugre\include\lugre_main.h" />
+		<Unit filename=3D"..\lugre\include\lugre_md5.h" />
+		<Unit filename=3D"..\lugre\include\lugre_meshbuffer.h" />
+		<Unit filename=3D"..\lugre\include\lugre_meshloader.h" />
 		<Unit filename=3D"..\lugre\include\lugre_meshshape.h" />
 		<Unit filename=3D"..\lugre\include\lugre_net.h" />
 		<Unit filename=3D"..\lugre\include\lugre_ode.h" />
 		<Unit filename=3D"..\lugre\include\lugre_ogrefonthelper.h" />
 		<Unit filename=3D"..\lugre\include\lugre_ogrewrapper.h" />
+		<Unit filename=3D"..\lugre\include\lugre_paged_geometry.h" />
 		<Unit filename=3D"..\lugre\include\lugre_prefix.h" />
 		<Unit filename=3D"..\lugre\include\lugre_profile.h" />
 		<Unit filename=3D"..\lugre\include\lugre_random.h" />
@@ -151,12 +179,131 @@
 		<Unit filename=3D"..\lugre\include\lugre_shell.h" />
 		<Unit filename=3D"..\lugre\include\lugre_smartptr.h" />
 		<Unit filename=3D"..\lugre\include\lugre_sound.h" />
+		<Unit filename=3D"..\lugre\include\lugre_spritelist.h" />
+		<Unit filename=3D"..\lugre\include\lugre_texatlas.h" />
 		<Unit filename=3D"..\lugre\include\lugre_thread.h" />
 		<Unit filename=3D"..\lugre\include\lugre_timer.h" />
 		<Unit filename=3D"..\lugre\include\lugre_viewport.h" />
 		<Unit filename=3D"..\lugre\include\lugre_widget.h" />
 		<Unit filename=3D"..\lugre\include\tinystr.h" />
 		<Unit filename=3D"..\lugre\include\tinyxml.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lapi.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lapi.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lauxlib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lauxlib.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lbaselib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lcode.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lcode.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ldblib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ldebug.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ldebug.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ldo.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ldo.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ldump.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lfunc.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lfunc.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lgc.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lgc.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\linit.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\liolib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\llex.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\llex.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\llimits.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lmathlib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lmem.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lmem.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\loadlib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lobject.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lobject.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lopcodes.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lopcodes.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\loslib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lparser.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lparser.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lstate.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lstate.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lstring.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lstring.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lstrlib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ltable.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ltable.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ltablib.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ltm.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\ltm.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lua.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\luaconf.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lualib.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lundump.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lundump.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lvm.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lvm.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lzio.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\lzio.h" />
+		<Unit filename=3D"..\lugre\lib\lua-5.1.3\src\print.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
+		<Unit filename=3D"..\lugre\lib\md5\include\md5.h" />
+		<Unit filename=3D"..\lugre\lib\md5\src\md5.c">
+			<Option compilerVar=3D"CC" />
+		</Unit>
 		<Unit filename=3D"..\lugre\src\lugre_BorderColourClipPaneOverlay.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_ColourClipPaneOverlay.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_ColourClipTextOverlay.cpp" />
@@ -167,23 +314,33 @@
 		<Unit filename=3D"..\lugre\src\lugre_beam_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_bitmask.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_bitmask_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_cadune_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_caelum_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_camera_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_fastbatch.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_fifo_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_game.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_gfx2D.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_gfx2D_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_gfx3D.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_gfx3D_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_image_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_input.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_listener.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_luaxml.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_main.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_material_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_md5_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_meshbuffer.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_meshbuffer_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_meshloader.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_meshshape.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_net.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_net_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_ode.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_ode_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_ogrewrapper.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_paged_geometry_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_profile.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_random.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_random_L.cpp" />
@@ -197,6 +354,12 @@
 		<Unit filename=3D"..\lugre\src\lugre_sound.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_sound_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_sound_fmod.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_sound_openal.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_sound_openal2.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_spritelist.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_spritelist_L.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_texatlas.cpp" />
+		<Unit filename=3D"..\lugre\src\lugre_texatlas_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_thread.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_thread_L.cpp" />
 		<Unit filename=3D"..\lugre\src\lugre_timer.cpp" />
@@ -208,28 +371,54 @@
 		<Unit filename=3D"..\lugre\src\tinyxml.cpp" />
 		<Unit filename=3D"..\lugre\src\tinyxmlerror.cpp" />
 		<Unit filename=3D"..\lugre\src\tinyxmlparser.cpp" />
-		<Unit filename=3D"..\src\builder.cpp" />
 		<Unit filename=3D"..\src\builder_L.cpp" />
 		<Unit filename=3D"..\src\data.cpp" />
 		<Unit filename=3D"..\src\data_L.cpp" />
+		<Unit filename=3D"..\src\data_anim.cpp" />
+		<Unit filename=3D"..\src\data_anim_L.cpp" />
+		<Unit filename=3D"..\src\data_artmap.cpp" />
+		<Unit filename=3D"..\src\data_artmap_L.cpp" />
+		<Unit filename=3D"..\src\data_common.cpp" />
+		<Unit filename=3D"..\src\data_font.cpp" />
+		<Unit filename=3D"..\src\data_font_L.cpp" />
+		<Unit filename=3D"..\src\data_groundblock.cpp" />
+		<Unit filename=3D"..\src\data_groundblock_L.cpp" />
+		<Unit filename=3D"..\src\data_gump.cpp" />
+		<Unit filename=3D"..\src\data_gump_L.cpp" />
+		<Unit filename=3D"..\src\data_hue.cpp" />
+		<Unit filename=3D"..\src\data_hue_L.cpp" />
+		<Unit filename=3D"..\src\data_light.cpp" />
+		<Unit filename=3D"..\src\data_lookupfile.cpp" />
+		<Unit filename=3D"..\src\data_map.cpp" />
+		<Unit filename=3D"..\src\data_mapinfo.cpp" />
+		<Unit filename=3D"..\src\data_multi.cpp" />
+		<Unit filename=3D"..\src\data_multi_L.cpp" />
+		<Unit filename=3D"..\src\data_radar.cpp" />
+		<Unit filename=3D"..\src\data_radar_L.cpp" />
+		<Unit filename=3D"..\src\data_sound.cpp" />
+		<Unit filename=3D"..\src\data_sound_L.cpp" />
+		<Unit filename=3D"..\src\data_staticblock.cpp" />
+		<Unit filename=3D"..\src\data_staticblock_L.cpp" />
+		<Unit filename=3D"..\src\data_texmap.cpp" />
+		<Unit filename=3D"..\src\data_texmap_L.cpp" />
+		<Unit filename=3D"..\src\data_tiletype.cpp" />
+		<Unit filename=3D"..\src\data_tiletype_L.cpp" />
 		<Unit filename=3D"..\src\granny_L.cpp" />
 		<Unit filename=3D"..\src\grannydump.cpp" />
 		<Unit filename=3D"..\src\grannyloader_i2.cpp" />
 		<Unit filename=3D"..\src\grannyogreloader.cpp" />
 		<Unit filename=3D"..\src\grannyparser.cpp" />
 		<Unit filename=3D"..\src\huffman.cpp" />
-		<Unit filename=3D"..\src\legacydata.cpp" />
 		<Unit filename=3D"..\src\main.cpp" />
 		<Unit filename=3D"..\src\ogremanualloader.cpp" />
 		<Unit filename=3D"..\src\ogremanualloader_L.cpp" />
 		<Unit filename=3D"..\src\pathsearch.cpp" />
 		<Unit filename=3D"..\src\prefix.cpp" />
-		<Unit filename=3D"..\src\radar.cpp" />
-		<Unit filename=3D"..\src\radar_L.cpp" />
 		<Unit filename=3D"..\src\scripting.iris.cpp" />
 		<Unit filename=3D"..\src\spritemanager.cpp" />
 		<Unit filename=3D"..\src\spritemanager_L.cpp" />
 		<Unit filename=3D"..\src\terrain.cpp" />
+		<Unit filename=3D"..\src\terrain_multitex.cpp" />
 		<Extensions>
 			<code_completion />
 			<envvars />

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Mon May 12 15:51:33 2008
@@ -352,7 +352,7 @@
 gIntlocFiles	=3D "intloc%02d."			-- abstract filename (intloc names are ge=
nerated)
 =

 gGrannyConfigFile=3D "Models.txt"
-gGrannyPath		=3D "models/"
+gGrannyPath		=3D "Models/"
 gMusicConfigFile=3D "Config.txt"
 gMusicPath		=3D "Music/Digital/"
 =


Modified: trunk/data/profiles/gfx_ultrahigh.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_ultrahigh.lua (original)
+++ trunk/data/profiles/gfx_ultrahigh.lua Mon May 12 15:51:33 2008
@@ -1,13 +1,13 @@
 -- ultrahigh gfx-profile uses no textureatlas and has (in future) depthsha=
dowmapping
 =

---gAtlasRes =3D "none"
+gAtlasRes =3D "none"
 =

 gShadowTechnique =3D "texture_additive"
 gStaticsCastShadows =3D true
 gDynamicsCastShadows =3D true
 gMobileCastShadows =3D true
 =

---gUseHumanSkinShader =3D true -- currently doesn't work
+gUseHumanSkinShader =3D true -- currently doesn't work
 =

 gSightRange	=3D 8
 --gEnableLowDetailTerrainFarSight =3D true



From no-reply at zwischenwelt.org  Mon May 12 17:10:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 15:10:46 -0000
Subject: [Iris-commit] [IRIS] r2177 - in /trunk/lua: lib.2d.map.lua
	lib.data.lua
Message-ID: <20080512151046.AFB5E1524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 17:10:46 2008
New Revision: 2177

Log:
2d : fixed some sorting issues by using tile-flag bonus calc from varans 2d=
 renderer

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.data.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 17:10:46 2008
@@ -199,8 +199,9 @@
 		vc =3D 0
 		for k,static in pairs(group) do
 			local pAtlasPiece =3D block.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
+			local pTileType =3D GetStaticTileType(static.artid)
 			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-			local fOrderCorrection =3D 0.0001*static.artid + 0*z - 0*static.iBlockI=
ndex  -- + =3D nearer to cam      -- guess this works ok for now, but far f=
rom ideal
+			local fOrderCorrection =3D 0.01*pTileType.iSortBonus2D + 0.001*pTileTyp=
e.miHeight + 0.0001*static.iBlockIndex  -- + =3D nearer to cam      -- gues=
s this works ok for now, but far from ideal
 			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

 			y =3D y +   1 * fOrderCorrection + 1
 			z =3D z + sq2 * fOrderCorrection

Modified: trunk/lua/lib.data.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.data.lua (original)
+++ trunk/lua/lib.data.lua Mon May 12 17:10:46 2008
@@ -17,6 +17,17 @@
 	local t =3D GetStaticTileType(iTileTypeID)
 	return t and t.miFlags
 end
+
+-- many thanks to varan for his 2d renderer code for this =3D)
+function GetStaticFlagSortBonus2D (flags)
+	local bBackGround	=3D TestBit(flags,kTileDataFlag_Background)
+	local bSurface		=3D TestBit(flags,kTileDataFlag_Surface)
+    if bBackGround and bSurface	then return 2 end
+    if bBackGround				then return 3 end
+    if bSurface					then return 4 end
+	return 6
+end
+
 =

 -- info on statics, dynamics, items in containers, wearables etc  (everyth=
ing except terrain)
 gStaticTileTypeCache =3D {}
@@ -35,11 +46,16 @@
 		t =3D false =

 	else
 		-- precalc a bit for faster access (mainly for walk code performance)
-		 =

-		t.bBridge =3D TestMask(t.miFlags,kTileDataFlag_Bridge)
+		=

+		local flags =3D t.miFlags
+		t.bBridge 		=3D TestBit(flags,kTileDataFlag_Bridge)
+		t.bBackGround	=3D TestBit(flags,kTileDataFlag_Background)
+		t.bSurface		=3D TestBit(flags,kTileDataFlag_Surface)
 		=

 		--~ RunUO1/src/TileData.cs:153: public int CalcHeight : =

 		t.iCalcHeight =3D t.bBridge and math.floor(t.miHeight / 2) or t.miHeight
+		=

+		t.iSortBonus2D =3D GetStaticFlagSortBonus2D(flags)
 	end
 	gStaticTileTypeCache[iTileTypeID] =3D t
 	return t



From no-reply at zwischenwelt.org  Mon May 12 17:49:02 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 15:49:02 -0000
Subject: [Iris-commit] [IRIS] r2178 - in /trunk: data/ data/models/atlas/
 data/models/materials/ lua/
Message-ID: <20080512154904.D45381524037@zwischenwelt.org>

Author: sience
Date: Mon May 12 17:49:02 2008
New Revision: 2178

Log:
-obsolete compass stuff removed
-gEnableCompassRadar renamed to gEnableCompass
-materials optimized to use set_texture_alias

Modified:
    trunk/data/config.lua.dist
    trunk/data/models/atlas/tex_atlas_alpha_low.material
    trunk/data/models/atlas/tex_atlas_alpha_med.material
    trunk/data/models/atlas/tex_atlas_alpha_ultralow.material
    trunk/data/models/atlas/tex_atlas_low.material
    trunk/data/models/atlas/tex_atlas_med.material
    trunk/data/models/atlas/tex_atlas_ultralow.material
    trunk/data/models/materials/textures.material
    trunk/lua/lib.compass.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Mon May 12 17:49:02 2008
@@ -455,7 +455,7 @@
 gFastBatchDynamics =3D true
 =

 -- the detailed compass is rendered using stencil buffers and seems to cau=
se trouble with shadows
-gEnableCompassRadar =3D false
+gEnableCompass =3D true
 gbCompassShowMobiles =3D true
 =

 --"med", "low", "ultralow", "none"	(none stands for: use highest single te=
xtures)

Modified: trunk/data/models/atlas/tex_atlas_alpha_low.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_alpha_low.material (original)
+++ trunk/data/models/atlas/tex_atlas_alpha_low.material Mon May 12 17:49:0=
2 2008
@@ -1,13 +1,4 @@
 material tex_atlas_alpha_low0 : atlas_base_alpha =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_alpha_low0.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_alpha_low0.png =

 }

Modified: trunk/data/models/atlas/tex_atlas_alpha_med.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_alpha_med.material (original)
+++ trunk/data/models/atlas/tex_atlas_alpha_med.material Mon May 12 17:49:0=
2 2008
@@ -1,26 +1,8 @@
 material tex_atlas_alpha_med0 : atlas_base_alpha =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_alpha_med0.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_alpha_med0.png =

 }
 material tex_atlas_alpha_med1 : atlas_base_alpha =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_alpha_med1.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_alpha_med1.png =

 }

Modified: trunk/data/models/atlas/tex_atlas_alpha_ultralow.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_alpha_ultralow.material (original)
+++ trunk/data/models/atlas/tex_atlas_alpha_ultralow.material Mon May 12 17=
:49:02 2008
@@ -1,13 +1,4 @@
 material tex_atlas_alpha_ultralow0 : atlas_base_alpha =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_alpha_ultralow0.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_alpha_ultralow0.png =

 }

Modified: trunk/data/models/atlas/tex_atlas_low.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_low.material (original)
+++ trunk/data/models/atlas/tex_atlas_low.material Mon May 12 17:49:02 2008
@@ -1,26 +1,8 @@
 material tex_atlas_low0 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_low0.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_low0.png =

 }
 material tex_atlas_low1 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_low1.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_low1.png =

 }

Modified: trunk/data/models/atlas/tex_atlas_med.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_med.material (original)
+++ trunk/data/models/atlas/tex_atlas_med.material Mon May 12 17:49:02 2008
@@ -1,65 +1,20 @@
 material tex_atlas_med0 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_med0.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_med0.png =

 }
 material tex_atlas_med1 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_med1.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_med1.png =

 }
 material tex_atlas_med2 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_med2.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_med2.png =

 }
 material tex_atlas_med3 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_med3.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_med3.png =

 }
 material tex_atlas_med4 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_med4.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_med4.png =

 }

Modified: trunk/data/models/atlas/tex_atlas_ultralow.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_ultralow.material (original)
+++ trunk/data/models/atlas/tex_atlas_ultralow.material Mon May 12 17:49:02=
 2008
@@ -1,13 +1,4 @@
 material tex_atlas_ultralow0 : atlas_base =

 { =

-	technique =

-	{ =

-		pass
-		{		=

-			texture_unit =

-			{ =

-				texture tex_atlas_ultralow0.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_atlas_ultralow0.png =

 }

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Mon May 12 17:49:02 2008
@@ -7,9 +7,9 @@
 {
 	receive_shadows off
 =

-	technique
+	technique Default
 	{
-		pass =

+		pass Decal
 		{
 			lighting on
 			ambient 1.0 1.0 1.0 1.0
@@ -24,11 +24,12 @@
 			ambient vertexcolour
 			diffuse vertexcolour
 =

-			texture_unit =

+			texture_unit
 			{
 				filtering anisotropic
 				max_anisotropy 8
 				texture checker.png
+				texture_alias MainTexture
 				tex_address_mode clamp
 			}
 		}
@@ -40,7 +41,7 @@
 {
 	technique
 	{
-		pass =

+		pass Decal
 		{
 			alpha_rejection greater_equal 200
 		}
@@ -51,7 +52,7 @@
 {
 	technique
 	{
-		pass =

+		pass Decal
 		{
 //			alpha_rejection greater_equal 128
 			scene_blend alpha_blend
@@ -74,3995 +75,1430 @@
 =

 // --------------- THIS IS THE END OF BASE MATERIALS ----------------------
 =

-material tex_0 : tex_base =

-{ =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_0.png =

-			}	=

-		}
-	} =

-}
-
+material tex_0 : tex_base
+{
+	set_texture_alias MainTexture tex_0.png
+}
 =

 material tex_100 : tex_base
 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_100.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_100.png =

 }
 =

 material tex_101 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_101.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_101.png =

 }
 =

 material tex_102 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_102.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_102.png =

 }
 =

 material tex_103 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_103.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_103.png =

 }
 =

 material tex_104 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_104.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_104.png =

 }
 =

 material tex_105 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_105.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_105.png =

 }
 =

 material tex_106 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_106.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_106.png =

 }
 =

 material tex_107 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_107.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_107.png =

 }
 =

 material tex_108 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_108.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_108.png =

 }
 =

 material tex_109 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_109.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_109.png =

 }
 =

 material tex_10 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_10.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_10.png =

 }
 =

 material tex_110 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_110.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_110.png =

 }
 =

 material tex_111 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_111.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_111.png =

 }
 =

 material tex_112 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_112.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_112.png =

 }
 =

 material tex_113 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_113.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_113.png =

 }
 =

 material tex_114 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_114.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_114.png =

 }
 =

 material tex_115 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_115.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_115.png =

 }
 =

 material tex_116 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_116.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_116.png =

 }
 =

 material tex_117 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_117.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_117.png =

 }
 =

 material tex_118 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_118.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_118.png =

 }
 =

 material tex_119 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_119.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_119.png =

 }
 =

 material tex_11 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_11.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_11.png =

 }
 =

 material tex_120 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_120.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_120.png =

 }
 =

 material tex_121 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_121.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_121.png =

 }
 =

 material tex_122 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_122.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_122.png =

 }
 =

 material tex_123 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_123.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_123.png =

 }
 =

 material tex_124 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_124.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_124.png =

 }
 =

 material tex_125 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_125.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_125.png =

 }
 =

 material tex_126 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_126.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_126.png =

 }
 =

 material tex_127 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_127.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_127.png =

 }
 =

 material tex_128 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_128.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_128.png =

 }
 =

 material tex_129 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_129.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_129.png =

 }
 =

 material tex_12 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_12.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_12.png =

 }
 =

 material tex_130 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_130.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_130.png =

 }
 =

 material tex_131 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_131.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_131.png =

 }
 =

 material tex_132 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_132.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_132.png =

 }
 =

 material tex_133 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_133.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_133.png =

 }
 =

 material tex_134 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_134.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_134.png =

 }
 =

 material tex_135 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_135.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_135.png =

 }
 =

 material tex_136 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_136.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_136.png =

 }
 =

 material tex_137 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_137.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_137.png =

 }
 =

 material tex_138 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_138.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_138.png =

 }
 =

 material tex_139 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_139.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_139.png =

 }
 =

 material tex_13 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_13.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_13.png =

 }
 =

 material tex_140 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_140.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_140.png =

 }
 =

 material tex_141 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_141.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_141.png =

 }
 =

 material tex_142 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_142.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_142.png =

 }
 =

 material tex_143 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_143.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_143.png =

 }
 =

 material tex_144 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_144.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_144.png =

 }
 =

 material tex_145 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_145.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_145.png =

 }
 =

 material tex_146 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_146.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_146.png =

 }
 =

 material tex_147 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_147.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_147.png =

 }
 =

 material tex_148 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_148.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_148.png =

 }
 =

 material tex_149 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_149.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_149.png =

 }
 =

 material tex_14 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_14.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_14.png =

 }
 =

 material tex_150 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_150.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_150.png =

 }
 =

 material tex_151 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_151.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_151.png =

 }
 =

 material tex_152 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_152.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_152.png =

 }
 =

 material tex_153 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_153.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_153.png =

 }
 =

 material tex_154 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_154.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_154.png =

 }
 =

 material tex_155 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_155.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_155.png =

 }
 =

 material tex_156 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_156.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_156.png =

 }
 =

 material tex_157 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_157.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_157.png =

 }
 =

 material tex_158 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_158.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_158.png =

 }
 =

 material tex_159 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_159.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_159.png =

 }
 =

 material tex_15 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_15.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_15.png =

 }
 =

 material tex_160 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_160.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_160.png =

+
 }
 =

 material tex_161 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_161.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_161.png =

 }
 =

 material tex_162 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_162.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_162.png =

 }
 =

 material tex_163 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_163.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_163.png =

 }
 =

 material tex_164 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_164.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_164.png =

 }
 =

 material tex_165 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_165.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_165.png =

 }
 =

 material tex_166 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_166.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_166.png =

 }
 =

 material tex_167 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_167.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_167.png =

 }
 =

 material tex_168 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_168.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_168.png =

 }
 =

 material tex_169 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_169.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_169.png =

 }
 =

 material tex_16 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_16.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_16.png =

 }
 =

 material tex_170 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_170.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_170.png =

 }
 =

 material tex_171 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_171.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_171.png =

 }
 =

 material tex_172 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_172.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_172.png =

 }
 =

 material tex_173 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_173.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_173.png =

 }
 =

 material tex_174 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_174.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_174.png =

 }
 =

 material tex_175 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_175.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_175.png =

 }
 =

 material tex_176 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_176.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_176.png =

 }
 =

 material tex_177 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_177.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_177.png =

 }
 =

 material tex_178 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_178.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_178.png =

 }
 =

 material tex_179 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_179.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_179.png =

 }
 =

 material tex_17 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_17.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_17.png =

 }
 =

 material tex_180 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_180.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_180.png =

 }
 =

 material tex_181 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_181.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_181.png =

 }
 =

 material tex_182 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_182.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_182.png =

 }
 =

 material tex_183 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_183.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_183.png =

 }
 =

 material tex_184 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_184.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_184.png =

 }
 =

 material tex_185 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_185.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_185.png =

 }
 =

 material tex_186 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_186.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_186.png =

 }
 =

 material tex_187 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_187.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_187.png =

 }
 =

 material tex_188 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_188.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_188.png =

 }
 =

 material tex_189 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_189.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_189.png =

 }
 =

 material tex_18 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_18.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_18.png =

 }
 =

 material tex_190 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_190.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_190.png =

 }
 =

 material tex_191 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_191.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_191.png =

 }
 =

 material tex_192 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_192.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_192.png =

 }
 =

 material tex_193 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_193.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_193.png =

 }
 =

 material tex_194 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_194.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_194.png =

 }
 =

 material tex_195 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_195.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_195.png =

 }
 =

 material tex_196 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_196.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_196.png =

 }
 =

 material tex_197 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_197.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_197.png =

 }
 =

 material tex_198 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_198.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_198.png =

 }
 =

 material tex_199 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_199.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_199.png =

 }
 =

 material tex_19 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_19.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_19.png =

 }
 =

 material tex_1 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_1.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_1.png =

 }
 =

 material tex_200 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_200.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_200.png =

 }
 =

 material tex_201 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_201.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_201.png =

 }
 =

 material tex_202 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_202.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_202.png =

 }
 =

 material tex_203 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_203.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_203.png =

 }
 =

 material tex_204 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_204.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_204.png =

 }
 =

 material tex_205 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_205.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_205.png =

 }
 =

 material tex_206 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_206.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_206.png =

 }
 =

 material tex_207 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_207.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_207.png =

 }
 =

 material tex_208 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_208.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_208.png =

 }
 =

 material tex_209 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_209.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_209.png =

 }
 =

 material tex_20 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_20.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_20.png =

 }
 =

 material tex_210 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_210.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_210.png =

 }
 =

 material tex_211 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_211.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_211.png =

 }
 =

 material tex_212 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_212.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_212.png =

 }
 =

 material tex_213 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_213.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_213.png =

 }
 =

 material tex_214 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_214.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_214.png =

 }
 =

 material tex_215 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_215.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_215.png =

 }
 =

 material tex_216 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_216.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_216.png =

 }
 =

 material tex_217 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_217.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_217.png =

 }
 =

 material tex_218 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_218.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_218.png =

 }
 =

 material tex_219 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_219.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_219.png =

 }
 =

 material tex_21 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_21.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_21.png =

 }
 =

 material tex_220 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_220.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_220.png =

 }
 =

 material tex_221 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_221.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_221.png =

 }
 =

 material tex_222 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_222.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_222.png =

 }
 =

 material tex_223 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_223.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_223.png =

 }
 =

 material tex_224 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_224.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_224.png =

 }
 =

 material tex_225 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_225.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_225.png =

 }
 =

 material tex_226 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_226.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_226.png =

 }
 =

 material tex_227 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_227.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_227.png =

 }
 =

 material tex_228 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_228.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_228.png =

 }
 =

 material tex_229 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_229.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_229.png =

 }
 =

 material tex_22 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_22.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_22.png =

 }
 =

 material tex_230 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_230.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_230.png =

 }
 =

 material tex_231 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_231.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_231.png =

 }
 =

 material tex_232 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_232.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_232.png =

 }
 =

 material tex_233 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_233.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_233.png =

 }
 =

 material tex_234 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_234.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_234.png =

 }
 =

 material tex_235 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_235.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_235.png =

 }
 =

 material tex_236 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_236.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_236.png =

 }
 =

 material tex_237 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_237.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_237.png =

 }
 =

 material tex_238 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_238.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_238.png =

 }
 =

 material tex_239 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_239.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_239.png =

 }
 =

 material tex_23 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_23.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_23.png =

 }
 =

 material tex_240 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_240.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_240.png =

 }
 =

 material tex_241 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_241.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_241.png =

 }
 =

 material tex_242 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_242.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_242.png =

 }
 =

 material tex_243 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_243.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_243.png =

 }
 =

 material tex_244 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_244.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_244.png =

 }
 =

 material tex_245 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_245.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_245.png =

 }
 =

 material tex_246 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_246.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_246.png =

 }
 =

 material tex_247 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_247.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_247.png =

 }
 =

 material tex_248 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_248.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_248.png =

 }
 =

 material tex_249 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_249.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_249.png =

 }
 =

 material tex_24 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_24.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_24.png =

 }
 =

 material tex_250 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_250.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_250.png =

 }
 =

 material tex_251 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_251.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_251.png =

 }
 =

 material tex_252 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_252.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_252.png =

 }
 =

 material tex_253 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_253.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_253.png =

 }
 =

 material tex_254 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_254.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_254.png =

 }
 =

 material tex_255 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_255.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_255.png =

 }
 =

 material tex_256 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_256.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_256.png =

 }
 =

 material tex_257 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_257.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_257.png =

 }
 =

 material tex_258 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_258.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_258.png =

 }
 =

 material tex_259 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_259.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_259.png =

 }
 =

 material tex_25 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_25.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_25.png =

 }
 =

 material tex_260 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_260.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_260.png =

 }
 =

 material tex_261 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_261.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_261.png =

 }
 =

 material tex_262 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_262.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_262.png =

 }
 =

 material tex_263 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_263.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_263.png =

 }
 =

 material tex_264 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_264.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_264.png =

 }
 =

 material tex_265 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_265.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_265.png =

 }
 =

 material tex_266 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_266.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_266.png =

 }
 =

 material tex_267 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_267.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_267.png =

 }
 =

 material tex_268 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_268.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_268.png =

 }
 =

 material tex_269 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_269.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_269.png =

 }
 =

 material tex_26 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_26.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_26.png =

 }
 =

 material tex_270 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_270.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_270.png =

 }
 =

 material tex_271 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_271.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_271.png =

 }
 =

 material tex_272 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_272.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_272.png =

 }
 =

 material tex_273 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_273.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_273.png =

 }
 =

 material tex_274 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_274.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_274.png =

 }
 =

 material tex_275 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_275.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_275.png =

 }
 =

 material tex_276 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_276.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_276.png =

 }
 =

 material tex_277 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_277.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_277.png =

 }
 =

 material tex_278 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_278.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_278.png =

 }
 =

 material tex_279 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_279.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_279.png =

 }
 =

 material tex_27 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_27.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_27.png =

 }
 =

 material tex_280 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_280.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_280.png =

 }
 =

 material tex_281 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_281.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_281.png =

 }
 =

 material tex_282 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_282.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_282.png =

 }
 =

 material tex_283 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_283.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_283.png =

 }
 =

 material tex_284 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_284.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_284.png =

 }
 =

 material tex_285 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_285.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_285.png =

 }
 =

 material tex_286 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_286.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_286.png =

 }
 =

 material tex_287 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_287.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_287.png =

 }
 =

 material tex_288 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_288.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_288.png =

 }
 =

 material tex_289 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_289.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_289.png =

 }
 =

 material tex_28 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_28.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_28.png =

 }
 =

 material tex_290 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_290.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_290.png =

 }
 =

 material tex_291 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_291.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_291.png =

 }
 =

 material tex_292 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_292.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_292.png =

 }
 =

 material tex_293 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_293.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_293.png =

 }
 =

 material tex_294 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_294.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_294.png =

 }
 =

 material tex_295 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_295.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_295.png =

 }
 =

 material tex_296 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_296.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_296.png =

 }
 =

 material tex_297 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_297.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_297.png =

 }
 =

 material tex_298 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_298.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_298.png =

 }
 =

 material tex_299 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_299.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_299.png =

 }
 =

 material tex_29 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_29.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_29.png =

 }
 =

 material tex_2 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_2.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_2.png =

 }
 =

 material tex_300 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_300.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_300.png =

 }
 =

 material tex_301 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_301.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_301.png =

 }
 =

 material tex_302 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_302.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_302.png =

 }
 =

 material tex_303 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_303.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_303.png =

 }
 =

 material tex_304 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_304.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_304.png =

 }
 =

 material tex_305 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_305.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_305.png =

 }
 =

 material tex_306 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_306.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_306.png =

 }
 =

 material tex_307 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_307.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_307.png =

 }
 =

 material tex_308 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_308.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_308.png =

 }
 =

 material tex_309 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_309.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_309.png =

 }
 =

 material tex_30 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_30.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_30.png =

 }
 =

 material tex_310 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_310.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_310.png =

 }
 =

 material tex_311 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_311.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_311.png =

 }
 =

 material tex_312 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_312.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_312.png =

 }
 =

 material tex_313 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_313.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_313.png =

 }
 =

 material tex_314 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_314.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_314.png =

 }
 =

 material tex_315 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_315.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_315.png =

 }
 =

 material tex_316 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_316.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_316.png =

 }
 =

 material tex_317 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_317.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_317.png =

 }
 =

 material tex_318 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_318.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_318.png =

 }
 =

 material tex_319 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_319.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_319.png =

 }
 =

 material tex_31 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_31.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_31.png =

 }
 =

 material tex_320 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_320.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_320.png =

 }
 =

 material tex_321 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_321.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_321.png =

 }
 =

 material tex_322 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_322.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_322.png =

 }
 =

 material tex_323 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_323.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_323.png =

 }
 =

 material tex_324 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_324.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_324.png =

 }
 =

 material tex_325 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_325.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_325.png =

 }
 =

 material tex_326 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_326.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_326.png =

 }
 =

 material tex_327 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_327.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_327.png =

 }
 =

 material tex_328 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_328.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_328.png =

 }
 =

 material tex_329 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_329.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_329.png =

 }
 =

 material tex_32 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_32.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_32.png =

 }
 =

 material tex_330 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_330.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_330.png =

 }
 =

 material tex_331 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_331.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_331.png =

 }
 =

 material tex_332 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_332.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_332.png =

 }
 =

 material tex_333 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_333.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_333.png =

 }
 =

 material tex_334 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_334.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_334.png =

 }
 =

 material tex_335 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_335.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_335.png =

 }
 =

 material tex_336 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_336.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_336.png =

 }
 =

 material tex_337 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_337.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_337.png =

 }
 =

 material tex_338 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_338.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_338.png =

 }
 =

 material tex_339 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_339.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_339.png =

 }
 =

 material tex_33 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_33.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_33.png =

 }
 =

 material tex_340 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_340.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_340.png =

 }
 =

 material tex_341 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_341.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_341.png =

 }
 =

 material tex_342 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_342.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_342.png =

 }
 =

 material tex_343 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_343.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_343.png =

 }
 =

 material tex_344 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_344.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_344.png =

 }
 =

 material tex_345 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_345.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_345.png =

 }
 =

 material tex_346 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_346.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_346.png =

 }
 =

 material tex_347 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_347.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_347.png =

 }
 =

 material tex_348 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_348.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_348.png =

 }
 =

 material tex_349 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_349.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_349.png =

 }
 =

 material tex_34 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_34.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_34.png =

 }
 =

 material tex_350 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_350.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_350.png =

 }
 =

 material tex_351 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_351.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_351.png =

 }
 =

 material tex_352 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_352.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_352.png =

 }
 =

 material tex_353 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_353.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_353.png =

 }
 =

 material tex_354 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_354.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_354.png =

 }
 =

 material tex_355 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_355.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_355.png =

 }
 =

 material tex_356 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_356.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_356.png =

 }
 =

 material tex_357 : tex_base_alpha =


Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Mon May 12 17:49:02 2008
@@ -120,7 +120,7 @@
 =

 -- called from lib.gui.lua : gui.StartGame()
 function InitCompassIfNeeded () =

-	if (gDisableCompass) then return end
+	if (not(gEnableCompass)) then return end
 	if (gIrisCompassDialog) then return end
 =

 	RegisterListener("Hook_MainWindowResized",
@@ -141,10 +141,7 @@
 		gIrisCompassDialog.mapdot 				=3D gIrisCompassDialog.rootwidget:CreateCh=
ild()
 		gIrisCompassDialog.compassframe_static	=3D gIrisCompassDialog.rootwidget=
:CreateChild()
 		gIrisCompassDialog.compassframe_rot		=3D gIrisCompassDialog.rootwidget:C=
reateChild()
-		if (gGroundBlockLoader and gStaticBlockLoader and gRadarColorLoader and =
gEnableCompassRadar) then
-			gIrisCompassDialog.radar			=3D CreateRadar( gGroundBlockLoader, gStatic=
BlockLoader, gRadarColorLoader )
-		end
-		=

+
 		-- compass-map image
 		if (gIrisCompassDialog.compass) then
 			gIrisCompassDialog.compass.gfx:InitCompass()
@@ -228,13 +225,13 @@
 	local staticfilename	=3D gMaps[index].staticfilename
 ]]--
 function SetCompassMapIndex	(iMapIndex) =

-	if (gDisableCompass) then return end
-	=

+	if (not(gEnableCompass)) then return end
+
 	gCompassMapIndex =3D gMapIndex
-	=

+
 	local profile =3D MakeProfiler("compass")
 	profile:StartSection("init")
-	=

+
 	InitCompassIfNeeded()
 	if (not gIrisCompassDialog) then return end
 =

@@ -280,13 +277,7 @@
 	-- mapchange, reload detail map
 	gDetailMapCacheBX =3D nil
 	gDetailMapCacheBY =3D nil
-	=

-	--~ if (gGroundBlockLoader and gStaticBlockLoader and gRadarColorLoader a=
nd gEnableCompassRadar) then
-		--~ profile:StartSection("radar")
-		--~ gIrisCompassDialog.radar:Destroy()
-		--~ gIrisCompassDialog.radar =3D CreateRadar( gGroundBlockLoader, gStati=
cBlockLoader, gRadarColorLoader )
-	--~ end
-	=

+
 	-- to set geometry correctly
 	profile:StartSection("updategeom")
 	UpdateCompass()
@@ -302,7 +293,7 @@
 -- factor > 1 increases sight radius
 -- zoom map in compass, called from lib.input.lua on keypress (,.)
 function ZoomCompass (factor) =

-	if (gDisableCompass) then return end
+	if (not(gEnableCompass)) then return end
 	if (not gIrisCompassDialog) then return end
 	gCompassVisibleRad =3D gCompassVisibleRad * factor
 	=

@@ -319,7 +310,7 @@
 =

 -- show/hide compass, called from lib.input.lua on keypress (n)
 function ToggleCompass ()
-	if (gDisableCompass) then return end
+	if (not(gEnableCompass)) then return end
 	if (gIrisCompassDialog) then
 		gIrisCompassDialog.bDoUpdate =3D not gIrisCompassDialog.bDoUpdate
 		gIrisCompassDialog:SetVisible(gIrisCompassDialog.bDoUpdate)
@@ -358,7 +349,7 @@
 =

 -- called every frame
 function UpdateCompass ()
-	if (gDisableCompass) then return end
+	if (not(gEnableCompass)) then return end
 	=

 	if(gbCompassLayoutDirty) then
 		gbCompassLayoutDirty =3D false



From no-reply at zwischenwelt.org  Mon May 12 17:49:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 15:49:42 -0000
Subject: [Iris-commit] [IRIS] r2179 - in /trunk/lua: lib.2d.cam.lua
	lib.2d.map.lua
Message-ID: <20080512154942.F2A721524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 17:49:42 2008
New Revision: 2179

Log:
2d : sorting finetuning

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.map.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Mon May 12 17:49:42 2008
@@ -53,6 +53,7 @@
 	self.fCamDist =3D self.fNearClip + self.fCamDistClipAdd
 	=

 	cam:SetNearClipDistance( self.fNearClip )
+	cam:SetFarClipDistance( self.fNearClip + 500 )
 	cam:SetAspectRatio( yscale * viewport_w / viewport_h )
 	=

 	self:SetCamPos(self:GetCamPos()) -- nearclip changed
@@ -64,7 +65,6 @@
 	-- cam params that don't change
 	local cam =3D GetMainCam() =

 	--~ cam:SetFarClipDistance( 100000.0 )
-	cam:SetFarClipDistance( 2000.0 )
 	cam:SetProjectionType(kCamera_PT_ORTHOGRAPHIC)
 	cam:SetFOVy( gfDeg2Rad*90 )
 	=


Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 17:49:42 2008
@@ -181,6 +181,7 @@
 	local scalew05 =3D 0.5 / 44 -- 0.5 : applied left and right, =

 	-- -so 1420,1550
 	-- -so 552,2088
+	-- -so 632,1488
 	for atlas,group in pairs(block.pStaticGroups) do
 		local matname =3D ArtAtlasLoadMaterial(atlas)
 		-- TODO : sort by z for blendout upper floors
@@ -201,7 +202,7 @@
 			local pAtlasPiece =3D block.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
 			local pTileType =3D GetStaticTileType(static.artid)
 			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-			local fOrderCorrection =3D 0.01*pTileType.iSortBonus2D + 0.001*pTileTyp=
e.miHeight + 0.0001*static.iBlockIndex  -- + =3D nearer to cam      -- gues=
s this works ok for now, but far from ideal
+			local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileTy=
pe.miHeight + 0.001*static.iBlockIndex)  -- + =3D nearer to cam      -- gue=
ss this works ok for now, but far from ideal
 			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

 			y =3D y +   1 * fOrderCorrection + 1
 			z =3D z + sq2 * fOrderCorrection



From no-reply at zwischenwelt.org  Mon May 12 17:56:05 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 15:56:05 -0000
Subject: [Iris-commit] [IRIS] r2180 - /trunk/lua/lib.2d.map.lua
Message-ID: <20080512155605.41E631524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 17:56:04 2008
New Revision: 2180

Log:
2d : allowed more than one load job per frame for small jobs

Modified:
    trunk/lua/lib.2d.map.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 17:56:04 2008
@@ -56,8 +56,8 @@
 	-- step all blocks until we run out of time
 	for k,block in ipairs(self.pMapBlocks) do =

 		if (self:MapBlockStep(block)) then -- returns true if something was done=
, otherwise don't check time
-			return -- one job per frame should be enough
-			--~ if (Client_GetTicks() > iAllowedTimeEnd) then return end -- we ran =
out of time
+			--~ return -- one job per frame should be enough
+			if (Client_GetTicks() > iAllowedTimeEnd) then return end -- we ran out =
of time
 		end
 	end
 end



From no-reply at zwischenwelt.org  Mon May 12 18:00:07 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 16:00:07 -0000
Subject: [Iris-commit] [IRIS] r2181 - /trunk/lua/lib.2d.cam.lua
Message-ID: <20080512160012.695391524040@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 18:00:06 2008
New Revision: 2181

Log:
2d cam : prevent jump after 'long' frame (loading)

Modified:
    trunk/lua/lib.2d.cam.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Mon May 12 18:00:06 2008
@@ -100,9 +100,10 @@
 	end
 	=

 	-- keyboard move cam
+	local dt =3D math.min(Renderer2D.kGoodTicksBetweenFrames/1000,gSecondsSin=
ceLastFrame)
 	local curticks =3D Client_GetTicks()
 	local xloc,yloc =3D self:GetCamPos()
-	local move =3D 16 * gSecondsSinceLastFrame  * (gKeyPressed[key_lshift] an=
d 8*16 or 1)
+	local move =3D 16 * dt  * (gKeyPressed[key_lshift] and 8*16 or 1)
 	local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[k=
ey_right] and 1 or 0))
 	local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[key=
_down] and 1 or 0))
 	if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end



From no-reply at zwischenwelt.org  Mon May 12 19:58:48 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 17:58:48 -0000
Subject: [Iris-commit] [IRIS] r2182 - /trunk/lua/lib.terrain.multitex.lua
Message-ID: <20080512175848.AAD091524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 19:58:47 2008
New Revision: 2182

Log:
workaround for multitex terrain tex load failure

Modified:
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Mon May 12 19:58:47 2008
@@ -124,18 +124,22 @@
 		local iBorderPixels =3D (aw >=3D 512) and 4 or 2
 		local iScaledSourceW =3D tilew*iTileSpan - 2*iBorderPixels
 		local imgFile	=3D LoadImageFromFile(o.src)
-		local imgScaled	=3D ImageScale(imgFile,iScaledSourceW,iScaledSourceW)
-		local bSuccess,l,r,t,b =3D pTexAtlas:AddImage(imgScaled,iBorderPixels)
-		imgFile:Destroy()
-		imgScaled:Destroy()
-		=

-		-- register texture
-		local myid =3D k1 - 1
-		if (o.default) then gMultiTexTerrainDefaultTypeID =3D myid end
-		local u0,v0,w,h =3D l,t,(r-l)/iTileSpan,(b-t)/iTileSpan
-		for k2,uoid in pairs(o.uoids) do gMultiTexTerrainTypeLookup[uoid] =3D my=
id end
-		gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespan}
-		TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h,iTileSpan)
+		if (not imgFile) then
+			print("warning : multitex terrain failed to load ",o.src)
+		else
+			local imgScaled	=3D ImageScale(imgFile,iScaledSourceW,iScaledSourceW)
+			local bSuccess,l,r,t,b =3D pTexAtlas:AddImage(imgScaled,iBorderPixels)
+			imgFile:Destroy()
+			imgScaled:Destroy()
+			=

+			-- register texture
+			local myid =3D k1 - 1
+			if (o.default) then gMultiTexTerrainDefaultTypeID =3D myid end
+			local u0,v0,w,h =3D l,t,(r-l)/iTileSpan,(b-t)/iTileSpan
+			for k2,uoid in pairs(o.uoids) do gMultiTexTerrainTypeLookup[uoid] =3D m=
yid end
+			gMultiTexTerrainTypeTexCoords[myid] =3D {u0,v0,w/o.tilespan,h/o.tilespa=
n}
+			TerrainMultiTex_AddTexCoordSet(0,u0,v0,w,h,iTileSpan)
+		end
 	end
 	if (true) then -- export texatlas image
 		local imgAtlas =3D CreateImage()



From no-reply at zwischenwelt.org  Mon May 12 20:53:44 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 18:53:44 -0000
Subject: [Iris-commit] [IRIS] r2183 - in /trunk/lua: lib.2d.map.lua
 lib.2d.renderer.lua lib.3d.renderer.lua lib.mainmenu.lua main.lua
Message-ID: <20080512185349.955431524037@zwischenwelt.org>

Author: ghoulsblade
Date: Mon May 12 20:53:42 2008
New Revision: 2183

Log:
2d : bugfix when starting from menu

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.mainmenu.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon May 12 20:53:42 2008
@@ -6,8 +6,8 @@
 Renderer2D.kMapLoadRad =3D 4
 Renderer2D.kGoodFPS =3D 25
 Renderer2D.kGoodTicksBetweenFrames =3D 1000 / Renderer2D.kGoodFPS -- 1000=
=3D1sec
-Renderer2D.kMapLoadAllowedTicksPerFrame =3D 0.5 * Renderer2D.kGoodTicksBet=
weenFrames =

-Renderer2D.kMapLoadStaticLoadAllowedTicks =3D 0.5 * Renderer2D.kGoodTicksB=
etweenFrames =

+Renderer2D.kMapLoadAllowedTicksPerFrame =3D Renderer2D.kGoodTicksBetweenFr=
ames =

+Renderer2D.kMapLoadStaticLoadAllowedTicks =3D Renderer2D.kGoodTicksBetween=
Frames =

 =

 =

 --~ local bWeHaveSpareTime =3D gSecondsSinceLastFrame*1000 < Renderer2D.kG=
oodTicksBetweenFrames

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Mon May 12 20:53:42 2008
@@ -18,14 +18,18 @@
 end
 	=

 =

+function Renderer2D:StartInGame ()
+	-- initialize Worldlight for normal SkyBox
+	self:CamInit()
+	SetupWorldLight_Default()
+end
+
 function Renderer2D:Init ()
 	self:FirstInit()
-	self:CamInit()
+	self.gbActive =3D true
 	=

 	-- for 2D/3D renderer switching
-	self.gbActive =3D true
-	=

-	-- initialize Worldlight for normal SkyBox
+	self:CamInit()
 	SetupWorldLight_Default()
 	=

 	--~ for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dyna=
mic)) then self:AddDynamicItem(dynamic) end end

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Mon May 12 20:53:42 2008
@@ -24,6 +24,10 @@
 =

 function Renderer3D:SetOfflineStartPos (x,y,z)
 	gTileFreeWalk:SetPos_All(x+0.5,y+0.5,z) -- + for both might be wrong..
+end
+
+function Renderer3D:StartInGame () =

+	-- setup cam after menu ?
 end
 =

 function Renderer3D:MainStep	()

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Mon May 12 20:53:42 2008
@@ -123,38 +123,6 @@
 local function MainMenuShowLoginDialog (shard,shardname)
 	-- TODO : unfinished, pol server options...
 	=

-	local MyLogin =3D function (widget) =

-		local shard =3D widget.shard
-		shard.gLoginServerIP 	=3D 			widget.dialog.controls["loginserverinput"].=
plaintext
-		shard.gLoginServerPort 	=3D tonumber(	widget.dialog.controls["loginporti=
nput"].plaintext)
-		local nameinput =3D widget.dialog.controls["nameinput"].plaintext
-		local passinput =3D widget.dialog.controls["passinput"].plaintext
-		-- TOOD : password style field
-		--print("MainMenuConnectToShard",shard,widget.shardname,nameinput,passin=
put)
-		MainMenuConnectToShard(shard,widget.shardname,nameinput,passinput)
-		widget.dialog:Destroy()
-	end
-	local rows =3D {
-		{	{type=3D"Label",		text=3D"Login"} },
-			=

-		{	{type=3D"Label",		text=3D"LoginServer:"},
-			{type=3D"EditText",	w=3D300,h=3D16,text=3D(shard.gLoginServerIP or ""),=
controlname=3D"loginserverinput"},
-			{type=3D"EditText",	w=3D100,h=3D16,text=3D(shard.gLoginServerPort or ""=
),controlname=3D"loginportinput"}  },
-			=

-		{	{type=3D"Label",		text=3D"Name:"},
-			{type=3D"EditText",	w=3D300,h=3D16,text=3D(shard.gLoginname or ""),cont=
rolname=3D"nameinput"}  },
-			=

-		{	{type=3D"Label",		text=3D"Pass:"},
-			{type=3D"EditText",	w=3D300,h=3D16,text=3D(shard.gPassword or ""),contr=
olname=3D"passinput",bPassWordStyle=3Dtrue}  },
-			=

-		{	{type=3D"Label",		text=3D"Tipp:"},
-			{type=3D"Label",		text=3D	"On many shards you can you can just login wi=
th a username/password you wish\n"..
-										"to create a new account if you don't have one already"}, },
-			=

-		{	{type=3D"Button",onLeftClick=3DMyLogin,shard=3Dshard,shardname=3Dshard=
name,text=3D"Login"}, },
-		=

-	}
-
 	LoadShardfilter(shard.gCustomArtFilterFilePath)
 =

 	if (shard.gStartGameWithoutNetwork =3D=3D true) then
@@ -163,6 +131,37 @@
 	elseif(shard.gStartInDebugMode =3D=3D true) then
 		StartDebugMenu()
 	else
+		local MyLogin =3D function (widget) =

+			local shard =3D widget.shard
+			shard.gLoginServerIP 	=3D 			widget.dialog.controls["loginserverinput"]=
.plaintext
+			shard.gLoginServerPort 	=3D tonumber(	widget.dialog.controls["loginport=
input"].plaintext)
+			local nameinput =3D widget.dialog.controls["nameinput"].plaintext
+			local passinput =3D widget.dialog.controls["passinput"].plaintext
+			-- TOOD : password style field
+			--print("MainMenuConnectToShard",shard,widget.shardname,nameinput,passi=
nput)
+			MainMenuConnectToShard(shard,widget.shardname,nameinput,passinput)
+			widget.dialog:Destroy()
+		end
+		local rows =3D {
+			{	{type=3D"Label",		text=3D"Login"} },
+				=

+			{	{type=3D"Label",		text=3D"LoginServer:"},
+				{type=3D"EditText",	w=3D300,h=3D16,text=3D(shard.gLoginServerIP or "")=
,controlname=3D"loginserverinput"},
+				{type=3D"EditText",	w=3D100,h=3D16,text=3D(shard.gLoginServerPort or "=
"),controlname=3D"loginportinput"}  },
+				=

+			{	{type=3D"Label",		text=3D"Name:"},
+				{type=3D"EditText",	w=3D300,h=3D16,text=3D(shard.gLoginname or ""),con=
trolname=3D"nameinput"}  },
+				=

+			{	{type=3D"Label",		text=3D"Pass:"},
+				{type=3D"EditText",	w=3D300,h=3D16,text=3D(shard.gPassword or ""),cont=
rolname=3D"passinput",bPassWordStyle=3Dtrue}  },
+				=

+			{	{type=3D"Label",		text=3D"Tipp:"},
+				{type=3D"Label",		text=3D	"On many shards you can you can just login w=
ith a username/password you wish\n"..
+											"to create a new account if you don't have one already"}, },
+				=

+			{	{type=3D"Button",onLeftClick=3DMyLogin,shard=3Dshard,shardname=3Dshar=
dname,text=3D"Login"}, },
+			=

+		}
 		gLoginDialog =3D guimaker.MakeTableDlg(rows,10,10,true,true,gGuiDefaultS=
tyleSet,"window")
 	end
 end
@@ -332,6 +331,7 @@
 =

 	-- start menu sound
 	SoundPlayMusicById(8)
+	MainMenuSetBackground_Sky()
 =

 	local rows =3D {
 		{ {type=3D"Label",	text=3D"Login:"} }
@@ -360,7 +360,6 @@
 			Terminate()
 		end } })
 =

-	MainMenuSetBackground_Sky()
 =

 	if (not(gMainMenuDialog)) then
 		gMainMenuDialog =3D guimaker.MakeTableDlg(rows,10,10,false,true,gGuiDefa=
ultStyleSet,"window") =


Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Mon May 12 20:53:42 2008
@@ -351,6 +351,7 @@
 	print("##################################")
 	print("######      START INGAME     #####")
 	print("##################################")
+	gCurrentRenderer:StartInGame()
 =

 	ExecuteMapChangeIfNeeded()
 =




From no-reply at zwischenwelt.org  Tue May 13 01:25:12 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 12 May 2008 23:25:12 -0000
Subject: [Iris-commit] [IRIS] r2184 - in /trunk: include/builder.h
 include/data_anim.h lua/lib.2d.mobile.lua lua/lib.2d.renderer.lua
 lua/lib.uoanim.lua premakelinux.sh src/data_anim.cpp src/data_anim_L.cpp
 src/data_artmap.cpp
Message-ID: <20080513000012.703311524041@zwischenwelt.org>

Author: ghoulsblade
Date: Tue May 13 01:25:12 2008
New Revision: 2184

Log:
loader for 2d character anims to image

Added:
    trunk/lua/lib.2d.mobile.lua
Modified:
    trunk/include/builder.h
    trunk/include/data_anim.h
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.uoanim.lua
    trunk/premakelinux.sh
    trunk/src/data_anim.cpp
    trunk/src/data_anim_L.cpp
    trunk/src/data_artmap.cpp

Modified: trunk/include/builder.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/builder.h (original)
+++ trunk/include/builder.h Tue May 13 01:25:12 2008
@@ -80,6 +80,9 @@
 	const Ogre::ColourValue& vBorder	=3DOgre::ColourValue::Black,
 	const Ogre::ColourValue& vBackground=3DOgre::ColourValue::ZERO);
 =

+bool	WriteAnimFrameToImage				(Ogre::Image& pDest,cAnimLoader& pAnimLoader=
,const int iRealID,const int iFrame,int& iWidth, int& iHeight, int& iCenter=
X, int& iCenterY, int& iFrames,cHueLoader* pHueLoader,const short iHue);
+			=

+
 bool	GenerateArtImage(Ogre::Image &image, cArtMapLoader& oArtMapLoader,con=
st int iID,const bool bPixelExact,const bool bInvertY,const bool bInvertX,c=
HueLoader* pHueLoader,const short iHue);
 =

 bool	GenerateHeightMap(cGroundBlockLoader* oGroundBlockLoader, const int i=
BlockX, const int iBlockY, signed char* fValues );

Modified: trunk/include/data_anim.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data_anim.h (original)
+++ trunk/include/data_anim.h Tue May 13 01:25:12 2008
@@ -3,7 +3,7 @@
 class cAnimDataLoader : public Lugre::cSmartPointable, public cFullFileLoa=
der { public :
 	RawAnimData*		mpLastAnimData;		=

 	cAnimDataLoader							(const char* szFile);
-	RawAnimData*		GetAnimDataType		(const int iID);
+	RawAnimData*		GetAnimDataInfo		(const int iID);
 };
 =

 =


Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Tue May 13 01:25:12 2008
@@ -9,6 +9,7 @@
 =

 dofile(libpath .. "lib.2d.cam.lua")
 dofile(libpath .. "lib.2d.map.lua")
+dofile(libpath .. "lib.2d.mobile.lua")
 =

 function Renderer2D:FirstInit ()
 	if (self.bFirstInitDone) then return end
@@ -32,8 +33,8 @@
 	self:CamInit()
 	SetupWorldLight_Default()
 	=

-	--~ for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dyna=
mic)) then self:AddDynamicItem(dynamic) end end
-	--~ for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile=
) end
+	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
) then self:AddDynamicItem(dynamic) end end
+	for k,mobile in pairs(GetMobileList()) do self:UpdateMobile(mobile) end
 end
 =

 function Renderer2D:DeInit							() =

@@ -44,21 +45,16 @@
 function Renderer2D:MainStep	()
 	self:CamStep()
 	self:MapStep()
+	self:MobileAnimStep()
 	-- TODO : self:CombatGuiStep() ?
-	-- TODO : self:MobileAnimStep() ?
 	-- TODO : self:MousePickStep() ?
 end
 =

- -- 653*8
- -- 424*8
-
  =

- function Renderer2D:DestroyMobileGfx				() end
 function Renderer2D:DestroyMousePickItemBySerial	() end
 function Renderer2D:RemoveDynamicItem				() end
 function Renderer2D:AddDynamicItem					() end
 function Renderer2D:UpdateDynamicItemPos			() end
-function Renderer2D:MobileStartServerSideAnim		(animdata) end
 function Renderer2D:AddEffect						(effectdata) end
 function Renderer2D:CamKeyDown						(key) end
 function Renderer2D:CamKeyUp						(key) end
@@ -77,8 +73,6 @@
 function Renderer2D:SetOfflineStartPos			(x,y,z) self:SetCamPos(-x,y,z) end
 =

 =

-function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc
-function Renderer2D:UpdateMobile				() end -- ???
 =

 -- skybox,fog etc for 3d
 function Renderer2D:SetMapEnvironment			() =


Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Tue May 13 01:25:12 2008
@@ -12,7 +12,23 @@
 	return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + kAnim_IdRangeLen_Low=
Detailed*65 + (iID-kAnim_IdRangeLen_HighDetailed-kAnim_IdRangeLen_LowDetail=
ed)*175
 end
 =

+gGetAnimDataInfoCache =3D {}
+function GetAnimDataInfo (id)
+	local o =3D gGetAnimDataInfoCache[id]
+	if (o ~=3D nil) then return o end
+	o =3D {}
+	o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,o.miFrameStart =3D gAn=
imDataLoader:GetAnimDataInfo(id)
+	gGetAnimDataInfoCache[id] =3D o
+	return o
+end
 =

+--- returns pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames
+function ExportAnimFrameToImage (iRealID,iFrame,iHue)
+	local pImage =3D CreateImage()
+	local bSuccess,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D gAnimLoader:E=
xportToImage(pImage,iRealID,iFrame,gHueLoader,iHue)
+	if (not bSuccess) then pImage:Destroy() return end
+	return pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames
+end
 =

 =

 --[[

Modified: trunk/premakelinux.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/premakelinux.sh (original)
+++ trunk/premakelinux.sh Tue May 13 01:25:12 2008
@@ -1,4 +1,4 @@
 #!/bin/bash
-./premake --target gnu && make CONFIG=3DRelease
+./premake --target gnu && make CXX=3D"ccache gcc" CONFIG=3DRelease
 #~ ./premake --target gnu && make CONFIG=3DRelease
 # tipp : try "make -j 2" : start 2 jobs in parallel, to avoid wait-for-io =
and use multi-cpu processors efficiently during compile

Modified: trunk/src/data_anim.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_anim.cpp (original)
+++ trunk/src/data_anim.cpp Tue May 13 01:25:12 2008
@@ -24,7 +24,7 @@
 =

 cAnimDataLoader::cAnimDataLoader		(const char* szFile) : cFullFileLoader(s=
zFile) {}
 =

-RawAnimData*	cAnimDataLoader::GetAnimDataType(const int iID) { PROFILE
+RawAnimData*	cAnimDataLoader::GetAnimDataInfo(const int iID) { PROFILE
 	mpLastAnimData =3D (RawAnimData*)(mpFullFileBuffer + (iID/8)*(4+8*68) + 4=
 + (iID%8)*68);
 	return mpLastAnimData;
 }
@@ -58,6 +58,45 @@
 		bitmask.SetDataFrom16BitImage(pImgRaw,anim->GetTexWidth(),anim->GetTexHe=
ight());
 		delete [] pImgRaw;
 	}
+}
+
+
+bool	WriteAnimFrameToImage				(Ogre::Image& pDest,cAnimLoader& pAnimLoader=
,const int iRealID,const int iFrame,int& iWidth, int& iHeight, int& iCenter=
X, int& iCenterY, int& iFrames,cHueLoader* pHueLoader,const short iHue) {
+	cAnim *anim =3D pAnimLoader.GetAnim( iRealID );
+	if (!anim) return false;
+	=

+	// decode and hue
+	short *pImgRaw =3D 0;
+	bool bTexSize =3D false;
+	if (iHue && pHueLoader) {
+		short* ColorTable =3D pHueLoader->GetHue( (iHue & 0x7FFF)-1 )->GetColors=
();
+		if (iHue & 0x8000) { // PartialHue
+			cPartialHueFilter f;
+			if (!anim->Decode( pImgRaw, iFrame, f, ColorTable, bTexSize )) return f=
alse;
+		} else {
+			cHueFilter f;
+			if (!anim->Decode( pImgRaw, iFrame, f, ColorTable, bTexSize )) return f=
alse;
+		}
+	} else {
+		cSetHighBitFilter f;
+		if (!anim->Decode( pImgRaw, iFrame, f, 0, bTexSize )) return false;
+	}
+	if (!pImgRaw) return false;
+
+	// extract infos
+	iWidth =3D anim->GetWidth();
+	iHeight =3D anim->GetHeight();
+	iCenterX =3D anim->GetCenterX();
+	iCenterY =3D anim->GetCenterY();
+	iFrames =3D anim->GetFrames();
+	=

+	// convert from 16 to 32 bits
+	uint32	*pBuf32 =3D new uint32[iWidth*iHeight];
+	ColorBuffer16To32(iWidth,iHeight,(uint16*)pImgRaw,(uint32*)pBuf32);
+	delete [] pImgRaw;
+	=

+	pDest.loadDynamicImage((Ogre::uchar*)pBuf32,iWidth,iHeight,1,Ogre::PF_A8R=
8G8B8,true); // autoDelete pBuf32
+	return true;
 }
 =

 bool	GenerateAnimMaterial	(cAnimLoader& oAnimLoader,const char* szMatName,=
const int iID,const int iAnimID,const int iFrame, int& iWidth, int& iHeight=
, int& iCenterX, int& iCenterY, int& iFrames, cHueLoader* pHueLoader, short=
 iHue) { PROFILE

Modified: trunk/src/data_anim_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_anim_L.cpp (original)
+++ trunk/src/data_anim_L.cpp Tue May 13 01:25:12 2008
@@ -10,7 +10,7 @@
 			=

 			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cAnimDataLoader_L::methodname));
 			REGISTER_METHOD(Destroy);
-			REGISTER_METHOD(GetAnimDataType);
+			REGISTER_METHOD(GetAnimDataInfo);
 			#undef REGISTER_METHOD
 		}
 =

@@ -27,8 +27,11 @@
 	// object methods exported to lua
 =

 		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
-		static int  GetAnimDataType	(lua_State *L) { PROFILE
-			RawAnimData* AnimDataType =3D checkudata_alive(L)->GetAnimDataType(luaL=
_checkint(L,2));
+		=

+		=

+		// table{0-63:framenums},miUnknown,miCount,miFrameInterval,miFrameStart =
GetAnimDataInfo (id)
+		static int  GetAnimDataInfo	(lua_State *L) { PROFILE
+			RawAnimData* AnimDataType =3D checkudata_alive(L)->GetAnimDataInfo(luaL=
_checkint(L,2));
 			if (!AnimDataType) {
 				return 0;
 			} else {
@@ -61,6 +64,7 @@
 			REGISTER_METHOD(CreateMaterial);
 			REGISTER_METHOD(CreateBitMask);
 			REGISTER_METHOD(GetAnimType);
+			REGISTER_METHOD(ExportToImage);
 			#undef REGISTER_METHOD
 		}
 =

@@ -81,6 +85,31 @@
 			GenerateAnimBitMask(*checkudata_alive(L),luaL_checkint(L,2),luaL_checki=
nt(L,3),luaL_checkint(L,4),*pTarget);
 			return cLuaBind<cBitMask>::CreateUData(L,pTarget);
 		}
+		=

+		=

+		/// return true on success
+		/// loads an anim frame into a Ogre::Image (lua wrapper : cImage)
+		/// for the crazy magics involved behind the name iRealID, see Anim_GetR=
ealID in lib.uoanim.lua
+		/// bSuccess	ExportToImage	(pImage,iRealID,iFrame,pHueLoader=3Dnil,iHue=
=3D0)
+		static int		ExportToImage	(lua_State *L) { PROFILE =

+			cImage*		pImage			=3D cLuaBind<cImage>::checkudata_alive(L,2);
+			int			iRealID			=3D luaL_checkint(L,3);
+			int			iFrame			=3D luaL_checkint(L,4);
+			cHueLoader* pHueLoader		=3D (lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ?=
 cLuaBind<cHueLoader>::checkudata(L,5) : 0;
+			short 		iHue			=3D (lua_gettop(L) >=3D 6 && !lua_isnil(L,6)) ? luaL_che=
ckint(L,6) : 0;
+			=

+			int			iWidth,iHeight,iCenterX,iCenterY,iFrames;
+			=

+			if (!WriteAnimFrameToImage(pImage->mImage,*checkudata_alive(L),iRealID,=
iFrame,iWidth,iHeight,iCenterX,iCenterY,iFrames,pHueLoader,iHue)) return 0;
+			lua_pushboolean(L,true);
+			lua_pushnumber(L,iWidth);
+			lua_pushnumber(L,iHeight);
+			lua_pushnumber(L,iCenterX);
+			lua_pushnumber(L,iCenterY);
+			lua_pushnumber(L,iFrames);
+			return 6; =

+		}
+		=

 		static int	CreateMaterial	(lua_State *L) { PROFILE =

 			int i=3D4;
 			cHueLoader* pHueLoader=3D (lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ?=
 cLuaBind<cHueLoader>::checkudata(L,i) : 0;

Modified: trunk/src/data_artmap.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_artmap.cpp (original)
+++ trunk/src/data_artmap.cpp Tue May 13 01:25:12 2008
@@ -1,3 +1,4 @@
+
 #include "data_common.h"
 =

 =




From no-reply at zwischenwelt.org  Tue May 13 23:44:56 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 13 May 2008 21:44:56 -0000
Subject: [Iris-commit] [IRIS] r2186 - in /trunk: bin/iris2.exe
 data/models/materials/textures.material lua/lib.3d.dynamic.lua
 lua/lib.3d.renderer.lua lua/lib.light.lua vc8/iris.vcproj
Message-ID: <20080513214456.75E17153C00D@zwischenwelt.org>

Author: sience
Date: Tue May 13 23:44:55 2008
New Revision: 2186

Log:
-new win32 binary
-some comments removed
-shadowmapping updates (depthshadowmapping works but only with custom shade=
rs (no yet in))
-some lightsetup updateds
-vc8 project updated

Modified:
    trunk/bin/iris2.exe
    trunk/data/models/materials/textures.material
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.light.lua
    trunk/vc8/iris.vcproj

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Tue May 13 23:44:55 2008
@@ -7,14 +7,14 @@
 {
 	receive_shadows off
 =

-	technique Default
+	technique default
 	{
 		pass Decal
 		{
 			lighting on
 			ambient 1.0 1.0 1.0 1.0
 			diffuse 1.0 1.0 1.0 1.0
-			=

+
 			// needed for xmirror fix
 			//cull_hardware anticlockwise
 			//cull_software front
@@ -39,7 +39,7 @@
 // MESH BASE ALPHA MATERIAL TEMPLATE
 material tex_base_alpha : tex_base
 {
-	technique
+	technique default
 	{
 		pass Decal
 		{
@@ -50,7 +50,7 @@
 =

 material tex_base_sceneblend : tex_base
 {
-	technique
+	technique default
 	{
 		pass Decal
 		{
@@ -3645,16 +3645,7 @@
 =

 material tex_497 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_497.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_497.png =

 }
 =

 material tex_498 : tex_base_alpha =


Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Tue May 13 23:44:55 2008
@@ -248,7 +248,7 @@
 			self:CreateArtBillBoard(entity.gfx.billboard,iTranslatedTileTypeID + 0x=
4000,entity.iHue)
 			table.insert(chunk.lStaticEntities,entity)
 			printdebug("missing",sprintf("Fallback: Static Billboard created : iTra=
nslatedTileTypeID=3D%i\n", iTranslatedTileTypeID))
-			]]
+			]]--
 		end
 	end
 =

@@ -446,7 +446,6 @@
 	end
 =

 	-- creates a light if lights are enabled and static is a lightsource
-	-- note! lights don't cast shadows
 	if (gLightsources) then
 		local arrtiletype =3D GetStaticTileType(item.artid)
 		if( arrtiletype and TestBit(arrtiletype.miFlags or 0,kTileDataFlag_Light=
Source) ) then

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Tue May 13 23:44:55 2008
@@ -177,17 +177,15 @@
 --m_pSceneMgr->setShadowCameraSetup(ShadowCameraSetupPtr(mLiSPSMSetup))
 	elseif ((gShadowTechnique =3D=3D "texture_additive_integrated") or (gShad=
owTechnique =3D=3D "texture_modulative_integrated")) then
 		OgreSetShadowTextureCount(4)				-- first mention the count (one texture =
for one lightsource)
-		OgreSetShadowTextureSize(1024)				-- then the texsize
+		OgreSetShadowTextureSize(512)				-- then the texsize
 		OgreSetShadowFarDistance(shadowfardist)
 		OgreSetShadowTextureFadeStart(0.6)
 		OgreSetShadowTextureFadeEnd(0.9)
-		OgreSetShadowTexturePixelFormat(PF_FLOAT16_RGB)
+		OgreSetShadowTexturePixelFormat(PF_FLOAT32_R)
 		OgreSetShadowCasterRenderBackFaces(false)
 		OgreSetShadowTextureSelfShadow(true)
-		OgreSetShadowTextureCasterMaterial("shadow_caster")
-		--OgreSetShadowTexturePixelFormat(PF_FLOAT32_R)
+		OgreSetShadowTextureCasterMaterial("DepthShadowmap/Caster/Float")
 		--OgreSetShadowTextureCasterMaterial("Ogre/DepthShadowmap/Caster/Float")
---		OgreSetShadowTextureReceiverMaterial("Ogre/DepthShadowmap/BasicTemplat=
eMaterial")
  		OgreShadowTechnique(gShadowTechnique)		-- last, the technique
 	end
 end
@@ -197,7 +195,6 @@
 	if (not Renderer3D.gbNeedCorrectAspectRatio) then return end
 	Renderer3D.gbNeedCorrectAspectRatio =3D false
 	local vp =3D GetMainViewport()
-	--print("Renderer3D:NotifyMainWindowResized",vp:GetActualWidth() / vp:Get=
ActualHeight())
 	GetMainCam():SetAspectRatio(vp:GetActualWidth() / vp:GetActualHeight())
 end
 =

@@ -218,8 +215,11 @@
 	-- for 2D/3D renderer switching
 	self.gbActive =3D true
 =

-	-- initialize Worldlight for normal SkyBox
-	SetupWorldLight_Default()
+	-- disable Worldlight only when Caelum is enabled
+	if (not(gUseCaelumSkysystem)) then
+		-- initialize Worldlight for normal SkyBox=C2=B4
+		SetupWorldLight_Default()
+	end
 =

 	-- initialize Shadowsystem
 	self:SetupShadows()

Modified: trunk/lua/lib.light.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.light.lua (original)
+++ trunk/lua/lib.light.lua Tue May 13 23:44:55 2008
@@ -1,13 +1,17 @@
 -- light utils shared between renderers
 =

 function SetupWorldLight_Default ()
-	if (gUseCaelumSkysystem) then return end
 	Client_ClearLights()
 =

-	-- Sun Light
-	local xyz =3D gSunLightDirection		gDirectionalLightSun =3D Client_AddDire=
ctionalLight(xyz.x,xyz.y,xyz.z)
-	local rgb =3D gSunLightDiffuse		Client_SetLightDiffuseColor(gDirectionalL=
ightSun,rgb.r,rgb.g,rgb.b)
-	local rgb =3D gSunLightSpecular		Client_SetLightSpecularColor(gDirectiona=
lLightSun,rgb.r,rgb.g,rgb.b)
+	-- disable directional light for depthshadowmapping (integrated_shadowmap=
ping)
+	if (not(gShadowTechnique =3D=3D "texture_modulative_integrated") or
+		not(gShadowTechnique =3D=3D "texture_additive_integrated")) then
+		=

+		-- Sun Light
+		local xyz =3D gSunLightDirection		gDirectionalLightSun =3D Client_AddDir=
ectionalLight(xyz.x,xyz.y,xyz.z)
+		local rgb =3D gSunLightDiffuse		Client_SetLightDiffuseColor(gDirectional=
LightSun,rgb.r,rgb.g,rgb.b)
+		local rgb =3D gSunLightSpecular		Client_SetLightSpecularColor(gDirection=
alLightSun,rgb.r,rgb.g,rgb.b)
+	end
 =

 	-- Ambient Light
 	local rgb =3D gAmbientLight			Client_SetAmbientLight(rgb.r,rgb.g,rgb.b, 1=
.0)

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Tue May 13 23:44:55 2008
@@ -174,6 +174,7 @@
 			/>
 			<Tool
 				Name=3D"VCManifestTool"
+				EmbedManifest=3D"true"
 				UseFAT32Workaround=3D"true"
 			/>
 			<Tool



From no-reply at zwischenwelt.org  Thu May 15 03:34:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 15 May 2008 01:34:46 -0000
Subject: [Iris-commit] [IRIS] r2187 - /trunk/premakelinux_noccache.sh
Message-ID: <20080515020010.79028153C00D@zwischenwelt.org>

Author: ghoulsblade
Date: Thu May 15 03:34:45 2008
New Revision: 2187

Log:
added script to start premake without ccache

Added:
    trunk/premakelinux_noccache.sh
      - copied, changed from r2184, trunk/premakelinux.sh



From no-reply at zwischenwelt.org  Sat May 17 01:20:59 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 16 May 2008 23:20:59 -0000
Subject: [Iris-commit] [IRIS] r2188 - in /trunk/lua: lib.2d.map.lua
	lib.2d.mobile.lua lib.uoanim.lua
Message-ID: <20080516232059.830791524037@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 17 01:20:58 2008
New Revision: 2188

Log:
first 2d anim loader test successful

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.uoanim.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Sat May 17 01:20:58 2008
@@ -26,7 +26,9 @@
 for k,v in pairs(k2DMapJob) do v.totaltime =3D 0 v.totalcount =3D 0 end --=
 TODO : profiling ?
 =

 =

+
 function Renderer2D:MapStep	()
+	self:MobileTestStep()
 	local iCurTicks =3D Client_GetTicks()
 	if (iCurTicks < Renderer2D.iNextMapStep) then return end
 	Renderer2D.iNextMapStep =3D iCurTicks + 0.1*Renderer2D.kGoodTicksBetweenF=
rames -- often, but small steps

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sat May 17 01:20:58 2008
@@ -6,3 +6,54 @@
 function Renderer2D:MobileAnimStep				() end -- from mainstep
 function Renderer2D:MobileStartServerSideAnim	(animdata) end
 =

+g2DMobileTestGfx =3D nil
+
+function Renderer2D:MobileTestStep()
+	if (not g2DMobileTestGfx) then
+		-- TODO : sort by z for blendout upper floors
+		local iModelID,iAnimID =3D 400,0
+		local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

+		local iFrame,iHue =3D 0,0
+		local animinfo =3D GetAnimDataInfo(iRealID) -- o.miFrames,o.miUnknown,o.=
miCount,o.miFrameInterval,o.miFrameStart
+		local pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFram=
eToImage(iRealID,iFrame,iHue)
+		local tex =3D pImage:MakeTexture()
+		local matname =3D GetPlainTextureMat(tex,true)
+		--~ local matname =3D "BaseWhiteNoLighting"
+
+		local sq2 =3D math.sqrt(2)
+		local scaleh =3D sq2 / 44
+		local scalew05 =3D 0.5 / 44 -- 0.5 : applied left and right, =

+		=

+		local spritecount =3D 1
+		local gfx =3D CreateRootGfx3D()
+		g2DMobileTestGfx =3D gfx
+		gfx:SetSimpleRenderable()
+		gfx:SetMaterial(matname)
+		=

+		-- generate geometry
+		local vc =3D 4*spritecount
+		local ic =3D 6*spritecount
+		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
+		--~ local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zl=
oc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
+		local x,y,z =3D -0,0,0*0.1 -- static : {zloc=3D?,artid=3D?,hue=3D?,xloc=
=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
+		local u0,v0 =3D 0,0
+		local u1,v1 =3D 1,1
+		x =3D x - 1  -- ox-1,oy+1 : sprites are too high normally, this moves th=
em down =

+		y =3D y + 1
+		z =3D z =

+		local w =3D scalew05 * iWidth
+		local h =3D scaleh   * iHeight
+		gfx:RenderableVertex(x-w,y-w,z  , u1,v1)
+		gfx:RenderableVertex(x+w,y+w,z  , u0,v1)
+		gfx:RenderableVertex(x-w,y-w,z+h, u1,v0)
+		gfx:RenderableVertex(x+w,y+w,z+h, u0,v0)
+		gfx:RenderableIndex3(0,2,1)
+		gfx:RenderableIndex3(1,2,3)
+		gfx:RenderableEnd()
+	end
+	=

+	local xloc,yloc =3D self:GetCamPos()
+	local x,y,z =3D self:UOPosToLocal(xloc,yloc,4)
+	g2DMobileTestGfx:SetPosition(x,y,z)
+end
+

Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Sat May 17 01:20:58 2008
@@ -4,12 +4,12 @@
 kAnim_IdRangeLen_LowDetailed	=3D 200  -- mLowDetailed
 =

 -- iID is probably bodyid, and animid the animation ? ported from varans c=
ode
-function Anim_GetRealID (iID,iAnimID) =

-	if (iID < kAnim_IdRangeLen_HighDetailed) then return iAnimID + iID*110 end
-	if (iID < kAnim_IdRangeLen_HighDetailed + kAnim_IdRangeLen_LowDetailed) t=
hen
-		return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + (iID-kAnim_IdRangeL=
en_HighDetailed)*65
+function Anim_GetRealID (iModelID,iAnimID) =

+	if (iModelID < kAnim_IdRangeLen_HighDetailed) then return iAnimID + iMode=
lID*110 end
+	if (iModelID < kAnim_IdRangeLen_HighDetailed + kAnim_IdRangeLen_LowDetail=
ed) then
+		return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + (iModelID-kAnim_IdR=
angeLen_HighDetailed)*65
 	end
-	return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + kAnim_IdRangeLen_Low=
Detailed*65 + (iID-kAnim_IdRangeLen_HighDetailed-kAnim_IdRangeLen_LowDetail=
ed)*175
+	return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + kAnim_IdRangeLen_Low=
Detailed*65 + (iModelID-kAnim_IdRangeLen_HighDetailed-kAnim_IdRangeLen_LowD=
etailed)*175
 end
 =

 gGetAnimDataInfoCache =3D {}
@@ -43,6 +43,7 @@
 	gAnimLoader		gAnimidxFile	=3D "anim.idx"
 					gAnimFile		=3D "anim.mul"
 	gAnimDataLoader	gAnimdataFile	=3D "animdata.mul"
+	=

 =

 264K anim2.idx
 132M anim2.mul



From no-reply at zwischenwelt.org  Sat May 17 02:08:10 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 17 May 2008 00:08:10 -0000
Subject: [Iris-commit] [IRIS] r2189 - in /trunk/lua: lib.granny.lua main.lua
Message-ID: <20080517000810.BF4231524037@zwischenwelt.org>

Author: hagish
Date: Sat May 17 02:08:09 2008
New Revision: 2189

Log:
first fix for shoggoth abs path problem

Modified:
    trunk/lua/lib.granny.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.granny.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.granny.lua (original)
+++ trunk/lua/lib.granny.lua Sat May 17 02:08:09 2008
@@ -210,7 +210,7 @@
 	local matname =3D gGrannyMaterialCache[texname.."_"..hue]
 	if (not matname) then
 		local texmaskname =3D GetGrannyTextureMaskName(texname)
-		local texturepath =3D CorrectGrannyPath("Maps/"..texname)
+		local texturepath =3D texname --CorrectGrannyPath("Maps/"..texname)
 		local texturemaskpath =3D CorrectGrannyPath("Maps/"..texmaskname)
 		-- texturepath will usually be an absolute path such as "/cavern/uostuff=
/uo/Models/Maps/UT256_Armor_Ring_V2.tga"
 =


Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat May 17 02:08:09 2008
@@ -212,6 +212,8 @@
 	OgreAddResLoc(mydatapath.."customchars/materials"		,"FileSystem","General=
")
 	OgreAddResLoc(mydatapath.."customchars/models"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."customchars/textures"		,"FileSystem","General")
+	=

+	OgreAddResLoc(gUOPath.."Models/Maps"		,"FileSystem","General")
 =

 	--~ OgreAddResLoc(kObjTypePreviewDir.."."			,"FileSystem","General")
 	OgreInitResLocs()



From no-reply at zwischenwelt.org  Sat May 17 02:23:39 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 17 May 2008 00:23:39 -0000
Subject: [Iris-commit] [IRIS] r2190 - in /trunk/lua: lib.2d.map.lua
 lib.2d.mobile.lua lib.granny.lua main.lua
Message-ID: <20080517002339.957991524037@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 17 02:23:39 2008
New Revision: 2190

Log:
granny texture path fix for ogre 1.4.8 (i hope, still to be tested) , start=
ed on anim2d code

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.granny.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Sat May 17 02:23:39 2008
@@ -178,9 +178,6 @@
 -- statics : create gfx
 function k2DMapJob.StaticGfx.fun	(block) =

 	block.pStaticGroupGfx =3D {}
-	local sq2 =3D math.sqrt(2)
-	local scaleh =3D sq2 / 44
-	local scalew05 =3D 0.5 / 44 -- 0.5 : applied left and right, =

 	-- -so 1420,1550
 	-- -so 552,2088
 	-- -so 632,1488
@@ -207,9 +204,9 @@
 			local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileTy=
pe.miHeight + 0.001*static.iBlockIndex)  -- + =3D nearer to cam      -- gue=
ss this works ok for now, but far from ideal
 			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

 			y =3D y +   1 * fOrderCorrection + 1
-			z =3D z + sq2 * fOrderCorrection
-			local w =3D scalew05 * pAtlasPiece.w
-			local h =3D scaleh   * pAtlasPiece.h
+			z =3D z + kSq2 * fOrderCorrection
+			local w =3D k2D_ScaleW05 * pAtlasPiece.w
+			local h =3D k2D_ScaleH   * pAtlasPiece.h
 			gfx:RenderableVertex(x-w,y-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
 			gfx:RenderableVertex(x+w,y+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
 			gfx:RenderableVertex(x-w,y-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sat May 17 02:23:39 2008
@@ -1,4 +1,8 @@
 -- mobiles (animals,players,monsters,npcs..)
+
+kSq2			=3D math.sqrt(2)
+k2D_ScaleH		=3D kSq2 / 44
+k2D_ScaleW05	=3D 0.5 / 44 -- 0.5 : applied left and right
 =

 function Renderer2D:UpdateMobile				() end -- main updater, create, positi=
on ...
 function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc ??
@@ -6,54 +10,65 @@
 function Renderer2D:MobileAnimStep				() end -- from mainstep
 function Renderer2D:MobileStartServerSideAnim	(animdata) end
 =

-g2DMobileTestGfx =3D nil
+gMobile2DTestGfx =3D nil
+
+-- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
+function Anim2DAtlas_Load (iModelID,iAnimID,iFrame,iHue)
+	local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

+	local pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFrame=
ToImage(iRealID,iFrame,iHue)
+	local tex =3D pImage:MakeTexture()
+	local sMatName =3D GetPlainTextureMat(tex,true)
+	local u0,v0,u1,v1 =3D 0,0,1,1
+	return sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
+end
+
+function Renderer2D:MobileGfxUpdateGeometry (gfx,iModelID,iAnimID,iFrame,i=
Hue)
+	local sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1 =3D A=
nim2DAtlas_Load(iModelID,iAnimID,iFrame,iHue)
+	-- MobileGfxUpdateGeometry : cen=3D  12      -11
+	local pix2coord =3D 1 / 44
+	local x =3D -1 + ( iCenterY +iCenterX)*pix2coord -- iCenterX<0=3Dright iC=
enterY<0=3Ddown
+	local y =3D  1 + (-iCenterY +iCenterX)*pix2coord
+	local z =3D  0  -- x-1,y+1 : sprites are too high normally, this moves th=
em down =

+	local w =3D k2D_ScaleW05 * iWidth
+	local h =3D k2D_ScaleH   * iHeight
+	gfx:SetMaterial(sMatName)
+	gfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
+	gfx:RenderableVertex(x-w,y-w,z  , u1,v1)
+	gfx:RenderableVertex(x+w,y+w,z  , u0,v1)
+	gfx:RenderableVertex(x-w,y-w,z+h, u1,v0)
+	gfx:RenderableVertex(x+w,y+w,z+h, u0,v0)
+	gfx:RenderableIndex3(0,2,1)
+	gfx:RenderableIndex3(1,2,3)
+	gfx:RenderableEnd()
+end
 =

 function Renderer2D:MobileTestStep()
-	if (not g2DMobileTestGfx) then
-		-- TODO : sort by z for blendout upper floors
+	if (not gMobile2DTestGfx) then
 		local iModelID,iAnimID =3D 400,0
+		local iHue =3D 0,0
+
+		local gfx =3D CreateRootGfx3D()
+		gfx:SetSimpleRenderable()
+		gMobile2DTestGfx =3D gfx
+		=

 		local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

-		local iFrame,iHue =3D 0,0
 		local animinfo =3D GetAnimDataInfo(iRealID) -- o.miFrames,o.miUnknown,o.=
miCount,o.miFrameInterval,o.miFrameStart
-		local pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFram=
eToImage(iRealID,iFrame,iHue)
-		local tex =3D pImage:MakeTexture()
-		local matname =3D GetPlainTextureMat(tex,true)
-		--~ local matname =3D "BaseWhiteNoLighting"
+		gMobile2DTestGfx.animinfo =3D animinfo
+		gMobile2DTestGfx.iAnimStartTime =3D Client_GetTicks()
+		gMobile2DTestGfx.iFrame =3D 0
+		=

+		local o =3D animinfo =

+		print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,o.mi=
FrameStart)
+		--animinfo        table: 0x93e5d90        -1      -1      -1      -1
+		for k,v in pairs(o.miFrames) do print("frame",k,v) end
 =

-		local sq2 =3D math.sqrt(2)
-		local scaleh =3D sq2 / 44
-		local scalew05 =3D 0.5 / 44 -- 0.5 : applied left and right, =

-		=

-		local spritecount =3D 1
-		local gfx =3D CreateRootGfx3D()
-		g2DMobileTestGfx =3D gfx
-		gfx:SetSimpleRenderable()
-		gfx:SetMaterial(matname)
-		=

-		-- generate geometry
-		local vc =3D 4*spritecount
-		local ic =3D 6*spritecount
-		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-		--~ local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zl=
oc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-		local x,y,z =3D -0,0,0*0.1 -- static : {zloc=3D?,artid=3D?,hue=3D?,xloc=
=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-		local u0,v0 =3D 0,0
-		local u1,v1 =3D 1,1
-		x =3D x - 1  -- ox-1,oy+1 : sprites are too high normally, this moves th=
em down =

-		y =3D y + 1
-		z =3D z =

-		local w =3D scalew05 * iWidth
-		local h =3D scaleh   * iHeight
-		gfx:RenderableVertex(x-w,y-w,z  , u1,v1)
-		gfx:RenderableVertex(x+w,y+w,z  , u0,v1)
-		gfx:RenderableVertex(x-w,y-w,z+h, u1,v0)
-		gfx:RenderableVertex(x+w,y+w,z+h, u0,v0)
-		gfx:RenderableIndex3(0,2,1)
-		gfx:RenderableIndex3(1,2,3)
-		gfx:RenderableEnd()
+		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gMobile2DTestGfx.iFram=
e,iHue)
 	end
 	=

 	local xloc,yloc =3D self:GetCamPos()
 	local x,y,z =3D self:UOPosToLocal(xloc,yloc,4)
-	g2DMobileTestGfx:SetPosition(x,y,z)
+	gMobile2DTestGfx:SetPosition(x,y,z)
+	=

+	local t =3D Client_GetTicks() - gMobile2DTestGfx.iAnimStartTime
 end
 =


Modified: trunk/lua/lib.granny.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.granny.lua (original)
+++ trunk/lua/lib.granny.lua Sat May 17 02:23:39 2008
@@ -210,9 +210,11 @@
 	local matname =3D gGrannyMaterialCache[texname.."_"..hue]
 	if (not matname) then
 		local texmaskname =3D GetGrannyTextureMaskName(texname)
-		local texturepath =3D texname --CorrectGrannyPath("Maps/"..texname)
-		local texturemaskpath =3D CorrectGrannyPath("Maps/"..texmaskname)
+		local texturepath =3D basename(CorrectGrannyPath("Maps/"..texname))
+		local texturemaskpath =3D basename(CorrectGrannyPath("Maps/"..texmasknam=
e))
 		-- texturepath will usually be an absolute path such as "/cavern/uostuff=
/uo/Models/Maps/UT256_Armor_Ring_V2.tga"
+		-- after basename it is reduced to the filename only, for ogre1.4.8 chan=
ges (not allowing absolute paths anymore)
+		-- for that a ressource location to the uo dir was added in
 =

 		local modelinfo =3D GetGrannyModelInfo(modelid)
 		if (modelinfo) then

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat May 17 02:23:39 2008
@@ -213,7 +213,7 @@
 	OgreAddResLoc(mydatapath.."customchars/models"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."customchars/textures"		,"FileSystem","General")
 	=

-	OgreAddResLoc(gUOPath.."Models/Maps"		,"FileSystem","General")
+	OgreAddResLoc(gUOPath..CorrectPath("Models/Maps")				,"FileSystem","Gener=
al")
 =

 	--~ OgreAddResLoc(kObjTypePreviewDir.."."			,"FileSystem","General")
 	OgreInitResLocs()



From no-reply at zwischenwelt.org  Sat May 17 04:30:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 17 May 2008 02:30:20 -0000
Subject: [Iris-commit] [IRIS] r2191 - /trunk/lua/lib.2d.mobile.lua
Message-ID: <20080517023021.086951524037@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 17 04:30:19 2008
New Revision: 2191

Log:
2d mobile anim experiments

Modified:
    trunk/lua/lib.2d.mobile.lua

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sat May 17 04:30:19 2008
@@ -12,6 +12,8 @@
 =

 gMobile2DTestGfx =3D nil
 =

+-- todo : humans : one atlas with complete equipment, will need alpha-blit=
 for images ?
+-- todo : mobile : load anim only on demand, e.g. only load walk anim when=
 the mobile actually walks
 -- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
 function Anim2DAtlas_Load (iModelID,iAnimID,iFrame,iHue)
 	local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

@@ -22,15 +24,18 @@
 	return sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
 end
 =

+-- TODO : bMirrorX !
 function Renderer2D:MobileGfxUpdateGeometry (gfx,iModelID,iAnimID,iFrame,i=
Hue)
 	local sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1 =3D A=
nim2DAtlas_Load(iModelID,iAnimID,iFrame,iHue)
+	--~ print("MobileGfxUpdateGeometry",iAnimID,iFrame,iWidth,iHeight,iCenter=
X,iCenterY,iFrames)
 	-- MobileGfxUpdateGeometry : cen=3D  12      -11
-	local pix2coord =3D 1 / 44
+	local zoom =3D 1
+	local pix2coord =3D zoom * 1 / 44
 	local x =3D -1 + ( iCenterY +iCenterX)*pix2coord -- iCenterX<0=3Dright iC=
enterY<0=3Ddown
 	local y =3D  1 + (-iCenterY +iCenterX)*pix2coord
 	local z =3D  0  -- x-1,y+1 : sprites are too high normally, this moves th=
em down =

-	local w =3D k2D_ScaleW05 * iWidth
-	local h =3D k2D_ScaleH   * iHeight
+	local w =3D k2D_ScaleW05 * iWidth * zoom
+	local h =3D k2D_ScaleH   * iHeight * zoom
 	gfx:SetMaterial(sMatName)
 	gfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
 	gfx:RenderableVertex(x-w,y-w,z  , u1,v1)
@@ -40,19 +45,59 @@
 	gfx:RenderableIndex3(0,2,1)
 	gfx:RenderableIndex3(1,2,3)
 	gfx:RenderableEnd()
+	gfx.iMaxFrames =3D iFrames
 end
 =

 function Renderer2D:MobileTestStep()
+	-- iAnimID : 0-4=3Dwalk down,down-left,left,up-left,up
+	=

+	-- iAnimID : 5-9=3Dwalk down (something in hand)
+	-- iAnimID : 10-14=3Drun
+	-- iAnimID : 15-19=3Drun (something in hand?)
+	-- iAnimID : 20-24 idle (1 frame) =

+	-- iAnimID : 25-29 idle anim? look from left to right
+	-- iAnimID : 30-24 idle anim? spread arms
+	-- iAnimID : 35- combat idle
+	-- iAnimID : 40- combat idle 2hand ?
+	-- iAnimID : 45- punch/bash anim
+	-- iAnimID : 50- stab anim
+	-- iAnimID : 55- punch/bash2 anim
+	-- iAnimID : 60- punch/bash 2-handed
+	-- iAnimID : 65- swing 2-handed
+	-- iAnimID : 70- stab 2-handed ?
+	-- iAnimID : 75- combat-walk-2-handed
+	-- iAnimID : 80- cast1
+	-- iAnimID : 85- cast2
+	-- iAnimID : 90- fire-bow/crossbow?
+	-- iAnimID : 95- fire-bow/crossbow?
+	-- iAnimID : 100- gethit/flinch/pain
+	-- iAnimID : 105- die backwards
+	-- iAnimID : 110- die forwards
+	-- iAnimID : 115- mount-walk-horse
+	-- iAnimID : 120- mount-walk-ostard
+	-- iAnimID : 125- mount-idle-ostard
+	-- iAnimID : 130- mount-attack-swing?-ostard
+	-- iAnimID : 135- mount-attack-bow-ostard
+	-- iAnimID : 140- mount-attack-crossbow-ostard
+	-- iAnimID : 145- mount-attack-bash?-ostard
+	-- iAnimID : 150- attack-stab?
+	-- iAnimID : 155- attack-punch?
+	-- iAnimID : 160- bow
+	-- iAnimID : 165- salute
+	-- iAnimID : 170- cough
+	=

+	local iModelID,iAnimID =3D 401,0
+	local iHue =3D 0x03F4 -- human skin hue (0x83F4=3D33780, but 0x8* is part=
ial hue and turned out all gray here)
+	--~ local iHue =3D 0
+	=

+	=

 	if (not gMobile2DTestGfx) then
-		local iModelID,iAnimID =3D 400,0
-		local iHue =3D 0,0
-
 		local gfx =3D CreateRootGfx3D()
 		gfx:SetSimpleRenderable()
 		gMobile2DTestGfx =3D gfx
 		=

 		local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

-		local animinfo =3D GetAnimDataInfo(iRealID) -- o.miFrames,o.miUnknown,o.=
miCount,o.miFrameInterval,o.miFrameStart
+		local animinfo =3D GetAnimDataInfo(iModelID) -- o.miFrames,o.miUnknown,o=
.miCount,o.miFrameInterval,o.miFrameStart
 		gMobile2DTestGfx.animinfo =3D animinfo
 		gMobile2DTestGfx.iAnimStartTime =3D Client_GetTicks()
 		gMobile2DTestGfx.iFrame =3D 0
@@ -60,15 +105,24 @@
 		local o =3D animinfo =

 		print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,o.mi=
FrameStart)
 		--animinfo        table: 0x93e5d90        -1      -1      -1      -1
-		for k,v in pairs(o.miFrames) do print("frame",k,v) end
+		for k,v in pairs(o.miFrames) do print("frame",k,v) end -- were all -1 =

 =

 		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gMobile2DTestGfx.iFram=
e,iHue)
+		print("gfx.iMaxFrames",gfx.iMaxFrames)
 	end
 	=

+	local gfx =3D gMobile2DTestGfx
 	local xloc,yloc =3D self:GetCamPos()
 	local x,y,z =3D self:UOPosToLocal(xloc,yloc,4)
-	gMobile2DTestGfx:SetPosition(x,y,z)
+	gfx:SetPosition(x,y,z)
 	=

-	local t =3D Client_GetTicks() - gMobile2DTestGfx.iAnimStartTime
+	local t =3D Client_GetTicks() - gfx.iAnimStartTime
+	local framedt =3D 200
+	local framecount =3D gfx.iMaxFrames
+	local iFrameNum =3D math.mod(math.floor(t/framedt),framecount)
+	if (gfx.iFrame ~=3D iFrameNum) then
+		gfx.iFrame  =3D iFrameNum
+		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
+	end
 end
 =




From no-reply at zwischenwelt.org  Sat May 17 20:33:18 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 17 May 2008 18:33:18 -0000
Subject: [Iris-commit] [IRIS] r2192 - in /trunk: bin/OgreMain.dll
 bin/Plugin_CgProgramManager.dll bin/Plugin_ParticleFX.dll
 bin/RenderSystem_Direct3D9.dll bin/RenderSystem_GL.dll bin/cg.dll
 bin/iris2.exe lua/lib.3d.renderer.lua vc8/iris.vcproj
Message-ID: <20080517183318.2B1931524037@zwischenwelt.org>

Author: sience
Date: Sat May 17 20:33:17 2008
New Revision: 2192

Log:
-update to Ogre 1.48

Modified:
    trunk/bin/OgreMain.dll
    trunk/bin/Plugin_CgProgramManager.dll
    trunk/bin/Plugin_ParticleFX.dll
    trunk/bin/RenderSystem_Direct3D9.dll
    trunk/bin/RenderSystem_GL.dll
    trunk/bin/cg.dll
    trunk/bin/iris2.exe
    trunk/lua/lib.3d.renderer.lua
    trunk/vc8/iris.vcproj

Modified: trunk/bin/OgreMain.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_CgProgramManager.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_ParticleFX.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_Direct3D9.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_GL.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/cg.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sat May 17 20:33:17 2008
@@ -176,7 +176,7 @@
 --mLiSPSMSetup =3D new LiSPSMShadowCameraSetup()
 --m_pSceneMgr->setShadowCameraSetup(ShadowCameraSetupPtr(mLiSPSMSetup))
 	elseif ((gShadowTechnique =3D=3D "texture_additive_integrated") or (gShad=
owTechnique =3D=3D "texture_modulative_integrated")) then
-		OgreSetShadowTextureCount(4)				-- first mention the count (one texture =
for one lightsource)
+		OgreSetShadowTextureCount(6)				-- first mention the count (one texture =
for one lightsource)
 		OgreSetShadowTextureSize(512)				-- then the texsize
 		OgreSetShadowFarDistance(shadowfardist)
 		OgreSetShadowTextureFadeStart(0.6)
@@ -185,7 +185,7 @@
 		OgreSetShadowCasterRenderBackFaces(false)
 		OgreSetShadowTextureSelfShadow(true)
 		OgreSetShadowTextureCasterMaterial("DepthShadowmap/Caster/Float")
-		--OgreSetShadowTextureCasterMaterial("Ogre/DepthShadowmap/Caster/Float")
+		OgreSetShadowTextureReceiverMaterial("tex_base")
  		OgreShadowTechnique(gShadowTechnique)		-- last, the technique
 	end
 end

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Sat May 17 20:33:17 2008
@@ -1074,6 +1074,14 @@
 					Name=3D"src"
 					>
 					<File
+						RelativePath=3D"..\lugre\lib\caelum\src\Astronomy.cpp"
+						>
+					</File>
+					<File
+						RelativePath=3D"..\lugre\lib\caelum\src\CaelumPrecompiled.cpp"
+						>
+					</File>
+					<File
 						RelativePath=3D"..\lugre\lib\caelum\src\CaelumSystem.cpp"
 						>
 					</File>
@@ -1082,10 +1090,6 @@
 						>
 					</File>
 					<File
-						RelativePath=3D"..\lugre\lib\caelum\src\EarthSunPositionModel.cpp"
-						>
-					</File>
-					<File
 						RelativePath=3D"..\lugre\lib\caelum\src\GeometryFactory.cpp"
 						>
 					</File>
@@ -1102,7 +1106,7 @@
 						>
 					</File>
 					<File
-						RelativePath=3D"..\lugre\lib\caelum\src\SimpleSunPositionModel.cpp"
+						RelativePath=3D"..\lugre\lib\caelum\src\Moon.cpp"
 						>
 					</File>
 					<File
@@ -1111,6 +1115,14 @@
 					</File>
 					<File
 						RelativePath=3D"..\lugre\lib\caelum\src\SkyDome.cpp"
+						>
+					</File>
+					<File
+						RelativePath=3D"..\lugre\lib\caelum\src\SkyLight.cpp"
+						>
+					</File>
+					<File
+						RelativePath=3D"..\lugre\lib\caelum\src\SolarSystemModel.cpp"
 						>
 					</File>
 					<File
@@ -1130,6 +1142,10 @@
 					Name=3D"include"
 					>
 					<File
+						RelativePath=3D"..\lugre\lib\caelum\include\Astronomy.h"
+						>
+					</File>
+					<File
 						RelativePath=3D"..\lugre\lib\caelum\include\Caelum.h"
 						>
 					</File>
@@ -1138,10 +1154,6 @@
 						>
 					</File>
 					<File
-						RelativePath=3D"..\lugre\lib\caelum\include\CaelumListener.h"
-						>
-					</File>
-					<File
 						RelativePath=3D"..\lugre\lib\caelum\include\CaelumPrecompiled.h"
 						>
 					</File>
@@ -1158,10 +1170,6 @@
 						>
 					</File>
 					<File
-						RelativePath=3D"..\lugre\lib\caelum\include\EarthSunPositionModel.h"
-						>
-					</File>
-					<File
 						RelativePath=3D"..\lugre\lib\caelum\include\GeometryFactory.h"
 						>
 					</File>
@@ -1178,7 +1186,7 @@
 						>
 					</File>
 					<File
-						RelativePath=3D"..\lugre\lib\caelum\include\SimpleSunPositionModel.h"
+						RelativePath=3D"..\lugre\lib\caelum\include\Moon.h"
 						>
 					</File>
 					<File
@@ -1190,15 +1198,19 @@
 						>
 					</File>
 					<File
+						RelativePath=3D"..\lugre\lib\caelum\include\SkyLight.h"
+						>
+					</File>
+					<File
+						RelativePath=3D"..\lugre\lib\caelum\include\SolarSystemModel.h"
+						>
+					</File>
+					<File
 						RelativePath=3D"..\lugre\lib\caelum\include\Starfield.h"
 						>
 					</File>
 					<File
 						RelativePath=3D"..\lugre\lib\caelum\include\Sun.h"
-						>
-					</File>
-					<File
-						RelativePath=3D"..\lugre\lib\caelum\include\SunPositionModel.h"
 						>
 					</File>
 					<File



From no-reply at zwischenwelt.org  Sat May 17 23:57:54 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 17 May 2008 21:57:54 -0000
Subject: [Iris-commit] [IRIS] r2193 - in /trunk: bin/plugins_linux.cfg
 lua/lib.macrolist.lua lua/net/net.other.lua
Message-ID: <20080517215755.4F4C11524037@zwischenwelt.org>

Author: hagish
Date: Sat May 17 23:57:51 2008
New Revision: 2193

Log:
space-attacking does not walk to target

Modified:
    trunk/bin/plugins_linux.cfg
    trunk/lua/lib.macrolist.lua
    trunk/lua/net/net.other.lua

Modified: trunk/bin/plugins_linux.cfg
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/bin/plugins_linux.cfg (original)
+++ trunk/bin/plugins_linux.cfg Sat May 17 23:57:51 2008
@@ -16,4 +16,4 @@
 Plugin=3DPlugin_ParticleFX.so 	=

 Plugin=3DPlugin_BSPSceneManager.so 	=

 Plugin=3DPlugin_OctreeSceneManager.so 	=

-#~ Plugin=3DPlugin_CgProgramManager.so =

+Plugin=3DPlugin_CgProgramManager.so =


Modified: trunk/lua/lib.macrolist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.macrolist.lua (original)
+++ trunk/lua/lib.macrolist.lua Sat May 17 23:57:51 2008
@@ -402,10 +402,14 @@
 				local dx,dy,dz =3D Vector.sub(px,py,pz, tx,ty,tz)
 				dx,dy,dz =3D Vector.normalise_to_len(dx,dy,dz, 1)
 				gCurrentRenderer:SetViewDir(dx,dy)
+				=

+				--[[
+				autowalk is not good here, because of distance attacks
 				dx,dy,dz =3D Vector.add(tx,ty,tz, dx,dy,dz)
 				dx =3D round(dx)
 				dy =3D round(dy)
 				SetAutoWalkTo(dx,dy)
+				]]
 				=

 				if (gActWarmode =3D=3D gWarmode_Combat) then
 					if not reqsend then

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Sat May 17 23:57:51 2008
@@ -537,17 +537,22 @@
 end
 =

 -- TODO : question : ghoulsblade : is this only for combat ? sience: don't=
 know -> verify
+-- currently we use this for the warmode target system
 -- Target current Mobile
 function gPacketHandler.kPacket_Current_Target()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local mobile_serial =3D input:PopNetUint32()
 	=

-	printf("NET: (todo): Current_Target: mobile_serial: 0x%08x\n",id,mobile_s=
erial)
+	--printf("NET: (todo): Current_Target: mobile_serial: 0x%08x\n",id,mobile=
_serial)
 =

 	if (mobile_serial =3D=3D 0) then
 		printf("NET: attack refused\n")
-	end
+		gCurrentRenderer:DeselectMobile()
+	else
+		gCurrentRenderer:SelectMobile(mobile_serial)
+	end
+	=

 end
 =

 -- 0x76 not important, ignored by palanthir



From no-reply at zwischenwelt.org  Mon May 19 13:06:06 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 19 May 2008 11:06:06 -0000
Subject: [Iris-commit] [IRIS] r2194 - in /trunk/scripts: ./ hooks.txt
	showhooks.sh
Message-ID: <20080519110606.A59B81524037@zwischenwelt.org>

Author: hagish
Date: Mon May 19 13:06:00 2008
New Revision: 2194

Log:
simple script to extract hooks

Added:
    trunk/scripts/
    trunk/scripts/hooks.txt
    trunk/scripts/showhooks.sh   (with props)



From no-reply at zwischenwelt.org  Tue May 20 08:19:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 20 May 2008 06:19:47 -0000
Subject: [Iris-commit] [IRIS] r2195 - in /trunk/lua: lib.3d.renderer.lua
	net/net.other.lua
Message-ID: <20080520061948.0F9AF1524037@zwischenwelt.org>

Author: sience
Date: Tue May 20 08:19:47 2008
New Revision: 2195

Log:
-some comments from cougar added
-shadowmap count decreased

Modified:
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/net/net.other.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Tue May 20 08:19:47 2008
@@ -176,7 +176,7 @@
 --mLiSPSMSetup =3D new LiSPSMShadowCameraSetup()
 --m_pSceneMgr->setShadowCameraSetup(ShadowCameraSetupPtr(mLiSPSMSetup))
 	elseif ((gShadowTechnique =3D=3D "texture_additive_integrated") or (gShad=
owTechnique =3D=3D "texture_modulative_integrated")) then
-		OgreSetShadowTextureCount(6)				-- first mention the count (one texture =
for one lightsource)
+		OgreSetShadowTextureCount(4)				-- first mention the count (one texture =
for one lightsource)
 		OgreSetShadowTextureSize(512)				-- then the texsize
 		OgreSetShadowFarDistance(shadowfardist)
 		OgreSetShadowTextureFadeStart(0.6)

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Tue May 20 08:19:47 2008
@@ -539,6 +539,8 @@
 -- TODO : question : ghoulsblade : is this only for combat ? sience: don't=
 know -> verify
 -- currently we use this for the warmode target system
 -- Target current Mobile
+-- Cougar (tigah): denke die nutzen das current target noch f=C3=BCr die b=
andage current target
+-- und attack current target und use selected target makros
 function gPacketHandler.kPacket_Current_Target()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()



From no-reply at zwischenwelt.org  Wed May 21 13:59:24 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 21 May 2008 11:59:24 -0000
Subject: [Iris-commit] [IRIS] r2196 - /trunk/doc/cpp.doxygen
Message-ID: <20080521115925.0E56D1524037@zwischenwelt.org>

Author: hagish
Date: Wed May 21 13:59:24 2008
New Revision: 2196

Log:
online update

Modified:
    trunk/doc/cpp.doxygen

Modified: trunk/doc/cpp.doxygen
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/doc/cpp.doxygen (original)
+++ trunk/doc/cpp.doxygen Wed May 21 13:59:24 2008
@@ -450,7 +450,7 @@
 # directories like "/usr/src/myproject". Separate the files or directories =

 # with spaces.
 =

-INPUT                  =3D ../src ../include ../lugre/src ../lugre/include
+INPUT                  =3D ../src ../include ../lugre/src ../lugre/include=
 ../lugre/lib
 =

 # If the value of the INPUT tag contains directories, you can use the =

 # FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp =




From no-reply at zwischenwelt.org  Mon May 26 18:49:06 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 26 May 2008 16:49:06 -0000
Subject: [Iris-commit] [IRIS] r2197 - in /trunk: data/desktop/ lua/ lua/gui/
	lua/obj/
Message-ID: <20080526164906.A6F241524037@zwischenwelt.org>

Author: hagish
Date: Mon May 26 18:49:05 2008
New Revision: 2197

Log:
first hud session save support: quick cast (spell,skill), container and hea=
lthbars save positions and status

Added:
    trunk/data/desktop/
    trunk/lua/lib.desktop.lua
Modified:
    trunk/lua/gui/gui.healthbar.lua
    trunk/lua/gui/gui.helper.lua
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/gui/gui.skill.lua
    trunk/lua/gui/gui.spellbook.lua
    trunk/lua/lib.macrolist.lua
    trunk/lua/lib.mainmenu.lua
    trunk/lua/main.lua
    trunk/lua/net.walk.lua
    trunk/lua/obj/obj.container.lua

Modified: trunk/lua/gui/gui.healthbar.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.healthbar.lua (original)
+++ trunk/lua/gui/gui.healthbar.lua Mon May 26 18:49:05 2008
@@ -148,6 +148,7 @@
 function RemoveAllHealthbars ()
 	-- close all open stats windows
 	for k,dialog in pairs(gHealthbarDialogs) do
+		NotifyListener("Hook_CloseHealthbar",dialog, k)	-- k=3Dserial
 		dialog:Destroy()
 		gHealthbarDialogs[k] =3D nil
 	end
@@ -157,6 +158,7 @@
 function CloseHealthbar (mobile) =

 	local dialog =3D gHealthbarDialogs[mobile.serial]
 	if (not dialog) then return end
+	NotifyListener("Hook_CloseHealthbar",dialog, mobile.serial)
 	dialog:Destroy()
 	gHealthbarDialogs[mobile.serial] =3D nil
 end
@@ -168,6 +170,7 @@
 	-- -50,-30 to place the dialog beneath the mouse
 	OpenHealthbar(mobile,iMouseX - 50,iMouseY - 30)
 end
+
 =

 --[[
 =

@@ -193,7 +196,21 @@
 -- Open Healthbar Gump
 function OpenHealthbar (mobile,x,y)
 	if mobile =3D=3D nil then return end
-	if (gHealthbarDialogs[mobile.serial]) then return end -- already open =

+	=

+	-- try to read position from desktop infos
+	if x =3D=3D nil or y =3D=3D nil then
+		x,y =3D GetDesktopElementPosition("healthbar",mobile.serial)
+		if x =3D=3D nil or y =3D=3D nil then x =3D 0 y =3D 0 end
+	end
+	=

+	if (gHealthbarDialogs[mobile.serial]) then =

+		-- only update position
+		local d =3D gHealthbarDialogs[mobile.serial]
+		if d and d.rootwidget and d.rootwidget.gfx then
+			d.rootwidget.gfx:SetPos(x, y)
+		end
+		return
+	end -- already open =

 	=

 	local dialog =3D GumpParser( IsPlayerMobile(mobile) and healthbarGump or =
npchealthGump, true )
 =

@@ -210,7 +227,8 @@
 		if IsTargetModeActive() then =

 			CompleteTargetModeWithTargetMobile(mobile) =

 		else =

-			gui.StartMoveDialog(dialog.rootwidget) =

+			-- not needed because it get called already
+			-- gui.StartMoveDialog(dialog.rootwidget) =

 		end =

 	end
 	dialog.on_mouse_right_down =3D function ()
@@ -244,6 +262,8 @@
 	=

 	-- if this was the player status bar, also show warmode
 	if IsPlayerMobile(mobile) then SetWarmode(gActWarmode) end	=

+	=

+	NotifyListener("Hook_OpenHealthbar",dialog, mobile.serial)
 end
 =

 -- create player Healthbar dialog and stuff like this
@@ -251,6 +271,6 @@
 	-- create player Healthbar
 	if GetPlayerMobile() then
 		printdebug("gump","########## UpdatePlayerBodySerial (serial) was called=
 -> Open Healthbar")
-		OpenHealthbar(GetPlayerMobile(),0,0) =

-	end
-end
+		OpenHealthbar(GetPlayerMobile()) =

+	end
+end

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Mon May 26 18:49:05 2008
@@ -48,6 +48,7 @@
 =

 -- function is called by Lugre (lib.chatline.lua) from ChatLine_RepeatLast=
 and ChatLine_Init
 function SendChat (curtext) =

+	CharLine_SetLast(curtext)
 	if string.sub(curtext, 1, 4) =3D=3D "/lua" then
 		local cmd =3D string.sub(curtext, 5)
 		-- interpret this a lua command

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Mon May 26 18:49:05 2008
@@ -275,6 +275,7 @@
 -- close dialog and destroys all widgets
 local function ClosePaperdoll (paperdoll)
 	if (paperdoll and paperdoll.dialog) then =

+		NotifyListener("Hook_ClosePaperdoll",paperdoll)
 		DestroyPaperdollItemWidgets(paperdoll)
 		paperdoll.dialog:Destroy()
 		paperdoll.dialog =3D nil
@@ -374,6 +375,8 @@
 		mobile.name =3D paperdoll.name =

 		mobile:Update()
 	end
+	=

+	NotifyListener("Hook_RebuildPaperdoll",paperdoll)
 end
 =

 -- triggered by mobile destruction
@@ -420,6 +423,28 @@
 	end
 end
 =

+-- open/reposition the requested paperdoll
+function OpenPaperdoll(x,y,serial)
+	local p =3D gPaperdolls[serial]
+			=

+	if p then
+		RebuildPaperdoll(p)
+	else
+		local paperdoll =3D {}
+		local m =3D GetMobile(serial)
+		paperdoll.serial	=3D serial
+		paperdoll.name		=3D m and m.name or serial
+		paperdoll.flag		=3D 0
+		=

+		HandleOpenPaperdoll(paperdoll)
+	end
+	=

+	local p =3D gPaperdolls[serial]
+	if p.dialog and p.dialog.rootwidget and p.dialog.rootwidget.gfx then
+		p.dialog.rootwidget.gfx:SetPos(x, y)
+	end
+end
+
 -- called from kPacket_Open_Paperdoll
 function HandleOpenPaperdoll	(paperdoll)
 	paperdoll.mobileserial	=3D paperdoll.serial

Modified: trunk/lua/gui/gui.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.skill.lua (original)
+++ trunk/lua/gui/gui.skill.lua Mon May 26 18:49:05 2008
@@ -105,7 +105,8 @@
 	=

 	-- overrride dialog close function from gumpparser
 	dialog.Close =3D function (dialog)
-		table.foreach (table, function (k,v) if v =3D=3D dialog then table.remov=
e(glQuickCastDialog,k) end end)
+		NotifyListener("Hook_CloseQuickCastButton",dialog)
+		glQuickCastDialog[dialog] =3D nil
 		dialog:Destroy()
 	end
 	-- overwrite the onMouseDown function from gumpparser
@@ -128,6 +129,25 @@
 	button.onLeftClick =3D function (widget) fun() end
 =

 	table.insert(glQuickCastDialog,dialog)
+	=

+	return dialog
+end
+
+function CreateQuickCastButtonSkill(x,y,skillid)
+	for k,v in pairs(glQuickCastDialog) do
+		if v and v.skillid and v.skillid =3D=3D skillid then
+			v.rootwidget.gfx:SetPos(x,y)
+			return
+		end
+	end
+
+	local d =3D CreateQuickCastButton(x,y,glSkillNames[skillid],function () =

+		-- quick cast function
+		Send_Request_SkillUse(skillid)
+	end)
+	d.skillid =3D skillid
+	NotifyListener("Hook_CreateQuickCastSkill",d,x,y,skillid)
+	return d
 end
 =

 gSkillDialog_LastPositionX =3D nil
@@ -336,10 +356,8 @@
 						-- reset button to source and create quick use/cast button
 						-- current position
 						local x,y =3D GetMousePos()
-						CreateQuickCastButton(x,y,glSkillNames[skill.skillid],function () =

-							-- quick cast function
-							Send_Request_SkillUse(skill.skillid)
-						end)
+						CreateQuickCastButtonSkill(x,y,skill.skillid)
+						=

 						skill.button_use_drag.gfx:SetPos(skill.button_use_drag.mStartX,skill=
.button_use_drag.mStartY)
 					end
 				end

Modified: trunk/lua/gui/gui.spellbook.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.spellbook.lua (original)
+++ trunk/lua/gui/gui.spellbook.lua Mon May 26 18:49:05 2008
@@ -1,4 +1,40 @@
 gAvailSpellbooks =3D {}
+
+function GetSpellname(spellid)
+	for kbook,vbook in pairs(gSpellBooks) do
+		-- number of spells per circle
+		local spellnumber =3D countarr(vbook.spells[1])
+		=

+		for kcircle,vcircle in pairs(vbook.spells) do
+			for kspell,vspell in pairs(vcircle) do
+				local id =3D vbook.startindex + kspell + (kcircle - 1) * spellnumber
+				if id =3D=3D spellid then
+					return vspell
+				end
+			end
+		end
+	end
+end
+
+function CreateQuickCastButtonSpell(x,y,spellid)
+	for k,v in pairs(glQuickCastDialog) do
+		if v and v.spellid and v.spellid =3D=3D spellid then
+			v.rootwidget.gfx:SetPos(x,y)
+			return
+		end
+	end
+							=

+	local spellname =3D GetSpellname(spellid)
+	local d =3D CreateQuickCastButton(x,y,spellname,function () =

+		-- quick cast function
+		-- print("CAST SPELL",spellname)
+		Send_Spell(spellid,gSpellbookExpansion["AOS"])
+	end)
+
+	d.spellid =3D spellid
+	NotifyListener("Hook_CreateQuickCastSpell",d,x,y,spellid)
+	return d
+end
 =

 function Open_Spellbook(spellbook)
 	local dialog =3D gAvailSpellbooks[spellbook.serial]
@@ -173,11 +209,7 @@
 							-- reset button to source and create quick use/cast button
 							-- current position
 							local x,y =3D GetMousePos()
-							CreateQuickCastButton(x,y,spellname,function () =

-								-- quick cast function
-								-- print("CAST SPELL",spellname)
-								Send_Spell(spellbutton.spell+gSpellBooks[spellbook.itemid].startin=
dex,gSpellbookExpansion["AOS"])
-							end)
+							CreateQuickCastButtonSpell(x,y,spellbutton.spell+gSpellBooks[spellb=
ook.itemid].startindex)
 							spellbutton.gfx:SetPos(spellbutton.mStartX,spellbutton.mStartY)
 						end
 						=


Modified: trunk/lua/lib.macrolist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.macrolist.lua (original)
+++ trunk/lua/lib.macrolist.lua Mon May 26 18:49:05 2008
@@ -35,7 +35,7 @@
 function MacroRead_PlayerStat			(statname) return MacroReadAux_MobileStat(=
GetPlayerMobile(),statname,"MacroRead_PlayerStat") end
 function MacroRead_TargetStat			(statname) return MacroReadAux_MobileStat(=
GetMobile(giSelectedMobile),statname,"MacroRead_TargetStat") end
 =

-function MacroCmd_Say					(text)	if (gInGameStarted) then Send_UnicodeSpee=
ch(text) end end
+function MacroCmd_Say					(text)	if (gInGameStarted) then SendChat(text) e=
nd end
 function MacroCmd_NextCamMode			()		gCurrentRenderer:ChangeCamMode() end
 function MacroCmd_Quit					()		Terminate() end
 function MacroCmd_RepeatLastChat		()		if (gInGameStarted) then ChatLine_Re=
peatLast() end end
@@ -497,6 +497,8 @@
 end
 =

 function MacroDropAllIntoContainer(itemnamepart, container_serial, x,y)
+	MacroEnsureContainerIsOpen(container_serial)
+	=

 	x =3D x or 50
 	y =3D y or 50
 	local item =3D MacroGetItemFromBackpackByName(itemnamepart)
@@ -511,10 +513,10 @@
 end
 =

 function MacroEnsureContainerIsOpen	(container_serial)
-	if not GetContainer(container_serial) then
+	if not IsContainerAlreadyOpen(container_serial) then
 		Send_DoubleClick(container_serial)
 	end
-	while not GetContainer(container_serial) do
+	while not IsContainerAlreadyOpen(container_serial) do
 		job.wait(100)
 	end
 end

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Mon May 26 18:49:05 2008
@@ -227,7 +227,7 @@
 	for k,v in pairs(serverlist.servers) do
 		local label =3D sprintf("Choose server [%d]%s full=3D%d tz=3D%d ip=3D%s"=
,v.index,v.name,v.full,v.tz,NtoA(v.ip))
 		table.insert(rows,{
-			{type=3D"Button",onLeftClick=3DMySelectServerWidgetFunc,server=3Dv,text=
=3Dlabel}
+			{type=3D"Button",onLeftClick=3Dfunction(widget) MySelectServerWidgetFun=
c(widget) gSelectedShardName =3D v.name end,server=3Dv,text=3Dlabel}
 		})
 		-- TODO : server.ip unused ? might not be needed when server sends redir=
ect packet
 	end
@@ -270,7 +270,7 @@
 	for k,v in pairs(charlist.chars) do if (v.name ~=3D "") then
 		gNextFreeCharSlot =3D gNextFreeCharSlot + 1
 		table.insert(rows,{
-			{type=3D"Button",onLeftClick=3DMySelectChar,iCharNum=3Dk,text=3D"Login =
as "..v.name}
+			{type=3D"Button",onLeftClick=3Dfunction(widget) MySelectChar(widget) gS=
electedCharName =3D v.name end ,iCharNum=3Dk,text=3D"Login as "..v.name}
 		})
 	end end
 	-- char creation (TODO)
@@ -324,6 +324,7 @@
 		if name and gShardList[name] and =

 			gShardList[name].gLoginname and gShardList[name].gPassword then
 				local shard =3D gShardList[name]
+				gSelectedShardName =3D name
 				MainMenuConnectToShard(shard,name,shard.gLoginname,shard.gPassword)
 				return
 		end

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Mon May 26 18:49:05 2008
@@ -80,6 +80,7 @@
 dofile(libpath .. "lib.pathfind.lua")
 dofile(libpath .. "lib.plugin.lua")
 dofile(libpath .. "lib.uoutils.lua")
+dofile(libpath .. "lib.desktop.lua")
 dofile(libpath .. "lib.uoanim.lua")
 =

 dofile(libpath .. "gui/gui.main.lua")
@@ -365,7 +366,7 @@
 	print("Welcome to Iris")
 =

 	-- create player healthbar dialog
-	OpenPlayerHealthbar()
+	-- OpenPlayerHealthbar()
 =

 	-- stop menu music
 	SoundStopMusic()

Modified: trunk/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.walk.lua (original)
+++ trunk/lua/net.walk.lua Mon May 26 18:49:05 2008
@@ -317,5 +317,7 @@
 	gCurrentRenderer:NotifyPlayerTeleported()
 	MultiTexTerrain_NotifyTeleport()
 	WalkLog("NotifyTeleport end")
-end
-
+	=

+	OpenHealthbar(GetPlayerMobile())
+end
+

Modified: trunk/lua/obj/obj.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.container.lua (original)
+++ trunk/lua/obj/obj.container.lua Mon May 26 18:49:05 2008
@@ -168,13 +168,20 @@
 		local dialog =3D guimaker.MakeSortedDialog()
 		container.dialog =3D dialog
 		dialog.uoContainer =3D container
-		dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
+		=

+		local x,y =3D GetDesktopElementPosition("container",containerdata.serial)
+		if x and y then =

+			dialog.rootwidget.gfx:SetPos(x,y) -- TODO : choose position
+		else
+			dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
+		end
+		=

 		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
 		dialog.backpane.mbIgnoreMouseOver =3D false
 		dialog.backpane.on_mouse_right_down	=3D function (widget) CloseContainer=
(widget.dialog.uoContainer.serial) end
 		dialog.backpane.on_mouse_left_down	=3D function (widget) widget.dialog:B=
ringToFront() gui.StartMoveDialog(widget.dialog.rootwidget) end
 		=

-		NotifyListener("Hook_Open_Container", dialog, container)
+		NotifyListener("Hook_OpenContainer", dialog, container.serial)
 	end
 	gLastDebugContainer =3D container
 	RefreshContainerItemWidgets(container)
@@ -195,6 +202,7 @@
 function CloseContainer (serial) =

 	local container =3D GetContainer(serial)
 	if (container and container.dialog) then
+		NotifyListener("Hook_CloseContainer",container.dialog,serial)
 		DestroyContainerItemWidgets(container)
 		container.dialog:Destroy()
 		container.dialog =3D nil
@@ -212,6 +220,14 @@
 		container =3D CreateOrUpdateDynamic(dynamicdata)
 	end
 	return container
+end
+
+function OpenContainer	(serial, x,y)
+	Send_DoubleClick(serial)
+	local container =3D GetOrCreateContainer(serial) =

+	if container.dialog and container.dialog.rootwidget then
+		container.dialog.rootwidget.gfx:SetPos(x,y)
+	end
 end
 =

 --[[



From no-reply at zwischenwelt.org  Mon May 26 18:57:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 26 May 2008 16:57:47 -0000
Subject: [Iris-commit] [IRIS] r2198 - in /trunk: data/mymacros.lua.dist
 lua/lib.3d.renderer.lua lua/lib.desktop.lua
Message-ID: <20080526165747.CF7521524037@zwischenwelt.org>

Author: hagish
Date: Mon May 26 18:57:43 2008
New Revision: 2198

Log:
improved water texture, bw effect on death

Modified:
    trunk/data/mymacros.lua.dist
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.desktop.lua

Modified: trunk/data/mymacros.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/mymacros.lua.dist (original)
+++ trunk/data/mymacros.lua.dist Mon May 26 18:57:43 2008
@@ -43,8 +43,8 @@
 SetMacro("point",		function() MacroCmd_ZoomCompass(1/1.5) end)
 SetMacro("f10",			function() MacroCmd_ShowDevTool() end)
 SetMacro("f11",			function() MacroCmd_ShowFallBackTool() end)
-SetMacro("shift+f12",	function() MacroCmd_GridScreenshot() end)
-SetMacro("f12",			function() FadeLineToggleShowAll() end)
+--SetMacro("shift+f12",	function() MacroCmd_GridScreenshot() end)
+--SetMacro("f12",			function() FadeLineToggleShowAll() end)
 SetMacro("v",			function() MacroCmd_Screenshot() end)
 SetMacro("x",			function() MacroCmd_CamChangeZoom( 1) end)
 SetMacro("y",			function() MacroCmd_CamChangeZoom(-1) end)

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Mon May 26 18:57:43 2008
@@ -36,6 +36,25 @@
 	self:CamStep()
 	self:UpdateMap()
 	self:MousePickStep()
+	=

+	-- b&w effect on death
+	local playermobile =3D GetPlayerMobile()
+	if playermobile and playermobile.stats and playermobile.stats.curHits then
+		if playermobile.stats.curHits =3D=3D 0 then
+			-- dead
+			-- alive
+			if not gBWCompositor then
+				OgreAddCompositor(GetMainViewport(),"B&W")
+				gBWCompositor =3D true
+			end
+		else
+			-- alive
+			if gBWCompositor then
+				OgreRemoveCompositor(GetMainViewport(),"B&W")
+				gBWCompositor =3D false
+			end
+		end
+	end
 end
 =

 =


Modified: trunk/lua/lib.desktop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.desktop.lua (original)
+++ trunk/lua/lib.desktop.lua Mon May 26 18:57:43 2008
@@ -239,6 +239,8 @@
 end)
 =

 RegisterListener("Hook_StartInGame",function() =

+	gSelectedShardName =3D gSelectedShardName or "unknown"
+	gSelectedCharName =3D gSelectedCharName or "unknown"
 	local filename =3D gSelectedShardName.."-"..gSelectedCharName..".lua"
 	LoadDesktop(filename) =

 end)



From no-reply at zwischenwelt.org  Mon May 26 18:58:27 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 26 May 2008 16:58:27 -0000
Subject: [Iris-commit] [IRIS] r2199 - /trunk/data/terrain/textures/water.jpg
Message-ID: <20080526165827.6BE041524037@zwischenwelt.org>

Author: hagish
Date: Mon May 26 18:58:26 2008
New Revision: 2199

Log:
improved water texture, bw effect on death

Modified:
    trunk/data/terrain/textures/water.jpg

Modified: trunk/data/terrain/textures/water.jpg
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Mon May 26 19:00:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 26 May 2008 17:00:20 -0000
Subject: [Iris-commit] [IRIS] r2200 - /trunk/data/mymacros.lua.dist
Message-ID: <20080526170020.CCB011524037@zwischenwelt.org>

Author: hagish
Date: Mon May 26 19:00:17 2008
New Revision: 2200

Log:
improved water texture, bw effect on death

Modified:
    trunk/data/mymacros.lua.dist

Modified: trunk/data/mymacros.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/mymacros.lua.dist (original)
+++ trunk/data/mymacros.lua.dist Mon May 26 19:00:17 2008
@@ -43,8 +43,8 @@
 SetMacro("point",		function() MacroCmd_ZoomCompass(1/1.5) end)
 SetMacro("f10",			function() MacroCmd_ShowDevTool() end)
 SetMacro("f11",			function() MacroCmd_ShowFallBackTool() end)
---SetMacro("shift+f12",	function() MacroCmd_GridScreenshot() end)
---SetMacro("f12",			function() FadeLineToggleShowAll() end)
+SetMacro("shift+f12",	function() MacroCmd_GridScreenshot() end)
+SetMacro("f12",			function() FadeLineToggleShowAll() end)
 SetMacro("v",			function() MacroCmd_Screenshot() end)
 SetMacro("x",			function() MacroCmd_CamChangeZoom( 1) end)
 SetMacro("y",			function() MacroCmd_CamChangeZoom(-1) end)



From no-reply at zwischenwelt.org  Tue May 27 10:36:09 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 27 May 2008 08:36:09 -0000
Subject: [Iris-commit] [IRIS] r2201 - in /trunk/lua: lib.3d.mobile.lua
 net/net.other.lua obj/obj.mobile.lua
Message-ID: <20080527083610.43D101C180AF@zwischenwelt.org>

Author: hagish
Date: Tue May 27 10:36:07 2008
New Revision: 2201

Log:
long mobile names, like blabla the wandering healer

Modified:
    trunk/lua/lib.3d.mobile.lua
    trunk/lua/net/net.other.lua
    trunk/lua/obj/obj.mobile.lua

Modified: trunk/lua/lib.3d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mobile.lua (original)
+++ trunk/lua/lib.3d.mobile.lua Tue May 27 10:36:07 2008
@@ -184,13 +184,16 @@
 				mobile.hudname.lastn =3D mobile.notoriety
 				mobile.hudname.lastname =3D mobile.name
 			end =

-			if (mobile.hudname.lastn ~=3D mobile.notoriety or mobile.hudname.lastna=
me ~=3D mobile.name) then
+			=

+			-- prefere long names
+			local name =3D mobile.longname or mobile.shortname or mobile.name or "u=
nknown"
+			if (mobile.hudname.lastn ~=3D mobile.notoriety or mobile.hudname.lastna=
me ~=3D name) then
 				mobile.hudname.lastn =3D mobile.notoriety
-				mobile.hudname.lastname =3D mobile.name
+				mobile.hudname.lastname =3D name
 				local r,g,b =3D GetNotorietyColor(mobile.notoriety)
-				local a =3D 0.5
+				local a =3D 0.8
 				mobile.hudname.gfx:SetColour(r,g,b,a)
-				mobile.hudname.gfx:SetText(mobile.name)
+				mobile.hudname.gfx:SetText(name)
 			end
 		end
 		=


Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Tue May 27 10:36:07 2008
@@ -477,14 +477,41 @@
 	-- TODO : Display as TOOLTIP !
 	plaintext =3D UnicodeFix(plaintext)
 	=

-	if string.len(text_charname) > 0 then =

-		AddFadeLines(sprintf("%s: %s",text_charname,plaintext)) -- TODO : color,=
font,...
-	else
-		AddFadeLines(plaintext) -- TODO : color,font,...
-	end
-	=

-	JournalAddText(text_charname,plaintext)
+	local show_below =3D true	-- display as fadeline
+	local show_journal =3D true	-- display in journal
+	=

+	if text_type =3D=3D 0x00 then	-- regular
+	elseif text_type =3D=3D 0x01 then	-- system
+	elseif text_type =3D=3D 0x02 then	-- emote
+	elseif text_type =3D=3D 0x06 then	-- label
+		show_journal =3D false
+		if GetMobile(text_item_serial) then
+			Mobile_SetName(text_item_serial, text_charname, plaintext)
+			show_below =3D false
+		end
+	elseif text_type =3D=3D 0x07 then	-- focus
+	elseif text_type =3D=3D 0x08 then	-- whisper
+	elseif text_type =3D=3D 0x09 then	-- yell
+	elseif text_type =3D=3D 0x0A then	-- spell
+	elseif text_type =3D=3D 0xC0 then	-- encoded
+	else	-- unknown
+	end
+	=

+	if show_below then
+		if string.len(text_charname) > 0 then =

+			AddFadeLines(sprintf("%s: %s",text_charname,plaintext)) -- TODO : color=
,font,...
+		else
+			AddFadeLines(plaintext) -- TODO : color,font,...
+		end
+	end
+	=

+	if show_journal then
+		JournalAddText(text_charname,plaintext)
+	end
+	=

 	NotifyListener("Hook_Text",text_charname,plaintext)
+	=

+	-- print("###",text_item_serial,text_item_model,text_type,text_color,text=
_charname,text_params,text_terminator)
 end
 =

 --server response packet for kPacket_Speech_Unicode (0xAD)
@@ -501,12 +528,23 @@
 	local unitext_name =3D input:PopFilledString(30)
 	local unitext_message =3D input:PopUnicodeString((unitext_size-48)/2)
 =

+	local show_below =3D true	-- display as fadeline
+	local show_journal =3D true	-- display in journal
+	=

+	unitext_message =3D UnicodeFix(unitext_message)
 =

 	local r,g,b =3D 1,1,1
 	if unitext_type =3D=3D hex2num("0x00") then r,g,b =3D 1,1,1 end	-- 0x00 -=
 Normal =

 	if unitext_type =3D=3D hex2num("0x01") then r,g,b =3D 0,0,1 end	-- 0x01 -=
 Broadcast/System =

 	if unitext_type =3D=3D hex2num("0x02") then r,g,b =3D 0,1,0 end	-- 0x02 -=
 Emote =

-	if unitext_type =3D=3D hex2num("0x06") then r,g,b =3D 1,1,1 end	-- 0x06 -=
 System/Lower Corner =

+	if unitext_type =3D=3D hex2num("0x06") then =

+		show_journal =3D false =

+		if GetMobile(mobile_serial) then
+			show_below =3D false =

+			Mobile_NameHint(mobile_serial,unitext_item_model,unitext_name,unitext_m=
essage)
+			r,g,b =3D 1,1,1 =

+		end
+	end	-- 0x06 - System/Lower Corner, label?
 	if unitext_type =3D=3D hex2num("0x07") then r,g,b =3D 1,0,0 end	-- 0x07 -=
 Message/Corner With Name =

 	if unitext_type =3D=3D hex2num("0x07") then r,g,b =3D 1,1,1 end	-- 0x08 -=
 Whisper =

 	if unitext_type =3D=3D hex2num("0x07") then r,g,b =3D 1,1,1 end	-- 0x09 -=
 Yell =

@@ -523,17 +561,22 @@
 	s =3D math.max(0,s - gFontChatBrighten/2)
 	r,g,b =3D ColorHSV2RGB(h,s,v)
 	=

-	Mobile_NameHint(mobile_serial,unitext_item_model,unitext_name,unitext_mes=
sage)
 	printdebug("net",sprintf("NET: UnicodeText speakerid: %i name: %s txtsize=
: %i msg: %s\n",mobile_serial,unitext_name,(unitext_size-48)/2,unitext_mess=
age) )
-	=

-	unitext_message =3D UnicodeFix(unitext_message)
-	AddFadeLines(unitext_name..": "..string.gsub(unitext_message,"<br>","\n")=
,{r,g,b,1}) -- TODO : unicode
-	JournalAddText(unitext_name,unitext_message)
+
+	-- print("### text",mobile_serial,unitext_type,unitext_name,unitext_messa=
ge)
+
+	if show_below then =

+		AddFadeLines(unitext_name..": "..string.gsub(unitext_message,"<br>","\n"=
),{r,g,b,1}) -- TODO : unicode
+	end
+	if show_journal then
+		JournalAddText(unitext_name,unitext_message)
+	end
+	=

 	NotifyListener("Hook_Text",unitext_name,unitext_message)
 =

 	-- check if player -> then show text over player head
 	local mobilespeaker=3DGetMobile(mobile_serial)
-	if (mobilespeaker) then mobilespeaker:DisplayTextOverHead(string.gsub(uni=
text_message,"<br>","\n"),Uo16Color2Rgb(unitext_hue)) end
+	if (mobilespeaker and show_below) then mobilespeaker:DisplayTextOverHead(=
string.gsub(unitext_message,"<br>","\n"),Uo16Color2Rgb(unitext_hue)) end
 end
 =

 -- TODO : question : ghoulsblade : is this only for combat ? sience: don't=
 know -> verify

Modified: trunk/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.mobile.lua (original)
+++ trunk/lua/obj/obj.mobile.lua Tue May 27 10:36:07 2008
@@ -24,6 +24,7 @@
 Mobile_UpdateMana 			(mobile_or_serial,curvalue,maxvalue)
 Mobile_UpdateStamina		(mobile_or_serial,curvalue,maxvalue)
 Mobile_NameHint 			(mobile_or_serial,model,charname,message) =

+Mobile_SetName	 			(mobile_or_serial,shortname,longname) =

 Mobile_Destroy				(mobile_or_serial)
 Mobile_DisplayTextOverHead	(mobile_or_serial,message,r,g,b)
 =

@@ -83,6 +84,9 @@
 	=

 	NotifyListener("Hook_Object_CreateMobile",mobile)
 	=

+	-- for mobile names and tooltips
+	Send_SingleClick(serial)
+	=

 	return mobile
 end
 =

@@ -302,6 +306,14 @@
 end
 =

 =

+-- =

+function gMobilePrototype:SetName (shortname,longname) =

+	self.shortname =3D shortname
+	self.longname =3D longname
+	self.name =3D shortname
+	self:Update()
+end
+
 -- ##### ##### ##### ##### ##### destruction
 =

 =




From no-reply at zwischenwelt.org  Tue May 27 15:27:29 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 27 May 2008 13:27:29 -0000
Subject: [Iris-commit] [IRIS] r2202 - in /trunk: data/config.lua.dist
 lua/gui/gui.helper.lua lua/lib.compass.lua
Message-ID: <20080527132730.238E61C180AF@zwischenwelt.org>

Author: hagish
Date: Tue May 27 15:27:28 2008
New Revision: 2202

Log:
enter '/mark NAME' to store current position in da mark.uoam in data/uoam

Modified:
    trunk/data/config.lua.dist
    trunk/lua/gui/gui.helper.lua
    trunk/lua/lib.compass.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Tue May 27 15:27:28 2008
@@ -476,3 +476,5 @@
 gEnableGotoOnClick =3D false
 =

 gUseWalk3 =3D false
+
+gMarkFile =3D "../data/uoam/mark.uoam"

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Tue May 27 15:27:28 2008
@@ -49,7 +49,12 @@
 -- function is called by Lugre (lib.chatline.lua) from ChatLine_RepeatLast=
 and ChatLine_Init
 function SendChat (curtext) =

 	CharLine_SetLast(curtext)
-	if string.sub(curtext, 1, 4) =3D=3D "/lua" then
+	if string.sub(curtext, 1, 5) =3D=3D "/mark" then
+		local name =3D string.sub(curtext, 6)
+		if name then
+			MarkCurrentPosition(name)
+		end
+	elseif string.sub(curtext, 1, 4) =3D=3D "/lua" then
 		local cmd =3D string.sub(curtext, 5)
 		-- interpret this a lua command
 		-- /lua print("lalal")

Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Tue May 27 15:27:28 2008
@@ -12,11 +12,12 @@
 kDetailMapCacheViewRad =3D 80
 =

 gPositionMarkers =3D {
-	-- [1] =3D {
+	--[1] =3D {
+		--["Britain Sewers"]=3D{1491,1641,0,0,0,1},
 		--["Britain Moongate"]=3D{1336,1997,0,0,1,1},
 		--["Jhelom Moongate"]=3D{1500,3772,0,0,1,1},
 		--["Magincia Moongate"]=3D{3564,2140,0,0,1,1},
-	-- }
+	--}
 }
 =

 -- opens the given file and parses uo automap stuff
@@ -50,6 +51,20 @@
 	end
 end
 =

+function MarkCurrentPosition	(name)
+	if gMarkFile then
+		local fp =3D io.open(gMarkFile,"a")
+		if (fp) then
+			local x,y,z =3D MacroRead_GetPlayerPosition()
+			local mapid =3D gCompassMapIndex - 1
+			fp:write("+"..name..": "..x.." "..y.." "..mapid.."\n")
+			fp:close()
+		end
+	end
+	gPositionMarkers =3D {}
+	LoadUOAutomapFiles("../data/uoam/", gPositionMarkers)
+end
+
 LoadUOAutomapFiles("../data/uoam/", gPositionMarkers)
 =

 function SetPositionMarker(mapindex,name,xloc,yloc,r,g,b,a)
@@ -228,7 +243,7 @@
 	if (not(gEnableCompass)) then return end
 =

 	gCompassMapIndex =3D gMapIndex
-
+	=

 	local profile =3D MakeProfiler("compass")
 	profile:StartSection("init")
 =




From no-reply at zwischenwelt.org  Wed May 28 09:45:17 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 28 May 2008 07:45:17 -0000
Subject: [Iris-commit] [IRIS] r2203 -
	/trunk/data/particles/materials/particles.material
Message-ID: <20080528074517.7B67B1C180E5@zwischenwelt.org>

Author: hagish
Date: Wed May 28 09:45:16 2008
New Revision: 2203

Log:
bugfix: swords effect is not transparent

Modified:
    trunk/data/particles/materials/particles.material

Modified: trunk/data/particles/materials/particles.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/particles/materials/particles.material (original)
+++ trunk/data/particles/materials/particles.material Wed May 28 09:45:16 2=
008
@@ -104,8 +104,9 @@
 	{
 		pass
 		{
-			scene_blend alpha_blend
-
+			//scene_blend alpha_blend
+			alpha_rejection greater_equal 200
+			=

 			cull_hardware clockwise
 			cull_software back
 =

@@ -124,7 +125,8 @@
 	{
 		pass
 		{
-			scene_blend alpha_blend
+			//scene_blend alpha_blend
+			alpha_rejection greater_equal 200
 =

 			cull_hardware clockwise
 			cull_software back



From no-reply at zwischenwelt.org  Wed May 28 13:39:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 28 May 2008 11:39:33 -0000
Subject: [Iris-commit] [IRIS] r2204 - in /trunk/lua/gui: gui.skill.lua
	gui.spellbook.lua
Message-ID: <20080528113934.13F981C180E4@zwischenwelt.org>

Author: hagish
Date: Wed May 28 13:39:31 2008
New Revision: 2204

Log:
uo spell icons as quickcast icons

Modified:
    trunk/lua/gui/gui.skill.lua
    trunk/lua/gui/gui.spellbook.lua

Modified: trunk/lua/gui/gui.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.skill.lua (original)
+++ trunk/lua/gui/gui.skill.lua Wed May 28 13:39:31 2008
@@ -98,10 +98,42 @@
 =

 glQuickCastDialog =3D {}
 -- creates a quickcast button at the given position
-function CreateQuickCastButton (x,y,name,fun)
-	quickskillGump.x=3Dx
-	quickskillGump.y=3Dy
-	local dialog =3D GumpParser( quickskillGump, true )
+function CreateQuickCastButton (x,y,name,fun,gumpbuttonartid)
+	if x < 0 then x =3D 0 end
+	if y < 0 then y =3D 0 end
+	=

+	local dialog =3D nil
+	=

+	-- layout
+	if gumpbuttonartid then
+		-- gump button
+		dialog =3D guimaker.MakeSortedDialog()
+		dialog.rootwidget.gfx:SetPos(x,y)
+		local spellicon =3D MakeBorderGumpPart(dialog.rootwidget, gumpbuttonarti=
d, 0,0, nil,nil)
+		spellicon.mbIgnoreMouseOver =3D false
+
+		-- tooltip
+		spellicon.tooltip_offx =3D kUOToolTippOffX -- Both defined at
+		spellicon.tooltip_offy =3D kUOToolTippOffY -- obj.container.lua
+		spellicon.stylesetname =3D gGuiDefaultStyleSet
+		spellicon.on_simple_tooltip =3D function (widget) =

+			return (name) or "?" =

+		end =

+	else
+		-- simple text button
+		quickskillGump.x=3Dx
+		quickskillGump.y=3Dy
+
+		dialog =3D GumpParser( quickskillGump, true )
+
+		if string.len(name) > 10 then
+			name =3D string.sub(name,0,10)..".." =

+		end
+		=

+		local text =3D guimaker.MakeText(dialog.rootwidget, 20, 5, name, gFontGu=
mpSize, {1.0,1.0,1.0,1.0}, gFontNameDefault)
+	end
+	=

+	-- functionality
 	=

 	-- overrride dialog close function from gumpparser
 	dialog.Close =3D function (dialog)
@@ -112,24 +144,15 @@
 	-- overwrite the onMouseDown function from gumpparser
 	dialog.onMouseDown =3D function (widget,mousebutton)
 		if (mousebutton =3D=3D 2) then widget.dialog:Close() end
-		if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.StartMov=
eDialog(widget.dialog.rootwidget) end
-	end
-
-	if string.len(name) > 10 then
-		name =3D string.sub(name,0,12)..".." =

-	end
-	=

-	local text =3D guimaker.MakeText(dialog.rootwidget, 20, 5, name, gFontGum=
pSize, {1.0,1.0,1.0,1.0}, gFontNameDefault)
-	local w,h =3D text.gfx:GetDimensions()
-	-- cast text button
-	local b =3D 2
-	local button =3D 	guimaker.MakeButton(dialog.rootwidget, 20+b, 5+b, w-2*b=
, h-2*b, {0,0,0,0.0})
-	button.gfx:SetVisible(true)
-	button.mbIgnoreMouseOver =3D false
-	button.onLeftClick =3D function (widget) fun() end
+		if (mousebutton =3D=3D 1) then =

+			widget.dialog:BringToFront() =

+			gui.StartMoveDialog(widget.dialog.rootwidget) =

+		end
+	end
+	dialog.on_mouse_left_click_double =3D function (widget) fun() end
 =

 	table.insert(glQuickCastDialog,dialog)
-	=

+
 	return dialog
 end
 =


Modified: trunk/lua/gui/gui.spellbook.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.spellbook.lua (original)
+++ trunk/lua/gui/gui.spellbook.lua Wed May 28 13:39:31 2008
@@ -16,20 +16,46 @@
 	end
 end
 =

-function CreateQuickCastButtonSpell(x,y,spellid)
+function GetSpellIconId(spellid)
+	for kbook,vbook in pairs(gSpellBooks) do
+		-- number of spells per circle
+		local spellnumber =3D countarr(vbook.spells[1])
+		=

+		for kcircle,vcircle in pairs(vbook.spells) do
+			for kspell,vspell in pairs(vcircle) do
+				local id =3D vbook.startindex + kspell + (kcircle - 1) * spellnumber
+				if id =3D=3D spellid then
+					return vbook.iconoffset + ((kcircle-1) * spellnumber) + kspell-1
+				end
+			end
+		end
+	end
+end
+
+function CreateQuickCastButtonSpell(x,y,spellid,spelliconid)
 	for k,v in pairs(glQuickCastDialog) do
 		if v and v.spellid and v.spellid =3D=3D spellid then
-			v.rootwidget.gfx:SetPos(x,y)
-			return
+			if v and v.rootwidget and v.rootwidget.gfx and v.rootwidget.gfx:IsAlive=
() then
+				-- reuse existing one
+				v.rootwidget.gfx:SetPos(x,y)
+				return
+			else
+				-- there is a broken one left, so close it
+				if v:IsAlive() then v:Close() end
+				if v:IsAlive() then v:Destroy() end
+				glQuickCastDialog[k] =3D nil
+			end
 		end
 	end
 							=

 	local spellname =3D GetSpellname(spellid)
+	local spelliconid =3D GetSpellIconId(spellid)
+							=

 	local d =3D CreateQuickCastButton(x,y,spellname,function () =

 		-- quick cast function
 		-- print("CAST SPELL",spellname)
 		Send_Spell(spellid,gSpellbookExpansion["AOS"])
-	end)
+	end, spelliconid)
 =

 	d.spellid =3D spellid
 	NotifyListener("Hook_CreateQuickCastSpell",d,x,y,spellid)



From no-reply at zwischenwelt.org  Wed May 28 20:10:02 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 28 May 2008 18:10:02 -0000
Subject: [Iris-commit] [IRIS] r2205 - /trunk/lua/filter/filter.art.lua
Message-ID: <20080528181003.5CF3A1C180E5@zwischenwelt.org>

Author: sience
Date: Wed May 28 20:09:59 2008
New Revision: 2205

Log:
-hitching post fixed

Modified:
    trunk/lua/filter/filter.art.lua

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Wed May 28 20:09:59 2008
@@ -300,9 +300,12 @@
 gArtFilter[3809]=3D{maptoid=3D3810,rotation=3D"x:0,y:0,z:-90",xadd=3D1,yad=
d=3D0,zadd=3D0}
 gArtFilter[3807]=3D{skip=3Dtrue}
 =

-
 -- flags
 gArtFilter[5589]=3D{maptoid=3D5588,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D0.9,zadd=3D0}
+
+--hitching post
+gArtFilter[5351]=3D{rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=3D1,zadd=3D0}
+gArtFilter[5352]=3D{maptoid=3D5351}
 =

 ----------------------------------------------------------------------
 =




From no-reply at zwischenwelt.org  Thu May 29 11:50:39 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 29 May 2008 09:50:39 -0000
Subject: [Iris-commit] [IRIS] r2206 - /trunk/lua/gui/gui.skill.lua
Message-ID: <20080529095040.31B601C180EA@zwischenwelt.org>

Author: hagish
Date: Thu May 29 11:50:39 2008
New Revision: 2206

Log:
bugfix: reuse of skill quickbuttons cause an error

Modified:
    trunk/lua/gui/gui.skill.lua

Modified: trunk/lua/gui/gui.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.skill.lua (original)
+++ trunk/lua/gui/gui.skill.lua Thu May 29 11:50:39 2008
@@ -159,8 +159,16 @@
 function CreateQuickCastButtonSkill(x,y,skillid)
 	for k,v in pairs(glQuickCastDialog) do
 		if v and v.skillid and v.skillid =3D=3D skillid then
-			v.rootwidget.gfx:SetPos(x,y)
-			return
+			if v and v.rootwidget and v.rootwidget.gfx and v.rootwidget.gfx:IsAlive=
() then
+				-- reuse existing one
+				v.rootwidget.gfx:SetPos(x,y)
+				return
+			else
+				-- there is a broken one left, so close it
+				if v:IsAlive() then v:Close() end
+				if v:IsAlive() then v:Destroy() end
+				glQuickCastDialog[k] =3D nil
+			end
 		end
 	end
 =




From no-reply at zwischenwelt.org  Thu May 29 12:14:57 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 29 May 2008 10:14:57 -0000
Subject: [Iris-commit] [IRIS] r2207 -
	/trunk/data/models/materials/textures.material
Message-ID: <20080529101513.EBF891C180EE@zwischenwelt.org>

Author: ghoulsblade
Date: Thu May 29 12:14:43 2008
New Revision: 2207

Log:
enabled vertexcolour for grass

Modified:
    trunk/data/models/materials/textures.material

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Thu May 29 12:14:43 2008
@@ -5631,6 +5631,8 @@
 	{ =

 		pass =

 		{
+			ambient vertexcolour
+			diffuse vertexcolour
 //			ambient 0.5 0.2 0.2
 //			diffuse 1 0 0
 //			specular 1 0.8 0.8 15



From no-reply at zwischenwelt.org  Thu May 29 14:05:26 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 29 May 2008 12:05:26 -0000
Subject: [Iris-commit] [IRIS] r2208 -
	/trunk/data/models/materials/textures.material
Message-ID: <20080529120529.7BDE71C180EA@zwischenwelt.org>

Author: ghoulsblade
Date: Thu May 29 14:05:21 2008
New Revision: 2208

Log:
vertexcolor(hueing) for transparent model-materials

Modified:
    trunk/data/models/materials/textures.material

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Thu May 29 14:05:21 2008
@@ -58,6 +58,9 @@
 			scene_blend alpha_blend
 			depth_write off
 			depth_check on
+			=

+			ambient vertexcolour
+			diffuse vertexcolour
 		}
 	}
 }



From no-reply at zwischenwelt.org  Fri May 30 01:38:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 29 May 2008 23:38:31 -0000
Subject: [Iris-commit] [IRIS] r2209 - /trunk/bin/iris2.exe
Message-ID: <20080529233835.E944B1C180E9@zwischenwelt.org>

Author: sience
Date: Fri May 30 01:38:28 2008
New Revision: 2209

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat May 31 02:34:45 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 31 May 2008 00:34:45 -0000
Subject: [Iris-commit] [IRIS] r2210 - in /trunk: bin/plugins_linux.cfg
 lua/lib.2d.mobile.lua lua/lib.2d.renderer.lua lua/lib.bugreport.lua
 lua/lib.loading.lua lua/lib.mainmenu.lua lua/lib.map.lua lua/lib.uoanim.lua
 lua/main.lua
Message-ID: <20080531003445.7C31C1C180F1@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 31 02:34:44 2008
New Revision: 2210

Log:
bugreport:replaced sfz with iris in text, 2d:worked on anims, autologin:add=
ed charname option -co servername charname, option for exporting tree-locat=
ions, bugfix:mapchange when no map loaded, 2d: online-mode : cam centers on=
 playerpos

Modified:
    trunk/bin/plugins_linux.cfg
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.bugreport.lua
    trunk/lua/lib.loading.lua
    trunk/lua/lib.mainmenu.lua
    trunk/lua/lib.map.lua
    trunk/lua/lib.uoanim.lua
    trunk/lua/main.lua

Modified: trunk/bin/plugins_linux.cfg
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/bin/plugins_linux.cfg (original)
+++ trunk/bin/plugins_linux.cfg Sat May 31 02:34:44 2008
@@ -16,4 +16,4 @@
 Plugin=3DPlugin_ParticleFX.so 	=

 Plugin=3DPlugin_BSPSceneManager.so 	=

 Plugin=3DPlugin_OctreeSceneManager.so 	=

-Plugin=3DPlugin_CgProgramManager.so =

+#~ Plugin=3DPlugin_CgProgramManager.so =


Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sat May 31 02:34:44 2008
@@ -4,29 +4,57 @@
 k2D_ScaleH		=3D kSq2 / 44
 k2D_ScaleW05	=3D 0.5 / 44 -- 0.5 : applied left and right
 =

-function Renderer2D:UpdateMobile				() end -- main updater, create, positi=
on ...
-function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc ??
-function Renderer2D:DestroyMobileGfx			() end
+-- main updater, create, position ...
+function Renderer2D:UpdateMobile				(mobile) =

+	local gfx =3D mobile.gfx2d
+	if (not gfx) then
+		local iModelID,iAnimID =3D 401,0
+		local iHue =3D 0x03F4 -- human skin hue (0x83F4=3D33780, but 0x8* is par=
tial hue and turned out all gray here)
+		--~ local iHue =3D 0
+	=

+		gfx =3D CreateRootGfx3D()
+		mobile.gfx2d =3D gfx
+		gfx:SetSimpleRenderable()
+		=

+		local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

+		local animinfo =3D GetAnimDataInfo(iModelID) -- o.miFrames,o.miUnknown,o=
.miCount,o.miFrameInterval,o.miFrameStart
+		gfx.animinfo =3D animinfo
+		gfx.iAnimStartTime =3D Client_GetTicks()
+		gfx.iFrame =3D 0
+		=

+		local o =3D animinfo =

+		--~ print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,=
o.miFrameStart)
+		--animinfo        table: 0x93e5d90        -1      -1      -1      -1
+		--~ for k,v in pairs(o.miFrames) do print("frame",k,v) end -- were all -=
1 =

+
+		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
+		print("gfx.iMaxFrames",gfx.iMaxFrames)
+	end
+	=

+	=

+	=

+	local x,y,z =3D self:UOPosToLocal(mobile.xloc,mobile.yloc,0 or mobile.zlo=
c)
+	print("UpdateMobile",mobile.xloc,mobile.yloc,mobile.zloc,x,y,z)
+	gfx:SetPosition(x,y,z)
+	=

+	=

+	DestroyList_Add(mobile.gfx2d,gfx)
+end =

+
+function Renderer2D:DestroyMobileGfx			(mobile) if (mobile.gfx2d) then Des=
troyList_Destroy(mobile.gfx2d) end end
+
+function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc ?? called every time when UpdateMobile() is called ..
+
 function Renderer2D:MobileAnimStep				() end -- from mainstep
 function Renderer2D:MobileStartServerSideAnim	(animdata) end
 =

-gMobile2DTestGfx =3D nil
-
--- todo : humans : one atlas with complete equipment, will need alpha-blit=
 for images ?
--- todo : mobile : load anim only on demand, e.g. only load walk anim when=
 the mobile actually walks
--- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
-function Anim2DAtlas_Load (iModelID,iAnimID,iFrame,iHue)
-	local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

-	local pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFrame=
ToImage(iRealID,iFrame,iHue)
-	local tex =3D pImage:MakeTexture()
-	local sMatName =3D GetPlainTextureMat(tex,true)
-	local u0,v0,u1,v1 =3D 0,0,1,1
-	return sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
-end
 =

 -- TODO : bMirrorX !
 function Renderer2D:MobileGfxUpdateGeometry (gfx,iModelID,iAnimID,iFrame,i=
Hue)
 	local sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1 =3D A=
nim2DAtlas_Load(iModelID,iAnimID,iFrame,iHue)
+	if (not sMatName) then return end
+	print("MobileGfxUpdateGeometry",sMatName,iWidth,iHeight,iCenterX,iCenterY=
,iFrames,u0,v0,u1,v1)
+	--~ sMatName =3D "BaseWhiteNoLighting"
 	--~ print("MobileGfxUpdateGeometry",iAnimID,iFrame,iWidth,iHeight,iCenter=
X,iCenterY,iFrames)
 	-- MobileGfxUpdateGeometry : cen=3D  12      -11
 	local zoom =3D 1
@@ -49,80 +77,16 @@
 end
 =

 function Renderer2D:MobileTestStep()
-	-- iAnimID : 0-4=3Dwalk down,down-left,left,up-left,up
-	=

-	-- iAnimID : 5-9=3Dwalk down (something in hand)
-	-- iAnimID : 10-14=3Drun
-	-- iAnimID : 15-19=3Drun (something in hand?)
-	-- iAnimID : 20-24 idle (1 frame) =

-	-- iAnimID : 25-29 idle anim? look from left to right
-	-- iAnimID : 30-24 idle anim? spread arms
-	-- iAnimID : 35- combat idle
-	-- iAnimID : 40- combat idle 2hand ?
-	-- iAnimID : 45- punch/bash anim
-	-- iAnimID : 50- stab anim
-	-- iAnimID : 55- punch/bash2 anim
-	-- iAnimID : 60- punch/bash 2-handed
-	-- iAnimID : 65- swing 2-handed
-	-- iAnimID : 70- stab 2-handed ?
-	-- iAnimID : 75- combat-walk-2-handed
-	-- iAnimID : 80- cast1
-	-- iAnimID : 85- cast2
-	-- iAnimID : 90- fire-bow/crossbow?
-	-- iAnimID : 95- fire-bow/crossbow?
-	-- iAnimID : 100- gethit/flinch/pain
-	-- iAnimID : 105- die backwards
-	-- iAnimID : 110- die forwards
-	-- iAnimID : 115- mount-walk-horse
-	-- iAnimID : 120- mount-walk-ostard
-	-- iAnimID : 125- mount-idle-ostard
-	-- iAnimID : 130- mount-attack-swing?-ostard
-	-- iAnimID : 135- mount-attack-bow-ostard
-	-- iAnimID : 140- mount-attack-crossbow-ostard
-	-- iAnimID : 145- mount-attack-bash?-ostard
-	-- iAnimID : 150- attack-stab?
-	-- iAnimID : 155- attack-punch?
-	-- iAnimID : 160- bow
-	-- iAnimID : 165- salute
-	-- iAnimID : 170- cough
-	=

-	local iModelID,iAnimID =3D 401,0
-	local iHue =3D 0x03F4 -- human skin hue (0x83F4=3D33780, but 0x8* is part=
ial hue and turned out all gray here)
-	--~ local iHue =3D 0
+	if true then return end
 	=

 	=

-	if (not gMobile2DTestGfx) then
-		local gfx =3D CreateRootGfx3D()
-		gfx:SetSimpleRenderable()
-		gMobile2DTestGfx =3D gfx
-		=

-		local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

-		local animinfo =3D GetAnimDataInfo(iModelID) -- o.miFrames,o.miUnknown,o=
.miCount,o.miFrameInterval,o.miFrameStart
-		gMobile2DTestGfx.animinfo =3D animinfo
-		gMobile2DTestGfx.iAnimStartTime =3D Client_GetTicks()
-		gMobile2DTestGfx.iFrame =3D 0
-		=

-		local o =3D animinfo =

-		print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,o.mi=
FrameStart)
-		--animinfo        table: 0x93e5d90        -1      -1      -1      -1
-		for k,v in pairs(o.miFrames) do print("frame",k,v) end -- were all -1 =

-
-		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gMobile2DTestGfx.iFram=
e,iHue)
-		print("gfx.iMaxFrames",gfx.iMaxFrames)
-	end
-	=

-	local gfx =3D gMobile2DTestGfx
-	local xloc,yloc =3D self:GetCamPos()
-	local x,y,z =3D self:UOPosToLocal(xloc,yloc,4)
-	gfx:SetPosition(x,y,z)
-	=

-	local t =3D Client_GetTicks() - gfx.iAnimStartTime
-	local framedt =3D 200
-	local framecount =3D gfx.iMaxFrames
-	local iFrameNum =3D math.mod(math.floor(t/framedt),framecount)
-	if (gfx.iFrame ~=3D iFrameNum) then
-		gfx.iFrame  =3D iFrameNum
-		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
-	end
+	--~ local t =3D Client_GetTicks() - gfx.iAnimStartTime
+	--~ local framedt =3D 200
+	--~ local framecount =3D gfx.iMaxFrames
+	--~ local iFrameNum =3D math.mod(math.floor(t/framedt),framecount)
+	--~ if (gfx.iFrame ~=3D iFrameNum) then
+		--~ gfx.iFrame  =3D iFrameNum
+		--~ self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
+	--~ end
 end
 =


Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 31 02:34:44 2008
@@ -48,6 +48,9 @@
 	self:MobileAnimStep()
 	-- TODO : self:CombatGuiStep() ?
 	-- TODO : self:MousePickStep() ?
+	local xloc,yloc,zloc =3D GetPlayerPos()
+	print("playerpos",xloc,yloc,zloc)
+	self:SetCamPos(xloc,yloc)
 end
 =

  =


Modified: trunk/lua/lib.bugreport.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.bugreport.lua (original)
+++ trunk/lua/lib.bugreport.lua Sat May 31 02:34:44 2008
@@ -54,9 +54,9 @@
 	end
 	=

 	local rows =3D {
-		{ {"SFZ has encountered an error,"} },
+		{ {"Iris has encountered an error,"} },
 		{ {"it will try to ignore it and continue running, but some things might=
 not work correctly"} },
-		{ {"updating to a newer sfz version might help, e.g. 'svn up' in linux o=
r running 'updater.exe' in win"} },
+		{ {"updating to a newer iris version might help, e.g. 'svn up' in linux =
or running 'updater.exe' in win"} },
 		{ {"the report has been saved to "..kBugReportPath} },
 		{ {"do you want to send us a bug report ?"} },
 		{ {"you can also attach a note:"} },
@@ -72,7 +72,7 @@
 					PlainMessageBox("bug report received, thank you =3D)",gGuiDefaultStyl=
eSet,gGuiDefaultStyleSet)
 				else =

 					PlainMessageBox("sorry, something went wrong, we didn't get your bugr=
eport\n"..
-									"please see http://sfz.sourceforge.net for how to contact us dire=
ctly\n"..result,gGuiDefaultStyleSet,gGuiDefaultStyleSet)
+									"please see http://iris.sourceforge.net for how to contact us dir=
ectly\n"..result,gGuiDefaultStyleSet,gGuiDefaultStyleSet)
 				end
 			end} },
 		}

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Sat May 31 02:34:44 2008
@@ -217,7 +217,7 @@
 =

 -- don't load new map immediately, several mapchanges might be sent at log=
in quickly
 function MapChangeRequest (iMaxNewIndex)
-	if (gMapIndex =3D=3D iMaxNewIndex) then return end
+	if (gMapLoaded and gMapIndex =3D=3D iMaxNewIndex) then return end
 	print("#### MapChangeRequest=3D"..iMaxNewIndex)
 	=

 	-- unloading of all objects must happen immediately on change request, =


Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Sat May 31 02:34:44 2008
@@ -208,9 +208,10 @@
 		-- answered by kPacket_Features 0xB9 and  kPacket_Character_List 0xA9 wh=
ich calls MainMenuShowCharList
 	end
 	=

-	-- if there is only one entry, select it automatically
-	if (countarr(serverlist.servers) =3D=3D 1) then
+	-- if there is only one entry or if autologin, select it automatically
+	if (countarr(serverlist.servers) =3D=3D 1 or gCommandLineSwitches["-co"])=
 then
 		local k,v =3D next(serverlist.servers) -- get first entry
+		gSelectedShardName =3D v.name
 		MySelectServer(v)
 		return
 	end
@@ -252,9 +253,9 @@
 	--characterlist selection or new char creation
 	--check first, if the choose slot is available!
 	=

-	local MySelectChar =3D function(widget) =

-		Send_Character_Select(widget.iCharNum,gGameServerAccount)
-		widget.dialog:Destroy()
+	=

+	local MySelectChar =3D function(iCharNum) =

+		Send_Character_Select(iCharNum,gGameServerAccount)
 	end
 	local MyCreateCharTemplatePicker =3D function(widget) =

 		MainMenuShowCharCreationDialog(widget.chartemplate,gNextFreeCharSlot)
@@ -267,10 +268,18 @@
 	}
 	-- existing characters
 	gNextFreeCharSlot =3D 0
+	local autologin_charname
+	if (gCommandLineSwitches["-co"]) then autologin_charname =3D gCommandLine=
Arguments[gCommandLineSwitches["-co"]+2] end -- autologin
 	for k,v in pairs(charlist.chars) do if (v.name ~=3D "") then
+		if (v.name =3D=3D autologin_charname) then =

+			local iCharNum =3D k
+			Send_Character_Select(iCharNum,gGameServerAccount)
+			gSelectedCharName =3D v.name
+			return
+		end
 		gNextFreeCharSlot =3D gNextFreeCharSlot + 1
 		table.insert(rows,{
-			{type=3D"Button",onLeftClick=3Dfunction(widget) MySelectChar(widget) gS=
electedCharName =3D v.name end ,iCharNum=3Dk,text=3D"Login as "..v.name}
+			{type=3D"Button",onLeftClick=3Dfunction(widget) MySelectChar(widget.iCh=
arNum) widget.dialog:Destroy() gSelectedCharName =3D v.name end ,iCharNum=
=3Dk,text=3D"Login as "..v.name}
 		})
 	end end
 	-- char creation (TODO)

Modified: trunk/lua/lib.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.map.lua (original)
+++ trunk/lua/lib.map.lua Sat May 31 02:34:44 2008
@@ -21,9 +21,9 @@
 =

 =

 function MapGetWInBlocks	()	return gGroundBlockLoader:GetMapW() end
-function MapGetHInBlocks	()	return gGroundBlockLoader:GetMapW() end
+function MapGetHInBlocks	()	return gGroundBlockLoader:GetMapH() end
 function MapGetWInTiles		()	return gGroundBlockLoader:GetMapW() * 8 end
-function MapGetHInTiles		()	return gGroundBlockLoader:GetMapW() * 8 end
+function MapGetHInTiles		()	return gGroundBlockLoader:GetMapH() * 8 end
 =

 =

 -- ***** ***** ***** ***** ***** caching

Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Sat May 31 02:34:44 2008
@@ -1,15 +1,66 @@
 -- 2d char anim graphics
+-- loads the 2d anim-art, not specific to 2d renderer, might also be used =
in 3d mode for fallbacks
 =

-kAnim_IdRangeLen_HighDetailed	=3D 200  -- mHighDetailed
-kAnim_IdRangeLen_LowDetailed	=3D 200  -- mLowDetailed
+gAnimAtlasCache =3D {}
+kAnimID_Human_Idle =3D 20 =

+kAnimIDRangeLen_HighDetailed	=3D 200  -- mHighDetailed
+kAnimIDRangeLen_LowDetailed		=3D 200  -- mLowDetailed
+
+-- todo : humans : one atlas with complete equipment, will need alpha-blit=
 for images ?
+-- todo : mobile : load anim only on demand, e.g. only load walk anim when=
 the mobile actually walks
+-- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
+function Anim2DAtlas_Load (iModelID,iAnimID,iFrame,iHue)
+	iAnimID =3D 0 -- kAnimID_Human_Idle
+	iFrame =3D 0
+	--~ iHue =3D 0
+	local n =3D iModelID..","..iAnimID..","..iFrame..","..iHue
+	local o =3D gAnimAtlasCache[n]
+	if (o) then return unpack(o) end
+	local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

+	local pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFrame=
ToImage(iRealID,iFrame,iHue)
+	print("Anim2DAtlas_Load",iRealID,iFrame,iHue,"#",pImage,iWidth,iHeight,iC=
enterX,iCenterY,iFrames)
+	if (not pImage) then print("Anim2DAtlas_Load : dead anim ",iModelID,iAnim=
ID,iFrame,iHue) end
+	if (not pImage) then o =3D {} gAnimAtlasCache[n] =3D o return unpack(o) e=
nd
+		=

+	=

+	local w =3D 64
+	while (w < iWidth) do w =3D w * 2 end
+	while (w < iHeight) do w =3D w * 2 end
+	local atlas =3D CreateTexAtlas(w,w)
+	local iBorderPixels =3D 0
+	local bWrap =3D false
+	local bSuccess,l,r,t,b =3D atlas:AddImage(pImage,iBorderPixels,bWrap)
+	pImage:Destroy()
+
+	--~ if (2 =3D=3D 1) then
+		--~ local img2 =3D CreateImage()
+		--~ atlas:MakeImage(img2)
+		--~ img2:SaveAsFile("../animtest.png")
+		--~ img2:Destroy()
+	--~ end
+	=

+	local tex =3D atlas:MakeTexture() -- generate new texture
+	local sMatName =3D CloneMaterial("renderer2dbillboard")
+	SetTexture(sMatName,tex)
+	=

+	local u0,v0,u1,v1 =3D l,t,r,b
+	o =3D {sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1}
+	print("anim2d",sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1=
,v1)
+	gAnimAtlasCache[n] =3D o
+	return unpack(o)
+end
+
+
+
+
 =

 -- iID is probably bodyid, and animid the animation ? ported from varans c=
ode
 function Anim_GetRealID (iModelID,iAnimID) =

-	if (iModelID < kAnim_IdRangeLen_HighDetailed) then return iAnimID + iMode=
lID*110 end
-	if (iModelID < kAnim_IdRangeLen_HighDetailed + kAnim_IdRangeLen_LowDetail=
ed) then
-		return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + (iModelID-kAnim_IdR=
angeLen_HighDetailed)*65
+	if (iModelID < kAnimIDRangeLen_HighDetailed) then return iAnimID + iModel=
ID*110 end
+	if (iModelID < kAnimIDRangeLen_HighDetailed + kAnimIDRangeLen_LowDetailed=
) then
+		return iAnimID + kAnimIDRangeLen_HighDetailed*110 + (iModelID-kAnimIDRan=
geLen_HighDetailed)*65
 	end
-	return iAnimID + kAnim_IdRangeLen_HighDetailed*110 + kAnim_IdRangeLen_Low=
Detailed*65 + (iModelID-kAnim_IdRangeLen_HighDetailed-kAnim_IdRangeLen_LowD=
etailed)*175
+	return iAnimID + kAnimIDRangeLen_HighDetailed*110 + kAnimIDRangeLen_LowDe=
tailed*65 + (iModelID-kAnimIDRangeLen_HighDetailed-kAnimIDRangeLen_LowDetai=
led)*175
 end
 =

 gGetAnimDataInfoCache =3D {}
@@ -96,3 +147,42 @@
 	=

 ]]--
 =

+
+--[[
+-- iAnimID : 0-4=3Dwalk down,down-left,left,up-left,up
+-- iAnimID : 5-9=3Dwalk down (something in hand)
+-- iAnimID : 10-14=3Drun
+-- iAnimID : 15-19=3Drun (something in hand?)
+-- iAnimID : 20-24 idle (1 frame) =

+-- iAnimID : 25-29 idle anim? look from left to right
+-- iAnimID : 30-24 idle anim? spread arms
+-- iAnimID : 35- combat idle
+-- iAnimID : 40- combat idle 2hand ?
+-- iAnimID : 45- punch/bash anim
+-- iAnimID : 50- stab anim
+-- iAnimID : 55- punch/bash2 anim
+-- iAnimID : 60- punch/bash 2-handed
+-- iAnimID : 65- swing 2-handed
+-- iAnimID : 70- stab 2-handed ?
+-- iAnimID : 75- combat-walk-2-handed
+-- iAnimID : 80- cast1
+-- iAnimID : 85- cast2
+-- iAnimID : 90- fire-bow/crossbow?
+-- iAnimID : 95- fire-bow/crossbow?
+-- iAnimID : 100- gethit/flinch/pain
+-- iAnimID : 105- die backwards
+-- iAnimID : 110- die forwards
+-- iAnimID : 115- mount-walk-horse
+-- iAnimID : 120- mount-walk-ostard
+-- iAnimID : 125- mount-idle-ostard
+-- iAnimID : 130- mount-attack-swing?-ostard
+-- iAnimID : 135- mount-attack-bow-ostard
+-- iAnimID : 140- mount-attack-crossbow-ostard
+-- iAnimID : 145- mount-attack-bash?-ostard
+-- iAnimID : 150- attack-stab?
+-- iAnimID : 155- attack-punch?
+-- iAnimID : 160- bow
+-- iAnimID : 165- salute
+-- iAnimID : 170- cough
+]]--
+

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat May 31 02:34:44 2008
@@ -317,6 +317,7 @@
 	InitArtFilter()
 	=

 	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size
+	--~ Client_USleep(1000/30)
 =

 	NotifyListener("Hook_PreLoad")
 	PreLoad()
@@ -420,6 +421,32 @@
 =

 -- exports data if some commandline parameters are set
 function InvokeExporters ()
+	if (gCommandLineArguments[1] =3D=3D "-tree") then -- export trees
+		print("# # # # # # # # # #  #  #    #     #      starting tree exporter")
+		local treetypes =3D {}
+		for iFacet =3D 0,0 do -- 0 Felucca, 1 Trammel, 2 Ilshenar, 3 Malas, 4 To=
kuno
+			MapChangeRequest(iFacet)
+			local mapw =3D MapGetWInBlocks()
+			local maph =3D MapGetHInBlocks()
+			for bx =3D 0,mapw-1 do
+				for by =3D 0,maph-1 do
+					for k,static in pairs(MapGetBlockStatics(bx,by)) do =

+						local iTileTypeID =3D static.artid
+						local bIsTree =3D treetypes[iTileTypeID]
+						if (bIsTree =3D=3D nil) then
+							bIsTree =3D string.find(string.lower(GetStaticTileTypeName(iTileTyp=
eID)),"tree")
+							treetypes[iTileTypeID] =3D bIsTree
+						end
+						if (bIsTree) then
+							local o =3D static
+							print("Tree("..iFacet..","..o.xloc..","..o.yloc..","..o.zloc..","..=
o.artid,")")
+						end
+					end
+				end
+			end
+		end
+		os.exit(0)
+	end
 	if (gCommandLineArguments[1] =3D=3D "-em") then -- export map xloc,yloc,m=
apblocksw,mapblocksh
 		local img =3D CreateImage()
 		local bx		=3D math.floor(tonumber(gCommandLineArguments[2])/8)



From no-reply at zwischenwelt.org  Sat May 31 03:04:08 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 31 May 2008 01:04:08 -0000
Subject: [Iris-commit] [IRIS] r2211 - in /trunk/lua: lib.2d.cam.lua
 lib.2d.mobile.lua lib.2d.renderer.lua lib.uoanim.lua
Message-ID: <20080531010408.34CFE1C180F1@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 31 03:04:07 2008
New Revision: 2211

Log:
worked on 2d

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.uoanim.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 31 03:04:07 2008
@@ -90,7 +90,7 @@
 	self.fCamPosZLoc =3D zloc or 0
 	local px,py,pz =3D Quaternion.ApplyToVector(0,0,self.fCamDist,unpack(self=
.qCamRot))
 	local x,y,z =3D self:UOPosToLocal(xloc,yloc,zloc or 0)
-	GetMainCam():SetPos(px+x,py+y,pz+z)
+	GetMainCam():SetPos(px+x,py+y,pz+z*0.1)
 end
 =

 function Renderer2D:CamStep						() =


Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sat May 31 03:04:07 2008
@@ -3,45 +3,35 @@
 kSq2			=3D math.sqrt(2)
 k2D_ScaleH		=3D kSq2 / 44
 k2D_ScaleW05	=3D 0.5 / 44 -- 0.5 : applied left and right
+k2D_MobileZAdd	=3D 0.0
 =

 -- main updater, create, position ...
 function Renderer2D:UpdateMobile				(mobile) =

 	local gfx =3D mobile.gfx2d
 	if (not gfx) then
-		local iModelID,iAnimID =3D 401,0
-		local iHue =3D 0x03F4 -- human skin hue (0x83F4=3D33780, but 0x8* is par=
tial hue and turned out all gray here)
-		--~ local iHue =3D 0
+		local iModelID,iAnimID =3D mobile.artid,0 -- 401,0
+		local iHue =3D mobile.hue -- 0x03F4 : human skin hue (0x83F4=3D33780, bu=
t 0x8* is partial hue and turned out all gray here)
 	=

 		gfx =3D CreateRootGfx3D()
 		mobile.gfx2d =3D gfx
 		gfx:SetSimpleRenderable()
 		=

 		local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

-		local animinfo =3D GetAnimDataInfo(iModelID) -- o.miFrames,o.miUnknown,o=
.miCount,o.miFrameInterval,o.miFrameStart
-		gfx.animinfo =3D animinfo
+		gfx.animinfo =3D GetAnimDataInfo(iModelID) -- o.miFrames,o.miUnknown,o.m=
iCount,o.miFrameInterval,o.miFrameStart
 		gfx.iAnimStartTime =3D Client_GetTicks()
 		gfx.iFrame =3D 0
 		=

-		local o =3D animinfo =

-		--~ print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,=
o.miFrameStart)
-		--animinfo        table: 0x93e5d90        -1      -1      -1      -1
-		--~ for k,v in pairs(o.miFrames) do print("frame",k,v) end -- were all -=
1 =

-
 		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
-		print("gfx.iMaxFrames",gfx.iMaxFrames)
 	end
 	=

-	=

-	=

-	local x,y,z =3D self:UOPosToLocal(mobile.xloc,mobile.yloc,0 or mobile.zlo=
c)
-	print("UpdateMobile",mobile.xloc,mobile.yloc,mobile.zloc,x,y,z)
-	gfx:SetPosition(x,y,z)
-	=

+	local x,y,z =3D self:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zloc)
+	z =3D z + k2D_MobileZAdd
+	gfx:SetPosition(x,y,z*0.1)
 	=

 	DestroyList_Add(mobile.gfx2d,gfx)
 end =

 =

-function Renderer2D:DestroyMobileGfx			(mobile) if (mobile.gfx2d) then Des=
troyList_Destroy(mobile.gfx2d) end end
+function Renderer2D:DestroyMobileGfx			(mobile) if (mobile.gfx2d) then Des=
troyList_Destroy(mobile.gfx2d) mobile.gfx2d =3D nil end end
 =

 function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc ?? called every time when UpdateMobile() is called ..
 =

@@ -80,6 +70,11 @@
 	if true then return end
 	=

 	=

+		--~ local o =3D gfx.animinfo =

+		--~ print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,=
o.miFrameStart)
+		--animinfo        table: 0x93e5d90        -1      -1      -1      -1
+		--~ for k,v in pairs(o.miFrames) do print("frame",k,v) end -- were all -=
1 =

+		=

 	--~ local t =3D Client_GetTicks() - gfx.iAnimStartTime
 	--~ local framedt =3D 200
 	--~ local framecount =3D gfx.iMaxFrames

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 31 03:04:07 2008
@@ -49,8 +49,7 @@
 	-- TODO : self:CombatGuiStep() ?
 	-- TODO : self:MousePickStep() ?
 	local xloc,yloc,zloc =3D GetPlayerPos()
-	print("playerpos",xloc,yloc,zloc)
-	self:SetCamPos(xloc,yloc)
+	self:SetCamPos(xloc,yloc,zloc)
 end
 =

  =


Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Sat May 31 03:04:07 2008
@@ -10,7 +10,7 @@
 -- todo : mobile : load anim only on demand, e.g. only load walk anim when=
 the mobile actually walks
 -- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
 function Anim2DAtlas_Load (iModelID,iAnimID,iFrame,iHue)
-	iAnimID =3D 0 -- kAnimID_Human_Idle
+	--~ iAnimID =3D 0 -- kAnimID_Human_Idle
 	iFrame =3D 0
 	--~ iHue =3D 0
 	local n =3D iModelID..","..iAnimID..","..iFrame..","..iHue



From no-reply at zwischenwelt.org  Sat May 31 03:41:00 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 31 May 2008 01:41:00 -0000
Subject: [Iris-commit] [IRIS] r2212 - in /trunk/lua: lib.2d.cam.lua
 lib.2d.map.lua lib.2d.mobile.lua lib.2d.renderer.lua lib.uoanim.lua
 lib.uoutils.lua
Message-ID: <20080531014100.99DE41C180F2@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 31 03:40:58 2008
New Revision: 2212

Log:
2d walking

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.uoanim.lua
    trunk/lua/lib.uoutils.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat May 31 03:40:58 2008
@@ -100,12 +100,15 @@
 	end
 	=

 	-- keyboard move cam
-	local dt =3D math.min(Renderer2D.kGoodTicksBetweenFrames/1000,gSecondsSin=
ceLastFrame)
-	local curticks =3D Client_GetTicks()
-	local xloc,yloc =3D self:GetCamPos()
-	local move =3D 16 * dt  * (gKeyPressed[key_lshift] and 8*16 or 1)
-	local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[k=
ey_right] and 1 or 0))
-	local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[key=
_down] and 1 or 0))
-	if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end
+	local bKeyBoardMoveCam =3D false
+	if (bKeyBoardMoveCam) then
+		local dt =3D math.min(Renderer2D.kGoodTicksBetweenFrames/1000,gSecondsSi=
nceLastFrame)
+		local curticks =3D Client_GetTicks()
+		local xloc,yloc =3D self:GetCamPos()
+		local move =3D 16 * dt  * (gKeyPressed[key_lshift] and 8*16 or 1)
+		local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[=
key_right] and 1 or 0))
+		local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[ke=
y_down] and 1 or 0))
+		if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end
+	end
 end
 =


Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Sat May 31 03:40:58 2008
@@ -40,7 +40,7 @@
 	local xloc,yloc =3D self:GetCamPos()
 	local bx,by =3D math.floor(xloc/8 - 0.5),math.floor(yloc/8 - 0.5)
 	if (self.pMapFocusBlockX ~=3D bx or self.pMapFocusBlockY ~=3D by) then =

-		print("Renderer2D:MapStep focus:",bx*8,by*8)
+		--~ print("Renderer2D:MapStep focus:",bx*8,by*8)
 		self.pMapFocusBlockX =3D bx
 		self.pMapFocusBlockY =3D by
 		local r =3D Renderer2D.kMapLoadRad
@@ -170,7 +170,7 @@
 		end
 		=

 		-- if we are out of time, exit for now, and continue loading in the next=
 frame
-		if (bCheckTime and Client_GetTicks() - iBlockLoadTicks > Renderer2D.kMap=
LoadStaticLoadAllowedTicks) then print("k2DMapJob.StaticLoad split") return=
 end
+		if (bCheckTime and Client_GetTicks() - iBlockLoadTicks > Renderer2D.kMap=
LoadStaticLoadAllowedTicks) then return end --  print("k2DMapJob.StaticLoad=
 split")
 	end
 	block.pJob =3D k2DMapJob.StaticGfx
 end

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sat May 31 03:40:58 2008
@@ -8,9 +8,10 @@
 -- main updater, create, position ...
 function Renderer2D:UpdateMobile				(mobile) =

 	local gfx =3D mobile.gfx2d
+	local iModelID,iAnimID =3D mobile.artid,0 -- 401,0
+	local iHue =3D BitwiseAND(mobile.hue,0x7fff) -- 0x03F4 : human skin hue (=
0x83F4=3D33780, but 0x8* is partial hue and turned out all gray here)
 	if (not gfx) then
-		local iModelID,iAnimID =3D mobile.artid,0 -- 401,0
-		local iHue =3D mobile.hue -- 0x03F4 : human skin hue (0x83F4=3D33780, bu=
t 0x8* is partial hue and turned out all gray here)
+		--~ print("Renderer2D:UpdateMobile artid,iHue",mobile.artid,sprintf("%04=
x",iHue))
 	=

 		gfx =3D CreateRootGfx3D()
 		mobile.gfx2d =3D gfx
@@ -27,11 +28,10 @@
 	local x,y,z =3D self:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zloc)
 	z =3D z + k2D_MobileZAdd
 	gfx:SetPosition(x,y,z*0.1)
-	=

-	DestroyList_Add(mobile.gfx2d,gfx)
+	self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
 end =

 =

-function Renderer2D:DestroyMobileGfx			(mobile) if (mobile.gfx2d) then Des=
troyList_Destroy(mobile.gfx2d) mobile.gfx2d =3D nil end end
+function Renderer2D:DestroyMobileGfx			(mobile) if (mobile.gfx2d) then mob=
ile.gfx2d:Destroy() mobile.gfx2d =3D nil end end
 =

 function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc ?? called every time when UpdateMobile() is called ..
 =

@@ -43,7 +43,7 @@
 function Renderer2D:MobileGfxUpdateGeometry (gfx,iModelID,iAnimID,iFrame,i=
Hue)
 	local sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1 =3D A=
nim2DAtlas_Load(iModelID,iAnimID,iFrame,iHue)
 	if (not sMatName) then return end
-	print("MobileGfxUpdateGeometry",sMatName,iWidth,iHeight,iCenterX,iCenterY=
,iFrames,u0,v0,u1,v1)
+	--~ print("MobileGfxUpdateGeometry",sMatName,iWidth,iHeight,iCenterX,iCen=
terY,iFrames,u0,v0,u1,v1)
 	--~ sMatName =3D "BaseWhiteNoLighting"
 	--~ print("MobileGfxUpdateGeometry",iAnimID,iFrame,iWidth,iHeight,iCenter=
X,iCenterY,iFrames)
 	-- MobileGfxUpdateGeometry : cen=3D  12      -11

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 31 03:40:58 2008
@@ -50,6 +50,17 @@
 	-- TODO : self:MousePickStep() ?
 	local xloc,yloc,zloc =3D GetPlayerPos()
 	self:SetCamPos(xloc,yloc,zloc)
+	=

+	=

+	local iDir =3D false
+	if (gKeyPressed[key_left] ) then iDir =3D kUODir_West end
+	if (gKeyPressed[key_right]) then iDir =3D kUODir_East end
+	if (gKeyPressed[key_up   ]) then iDir =3D kUODir_North end
+	if (gKeyPressed[key_down ]) then iDir =3D kUODir_South end
+	if (iDir) then
+		local bRunFlag =3D true
+		WalkStep_WalkInDir(iDir,bRunFlag,true)
+	end
 end
 =

  =


Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Sat May 31 03:40:58 2008
@@ -18,7 +18,7 @@
 	if (o) then return unpack(o) end
 	local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

 	local pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFrame=
ToImage(iRealID,iFrame,iHue)
-	print("Anim2DAtlas_Load",iRealID,iFrame,iHue,"#",pImage,iWidth,iHeight,iC=
enterX,iCenterY,iFrames)
+	--~ print("Anim2DAtlas_Load",iRealID,iFrame,iHue,"#",pImage,iWidth,iHeigh=
t,iCenterX,iCenterY,iFrames)
 	if (not pImage) then print("Anim2DAtlas_Load : dead anim ",iModelID,iAnim=
ID,iFrame,iHue) end
 	if (not pImage) then o =3D {} gAnimAtlasCache[n] =3D o return unpack(o) e=
nd
 		=

@@ -45,7 +45,7 @@
 	=

 	local u0,v0,u1,v1 =3D l,t,r,b
 	o =3D {sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1}
-	print("anim2d",sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1=
,v1)
+	--~ print("anim2d",sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v=
0,u1,v1)
 	gAnimAtlasCache[n] =3D o
 	return unpack(o)
 end

Modified: trunk/lua/lib.uoutils.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoutils.lua (original)
+++ trunk/lua/lib.uoutils.lua Sat May 31 03:40:58 2008
@@ -1,4 +1,13 @@
 -- uo-specific little helpers =

+
+kUODir_North		=3D 0
+kUODir_NorthEast	=3D 1
+kUODir_East			=3D 2
+kUODir_SouthEast	=3D 3
+kUODir_South		=3D 4
+kUODir_SouthWest	=3D 5
+kUODir_West			=3D 6
+kUODir_NorthWest	=3D 7
 =

 =

 -- returns tiletype,zloc
@@ -36,6 +45,8 @@
 	elseif (dir =3D=3D 5 or dir =3D=3D 6 or dir =3D=3D 7) then return -1 -- w=
est
 	else return 0 end
 end
+
+
 function GetDirY (dir) =

 	if (dir =3D=3D 0 or dir =3D=3D 1 or dir =3D=3D 7) then return -1 -- north
 	elseif (dir =3D=3D 3 or dir =3D=3D 4 or dir =3D=3D 5) then return 1 -- so=
uth



From no-reply at zwischenwelt.org  Sat May 31 03:48:27 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 31 May 2008 01:48:27 -0000
Subject: [Iris-commit] [IRIS] r2213 - in /trunk:
 data/base/ui/sd_pd_enemy.png data/base/ui/sd_pd_enemylist_icon_bg.png
 data/base/ui/sd_pd_good.png data/base/ui/sd_pd_murderer.png
 data/base/ui/sd_pd_neutral.png data/base/ui/sd_pd_unknown.png
 plugins/hudenemylist.lua
Message-ID: <20080531014827.EF8571C180F1@zwischenwelt.org>

Author: hagish
Date: Sat May 31 03:48:27 2008
New Revision: 2213

Log:
improved enemylist

Modified:
    trunk/data/base/ui/sd_pd_enemy.png
    trunk/data/base/ui/sd_pd_enemylist_icon_bg.png
    trunk/data/base/ui/sd_pd_good.png
    trunk/data/base/ui/sd_pd_murderer.png
    trunk/data/base/ui/sd_pd_neutral.png
    trunk/data/base/ui/sd_pd_unknown.png
    trunk/plugins/hudenemylist.lua

Modified: trunk/data/base/ui/sd_pd_enemy.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/base/ui/sd_pd_enemylist_icon_bg.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/base/ui/sd_pd_good.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/base/ui/sd_pd_murderer.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/base/ui/sd_pd_neutral.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/base/ui/sd_pd_unknown.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/plugins/hudenemylist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/plugins/hudenemylist.lua (original)
+++ trunk/plugins/hudenemylist.lua Sat May 31 03:48:27 2008
@@ -8,7 +8,7 @@
 kPlugin_HudEnemylist_X =3D -170	-- from the right border
 kPlugin_HudEnemylist_Y =3D 230
 -- delta position from icon to first min bar
-kPlugin_HudEnemylist_IconToBar_X =3D 54
+kPlugin_HudEnemylist_IconToBar_X =3D 36
 kPlugin_HudEnemylist_IconToBar_Y =3D 0
 -- delta bar to bar position
 kPlugin_HudEnemylist_Bar_DX =3D 26
@@ -16,11 +16,11 @@
 -- number of bars in x dimension
 kPlugin_HudEnemylist_Bar_CountX =3D 4
 -- border from one block to another
-kPlugin_HudEnemylist_BlockBorder =3D 10
+kPlugin_HudEnemylist_BlockBorder =3D 4
 =

 -- icon size
-kPlugin_HudEnemylist_Icon_W =3D 48
-kPlugin_HudEnemylist_Icon_H =3D 48
+kPlugin_HudEnemylist_Icon_W =3D 32
+kPlugin_HudEnemylist_Icon_H =3D 32
 =

 -- is initialized?
 gPlugin_HudEnemylist_Initialized =3D false
@@ -168,7 +168,7 @@
 =

 =

 -- creates a block + widget with icon and body bars at position x,y
-function Plugin_HudEnemylist_MakeBlock (typename, index, icon_image, body_=
list)
+function Plugin_HudEnemylist_MakeBlock (typename, index, icon_info, body_l=
ist)
 	local parent =3D gPlugin_HudEnemylist_Dialog
 	=

 	local x,y =3D 0,0
@@ -177,21 +177,45 @@
 	=

 	block.index =3D index
 	=

-	block.icon_image =3D icon_image
+	block.icon_info =3D icon_info
 	block.body_list =3D {}
 	block.bar_list =3D {}
 	=

 	block.typename =3D typename
 		=

-	local mat_icon =3D GetPlainTextureMat(icon_image,true)
+	local mat_icon,u1,v1,u2,v2 =3D unpack(icon_info)
+	if mat_icon =3D=3D nil then
+		-- unknown?
+		mat_icon =3D GetPlainTextureMat("sd_pd_unknown.png",true)
+		u1 =3D 0
+		v1 =3D 0
+		u2 =3D 1
+		v2 =3D 1
+	end
 	=

 	-- bg image
-	block.widget_icon_bg =3D guimaker.MakePlane(parent, GetPlainTextureMat("s=
d_pd_enemylist_icon_bg.png",true), x, y, 64, 64)
+	block.widget_icon_bg =3D guimaker.MakePlane(parent, GetPlainTextureMat("s=
d_pd_enemylist_icon_bg.png",true), x, y, 32, 32)
 	block.widget_icon_bg.mbClipChildsHitTest =3D false
 	block.widget_icon_bg.mbIgnoreMouseOver =3D true
 	=

 	-- icon image
-	block.widget_icon =3D guimaker.MakePlane(block.widget_icon_bg, mat_icon, =
2, 2, kPlugin_HudEnemylist_Icon_W, kPlugin_HudEnemylist_Icon_H)
+	local w,h =3D kPlugin_HudEnemylist_Icon_W, kPlugin_HudEnemylist_Icon_H
+	local iw,ih =3D u2-u1, v2-v1
+	local dx,dy =3D 0,0
+		=

+	if iw > ih then
+		-- landscape image ratio
+		h =3D w*ih/iw
+		dy =3D math.floor((kPlugin_HudEnemylist_Icon_H - h)/2)
+	else
+		-- portrait image ratio
+		w =3D iw*h/ih
+		dx =3D math.floor((kPlugin_HudEnemylist_Icon_W - w)/2)
+	end
+	=

+	block.widget_icon =3D guimaker.MakePlane(block.widget_icon_bg, mat_icon, =
0, 0, w,h)
+	block.widget_icon.gfx:SetUV(u1,v1,u2,v2)
+	block.widget_icon.gfx:SetPos(dx,dy)
 	block.widget_icon.mbIgnoreMouseOver =3D true
 	=

 	-- root widget for later movement
@@ -362,7 +386,10 @@
 		local image =3D gTypenameToIcon[typename]
 		if not image then image =3D "sd_pd_unknown.png" end
 		=

-		block =3D Plugin_HudEnemylist_MakeBlock(typename,index,image,{})
+		local sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1 =3D =
Anim2DAtlas_Load(typename,2,0,0)
+		local image_info =3D {sMatName,u0,v0,u1,v1}
+		=

+		block =3D Plugin_HudEnemylist_MakeBlock(typename,index,image_info,{})
 		gPlugin_HudEnemylist_Blocks[typename] =3D block
 		=

 		-- update positions
@@ -467,9 +494,12 @@
 }
 	=

 function Plugin_GetMobileTypeName	(obj)
+	return obj.artid
+	--[[
 	local n =3D obj.notoriety
 	if n and gNotorietyToTypename[n] then return gNotorietyToTypename[n] end
 	return "not_"..n
+	]]
 end
 =

 RegisterListener("Hook_Object_CreateMobile",function (obj)



From no-reply at zwischenwelt.org  Sat May 31 03:48:56 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 31 May 2008 01:48:56 -0000
Subject: [Iris-commit] [IRIS] r2214 - in /trunk/lua: lib.2d.renderer.lua
	lib.artatlas.lua
Message-ID: <20080531014856.6E1351C180F1@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 31 03:48:53 2008
New Revision: 2214

Log:
2d:diagonal-walk

Modified:
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.artatlas.lua

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 31 03:48:53 2008
@@ -52,11 +52,13 @@
 	self:SetCamPos(xloc,yloc,zloc)
 	=

 	=

-	local iDir =3D false
-	if (gKeyPressed[key_left] ) then iDir =3D kUODir_West end
-	if (gKeyPressed[key_right]) then iDir =3D kUODir_East end
-	if (gKeyPressed[key_up   ]) then iDir =3D kUODir_North end
-	if (gKeyPressed[key_down ]) then iDir =3D kUODir_South end
+	local dx =3D 0
+	local dy =3D 0
+	if (gKeyPressed[key_left] ) then dx =3D dx + 1 end
+	if (gKeyPressed[key_right]) then dx =3D dx - 1 end
+	if (gKeyPressed[key_up   ]) then dy =3D dy - 1 end
+	if (gKeyPressed[key_down ]) then dy =3D dy + 1 end
+	local iDir =3D DirFromLocalDxDy(dx,dy) =

 	if (iDir) then
 		local bRunFlag =3D true
 		WalkStep_WalkInDir(iDir,bRunFlag,true)

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Sat May 31 03:48:53 2008
@@ -1,7 +1,7 @@
 -- loads artid graphics to one or multiple texture-atlases
 -- can also reorganizes atlases as needed with locking/unlocking system
 =

-gArtAtlasSize =3D 512
+gArtAtlasSize =3D 512*2
 gLastArtAtlas =3D nil
 gArtAtlasCache =3D {}
 kArtAtlasDebugDumpAtlas =3D false



From no-reply at zwischenwelt.org  Sat May 31 04:25:07 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 31 May 2008 02:25:07 -0000
Subject: [Iris-commit] [IRIS] r2215 - in /trunk/lua: lib.2d.dynamic.lua
 lib.2d.mobile.lua lib.2d.renderer.lua lib.artatlas.lua
Message-ID: <20080531022508.C6F051C180F2@zwischenwelt.org>

Author: ghoulsblade
Date: Sat May 31 04:25:04 2008
New Revision: 2215

Log:
2d dynamics

Added:
    trunk/lua/lib.2d.dynamic.lua
Modified:
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.artatlas.lua

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sat May 31 04:25:04 2008
@@ -3,7 +3,6 @@
 kSq2			=3D math.sqrt(2)
 k2D_ScaleH		=3D kSq2 / 44
 k2D_ScaleW05	=3D 0.5 / 44 -- 0.5 : applied left and right
-k2D_MobileZAdd	=3D 0.0
 =

 -- main updater, create, position ...
 function Renderer2D:UpdateMobile				(mobile) =

@@ -26,7 +25,6 @@
 	end
 	=

 	local x,y,z =3D self:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zloc)
-	z =3D z + k2D_MobileZAdd
 	gfx:SetPosition(x,y,z*0.1)
 	self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
 end =


Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat May 31 04:25:04 2008
@@ -10,6 +10,7 @@
 dofile(libpath .. "lib.2d.cam.lua")
 dofile(libpath .. "lib.2d.map.lua")
 dofile(libpath .. "lib.2d.mobile.lua")
+dofile(libpath .. "lib.2d.dynamic.lua")
 =

 function Renderer2D:FirstInit ()
 	if (self.bFirstInitDone) then return end
@@ -67,9 +68,6 @@
 =

  =

 function Renderer2D:DestroyMousePickItemBySerial	() end
-function Renderer2D:RemoveDynamicItem				() end
-function Renderer2D:AddDynamicItem					() end
-function Renderer2D:UpdateDynamicItemPos			() end
 function Renderer2D:AddEffect						(effectdata) end
 function Renderer2D:CamKeyDown						(key) end
 function Renderer2D:CamKeyUp						(key) end

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Sat May 31 04:25:04 2008
@@ -6,6 +6,19 @@
 gArtAtlasCache =3D {}
 kArtAtlasDebugDumpAtlas =3D false
 =

+
+-- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,u0,v0,u1,v1 =3D ArtAt=
lasLoadAndLockDirect(iTileTypeID,iHue,pLockKeeper)
+-- immediately load material, useful for dynamics
+function ArtAtlasLoadAndLockDirect (iTileTypeID,iHue,pLockKeeper)
+	local o =3D ArtAtlasLoadAndLock(iTileTypeID,iHue,pLockKeeper)
+	if (not o) then return end
+	local sMatName =3D ArtAtlasLoadMaterial(o.atlas)
+	local iCenterX,iCenterY =3D o.w/2,o.h-22
+	return sMatName,o.w,o.h,iCenterX,iCenterY,o.u0,o.v0,o.u1,o.v1
+end
+
+
+-- material is not immediately loaded, useful for statics
 function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)
 	local n =3D iTileTypeID.."_"..iHue
 	local o =3D gArtAtlasCache[n] =




