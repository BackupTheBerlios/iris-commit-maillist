From no-reply at zwischenwelt.org  Mon Sep  1 17:48:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Sep 2008 15:48:31 -0000
Subject: [Iris-commit] [IRIS] r2430 - in /trunk/lua: lib.3d.dynamic.lua
	lib.3d.mousepick.lua
Message-ID: <20080901154831.0DBBA1C18695@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep  1 17:48:30 2008
New Revision: 2430

Log:
fixed cavefloor mousepicking

Modified:
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.mousepick.lua

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Mon Sep  1 17:48:30 2008
@@ -632,6 +632,11 @@
 end
 ]]--
 =

+function AddGfxQuadListVertex (gfx,myquad, x,y,z,u,v) =

+	gfx:RenderableVertex(x,y,z,u,v)
+	table.insert(myquad,{x,y,z})
+end
+
 gArtBillBoardCache =3D {}
 function Renderer3D:CreateArtBillBoard( gfx, iArtID, iHue, bShowDebugBoxIn=
stead )
 	bShowDebugBoxInstead =3D bShowDebugBoxInstead or false
@@ -697,6 +702,7 @@
 		end
 	end
 	=

+	=

 	-- set billboard
 	if matname then
 	=

@@ -713,10 +719,12 @@
 			local dy =3D -0.5
 			=

 			gfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
-			gfx:RenderableVertex( 1+dx,0+dy,dz, tw,0)
-			gfx:RenderableVertex( 1+dx,1+dy,dz, 0,th)
-			gfx:RenderableVertex( 0+dx,0+dy,dz, r,th)
-			gfx:RenderableVertex( 0+dx,1+dy,dz, tw,b)
+			local myquad =3D {}
+			gfx.customquads =3D {myquad}
+			AddGfxQuadListVertex(gfx,myquad, 1+dx,0+dy,dz, tw,0)
+			AddGfxQuadListVertex(gfx,myquad, 1+dx,1+dy,dz, 0,th)
+			AddGfxQuadListVertex(gfx,myquad, 0+dx,0+dy,dz, r,th)
+			AddGfxQuadListVertex(gfx,myquad, 0+dx,1+dy,dz, tw,b)
 			gfx:RenderableIndex3(0,1,2)
 			gfx:RenderableIndex3(1,3,2)
 			=


Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Mon Sep  1 17:48:30 2008
@@ -106,7 +106,7 @@
 	=

 	=

 	-- terrain
-	if self.map3d_spawners and self.map3d_spawners.terrain then
+	if self.map3d_spawners and self.map3d_spawners.terrain and Renderer3D.gbB=
lendOutTerrainVisible then
 		self.map3d_spawners.terrain:ForAllBlocks(function(block)
 			if block.gfx_terrain and block.gfx_terrain:IsAlive() then
 				local x,y,w,h =3D block:GetAABB()
@@ -157,11 +157,15 @@
 	end
 	=

 	-- statics
+	local numgfx =3D 0
+	local numcustomquads =3D 0
 	if self.map3d_spawners and self.map3d_spawners.statics then
 		self.map3d_spawners.statics:ForAllBlocks(function(block)
 			block:ForAllEntities(function(entity)
 				if (not entity.zloc) then print("mousepick warning, static entity has =
no zloc",entity.serial,entity.artid) end
 				if (Renderer3D:IsZLayerVisible(entity.zloc)) then -- zloc is in intege=
r tilecoords from uo
+					=

+					if (entity.gfx) then numgfx =3D numgfx + 1 end
 					if (entity.gfx and entity.gfx.billboard) then
 						-- fallback
 						local x,y,z =3D entity.gfx.billboard:GetDerivedPosition()
@@ -177,6 +181,17 @@
 							entity.x,entity.y,entity.z,
 							entity.qw,entity.qx,entity.qy,entity.qz,
 							entity.sx,entity.sy,entity.sz)
+					elseif (entity.gfx and entity.gfx.customquads) then
+						numcustomquads =3D numcustomquads + 1
+						--~ print("mousepick : entity.customquads",entity.x,entity.y,entity.=
z)
+						for k,quad in pairs(entity.gfx.customquads) do =

+							local x1,y1,z1 =3D unpack(quad[1])
+							local x2,y2,z2 =3D unpack(quad[2])
+							local x3,y3,z3 =3D unpack(quad[3])
+							local x4,y4,z4 =3D unpack(quad[4])
+							local dist =3D RayPickFace4(x1,y1,z1, x2,y2,z2, x3,y3,z3, x4,y4,z4,=
 entity.x,entity.y,entity.z, rx,ry,rz, rvx,rvy,rvz)
+							bHit,fHitDist =3D dist ~=3D nil,dist =

+						end
 					end
 					if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickF=
oundDist)) then
 						self.gMousePickFoundDist =3D fHitDist
@@ -189,7 +204,11 @@
 			end)
 		end)
 	end
-
+	=

+	if ((not gCustomQuadInfoWritten) and numcustomquads > 300) then
+		gCustomQuadInfoWritten =3D true
+		print("mousepick info numgfx=3D",numgfx,"numcustomquads=3D",numcustomqua=
ds," (each has its own scenenode)")
+	end
 	--[[
 	for chunky,row in pairs(self.gMapChunks) do
 		for chunkx,chunk in pairs(row) do



From no-reply at zwischenwelt.org  Mon Sep  1 19:37:18 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Sep 2008 17:37:18 -0000
Subject: [Iris-commit] [IRIS] r2431 - in /trunk/lua: lib.3d.cam.lua
 lib.3d.map.lua lib.3d.renderer.lua
Message-ID: <20080901173718.CDEA01C186A4@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep  1 19:37:18 2008
New Revision: 2431

Log:
disabled blendout in free-cam-mode

Modified:
    trunk/lua/lib.3d.cam.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/lua/lib.3d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.cam.lua (original)
+++ trunk/lua/lib.3d.cam.lua Mon Sep  1 19:37:18 2008
@@ -124,6 +124,12 @@
 end
 =

 function Renderer3D:IsFirstPersonCam () return self.gCamMode =3D=3D self.k=
CamMode_Ego end
+
+function Renderer3D:CamModeAllowsBlendout () =

+	if (self.gCamMode =3D=3D self.kCamMode_Ego) then return false end
+	if (self.gCamMode =3D=3D self.kCamMode_FreeMove) then return false end
+	return true
+end
 =

 function Renderer3D:CamChangeZoom (add) =

 	if (self.gCamMode ~=3D self.kCamMode_Third) then return end

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Mon Sep  1 19:37:18 2008
@@ -103,8 +103,8 @@
 	local bTerrainVisible =3D true
 	local zloc_roof =3D nil -- becomes the minimum of the statics above the p=
layer
 	=

-	-- only blend out if not in first person mode
-	if (not Renderer3D:IsFirstPersonCam()) then =

+	-- only blend out if not in first person mode or in freecam
+	if (Renderer3D:CamModeAllowsBlendout()) then =

 		=

 		-- check ground
 		local iPlayerGroundTileType,iPlayerGroundZLoc =3D GetAbsTile(x,y) =


Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Mon Sep  1 19:37:18 2008
@@ -129,7 +129,8 @@
 =

 -- for hotkey
 function Renderer3D:OfflineTeleportToMouse()
-	gTileFreeWalk:SetPos_All(self:LocalToUOPos(gTileFreeWalk:RoundPos(gTileFr=
eeWalk:MousePickPos())))
+	local rx,ry,rz =3D gTileFreeWalk:RoundPos(gTileFreeWalk:MousePickPos())
+	gTileFreeWalk:SetPos_All(self:LocalToUOPos(rx,ry,rz*10))
 end
 =

 -- used by MacroRead_GetPlayerPosition when no playermobile found (yet)



From no-reply at zwischenwelt.org  Mon Sep  1 19:42:59 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Sep 2008 17:42:59 -0000
Subject: [Iris-commit] [IRIS] r2432 - in /trunk/lua: lib.3d.mousepick.lua
	lib.3d.tilebatch.lua
Message-ID: <20080901174300.395871C186A4@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep  1 19:42:57 2008
New Revision: 2432

Log:
disabled mousepicking for not yet completely loaded staics

Modified:
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.3d.tilebatch.lua

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Mon Sep  1 19:42:57 2008
@@ -162,6 +162,7 @@
 	if self.map3d_spawners and self.map3d_spawners.statics then
 		self.map3d_spawners.statics:ForAllBlocks(function(block)
 			block:ForAllEntities(function(entity)
+				if (not entity.bLoaded) then return end
 				if (not entity.zloc) then print("mousepick warning, static entity has =
no zloc",entity.serial,entity.artid) end
 				if (Renderer3D:IsZLayerVisible(entity.zloc)) then -- zloc is in intege=
r tilecoords from uo
 					=


Modified: trunk/lua/lib.3d.tilebatch.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.tilebatch.lua (original)
+++ trunk/lua/lib.3d.tilebatch.lua Mon Sep  1 19:42:57 2008
@@ -110,7 +110,7 @@
 	self.mNextKey =3D self.mNextKey + 1
 	=

 	self:PreCreateStatic(iTileTypeID,iHue)
-	self.lStaticTiles[k] =3D {rawdata=3D{iTileTypeID,iX,iY,iZ,iHue}}
+	self.lStaticTiles[k] =3D {rawdata=3D{iTileTypeID,iX,iY,iZ,iHue},bLoaded=
=3Dfalse}
 	=

 	return k
 end
@@ -163,6 +163,7 @@
 	-- FILTER: correction
 	entity.xadd,entity.yadd,entity.zadd =3D FilterPositionXYZ(iTileTypeID)
 =

+	entity.bLoaded =3D true
 	entity.xloc =3D iXLoc + entity.xadd
 	entity.yloc =3D iYLoc + entity.yadd
 	entity.zloc =3D iZLoc + entity.zadd -- in tilecoords from uo



From no-reply at zwischenwelt.org  Mon Sep  1 19:52:11 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Sep 2008 17:52:11 -0000
Subject: [Iris-commit] [IRIS] r2433 - /trunk/lua/lib.mainmenu.lua
Message-ID: <20080901175217.CBB621C186A6@zwischenwelt.org>

Author: hagish
Date: Mon Sep  1 19:51:57 2008
New Revision: 2433

Log:
sets offline mode starting z position to terrain height

Modified:
    trunk/lua/lib.mainmenu.lua

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Mon Sep  1 19:51:57 2008
@@ -110,13 +110,20 @@
 		x,y,z =3D tonumber(t1) and -tonumber(t1) or x, tonumber(t2) or y, tonumb=
er(t3) or z
 		print("StartOfflineMode ",x,y,z,t1,t2,t3)
 	end
-	=

+		=

 	gCurrentRenderer:InitLocalCam(x,y,z)
 =

 	-- Binds key and Inits all InGame-Data
 	StartInGame() -- otherwise handled by the serverpacket (kPacket_Login_Com=
plete)
+
+	-- set z position to terrainheight at starting location
+	local tt,zz =3D GetGroundAtAbsPos(-x,y)
+	if zz then
+		print("#",x,y,tt,z,zz) =

+		z =3D zz
+	end
+
 	gCurrentRenderer:SetOfflineStartPos(x,y,z)
-	=

 =

 	-- offline : tilefree walk teleport
 	BindDown("f6",function () gCurrentRenderer:OfflineTeleportToMouse() end)



From no-reply at zwischenwelt.org  Tue Sep  2 01:10:21 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Sep 2008 23:10:21 -0000
Subject: [Iris-commit] [IRIS] r2434 - in /trunk/lua: lib.3d.renderer.lua
 lib.mainmenu.lua net/net.effect.lua
Message-ID: <20080902000004.43C771C1867E@zwischenwelt.org>

Author: hagish
Date: Tue Sep  2 01:10:20 2008
New Revision: 2434

Log:
improved effect handling and added some missing specialcases in the effect =
packet

Modified:
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.mainmenu.lua
    trunk/lua/net/net.effect.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Tue Sep  2 01:10:20 2008
@@ -278,8 +278,8 @@
 =

 	if ((strShadowTechnique =3D=3D "stencil_modulative") or (strShadowTechniq=
ue =3D=3D "stencil_additive")) then
 		----- currently doesn't work with Fastbatch
-		--OgreSetShadowFarDistance(shadowfardist)
-		--OgreShadowTechnique(strShadowTechnique)
+		OgreSetShadowFarDistance(shadowfardist)
+		OgreShadowTechnique(strShadowTechnique)
 	elseif ((strShadowTechnique =3D=3D "texture_modulative") or (strShadowTec=
hnique =3D=3D "texture_additive")) then
 		OgreSetShadowTextureCount(8)				-- first mention the count (one texture =
for one lightsource)
 		OgreSetShadowTextureSize(1024)				-- then the texsize
@@ -405,7 +405,8 @@
 =

 -- effects can have a ttl (time-to-live, effect.ttl in milliseconds, defau=
lt is gParticleEffectDefaultTTL in ms)
 gParticleEffectDefaultTTL =3D 10 * 1000
-gParticleEffectDefaultSpeed =3D 0.1
+-- time that an effect needs to move from source to destination inseconds
+gParticleEffectDefaultMoveDuration =3D 0.5
 gParticleEffects =3D {}
 gParticleEffects[StandardEffect]=3D { etype=3D0, name=3D"bluering", relx=
=3D0.5, rely=3D0.5, relz=3D0.1, scalex=3D1, scaley=3D1, scalez=3D1 }
 gParticleEffects[Fireball]		=3D { etype=3D0, name=3D"Large Fireball", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
@@ -435,7 +436,7 @@
 								gParticleEffects[effect.itemid].relx, gParticleEffects[effect.item=
id].rely, gParticleEffects[effect.itemid].relz,
 								gParticleEffects[effect.itemid].scalex, gParticleEffects[effect.it=
emid].scaley, gParticleEffects[effect.itemid].scalez)
 	elseif ( effect.huedeffect ) then
-		workingeffect =3D Renderer3D:AddHuedEffect( effect, 1, 0, 0 )
+		workingeffect =3D Renderer3D:AddHuedMeshEffect( effect, 1, 0, 0 )
 	end
 =

 	-- if it's no huedeffect or no particle effect is defined, use a standard=
 particle effect
@@ -446,9 +447,76 @@
 	end
 end
 =

+function Renderer3D:ParticleEffectHelper	(effect, relx, rely, relz)
+	local sx,sy,sz =3D self:UOPosToLocal(effect.current_locx + relx,effect.cu=
rrent_locy + rely,effect.current_locz * 0.1 + relz)
+	local dx,dy,dz =3D self:UOPosToLocal(effect.target_locx + relx,effect.tar=
get_locy + rely,effect.target_locz * 0.1 + relz)
+
+	effect.gfx:SetPosition(sx,sy,sz)
+
+	InvokeLater(effect.ttl or gParticleEffectDefaultTTL, function ()
+		-- destroy effect after timeout
+		printdebug("effect","destroy effect")
+		if effect and effect.gfx:IsAlive() then
+			effect.gfx:Destroy()
+			effect =3D nil
+		end
+	end)
+	=

+	printdebug("effect",vardump(effect))
+
+	if effect.effect_type =3D=3D kEffectType_FromSourceToDest then
+		local t =3D gParticleEffectDefaultMoveDuration
+		local startt =3D gMyTicks
+	=

+		--~ ...SetPath(totaltime,looped,linear,{t,{p=3D{x,y,z},s=3D{x,y,z},r=3D{=
w,x,y,z}}, ...})   =

+		effect.gfx:SetPath(t,false,true,{0,{p=3D{sx,sy,sz}},t,{p=3D{dx,dy,dz}}})
+		=

+		-- add stepper to handle effect movement
+		RegisterStepper(function()
+			if not effect or not effect.gfx:IsAlive() then
+				-- i am dead so stop this
+				return true
+			end
+			=

+			effect.gfx:SetAnimTimePos((gMyTicks-startt) / 1000)
+		end)
+	elseif effect.effect_type =3D=3D kEffectType_LightningStrikeAtSource then
+		-- TODO
+	elseif effect.effect_type =3D=3D kEffectType_FollowSource then
+		-- add stepper to handle effect movement
+		=

+		local m =3D GetMobile(effect.sourceserial)
+		local dx,dy,dz =3D self:UOPosToLocal(m.xloc + relx,m.yloc + rely,m.zloc =
* 0.1 + relz)
+		local px,py,pz =3D self:UOPosToLocal(effect.current_locx + relx,effect.c=
urrent_locy + rely,effect.current_locz * 0.1 + relz)
+		=

+		RegisterStepper(function()
+			if not effect or not effect.gfx:IsAlive() then
+				-- i am dead so stop this
+				return true
+			end
+			=

+			local m =3D GetMobile(effect.sourceserial)
+			if m then
+				local dx,dy,dz =3D self:UOPosToLocal(m.xloc + relx,m.yloc + rely,m.zlo=
c * 0.1 + relz)
+				effect.gfx:SetPosition(dx,dy,dz)
+			end
+		end)
+	end
+	=

+	return true
+end
+
+--~ kEffectType_FromSourceToDest =3D 0
+--~ kEffectType_LightningStrikeAtSource =3D 1
+--~ kEffectType_StayAtCurrentPosition =3D 2
+--~ kEffectType_FollowSource =3D 3
+
 -- Hued Effect : to display Meshes as instant Effects
-function Renderer3D:AddHuedEffect( effect, relx, rely, relz )
+function Renderer3D:AddHuedMeshEffect( effect, relx, rely, relz )
 	local meshname =3D GetMeshName(effect.itemid)
+
+	printdebug("effect",sprintf("Create ParticleEffect with Meshname=3D%s Par=
ticleID=3D0x%04x.\n",meshname,effect.itemid) )
+
 	if (meshname and meshname ~=3D false) then
 		effect.gfx =3D CreateRootGfx3D()
 		effect.gfx:SetMesh(meshname)
@@ -466,184 +534,25 @@
 		-- position adjustment for statics and dynamics
 		effect.xadd,effect.yadd,effect.zadd =3D FilterPositionXYZ(effect.itemid)
 =

-		effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,
-												 effect.current_locy + rely,
-												 effect.current_locz * 0.1 + relz))
-
-		printdebug("effect",sprintf("Create HuedEffect with Mesh=3D%s MeshID=3D0=
x%04x.\n",meshname,effect.itemid) )
-
-		InvokeLater(effect.ttl or gParticleEffectDefaultTTL, function ()
-			-- destroy effect after timeout
-			printdebug("effect","destroy effect")
-			if effect and effect.gfx:IsAlive() then
-				effect.gfx:Destroy()
-				effect =3D nil
-			end
-		end)
-
-		printdebug("effect",vardump(effect))
-
-		if =

-			effect.current_locx ~=3D effect.target_locx or
-			effect.current_locy ~=3D effect.target_locy or
-			effect.current_locz ~=3D effect.target_locz
-		then
-			-- add stepper to handle effect movement
-			RegisterStepper(function()
-				if not effect or not effect.gfx:IsAlive() then
-					-- i am dead so stop this
-					return true
-				end
-				=

-				if =

-					-- distance from current position to target lower then 0.1
-					math.abs(effect.current_locx - effect.target_locx) < 0.1 and
-					math.abs(effect.current_locy - effect.target_locy) < 0.1 and
-					math.abs(effect.current_locz - effect.target_locz) < 0.1
-				then
-					-- stop moving
-					printdebug("effect","DEBUG STOP")
-					effect.gfx:Destroy()
-					effect =3D nil
-					return true
-				else
-					-- move
-					=

-					-- current -> target
-					local dx =3D effect.target_locx - effect.current_locx
-					local dy =3D effect.target_locy - effect.current_locy
-					local dz =3D effect.target_locz - effect.current_locz
-					-- to target
-					local len =3D math.sqrt(dx*dx + dy*dy + dz*dz)
-					=

-					local speed =3D effect.speed or gParticleEffectDefaultSpeed
-					=

-					local fps_factor =3D 1 / OgreAvgFPS()
-					local uo_speed_factor =3D 5
-					=

-					-- adjust movement vector
-					dx =3D dx / len * speed * fps_factor * uo_speed_factor
-					dy =3D dy / len * speed * fps_factor * uo_speed_factor
-					dz =3D dz / len * speed * fps_factor * uo_speed_factor
-					-- new motified len
-					local len2 =3D math.sqrt(dx*dx + dy*dy + dz*dz)
-				=

-					if ( len2 > len ) then
-						-- reached the end or "missed"
-						effect.current_locx =3D effect.target_locx
-						effect.current_locy =3D effect.target_locy
-						effect.current_locz =3D effect.target_locz
-					else 			=

-						-- move
-						effect.current_locx =3D effect.current_locx + dx =

-						effect.current_locy =3D effect.current_locy + dy
-						effect.current_locz =3D effect.current_locz + dz
-					end
-					=

-					--~ print("=3D=3D=3D=3D=3D DEBUG =3D=3D=3D=3D=3D")
-					--~ print("DEBUG dx,dy,dz",dx,dy,dz)
-					--~ print("DEBUG len,speed,fps",len,speed,fps_factor)
-					--~ print("DEBUG current",effect.current_locx,effect.current_locy,eff=
ect.current_locz)
-					=

-					effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,e=
ffect.current_locy + rely,effect.current_locz * 0.1 + relz))
-				end
-			end)
-		end
-		return true
-	else
-		printdebug("effect",sprintf("Hued Paricle effect failed MeshID=3D0x%04x =
not found.\n",effect.itemid) )
-	end
-	return nil
+		--~ effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,
+												 --~ effect.current_locy + rely,
+												 --~ effect.current_locz * 0.1 + relz))
+
+		return self:ParticleEffectHelper(effect, relx, rely, relz)
+	end
 end
 =

 -- Particle Effect : to display Particles as instant Effects
 function Renderer3D:AddParticleEffect( effect, particlename, relx, rely, r=
elz, scalex, scaley, scalez)
 	printdebug("effect",sprintf("Create ParticleEffect with Particlename=3D%s=
 ParticleID=3D0x%04x.\n",particlename,effect.itemid) )
+
 	effect.gfx=3DCreateRootGfx3D()
 	effect.gfx:SetParticleSystem(particlename)
 	effect.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
-	effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,effec=
t.current_locy + rely,effect.current_locz * 0.1 + relz))
 	effect.gfx:SetScale( scalex or 1, scaley or 1, scalez or 1)
 	effect.gfx:SetNormaliseNormals(true)
 =

-	InvokeLater(effect.ttl or gParticleEffectDefaultTTL, function ()
-		-- destroy effect after timeout
-		printdebug("effect","destroy effect")
-		if effect and effect.gfx:IsAlive() then
-			effect.gfx:Destroy()
-			effect =3D nil
-		end
-	end)
-	=

-	printdebug("effect",vardump(effect))
-
-	if =

-		effect.current_locx ~=3D effect.target_locx or
-		effect.current_locy ~=3D effect.target_locy or
-		effect.current_locz ~=3D effect.target_locz
-	then
-		-- add stepper to handle effect movement
-		RegisterStepper(function()
-			if not effect or not effect.gfx:IsAlive() then
-				-- i am dead so stop this
-				return true
-			end
-			=

-			if =

-				-- distance from current position to target lower then 0.1
-				math.abs(effect.current_locx - effect.target_locx) < 0.1 and
-				math.abs(effect.current_locy - effect.target_locy) < 0.1 and
-				math.abs(effect.current_locz - effect.target_locz) < 0.1
-			then
-				-- stop moving
-				printdebug("effect","DEBUG STOP")
-				effect.gfx:Destroy()
-				effect =3D nil
-				return true
-			else
-				-- move
-				=

-				-- current -> target
-				local dx =3D effect.target_locx - effect.current_locx
-				local dy =3D effect.target_locy - effect.current_locy
-				local dz =3D effect.target_locz - effect.current_locz
-				-- to target
-				local len =3D math.sqrt(dx*dx + dy*dy + dz*dz)
-				=

-				local speed =3D effect.speed or gParticleEffectDefaultSpeed
-				=

-				local fps_factor =3D 1 / OgreAvgFPS()
-				local uo_speed_factor =3D 5
-				=

-				-- adjust movement vector
-				dx =3D dx / len * speed * fps_factor * uo_speed_factor
-				dy =3D dy / len * speed * fps_factor * uo_speed_factor
-				dz =3D dz / len * speed * fps_factor * uo_speed_factor
-				-- new motified len
-				local len2 =3D math.sqrt(dx*dx + dy*dy + dz*dz)
-			=

-				if ( len2 > len ) then
-					-- reached the end or "missed"
-					effect.current_locx =3D effect.target_locx
-					effect.current_locy =3D effect.target_locy
-					effect.current_locz =3D effect.target_locz
-				else 			=

-					-- move
-					effect.current_locx =3D effect.current_locx + dx =

-					effect.current_locy =3D effect.current_locy + dy
-					effect.current_locz =3D effect.current_locz + dz
-				end
-				=

-				--~ print("=3D=3D=3D=3D=3D DEBUG =3D=3D=3D=3D=3D")
-				--~ print("DEBUG dx,dy,dz",dx,dy,dz)
-				--~ print("DEBUG len,speed,fps",len,speed,fps_factor)
-				--~ print("DEBUG current",effect.current_locx,effect.current_locy,effe=
ct.current_locz)
-				=

-				effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,ef=
fect.current_locy + rely,effect.current_locz * 0.1 + relz))
-			end
-		end)
-	end
-	return true
+	return self:ParticleEffectHelper(effect, relx, rely, relz)
 end
 =

 =


Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Tue Sep  2 01:10:20 2008
@@ -119,7 +119,7 @@
 	-- set z position to terrainheight at starting location
 	local tt,zz =3D GetGroundAtAbsPos(-x,y)
 	if zz then
-		print("#",x,y,tt,z,zz) =

+		--~ print("#",x,y,tt,z,zz) =

 		z =3D zz
 	end
 =


Modified: trunk/lua/net/net.effect.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.effect.lua (original)
+++ trunk/lua/net/net.effect.lua Tue Sep  2 01:10:20 2008
@@ -1,3 +1,8 @@
+kEffectType_FromSourceToDest =3D 0
+kEffectType_LightningStrikeAtSource =3D 1
+kEffectType_StayAtCurrentPosition =3D 2
+kEffectType_FollowSource =3D 3
+
 =

 -- Graphical Effect (Hued Art-Gfx / see Tiledata for Animation) - Billboar=
d or 3d Statics?
 function gPacketHandler.kPacket_Hued_FX()	--0xC0
@@ -17,7 +22,7 @@
 	effect.target_locy =3D input:PopNetUint16()
 	effect.target_locz =3D input:PopNetUint8()
 =

-	effect.speed =3D input:PopNetUint8()
+	effect.speed =3D input:PopNetUint8()	-- animation speed?
 	effect.duration =3D input:PopNetUint8()
 	effect.unkown =3D input:PopNetUint16()
 	effect.fixeddirection =3D input:PopNetUint8()		-- fixed duration ??



From no-reply at zwischenwelt.org  Tue Sep  2 01:25:43 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Sep 2008 23:25:43 -0000
Subject: [Iris-commit] [IRIS] r2436 - /trunk/data/shoggoth_patch
Message-ID: <20080902000005.015C51C186A1@zwischenwelt.org>

Author: hagish
Date: Tue Sep  2 01:25:42 2008
New Revision: 2436

Log:
missing particle system changes for shoggoth

Modified:
    trunk/data/shoggoth_patch

Modified: trunk/data/shoggoth_patch
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/shoggoth_patch (original)
+++ trunk/data/shoggoth_patch Tue Sep  2 01:25:42 2008
@@ -1,70 +1,327 @@
-Index: models/atlas/tex_atlas_alpha_ultralow.material
-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
---- models/atlas/tex_atlas_alpha_ultralow.material	(revision 2399)
-+++ models/atlas/tex_atlas_alpha_ultralow.material	(working copy)
-@@ -1,3 +1,5 @@
-+import atlas_base_alpha from textures.material
-+
- material tex_atlas_alpha_ultralow0 : atlas_base_alpha =

- { =

- 	set_texture_alias MainTexture tex_atlas_alpha_ultralow0.dds  =

-Index: models/atlas/tex_atlas_low.material
-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
---- models/atlas/tex_atlas_low.material	(revision 2399)
-+++ models/atlas/tex_atlas_low.material	(working copy)
-@@ -1,3 +1,5 @@
-+import atlas_base from textures.material
-+
- material tex_atlas_low0 : atlas_base =

- { =

- 	set_texture_alias MainTexture tex_atlas_low0.dds  =

-Index: models/atlas/tex_atlas_alpha_med.material
-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
---- models/atlas/tex_atlas_alpha_med.material	(revision 2399)
-+++ models/atlas/tex_atlas_alpha_med.material	(working copy)
-@@ -1,3 +1,5 @@
-+import atlas_base_alpha from textures.material
-+
- material tex_atlas_alpha_med0 : atlas_base_alpha =

- { =

- 	set_texture_alias MainTexture tex_atlas_alpha_med0.dds  =

-Index: models/atlas/tex_atlas_med.material
-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
---- models/atlas/tex_atlas_med.material	(revision 2399)
-+++ models/atlas/tex_atlas_med.material	(working copy)
-@@ -1,3 +1,5 @@
-+import atlas_base from textures.material
-+
- material tex_atlas_med0 : atlas_base =

- { =

- 	set_texture_alias MainTexture tex_atlas_med0.dds  =

-Index: models/atlas/tex_atlas_alpha_low.material
-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
---- models/atlas/tex_atlas_alpha_low.material	(revision 2399)
-+++ models/atlas/tex_atlas_alpha_low.material	(working copy)
-@@ -1,3 +1,5 @@
-+import atlas_base_alpha from textures.material
-+
- material tex_atlas_alpha_low0 : atlas_base_alpha =

- { =

- 	set_texture_alias MainTexture tex_atlas_alpha_low0.dds  =

-Index: models/atlas/tex_atlas_ultralow.material
-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
---- models/atlas/tex_atlas_ultralow.material	(revision 2399)
-+++ models/atlas/tex_atlas_ultralow.material	(working copy)
-@@ -1,3 +1,5 @@
-+import atlas_base from textures.material
-+
- material tex_atlas_ultralow0 : atlas_base =

- { =

- 	set_texture_alias MainTexture tex_atlas_ultralow0.dds  =

-Index: base/ui/ui.material
-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
---- base/ui/ui.material	(revision 2399)
-+++ base/ui/ui.material	(working copy)
+diff --git a/data/base/ui/ui.material b/data/base/ui/ui.material
+index ce53cc1..fe7df7c 100644
+--- a/data/base/ui/ui.material
++++ b/data/base/ui/ui.material
 @@ -1,3 +1,5 @@
 +import guibase from main.material
 +
  material ui_ray_border : guibase
  {
  	set_texture_alias guitex ui/ray_border.png
+diff --git a/data/models/atlas/tex_atlas_alpha_low.material b/data/models/=
atlas/tex_atlas_alpha_low.material
+index 516ca89..a5beb28 100644
+--- a/data/models/atlas/tex_atlas_alpha_low.material
++++ b/data/models/atlas/tex_atlas_alpha_low.material
+@@ -1,3 +1,5 @@
++import atlas_base_alpha from textures.material
++
+ material tex_atlas_alpha_low0 : atlas_base_alpha =

+ { =

+ 	set_texture_alias MainTexture tex_atlas_alpha_low0.dds  =

+diff --git a/data/models/atlas/tex_atlas_alpha_med.material b/data/models/=
atlas/tex_atlas_alpha_med.material
+index 0b665bd..d56e93e 100644
+--- a/data/models/atlas/tex_atlas_alpha_med.material
++++ b/data/models/atlas/tex_atlas_alpha_med.material
+@@ -1,3 +1,5 @@
++import atlas_base_alpha from textures.material
++
+ material tex_atlas_alpha_med0 : atlas_base_alpha =

+ { =

+ 	set_texture_alias MainTexture tex_atlas_alpha_med0.dds  =

+diff --git a/data/models/atlas/tex_atlas_alpha_ultralow.material b/data/mo=
dels/atlas/tex_atlas_alpha_ultralow.material
+index fe4add5..f5fb8db 100644
+--- a/data/models/atlas/tex_atlas_alpha_ultralow.material
++++ b/data/models/atlas/tex_atlas_alpha_ultralow.material
+@@ -1,3 +1,5 @@
++import atlas_base_alpha from textures.material
++
+ material tex_atlas_alpha_ultralow0 : atlas_base_alpha =

+ { =

+ 	set_texture_alias MainTexture tex_atlas_alpha_ultralow0.dds  =

+diff --git a/data/models/atlas/tex_atlas_low.material b/data/models/atlas/=
tex_atlas_low.material
+index 261a3c8..d2dbd6d 100644
+--- a/data/models/atlas/tex_atlas_low.material
++++ b/data/models/atlas/tex_atlas_low.material
+@@ -1,3 +1,5 @@
++import atlas_base from textures.material
++
+ material tex_atlas_low0 : atlas_base =

+ { =

+ 	set_texture_alias MainTexture tex_atlas_low0.dds  =

+diff --git a/data/models/atlas/tex_atlas_med.material b/data/models/atlas/=
tex_atlas_med.material
+index e081688..ad045cb 100644
+--- a/data/models/atlas/tex_atlas_med.material
++++ b/data/models/atlas/tex_atlas_med.material
+@@ -1,3 +1,5 @@
++import atlas_base from textures.material
++
+ material tex_atlas_med0 : atlas_base =

+ { =

+ 	set_texture_alias MainTexture tex_atlas_med0.dds  =

+diff --git a/data/models/atlas/tex_atlas_ultralow.material b/data/models/a=
tlas/tex_atlas_ultralow.material
+index 661efe2..dd6f206 100644
+--- a/data/models/atlas/tex_atlas_ultralow.material
++++ b/data/models/atlas/tex_atlas_ultralow.material
+@@ -1,3 +1,5 @@
++import atlas_base from textures.material
++
+ material tex_atlas_ultralow0 : atlas_base =

+ { =

+ 	set_texture_alias MainTexture tex_atlas_ultralow0.dds  =

+diff --git a/data/particles/particles/ConsecrateWeapon.particle b/data/par=
ticles/particles/ConsecrateWeapon.particle
+index 0dff25a..8d16a76 100644
+--- a/data/particles/particles/ConsecrateWeapon.particle
++++ b/data/particles/particles/ConsecrateWeapon.particle
+@@ -1,4 +1,4 @@
+-ConsecrateWeapon1
++particle_system ConsecrateWeapon1
+ {
+ 	quota	10
+ 	material	Particles/Swords
+@@ -42,7 +42,7 @@ ConsecrateWeapon1
+ }
+ =

+ =

+-ConsecrateWeapon2
++particle_system ConsecrateWeapon2
+ {
+ 	quota	10
+ 	material	Particles/explosion
+diff --git a/data/particles/particles/Fields.particle b/data/particles/par=
ticles/Fields.particle
+index 850cf71..e2041fc 100644
+--- a/data/particles/particles/Fields.particle
++++ b/data/particles/particles/Fields.particle
+@@ -1,5 +1,5 @@
+ =

+-ParalyzeField
++particle_system ParalyzeField
+ {
+ 	quota	50
+ 	material	Particles/FlarePointSprite
+@@ -46,7 +46,7 @@ ParalyzeField
+ }
+ =

+ =

+-PoisonField
++particle_system PoisonField
+ {
+ 	quota	50
+ 	material	Particles/Flare
+@@ -94,7 +94,7 @@ PoisonField
+ }
+ =

+ =

+-FireField
++particle_system FireField
+ {
+ 	quota	50
+ 	material	Particles/explosion
+@@ -141,7 +141,7 @@ FireField
+ }
+ =

+ =

+-Moongate
++particle_system Moongate
+ {
+ 	quota	100
+ 	material	Particles/FlarePointSprite
+diff --git a/data/particles/particles/MindRot.particle b/data/particles/pa=
rticles/MindRot.particle
+index db28f89..6439a86 100644
+--- a/data/particles/particles/MindRot.particle
++++ b/data/particles/particles/MindRot.particle
+@@ -1,5 +1,5 @@
+ =

+-MindRot
++particle_system MindRot
+ {
+ 	quota	10
+ 	material	Particles/Twirl
+diff --git a/data/particles/particles/PainSpike.particle b/data/particles/=
particles/PainSpike.particle
+index 186d190..026b5da 100644
+--- a/data/particles/particles/PainSpike.particle
++++ b/data/particles/particles/PainSpike.particle
+@@ -1,5 +1,5 @@
+ =

+-PainSpike
++particle_system PainSpike
+ {
+ 	quota	10
+ 	material	Particles/bigFlame
+diff --git a/data/particles/particles/PoisonStrike.particle b/data/particl=
es/particles/PoisonStrike.particle
+index 21a3dfa..7d53612 100644
+--- a/data/particles/particles/PoisonStrike.particle
++++ b/data/particles/particles/PoisonStrike.particle
+@@ -1,5 +1,5 @@
+ =

+-PoisonStrike
++particle_system PoisonStrike
+ {
+ 	quota	10
+ 	material	Particles/explosion
+diff --git a/data/particles/particles/Strangle.particle b/data/particles/p=
articles/Strangle.particle
+index 20ecd69..d855972 100644
+--- a/data/particles/particles/Strangle.particle
++++ b/data/particles/particles/Strangle.particle
+@@ -1,5 +1,5 @@
+ =

+-StranglePart1
++particle_system StranglePart1
+ {
+ 	quota	10
+ 	material	Particles/Skull
+@@ -43,7 +43,7 @@ StranglePart1
+ }
+ =

+ =

+-StranglePart2
++particle_system StranglePart2
+ {
+ 	quota	10
+ 	material	Particles/explosion
+diff --git a/data/particles/particles/Wither.particle b/data/particles/par=
ticles/Wither.particle
+index e3675f0..73cf9dd 100644
+--- a/data/particles/particles/Wither.particle
++++ b/data/particles/particles/Wither.particle
+@@ -1,5 +1,5 @@
+ =

+-Wither
++particle_system Wither
+ {
+ 	quota	25
+ 	material	Particles/Flare
+diff --git a/data/particles/particles/explosions.particle b/data/particles=
/particles/explosions.particle
+index b6bff97..ddaf0ec 100644
+--- a/data/particles/particles/explosions.particle
++++ b/data/particles/particles/explosions.particle
+@@ -1,5 +1,5 @@
+ =

+-Explosion
++particle_system Explosion
+ {
+ 	quota	10
+ 	material	Generic/Fire
+diff --git a/data/particles/particles/fireballs.particle b/data/particles/=
particles/fireballs.particle
+index f1a144b..7fb17da 100644
+--- a/data/particles/particles/fireballs.particle
++++ b/data/particles/particles/fireballs.particle
+@@ -1,4 +1,4 @@
+-Large Fireball
++particle_system "Large Fireball"
+ {
+ 	quota	50
+ 	material	Particles/Fireball
+@@ -41,7 +41,7 @@ Large Fireball
+ 	}
+ }
+ =

+-Magic Arrow
++particle_system "Magic Arrow"
+ {
+ 	quota	50
+ 	material	Particles/Fireball
+diff --git a/data/particles/particles/healing.particle b/data/particles/pa=
rticles/healing.particle
+index 3c20531..2be0bc5 100644
+--- a/data/particles/particles/healing.particle
++++ b/data/particles/particles/healing.particle
+@@ -1,5 +1,5 @@
+ =

+-Teleport
++particle_system Teleport
+ {
+ 	quota	100
+ 	material	Particles/Fibres
+@@ -57,7 +57,7 @@ Teleport
+ }
+ =

+ =

+-Healing
++particle_system Healing
+ {
+ 	quota	200
+ 	material	Particles/FlarePointSprite
+diff --git a/data/particles/particles/rings.particle b/data/particles/part=
icles/rings.particle
+index 84bb2f2..8ae9e56 100644
+--- a/data/particles/particles/rings.particle
++++ b/data/particles/particles/rings.particle
+@@ -1,5 +1,5 @@
+ =

+-bluering
++particle_system bluering
+ {
+ 	quota	100
+ 	material	Particles/FlarePointSprite
+diff --git a/data/shoggoth_patch b/data/shoggoth_patch
+index 5ce6598..bb3848c 100644
+--- a/data/shoggoth_patch
++++ b/data/shoggoth_patch
+@@ -1,70 +0,0 @@
+-Index: models/atlas/tex_atlas_alpha_ultralow.material
+-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
+---- models/atlas/tex_atlas_alpha_ultralow.material	(revision 2399)
+-+++ models/atlas/tex_atlas_alpha_ultralow.material	(working copy)
+-@@ -1,3 +1,5 @@
+-+import atlas_base_alpha from textures.material
+-+
+- material tex_atlas_alpha_ultralow0 : atlas_base_alpha =

+- { =

+- 	set_texture_alias MainTexture tex_atlas_alpha_ultralow0.dds  =

+-Index: models/atlas/tex_atlas_low.material
+-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
+---- models/atlas/tex_atlas_low.material	(revision 2399)
+-+++ models/atlas/tex_atlas_low.material	(working copy)
+-@@ -1,3 +1,5 @@
+-+import atlas_base from textures.material
+-+
+- material tex_atlas_low0 : atlas_base =

+- { =

+- 	set_texture_alias MainTexture tex_atlas_low0.dds  =

+-Index: models/atlas/tex_atlas_alpha_med.material
+-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
+---- models/atlas/tex_atlas_alpha_med.material	(revision 2399)
+-+++ models/atlas/tex_atlas_alpha_med.material	(working copy)
+-@@ -1,3 +1,5 @@
+-+import atlas_base_alpha from textures.material
+-+
+- material tex_atlas_alpha_med0 : atlas_base_alpha =

+- { =

+- 	set_texture_alias MainTexture tex_atlas_alpha_med0.dds  =

+-Index: models/atlas/tex_atlas_med.material
+-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
+---- models/atlas/tex_atlas_med.material	(revision 2399)
+-+++ models/atlas/tex_atlas_med.material	(working copy)
+-@@ -1,3 +1,5 @@
+-+import atlas_base from textures.material
+-+
+- material tex_atlas_med0 : atlas_base =

+- { =

+- 	set_texture_alias MainTexture tex_atlas_med0.dds  =

+-Index: models/atlas/tex_atlas_alpha_low.material
+-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
+---- models/atlas/tex_atlas_alpha_low.material	(revision 2399)
+-+++ models/atlas/tex_atlas_alpha_low.material	(working copy)
+-@@ -1,3 +1,5 @@
+-+import atlas_base_alpha from textures.material
+-+
+- material tex_atlas_alpha_low0 : atlas_base_alpha =

+- { =

+- 	set_texture_alias MainTexture tex_atlas_alpha_low0.dds  =

+-Index: models/atlas/tex_atlas_ultralow.material
+-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
+---- models/atlas/tex_atlas_ultralow.material	(revision 2399)
+-+++ models/atlas/tex_atlas_ultralow.material	(working copy)
+-@@ -1,3 +1,5 @@
+-+import atlas_base from textures.material
+-+
+- material tex_atlas_ultralow0 : atlas_base =

+- { =

+- 	set_texture_alias MainTexture tex_atlas_ultralow0.dds  =

+-Index: base/ui/ui.material
+-=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
+---- base/ui/ui.material	(revision 2399)
+-+++ base/ui/ui.material	(working copy)
+-@@ -1,3 +1,5 @@
+-+import guibase from main.material
+-+
+- material ui_ray_border : guibase
+- {
+- 	set_texture_alias guitex ui/ray_border.png



From no-reply at zwischenwelt.org  Tue Sep  2 01:23:34 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Sep 2008 23:23:34 -0000
Subject: [Iris-commit] [IRIS] r2435 - /trunk/lua/lib.3d.renderer.lua
Message-ID: <20080902000004.A9C1B1C1867E@zwischenwelt.org>

Author: hagish
Date: Tue Sep  2 01:23:34 2008
New Revision: 2435

Log:
prepared lightning effect

Modified:
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Tue Sep  2 01:23:34 2008
@@ -431,7 +431,9 @@
 function Renderer3D:AddEffect( effect )
 	local workingeffect =3D nil
 =

-	if (gParticleEffects[effect.itemid]) then
+	if effect.effect_type =3D=3D kEffectType_LightningStrikeAtSource then
+		workingeffect =3D Renderer3D:AddLightningEffect( effect )
+	elseif (gParticleEffects[effect.itemid]) then
 		workingeffect =3D Renderer3D:AddParticleEffect( effect, gParticleEffects=
[effect.itemid].name,
 								gParticleEffects[effect.itemid].relx, gParticleEffects[effect.item=
id].rely, gParticleEffects[effect.itemid].relz,
 								gParticleEffects[effect.itemid].scalex, gParticleEffects[effect.it=
emid].scaley, gParticleEffects[effect.itemid].scalez)
@@ -445,6 +447,15 @@
 								gParticleEffects[StandardEffect].relx, gParticleEffects[StandardEf=
fect].rely, gParticleEffects[StandardEffect].relz,
 								gParticleEffects[StandardEffect].scalex, gParticleEffects[Standard=
Effect].scaley, gParticleEffects[StandardEffect].scalez)
 	end
+end
+
+function Renderer3D:AddLightningEffect	(effect)
+	local sx,sy,sz =3D self:UOPosToLocal(effect.current_locx + relx,effect.cu=
rrent_locy + rely,effect.current_locz * 0.1 + relz)
+	local dx,dy,dz =3D self:UOPosToLocal(effect.target_locx + relx,effect.tar=
get_locy + rely,effect.target_locz * 0.1 + relz)
+
+	-- TODO
+	=

+	return false
 end
 =

 function Renderer3D:ParticleEffectHelper	(effect, relx, rely, relz)
@@ -480,8 +491,6 @@
 			=

 			effect.gfx:SetAnimTimePos((gMyTicks-startt) / 1000)
 		end)
-	elseif effect.effect_type =3D=3D kEffectType_LightningStrikeAtSource then
-		-- TODO
 	elseif effect.effect_type =3D=3D kEffectType_FollowSource then
 		-- add stepper to handle effect movement
 		=

@@ -538,7 +547,7 @@
 												 --~ effect.current_locy + rely,
 												 --~ effect.current_locz * 0.1 + relz))
 =

-		return self:ParticleEffectHelper(effect, relx, rely, relz)
+		return self:ParticleEffectHelper(effect, relx+effect.xadd, rely+effect.y=
add, relz+effect.zadd)
 	end
 end
 =




From no-reply at zwischenwelt.org  Tue Sep  2 10:22:03 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Sep 2008 08:22:03 -0000
Subject: [Iris-commit] [IRIS] r2437 - in /trunk/lua: lib.keybinds.lua
 lib.mousepick.lua lib.tilefreewalk.lua
Message-ID: <20080902082203.BBC741C18695@zwischenwelt.org>

Author: hagish
Date: Tue Sep  2 10:22:02 2008
New Revision: 2437

Log:
improved contenxt menu click handling

Modified:
    trunk/lua/lib.keybinds.lua
    trunk/lua/lib.mousepick.lua
    trunk/lua/lib.tilefreewalk.lua

Modified: trunk/lua/lib.keybinds.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.keybinds.lua (original)
+++ trunk/lua/lib.keybinds.lua Tue Sep  2 10:22:02 2008
@@ -122,24 +122,24 @@
 			end
 		 end end end)
 	=

-		Bind("f2",		function (state) if (not gActiveEditText) then if (state > 0=
) then
-			local mobile =3D GetPlayerMobile()
-			if mobile then
-				local effect =3D {}
-				effect.current_locx =3D mobile.xloc
-				effect.current_locy =3D mobile.yloc
-				effect.current_locz =3D mobile.zloc
-		=

-				effect.target_locx =3D mobile.xloc + 10
-				effect.target_locy =3D mobile.yloc + 1
-				effect.target_locz =3D mobile.zloc + 2
-					=

-				effect.speed =3D 5
-				effect.duration =3D 5
-					=

-				effect.itemid =3D 119--hex2num("0x376A")
-				gCurrentRenderer:AddEffect(effect)
-			end
-		end end end)
+		--~ Bind("f2",		function (state) if (not gActiveEditText) then if (state=
 > 0) then
+			--~ local mobile =3D GetPlayerMobile()
+			--~ if mobile then
+				--~ local effect =3D {}
+				--~ effect.current_locx =3D mobile.xloc
+				--~ effect.current_locy =3D mobile.yloc
+				--~ effect.current_locz =3D mobile.zloc
+		--~ =

+				--~ effect.target_locx =3D mobile.xloc + 10
+				--~ effect.target_locy =3D mobile.yloc + 1
+				--~ effect.target_locz =3D mobile.zloc + 2
+					--~ =

+				--~ effect.speed =3D 5
+				--~ effect.duration =3D 5
+					--~ =

+				--~ effect.itemid =3D 119--hex2num("0x376A")
+				--~ gCurrentRenderer:AddEffect(effect)
+			--~ end
+		--~ end end end)
 	end
 end

Modified: trunk/lua/lib.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mousepick.lua (original)
+++ trunk/lua/lib.mousepick.lua Tue Sep  2 10:22:02 2008
@@ -52,8 +52,12 @@
 =

 -- currently sent on mousedown
 gbMouseLastLeftDownWasTarget =3D false	-- used to handle target on mouse d=
own but dont send context menu then
+gbMouseLastLeftDownWasTargetPositionX =3D 0
+gbMouseLastLeftDownWasTargetPositionY =3D 0
 function IrisLeftClickDown ()
 	gbMouseLastLeftDownWasTarget =3D false
+	gbMouseLastLeftDownWasTargetPositionX, gbMouseLastLeftDownWasTargetPositi=
onY =3D GetMousePos()
+	=

 	if (gTestNoClick) then return end
 	if (IsTargetModeActive()) then =

 		CompleteTargetMode() -- see net/net.cursor.lua
@@ -63,11 +67,17 @@
 =

 function IrisSingleClick ()
 	if (gTestNoClick) then return end
-	if not gbMouseLastLeftDownWasTarget then =

+
+	local x, y =3D GetMousePos()
+
+	if 	=

+		not gbMouseLastLeftDownWasTarget and =

+		len2(sub2(x,y,gbMouseLastLeftDownWasTargetPositionX, gbMouseLastLeftDown=
WasTargetPositionY)) <=3D 2
+	then =

 		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
 		gLastRightClickSerial =3D nil
 		if (iSerial and iSerial ~=3D 0) then =

-			printdebug("net",sprintf("IrisRightClick: serial=3D0x%08x\n",iSerial))
+			printdebug("net",sprintf("IrisContextMenuClick: serial=3D0x%08x\n",iSer=
ial))
 			Send_PopupRequest(iSerial) =

 			gLastRightClickSerial =3D iSerial
 		end

Modified: trunk/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.tilefreewalk.lua (original)
+++ trunk/lua/lib.tilefreewalk.lua Tue Sep  2 10:22:02 2008
@@ -125,7 +125,7 @@
 function gTileFreeWalk:Step	()
 	if (gDisableTileFreeWalk) then return end
 	if (gCurrentRenderer ~=3D Renderer3D) then return end
-	local bWalkInMouseDir	=3D gKeyPressed[key_mouse2] and (not gLastMouseDown=
Widget) and (not gLastRightClickSerial)
+	local bWalkInMouseDir	=3D gKeyPressed[key_mouse2] and (not gLastMouseDown=
Widget)
 	local bWalkForward		=3D (not gActiveEditText) and gKeyPressed[key_up]		=

 	local bWalkBackwards	=3D (not gActiveEditText) and gKeyPressed[key_down]	=

 	local bTurnLeft			=3D (not gActiveEditText) and gKeyPressed[key_left]	=




From no-reply at zwischenwelt.org  Tue Sep  2 16:58:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Sep 2008 14:58:31 -0000
Subject: [Iris-commit] [IRIS] r2438 - /trunk/lua/lib.3d.renderer.lua
Message-ID: <20080902145831.D3B041C1828F@zwischenwelt.org>

Author: hagish
Date: Tue Sep  2 16:58:29 2008
New Revision: 2438

Log:
bugifx: nil pointer

Modified:
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Tue Sep  2 16:58:29 2008
@@ -450,9 +450,6 @@
 end
 =

 function Renderer3D:AddLightningEffect	(effect)
-	local sx,sy,sz =3D self:UOPosToLocal(effect.current_locx + relx,effect.cu=
rrent_locy + rely,effect.current_locz * 0.1 + relz)
-	local dx,dy,dz =3D self:UOPosToLocal(effect.target_locx + relx,effect.tar=
get_locy + rely,effect.target_locz * 0.1 + relz)
-
 	-- TODO
 	=

 	return false



From no-reply at zwischenwelt.org  Tue Sep  2 16:59:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Sep 2008 14:59:46 -0000
Subject: [Iris-commit] [IRIS] r2439 - /trunk/lua/lib.tilefreewalk.lua
Message-ID: <20080902145946.805981C1828F@zwischenwelt.org>

Author: hagish
Date: Tue Sep  2 16:59:44 2008
New Revision: 2439

Log:
bugfix: half speed walking does not work (lshift)

Modified:
    trunk/lua/lib.tilefreewalk.lua

Modified: trunk/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.tilefreewalk.lua (original)
+++ trunk/lua/lib.tilefreewalk.lua Tue Sep  2 16:59:44 2008
@@ -161,9 +161,15 @@
 			self.movediry =3D dy
 			fRequestedSpeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry=
,0) * slowarea_factor
 		end
-		x =3D x + self.movedirx * fRequestedSpeed * gSecondsSinceLastFrame
-		y =3D y + self.movediry * fRequestedSpeed * gSecondsSinceLastFrame
+
+		local maxspeed =3D fRequestedSpeed * gSecondsSinceLastFrame
+		if (bSlowWalk) then maxspeed =3D maxspeed * 0.5 end -- TODO : bSlowWalk-=
speed
+		bRunRequested =3D not bSlowWalk
+
+		x =3D x + self.movedirx * maxspeed
+		y =3D y + self.movediry * maxspeed
 		bMoved =3D true
+
 	elseif gWalkPathToGo then
 		-- stores the path for pathfinding
 		-- the player runs along this path without user interaction



From no-reply at zwischenwelt.org  Wed Sep  3 00:24:25 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Sep 2008 22:24:25 -0000
Subject: [Iris-commit] [IRIS] r2440 - /trunk/lua/lib.uoids.lua
Message-ID: <20080902222426.171A61C18249@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Sep  3 00:24:25 2008
New Revision: 2440

Log:
paperdoll jewelry slots : corrected order and added helmet and necklace

Modified:
    trunk/lua/lib.uoids.lua

Modified: trunk/lua/lib.uoids.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoids.lua (original)
+++ trunk/lua/lib.uoids.lua Wed Sep  3 00:24:25 2008
@@ -186,9 +186,11 @@
 -- if you overwrite something the artid is used instead of the gumpid
 -- this is used for brace/ring list ob the left side of the paperdoll
 gLayerOrderPositionAndArtOverwrite =3D {
-	[0x12] =3D {14,100},	-- Earrings
-	[0x0E] =3D {14,120},	-- Bracelet
-	[0x08] =3D {14,140},	-- Ring
+	[gLayerType.kLayer_Helm		] =3D {14,95 + 20*0},
+	[gLayerType.kLayer_Earrings	] =3D {14,95 + 20*1},
+	[gLayerType.kLayer_Neck		] =3D {14,95 + 20*2}, -- necklace,gorget
+	[gLayerType.kLayer_Ring		] =3D {14,95 + 20*3},
+	[gLayerType.kLayer_Bracelet	] =3D {14,95 + 20*4},
 }
 =

 -- Tiledata Flags



From no-reply at zwischenwelt.org  Wed Sep  3 00:34:57 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Sep 2008 22:34:57 -0000
Subject: [Iris-commit] [IRIS] r2441 - in /trunk/lua: gui/gui.paperdoll.lua
	lib.uoids.lua
Message-ID: <20080902223458.A0A861C18249@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Sep  3 00:34:56 2008
New Revision: 2441

Log:
paperdoll : added yewelry slots to gump, thanks to Link_of_Hyrule

Modified:
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/lib.uoids.lua

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Wed Sep  3 00:34:56 2008
@@ -24,7 +24,20 @@
  "{ button 187 181 22450 22452 1 0 6 btnguild }" ..
  "{ button 187 205 2021 2022 1 0 7 btnpeace }" ..
  "{ button 187 233 2027 2028 1 0 8 btnstatus }" ..
- "{ button 165 210 11060 11060 1 0 9 btnweaponability }"
+ "{ button 165 210 11060 11060 1 0 9 btnweaponability }" ..
+ =

+ "{ gumppictiled 6 84 21 21 9274 miniequipback1 }" ..
+ "{ gumppic 6 84 9028 miniequip1 }" ..
+ "{ gumppictiled 6 107 21 21 9274 miniequipback2 }" ..
+ "{ gumppic 6 107 9028 miniequip2 }" ..
+ "{ gumppictiled 6 130 21 21 9274 miniequipback3 }" ..
+ "{ gumppic 6 130 9028 miniequip3 }" ..
+ "{ gumppictiled 6 153 21 21 9274 miniequipback4 }" ..
+ "{ gumppic 6 153 9028 miniequip4 }" ..
+ "{ gumppictiled 6 176 21 21 9274 miniequipback5 }" ..
+ "{ gumppic 6 176 9028 miniequip5 }"..
+ "{ button 27 200 2002 2002 1 0 10 charprofile }" ..
+ "{ button 44 200 2002 2002 1 0 11 partymanifest }"
 =

 playerPaperdoll.textline =3D {
  [0] =3D "paperdoll_name",
@@ -102,6 +115,11 @@
  				end
  			end
  		  end,
+		  =

+	-- character profile
+	[10]   =3D function (widget,mousebutton) print("TODO:paperdoll charprofil=
e scroll not yet implemented") end,
+	-- party manifest
+	[11]   =3D function (widget,mousebutton) if (mousebutton =3D=3D 1) then T=
ogglePartyList() end end,
 }
 =

 -- Created 08.03.2008 12:25:56, with GumpStudio & Iris2 Lua Export Plugin

Modified: trunk/lua/lib.uoids.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoids.lua (original)
+++ trunk/lua/lib.uoids.lua Wed Sep  3 00:34:56 2008
@@ -186,11 +186,11 @@
 -- if you overwrite something the artid is used instead of the gumpid
 -- this is used for brace/ring list ob the left side of the paperdoll
 gLayerOrderPositionAndArtOverwrite =3D {
-	[gLayerType.kLayer_Helm		] =3D {14,95 + 20*0},
-	[gLayerType.kLayer_Earrings	] =3D {14,95 + 20*1},
-	[gLayerType.kLayer_Neck		] =3D {14,95 + 20*2}, -- necklace,gorget
-	[gLayerType.kLayer_Ring		] =3D {14,95 + 20*3},
-	[gLayerType.kLayer_Bracelet	] =3D {14,95 + 20*4},
+	[gLayerType.kLayer_Helm		] =3D {14,95 + 23*0},
+	[gLayerType.kLayer_Earrings	] =3D {14,95 + 23*1},
+	[gLayerType.kLayer_Neck		] =3D {14,95 + 23*2}, -- necklace,gorget
+	[gLayerType.kLayer_Ring		] =3D {14,95 + 23*3},
+	[gLayerType.kLayer_Bracelet	] =3D {14,95 + 23*4},
 }
 =

 -- Tiledata Flags



From no-reply at zwischenwelt.org  Wed Sep  3 00:56:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Sep 2008 22:56:14 -0000
Subject: [Iris-commit] [IRIS] r2442 - in /trunk/lua: gui/gui.paperdoll.lua
 lib.charcreate.lua lib.protocol.lua net/net.other.lua
 net/net.partysystem.lua
Message-ID: <20080902225614.9BFAF1C18695@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Sep  3 00:56:14 2008
New Revision: 2442

Log:
paperdoll:left scroll : displays character profile (account age), implement=
ed kPacket_Character_Profile 0xB8 send and response

Modified:
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/lib.charcreate.lua
    trunk/lua/lib.protocol.lua
    trunk/lua/net/net.other.lua
    trunk/lua/net/net.partysystem.lua

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Wed Sep  3 00:56:14 2008
@@ -117,7 +117,7 @@
  		  end,
 		  =

 	-- character profile
-	[10]   =3D function (widget,mousebutton) print("TODO:paperdoll charprofil=
e scroll not yet implemented") end,
+	[10]   =3D function (widget,mousebutton) if (mousebutton =3D=3D 1) then S=
end_RequestCharacterProfile() end end,
 	-- party manifest
 	[11]   =3D function (widget,mousebutton) if (mousebutton =3D=3D 1) then T=
ogglePartyList() end end,
 }

Modified: trunk/lua/lib.charcreate.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.charcreate.lua (original)
+++ trunk/lua/lib.charcreate.lua Wed Sep  3 00:56:14 2008
@@ -7,7 +7,6 @@
 -- kPacket_Delete_Character_Failed ?
 -- kPacket_All_Characters ?
 -- kPacket_Move_Character ?
--- ?? kPacket_Character_Profile ?
 -- kPacket_Character_Transfer_Log ?
 =

 -- template is one element from the array of GetCharCreationTemplates

Modified: trunk/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.protocol.lua (original)
+++ trunk/lua/lib.protocol.lua Wed Sep  3 00:56:14 2008
@@ -136,13 +136,3 @@
 	end
 	out:SendPacket()
 end
-
--- request profile
-function Send_RequestProfile( serial )
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Character_Profile)
-	out:PushNetUint16(8)
-	out:PushNetUint8(0)
-	out:PushNetUint32(serial)
-	out:SendPacket()
-end

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Wed Sep  3 00:56:14 2008
@@ -403,6 +403,34 @@
 	end
 end
 =

+
+
+-- request profile 0xB8
+function Send_RequestCharacterProfile()
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Character_Profile)
+	out:PushNetUint16(8)
+	out:PushNetUint8(0)
+	out:PushNetUint32(GetPlayerSerial())
+	out:SendPacket()
+end
+
+
+-- servers answer to Send_RequestCharacterProfile() 0xB8
+function gPacketHandler.kPacket_Character_Profile () -- 0xB8
+	local input =3D GetRecvFIFO()
+	local id		=3D input:PopNetUint8()
+	local size		=3D input:PopNetUint16()
+	local data =3D {}
+	data.serial	=3D input:PopNetUint32()
+	data.title,size =3D FIFO_PopZeroTerminatedString(input,size)
+	data.pstatic_plaintext,data.pstatic_unicodebytearr,size =3D FIFO_PopZeroT=
erminatedUnicode(input,size) -- static profile (can't be edited)
+	data.p_plaintext,data.p_unicodebytearr,size =3D FIFO_PopZeroTerminatedUni=
code(input,size) -- profile (can be edited)
+	print("kPacket_Character_Profile : todo:nice gump")
+	GuiAddChatLine ("Character Profile:"..data.title..","..data.pstatic_plain=
text..","..data.p_plaintext)
+end
+
+
 --[[
 Packet Name: Map Packet (cartography/treasure)
 Packet Build:

Modified: trunk/lua/net/net.partysystem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.partysystem.lua (original)
+++ trunk/lua/net/net.partysystem.lua Wed Sep  3 00:56:14 2008
@@ -141,7 +141,6 @@
 	PartySystem_UpdateMemberList(memberlist)
 end
 =

-
 -- thanks to surcouf =3D)
 function   gPartySystemHandler.kPartySubCmd_MessageToAll   (input,size)
 	local speakerID =3D input:PopNetUint32()
@@ -149,14 +148,8 @@
 	local mobile =3D GetMobile(speakerID)
 	local name =3D mobile and mobile.name or ("unknown"..speakerID)
 	print("partysystem:test message",speakerID,name, input, size)
-	local text =3D ""
-	while size >=3D 2 do
-		size =3D size - 2
-		local digit =3D input:PopNetUint16()
-		if (digit =3D=3D hex2num("0x0000"))  then break end
-		text =3D text..string.char(digit)
-	end
-	GuiAddChatLine ("["..name.."]: "..text)
+	local plaintext,unicodebytearr,size =3D FIFO_PopZeroTerminatedUnicode(inp=
ut,size)
+	GuiAddChatLine ("["..name.."]: "..plaintext)
 end =

 =

 -- thanks to surcouf =3D)



From no-reply at zwischenwelt.org  Wed Sep  3 02:06:11 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Sep 2008 00:06:11 -0000
Subject: [Iris-commit] [IRIS] r2443 - in /trunk/lua: gui/gui.gumpmaker.lua
 gui/gui.main.lua gui/gui.menubar.lua widgets/widget.gumpdialog.lua
 widgets/widget.uobutton.lua
Message-ID: <20080903000611.405081C18695@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Sep  3 02:06:10 2008
New Revision: 2443

Log:
added menubar, thanks to Link_of_Hyrule

Added:
    trunk/lua/gui/gui.menubar.lua
Modified:
    trunk/lua/gui/gui.gumpmaker.lua
    trunk/lua/gui/gui.main.lua
    trunk/lua/widgets/widget.gumpdialog.lua
    trunk/lua/widgets/widget.uobutton.lua

Modified: trunk/lua/gui/gui.gumpmaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpmaker.lua (original)
+++ trunk/lua/gui/gui.gumpmaker.lua Wed Sep  3 02:06:10 2008
@@ -161,6 +161,7 @@
 	widget.gfx:SetUV(0,(skip_rows_from_top)/th,cx/tw,(cy+skip_rows_from_top)/=
th)
 	-- autogenerate bitmask
 	local bitmask =3D GetGumpBitMask(iGumpID)
+	widget.bitmask =3D bitmask
 	widget:SetBitMask(bitmask)
 =

 	widget.mbIgnoreMouseOver =3D true

Modified: trunk/lua/gui/gui.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.main.lua (original)
+++ trunk/lua/gui/gui.main.lua Wed Sep  3 02:06:10 2008
@@ -3,6 +3,7 @@
 dofile(libpath .. "gui/gui.gumpmaker.lua")
 =

 dofile(libpath .. "gui/gui.paperdoll.lua")
+dofile(libpath .. "gui/gui.menubar.lua")
 dofile(libpath .. "gui/gui.journal.lua")
 dofile(libpath .. "gui/gui.quit.lua")
 dofile(libpath .. "gui/gui.status.lua")

Modified: trunk/lua/widgets/widget.gumpdialog.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/widgets/widget.gumpdialog.lua (original)
+++ trunk/lua/widgets/widget.gumpdialog.lua Wed Sep  3 02:06:10 2008
@@ -12,6 +12,7 @@
 	self:AddToDestroyList(self.rendergroup2d)
 	self:SetIgnoreBBoxHit(true)
 	=

+	self.bClientSideMode	=3D params.bClientSideMode
 	self.params		=3D params
 	self.dialogId	=3D params.dialogId -- id/serial
 	self.controls	=3D {} -- key=3Dctrlname value=3Dwidget
@@ -48,6 +49,7 @@
 =

 -- shows pages 0 and pagenum
 function gWidgetPrototype.GumpDialog:ShowPage	(pagenum) =

+	self.page =3D pagenum
 	for k,page in pairs(self.pages) do page:SetVisible(k =3D=3D 0 or k =3D=3D=
 pagenum) end
 end
 =


Modified: trunk/lua/widgets/widget.uobutton.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/widgets/widget.uobutton.lua (original)
+++ trunk/lua/widgets/widget.uobutton.lua Wed Sep  3 02:06:10 2008
@@ -38,10 +38,20 @@
 	local dialog =3D self:GetDialog()
 	local page_id =3D self.params.page_id
 	local return_value =3D self.params.return_value
+	print("UOButton:on_button_click",page_id,return_value,dialog,dialog and d=
ialog.bClientSideMode)
 	if (page_id and page_id > 0) then
 		if (dialog) then dialog:ShowPage(page_id) end
 	elseif (return_value) then
-		if (dialog) then dialog:SendClose(return_value) end
+		if (dialog) then =

+			if (dialog.bClientSideMode) then =

+				if (dialog.gumpdata.functions) then
+					local fun =3D dialog.gumpdata.functions[return_value] =

+					if (fun) then fun(self,1) end -- 1:mousebutton
+				end
+			else
+				dialog:SendClose(return_value) =

+			end
+		end
 	end
 end
 =




From no-reply at zwischenwelt.org  Wed Sep  3 03:04:54 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Sep 2008 01:04:54 -0000
Subject: [Iris-commit] [IRIS] r2444 - in /trunk/lua: gui/gui.paperdoll.lua
	obj/obj.dynamic.lua
Message-ID: <20080903010454.9FC8E1C18249@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Sep  3 03:04:54 2008
New Revision: 2444

Log:
jewels etc now on sidebar AND body

Modified:
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/obj/obj.dynamic.lua

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Wed Sep  3 03:04:54 2008
@@ -257,7 +257,12 @@
 =

 	local widget
 	=

-	-- position and art overwrite?
+	=

+	item.widget =3D MakeBorderGumpPart(dialog.rootwidget, gumpid, BodyWidget_=
x, BodyWidget_y, 0, 0, 0, item.hue)
+	--~ setmetatable(item,{__index=3Dfunction (myinstance, key) if (key =3D=
=3D "widget") then print("bla",_TRACEBACK()) return myinstance.widget2 end =
end})
+	PaperdollItemWidgetInit(item.widget,layer,paperdoll,item,base_id)
+	=

+	-- additonal widget in jewelry slot
 	if gLayerOrderPositionAndArtOverwrite[layer] then
 =

 		local x,y =3D unpack(gLayerOrderPositionAndArtOverwrite[layer])
@@ -266,15 +271,15 @@
 		local cx =3D minx + (maxx - minx)/2
 		local cy =3D miny + (maxy - miny)/2
 =

-		widget =3D MakeArtGumpPart(  dialog.rootwidget, item.artid, x-cx,y-cy, n=
il,nil,nil, item.hue)
-	else
-		widget =3D MakeBorderGumpPart(dialog.rootwidget, gumpid, BodyWidget_x, B=
odyWidget_y, 0, 0, 0, item.hue)
-	end
-	=

+		item.widget2 =3D MakeArtGumpPart(  dialog.rootwidget, item.artid, x-cx,y=
-cy, nil,nil,nil, item.hue)
+		PaperdollItemWidgetInit(item.widget2,layer,paperdoll,item,base_id)
+	end
+end
+	=

+function PaperdollItemWidgetInit (widget,layer,paperdoll,item,base_id)
 	widget.mbIgnoreMouseOver =3D false
 	widget.uoPaperdoll =3D paperdoll
 	widget.item =3D item
-	item.widget =3D widget
 =

 	widget.onMouseDown =3D function (widget,mousebutton) end
 =

@@ -307,6 +312,7 @@
 	if (paperdoll.mobile) then
 		for k,item in pairs(GetMobileEquipmentList(paperdoll.mobile)) do
 			if (item.widget) then item.widget:Destroy()  item.widget =3D nil end
+			if (item.widget2) then item.widget2:Destroy()  item.widget2 =3D nil end
 		end
 	end
 end

Modified: trunk/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.dynamic.lua (original)
+++ trunk/lua/obj/obj.dynamic.lua Wed Sep  3 03:04:54 2008
@@ -165,6 +165,7 @@
 	=

 	-- paperdoll widgets (and maybe container content things)
 	if (self.widget) then self.widget:Destroy() self.widget =3D nil end
+	if (self.widget2) then self.widget2:Destroy() self.widget2 =3D nil end
 	=

 	-- destroy old world gfx
 	if (self.bWorldGfxInitialised) then =




From no-reply at zwischenwelt.org  Wed Sep  3 04:05:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Sep 2008 02:05:14 -0000
Subject: [Iris-commit] [IRIS] r2445 - in /trunk/lua: gui/gui.paperdoll.lua
 lib.uodragdrop.lua lib.uoids.lua
Message-ID: <20080903020514.49E5C1C18695@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Sep  3 04:05:13 2008
New Revision: 2445

Log:
added paperdoll layer stitchin/blocking system, e.g. shroud/robe(TorsoOuter=
) blocks/covers arms and torso-inner

Modified:
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/lib.uodragdrop.lua
    trunk/lua/lib.uoids.lua

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Wed Sep  3 04:05:13 2008
@@ -234,7 +234,7 @@
 =

 -- Don't call this directly, use RebuildPaperdoll() instead (need to rebui=
ld completely on change because of layerorder)
 -- item fields : serial artid layer hue (=3D-1 if not set)
-local function CreatePaperdollItemWidget(layer, paperdoll, item, base_id)
+local function CreatePaperdollItemWidget(layer, paperdoll, item, base_id, =
blockedlayers)
 	local dialog =3D paperdoll.dialog
 	local animid =3D nil
 	local typename =3D ""
@@ -255,16 +255,14 @@
 	if (GetGumpMat(gumpid) =3D=3D "" and base_id =3D=3D kGumpBaseId_Female) t=
hen gumpid =3D animid+kGumpBaseId_Male end -- fallback to male
 	if (item.layer =3D=3D kLayer_Backpack) then gumpid =3D animid+kGumpBaseId=
_Male end -- no female backpack ;)
 =

-	local widget
-	=

-	=

-	item.widget =3D MakeBorderGumpPart(dialog.rootwidget, gumpid, BodyWidget_=
x, BodyWidget_y, 0, 0, 0, item.hue)
-	--~ setmetatable(item,{__index=3Dfunction (myinstance, key) if (key =3D=
=3D "widget") then print("bla",_TRACEBACK()) return myinstance.widget2 end =
end})
-	PaperdollItemWidgetInit(item.widget,layer,paperdoll,item,base_id)
+	=

+	if (not blockedlayers[layer]) then
+		item.widget =3D MakeBorderGumpPart(dialog.rootwidget, gumpid, BodyWidget=
_x, BodyWidget_y, 0, 0, 0, item.hue)
+		PaperdollItemWidgetInit(item.widget,layer,paperdoll,item,base_id)
+	end
 	=

 	-- additonal widget in jewelry slot
 	if gLayerOrderPositionAndArtOverwrite[layer] then
-
 		local x,y =3D unpack(gLayerOrderPositionAndArtOverwrite[layer])
 		=

 		local minx,miny,maxx,maxy =3D GetArtVisibleAABB(item.artid + 0x4000)
@@ -408,11 +406,19 @@
 			-- TODO : fallback/default bodyid ?
 		end
 	=

+		-- 2d stitching
+		local blockedlayers =3D {}
+		for blocker,blockedlist in pairs(gPaperdollBlockingLayers) do =

+			if GetMobileEquipmentItem(mobile,blocker) then
+				for k,blocked in pairs(blockedlist) do blockedlayers[blocked] =3D true=
 end
+			end
+		end
+		=

 		-- create item widgets
 		for index,layer in pairs(gLayerOrder) do =

 			local k =3D gLayerTypeName[layer]
 			local item =3D GetMobileEquipmentItem(mobile,layer)
-			if (item) then CreatePaperdollItemWidget(layer,paperdoll,item,base_id) =
end
+			if (item) then CreatePaperdollItemWidget(layer,paperdoll,item,base_id,b=
lockedlayers) end
 		end
 	end
 =


Modified: trunk/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uodragdrop.lua (original)
+++ trunk/lua/lib.uodragdrop.lua Wed Sep  3 04:05:13 2008
@@ -415,6 +415,7 @@
 		local layer =3D GetPaperdollLayerFromTileType(iTileTypeID)
 		local mobileserial =3D paperdoll.mobileserial
 		local mobile =3D GetMobile(mobileserial)
+		print("drop on paperdoll",gLayerTypeName[layer])
 		printdebug("dragdrop","MouseUpUODragDrop: drop on paperdoll ",item.seria=
l,item.amount,iTileTypeID,layer,paperdoll.mobileserial)
 		if (not layer) then
 			printdebug("dragdrop","CompleteUODragDrop : item is not wearable",vardu=
mp(item))

Modified: trunk/lua/lib.uoids.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoids.lua (original)
+++ trunk/lua/lib.uoids.lua Wed Sep  3 04:05:13 2008
@@ -154,6 +154,10 @@
 gLayerTypeName =3D {}
 for k,v in pairs(gLayerType) do gLayerTypeName[v] =3D k end -- make names =
available as global constants
 =

+gPaperdollBlockingLayers =3D {
+	[kLayer_TorsoOuter] =3D {kLayer_Arms,kLayer_TorsoInner} -- kLayer_Helm, =

+}
+
 -- WARNING ! this is not a complete list (see gLayerType for that) , e.g. =
kLayer_Mound =3D 0x19 is not in here
 gLayerOrder =3D {
 	hex2num("0x09"),					   -- - N/A (not used)
@@ -173,8 +177,8 @@
     hex2num("0x07"),                       -- - Hand Covering/Armor
     hex2num("0x17"),                       -- - Legs (outer)(Skirt/Kilt)
     hex2num("0x0B"),                       -- - Hair
-    hex2num("0x16"),                       -- - Torso (outer)(Robe)
     hex2num("0x06"),                       -- - Head Covering/Armor
+    hex2num("0x16"),                       -- - Torso (outer)(Robe) =

     hex2num("0x0C"),                       -- - Waist (Half-Apron)
     hex2num("0x01"),                       -- - Single-Hand item/weapon
     hex2num("0x02"),                       -- - Two-Hand item/weapon (incl=
uding Shield)



From no-reply at zwischenwelt.org  Wed Sep  3 15:09:40 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Sep 2008 13:09:40 -0000
Subject: [Iris-commit] [IRIS] r2446 - /trunk/plugins/hudenemylist.lua
Message-ID: <20080903130940.BCB331524030@zwischenwelt.org>

Author: hagish
Date: Wed Sep  3 15:09:39 2008
New Revision: 2446

Log:
notority color in enemylist

Modified:
    trunk/plugins/hudenemylist.lua

Modified: trunk/plugins/hudenemylist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/plugins/hudenemylist.lua (original)
+++ trunk/plugins/hudenemylist.lua Wed Sep  3 15:09:39 2008
@@ -71,6 +71,11 @@
 	bar.widget_bg.mbClipChildsHitTest =3D false
 	bar.widget_bg.mbIgnoreMouseOver =3D false
 	=

+	if body.notoriety then
+		local r,g,b =3D GetNotorietyColor(body.notoriety)
+		bar.widget_bg.gfx:SetColour(r,g,b,1)
+	end
+			=

 	bar.widget_bg.on_mouse_left_click		=3D function () =

 		if not IsTargetModeActive() then =

 			gCurrentRenderer:SelectMobile(body.serial) =




From no-reply at zwischenwelt.org  Wed Sep  3 15:09:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Sep 2008 13:09:42 -0000
Subject: [Iris-commit] [IRIS] r2447 - in /trunk/data: desktop/EMPTY
	uoam/EMPTY
Message-ID: <20080903130943.055541524030@zwischenwelt.org>

Author: hagish
Date: Wed Sep  3 15:09:42 2008
New Revision: 2447

Log:
added placeholder files to keep directorys

Added:
    trunk/data/desktop/EMPTY
    trunk/data/uoam/EMPTY



From no-reply at zwischenwelt.org  Thu Sep  4 16:01:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 04 Sep 2008 14:01:46 -0000
Subject: [Iris-commit] [IRIS] r2448 - /trunk/lua/lib.protocol.lua
Message-ID: <20080904140146.AB1D51C186F4@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Sep  4 16:01:45 2008
New Revision: 2448

Log:
short-packet-debug

Modified:
    trunk/lua/lib.protocol.lua

Modified: trunk/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.protocol.lua (original)
+++ trunk/lua/lib.protocol.lua Thu Sep  4 16:01:45 2008
@@ -18,6 +18,7 @@
 	gNecroPacketSize[hex2num(gNecroPacketData_ID[i])] =3D hex2num(gNecroPacke=
tData_Size[i]) =

 end
 gNoLogPackets =3D { kPacket_Ping } -- can be used to shorten the standard =
log for every packet
+
 	=

 -- register packet types
 	gPacketType =3D {}
@@ -37,6 +38,7 @@
 	=

 -- check if packets are complete and handle them
 function HandlePackets ()
+	if (not gNoLogPackets_ByPacket) then gNoLogPackets_ByPacket =3D {} for k,=
v in pairs(gNoLogPackets) do gNoLogPackets_ByPacket[v] =3D true end end
 	local input =3D GetRecvFIFO()
 	while (input:Size() >=3D 1) do
 		local iId =3D input:PeekNetUint8(0)
@@ -60,11 +62,10 @@
 		LogIncomingPacket(input,iPacketSize) -- log packet
 		=

 		local sPacketTypeName =3D gPacketTypeId2Name[iId] -- get packet-type-name
-		local packet_debuginfo =3D sprintf("typeid=3D0x%02x,size=3D%d,typename=
=3D%s\n",iId,iPacketSize,sPacketTypeName or "")
-		local bDoLog =3D true
-		for k,v in pairs(gNoLogPackets) do if (v =3D=3D iId) then bDoLog =3D fal=
se end end
-		if (bDoLog) then =

+		local packet_debuginfo =3D sprintf("typeid=3D0x%02x,size=3D%d,typename=
=3D%s",iId,iPacketSize,sPacketTypeName or "")
+		if (not gNoLogPackets_ByPacket[iId]) then -- log on
 			printdebug("net",sprintf("NET: ProtocolPacketRecvHandler "..packet_debu=
ginfo))
+			if (gEnablePacketDebug_Short) then print("packet",packet_debuginfo) end
 			if (gbPacketLogToFadeLines) then GuiAddChatLine("recv "..packet_debugin=
fo) end
 		end
 		=




From no-reply at zwischenwelt.org  Thu Sep  4 16:54:41 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 04 Sep 2008 14:54:41 -0000
Subject: [Iris-commit] [IRIS] r2449 - in /trunk/lua: gui/gui.spellbook.lua
 lib.spellbooks.lua net/net.dynamic.lua net/net.other.lua
 obj/obj.container.lua
Message-ID: <20080904145441.C19321C1801A@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Sep  4 16:54:40 2008
New Revision: 2449

Log:
fixed spellbook for uogamers, genericcmd:debug output for name of subpacket

Modified:
    trunk/lua/gui/gui.spellbook.lua
    trunk/lua/lib.spellbooks.lua
    trunk/lua/net/net.dynamic.lua
    trunk/lua/net/net.other.lua
    trunk/lua/obj/obj.container.lua

Modified: trunk/lua/gui/gui.spellbook.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.spellbook.lua (original)
+++ trunk/lua/gui/gui.spellbook.lua Thu Sep  4 16:54:40 2008
@@ -1,4 +1,4 @@
-gAvailSpellbooks =3D {}
+gSpellbooks =3D {}
 =

 function GetSpellname(spellid)
 	for kbook,vbook in pairs(gSpellBooks) do
@@ -64,294 +64,307 @@
 	return d
 end
 =

-function Open_Spellbook(spellbook)
---	if true then return end
-
-	local dialog =3D gAvailSpellbooks[spellbook.serial]
-
-	if (dialog and not(spellbook.old)) then
-		printf("Spellbook Container already exists. Delete this Container. seria=
l=3D0x%08x\n",spellbook.serial)
-		dialog:SetVisible(false)
-		gAvailSpellbooks[dialog.spellbookserial]=3Dnil
-		dialog =3D nil
-	end
-
-	if (not(dialog)) then
-		dialog =3D guimaker.MakeSortedDialog()
-		dialog.Close =3D function (dialog)
-			-- TODO : close this properly, destroy widgets etc... =

-			dialog:SetVisible(false)
-			gAvailSpellbooks[dialog.spellbookserial]=3Dnil
-			dialog =3D nil
-		end
-
-		--Mapping for Old_Spellbook package
-		if (spellbook.old) then
-			if (spellbook.itemid =3D=3D hex2num("0xffff")) then
-				-- check and get invisible spellbook container with spellbook items (s=
crolls)
-				local container =3D GetOrCreateContainer(spellbook.serial)
-				spellbook.matrix =3D Convert_Spellbookcontainer(spellbook.matrix,conta=
iner)
-				spellbook.itemid =3D MageSpellbook
-			end
-		end
-
-		--base( Core.AOS ? 0x22C5 : 0xEFA )  - if AoS take Runebook otherwise Sp=
ellbook
-		if (gSpellBooks[spellbook.itemid]) then
-			dialog.gumpid =3D gSpellBooks[spellbook.itemid].gumpid
-			dialog.spellbookserial=3Dspellbook.serial
-			gAvailSpellbooks[dialog.spellbookserial] =3D dialog
-		else
-			print("SpellbookID=3D("..spellbook.itemid..") not found (maybe old_spel=
lbook packet)!")
-		end
-	=

-		if	(dialog.gumpid) then
-			dialog.rootwidget.gfx:SetPos(gXGumppos or 200,gYGumppos or 100)
-			dialog.controls =3D {} -- associative list of controlls, key=3Dname of =
controll
-			dialog.childs =3D {} -- all controls, also those without name
-	=

-			dialog.onMouseDown =3D function (widget,mousebutton)
-	               					if (mousebutton =3D=3D 2) then dialog:Close() print("=
Destroy Spellbook!") end
-	               					if (mousebutton =3D=3D 1) then widget.dialog:BringToF=
ront() gui.StartMoveDialog(widget.dialog.rootwidget) end
-	               				end
-	        dialog.onMouseUp =3D function (widget,mousebutton)
-										gXGumppos=3Dwidget.gfx:GetDerivedLeft()
-										gYGumppos=3Dwidget.gfx:GetDerivedTop()
-	       						end
-	=

-			-- Hide all except page 0 and pagenum
-			dialog.ShowPage =3D function (dialog,pagenum)
-				local myc =3D 0
-				for k,widget in pairs(dialog.childs) do if (widget.pagenum =3D=3D page=
num) then myc =3D myc + 1 end end
-				--print("dialog.ShowPage",pagenum,myc)
-				=

-				for k,widget in pairs(dialog.childs) do =

-					widget.gfx:SetVisible((widget.pagenum =3D=3D 0) or (widget.pagenum =
=3D=3D pagenum))
-				end
-			end
-			local curparent =3D dialog.rootwidget
-	=

-			local pages =3D {}
-			dialog.pages =3D pages
-	=

-			-- Backpage 0 --------------------------------------
-			local curpage =3D guimaker.MakePage(0)
-			pages[0] =3D curpage
-	=

-			local backpane =3D MakeBorderGumpPart(curparent,dialog.gumpid,0,0)
-			backpane.mbIgnoreMouseOver =3D false
-	=

+
+-- can come from kPacket_Generic_SubCommand_NewSpellbook (includes matrix)=
 or from HandleOpenContainer (matrix sent later by container)
+function Open_Spellbook(spellbookdata)
+	local serial =3D spellbookdata.serial
+	local spellbook =3D gSpellbooks[serial]
+	if (gSpellbooks[serial]) then =

+		for k,v in pairs(spellbookdata) do spellbook[k] =3D v end
+	else
+		spellbook =3D spellbookdata
+		gSpellbooks[serial] =3D spellbook =

+	end
+	if (not spellbook.scrolloffset) then spellbook.scrolloffset =3D 0 end
+	if (not spellbook.matrix) then =

+		spellbook.matrix =3D {} =

+		for i=3D1,8 do spellbook.matrix[i] =3D 0 end
+	end
+	--~ print("Open_Spellbook",SmartDump(spellbook.matrix))
+	Update_Spellbook(serial)
+end
+
+
+function Update_Spellbook (serial)
+	local spellbook =3D gSpellbooks[serial]
+	if (not spellbook) then return end
+	--~ print("Update_Spellbook",SmartDump(serial),SmartDump(spellbook))
+	=

+	if (spellbook.dialog) then spellbook.dialog:Destroy() end
+	=

+	local dialog =3D guimaker.MakeSortedDialog()
+	spellbook.dialog =3D dialog
+	dialog.spellbook =3D spellbook
+	=

+	-- close button
+	dialog.Close =3D function (dialog)
+		dialog:Destroy()
+		dialog.spellbook.dialog =3D nil
+	end
+
+	--Mapping for Old_Spellbook package
+	if (spellbook.old) then
+		-- check and get invisible spellbook container with spellbook items (scr=
olls)
+		local container =3D GetOrCreateContainer(spellbook.serial)
+		spellbook.matrix =3D Convert_Spellbookcontainer(spellbook.matrix,contain=
er)
+		spellbook.itemid =3D MageSpellbook
+	end
+
+	--base( Core.AOS ? 0x22C5 : 0xEFA )  - if AoS take Runebook otherwise Spe=
llbook
+	if (gSpellBooks[spellbook.itemid]) then
+		dialog.gumpid =3D gSpellBooks[spellbook.itemid].gumpid
+		dialog.spellbookserial=3Dspellbook.serial
+	else
+		print("SpellbookID=3D("..spellbook.itemid..") not found (maybe old_spell=
book packet)!")
+	end
+
+	if	(dialog.gumpid) then
+		dialog.rootwidget.gfx:SetPos(gXGumppos or 200,gYGumppos or 100)
+		dialog.controls =3D {} -- associative list of controlls, key=3Dname of c=
ontroll
+		dialog.childs =3D {} -- all controls, also those without name
+
+		dialog.onMouseDown =3D function (widget,mousebutton)
+								if (mousebutton =3D=3D 2) then dialog:Close() print("Destroy Spell=
book!") end
+								if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.St=
artMoveDialog(widget.dialog.rootwidget) end
+							end
+		dialog.onMouseUp =3D function (widget,mousebutton)
+									gXGumppos=3Dwidget.gfx:GetDerivedLeft()
+									gYGumppos=3Dwidget.gfx:GetDerivedTop()
+							end
+
+		-- Hide all except page 0 and pagenum
+		dialog.ShowPage =3D function (dialog,pagenum)
+			local myc =3D 0
+			for k,widget in pairs(dialog.childs) do if (widget.pagenum =3D=3D pagen=
um) then myc =3D myc + 1 end end
+			--print("dialog.ShowPage",pagenum,myc)
+			=

+			for k,widget in pairs(dialog.childs) do =

+				widget.gfx:SetVisible((widget.pagenum =3D=3D 0) or (widget.pagenum =3D=
=3D pagenum))
+			end
+		end
+		local curparent =3D dialog.rootwidget
+
+		local pages =3D {}
+		dialog.pages =3D pages
+
+		-- Backpage 0 --------------------------------------
+		local curpage =3D guimaker.MakePage(0)
+		pages[0] =3D curpage
+
+		local backpane =3D MakeBorderGumpPart(curparent,dialog.gumpid,0,0)
+		backpane.mbIgnoreMouseOver =3D false
+
+		-- add all newly created widgets to current page
+		local myc =3D 0
+		for k,widget in pairs(dialog.childs) do =

+			if (not widget.pagenum) then
+				myc =3D myc + 1
+				widget.pagenum =3D curpage.pagenum
+				table.insert(curpage.pagewidgets,widget)
+			end
+		end
+		-- Backpage 0 End ----------------------------------
+
+		local rightspacer=3D0
+		local top_align=3D0
+		local pageside=3D0
+		local fix_layout=3D0
+		local pagenumber=3D1
+
+		local bHasNonZero =3D false
+		for k,v in pairs(spellbook.matrix) do if (tonumber(v) ~=3D 0) then bHasN=
onZero  =3D true end end
+		local circlenumber=3Dtable.getn(gSpellBooks[spellbook.itemid].circles)
+		local available_spells=3D0
+
+		for circle=3D1, circlenumber do
+			local spellnumber=3Dtable.getn(gSpellBooks[spellbook.itemid].spells[cir=
cle])
+
+			local page =3D pages[pagenumber]
+			if (not(page)) then
+				page =3D guimaker.MakePage(pagenumber)
+				pages[pagenumber] =3D page
+			end
+			=

+			-- Pageselektor left
+			if (page.pagenum~=3D1) then
+				local browse_back =3D MakeGumpButton (curparent, hex2num("0x8bb"), hex=
2num("0x8bb"), hex2num("0x8bb"), 48, 8,nil,nil,false)
+				browse_back.page=3Dpagenumber-1
+				browse_back.onLeftClick =3D function (widget)
+												if (widget.page > 0 and not(widget.page > table.getn(pages)) )=
 then
+													widget.dialog:ShowPage(browse_back.page)
+												end
+										end
+				end				=

+			-- Pageselektor right
+			-- check if spell follows
+			if (bHasNonZero) then
+				local browse_forward =3D MakeGumpButton (curparent, hex2num("0x8bc"), =
hex2num("0x8bc"), hex2num("0x8bc"), 322, 8,nil,nil,false)
+				browse_forward.page=3Dpagenumber+1
+				browse_forward.onLeftClick =3D function (widget)
+											if (widget.page > 0 and not(widget.page > table.getn(pages)) ) =
then
+												widget.dialog:ShowPage(browse_forward.page)
+											end
+										end
+			end
+			-- Pageselektors on bottom
+			for i=3D1, circlenumber/2 do
+				local btn_gumpid=3Dhex2num("0x8b0")+i+(circlenumber/2)*pageside
+				local btn_x=3D24+165*pageside+i*35
+				local pageselector =3D MakeGumpButton (curparent, btn_gumpid, btn_gump=
id, btn_gumpid, btn_x, 175,nil,nil,false)
+				pageselector.page=3DgSpellBooks[spellbook.itemid].pages[i+(circlenumbe=
r/2)*pageside]
+				pageselector.onLeftClick =3D function (widget)
+											if (widget.page > 0 and not(widget.page > table.getn(pages)) ) =
then
+												widget.dialog:ShowPage(pageselector.page)
+											end
+										end
+			end
+
+			-- Circle Names
+			local circlename =3D guimaker.MakeText (curparent, 90 + rightspacer, 20,
+													gSpellBooks[spellbook.itemid].circles[circle], gFontDefs["Gum=
p"].size,
+													{255/255,255/255,255/255,1.0}, gFontDefs["Gump"].name)
+
+			-- counter for available spells
+			local spellcounter=3D0
+
+			for spell=3D1, spellnumber do
+				-- print("SPELL",gSpellBooks[spellbook.itemid].ignore_available_flags,=
spell,spellnumber,spellbook.matrix[circle],BitwiseSHL(1,spell-1))
+				if (gSpellBooks[spellbook.itemid].ignore_available_flags or TestBit(sp=
ellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
+					-- print("ADD")
+					-- increase number of available spells
+					spellcounter=3Dspellcounter+1
+					local spellbutton =3D MakeBorderGumpPart(curparent, hex2num("0x837"),=
 60 + rightspacer, 20+((spellcounter+1)*15) - top_align)
+					spellbutton.spell=3Dspell+(circle-1)*spellnumber
+					spellbutton.mbIgnoreMouseOver =3D false
+					spellbutton.onLeftClick =3D function (widget)
+												Send_Spell(spellbutton.spell+gSpellBooks[spellbook.itemid].sta=
rtindex,gSpellbookExpansion["AOS"])
+											end
+					=

+					local spellname =3D gSpellBooks[spellbook.itemid].spells[circle][spel=
l]
+					-- TODO finish spell drag buttons
+					spellbutton.onMouseDown =3D function (widget,mousebutton)
+						if (mousebutton =3D=3D 1) then =

+							spellbutton.mStartX,spellbutton.mStartY =3D spellbutton.gfx:GetPos()
+							spellbutton.dialog:BringToFront() =

+							gui.StartMoveDialog(spellbutton) =

+						end
+					end
+					spellbutton.CustomMoveStop =3D function(widget)
+						-- reset button to source and create quick use/cast button
+						-- current position
+						local x,y =3D GetMousePos()
+						CreateQuickCastButtonSpell(x,y,spellbutton.spell+gSpellBooks[spellbo=
ok.itemid].startindex)
+						spellbutton.gfx:SetPos(spellbutton.mStartX,spellbutton.mStartY)
+					end
+					=

+					=

+					local spellname =3D guimaker.MakeText (curparent, 80 + rightspacer, 2=
0+((spellcounter+1)*15) - top_align,
+														gSpellBooks[spellbook.itemid].spells[circle][spell], gFontDe=
fs["Gump"].size,
+														{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
+				end
+			end
+
 			-- add all newly created widgets to current page
 			local myc =3D 0
 			for k,widget in pairs(dialog.childs) do =

 				if (not widget.pagenum) then
 					myc =3D myc + 1
-					widget.pagenum =3D curpage.pagenum
-					table.insert(curpage.pagewidgets,widget)
-				end
-			end
-			-- Backpage 0 End ----------------------------------
-	=

-			local rightspacer=3D0
-			local top_align=3D0
-			local pageside=3D0
-			local fix_layout=3D0
-			local pagenumber=3D1
-	=

-			local bHasNonZero =3D false
-			for k,v in pairs(spellbook.matrix) do if (tonumber(v) ~=3D 0) then bHas=
NonZero  =3D true end end
-			local circlenumber=3Dtable.getn(gSpellBooks[spellbook.itemid].circles)
-			local available_spells=3D0
-	=

-			for circle=3D1, circlenumber do
-				local spellnumber=3Dtable.getn(gSpellBooks[spellbook.itemid].spells[ci=
rcle])
-	=

-				local page =3D pages[pagenumber]
-				if (not(page)) then
-					page =3D guimaker.MakePage(pagenumber)
-					pages[pagenumber] =3D page
-				end
-				=

-				-- Pageselektor left
-				if (page.pagenum~=3D1) then
-					local browse_back =3D MakeGumpButton (curparent, hex2num("0x8bb"), he=
x2num("0x8bb"), hex2num("0x8bb"), 48, 8,nil,nil,false)
-					browse_back.page=3Dpagenumber-1
-					browse_back.onLeftClick =3D function (widget)
+					widget.pagenum =3D page.pagenum
+					table.insert(page.pagewidgets,widget)
+				end
+			end
+			--print("ServerSideGump page ",page.pagenum," childs: ",myc)
+			if (rightspacer=3D=3D0) then rightspacer=3D150 else rightspacer=3D0 end
+			if (pageside=3D=3D0) then pageside=3D1 else pageside=3D0 end
+			if (math.mod(circle,2)=3D=3D0) then pagenumber=3Dpagenumber+1 end
+			available_spells=3Davailable_spells+spellcounter
+		end
+
+		pageside=3D0
+		rightspacer=3D0
+		local index_end=3Dpagenumber-1
+		=

+		-- counter for available spells
+		local spellcounter=3D0
+
+		for circle=3D1, circlenumber do
+			local spellnumber=3Dtable.getn(gSpellBooks[spellbook.itemid].spells[cir=
cle])
+		=

+			for spell=3D1, spellnumber do
+				if (TestBit(spellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
+					-- increase number of available spells
+					spellcounter=3Dspellcounter+1
+
+					local page =3D pages[pagenumber]
+					if (not(page)) then
+						page =3D guimaker.MakePage(pagenumber)
+						pages[pagenumber] =3D page
+					end
+					-- Pageselektor left
+					if (page.pagenum~=3D1) then
+						local browse_back =3D MakeGumpButton (curparent, hex2num("0x8bb"), h=
ex2num("0x8bb"), hex2num("0x8bb"), 48, 8,nil,nil,false)
+						browse_back.page=3Dpagenumber-1
+						browse_back.onLeftClick =3D function (widget)
+														if (widget.page > 0 and not(widget.page > table.getn(pages))=
 ) then
+															widget.dialog:ShowPage(browse_back.page)
+														end
+												end
+					end				=

+					-- Pageselektor right
+					-- check for last-page
+					if (spellcounter < available_spells-1) then
+						local browse_forward =3D MakeGumpButton (curparent, hex2num("0x8bc")=
, hex2num("0x8bc"), hex2num("0x8bc"), 322, 8,nil,nil,false)
+						browse_forward.page=3Dpagenumber+1
+						browse_forward.onLeftClick =3D function (widget)
 													if (widget.page > 0 and not(widget.page > table.getn(pages)) =
) then
-														widget.dialog:ShowPage(browse_back.page)
+														widget.dialog:ShowPage(browse_forward.page)
 													end
-											end
-					end				=

-				-- Pageselektor right
-				-- check if spell follows
-				if (bHasNonZero) then
-					local browse_forward =3D MakeGumpButton (curparent, hex2num("0x8bc"),=
 hex2num("0x8bc"), hex2num("0x8bc"), 322, 8,nil,nil,false)
-					browse_forward.page=3Dpagenumber+1
-					browse_forward.onLeftClick =3D function (widget)
-												if (widget.page > 0 and not(widget.page > table.getn(pages)) )=
 then
-													widget.dialog:ShowPage(browse_forward.page)
 												end
-											end
-				end
-				-- Pageselektors on bottom
-	 			for i=3D1, circlenumber/2 do
-	 				local btn_gumpid=3Dhex2num("0x8b0")+i+(circlenumber/2)*pageside
-	 				local btn_x=3D24+165*pageside+i*35
-					local pageselector =3D MakeGumpButton (curparent, btn_gumpid, btn_gum=
pid, btn_gumpid, btn_x, 175,nil,nil,false)
-					pageselector.page=3DgSpellBooks[spellbook.itemid].pages[i+(circlenumb=
er/2)*pageside]
-					pageselector.onLeftClick =3D function (widget)
-												if (widget.page > 0 and not(widget.page > table.getn(pages)) )=
 then
-													widget.dialog:ShowPage(pageselector.page)
-												end
-											end
-				end
-
-				-- Circle Names
-				local circlename =3D guimaker.MakeText (curparent, 90 + rightspacer, 2=
0,
-														gSpellBooks[spellbook.itemid].circles[circle], gFontDefs["Gu=
mp"].size,
-														{255/255,255/255,255/255,1.0}, gFontDefs["Gump"].name)
-	=

-				-- counter for available spells
-				local spellcounter=3D0
-
-				for spell=3D1, spellnumber do
-					-- print("SPELL",gSpellBooks[spellbook.itemid].ignore_available_flags=
,spell,spellnumber,spellbook.matrix[circle],BitwiseSHL(1,spell-1))
-					if (gSpellBooks[spellbook.itemid].ignore_available_flags or TestBit(s=
pellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
-						-- print("ADD")
-						-- increase number of available spells
-						spellcounter=3Dspellcounter+1
-						local spellbutton =3D MakeBorderGumpPart(curparent, hex2num("0x837")=
, 60 + rightspacer, 20+((spellcounter+1)*15) - top_align)
-						spellbutton.spell=3Dspell+(circle-1)*spellnumber
-						spellbutton.mbIgnoreMouseOver =3D false
-						spellbutton.onLeftClick =3D function (widget)
-													Send_Spell(spellbutton.spell+gSpellBooks[spellbook.itemid].st=
artindex,gSpellbookExpansion["AOS"])
-												end
-						=

-						local spellname =3D gSpellBooks[spellbook.itemid].spells[circle][spe=
ll]
-						-- TODO finish spell drag buttons
-						spellbutton.onMouseDown =3D function (widget,mousebutton)
-							if (mousebutton =3D=3D 1) then =

-								spellbutton.mStartX,spellbutton.mStartY =3D spellbutton.gfx:GetPos=
()
-								spellbutton.dialog:BringToFront() =

-								gui.StartMoveDialog(spellbutton) =

-							end
+					end
+	=

+					-- Calc SpellIcon GumpID
+					local spelliconid=3DgSpellBooks[spellbook.itemid].iconoffset + ((circ=
le-1) * spellnumber) + spell-1
+					-- Circle Names
+					local circlename =3D guimaker.MakeText (curparent, 85 + rightspacer, =
15 - top_align,
+															gSpellBooks[spellbook.itemid].circles[circle], gFontDefs["G=
ump"].size-1,
+															{255/255,255/255,255/255,1.0}, gFontDefs["Gump"].name)
+					local spellname =3D guimaker.MakeText (curparent, 85 + rightspacer, 3=
0 - top_align,
+															gSpellBooks[spellbook.itemid].spells[circle][spell], gFontD=
efs["Gump"].size-1,
+															{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
+					local spellicon =3D MakeGumpButton (curparent, spelliconid, spellicon=
id, spelliconid,
+															75 + rightspacer, 50,nil,nil,false)
+					local reagents =3D guimaker.MakeText (curparent, 75 + rightspacer, 10=
8 - top_align,
+															"Reagents:", gFontDefs["Gump"].size-2,
+															{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
+					-- Display Reagentz
+					if (gSpellBooks[spellbook.itemid].spell_reags[circle][spell]) then
+						for reag=3D1, table.getn( gSpellBooks[spellbook.itemid].spell_reags[=
circle][spell] ) do
+							local reagentname=3D gSpellBooks[spellbook.itemid].reagenz[ gSpellB=
ooks[spellbook.itemid].spell_reags[circle][spell][reag] ]
+							local reagentzia =3D guimaker.MakeText (curparent, 75 + rightspacer=
, 112 + reag*14 - top_align,
+																	reagentname, gFontDefs["Gump"].size,
+																	{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
 						end
-						spellbutton.CustomMoveStop =3D function(widget)
-							-- reset button to source and create quick use/cast button
-							-- current position
-							local x,y =3D GetMousePos()
-							CreateQuickCastButtonSpell(x,y,spellbutton.spell+gSpellBooks[spellb=
ook.itemid].startindex)
-							spellbutton.gfx:SetPos(spellbutton.mStartX,spellbutton.mStartY)
+					end
+	=

+					-- add all newly created widgets to current page
+					local myc =3D 0
+					for k,widget in pairs(dialog.childs) do =

+						if (not widget.pagenum) then
+							myc =3D myc + 1
+							widget.pagenum =3D page.pagenum
+							table.insert(page.pagewidgets,widget)
 						end
-						=

-						=

-						local spellname =3D guimaker.MakeText (curparent, 80 + rightspacer, =
20+((spellcounter+1)*15) - top_align,
-															gSpellBooks[spellbook.itemid].spells[circle][spell], gFontD=
efs["Gump"].size,
-															{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
-					end
-			  	end
-
-				-- add all newly created widgets to current page
-				local myc =3D 0
-				for k,widget in pairs(dialog.childs) do =

-					if (not widget.pagenum) then
-						myc =3D myc + 1
-						widget.pagenum =3D page.pagenum
-						table.insert(page.pagewidgets,widget)
-					end
-				end
-				--print("ServerSideGump page ",page.pagenum," childs: ",myc)
-				if (rightspacer=3D=3D0) then rightspacer=3D150 else rightspacer=3D0 end
-				if (pageside=3D=3D0) then pageside=3D1 else pageside=3D0 end
-				if (math.mod(circle,2)=3D=3D0) then pagenumber=3Dpagenumber+1 end
-				available_spells=3Davailable_spells+spellcounter
-			end
-	=

-			pageside=3D0
-			rightspacer=3D0
-			local index_end=3Dpagenumber-1
-			=

-			-- counter for available spells
-			local spellcounter=3D0
-
-			for circle=3D1, circlenumber do
-				local spellnumber=3Dtable.getn(gSpellBooks[spellbook.itemid].spells[ci=
rcle])
-			=

-				for spell=3D1, spellnumber do
-					if (TestBit(spellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
-						-- increase number of available spells
-						spellcounter=3Dspellcounter+1
-
-						local page =3D pages[pagenumber]
-						if (not(page)) then
-							page =3D guimaker.MakePage(pagenumber)
-							pages[pagenumber] =3D page
-						end
-						-- Pageselektor left
-						if (page.pagenum~=3D1) then
-							local browse_back =3D MakeGumpButton (curparent, hex2num("0x8bb"), =
hex2num("0x8bb"), hex2num("0x8bb"), 48, 8,nil,nil,false)
-							browse_back.page=3Dpagenumber-1
-							browse_back.onLeftClick =3D function (widget)
-															if (widget.page > 0 and not(widget.page > table.getn(pages)=
) ) then
-																widget.dialog:ShowPage(browse_back.page)
-															end
-													end
-						end				=

-						-- Pageselektor right
-						-- check for last-page
-						if (spellcounter < available_spells-1) then
-							local browse_forward =3D MakeGumpButton (curparent, hex2num("0x8bc"=
), hex2num("0x8bc"), hex2num("0x8bc"), 322, 8,nil,nil,false)
-							browse_forward.page=3Dpagenumber+1
-							browse_forward.onLeftClick =3D function (widget)
-														if (widget.page > 0 and not(widget.page > table.getn(pages))=
 ) then
-															widget.dialog:ShowPage(browse_forward.page)
-														end
-													end
-						end
-		=

-						-- Calc SpellIcon GumpID
-						local spelliconid=3DgSpellBooks[spellbook.itemid].iconoffset + ((cir=
cle-1) * spellnumber) + spell-1
-						-- Circle Names
-						local circlename =3D guimaker.MakeText (curparent, 85 + rightspacer,=
 15 - top_align,
-																gSpellBooks[spellbook.itemid].circles[circle], gFontDefs["=
Gump"].size-1,
-																{255/255,255/255,255/255,1.0}, gFontDefs["Gump"].name)
-						local spellname =3D guimaker.MakeText (curparent, 85 + rightspacer, =
30 - top_align,
-																gSpellBooks[spellbook.itemid].spells[circle][spell], gFont=
Defs["Gump"].size-1,
-																{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
-						local spellicon =3D MakeGumpButton (curparent, spelliconid, spellico=
nid, spelliconid,
-																75 + rightspacer, 50,nil,nil,false)
-						local reagents =3D guimaker.MakeText (curparent, 75 + rightspacer, 1=
08 - top_align,
-																"Reagents:", gFontDefs["Gump"].size-2,
-																{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
-						-- Display Reagentz
-						if (gSpellBooks[spellbook.itemid].spell_reags[circle][spell]) then
-							for reag=3D1, table.getn( gSpellBooks[spellbook.itemid].spell_reags=
[circle][spell] ) do
-								local reagentname=3D gSpellBooks[spellbook.itemid].reagenz[ gSpell=
Books[spellbook.itemid].spell_reags[circle][spell][reag] ]
-								local reagentzia =3D guimaker.MakeText (curparent, 75 + rightspace=
r, 112 + reag*14 - top_align,
-																		reagentname, gFontDefs["Gump"].size,
-																		{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
-							end
-						end
-		=

-						-- add all newly created widgets to current page
-						local myc =3D 0
-						for k,widget in pairs(dialog.childs) do =

-							if (not widget.pagenum) then
-								myc =3D myc + 1
-								widget.pagenum =3D page.pagenum
-								table.insert(page.pagewidgets,widget)
-							end
-						end
-						--print("Spellbook page ",page.pagenum," childs: ",myc)
-						--print(gSpellBooks[spellbook.itemid].spells[circle][spell])
-						--print("pageside=3D"..pageside)
-						--print("pagenumber=3D"..pagenumber)
-						if (rightspacer=3D=3D0) then rightspacer=3D150 else rightspacer=3D0 =
end
-						if (pageside=3D=3D0) then pageside=3D1 else pageside=3D0 end
-						if (pageside=3D=3D0) then pagenumber=3Dpagenumber+1 end
-					end
-				end
-			end
-			dialog:ShowPage(1)
-		end
-	end
-end
+					end
+					--print("Spellbook page ",page.pagenum," childs: ",myc)
+					--print(gSpellBooks[spellbook.itemid].spells[circle][spell])
+					--print("pageside=3D"..pageside)
+					--print("pagenumber=3D"..pagenumber)
+					if (rightspacer=3D=3D0) then rightspacer=3D150 else rightspacer=3D0 e=
nd
+					if (pageside=3D=3D0) then pageside=3D1 else pageside=3D0 end
+					if (pageside=3D=3D0) then pagenumber=3Dpagenumber+1 end
+				end
+			end
+		end
+		dialog:ShowPage(1)
+	end
+end

Modified: trunk/lua/lib.spellbooks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.spellbooks.lua (original)
+++ trunk/lua/lib.spellbooks.lua Thu Sep  4 16:54:40 2008
@@ -8,44 +8,62 @@
 =

 --RunUO1 old_spellbook Items
 --[[
-NET: Old_Spellbook: serial=3D0x41b72b8a itemId=3D0xffff offset=3D0x0000
-container=3D0x41b72b8a item.serial=3D0x7fffffff artid=3D0x0000 artid_stack=
=3D0 item.amount=3D1
-container=3D0x41b72b8a item.serial=3D0x7ffffffc artid=3D0x0000 artid_stack=
=3D0 item.amount=3D4
-container=3D0x41b72b8a item.serial=3D0x7ffffffb artid=3D0x0000 artid_stack=
=3D0 item.amount=3D5
-container=3D0x41b72b8a item.serial=3D0x7ffffffa artid=3D0x0000 artid_stack=
=3D0 item.amount=3D6
-container=3D0x41b72b8a item.serial=3D0x7ffffff5 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D11
-container=3D0x41b72b8a item.serial=3D0x7ffffff4 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D12
-container=3D0x41b72b8a item.serial=3D0x7ffffff0 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D16
-container=3D0x41b72b8a item.serial=3D0x7fffffee artid=3D0x0000 artid_stack=
=3D0 item.amount=3D18
-container=3D0x41b72b8a item.serial=3D0x7fffffec artid=3D0x0000 artid_stack=
=3D0 item.amount=3D20
-container=3D0x41b72b8a item.serial=3D0x7fffffea artid=3D0x0000 artid_stack=
=3D0 item.amount=3D22
-container=3D0x41b72b8a item.serial=3D0x7fffffe4 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D28
-container=3D0x41b72b8a item.serial=3D0x7fffffe3 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D29
-container=3D0x41b72b8a item.serial=3D0x7fffffe2 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D30
+uogamers, open/doubleclick spellbook :
+kPacket_Object_to_Object        {hue=3D0,iContainerSerial=3D0x409a8753,xlo=
c=3D103=3D0x67,yloc=3D96=3D0x60,artid_base=3D3834=3D0x0efa,artid_addstack=
=3D0,zloc=3D0,amount=3D1=3D0x01,serial=3D0x409a8767,
+HandleOpenContainer     {serial=3D0x409a8767,gumpid=3D0xffff,
+NET: Old_Spellbook: serial=3D0x409a8767 itemId=3D0x0efa offset=3D0x0000
+packet  typeid=3D0x3c,size=3D252,typename=3DkPacket_Container_Contents
+	=

+Convert_Spellbookcontainer      table: 0xc635b90
++       {usegump=3Dfalse,amount=3D1,		=3D 0+1,	iContainerSerial=3D0x409a87=
67,artid=3D0,serial=3D0x7fffffff,}  -7981   0
++       {usegump=3Dfalse,amount=3D4,		=3D 0+4,	iContainerSerial=3D0x409a87=
67,artid=3D0,serial=3D0x7ffffffc,}  -7981   0
++       {usegump=3Dfalse,amount=3D5,		=3D 0+5,	iContainerSerial=3D0x409a87=
67,artid=3D0,serial=3D0x7ffffffb,}  -7981   0
++       {usegump=3Dfalse,amount=3D6,		=3D 0+6,	iContainerSerial=3D0x409a87=
67,artid=3D0,serial=3D0x7ffffffa,}  -7981   0
+
++       {usegump=3Dfalse,amount=3D11=3D0x0b,	=3D 8+3,	iContainerSerial=3D0=
x409a8767,artid=3D0,serial=3D0x7ffffff5,}  -7981   0
++       {usegump=3Dfalse,amount=3D12=3D0x0c	=3D 8+4,	iContainerSerial=3D0x=
409a8767,artid=3D0,serial=3D0x7ffffff4,}  -7981   0
++       {usegump=3Dfalse,amount=3D16=3D0x10,	=3D 8+8,	iContainerSerial=3D0=
x409a8767,artid=3D0,serial=3D0x7ffffff0,}  -7981   0
+
++       {usegump=3Dfalse,amount=3D18=3D0x12,	=3D16+2,	iContainerSerial=3D0=
x409a8767,artid=3D0,serial=3D0x7fffffee,}  -7981   0
++       {usegump=3Dfalse,amount=3D20=3D0x14,	=3D16+4,	iContainerSerial=3D0=
x409a8767,artid=3D0,serial=3D0x7fffffec,}  -7981   0
++       {usegump=3Dfalse,amount=3D22=3D0x16,	=3D16+6,	iContainerSerial=3D0=
x409a8767,artid=3D0,serial=3D0x7fffffea,}  -7981   0
+                                                                    =

++       {usegump=3Dfalse,amount=3D28=3D0x1c,	=3D24+4,	iContainerSerial=3D0=
x409a8767,artid=3D0,serial=3D0x7fffffe4,}  -7981   0
++       {usegump=3Dfalse,amount=3D29=3D0x1d,	=3D24+5,	iContainerSerial=3D0=
x409a8767,artid=3D0,serial=3D0x7fffffe3,}  -7981   0
++       {usegump=3Dfalse,amount=3D30=3D0x1e	=3D24+6,	iContainerSerial=3D0x=
409a8767,artid=3D0,serial=3D0x7fffffe2,}  -7981   0
+1st : clumsy,heal,magicarrow,nightsight                                 =

+2nd : cure,harm,strength
+3rd : fireball,poison,teleport
+4th : firefield,greaterheal,lightning
+
+[1] =3D { [1] =3D "Clumsy", [4] =3D "Heal", [5] =3D "Magic Arrow", [6] =3D=
 "Night Sight" },
+[2] =3D { [3] =3D "Cure", [4] =3D "Harm",  [8] =3D "Strength" },
+[3] =3D { [2] =3D "Fire Ball",[4] =3D "Poison", [6] =3D "Teleport" },
+[4] =3D { [4] =3D "Fire Field", [5] =3D "Greater Heal", [6] =3D "Lightning=
"},
+
 ]]--
 function Convert_Spellbookcontainer(matrix,container)
+	print("Convert_Spellbookcontainer",container:GetContent())
 	if (container:GetContent()) then
 		for k,v in pairs(container:GetContent()) do
-			local circle=3D0
-			v.artid=3Dtonumber(v.artid)
-			if (v.artid >=3D hex2num("0x1F2D") and v.artid < hex2num("0x1F35")) then
-				circle=3D0
-			elseif (v.artid >=3D hex2num("0x1F35") and v.artid < hex2num("0x1F3D"))=
 then
-				circle=3D1
-			elseif (v.artid >=3D hex2num("0x1F3D") and v.artid < hex2num("0x1F45"))=
 then
-				circle=3D2
-			elseif (v.artid >=3D hex2num("0x1F45") and v.artid < hex2num("0x1F4D"))=
 then
-				circle=3D3
-			elseif (v.artid >=3D hex2num("0x1F4D") and v.artid < hex2num("0x1F55"))=
 then
-				circle=3D4
-			elseif (v.artid >=3D hex2num("0x1F55") and v.artid < hex2num("0x1F5D"))=
 then
-				circle=3D5
-			elseif (v.artid >=3D hex2num("0x1F5D") and v.artid < hex2num("0x1F65"))=
 then
-				circle=3D6
-			elseif (v.artid >=3D hex2num("0x1F65") and v.artid < hex2num("0x1F6D"))=
 then
-				circle=3D7
+			local circle,spellpos =3D 0,0
+			local artid =3D tonumber(v.artid)
+			if (artid =3D=3D 0) then
+				circle   =3D floor((v.amount-1)/8)
+				spellpos =3D mod(v.amount-1,8)
+			else
+				if     (artid >=3D 0x1F2D and artid < 0x1F35) then	circle=3D0
+				elseif (artid >=3D 0x1F35 and artid < 0x1F3D) then	circle=3D1
+				elseif (artid >=3D 0x1F3D and artid < 0x1F45) then	circle=3D2
+				elseif (artid >=3D 0x1F45 and artid < 0x1F4D) then	circle=3D3
+				elseif (artid >=3D 0x1F4D and artid < 0x1F55) then	circle=3D4
+				elseif (artid >=3D 0x1F55 and artid < 0x1F5D) then	circle=3D5
+				elseif (artid >=3D 0x1F5D and artid < 0x1F65) then	circle=3D6
+				elseif (artid >=3D 0x1F65 and artid < 0x1F6D) then	circle=3D7
+				end
+				spellpos =3D v.artid - (0x1F2D + (circle * 8))
 			end
-			local spellpos =3D v.artid - (hex2num("0x1F2D") + (circle * 8))
+			--~ print("+",SmartDump(v),spellpos,circle)
 			matrix[circle+1] =3D BitwiseOR(matrix[circle+1], BitwiseSHL(1, spellpos=
))
 		end
 	end

Modified: trunk/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.dynamic.lua (original)
+++ trunk/lua/net/net.dynamic.lua Thu Sep  4 16:54:40 2008
@@ -93,6 +93,7 @@
 	local id		=3D input:PopNetUint8()
 	local size		=3D input:PopNetUint16()
 	local itemcount	=3D input:PopNetUint16()
+	local iLastSerial
 =

 	for i=3D1,itemcount do
 		local dynamicdata =3D {}
@@ -105,9 +106,12 @@
 		dynamicdata.zloc				=3D 0						--Grid Index (only since 6.0.1.7 2D and 2=
.45.5.6 KR)
 		dynamicdata.iContainerSerial 	=3D input:PopNetUint32()
 		dynamicdata.hue 				=3D input:PopNetUint16()
-
+		iLastSerial =3D dynamicdata.iContainerSerial
+		=

+		--~ printf("kPacket_Container_Contents %d/%d %s\n",i,itemcount,SmartDump=
(dynamicdata))
 		CreateOrUpdateDynamic(dynamicdata)
 	end
+	if (iLastSerial) then Update_Spellbook(iLastSerial) end
 end
 =

 -- This is sent by the server to add/update a single item to a container. =
(response to player dragdrop)
@@ -124,6 +128,6 @@
 	dynamicdata.zloc				=3D 0						--Grid Index (only since 6.0.1.7 2D and 2.=
45.5.6 KR)
 	dynamicdata.iContainerSerial	=3D input:PopNetUint32()
 	dynamicdata.hue					=3D input:PopNetUint16()
-	=

+	--~ print("kPacket_Object_to_Object",SmartDump(dynamicdata))
 	CreateOrUpdateDynamic(dynamicdata)
 end

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Thu Sep  4 16:54:40 2008
@@ -2,39 +2,40 @@
 -- see also lib.packet.lua and lib.protocol.lua
 -- see also net.popup.lua
 =

-kPacket_Generic_SubCommand_FastWalkInit			=3D 0x01
-kPacket_Generic_SubCommand_FastWalkAddKey		=3D 0x02
-kPacket_Generic_SubCommand_CloseGenericGump		=3D 0x04
-kPacket_Generic_SubCommand_Screensize			=3D 0x05
-kPacket_Generic_SubCommand_PartySystem			=3D 0x06
-kPacket_Generic_SubCommand_QuestArrow			=3D 0x07
-kPacket_Generic_SubCommand_MapChange			=3D 0x08
-kPacket_Generic_SubCommand_DisarmRequest		=3D 0x09
-kPacket_Generic_SubCommand_AOSTooltip			=3D 0x10
+gGenericSubCommands =3D {}
+gGenericSubCommands.kPacket_Generic_SubCommand_FastWalkInit			=3D 0x01
+gGenericSubCommands.kPacket_Generic_SubCommand_FastWalkAddKey		=3D 0x02
+gGenericSubCommands.kPacket_Generic_SubCommand_CloseGenericGump		=3D 0x04
+gGenericSubCommands.kPacket_Generic_SubCommand_Screensize			=3D 0x05
+gGenericSubCommands.kPacket_Generic_SubCommand_PartySystem			=3D 0x06
+gGenericSubCommands.kPacket_Generic_SubCommand_QuestArrow			=3D 0x07
+gGenericSubCommands.kPacket_Generic_SubCommand_MapChange			=3D 0x08
+gGenericSubCommands.kPacket_Generic_SubCommand_DisarmRequest		=3D 0x09
+gGenericSubCommands.kPacket_Generic_SubCommand_AOSTooltip			=3D 0x10
 --(0x0A) Sent by using the client Wrestle Stun Macro key in Options.
 --This is no longer used since AoS was introduced. The Macro selection tha=
t used it was removed.
-kPacket_Generic_SubCommand_Wrestling_Stun		=3D 0x0A
-kPacket_Generic_SubCommand_ClientLanguage		=3D 0x0B	-- Client sends Client=
-language to Server
-kPacket_Generic_SubCommand_CloseStatus			=3D 0x0C
-kPacket_Generic_SubCommand_3DClientAction		=3D 0x0E	-- Client Sent. Server=
 responds with Play Animation packets.
-kPacket_Generic_SubCommand_PopupRequest			=3D 0x13	-- Client -> Server pac=
ket
-kPacket_Generic_SubCommand_DisplayPopup			=3D 0x14
-kPacket_Generic_SubCommand_PopupEntrySelect		=3D 0x15
-kPacket_Generic_SubCommand_CodexOfWisdom		=3D 0x17
-kPacket_Generic_SubCommand_EnableMapDiff		=3D 0x18
-kPacket_Generic_SubCommand_ExtendedStats		=3D 0x19
-kPacket_Generic_SubCommand_ExtendedStats2		=3D 0x1A
-kPacket_Generic_SubCommand_NewSpellbook			=3D 0x1B	-- Create New Spellbook
-kPacket_Generic_SubCommand_SpellSelected		=3D 0x1C	-- Client -> Server pac=
ket ! Doppelclick auf Spell
-kPacket_Generic_SubCommand_RevisionCustomHouse	=3D 0x1D	-- Sends a house R=
evision number for handling client multi cache.
+gGenericSubCommands.kPacket_Generic_SubCommand_Wrestling_Stun		=3D 0x0A
+gGenericSubCommands.kPacket_Generic_SubCommand_ClientLanguage		=3D 0x0B	--=
 Client sends Client-language to Server
+gGenericSubCommands.kPacket_Generic_SubCommand_CloseStatus			=3D 0x0C
+gGenericSubCommands.kPacket_Generic_SubCommand_3DClientAction		=3D 0x0E	--=
 Client Sent. Server responds with Play Animation packets.
+gGenericSubCommands.kPacket_Generic_SubCommand_PopupRequest			=3D 0x13	-- =
Client -> Server packet
+gGenericSubCommands.kPacket_Generic_SubCommand_DisplayPopup			=3D 0x14
+gGenericSubCommands.kPacket_Generic_SubCommand_PopupEntrySelect		=3D 0x15
+gGenericSubCommands.kPacket_Generic_SubCommand_CodexOfWisdom		=3D 0x17
+gGenericSubCommands.kPacket_Generic_SubCommand_EnableMapDiff		=3D 0x18
+gGenericSubCommands.kPacket_Generic_SubCommand_ExtendedStats		=3D 0x19
+gGenericSubCommands.kPacket_Generic_SubCommand_ExtendedStats2		=3D 0x1A
+gGenericSubCommands.kPacket_Generic_SubCommand_NewSpellbook			=3D 0x1B	-- =
Create New Spellbook
+gGenericSubCommands.kPacket_Generic_SubCommand_SpellSelected		=3D 0x1C	-- =
Client -> Server packet ! Doppelclick auf Spell
+gGenericSubCommands.kPacket_Generic_SubCommand_RevisionCustomHouse	=3D 0x1=
D	-- Sends a house Revision number for handling client multi cache.
 															-- If revision is newer than what client has it asks for th=
e new multi packets to cache it.
-kPacket_Generic_SubCommand_HouseSerial			=3D 0x1E
-kPacket_Generic_SubCommand_Ability_Icon			=3D 0x21	-- nodata just (bf 00 0=
5 21) , used together with weapon abilities / combat skills
-kPacket_Generic_SubCommand_OldDamage			=3D 0x22	-- Done!
-kPacket_Generic_SubCommand_UnknownSE			=3D 0x24	-- Client -> Server packet
-kPacket_Generic_SubCommand_EnableSESpellIcons	=3D 0x25
-kPacket_Generic_SubCommand_SpeedMode			=3D 0x26
-kPacket_Generic_SubCommand_NewRaceGender		=3D 0x2A
+gGenericSubCommands.kPacket_Generic_SubCommand_HouseSerial			=3D 0x1E
+gGenericSubCommands.kPacket_Generic_SubCommand_Ability_Icon			=3D 0x21	-- =
nodata just (bf 00 05 21) , used together with weapon abilities / combat sk=
ills
+gGenericSubCommands.kPacket_Generic_SubCommand_OldDamage			=3D 0x22	-- Don=
e!
+gGenericSubCommands.kPacket_Generic_SubCommand_UnknownSE			=3D 0x24	-- Cli=
ent -> Server packet
+gGenericSubCommands.kPacket_Generic_SubCommand_EnableSESpellIcons	=3D 0x25
+gGenericSubCommands.kPacket_Generic_SubCommand_SpeedMode			=3D 0x26
+gGenericSubCommands.kPacket_Generic_SubCommand_NewRaceGender		=3D 0x2A
 --[[
 -race_gender-packet
 Client -> Server =

@@ -47,30 +48,32 @@
 WORD 	BeardId =

 WORD 	BeardHue
 ]]--
-kPacket_Generic_SubCommand_BandageTarget		=3D hex2num("0x2C")	-- Client ->=
 Server packet,For use with the new Bandage Self client macro. Introduced i=
n 5.0.4x
+gGenericSubCommands.kPacket_Generic_SubCommand_BandageTarget		=3D hex2num(=
"0x2C")	-- Client -> Server packet,For use with the new Bandage Self client=
 macro. Introduced in 5.0.4x
 =

 --[[
 --new sincec KR
-kPacket_Generic_SubCommand_KR_HouseGumpResponse =3D hex2num("0x2F")	-- BF.=
2F - KR House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_default =3D hex2num("0x63"=
)	--BF.2F.63 - KR Default House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_pubpriv =3D hex2num("0x65"=
)	--BF.2F.65 - KR Change Public/Private House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_convert =3D hex2num("0x66"=
)	--BF.2F.66 - KR Convert into the customizable House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_relocate=3D hex2num("0x68"=
)	--BF.2F.68 - KR Relocate Moving Crate House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_sign	=3D hex2num("0x69")	-=
-BF.2F.69 - KR Change Sign House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_hanger	=3D hex2num("0x6A")=
	--BF.2F.6A - KR Change Sign Hanger House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_post	=3D hex2num("0x6B")	-=
-BF.2F.6B - KR Change Sign Post House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_foundation=3D hex2num("0x6=
C")	--BF.2F.6C - KR Change Foundation Style House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_rename	=3D hex2num("0x6D")=
	--BF.2F.6D - KR Rename House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_demolish=3D hex2num("0x6E"=
)	--BBF.2F.6E - KR Demolish House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_trade	=3D hex2num("0x6F")	=
--BF.2F.6F - KR Trade House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_primary	=3D hex2num("0x70"=
)	--BF.2F.70 - KR Make Primary House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_coowner	=3D hex2num("0x71"=
)	--BF.2F.71 - KR Change To Co-Owner House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_friend	=3D hex2num("0x72")=
	--BF.2F.72 - KR Change To Friend House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_access	=3D hex2num("0x73")=
	--BF.2F.73 - KR Change To Access House Menu Gump Response
-kPacket_Generic_SubCommand_KR_HouseGumpResponse_primary	=3D hex2num("0x74"=
)	--BF.2F.74 - KR Ban House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse =3D he=
x2num("0x2F")	-- BF.2F - KR House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_defaul=
t =3D hex2num("0x63")	--BF.2F.63 - KR Default House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_pubpri=
v =3D hex2num("0x65")	--BF.2F.65 - KR Change Public/Private House Menu Gump=
 Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_conver=
t =3D hex2num("0x66")	--BF.2F.66 - KR Convert into the customizable House M=
enu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_reloca=
te=3D hex2num("0x68")	--BF.2F.68 - KR Relocate Moving Crate House Menu Gump=
 Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_sign	=
=3D hex2num("0x69")	--BF.2F.69 - KR Change Sign House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_hanger=
	=3D hex2num("0x6A")	--BF.2F.6A - KR Change Sign Hanger House Menu Gump Res=
ponse
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_post	=
=3D hex2num("0x6B")	--BF.2F.6B - KR Change Sign Post House Menu Gump Respon=
se
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_founda=
tion=3D hex2num("0x6C")	--BF.2F.6C - KR Change Foundation Style House Menu =
Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_rename=
	=3D hex2num("0x6D")	--BF.2F.6D - KR Rename House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_demoli=
sh=3D hex2num("0x6E")	--BBF.2F.6E - KR Demolish House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_trade	=
=3D hex2num("0x6F")	--BF.2F.6F - KR Trade House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_primar=
y	=3D hex2num("0x70")	--BF.2F.70 - KR Make Primary House Menu Gump Response
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_coowne=
r	=3D hex2num("0x71")	--BF.2F.71 - KR Change To Co-Owner House Menu Gump Re=
sponse
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_friend=
	=3D hex2num("0x72")	--BF.2F.72 - KR Change To Friend House Menu Gump Respo=
nse
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_access=
	=3D hex2num("0x73")	--BF.2F.73 - KR Change To Access House Menu Gump Respo=
nse
+gGenericSubCommands.kPacket_Generic_SubCommand_KR_HouseGumpResponse_primar=
y	=3D hex2num("0x74")	--BF.2F.74 - KR Ban House Menu Gump Response
 --a.s.o. to BF.2F.80
-kPacket_Generic_SubCommand_TargetbyResource		=3D hex2num("0x30")	---BF.30 =
- KR Target By Resource Macro
+gGenericSubCommands.kPacket_Generic_SubCommand_TargetbyResource		=3D hex2n=
um("0x30")	---BF.30 - KR Target By Resource Macro
 ]]--
+gGenericSubCommandNamesByID =3D {}
+for k,v in pairs(gGenericSubCommands) do _G[k] =3D v gGenericSubCommandNam=
esByID[v] =3D k end
 =

 gActWarmode =3D 0
 		=

@@ -142,7 +145,8 @@
 	local id =3D input:PopNetUint8()
 	local size =3D input:PopNetUint16()
 	local subcmd =3D input:PopNetUint16()
-	printdebug("net",sprintf("NET: kPacket_Generic_Command size=3D0x%04x subc=
md=3D0x%04x\n",size,subcmd))
+	printf("NET: kPacket_Generic_Command size=3D0x%04x subcmd=3D0x%04x=3D%s\n=
",size,subcmd,tostring(gGenericSubCommandNamesByID[subcmd]))
+	printdebug("net",sprintf("NET: kPacket_Generic_Command size=3D0x%04x subc=
md=3D0x%04x=3D%s\n",size,subcmd,tostring(gGenericSubCommandNamesByID[subcmd=
])))
 =

 	-- FastWalkInit : 6 keys (runuo's fifosize 0-255)
 	if (subcmd =3D=3D kPacket_Generic_SubCommand_FastWalkInit) then -- 0x01

Modified: trunk/lua/obj/obj.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.container.lua (original)
+++ trunk/lua/obj/obj.container.lua Thu Sep  4 16:54:40 2008
@@ -74,6 +74,7 @@
 -- called from kPacket_Open_Container
 function HandleOpenContainer	(containerdata)
 	if (not gGumpLoader) then return end
+	--~ print("HandleOpenContainer",SmartDump(containerdata))
 	=

 	--Ignore Shop container - created somewhere else
 	if (containerdata.gumpid =3D=3D kGumpIDShopContainer) then
@@ -87,9 +88,6 @@
 		spellbook.old=3Dtrue
 		spellbook.serial =3D containerdata.serial
 		spellbook.itemid =3D containerdata.gumpid
-		spellbook.scrolloffset =3D 0
-		spellbook.matrix =3D {}
-		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
 		-- container with spell is already created (invisible)
 		Open_Spellbook(spellbook)
 		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)



From no-reply at zwischenwelt.org  Sat Sep  6 02:28:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Sep 2008 00:28:16 -0000
Subject: [Iris-commit] [IRIS] r2450 - /trunk/lua/gui/gui.amount.lua
Message-ID: <20080906002817.0C7991524030@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep  6 02:28:14 2008
New Revision: 2450

Log:
drag-amount dialog bugfix (button callback)

Modified:
    trunk/lua/gui/gui.amount.lua

Modified: trunk/lua/gui/gui.amount.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.amount.lua (original)
+++ trunk/lua/gui/gui.amount.lua Sat Sep  6 02:28:14 2008
@@ -91,6 +91,7 @@
 =

 	-- overwrite the dialog close function from gumpparser
 	dialog.SendClose =3D function (self) local amount =3D self.currentValue C=
loseAmount() self.callback_done(amount) end
+	dialog.gumpdata.functions =3D { [0] =3D function (widget) local amount =
=3D dialog.currentValue CloseAmount() dialog.callback_done(amount) end }
 	=

 =

 	-- drag the dot around



From no-reply at zwischenwelt.org  Sat Sep  6 05:01:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Sep 2008 03:01:20 -0000
Subject: [Iris-commit] [IRIS] r2451 - in /trunk/lua: lib.2d.spriteblock.lua
 lib.mapblock.2d.statics.lua
Message-ID: <20080906040011.D40321C18016@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep  6 05:01:20 2008
New Revision: 2451

Log:
2d experiments

Modified:
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.mapblock.2d.statics.lua

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sat Sep  6 05:01:20 2008
@@ -9,23 +9,35 @@
 function cUOSpriteBlock:New () local c =3D CreateClassInstance(cUOSpriteBl=
ock) return c end
 function cUOSpriteBlock:Init ()
 	self.pStaticAtlasMats =3D {} -- self.pStaticAtlasMats[iTileTypeID][iHue] =
=3D pAtlasPiece (see ArtAtlasLoadAndLock)
-	self.pStaticGroups =3D {}
-	self.spritelists =3D {}
+	self.pGroupGfx =3D {}
+	self.pSpritesByAtlas =3D {}
 	self.rendergroup2d =3D CreateRenderGroup2D(GetGUILayer_Dialogs():CastToRe=
nderGroup2D()) -- TODO : needs extra layer
 end
 =

-function cUOSpriteBlock:CamStep(t,x,y,z)
+function cUOSpriteBlock:CamStep(t,xloc,yloc,zloc)
+	if (not self.bx) then return end
+	local vw,vh =3D GetViewportSize()
+	local dx =3D self.bx * 8 - xloc
+	local dy =3D self.by * 8 - yloc
+	local px,py =3D TileOffsetToPixelOffset(dx,dy)
 	--~ print("cUOSpriteBlock:CamStep",t,x,y,z)
-	local gx,gy,gz =3D 0,0,0
-	self.rendergroup2d:SetPos(gx,gy,gz)
+	local gx,gy,gz =3D floor(px),floor(py),0
+	self.rendergroup2d:SetPos(gx+vw*0.5,gy+vh*0.5+66,gz)
 end
 =

 function cUOSpriteBlock:Destroy ()
-	if (self.pStaticGroupGfx) then for k,v in pairs(self.pStaticGroupGfx) do =
v:Destroy() end self.pStaticGroupGfx =3D nil end
+	if (self.pGroupGfx) then for k,v in pairs(self.pGroupGfx) do v:Destroy() =
end self.pGroupGfx =3D nil end
+	self.bx =3D nil
+end
+
+function TileOffsetToPixelOffset (tx,ty)
+	return	tx *  22 + ty * -22,
+			tx *  22 + ty *  22
 end
 =

 -- load textures to atlas, artid-hue
 -- static comes from MapGetBlockStatics(bx,by)
+-- {zloc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bx=3D?,by=
=3D?,bIsStatic=3Dtrue}
 function cUOSpriteBlock:AddStatic (static)
 	local iTileTypeID	=3D static.artid
 	local iHue			=3D static.hue
@@ -43,14 +55,39 @@
 	-- add to matname group
 	if (pAtlasPiece) then
 		local atlas =3D pAtlasPiece.atlas
-		local group =3D self.pStaticGroups[atlas]
-		if (not group) then group =3D {} self.pStaticGroups[atlas] =3D group end
-		table.insert(group,static)
+		local group =3D self.pSpritesByAtlas[atlas]
+		if (not group) then group =3D {} self.pSpritesByAtlas[atlas] =3D group e=
nd
+		local w =3D pAtlasPiece.w
+		local h =3D pAtlasPiece.h
+		local tx =3D static.tx
+		local ty =3D static.ty
+		local pTileType =3D GetStaticTileType(static.artid)
+		local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileTyp=
e.miHeight + 0.001*static.iBlockIndex) =

+		-- + =3D nearer to cam      -- guess this works ok for now, but far from=
 ideal
+		--~ print(static.zloc)
+		local z =3D 0.1 - static.zloc*0.01 --  + fOrderCorrection
+		local px,py =3D TileOffsetToPixelOffset(tx,ty)
+		local sprite =3D {
+			u0 =3D pAtlasPiece.u0,
+			v0 =3D pAtlasPiece.v0,
+			u1 =3D pAtlasPiece.u1,
+			v1 =3D pAtlasPiece.v1,
+			z_top    =3D z,
+			z_bottom =3D z,
+			w =3D w,
+			h =3D h,
+			x =3D floor(px - w*0.5 ),
+			y =3D floor(py - h		- 4*static.zloc), -- 1 z-unit =3D 4 pixels upwards =
in the original client
+			artid =3D static.artid, -- for mousepicking
+		}
+		table.insert(group,sprite)
 	end
 end
 =

 =

-function cUOSpriteBlock:Build 	(bx,by)
+function cUOSpriteBlock:Build 	(bx,by,basemat)
+	self.bx =3D bx
+	self.by =3D by
 	--[[
 	local bVertexBufferDynamic	=3Dfalse
 	local bVertexCol			=3Dfalse
@@ -62,48 +99,90 @@
 	SpriteList_SetSprite(iSpriteIndex, l,t,w,h, u0,v0, uvw, uvh, z)
 	SpriteList_Close()
 	]]--
+	=

+	if (true) then =

+		for atlas,group in pairs(self.pSpritesByAtlas) do
+			if (#group > 0) then =

+				local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
+				-- TODO : sort by z for blendout upper floors ?
+				local spritecount =3D #group
+				local gfx =3D CreateRobRenderable2D(self.rendergroup2d)
+				table.insert(self.pGroupGfx,gfx)
+				gfx:SetMaterial(matname)
+				=

+				-- generate geometry
+				local vc =3D 4*spritecount
+				local ic =3D 6*spritecount
+				local bDynamic,bKeepOldIndices =3D false,false
+				RobRenderable2D_Open(gfx,vc,ic,bDynamic,bKeepOldIndices,OT_TRIANGLE_LI=
ST)
+				vc =3D 0
+				for k,sprite in pairs(group) do
+					local x =3D sprite.x
+					local y =3D sprite.y
+					local w =3D sprite.w
+					local h =3D sprite.h
+					local z_bottom	=3D sprite.z_bottom
+					local z_top		=3D sprite.z_top
+					local u0 		=3D sprite.u0
+					local v0 		=3D sprite.v0
+					local u1 		=3D sprite.u1
+					local v1 		=3D sprite.v1
+					RobRenderable2D_Vertex(x  ,y  ,z_top, 	u0,v0)
+					RobRenderable2D_Vertex(x+w,y  ,z_top, 	u1,v0)
+					RobRenderable2D_Vertex(x  ,y+h,z_bottom,u0,v1)
+					RobRenderable2D_Vertex(x+w,y+h,z_bottom,u1,v1)
+					RobRenderable2D_Index3(vc+0,vc+2,vc+1)
+					RobRenderable2D_Index3(vc+1,vc+2,vc+3)
+					vc =3D vc + 4
+				end
+				RobRenderable2D_Close()
+			end
+		end
+	end
 =

-
-
-	-- statics : create gfx
-	self.pStaticGroupGfx =3D {}
-	-- -so 1420,1550
-	-- -so 552,2088
-	-- -so 632,1488
-	for atlas,group in pairs(self.pStaticGroups) do
-		local matname =3D ArtAtlasLoadMaterial(atlas,Renderer2D.kAtlasBaseMateri=
al)
-		-- TODO : sort by z for blendout upper floors
-		local spritecount =3D table.getn(group)
-		local x,y,z =3D gCurrentRenderer:UOPosToLocal(bx*8,by*8,0)
-		local gfx =3D CreateRootGfx3D()
-		table.insert(self.pStaticGroupGfx,gfx)
-		gfx:SetPosition(x,y,z)
-		gfx:SetSimpleRenderable()
-		gfx:SetMaterial(matname)
-		=

-		-- generate geometry
-		local vc =3D 4*spritecount
-		local ic =3D 6*spritecount
-		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-		vc =3D 0
-		for k,static in pairs(group) do
-			local pAtlasPiece =3D self.pStaticAtlasMats[static.artid][static.hue] -=
- u0 v0 u1 v1 w h
-			local pTileType =3D GetStaticTileType(static.artid)
-			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-			local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileTy=
pe.miHeight + 0.001*static.iBlockIndex)  -- + =3D nearer to cam      -- gue=
ss this works ok for now, but far from ideal
-			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

-			y =3D y +   1 * fOrderCorrection + 1
-			z =3D z + kSq2 * fOrderCorrection
-			local w =3D k2D_ScaleW05 * pAtlasPiece.w
-			local h =3D k2D_ScaleH   * pAtlasPiece.h
-			gfx:RenderableVertex(x-w,y-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
-			gfx:RenderableVertex(x+w,y+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
-			gfx:RenderableVertex(x-w,y-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
-			gfx:RenderableVertex(x+w,y+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
-			gfx:RenderableIndex3(vc+0,vc+2,vc+1)
-			gfx:RenderableIndex3(vc+1,vc+2,vc+3)
-			vc =3D vc + 4
+	--[[
+	old, for 3d statics
+	if (true) then =

+		-- statics : create gfx
+		-- -so 1420,1550
+		-- -so 552,2088
+		-- -so 632,1488
+		for atlas,group in pairs(self.pSpritesByAtlas) do
+			local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
+			-- TODO : sort by z for blendout upper floors
+			local spritecount =3D table.getn(group)
+			local x,y,z =3D gCurrentRenderer:UOPosToLocal(bx*8,by*8,0)
+			local gfx =3D CreateRootGfx3D()
+			table.insert(self.pGroupGfx,gfx)
+			gfx:SetPosition(x,y,z)
+			gfx:SetSimpleRenderable()
+			gfx:SetMaterial(matname)
+			=

+			-- generate geometry
+			local vc =3D 4*spritecount
+			local ic =3D 6*spritecount
+			gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
+			vc =3D 0
+			for k,static in pairs(group) do
+				local pAtlasPiece =3D self.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
+				local pTileType =3D GetStaticTileType(static.artid)
+				local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
+				local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileT=
ype.miHeight + 0.001*static.iBlockIndex)  -- + =3D nearer to cam      -- gu=
ess this works ok for now, but far from ideal
+				x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too h=
igh normally, this moves them down =

+				y =3D y +   1 * fOrderCorrection + 1
+				z =3D z + kSq2 * fOrderCorrection
+				local w =3D k2D_ScaleW05 * pAtlasPiece.w
+				local h =3D k2D_ScaleH   * pAtlasPiece.h
+				gfx:RenderableVertex(x-w,y-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
+				gfx:RenderableVertex(x+w,y+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
+				gfx:RenderableVertex(x-w,y-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
+				gfx:RenderableVertex(x+w,y+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
+				gfx:RenderableIndex3(vc+0,vc+2,vc+1)
+				gfx:RenderableIndex3(vc+1,vc+2,vc+3)
+				vc =3D vc + 4
+			end
+			gfx:RenderableEnd()
 		end
-		gfx:RenderableEnd()
 	end
+	]]--
 end

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Sat Sep  6 05:01:20 2008
@@ -29,5 +29,5 @@
 	=

 	-- construct geometry
 	self:Yield()
-	spriteblock:Build(self.bx,self.by)
+	spriteblock:Build(self.bx,self.by,Renderer2D.kAtlasBaseMaterial)
 end



From no-reply at zwischenwelt.org  Sat Sep  6 10:35:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Sep 2008 08:35:51 -0000
Subject: [Iris-commit] [IRIS] r2452 - in /trunk: bin/iris2.exe
	vc8/iris.vcproj
Message-ID: <20080906083551.9324C1C186A7@zwischenwelt.org>

Author: sience
Date: Sat Sep  6 10:35:50 2008
New Revision: 2452

Log:
-updaterate for caelum added
-project updated for caelum
-new w32 binary

Modified:
    trunk/bin/iris2.exe
    trunk/vc8/iris.vcproj

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Sat Sep  6 10:35:50 2008
@@ -1102,6 +1102,10 @@
 						>
 					</File>
 					<File
+						RelativePath=3D"..\lugre\lib\caelum\src\DepthComposer.cpp"
+						>
+					</File>
+					<File
 						RelativePath=3D"..\lugre\lib\caelum\src\FlatCloudLayer.cpp"
 						>
 					</File>
@@ -1183,6 +1187,10 @@
 					</File>
 					<File
 						RelativePath=3D"..\lugre\lib\caelum\include\CloudSystem.h"
+						>
+					</File>
+					<File
+						RelativePath=3D"..\lugre\lib\caelum\include\DepthComposer.h"
 						>
 					</File>
 					<File



From no-reply at zwischenwelt.org  Sat Sep  6 10:42:00 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Sep 2008 08:42:00 -0000
Subject: [Iris-commit] [IRIS] r2453 - /trunk/lua/lib.3d.renderer.lua
Message-ID: <20080906084200.9AA521C186A7@zwischenwelt.org>

Author: sience
Date: Sat Sep  6 10:42:00 2008
New Revision: 2453

Log:
-forgot to add modification

Modified:
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sat Sep  6 10:42:00 2008
@@ -65,6 +65,7 @@
 	-- initialize Mapenvironment
 	self:SetMapEnvironment()
 	-- initialize Shadowsystem
+	print(gShadowTechnique)
 	self:SetupShadows(gShadowTechnique)
 =

 -- sience: not needed anymore? bring up and assertion failure (it seems wi=
thout, everything is correct)
@@ -190,12 +191,14 @@
 	        CAELUM_COMPONENT_IMAGE_STARFIELD +
 	        CAELUM_COMPONENT_CLOUDS +
 	        CAELUM_COMPONENT_PRECIPITATION +
-	        0
+	        --CAELUM_COMPONENT_SCREEN_SPACE_FOG +
+	        0 --CAELUM_COMPONENT_GROUND_FOG
 		)
 			=

 		gCaelumSystem:SetManageSceneFog(true)
 		gCaelumSystem:SetSceneFogDensityMultiplier(0.0115)
 		gCaelumSystem:SetManageAmbientLight(true)
+		gCaelumSystem:SetUpdateTimeout(10)
 			=

 		local sun =3D gCaelumSystem:GetSun()
 		if sun then
@@ -233,12 +236,6 @@
 		--number year, number month, number day, number hour, number minute, num=
ber second
 		local t =3D os.date('*t')
 		cl:SetGregorianDateTime(t.year, t.month, t.day, t.hour, t.min, t.sec)
-
-		--~ cl:SetTimeScale(1024)
-		=

-		-- to prevent wobbly shadows
-		-- updates clock and caelum every 30 sec
---		cl:SetUpdateRate(30)
 =

 		function rotate(gfx,w,x,y,z)
 			local ww,xx,yy,zz =3D gfx:GetOrientation()



From no-reply at zwischenwelt.org  Sat Sep  6 19:05:45 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Sep 2008 17:05:45 -0000
Subject: [Iris-commit] [IRIS] r2454 - in /trunk/lua: lib.data.lua
	lib.map.lua main.lua
Message-ID: <20080906180007.84E831C186A6@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep  6 19:05:44 2008
New Revision: 2454

Log:
small additions for 2d

Modified:
    trunk/lua/lib.data.lua
    trunk/lua/lib.map.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.data.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.data.lua (original)
+++ trunk/lua/lib.data.lua Sat Sep  6 19:05:44 2008
@@ -19,6 +19,7 @@
 end
 =

 -- many thanks to varan for his 2d renderer code for this =3D)
+-- dynamic,nonmulti : +1     effect=3D8 mobile=3D7
 function GetStaticFlagSortBonus2D (flags)
 	local bBackGround	=3D TestBit(flags,kTileDataFlag_Background)
 	local bSurface		=3D TestBit(flags,kTileDataFlag_Surface)

Modified: trunk/lua/lib.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.map.lua (original)
+++ trunk/lua/lib.map.lua Sat Sep  6 19:05:44 2008
@@ -70,7 +70,7 @@
 	end
 	for i =3D 0,iStaticCount-1 do
 		local iTileTypeID,tx,ty,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,tx=3Dtx,ty=3D=
ty,xloc=3Dtx+bx*8,yloc=3Dty+by*8,bx=3Dbx,by=3Dby,iBlockIndex=3Di,bIsStatic=
=3Dtrue}
+		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,tx=3Dtx,ty=3D=
ty,xloc=3Dtx+bx*8,yloc=3Dty+by*8,bx=3Dbx,by=3Dby,iBlockIndex=3Di,fBlockInde=
xRel=3Di/iStaticCount,bIsStatic=3Dtrue}
 		table.insert(b.statics_bypos[ty*10 + tx],static)
 		table.insert(b.statics_all,static)
 	end

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat Sep  6 19:05:44 2008
@@ -398,6 +398,7 @@
 =

 -- called every frame, after all timer-steppers, see Step() in lib.time.lua
 function MainStep ()
+	gViewportW,gViewportH =3D GetViewportSize()
 	LugreStep()
 	=

 	NotifyListener("Hook_MainStep") -- should called before physstep, so obje=
ct position changes affect the gfx correctly



From no-reply at zwischenwelt.org  Sat Sep  6 20:37:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Sep 2008 18:37:33 -0000
Subject: [Iris-commit] [IRIS] r2455 - in /trunk/lua: lib.3d.renderer.lua
 net/net.effect.lua net/net.mobile.lua net/net.sound.lua
Message-ID: <20080906183733.416561524030@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep  6 20:37:32 2008
New Revision: 2455

Log:
swing/hit/block counting

Modified:
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/net/net.effect.lua
    trunk/lua/net/net.mobile.lua
    trunk/lua/net/net.sound.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sat Sep  6 20:37:32 2008
@@ -518,7 +518,7 @@
 function Renderer3D:AddHuedMeshEffect( effect, relx, rely, relz )
 	local meshname =3D GetMeshName(effect.itemid)
 =

-	printdebug("effect",sprintf("Create ParticleEffect with Meshname=3D%s Par=
ticleID=3D0x%04x.\n",meshname,effect.itemid) )
+	printdebug("effect",sprintf("Create ParticleEffect with Meshname=3D%s Par=
ticleID=3D0x%04x.\n",meshname or "false",effect.itemid) )
 =

 	if (meshname and meshname ~=3D false) then
 		effect.gfx =3D CreateRootGfx3D()

Modified: trunk/lua/net/net.effect.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.effect.lua (original)
+++ trunk/lua/net/net.effect.lua Sat Sep  6 20:37:32 2008
@@ -36,4 +36,9 @@
 			effect.target_locx, effect.target_locy, effect.target_locz, gEffectType=
s[effect.effect_type]) )
 	=

 	if (gParticleEffectSystem) then gCurrentRenderer:AddEffect( effect ) end
+	=

+	print("kPacket_Hued_FX",SmartDump(effect))
+	gEffectCounter =3D gEffectCounter or {}
+	gEffectCounter[effect.sourceserial] =3D gEffectCounter[effect.sourceseria=
l] or {}
+	gEffectCounter[effect.sourceserial][effect.itemid] =3D (gEffectCounter[ef=
fect.sourceserial][effect.itemid] or 0) + 1
 end

Modified: trunk/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.mobile.lua (original)
+++ trunk/lua/net/net.mobile.lua Sat Sep  6 20:37:32 2008
@@ -117,6 +117,11 @@
 	printdebug("animation","Animation "..vardump2(animdata))
 	=

 	gCurrentRenderer:MobileStartServerSideAnim(animdata)
+	=

+	=

+	gAnimCounter =3D gAnimCounter or {}
+	gAnimCounter[animdata.mobileserial] =3D gAnimCounter[animdata.mobileseria=
l] or {}
+	gAnimCounter[animdata.mobileserial][animdata.m_animation] =3D (gAnimCount=
er[animdata.mobileserial][animdata.m_animation] or 0) + 1
 end
 =

 -- Note: For characters other than the player, curHits and maxHits are not=
 the actual values.
@@ -304,6 +309,29 @@
 	local attacker_serial =3D input:PopNetUint32()
 	local defender_serial =3D input:PopNetUint32()
 	printdebug("mobile",sprintf("NET: kPacket_Swing Animation: attacker=3D0x%=
08x defender=3D0x%08x\n",attacker_serial,defender_serial))
+	=

+	gCountSwings =3D true
+	if (gCountSwings and gSwingCounter and attacker_serial =3D=3D GetPlayerSe=
rial()) then =

+		local hits =3D 0
+		local blockedhits =3D 0
+		local swings =3D gSwingCounter[attacker_serial]
+		for mobileserial,arr in pairs(gAnimCounter or {}) do
+			for m_animation,count in pairs(arr) do
+				if (mobileserial ~=3D GetPlayerSerial() and m_animation =3D=3D 0x00000=
014) then hits =3D hits + count end
+				printf("anim mob=3D0x%08x(%s) anim=3D0x%08x count=3D%d\n",mobileserial=
,(mobileserial =3D=3D GetPlayerSerial()) and "self" or "other",m_animation,=
count)
+			end
+		end
+		for mobileserial,arr in pairs(gEffectCounter or {}) do
+			for effectid,count in pairs(arr) do
+				if (mobileserial ~=3D GetPlayerSerial() and effectid =3D=3D 0x37b9) th=
en blockedhits =3D blockedhits + count end
+				printf("effect mob=3D0x%08x(%s) effectid=3D0x%08x count=3D%d\n",mobile=
serial,(mobileserial =3D=3D GetPlayerSerial()) and "self" or "other",effect=
id,count)
+			end
+		end
+		print("#### swings:",swings,"hits:",hits,"blockedhits",blockedhits)
+	end
+	=

+	gSwingCounter =3D gSwingCounter or {}
+	gSwingCounter[attacker_serial] =3D (gSwingCounter[attacker_serial] or 0) =
+ 1
 end
 =

 -- TODO : what is the result of this packet?

Modified: trunk/lua/net/net.sound.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.sound.lua (original)
+++ trunk/lua/net/net.sound.lua Sat Sep  6 20:37:32 2008
@@ -11,6 +11,9 @@
 	local z =3D input:PopNetUint16()
 	printdebug("sound",sprintf("NET: kPacket_Sound: effect: %i singular: %i x=
: %i y: %i z: %i\n",effect,singular,x,y,z))
 	SoundPlayEffect_UO(x,y,z * 0.1,effect)
+	=

+	gSoundCounter =3D gSoundCounter or {}
+	gSoundCounter[effect] =3D (gSoundCounter[effect] or 0) + 1
 end
 =

 -- ProtocolRecv_Play_Midi



From no-reply at zwischenwelt.org  Sat Sep  6 21:31:32 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Sep 2008 19:31:32 -0000
Subject: [Iris-commit] [IRIS] r2456 - /trunk/lua/net/net.mobile.lua
Message-ID: <20080906193132.B630E1C1803E@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep  6 21:31:31 2008
New Revision: 2456

Log:
swing-speed log

Modified:
    trunk/lua/net/net.mobile.lua

Modified: trunk/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.mobile.lua (original)
+++ trunk/lua/net/net.mobile.lua Sat Sep  6 21:31:31 2008
@@ -312,6 +312,10 @@
 	=

 	gCountSwings =3D true
 	if (gCountSwings and gSwingCounter and attacker_serial =3D=3D GetPlayerSe=
rial()) then =

+		local timesincelast =3D 0
+		local t =3D Client_GetTicks()
+		if (gLastSwingTime) then timesincelast =3D t - gLastSwingTime end
+		gLastSwingTime =3D t
 		local hits =3D 0
 		local blockedhits =3D 0
 		local swings =3D gSwingCounter[attacker_serial]
@@ -327,7 +331,7 @@
 				printf("effect mob=3D0x%08x(%s) effectid=3D0x%08x count=3D%d\n",mobile=
serial,(mobileserial =3D=3D GetPlayerSerial()) and "self" or "other",effect=
id,count)
 			end
 		end
-		print("#### swings:",swings,"hits:",hits,"blockedhits",blockedhits)
+		printf("#### swings:%d hits:%d blockedhits:%d timesincelast=3D%d\n",swin=
gs,hits,blockedhits,timesincelast)
 	end
 	=

 	gSwingCounter =3D gSwingCounter or {}



From no-reply at zwischenwelt.org  Sun Sep  7 14:26:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 07 Sep 2008 12:26:14 -0000
Subject: [Iris-commit] [IRIS] r2457 - /trunk/lua/lib.3d.renderer.lua
Message-ID: <20080907122614.7CF381C1870E@zwischenwelt.org>

Author: hagish
Date: Sun Sep  7 14:26:14 2008
New Revision: 2457

Log:
lugre api change in SetPath stuff

Modified:
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sun Sep  7 14:26:14 2008
@@ -483,7 +483,7 @@
 				return true
 			end
 			=

-			effect.gfx:SetAnimTimePos((gMyTicks-startt) / 1000)
+			effect.gfx:SetPathAnimTimePos((gMyTicks-startt) / 1000)
 		end)
 	elseif effect.effect_type =3D=3D kEffectType_FollowSource then
 		-- add stepper to handle effect movement



From no-reply at zwischenwelt.org  Fri Sep 12 00:37:28 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 11 Sep 2008 22:37:28 -0000
Subject: [Iris-commit] [IRIS] r2458 - in /trunk/lua:
	lib.export_houseland.lua lib.map.lua main.lua
Message-ID: <20080911223729.26B0A1C186A4@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Sep 12 00:37:28 2008
New Revision: 2458

Log:
map analysis for house-build-spots

Added:
    trunk/lua/lib.export_houseland.lua
Modified:
    trunk/lua/lib.map.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.map.lua (original)
+++ trunk/lua/lib.map.lua Fri Sep 12 00:37:28 2008
@@ -26,6 +26,7 @@
 =

 -- returns tiletype,z       xloc,yloc in absolute tilecoords
 function GetGroundAtAbsPos (xloc,yloc) local g =3D MapGetGround(xloc,yloc)=
 return g.iTileType,g.zloc end
+function GetGroundZAtAbsPos (xloc,yloc) local g =3D MapGetGround(xloc,yloc=
) return g.zloc end
 =

 -- returns an array,  {{artid=3D?,zloc=3D?,hue=3D?},...}
 function GetStaticsAtAbsPos (xloc,yloc) return MapGetStatics(xloc,yloc) end

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Fri Sep 12 00:37:28 2008
@@ -479,6 +479,10 @@
 		os.exit(0)
 	end
 	=

+	if (gCommandLineArguments[1] =3D=3D "-ehouseland") then -- export map xlo=
c,yloc,mapblocksw,mapblocksh
+		dofile(libpath .. "lib.export_houseland.lua")
+	end
+	=

 	if (gCommandLineArguments[1] =3D=3D "-eg") then -- export gumps
 		local iGumpIDMin =3D gCommandLineArguments[gCommandLineSwitches["-eg"]+1]
 		local iGumpIDMax =3D gCommandLineArguments[gCommandLineSwitches["-eg"]+2]



From no-reply at zwischenwelt.org  Mon Sep 15 22:57:02 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 15 Sep 2008 20:57:02 -0000
Subject: [Iris-commit] [IRIS] r2459 - /trunk/bin/iris2.exe
Message-ID: <20080915205703.3D8D31C18799@zwischenwelt.org>

Author: sience
Date: Mon Sep 15 22:57:01 2008
New Revision: 2459

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Fri Sep 19 23:14:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 19 Sep 2008 21:14:16 -0000
Subject: [Iris-commit] [IRIS] r2460 - in /trunk/lua: lib.2d.spriteblock.lua
	lib.artatlas.lua
Message-ID: <20080919211417.135771524030@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Sep 19 23:14:16 2008
New Revision: 2460

Log:
artatlas : fixed bug with dirty flag, 2d-renderer : improved spriteblock

Modified:
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.artatlas.lua

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Fri Sep 19 23:14:16 2008
@@ -11,19 +11,9 @@
 	self.pStaticAtlasMats =3D {} -- self.pStaticAtlasMats[iTileTypeID][iHue] =
=3D pAtlasPiece (see ArtAtlasLoadAndLock)
 	self.pGroupGfx =3D {}
 	self.pSpritesByAtlas =3D {}
-	self.rendergroup2d =3D CreateRenderGroup2D(GetGUILayer_Dialogs():CastToRe=
nderGroup2D()) -- TODO : needs extra layer
 end
 =

-function cUOSpriteBlock:CamStep(t,xloc,yloc,zloc)
-	if (not self.bx) then return end
-	local vw,vh =3D GetViewportSize()
-	local dx =3D self.bx * 8 - xloc
-	local dy =3D self.by * 8 - yloc
-	local px,py =3D TileOffsetToPixelOffset(dx,dy)
-	--~ print("cUOSpriteBlock:CamStep",t,x,y,z)
-	local gx,gy,gz =3D floor(px),floor(py),0
-	self.rendergroup2d:SetPos(gx+vw*0.5,gy+vh*0.5+66,gz)
-end
+function cUOSpriteBlock:CamStep(t,xloc,yloc,zloc) end
 =

 function cUOSpriteBlock:Destroy ()
 	if (self.pGroupGfx) then for k,v in pairs(self.pGroupGfx) do v:Destroy() =
end self.pGroupGfx =3D nil end
@@ -42,6 +32,8 @@
 	local iTileTypeID	=3D static.artid
 	local iHue			=3D static.hue
 	=

+	iHue =3D 0
+	=

 	local arr =3D self.pStaticAtlasMats[iTileTypeID]
 	if (not arr) then arr =3D {} self.pStaticAtlasMats[iTileTypeID] =3D arr e=
nd
 	=

@@ -57,30 +49,64 @@
 		local atlas =3D pAtlasPiece.atlas
 		local group =3D self.pSpritesByAtlas[atlas]
 		if (not group) then group =3D {} self.pSpritesByAtlas[atlas] =3D group e=
nd
-		local w =3D pAtlasPiece.w
-		local h =3D pAtlasPiece.h
+		local pw =3D pAtlasPiece.w
+		local ph =3D pAtlasPiece.h
 		local tx =3D static.tx
 		local ty =3D static.ty
+		local zloc =3D static.zloc
 		local pTileType =3D GetStaticTileType(static.artid)
-		local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileTyp=
e.miHeight + 0.001*static.iBlockIndex) =

-		-- + =3D nearer to cam      -- guess this works ok for now, but far from=
 ideal
-		--~ print(static.zloc)
-		local z =3D 0.1 - static.zloc*0.01 --  + fOrderCorrection
+		=

+		--~ prio1 =3D zloc + iSortBonus2D				iSortBonus2D in {2,3,4,6} (+1 for d=
ynamic)
+		--~ prio2 =3D miHeight						in [0,100]
+		--~ prio3 =3D (static.hue>0) and 1007 or 7
+		--~ prio4 =3D static.fBlockIndexRel			in [0,1]
+		--~ prio5 =3D static.tx						in [0,7]
+		=

+		-- z : in [-1;1] visible
+		local sortbonus =3D	0.01000 * (zloc + pTileType.iSortBonus2D) +	=

+							0.01000 * (pTileType.miHeight/100) +
+							0.00000 * (static.fBlockIndexRel) +
+							0.00005 * (static.tx / 8)
+		=

+		local x,y,z =3D -tx,ty,zloc*0.1
+		local sortadd =3D sortbonus
+		local movedown =3D 1 -- ox-1,oy+1 : sprites are too high normally, this =
moves them down =

+		x =3D x +   -1 * sortadd - movedown  =

+		y =3D y +    1 * sortadd + movedown
+		z =3D z + kSq2 * sortadd
+		local inv44 =3D 1/44
+		local xa =3D inv44 * pw * 0.5
+		local za =3D inv44 * ph * 2.0 / kSq2						=

+		=

+		--~ local xa =3D k2D_ScaleW05 * pw * 2
+		--~ local za =3D k2D_ScaleH   * ph * 2 / kSq2
+		--~ k2D_ScaleH		=3D kSq2 / 44
+		--~ k2D_ScaleW05	=3D 0.5 / 44 -- 0.5 : applied left and right
+		--~ local sin45 =3D 0.5*kSq2
+		=

+			=

+			=

 		local px,py =3D TileOffsetToPixelOffset(tx,ty)
 		local sprite =3D {
+			x =3D x,
+			y =3D y,
+			z =3D z,
+			xa =3D xa,
+			za =3D za,
 			u0 =3D pAtlasPiece.u0,
 			v0 =3D pAtlasPiece.v0,
 			u1 =3D pAtlasPiece.u1,
 			v1 =3D pAtlasPiece.v1,
-			z_top    =3D z,
-			z_bottom =3D z,
-			w =3D w,
-			h =3D h,
-			x =3D floor(px - w*0.5 ),
-			y =3D floor(py - h		- 4*static.zloc), -- 1 z-unit =3D 4 pixels upwards =
in the original client
+			pw =3D pw, -- in pixels
+			ph =3D ph, -- in pixels
+			--~ px =3D floor(px - pw*0.5 				 ),
+			--~ py =3D floor(py - ph	 - 4*static.zloc ), -- 1 z-unit =3D 4 pixels u=
pwards in the original client
+			hue =3D static.hue,
 			artid =3D static.artid, -- for mousepicking
 		}
 		table.insert(group,sprite)
+	else
+		print("warning, cUOSpriteBlock:AddStatic failed",iTileTypeID,iHue)
 	end
 end
 =

@@ -88,101 +114,47 @@
 function cUOSpriteBlock:Build 	(bx,by,basemat)
 	self.bx =3D bx
 	self.by =3D by
-	--[[
-	local bVertexBufferDynamic	=3Dfalse
-	local bVertexCol			=3Dfalse
-	local spritelist =3D CreateSpriteList(rendergroup2d,bVertexBufferDynamic,=
bVertexCol)
-	table.insert(self.spritelists,spritelist)
-	spritelist:SetMaterial(matname)
-	spritelist:ResizeList(len)
-	SpriteList_Open(spritelist)
-	SpriteList_SetSprite(iSpriteIndex, l,t,w,h, u0,v0, uvw, uvh, z)
-	SpriteList_Close()
-	]]--
 	=

-	if (true) then =

-		for atlas,group in pairs(self.pSpritesByAtlas) do
-			if (#group > 0) then =

-				local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
-				-- TODO : sort by z for blendout upper floors ?
-				local spritecount =3D #group
-				local gfx =3D CreateRobRenderable2D(self.rendergroup2d)
-				table.insert(self.pGroupGfx,gfx)
-				gfx:SetMaterial(matname)
-				=

-				-- generate geometry
-				local vc =3D 4*spritecount
-				local ic =3D 6*spritecount
-				local bDynamic,bKeepOldIndices =3D false,false
-				RobRenderable2D_Open(gfx,vc,ic,bDynamic,bKeepOldIndices,OT_TRIANGLE_LI=
ST)
-				vc =3D 0
-				for k,sprite in pairs(group) do
-					local x =3D sprite.x
-					local y =3D sprite.y
-					local w =3D sprite.w
-					local h =3D sprite.h
-					local z_bottom	=3D sprite.z_bottom
-					local z_top		=3D sprite.z_top
-					local u0 		=3D sprite.u0
-					local v0 		=3D sprite.v0
-					local u1 		=3D sprite.u1
-					local v1 		=3D sprite.v1
-					RobRenderable2D_Vertex(x  ,y  ,z_top, 	u0,v0)
-					RobRenderable2D_Vertex(x+w,y  ,z_top, 	u1,v0)
-					RobRenderable2D_Vertex(x  ,y+h,z_bottom,u0,v1)
-					RobRenderable2D_Vertex(x+w,y+h,z_bottom,u1,v1)
-					RobRenderable2D_Index3(vc+0,vc+2,vc+1)
-					RobRenderable2D_Index3(vc+1,vc+2,vc+3)
-					vc =3D vc + 4
-				end
-				RobRenderable2D_Close()
-			end
+	-- for 3d statics
+	-- statics : create gfx
+	-- -so 1420,1550
+	-- -so 552,2088
+	-- -so 632,1488
+	for atlas,group in pairs(self.pSpritesByAtlas) do
+		local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
+		--~ matname =3D "BaseWhiteNoLighting"
+		-- TODO : sort by z for blendout upper floors
+		local spritecount =3D #group
+		local x,y,z =3D gCurrentRenderer:UOPosToLocal(bx*8,by*8,0)
+		local gfx =3D CreateRootGfx3D()
+		table.insert(self.pGroupGfx,gfx)
+		gfx:SetPosition(x,y,z)
+		gfx:SetSimpleRenderable()
+		gfx:SetMaterial(matname)
+		=

+		-- generate geometry
+		local vc =3D 4*spritecount
+		local ic =3D 6*spritecount
+		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
+		vc =3D 0
+		for k,sprite in pairs(group) do
+			local x 		=3D sprite.x
+			local y 		=3D sprite.y
+			local z 		=3D sprite.z
+			local xa 		=3D sprite.xa
+			local za 		=3D sprite.za
+			local u0 		=3D sprite.u0
+			local v0 		=3D sprite.v0
+			local u1 		=3D sprite.u1
+			local v1 		=3D sprite.v1
+			gfx:RenderableVertex(x-xa,y-xa,z  		, u1,v1)
+			gfx:RenderableVertex(x+xa,y+xa,z  		, u0,v1)
+			gfx:RenderableVertex(x-xa,y-xa,z+za	, u1,v0)
+			gfx:RenderableVertex(x+xa,y+xa,z+za	, u0,v0)
+			gfx:RenderableIndex3(vc+0,vc+2,vc+1)
+			gfx:RenderableIndex3(vc+1,vc+2,vc+3)
+			vc =3D vc + 4
 		end
+		gfx:RenderableEnd()
 	end
-
-	--[[
-	old, for 3d statics
-	if (true) then =

-		-- statics : create gfx
-		-- -so 1420,1550
-		-- -so 552,2088
-		-- -so 632,1488
-		for atlas,group in pairs(self.pSpritesByAtlas) do
-			local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
-			-- TODO : sort by z for blendout upper floors
-			local spritecount =3D table.getn(group)
-			local x,y,z =3D gCurrentRenderer:UOPosToLocal(bx*8,by*8,0)
-			local gfx =3D CreateRootGfx3D()
-			table.insert(self.pGroupGfx,gfx)
-			gfx:SetPosition(x,y,z)
-			gfx:SetSimpleRenderable()
-			gfx:SetMaterial(matname)
-			=

-			-- generate geometry
-			local vc =3D 4*spritecount
-			local ic =3D 6*spritecount
-			gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-			vc =3D 0
-			for k,static in pairs(group) do
-				local pAtlasPiece =3D self.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
-				local pTileType =3D GetStaticTileType(static.artid)
-				local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-				local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileT=
ype.miHeight + 0.001*static.iBlockIndex)  -- + =3D nearer to cam      -- gu=
ess this works ok for now, but far from ideal
-				x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too h=
igh normally, this moves them down =

-				y =3D y +   1 * fOrderCorrection + 1
-				z =3D z + kSq2 * fOrderCorrection
-				local w =3D k2D_ScaleW05 * pAtlasPiece.w
-				local h =3D k2D_ScaleH   * pAtlasPiece.h
-				gfx:RenderableVertex(x-w,y-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
-				gfx:RenderableVertex(x+w,y+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
-				gfx:RenderableVertex(x-w,y-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
-				gfx:RenderableVertex(x+w,y+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
-				gfx:RenderableIndex3(vc+0,vc+2,vc+1)
-				gfx:RenderableIndex3(vc+1,vc+2,vc+3)
-				vc =3D vc + 4
-			end
-			gfx:RenderableEnd()
-		end
-	end
-	]]--
 end

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Fri Sep 19 23:14:16 2008
@@ -28,8 +28,8 @@
 	=

 	-- load image
 	local pImage =3D CreateImage()
-	if (not gArtMapLoader:ExportToImage(pImage,iTileTypeID,gHueLoader,iHue)) =
then pImage:Destroy() return end
-	if (not gArtMapLoader:GetSize(pImage,iTileTypeID,gHueLoader,iHue)) then p=
Image:Destroy() return end
+	if (not gArtMapLoader:ExportToImage(pImage,iTileTypeID,gHueLoader,iHue)) =
then print("ArtAtlasLoadAndLock:ExportToImage fail",iTileTypeID,iHue) pImag=
e:Destroy() return end
+	if (not gArtMapLoader:GetSize(pImage,iTileTypeID,gHueLoader,iHue)) then p=
rint("ArtAtlasLoadAndLock:GetSize fail",iTileTypeID,iHue) pImage:Destroy() =
return end
 	=

 	-- load/create atlas
 	local w =3D gArtAtlasSize
@@ -51,16 +51,7 @@
 	for k,v in pairs(gArtAtlasList) do
 		bSuccess,l,r,t,b =3D v:AddImage(pImage,iBorderPixels,bWrap)
 		if bSuccess then =

-			-- dump atlas image
-			if (kArtAtlasDebugDumpAtlas) then
-				local img2 =3D CreateImage()
-				v:MakeImage(img2)
-				img2:SaveAsFile("artatlas_"..k..".png")
-				img2:Destroy()
-			end
-			=

 			usedAtlas =3D v
-			=

 			-- stop searching
 			break
 		end
@@ -73,14 +64,6 @@
 		table.insert(gArtAtlasList, gLastArtAtlas)
 		bSuccess,l,r,t,b =3D gLastArtAtlas:AddImage(pImage,iBorderPixels,bWrap)
 		usedAtlas =3D gLastArtAtlas
-		=

-		if (kArtAtlasDebugDumpAtlas) then
-			local img2 =3D CreateImage()
-			gLastArtAtlas:MakeImage(img2)
-			img2:SaveAsFile("artatlas_"..k..".png")
-			img2:Destroy()
-		end
-
 		if (not bSuccess) then print("warning : ArtAtlasLoadAndLock: art too big=
 for texatlas") pImage:Destroy() return end
 	end
 	=

@@ -89,7 +72,7 @@
 	pImage:Destroy()
 	=

 	-- create or update texatlas
-	gLastArtAtlas.bIsDirty =3D true -- only rebuild on demand, not for every =
add
+	usedAtlas.bIsDirty =3D true -- only rebuild on demand, not for every add
 	=

 	-- return info about the allocated area for this glyph
 	o =3D {}
@@ -105,6 +88,10 @@
 	return o
 end
 =

+function ArtAtlasReloadAll ()
+	for k,atlas in pairs(gArtAtlasList) do atlas.bIsDirty =3D true ArtAtlasLo=
adMaterial(atlas) end
+end
+
 -- param : ArtAtlasLoadAndLock(...).atlas
 -- creates/updates texture/material as needed
 -- returns matname
@@ -117,17 +104,28 @@
 		else
 			atlas.texname =3D atlas:MakeTexture() -- generate new texture
 		end
+		-- dump atlas image
+		if (kArtAtlasDebugDumpAtlas) then
+			local img2 =3D CreateImage()
+			gLastArtAtlas:MakeImage(img2)
+			gArtAtlasDebugDumpAtlasCount =3D (gArtAtlasDebugDumpAtlasCount or 0) + 1
+			img2:SaveAsFile("artatlas_"..gArtAtlasDebugDumpAtlasCount..".png")
+			img2:Destroy()
+		end
 		--~ local startt2 =3D Client_GetTicks()
 		--~ print("ArtAtlasLoadMaterial t:",startt2-startt)
 	end
-	if (not atlas.matname) then =

-		local matname =3D CloneMaterial(basematerial)
+	if (not basematerial) then return end
+	atlas.mats =3D atlas.mats or {}
+	local matname =3D atlas.mats[basematerial]
+	if (not matname) then =

+		matname =3D CloneMaterial(basematerial)
 		SetTexture(matname,atlas.texname)
 		--~ SetSceneBlend(matname,0,0,0)
 		--~ SetDepthWriteEnabled(matname,0,0,1)
-		atlas.matname =3D matname
+		atlas.mats[basematerial] =3D matname
 	end
-	return atlas.matname
+	return matname
 end
 =

 function ArtAtlasUnLock (pLockKeeper) end



From no-reply at zwischenwelt.org  Sat Sep 20 00:18:53 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 19 Sep 2008 22:18:53 -0000
Subject: [Iris-commit] [IRIS] r2461 - in /trunk/lua: lib.2d.map.lua
 lib.2d.spriteblock.lua lib.mapblock.2d.statics.lua
Message-ID: <20080919221853.2B80C1C1807F@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep 20 00:18:52 2008
New Revision: 2461

Log:
2d mousepick for statics works

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.mapblock.2d.statics.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Sat Sep 20 00:18:52 2008
@@ -45,6 +45,19 @@
 	end
 end
 =

+-- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,static=3D?}
+function Renderer2D:RayPickStatics (rx,ry,rz, rvx,rvy,rvz)
+	local founddist,foundsprite
+	for block,v in pairs(self.map2d_spawners.statics.pMapBlocks) do  -- spawn=
er:ForAllBlocks()
+		local dist,sprite =3D block:RayPick (rx,ry,rz, rvx,rvy,rvz) =

+		if (dist and ((not founddist) or dist < founddist)) then
+			founddist =3D dist
+			foundsprite =3D sprite
+		end
+	end
+	return founddist,foundsprite
+end
+
 function Renderer2D:MapStep		()
 	self:MobileTestStep()
 	=

@@ -52,6 +65,14 @@
 	local x,y,z =3D self:GetCamPos()
 	for k,spawner in pairs(self.map2d_spawners) do spawner:Step(t,x,y,z) end
 	self.map2d_scheduler:Step(x,y,z)
+	=

+	=

+	-- raypick test : =

+	local rx,ry,rz, rvx,rvy,rvz =3D GetMouseRay()
+	local dist,sprite =3D self:RayPickStatics(rx,ry,rz, rvx,rvy,rvz)
+	if (dist) then
+		print("Renderer2D raypick",dist,sprite,GetStaticTileTypeName(sprite.arti=
d))
+	end
 end
 =

 function Renderer2D:MapClear	()

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sat Sep 20 00:18:52 2008
@@ -24,6 +24,58 @@
 	return	tx *  22 + ty * -22,
 			tx *  22 + ty *  22
 end
+
+function ArtCheckBitMask(artid,px,py)
+	local bitmask =3D GetArtBitMask(artid)
+	if (not bitmask) then return true end -- no bitmask -> always hit
+	return bitmask:TestBit(floor(px),floor(py))
+end
+
+-- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,static=3D?}
+function cUOSpriteBlock:RayPick (rx,ry,rz, rvx,rvy,rvz)
+	local bx,by =3D self.bx,self.by
+	if (not bx) then return end
+	local x,y,z =3D gCurrentRenderer:UOPosToLocal(bx*8,by*8,0)  -- self.pGrou=
pGfx position
+	rx =3D rx - x
+	ry =3D ry - y
+	rz =3D rz - z
+	=

+	local founddist,foundsprite
+	=

+	for atlas,group in pairs(self.pSpritesByAtlas) do
+		for k,sprite in pairs(group) do
+			local x 		=3D sprite.x
+			local y 		=3D sprite.y
+			local z 		=3D sprite.z
+			local pw 		=3D sprite.pw
+			local ph 		=3D sprite.ph
+			local xa 		=3D sprite.xa
+			local za 		=3D sprite.za
+			local ax,ay,az =3D x-xa,y-xa,z  	--, u1,v1 -- right,bottom
+			local bx,by,bz =3D x+xa,y+xa,z  	--, u0,v1 -- left ,bottom =

+			local cx,cy,cz =3D x-xa,y-xa,z+za	--, u1,v0 -- right,top
+			local dx,dy,dz =3D x+xa,y+xa,z+za	--, u0,v0 -- left ,top
+			local px,py
+			local dist,fa,fc,fb =3D TriangleRayPickEx(ax,ay,az, cx,cy,cz, bx,by,bz,=
 rx,ry,rz, rvx,rvy,rvz) -- (vc+0,vc+2,vc+1)
+			if (dist) then =

+				px,py =3D pw * (fa + fc),ph * (fb + fa) =

+			else
+				local fd
+				dist,fb,fc,fd =3D TriangleRayPickEx(bx,by,bz, cx,cy,cz, dx,dy,dz, rx,r=
y,rz, rvx,rvy,rvz) -- (vc+1,vc+2,vc+3)
+				if (dist) then
+					px,py =3D pw * fc,ph * fb
+				end
+			end
+			if (dist and ((not founddist) or dist < founddist) and ArtCheckBitMask(=
sprite.artid+0x4000,px,py)) then
+				founddist =3D dist
+				foundsprite =3D sprite
+			end
+		end
+	end
+	return founddist,foundsprite
+end
+
+
 =

 -- load textures to atlas, artid-hue
 -- static comes from MapGetBlockStatics(bx,by)
@@ -103,6 +155,7 @@
 			--~ py =3D floor(py - ph	 - 4*static.zloc ), -- 1 z-unit =3D 4 pixels u=
pwards in the original client
 			hue =3D static.hue,
 			artid =3D static.artid, -- for mousepicking
+			static =3D static
 		}
 		table.insert(group,sprite)
 	else
@@ -147,8 +200,8 @@
 			local v0 		=3D sprite.v0
 			local u1 		=3D sprite.u1
 			local v1 		=3D sprite.v1
-			gfx:RenderableVertex(x-xa,y-xa,z  		, u1,v1)
-			gfx:RenderableVertex(x+xa,y+xa,z  		, u0,v1)
+			gfx:RenderableVertex(x-xa,y-xa,z  	, u1,v1)
+			gfx:RenderableVertex(x+xa,y+xa,z  	, u0,v1)
 			gfx:RenderableVertex(x-xa,y-xa,z+za	, u1,v0)
 			gfx:RenderableVertex(x+xa,y+xa,z+za	, u0,v0)
 			gfx:RenderableIndex3(vc+0,vc+2,vc+1)

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Sat Sep 20 00:18:52 2008
@@ -9,6 +9,13 @@
 =

 function cMapBlock_2D_Statics:ClearDetail ()
 	if (self.spriteblock) then self.spriteblock:Destroy() self.spriteblock =
=3D nil end
+end
+
+-- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,static=3D?}
+function cMapBlock_2D_Statics:RayPick (rx,ry,rz, rvx,rvy,rvz) =

+	local spriteblock =3D self.spriteblock =

+	if (not spriteblock) then return end
+	return spriteblock:RayPick(rx,ry,rz, rvx,rvy,rvz) =

 end
 =

 function cMapBlock_2D_Statics:WorkStep_LoadDetail ()



From no-reply at zwischenwelt.org  Sat Sep 20 13:54:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 20 Sep 2008 11:54:42 -0000
Subject: [Iris-commit] [IRIS] r2462 - in /trunk:
 data/base/ui/process-working.png lua/gui/gui.helper.lua
 lua/lib.mapblock.base.lua lua/main.lua
Message-ID: <20080920115442.BAF271C18043@zwischenwelt.org>

Author: hagish
Date: Sat Sep 20 13:54:40 2008
New Revision: 2462

Log:
added simple block loading indicator in the bottom right of the screen

Added:
    trunk/data/base/ui/process-working.png   (with props)
Modified:
    trunk/lua/gui/gui.helper.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/main.lua

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Sat Sep 20 13:54:40 2008
@@ -1,3 +1,37 @@
+-- number of currently running loading things
+-- used to show ie. block loading acitivity
+giShowLoading =3D 0
+function NotifyLoadingStart() giShowLoading =3D giShowLoading + 1 end
+function NotifyLoadingEnd() giShowLoading =3D giShowLoading - 1 end
+function DisplayLoadingState ()
+	-- parameters
+	local w =3D 128
+	local h =3D 16
+	local tilew =3D 16
+	local tileh =3D 16
+	local texname =3D "process-working.png"
+	local x,y =3D 50,50
+	local fps =3D 5
+	=

+	-- calculate frame number
+	local f =3D 0
+	if giShowLoading > 0 then
+		f =3D 1 + math.floor(gMyTicks / 1000 * fps)
+	end
+	=

+	-- on demand create icon
+	if not gLoadingStateIcon then
+		local gfxparam_init =3D MakeSpritePanelParam_SingleSpritePartSimple(GetP=
lainTextureGUIMat(texname),w,h,0,0,tilew,tileh)
+		gLoadingStateIcon =3D GetDesktopWidget():CreateChild("Image",{gfxparam_i=
nit=3Dgfxparam_init})
+		=

+		local vw,vh =3D GetViewportSize()
+		gLoadingStateIcon:SetLeftTop(vw-tilew-5,vh-tileh-5)
+	end
+	=

+	-- update icon
+	gLoadingStateIcon.spritepanel:Update(MakeSpritePanelParam_Mod_AnimSimple(=
w,h,tilew,tileh,f))
+end
+
 gMemStats_NextUpdate =3D 0
 function DisplayMemoryUsage (memoryusage)
 	if (gHideMemoryUsage) then return end

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Sat Sep 20 13:54:40 2008
@@ -105,20 +105,19 @@
 -- a single step during the thread
 function cMapBlock:WorkStep ()
 	if (self.lod_finished =3D=3D self.lod) then return end -- nothing to do
+	NotifyLoadingStart()
 	if (self.lod =3D=3D self.kLOD_Rough ) then =

 		self:WorkStep_LoadRough()  =

 		self:ClearDetail() =

 		self.lod_finished =3D self.lod =

 		self:SetPriority(kSchedulerIdlePriority)
-		return =

-	end
-	if (self.lod =3D=3D self.kLOD_Detail) then =

+	elseif (self.lod =3D=3D self.kLOD_Detail) then =

 		self:WorkStep_LoadDetail() =

 		self:ClearRough() =

 		self.lod_finished =3D self.lod =

 		self:SetPriority(kSchedulerIdlePriority)
-		return =

 	end
+	NotifyLoadingEnd()
 end
 =

 function cMapBlock:ClearRough   () end -- override me !

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat Sep 20 13:54:40 2008
@@ -417,6 +417,7 @@
 		StepUODragDrop()
 		UpdateCompass()
 		DisplayMemoryUsage(OgreMemoryUsage("all"))
+		DisplayLoadingState()
 		PingStep()
 		gCurrentRenderer:MainStep()
 	else



From no-reply at zwischenwelt.org  Sat Sep 20 18:31:41 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 20 Sep 2008 16:31:41 -0000
Subject: [Iris-commit] [IRIS] r2463 - in /trunk/lua: lib.2d.map.lua
 lib.2d.spriteblock.lua lib.mapblock.2d.terrain.lua
Message-ID: <20080920163142.6D7B41C1866D@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep 20 18:31:38 2008
New Revision: 2463

Log:
2d terrain raypick

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.mapblock.2d.terrain.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Sat Sep 20 18:31:38 2008
@@ -45,7 +45,21 @@
 	end
 end
 =

--- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,static=3D?}
+-- returns dist,xloc,yloc   if hit, or nil otherwise
+function Renderer2D:RayPickTerrain (rx,ry,rz, rvx,rvy,rvz)
+	local founddist,foundxloc,foundyloc
+	for block,v in pairs(self.map2d_spawners.terrain.pMapBlocks) do  -- spawn=
er:ForAllBlocks()
+		local dist,xloc,yloc =3D block:RayPick(rx,ry,rz, rvx,rvy,rvz) =

+		if (dist and ((not founddist) or dist < founddist)) then
+			founddist =3D dist
+			foundxloc =3D xloc
+			foundyloc =3D yloc
+		end
+	end
+	return founddist,foundxloc,foundyloc
+end
+
+-- returns dist,sprite   if hit, or nil otherwise    sprite=3D{artid=3D?,h=
ue=3D?,static=3D?}
 function Renderer2D:RayPickStatics (rx,ry,rz, rvx,rvy,rvz)
 	local founddist,foundsprite
 	for block,v in pairs(self.map2d_spawners.statics.pMapBlocks) do  -- spawn=
er:ForAllBlocks()
@@ -71,7 +85,10 @@
 	local rx,ry,rz, rvx,rvy,rvz =3D GetMouseRay()
 	local dist,sprite =3D self:RayPickStatics(rx,ry,rz, rvx,rvy,rvz)
 	if (dist) then
-		print("Renderer2D raypick",dist,sprite,GetStaticTileTypeName(sprite.arti=
d))
+		--~ print("Renderer2D raypick static",sprite,GetStaticTileTypeName(sprit=
e.artid))
+	else	=

+		local dist,xloc,yloc =3D self:RayPickTerrain(rx,ry,rz, rvx,rvy,rvz)
+		--~ print("Renderer2D raypick terrain",xloc,yloc)
 	end
 end
 =


Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sat Sep 20 18:31:38 2008
@@ -115,10 +115,10 @@
 		--~ prio5 =3D static.tx						in [0,7]
 		=

 		-- z : in [-1;1] visible
-		local sortbonus =3D	0.01000 * (zloc + pTileType.iSortBonus2D) +	=

-							0.01000 * (pTileType.miHeight/100) +
-							0.00000 * (static.fBlockIndexRel) +
-							0.00005 * (static.tx / 8)
+		local sortbonus =3D	0.1000 * (zloc + pTileType.iSortBonus2D) +	=

+							0.1000 * (pTileType.miHeight/100) +
+							0.0000 * (static.fBlockIndexRel) +
+							0.0005 * (static.tx / 8)
 		=

 		local x,y,z =3D -tx,ty,zloc*0.1
 		local sortadd =3D sortbonus

Modified: trunk/lua/lib.mapblock.2d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.2d.terrain.lua Sat Sep 20 18:31:38 2008
@@ -8,6 +8,16 @@
 	if (self.gfx_terrain) then self.gfx_terrain:Destroy() self.gfx_terrain =
=3D nil end
 end
 =

+-- returns dist,xloc,yloc   if hit, or nil if not hit.    sprite=3D{artid=
=3D?,hue=3D?,static=3D?}
+function cMapBlock_2D_Terrain:RayPick (rx,ry,rz, rvx,rvy,rvz) =

+	local gfx =3D self.gfx_terrain =

+	if (not gfx) then return end
+	local bx,by,bs =3D self.bx * 2, self.by * 2, self.iBlockSize
+	local bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,=
bx,by,bs,bs, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
+	if (not bHit) then return end
+	return fHitDist,bx * 8 + tx,by*8 + ty
+end
+
 function cMapBlock_2D_Terrain:WorkStep_LoadDetail ()
 	local bs =3D kMultiTexTerrainChunkSize
 	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs)



From no-reply at zwischenwelt.org  Sun Sep 21 05:27:10 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Sep 2008 03:27:10 -0000
Subject: [Iris-commit] [IRIS] r2464 - in /trunk/lua: lib.2d.dynamic.lua
 lib.2d.mobile.lua lib.2d.renderer.lua lib.2d.spriteblock.lua
 lib.3d.dynamic.lua lib.artatlas.lua lib.boat.lua
 lib.mapblock.2d.statics.lua lib.walking3.lua net/net.multi.lua
 obj/obj.dynamic.lua
Message-ID: <20080921032710.805E11C18042@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Sep 21 05:27:09 2008
New Revision: 2464

Log:
multi-precalc decupled from 3d-dynamic,  combined CreateDynamicGfx and AddD=
ynamicItem, and seperated corpse and multi construction. 2d : sorting impro=
ved, z-scaling adjusted to pixel correct (for items, not yet for terrain), =
spriteblock generalised and now used by multis and dynamics as well

Modified:
    trunk/lua/lib.2d.dynamic.lua
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.artatlas.lua
    trunk/lua/lib.boat.lua
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.walking3.lua
    trunk/lua/net/net.multi.lua
    trunk/lua/obj/obj.dynamic.lua

Modified: trunk/lua/lib.2d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.dynamic.lua (original)
+++ trunk/lua/lib.2d.dynamic.lua Sun Sep 21 05:27:09 2008
@@ -1,35 +1,70 @@
 -- dynamics (items,doors,...)
+
+function Renderer2D:UpdateMultiData					(item) =

+	print("TODO:Renderer2D:UpdateMultiData")
+end
 =

 function Renderer2D:RemoveDynamicItem				(item) =

 	if (item.gfx2d) then item.gfx2d:Destroy() item.gfx2d =3D nil end
 	ArtAtlasUnLock(item)
 end
+function Renderer2D:AddCorpseItem					(item) =

+	print("TODO:Renderer2D:AddCorpseItem")
+end
+function Renderer2D:AddMultiItem					(item) =

+	gDebugLastMultiItem =3D item
+	local multi =3D item.multi
+	if (not multi) then print("Renderer2D:AddMultiItem error:no multi data") =
return end
+	=

+	-- create spriteblock
+	local spriteblock =3D cUOSpriteBlock:New()
+	item.gfx2d =3D spriteblock
+	=

+	-- add multi parts
+	local totalpartnum =3D #multi.lparts
+	local itemxloc =3D item.xloc
+	local itemyloc =3D item.yloc
+	local itemzloc =3D item.zloc
+	for k,part in pairs(multi.lparts) do
+		local iTileTypeID,xloc,yloc,zloc,iHue =3D unpack(part) -- see Multi_AddP=
artHelper
+		local tx =3D xloc-itemxloc
+		local ty =3D yloc-itemyloc
+		local tz =3D zloc-itemzloc
+		local fIndexRel =3D k / totalpartnum
+		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,tz,tz,fIndexRel),item)
+	end
+	spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
+	local x,y,z =3D gCurrentRenderer:UOPosToLocal(itemxloc,itemyloc,itemzloc*=
kRenderer2D_ZScale)
+	spriteblock:SetPosition(x,y,z)
+end
+
 function Renderer2D:AddDynamicItem					(item) =

-	local gfx =3D CreateRootGfx3D()
-	item.gfx2d =3D gfx
-	gfx:SetSimpleRenderable()
-	local iTileTypeID,iHue =3D item.artid+0x4000,item.hue
-	local sMatName,iWidth,iHeight,iCenterX,iCenterY,u0,v0,u1,v1 =3D ArtAtlasL=
oadAndLockDirect(iTileTypeID,iHue,item,Renderer2D.kAtlasBaseMaterial)
-	if (not sMatName) then return end
-	local zoom =3D 1
-	local pix2coord =3D zoom * 1 / 44
-	local x =3D -1 + ( iCenterY +iCenterX)*pix2coord -- iCenterX<0=3Dright iC=
enterY<0=3Ddown
-	local y =3D  1 + (-iCenterY +iCenterX)*pix2coord
-	local z =3D  0  -- x-1,y+1 : sprites are too high normally, this moves th=
em down =

-	local w =3D k2D_ScaleW05 * iWidth * zoom
-	local h =3D k2D_ScaleH   * iHeight * zoom
-	gfx:SetMaterial(sMatName)
-	gfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
-	gfx:RenderableVertex(x-w,y-w,z  , u1,v1)
-	gfx:RenderableVertex(x+w,y+w,z  , u0,v1)
-	gfx:RenderableVertex(x-w,y-w,z+h, u1,v0)
-	gfx:RenderableVertex(x+w,y+w,z+h, u0,v0)
-	gfx:RenderableIndex3(0,2,1)
-	gfx:RenderableIndex3(1,2,3)
-	gfx:RenderableEnd()
-	=

-	self:UpdateDynamicItemPos(item)
+	if (item.artid_base =3D=3D kCorpseDynamicArtID) then
+		-- corpse
+		self:AddCorpseItem(item)
+	elseif not item.artid then
+		print("ERROR: artid missing!!!!\n")
+	elseif item.artid >=3D gMulti_ID then =

+		-- multi
+		self:AddMultiItem(item)
+	else
+		local spriteblock =3D cUOSpriteBlock:New()
+		item.gfx2d =3D spriteblock
+		=

+		local tx,ty,tz,fIndexRel =3D 0,0,0,0
+		local iTileTypeID	=3D item.artid
+		local iHue			=3D item.hue
+		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,tz,tz,fIndexRel),item)
+		spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
+		local x,y,z =3D gCurrentRenderer:UOPosToLocal(item.xloc,item.yloc,item.z=
loc*kRenderer2D_ZScale)
+		spriteblock:SetPosition(x,y,z)
+	end
 end
-function Renderer2D:UpdateDynamicItemPos			(item) =

-	if (item.gfx2d) then item.gfx2d:SetPosition(self:UOPosToLocal(item.xloc,i=
tem.yloc,item.zloc * 0.1)) end
+
+function Renderer2D:UpdateDynamicItemPos			(item)
+	if (not Renderer2D.bDebugWarnUpdateDynamicItemPos) then
+		Renderer2D.bDebugWarnUpdateDynamicItemPos =3D true
+		print("todo : 2dmode : UpdateDynamicItemPos")
+	end
+	--~ if (item.gfx2d) then print("Renderer2D:UpdateDynamicItemPos: fixme, z=
scale !=3D 0.1") item.gfx2d:SetPosition(self:UOPosToLocal(item.xloc,item.yl=
oc,item.zloc * 0.1)) end
 end

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Sun Sep 21 05:27:09 2008
@@ -1,8 +1,4 @@
 -- mobiles (animals,players,monsters,npcs..)
-
-kSq2			=3D math.sqrt(2)
-k2D_ScaleH		=3D kSq2 / 44
-k2D_ScaleW05	=3D 0.5 / 44 -- 0.5 : applied left and right
 =

 -- main updater, create, position ...
 function Renderer2D:UpdateMobile				(mobile) =


Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sun Sep 21 05:27:09 2008
@@ -7,7 +7,15 @@
 =

 Renderer2D =3D {}
 =

-Renderer2D.kAtlasBaseMaterial =3D "renderer2dbillboard"
+Renderer2D.kSpriteBaseMaterial =3D "renderer2dbillboard"
+kSq2					=3D math.sqrt(2)
+k2D_ScaleH				=3D kSq2 / 44
+k2D_ScaleW05			=3D 0.5 / 44 -- 0.5 : applied left and right
+kRenderer2D_Inv44		=3D 1/44
+kRenderer2D_Sin45		=3D 0.5*kSq2 -- sin(45)
+kRenderer2D_ZScale		=3D 4 * kRenderer2D_Inv44 / kRenderer2D_Sin45 -- zloc=
=3D1 means 4 pixels 0.12856486930664
+kRenderer2D_XPixelScale	=3D kRenderer2D_Inv44 * 0.5 =

+kRenderer2D_YPixelScale	=3D kRenderer2D_Inv44 / kRenderer2D_Sin45
 =

 dofile(libpath .. "lib.2d.cam.lua")
 dofile(libpath .. "lib.2d.map.lua")

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sun Sep 21 05:27:09 2008
@@ -8,16 +8,22 @@
 cUOSpriteBlock =3D CreateClass()
 function cUOSpriteBlock:New () local c =3D CreateClassInstance(cUOSpriteBl=
ock) return c end
 function cUOSpriteBlock:Init ()
-	self.pStaticAtlasMats =3D {} -- self.pStaticAtlasMats[iTileTypeID][iHue] =
=3D pAtlasPiece (see ArtAtlasLoadAndLock)
+	self.pTileTypeAtlasMats =3D {} -- self.pTileTypeAtlasMats[iTileTypeID][iH=
ue] =3D pAtlasPiece (see ArtAtlasLoadAndLock)
 	self.pGroupGfx =3D {}
 	self.pSpritesByAtlas =3D {}
-end
-
-function cUOSpriteBlock:CamStep(t,xloc,yloc,zloc) end
+	self.rootgfx =3D CreateRootGfx3D()
+end
+
+function cUOSpriteBlock:SetPosition (x,y,z) =

+	self.x =3D x
+	self.y =3D y
+	self.z =3D z
+	self.rootgfx:SetPosition(x,y,z) =

+end
 =

 function cUOSpriteBlock:Destroy ()
 	if (self.pGroupGfx) then for k,v in pairs(self.pGroupGfx) do v:Destroy() =
end self.pGroupGfx =3D nil end
-	self.bx =3D nil
+	if (self.rootgfx) then self.rootgfx:Destroy() self.rootgfx =3D nil end
 end
 =

 function TileOffsetToPixelOffset (tx,ty)
@@ -31,14 +37,13 @@
 	return bitmask:TestBit(floor(px),floor(py))
 end
 =

--- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,static=3D?}
+-- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,data=3D?} (see AddSprite)
 function cUOSpriteBlock:RayPick (rx,ry,rz, rvx,rvy,rvz)
 	local bx,by =3D self.bx,self.by
 	if (not bx) then return end
-	local x,y,z =3D gCurrentRenderer:UOPosToLocal(bx*8,by*8,0)  -- self.pGrou=
pGfx position
-	rx =3D rx - x
-	ry =3D ry - y
-	rz =3D rz - z
+	rx =3D rx - self.x
+	ry =3D ry - self.y
+	rz =3D rz - self.z
 	=

 	local founddist,foundsprite
 	=

@@ -75,99 +80,90 @@
 	return founddist,foundsprite
 end
 =

+function CalcSortBonus (artid,tx,ty,zloc,fIndexRel)
+	--~ prio1 =3D zloc + iSortBonus2D				iSortBonus2D in {2,3,4,6} (+1 for dy=
namic)
+	--~ prio2 =3D miHeight						in [0,100]
+	--~ prio3 =3D (hue>0) and 1007 or 7
+	--~ prio4 =3D fIndexRel						in [0,1]
+	--~ prio5 =3D tx								in [0,7]
+	local pTileType =3D GetStaticTileType(artid)
+	return				1.000 * (zloc + pTileType.iSortBonus2D) + -- zloc + =

+						1.000 * (pTileType.miHeight/100) +
+						0.000 * (fIndexRel) +
+						0.005 * (tx / 8)
+end
+
+
+-- static comes from MapGetBlockStatics(bx,by) : {zloc=3D?,artid=3D?,hue=
=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bx=3D?,by=3D?,bIsStatic=3Dtrue}
+function cUOSpriteBlock:AddStatic (static)
+	local artid =3D static.artid
+	local tx =3D static.tx
+	local ty =3D static.ty
+	local zloc =3D static.zloc
+	self:AddSprite(tx,ty,zloc,artid,static.hue,CalcSortBonus(artid,tx,ty,zloc=
,static.fBlockIndexRel),static)
+end
 =

 =

 -- load textures to atlas, artid-hue
--- static comes from MapGetBlockStatics(bx,by)
--- {zloc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bx=3D?,by=
=3D?,bIsStatic=3Dtrue}
-function cUOSpriteBlock:AddStatic (static)
-	local iTileTypeID	=3D static.artid
-	local iHue			=3D static.hue
-	=

-	iHue =3D 0
-	=

-	local arr =3D self.pStaticAtlasMats[iTileTypeID]
-	if (not arr) then arr =3D {} self.pStaticAtlasMats[iTileTypeID] =3D arr e=
nd
+function cUOSpriteBlock:AddSprite (tx,ty,zloc,artid,hue,sortbonus,data)
+	sortbonus =3D sortbonus or 0
+	hue =3D hue or 0
+	local arr =3D self.pTileTypeAtlasMats[artid]
+	if (not arr) then arr =3D {} self.pTileTypeAtlasMats[artid] =3D arr end
 	=

 	-- get/load atlas mat
-	local pAtlasPiece =3D arr[iHue]
+	local pAtlasPiece =3D arr[hue]
 	if (not pAtlasPiece) then
-		pAtlasPiece =3D ArtAtlasLoadAndLock(iTileTypeID+0x4000,iHue,self) -- .at=
las,u0,v0,u1,v1,w,h
-		arr[iHue] =3D pAtlasPiece
+		pAtlasPiece =3D ArtAtlasLoadAndLock(artid+0x4000,hue,self) -- .atlas,u0,=
v0,u1,v1,w,h
+		arr[hue] =3D pAtlasPiece
 	end
 	=

 	-- add to matname group
-	if (pAtlasPiece) then
-		local atlas =3D pAtlasPiece.atlas
-		local group =3D self.pSpritesByAtlas[atlas]
-		if (not group) then group =3D {} self.pSpritesByAtlas[atlas] =3D group e=
nd
-		local pw =3D pAtlasPiece.w
-		local ph =3D pAtlasPiece.h
-		local tx =3D static.tx
-		local ty =3D static.ty
-		local zloc =3D static.zloc
-		local pTileType =3D GetStaticTileType(static.artid)
-		=

-		--~ prio1 =3D zloc + iSortBonus2D				iSortBonus2D in {2,3,4,6} (+1 for d=
ynamic)
-		--~ prio2 =3D miHeight						in [0,100]
-		--~ prio3 =3D (static.hue>0) and 1007 or 7
-		--~ prio4 =3D static.fBlockIndexRel			in [0,1]
-		--~ prio5 =3D static.tx						in [0,7]
-		=

-		-- z : in [-1;1] visible
-		local sortbonus =3D	0.1000 * (zloc + pTileType.iSortBonus2D) +	=

-							0.1000 * (pTileType.miHeight/100) +
-							0.0000 * (static.fBlockIndexRel) +
-							0.0005 * (static.tx / 8)
-		=

-		local x,y,z =3D -tx,ty,zloc*0.1
-		local sortadd =3D sortbonus
-		local movedown =3D 1 -- ox-1,oy+1 : sprites are too high normally, this =
moves them down =

-		x =3D x +   -1 * sortadd - movedown  =

-		y =3D y +    1 * sortadd + movedown
-		z =3D z + kSq2 * sortadd
-		local inv44 =3D 1/44
-		local xa =3D inv44 * pw * 0.5
-		local za =3D inv44 * ph * 2.0 / kSq2						=

-		=

-		--~ local xa =3D k2D_ScaleW05 * pw * 2
-		--~ local za =3D k2D_ScaleH   * ph * 2 / kSq2
-		--~ k2D_ScaleH		=3D kSq2 / 44
-		--~ k2D_ScaleW05	=3D 0.5 / 44 -- 0.5 : applied left and right
-		--~ local sin45 =3D 0.5*kSq2
-		=

-			=

-			=

-		local px,py =3D TileOffsetToPixelOffset(tx,ty)
-		local sprite =3D {
-			x =3D x,
-			y =3D y,
-			z =3D z,
-			xa =3D xa,
-			za =3D za,
-			u0 =3D pAtlasPiece.u0,
-			v0 =3D pAtlasPiece.v0,
-			u1 =3D pAtlasPiece.u1,
-			v1 =3D pAtlasPiece.v1,
-			pw =3D pw, -- in pixels
-			ph =3D ph, -- in pixels
-			--~ px =3D floor(px - pw*0.5 				 ),
-			--~ py =3D floor(py - ph	 - 4*static.zloc ), -- 1 z-unit =3D 4 pixels u=
pwards in the original client
-			hue =3D static.hue,
-			artid =3D static.artid, -- for mousepicking
-			static =3D static
-		}
-		table.insert(group,sprite)
-	else
-		print("warning, cUOSpriteBlock:AddStatic failed",iTileTypeID,iHue)
-	end
-end
-
-
-function cUOSpriteBlock:Build 	(bx,by,basemat)
-	self.bx =3D bx
-	self.by =3D by
-	=

+	if (not pAtlasPiece) then
+		print("warning, cUOSpriteBlock:AddSprite failed",artid,hue)
+		return
+	end
+	=

+	local atlas =3D pAtlasPiece.atlas
+	local group =3D self.pSpritesByAtlas[atlas]
+	if (not group) then group =3D {} self.pSpritesByAtlas[atlas] =3D group end
+	local pw =3D pAtlasPiece.w
+	local ph =3D pAtlasPiece.h
+	=

+	=

+	local x,y,z =3D -tx,ty,zloc * kRenderer2D_ZScale
+	local sortadd =3D sortbonus * kRenderer2D_ZScale
+	local movedown =3D kSq2 -- ox-1,oy+1 : sprites are too high normally, thi=
s moves them down =

+	x =3D x +   -1 * sortadd - movedown  =

+	y =3D y +    1 * sortadd + movedown
+	z =3D z + kSq2 * sortadd
+	local xa =3D pw * kRenderer2D_XPixelScale
+	local za =3D ph * kRenderer2D_YPixelScale			=

+	=

+	--~ local px,py =3D TileOffsetToPixelOffset(tx,ty)
+	local sprite =3D {
+		x =3D x,
+		y =3D y,
+		z =3D z,
+		xa =3D xa,
+		za =3D za,
+		u0 =3D pAtlasPiece.u0,
+		v0 =3D pAtlasPiece.v0,
+		u1 =3D pAtlasPiece.u1,
+		v1 =3D pAtlasPiece.v1,
+		pw =3D pw, -- in pixels
+		ph =3D ph, -- in pixels
+		--~ px =3D floor(px - pw*0.5 		  ),
+		--~ py =3D floor(py - ph	 - 4*zloc ), -- 1 z-unit =3D 4 pixels upwards i=
n the original client
+		hue =3D hue,
+		artid =3D artid, -- for mousepicking
+		data =3D data
+	}
+	table.insert(group,sprite)
+end
+
+
+function cUOSpriteBlock:Build 	(basemat)
 	-- for 3d statics
 	-- statics : create gfx
 	-- -so 1420,1550
@@ -175,13 +171,10 @@
 	-- -so 632,1488
 	for atlas,group in pairs(self.pSpritesByAtlas) do
 		local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
-		--~ matname =3D "BaseWhiteNoLighting"
 		-- TODO : sort by z for blendout upper floors
 		local spritecount =3D #group
-		local x,y,z =3D gCurrentRenderer:UOPosToLocal(bx*8,by*8,0)
-		local gfx =3D CreateRootGfx3D()
+		local gfx =3D self.rootgfx:CreateChild()
 		table.insert(self.pGroupGfx,gfx)
-		gfx:SetPosition(x,y,z)
 		gfx:SetSimpleRenderable()
 		gfx:SetMaterial(matname)
 		=


Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Sun Sep 21 05:27:09 2008
@@ -13,11 +13,6 @@
 =

 Renderer3D.gFastBatchDynamicsMap =3D CreateArray2D()
 Renderer3D.gFastBatchDynamicsMapDestroyListener =3D nil
-
--- helperfunction for CreateDynamicGfx. Please use always for function call
-function Renderer3D:AddDynamicItem( item )
-	self:CreateDynamicGfx(item)
-end
 =

 -- for fastbatch
 function Renderer3D:UpdateDynamicDisplayRange ()
@@ -260,94 +255,6 @@
 end
 =

 =

--- creates the geometry of the given multi and stores the gfx object in th=
is multi
-function Renderer3D:CreateMultiGraphic	(serial, multi)
-	-- add dynamic items to render blocks or queue for delayed add
-	if self.map3d_spawners and self.map3d_spawners.multis then =

-		self.map3d_spawners.multis:AddMulti(serial, multi)
-	end
-	=

-	--[[
-	-- only run one build process per multi
-	if multi.mbBuildRunning then return end
-	multi.mbBuildRunning =3D true
-	=

-	-- build job
-	job.create(function()
-		if not multi.staticGeometry or not multi.staticGeometry:IsAlive() then
-			multi.staticGeometry =3D CreateRootGfx3D()
-		end
-
-		job.yield()
-		-- terminate?
-		if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() ret=
urn end
-					=

-		-- load mesh buffers
-		for k,v in pairs(multi.lparts) do
-			-- get tile
-			local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
-			-- and mesh
-			local meshname =3D GetMeshName(iTileTypeID)
-			-- and try to load it
-			if meshname then =

-				GetMeshBuffer(meshname)
-			end
-		end
-		=

-		job.yield()
-		-- terminate?
-		if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() ret=
urn end
-
-		-- build geometry
-		multi.staticGeometry:SetFastBatch()
-
-		for k,v in pairs(multi.lparts) do
-			local x,y,z
-			local qw,qx,qy,qz
-			local xadd,yadd,zadd
-
-			local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
-			=

-			local meshname =3D GetMeshName(iTileTypeID)
-
-			if meshname then
-				xadd,yadd,zadd =3D FilterPositionXYZ(iTileTypeID)
-				x,y,z =3D Renderer3D:UOPosToLocal(iX + xadd,iY + yadd,iZ * 0.1 + zadd) =

-				qw,qx,qy,qz =3D GetStaticMeshOrientation(iTileTypeID)
-
-				local r,g,b,a =3D 1,1,1,1
-				if (gHueLoader and iHue > 0) then
-					r,g,b =3D gHueLoader:GetColor(iHue - 1,31) -- get first color
-				end
-
-				local meshbuffer =3D GetMeshBuffer(meshname)
-
-				local orderval =3D iZ -- used for blendout later (fastbatch feature)
-				multi.staticGeometry:FastBatch_AddMeshBuffer(meshbuffer, orderval, x,y=
,z, qw,qx,qy,qz, -1,1,1, r,g,b,a)
-
-				local mousepick =3D {
-					xadd=3Dxadd,yadd=3Dyadd,zadd=3Dzadd,qw=3Dqw,qx=3Dqx,qy=3Dqy,qz=3Dqz,
-					sx=3D-1,sy=3D1,sz=3D1,x=3Dx,y=3Dy,z=3Dz,meshbuffer=3Dmeshbuffer,
-					iTileTypeID =3D iTileTypeID,
-					iHue =3D iHue,
-					iBlockX =3D math.floor(x/8), iBlockY =3D math.floor(y/8),
-				}
-				=

-				v.mousepick =3D mousepick
-			end
-		end
-
-		multi.staticGeometry:FastBatch_Build()
-
-		multi.staticGeometry:SetCastShadows(gDynamicsCastShadows)
-		=

-		multi.mbBuildRunning =3D false
-
-		-- terminate?
-		if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() ret=
urn end
-	end, nil, 1)
-	]]
-end
 =

 -- destroys the multi gfx static geometry
 function Renderer3D:DestroyMultiGraphic	(multi)
@@ -365,26 +272,46 @@
 	]]
 end
 =

-function Renderer3D:Multi_AddPartHelper	(multi, iTileTypeID,iX,iY,iZ,iHue)
-	table.insert(multi.lparts, {iTileTypeID,iX,iY,iZ,iHue})
-	=

-	-- calc aabb
-	multi.minx =3D math.min(multi.minx or iX, iX)
-	multi.maxx =3D math.max(multi.maxx or iX, iX)
-	multi.miny =3D math.min(multi.miny or iY, iY)
-	multi.maxy =3D math.max(multi.maxy or iY, iY)
-	=

-	-- setup fast access cache for walking
-	if (not multi.cache) then multi.cache =3D {} end
-	local myarr =3D multi.cache[iX..","..iY]
-	--~ print("######## Renderer3D:Multi_AddPartHelper addcache",multi)
-	if (not myarr) then myarr =3D {} multi.cache[iX..","..iY] =3D myarr end
-	table.insert(myarr,{iZ=3DiZ,iTileTypeID=3DiTileTypeID,xloc=3DiX,yloc=3DiY=
,zloc=3DiZ,artid=3DiTileTypeID,iHue=3DiHue}) =

-	-- also used by W3_ForAllMultiPartsAtPos
+-- multi / house =

+-- creates the geometry of the given multi and stores the gfx object in th=
is multi
+function Renderer3D:AddMultiItem( item )
+	printdebug("multi", sprintf("Multi detected with ARTID",item.artid,vardum=
p(item)) )
+	if (not item.multi) then =

+		printdebug("missing",sprintf("Renderer3D:AddMultiItem: failed loading (m=
ulti): artid=3D%i z_typename=3D%s\n",item.artid or -1,GetStaticTileTypeName=
(item.artid) or ""))
+		return
+	end
+	-- add dynamic items to render blocks or queue for delayed add
+	if self.map3d_spawners and self.map3d_spawners.multis then =

+		self.map3d_spawners.multis:AddMulti(item.serial,item.multi)
+	end
+end
+
+function Renderer3D:AddCorpseItem( item )
+	printdebug("corpse","AddDynamicItem corpse",item.amount)
+	local bodyid =3D item.amount
+	local hue =3D item.hue
+	local equip =3D {}
+	local bMoving,bTurning,bWarMode,bRunFlag =3D false,false,false,false
+	item.corpsegfx =3D CreateBodyGfx()
+	item.corpsegfx:SetCorpse()
+	item.corpsegfx:MarkForUpdate(bodyid,hue,equip)
+	item.corpsegfx:Update()
+	item.corpsegfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
+	item.gfx =3D item.corpsegfx.modelgfx
+	item.gfx:SetCastShadows(gDynamicsCastShadows)
+	--~ item.gfx:SetOrientation(qw,qx,qy,qz) -- GetStaticMeshOrientation(item=
.artid)
+
+	-- just add the dynamic as a scene node
+	=

+	item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
+	-- set's position and add's xadd,yadd,zadd corrections
+	self:UpdateDynamicItemPos(item, true)
+	-- updates the layer-visibility
+	self:UpdateDynamicVisibility(item)
 end
 =

 -- TODO: Multis & Serversidemultis don't recognize kTileDataFlag_LightSour=
ce yet
-function Renderer3D:CreateDynamicGfx( item )
+function Renderer3D:AddDynamicItem( item )
 	assert(not item.gfx)
 =

 	item.artid =3D CheckIfBoat(item.artid)
@@ -392,120 +319,14 @@
 	-- FILTER: get correction
 	item.xadd,item.yadd,item.zadd =3D FilterPositionXYZ(item.artid)
 	=

-	-- check if corpse
-	local bCorpse =3D item.artid_base =3D=3D kCorpseDynamicArtID
-	=

-	local bCorpseGFX =3D false
-	if (bCorpse) then
+	if (item.artid_base =3D=3D kCorpseDynamicArtID) then
 		-- corpse
-		printdebug("corpse","CreateDynamicGfx corpse",item.amount)
-		bCorpseGFX =3D true
-		=

-		local bodyid =3D item.amount
-		local hue =3D item.hue
-		local equip =3D {}
-		local bMoving,bTurning,bWarMode,bRunFlag =3D false,false,false,false
-		item.corpsegfx =3D CreateBodyGfx()
-		item.corpsegfx:SetCorpse()
-		item.corpsegfx:MarkForUpdate(bodyid,hue,equip)
-		item.corpsegfx:Update()
-		item.corpsegfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
-		item.gfx =3D item.corpsegfx.modelgfx
-		item.gfx:SetCastShadows(gDynamicsCastShadows)
-		--~ item.gfx:SetOrientation(qw,qx,qy,qz) -- GetStaticMeshOrientation(ite=
m.artid)
-	=

-		-- just add the dynamic as a scene node
-		=

-		item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
-		-- set's position and add's xadd,yadd,zadd corrections
-		self:UpdateDynamicItemPos(item, true)
-		-- updates the layer-visibility
-		self:UpdateDynamicVisibility(item)
-	end
-	=

-	if (bCorpseGFX) then
-		-- already handled above
+		self:AddCorpseItem(item)
 	elseif not item.artid then
 		print("ERROR: artid missing!!!!\n")
 	elseif item.artid >=3D gMulti_ID then =

-		-- Multis
-		print("######## Renderer3D:CreateDynamicGfx:Multi",item.artid-gMulti_ID,=
item.xloc,item.yloc,item.zloc)
-	=

-		printdebug("multi","-----------------------------")
-		printdebug("multi", sprintf("Multi detected with ARTID",item.artid,vardu=
mp(item)) )
-
-		-- Serverside Multi Check (Custom Multi)
-		if (item.lTile) then
-			printdebug("multi","Serverside Multi detected")
-
-			local iTileTypeID,iX,iY,iZ
-			local iHue
-			local multi =3D {}
-			multi.lparts =3D {}
-			=

-			print("+serverside",#item.lTile)
-			for k,v in pairs(item.lTile) do
-				-- create part
-				iTileTypeID =3D v.artid
-				iHue =3D 0				--<- TODO: hueing is WRONG !! Every part of an multi can=
 have its own hue!
-
-				-- generate absolute coords
-				iX =3D item.xloc + v.x + item.xadd
-				iY =3D item.yloc + v.y + item.yadd
-				iZ =3D item.zloc + v.z + item.zadd
-				=

-				-- add part
-				self:Multi_AddPartHelper(multi, iTileTypeID,iX,iY,iZ,iHue)
-			end
-
-			item.multi =3D multi
-			item.gfx =3D nil
-			gMultis[multi] =3D true
-			=

-			Renderer3D:CreateMultiGraphic(item.serial, multi)
-			=

-		-- Clientside Multi Check
-		elseif gMultiLoader then
-			printdebug("multi","Clientside Multi detected")
-			=

-			local multi =3D {}
-			multi.id =3D item.artid - gMulti_ID
-
-			local parts =3D gMultiLoader:CountMultiParts(multi.id)
-			print("+clientside",parts)
-			multi.lparts =3D {}
-			=

-			-- read out parts
-			printdebug("multi","Renderer3D:CreateDynamicGfx: multi id",multi.id,"pa=
rts",parts)
-
-			local iTileTypeID,iX,iY,iZ,iFlags
-			local iHue
-			for p =3D 0, parts-1 do
-				iTileTypeID,iX,iY,iZ,iFlags =3D gMultiLoader:GetMultiParts(multi.id,p)
-				iHue =3D 0				--<- TODO: hueing is WORNG !! Every part of an multi can=
 have its own hue!
-				=

-				-- generate absolute coords
-				iX =3D item.xloc + iX + item.xadd
-				iY =3D item.yloc + iY + item.yadd
-				iZ =3D item.zloc + iZ + item.zadd
-				=

-				printdebug("multi","part",p,":",iTileTypeID,iX,iY,iZ,iFlags)
-				=

-				-- skip invisible parts
-				if iFlags =3D=3D 1 then
-					-- add part
-					self:Multi_AddPartHelper(multi, iTileTypeID,iX,iY,iZ,iHue)
-				end
-			end
-			=

-			item.multi =3D multi
-			item.gfx =3D nil
-			gMultis[multi] =3D true
-
-			Renderer3D:CreateMultiGraphic(item.serial, multi)
-		else =

-			printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed loadi=
ng mesh for dynamic (multi): artid=3D%i z_typename=3D%s\n",item.artid or -1=
,GetStaticTileTypeName(item.artid) or ""))
-		end
+		-- multi
+		self:AddMultiItem(item)
 	else
 		-- normal 1 part object
 		local artid =3D item.artid

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Sun Sep 21 05:27:09 2008
@@ -120,6 +120,7 @@
 	local matname =3D atlas.mats[basematerial]
 	if (not matname) then =

 		matname =3D CloneMaterial(basematerial)
+		if (not matname) then print("ArtAtlasLoadMaterial: failed to clone basem=
at",basematerial) return end
 		SetTexture(matname,atlas.texname)
 		--~ SetSceneBlend(matname,0,0,0)
 		--~ SetDepthWriteEnabled(matname,0,0,1)

Modified: trunk/lua/lib.boat.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.boat.lua (original)
+++ trunk/lua/lib.boat.lua Sun Sep 21 05:27:09 2008
@@ -26,7 +26,7 @@
 Fallback: Dynamic created : artID =3D 16057	- hatch
 =

 =

-Renderer3D:CreateDynamicGfx: multi id   2       parts   38
+Renderer3D:AddDynamicItem: multi id   2       parts   38
 part    0       :       16098   365     1148    -120    0	- mast
 part    1       :       15947   365     1144    -120    0	- tillerman
 part    2       :       16057   365     1152    -120    0	- hatch

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Sun Sep 21 05:27:09 2008
@@ -1,11 +1,6 @@
 cMapBlock_2D_Statics	=3D CreateClass(cMapBlockGrid)
 cMapBlock_2D_Statics.iBlockSize		=3D 8 -- in tiles
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
-
-function cMapBlock_2D_Statics:ShortStep (t,xloc,yloc,zloc)
-	if (self.spriteblock) then self.spriteblock:CamStep(t,xloc,yloc,zloc) end
-	cMapBlock.ShortStep(self,t,xloc,yloc,zloc)
-end
 =

 function cMapBlock_2D_Statics:ClearDetail ()
 	if (self.spriteblock) then self.spriteblock:Destroy() self.spriteblock =
=3D nil end
@@ -13,20 +8,18 @@
 =

 -- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,static=3D?}
 function cMapBlock_2D_Statics:RayPick (rx,ry,rz, rvx,rvy,rvz) =

-	local spriteblock =3D self.spriteblock =

-	if (not spriteblock) then return end
-	return spriteblock:RayPick(rx,ry,rz, rvx,rvy,rvz) =

+	if (not self.spriteblock) then return end
+	return self.spriteblock:RayPick(rx,ry,rz, rvx,rvy,rvz) =

 end
 =

 function cMapBlock_2D_Statics:WorkStep_LoadDetail ()
 	-- statics : load infos from file
 	self.statics =3D MapGetBlockStatics(self.bx,self.by)
+	self:YieldIfOverTime()
 	=

 	-- create spriteblock
 	local spriteblock =3D cUOSpriteBlock:New()
 	self.spriteblock =3D spriteblock
-	=

-	self:YieldIfOverTime()
 	=

 	-- preload statics
 	for i,static in pairs(self.statics) do =

@@ -36,5 +29,7 @@
 	=

 	-- construct geometry
 	self:Yield()
-	spriteblock:Build(self.bx,self.by,Renderer2D.kAtlasBaseMaterial)
+	spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
+	local x,y,z =3D gCurrentRenderer:UOPosToLocal(self.bx*8,self.by*8,0)
+	spriteblock:SetPosition(x,y,z)
 end

Modified: trunk/lua/lib.walking3.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking3.lua (original)
+++ trunk/lua/lib.walking3.lua Sun Sep 21 05:27:09 2008
@@ -103,7 +103,7 @@
 	local n =3D xloc..","..yloc
 	for multi,v in pairs(gMultis) do =

 		--~ print("W3_ForAllMultiPartsAtPos",multi,multi.lparts,#multi.lparts,mu=
lti.cache)
-		local cache =3D multi.cache and multi.cache[n] -- see Renderer3D:Multi_A=
ddPartHelper =

+		local cache =3D multi.cache and multi.cache[n] -- see Multi_AddPartHelpe=
r =

 		if (cache) then for k,item in pairs(cache) do fun(item,param) end end
 	end
 end

Modified: trunk/lua/net/net.multi.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.multi.lua (original)
+++ trunk/lua/net/net.multi.lua Sun Sep 21 05:27:09 2008
@@ -270,33 +270,155 @@
 	if (dyn) then
 		--print("CH: Old custom house found")
 		-- check if customhousemulti already exists
-		if (dyn.customhouserevision) then
-			if (customhouserevision~=3Ddyn.customhouserevision) then
-				--print("CH: Houserevision not equal -> reset")
-				-- update revision
-				dyn.customhouserevision=3Dcustomhouserevision
-				--create a new house
-
-				-- just a Temp. Fix until 2D Renderer supports AddDynamicItem Serversi=
de Multis
-				if (gCurrentRenderer=3D=3DRenderer3D) then
-					gCurrentRenderer:RemoveDynamicItem( dyn )
-					dyn.lTile=3DlTile
-					gCurrentRenderer:AddDynamicItem( dyn )
-				end
+		if ((not dyn.customhouserevision) or customhouserevision~=3Ddyn.customho=
userevision) then
+			-- dyn.customhouserevision ~=3D nil : print("CH: Houserevision not equa=
l -> reset")
+			-- dyn.customhouserevision =3D=3D nil : print("CH: No Houserevision fou=
nd (only Clientside Stairs found)) -> new")
+			-- update revision
+			dyn.customhouserevision =3D customhouserevision
+			=

+			-- update house visuals
+			gCurrentRenderer:RemoveDynamicItem( dyn )
+			dyn.lTile=3DlTile
+			UpdateMultiData(dyn)
+			gCurrentRenderer:AddDynamicItem( dyn )
+		end
+	end
+end
+
+function UpdateMultiData (item)
+	local iTileTypeID,iX,iY,iZ,iFlags
+	local iHue =3D 0
+	local multi =3D {}
+	multi.lparts =3D {}
+		=

+
+	if (item.lTile) then
+		-- Serverside Multi
+		printdebug("multi","Serverside Multi detected")
+		for k,v in pairs(item.lTile) do
+			Multi_AddPartHelper(item,multi, v.artid,v.x,v.y,v.z)
+		end
+	elseif gMultiLoader then
+		-- Clientside Multi
+		printdebug("multi","Clientside Multi detected")
+		=

+		multi.id =3D item.artid - gMulti_ID
+		local partnum =3D gMultiLoader:CountMultiParts(multi.id)
+		for p =3D 0, partnum-1 do
+			local iTileTypeID,iX,iY,iZ,iFlags =3D gMultiLoader:GetMultiParts(multi.=
id,p)
+			-- skip invisible parts
+			if iFlags =3D=3D 1 then Multi_AddPartHelper(item,multi, iTileTypeID,iX,=
iY,iZ) end
+		end
+	else
+		print("UpdateMultiData : failed",item.artid)
+		return
+	end
+		=

+	item.multi =3D multi
+	gMultis[multi] =3D true
+end
+
+function Multi_AddPartHelper	(item,multi, iTileTypeID,iX,iY,iZ,iHue)
+	iHue =3D iHue or 0
+	local xloc =3D item.xloc + iX
+	local yloc =3D item.yloc + iY
+	local zloc =3D item.zloc + iZ
+	table.insert(multi.lparts, {iTileTypeID,xloc,yloc,zloc,iHue})
+	=

+	-- calc aabb
+	multi.minx =3D math.min(multi.minx or xloc, xloc)
+	multi.maxx =3D math.max(multi.maxx or xloc, xloc)
+	multi.miny =3D math.min(multi.miny or yloc, yloc)
+	multi.maxy =3D math.max(multi.maxy or yloc, yloc)
+	=

+	-- setup fast access cache for walking
+	if (not multi.cache) then multi.cache =3D {} end
+	local myarr =3D multi.cache[xloc..","..yloc]
+	if (not myarr) then myarr =3D {} multi.cache[xloc..","..yloc] =3D myarr e=
nd
+	table.insert(myarr,{iZ=3Dzloc,iTileTypeID=3DiTileTypeID,xloc=3Dxloc,yloc=
=3Dyloc,zloc=3Dzloc,artid=3DiTileTypeID,iHue=3DiHue}) =

+	-- also used by W3_ForAllMultiPartsAtPos
+end
+
+
+
+--[[
+-- OBSOLETE, old multi building code from 3d.dynamic.lua
+-- only run one build process per multi
+if multi.mbBuildRunning then return end
+multi.mbBuildRunning =3D true
+
+-- build job
+job.create(function()
+	if not multi.staticGeometry or not multi.staticGeometry:IsAlive() then
+		multi.staticGeometry =3D CreateRootGfx3D()
+	end
+
+	job.yield()
+	-- terminate?
+	if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() retu=
rn end
+				=

+	-- load mesh buffers
+	for k,v in pairs(multi.lparts) do
+		-- get tile
+		local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
+		-- and mesh
+		local meshname =3D GetMeshName(iTileTypeID)
+		-- and try to load it
+		if meshname then =

+			GetMeshBuffer(meshname)
+		end
+	end
+	=

+	job.yield()
+	-- terminate?
+	if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() retu=
rn end
+
+	-- build geometry
+	multi.staticGeometry:SetFastBatch()
+
+	for k,v in pairs(multi.lparts) do
+		local x,y,z
+		local qw,qx,qy,qz
+		local xadd,yadd,zadd
+
+		local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
+		=

+		local meshname =3D GetMeshName(iTileTypeID)
+
+		if meshname then
+			xadd,yadd,zadd =3D FilterPositionXYZ(iTileTypeID)
+			x,y,z =3D Renderer3D:UOPosToLocal(iX + xadd,iY + yadd,iZ * 0.1 + zadd) =

+			qw,qx,qy,qz =3D GetStaticMeshOrientation(iTileTypeID)
+
+			local r,g,b,a =3D 1,1,1,1
+			if (gHueLoader and iHue > 0) then
+				r,g,b =3D gHueLoader:GetColor(iHue - 1,31) -- get first color
 			end
-			-- else already in serversidemulti cache and load form here.
-		else
-			--print("CH: No Houserevision found (only Clientside Stairs found)) -> =
new")
-			--if not add revision to dynamic-multi
-			dyn.customhouserevision=3Dcustomhouserevision
-			-- create a new house
-
-			-- just a Temp. Fix until 2D Renderer supports AddDynamicItem Serversid=
e Multis
-			if (gCurrentRenderer=3D=3DRenderer3D) then
-				gCurrentRenderer:RemoveDynamicItem( dyn )
-				dyn.lTile=3DlTile
-				gCurrentRenderer:AddDynamicItem( dyn )
-			end
-		end
-	end
-end
+
+			local meshbuffer =3D GetMeshBuffer(meshname)
+
+			local orderval =3D iZ -- used for blendout later (fastbatch feature)
+			multi.staticGeometry:FastBatch_AddMeshBuffer(meshbuffer, orderval, x,y,=
z, qw,qx,qy,qz, -1,1,1, r,g,b,a)
+
+			local mousepick =3D {
+				xadd=3Dxadd,yadd=3Dyadd,zadd=3Dzadd,qw=3Dqw,qx=3Dqx,qy=3Dqy,qz=3Dqz,
+				sx=3D-1,sy=3D1,sz=3D1,x=3Dx,y=3Dy,z=3Dz,meshbuffer=3Dmeshbuffer,
+				iTileTypeID =3D iTileTypeID,
+				iHue =3D iHue,
+				iBlockX =3D math.floor(x/8), iBlockY =3D math.floor(y/8),
+			}
+			=

+			v.mousepick =3D mousepick
+		end
+	end
+
+	multi.staticGeometry:FastBatch_Build()
+
+	multi.staticGeometry:SetCastShadows(gDynamicsCastShadows)
+	=

+	multi.mbBuildRunning =3D false
+
+	-- terminate?
+	if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() retu=
rn end
+end, nil, 1)
+]]--

Modified: trunk/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.dynamic.lua (original)
+++ trunk/lua/obj/obj.dynamic.lua Sun Sep 21 05:27:09 2008
@@ -86,7 +86,7 @@
 	=

 	-- corspe   =

 	-- if (dynamicdata and dynamicdata.artid_base =3D=3D kCorpseDynamicArtID)=
 then ... end =

-	-- nothing needs to be done for here, see gCurrentRenderer:AddDynamicItem=
/CreateDynamicGfx
+	-- nothing needs to be done for here, see gCurrentRenderer:AddDynamicItem
 	=

 	-- self is mobile equipment
 	local mobile =3D mobile or GetMobile(self.iContainerSerial)
@@ -147,6 +147,7 @@
 	-- only create WorldGfx if item IS IN WORLD (and not in inside a containe=
r, or being a container itself like shop stuff)
 	if (bIsInWorld) then =

 		self.bWorldGfxInitialised =3D true
+		UpdateMultiData(self)
 		gCurrentRenderer:AddDynamicItem(self) -- create new gfx
 		gCurrentRenderer:UpdateDynamicItemPos(self)
 	end



From no-reply at zwischenwelt.org  Sun Sep 21 14:56:00 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Sep 2008 12:56:00 -0000
Subject: [Iris-commit] [IRIS] r2465 - /trunk/bin/iris2.exe
Message-ID: <20080921130005.3DEB71524036@zwischenwelt.org>

Author: sience
Date: Sun Sep 21 14:55:59 2008
New Revision: 2465

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sun Sep 21 20:34:40 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Sep 2008 18:34:40 -0000
Subject: [Iris-commit] [IRIS] r2466 - in /trunk/lua: lib.2d.dynamic.lua
	lib.2d.spriteblock.lua
Message-ID: <20080921190023.CC68D1524032@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Sep 21 20:34:39 2008
New Revision: 2466

Log:
spriteblock : option to directly use rootgfx for single sprites

Modified:
    trunk/lua/lib.2d.dynamic.lua
    trunk/lua/lib.2d.spriteblock.lua

Modified: trunk/lua/lib.2d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.dynamic.lua (original)
+++ trunk/lua/lib.2d.dynamic.lua Sun Sep 21 20:34:39 2008
@@ -54,8 +54,8 @@
 		local tx,ty,tz,fIndexRel =3D 0,0,0,0
 		local iTileTypeID	=3D item.artid
 		local iHue			=3D item.hue
-		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,tz,tz,fIndexRel),item)
-		spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
+		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,tz,tz,fIndexRel)+1,item)
+		spriteblock:Build(Renderer2D.kSpriteBaseMaterial,true)
 		local x,y,z =3D gCurrentRenderer:UOPosToLocal(item.xloc,item.yloc,item.z=
loc*kRenderer2D_ZScale)
 		spriteblock:SetPosition(x,y,z)
 	end

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sun Sep 21 20:34:39 2008
@@ -163,7 +163,8 @@
 end
 =

 =

-function cUOSpriteBlock:Build 	(basemat)
+-- bUseRootGfx : default false, can be set to true if there is only one sp=
rite
+function cUOSpriteBlock:Build 	(basemat,bUseRootGfx)
 	-- for 3d statics
 	-- statics : create gfx
 	-- -so 1420,1550
@@ -173,8 +174,14 @@
 		local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
 		-- TODO : sort by z for blendout upper floors
 		local spritecount =3D #group
-		local gfx =3D self.rootgfx:CreateChild()
-		table.insert(self.pGroupGfx,gfx)
+		local gfx
+		if (bUseRootGfx) then
+			gfx =3D self.rootgfx
+			bUseRootGfx =3D false
+		else
+			gfx =3D self.rootgfx:CreateChild()
+			table.insert(self.pGroupGfx,gfx)
+		end
 		gfx:SetSimpleRenderable()
 		gfx:SetMaterial(matname)
 		=




From no-reply at zwischenwelt.org  Sun Sep 21 23:16:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Sep 2008 21:16:55 -0000
Subject: [Iris-commit] [IRIS] r2467 - in /trunk: include/terrain.h
 lua/lib.2d.spriteblock.lua lua/lib.3d.mousepick.lua
 lua/lib.mapblock.2d.terrain.lua lua/lib.terrain.multitex.lua
 src/scripting.iris.cpp src/terrain_multitex.cpp
Message-ID: <20080921211658.277EC1524030@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Sep 21 23:16:54 2008
New Revision: 2467

Log:
terrain generation : added parameter for z-unit size, used by 2d.  2d terra=
in scaling fixed

Modified:
    trunk/include/terrain.h
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.mapblock.2d.terrain.lua
    trunk/lua/lib.terrain.multitex.lua
    trunk/src/scripting.iris.cpp
    trunk/src/terrain_multitex.cpp

Modified: trunk/include/terrain.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/terrain.h (original)
+++ trunk/include/terrain.h Sun Sep 21 23:16:54 2008
@@ -13,7 +13,7 @@
 std::string		BuildTerrainEntity_Simple	(cGroundBlockLoader* pGroundBlockLo=
ader,const int iMinX,const int iMinY,const int iW,const int iH,const bool b=
GenerateNormals);
 std::string		BuildTerrainEntity_Shaded	(cGroundBlockLoader* pGroundBlockLo=
ader,const int iMinX,const int iMinY,const int iW,const int iH);
 =

-void	 		TerrainMultiTexWrite		(cGroundBlockLoader* pGroundBlockLoader,cons=
t int iBlockX,const int iBlockY,const int iDX,const int iDY,Lugre::cRobRend=
erOp& pRobRenderOp);
+void	 		TerrainMultiTexWrite		(cGroundBlockLoader* pGroundBlockLoader,cons=
t int iBlockX,const int iBlockY,const int iDX,const int iDY,const float fZU=
nit,Lugre::cRobRenderOp& pRobRenderOp);
 void	 		TerrainMultiTex_SetGroundMaterialTypeLookUp	(const int* piValues,c=
onst int iCount);
 void			TerrainMultiTex_AddTexCoordSet				(int iMode,float tx,float ty,floa=
t tw,float th,int iTileSpan); ///< 0:ground,1:mainmask,2:mask
 void			TerrainMultiTex_AddMaskTexCoordSet			(float u1,float v1, float u2,f=
loat v2, float u3,float v3, float u4,float v4);
@@ -23,6 +23,6 @@
 /// output : float& pfHitDist,int& pTX,int& pTY
 /// the terrain is assumed to start at 0,0,0,  if this is not the case, ju=
st adjust the ray origin : rx,ry,rz
 /// tx,ty are the relative tile coordinates, in the range [0,8*dx[ , [0,8*=
dy[ =

-bool			TerrainMultiTex_RayPick		(cGroundBlockLoader* pGroundBlockLoader,co=
nst int iBlockX,const int iBlockY,const int iDX,const int iDY,const Ogre::V=
ector3& vRayPos,const Ogre::Vector3& vRayDir,float& pfHitDist,int& pTX,int&=
 pTY);
+bool			TerrainMultiTex_RayPick		(cGroundBlockLoader* pGroundBlockLoader,co=
nst int iBlockX,const int iBlockY,const int iDX,const int iDY,const float f=
ZUnit,const Ogre::Vector3& vRayPos,const Ogre::Vector3& vRayDir,float& pfHi=
tDist,int& pTX,int& pTY);
 =

 #endif

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sun Sep 21 23:16:54 2008
@@ -11,18 +11,17 @@
 	self.pTileTypeAtlasMats =3D {} -- self.pTileTypeAtlasMats[iTileTypeID][iH=
ue] =3D pAtlasPiece (see ArtAtlasLoadAndLock)
 	self.pGroupGfx =3D {}
 	self.pSpritesByAtlas =3D {}
-	self.rootgfx =3D CreateRootGfx3D()
 end
 =

 function cUOSpriteBlock:SetPosition (x,y,z) =

 	self.x =3D x
 	self.y =3D y
 	self.z =3D z
-	self.rootgfx:SetPosition(x,y,z) =

+	if (self.rootgfx) then self.rootgfx:SetPosition(x,y,z) end
 end
 =

 function cUOSpriteBlock:Destroy ()
-	if (self.pGroupGfx) then for k,v in pairs(self.pGroupGfx) do v:Destroy() =
end self.pGroupGfx =3D nil end
+	if (self.pGroupGfx) then for k,v in pairs(self.pGroupGfx) do v:Destroy() =
end self.pGroupGfx =3D {} end
 	if (self.rootgfx) then self.rootgfx:Destroy() self.rootgfx =3D nil end
 end
 =

@@ -133,7 +132,7 @@
 	=

 	local x,y,z =3D -tx,ty,zloc * kRenderer2D_ZScale
 	local sortadd =3D sortbonus * kRenderer2D_ZScale
-	local movedown =3D kSq2 -- ox-1,oy+1 : sprites are too high normally, thi=
s moves them down =

+	local movedown =3D 1 -- ox-1,oy+1 : sprites are too high normally, this m=
oves them down =

 	x =3D x +   -1 * sortadd - movedown  =

 	y =3D y +    1 * sortadd + movedown
 	z =3D z + kSq2 * sortadd
@@ -165,6 +164,7 @@
 =

 -- bUseRootGfx : default false, can be set to true if there is only one sp=
rite
 function cUOSpriteBlock:Build 	(basemat,bUseRootGfx)
+	if (not self.rootgfx) then self.rootgfx =3D CreateRootGfx3D() end
 	-- for 3d statics
 	-- statics : create gfx
 	-- -so 1420,1550

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Sun Sep 21 23:16:54 2008
@@ -117,7 +117,7 @@
 				local bx,by =3D iBlockUO_X,iBlockUO_Y
 				local tx,ty
 =

-				bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,bx,=
by,w,h, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
+				bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,bx,=
by,w,h,0.1, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
 				if (bHit) then
 					if (tx >=3D 8) then bx =3D bx + 1   tx =3D tx - 8 end
 					if (ty >=3D 8) then by =3D by + 1   ty =3D ty - 8 end
@@ -228,7 +228,7 @@
 						local bx,by =3D gfx.bx,gfx.by
 						local tx,ty
 =

-						bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,g=
fx.bx,gfx.by,d,d, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
+						bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,g=
fx.bx,gfx.by,d,d,0.1, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
 						if (bHit) then
 							if (tx >=3D 8) then bx =3D bx + 1   tx =3D tx - 8 end
 							if (ty >=3D 8) then by =3D by + 1   ty =3D ty - 8 end

Modified: trunk/lua/lib.mapblock.2d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.2d.terrain.lua Sun Sep 21 23:16:54 2008
@@ -13,12 +13,12 @@
 	local gfx =3D self.gfx_terrain =

 	if (not gfx) then return end
 	local bx,by,bs =3D self.bx * 2, self.by * 2, self.iBlockSize
-	local bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,=
bx,by,bs,bs, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
+	local bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,=
bx,by,bs,bs,kRenderer2D_ZScale, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
 	if (not bHit) then return end
 	return fHitDist,bx * 8 + tx,by*8 + ty
 end
 =

 function cMapBlock_2D_Terrain:WorkStep_LoadDetail ()
 	local bs =3D kMultiTexTerrainChunkSize
-	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs)
+	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs,kRe=
nderer2D_ZScale)
 end

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Sun Sep 21 23:16:54 2008
@@ -358,7 +358,8 @@
 =

 =

 =

-function MakeMultiTexTerrainGfx(bx,by) =

+function MakeMultiTexTerrainGfx(bx,by,zunit) =

+	zunit =3D zunit or 0.1
 	local gfx =3D CreateRootGfx3D()
 	gfx.bx =3D bx
 	gfx.by =3D by
@@ -367,7 +368,7 @@
 	gfx.y =3D y
 	gfx.z =3D z
 	gfx:SetPosition(x,y,z) -- print("MakeMultiTexTerrainGfx",x,y,z,gGroundBlo=
ckLoader,bx,by,kMultiTexTerrainChunkSize)
-	Gfx3D_SetMultiTexTerrain(gfx,gGroundBlockLoader,bx,by,kMultiTexTerrainChu=
nkSize,kMultiTexTerrainChunkSize)
+	Gfx3D_SetMultiTexTerrain(gfx,gGroundBlockLoader,bx,by,kMultiTexTerrainChu=
nkSize,kMultiTexTerrainChunkSize,zunit)
 	gfx:SetMaterial(MultiTexTerrainGetMat())
 	gfx:SetCastShadows(gTerrainCastShadows)
 	return gfx

Modified: trunk/src/scripting.iris.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.iris.cpp (original)
+++ trunk/src/scripting.iris.cpp Sun Sep 21 23:16:54 2008
@@ -294,18 +294,19 @@
 static int l_Gfx3D_SetMultiTexTerrain (lua_State *L) { PROFILE
 	cGfx3D* pGfx3D =3D cLuaBind<cGfx3D>::checkudata_alive(L);
 	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata_alive(L,2);
-	int bx =3D luaL_checkint(L,3);
-	int by =3D luaL_checkint(L,4);
-	int dx =3D (lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ? luaL_checkint(L,5)=
 : 1;
-	int dy =3D (lua_gettop(L) >=3D 6 && !lua_isnil(L,6)) ? luaL_checkint(L,6)=
 : 1;
+	int bx		=3D luaL_checkint(L,3);
+	int by		=3D luaL_checkint(L,4);
+	int dx		=3D (lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ? luaL_checkint(L,5=
) : 1;
+	int dy		=3D (lua_gettop(L) >=3D 6 && !lua_isnil(L,6)) ? luaL_checkint(L,6=
) : 1;
+	float zunit =3D (lua_gettop(L) >=3D 7 && !lua_isnil(L,7)) ? luaL_checknum=
ber(L,7) : 0.1;
 	=

 	pGfx3D->SetSimpleRenderable();
 	cRobRenderOp* pRobRenderOp =3D pGfx3D->mpSimpleRenderable;
-	TerrainMultiTexWrite(pGroundBlockLoader,bx,by,dx,dy,*pRobRenderOp);
-	return 0;
-}
-
-/// bhit,bhitdist,tx,ty =3D TerrainMultiTex_RayPick(pGroundBlockLoader,bx,=
by,dx,dy, rx,ry,rz, rvx,rvy,rvz) -- mainly for mousepicking
+	TerrainMultiTexWrite(pGroundBlockLoader,bx,by,dx,dy,zunit,*pRobRenderOp);
+	return 0;
+}
+
+/// bhit,bhitdist,tx,ty =3D TerrainMultiTex_RayPick(pGroundBlockLoader,bx,=
by,dx,dy,zunit, rx,ry,rz, rvx,rvy,rvz) -- mainly for mousepicking
 /// see also  TerrainMultiTex_RayPick (terrain.h,terrain_multitex.cpp)
 static int	l_TerrainMultiTex_RayPick			(lua_State *L) { PROFILE =

 	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata_alive(L,1);
@@ -313,14 +314,15 @@
 	int by =3D luaL_checkint(L,3);
 	int dx =3D luaL_checkint(L,4);
 	int dy =3D luaL_checkint(L,5);
+	float zunit =3D (lua_gettop(L) >=3D 6 && !lua_isnil(L,6)) ? luaL_checknum=
ber(L,6) : 0.1;
 =

 	// don't use ++i or something here, the compiler might mix the order
-	Ogre::Vector3	vRayPos(luaL_checknumber(L, 6),luaL_checknumber(L, 7),luaL_=
checknumber(L, 8));
-	Ogre::Vector3	vRayDir(luaL_checknumber(L, 9),luaL_checknumber(L,10),luaL_=
checknumber(L,11));
+	Ogre::Vector3	vRayPos(luaL_checknumber(L, 7),luaL_checknumber(L, 8),luaL_=
checknumber(L, 9));
+	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
 	=

 	float fHitDist =3D 0;
 	int tx =3D 0,ty =3D 0;
-	bool bHit =3D TerrainMultiTex_RayPick(pGroundBlockLoader,bx,by,dx,dy,vRay=
Pos,vRayDir,fHitDist,tx,ty);
+	bool bHit =3D TerrainMultiTex_RayPick(pGroundBlockLoader,bx,by,dx,dy,zuni=
t,vRayPos,vRayDir,fHitDist,tx,ty);
 	lua_pushboolean(L,bHit);
 	lua_pushnumber(L,fHitDist);
 	lua_pushnumber(L,tx);

Modified: trunk/src/terrain_multitex.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/terrain_multitex.cpp (original)
+++ trunk/src/terrain_multitex.cpp Sun Sep 21 23:16:54 2008
@@ -33,8 +33,10 @@
 	RawGroundBlock* mpBlocks[3*3];
 	float			mfAddX;
 	float			mfAddY;
-	=

-	cTiledMultiTexTerrain() : mfAddX(0), mfAddY(0) {}
+	float			mfZUnit;
+	float			mfLookUpZUnit;
+	=

+	cTiledMultiTexTerrain() : mfAddX(0), mfAddY(0), mfZUnit(0.1), mfLookUpZUn=
it(0) {}
 	=

 	enum { kMaxZDiff =3D 64 }; ///< mNormalLookup
 	enum { kGroundMatLookUpSize =3D 0x4000 };
@@ -63,7 +65,7 @@
 	/// returns original uo z integer (16bit)
 	/// only use this after initializing the cache !
 	inline int		GetZ	(const int x,const int y) { return mZ[(y+1)*(T+3)+(x+1)]=
; }
-	inline float	GetZF	(const int x,const int y) { return float(GetZ(x,y))*0.=
1; }
+	inline float	GetZF	(const int x,const int y) { return float(GetZ(x,y))*mf=
ZUnit; }
 	=

 	/// calc/limit diff... see also cached GetNormal below
 	/// dz_x is the z-difference between x-1,y and x+1,y
@@ -157,7 +159,8 @@
 	inline float*	GetTexCoordInfo_Mask				(const int iID) { return &mTexCoord=
s_Mask[		iID*8]; }
 	=

 	=

-	void	WriteToRobRenderOp (cGroundBlockLoader* pGroundBlockLoader,int bx,in=
t by,const int iDX,const int iDY,cRobRenderOp& pRobRenderOp) {
+	void	WriteToRobRenderOp (cGroundBlockLoader* pGroundBlockLoader,int bx,in=
t by,const int iDX,const int iDY,const float fZUnit,cRobRenderOp& pRobRende=
rOp) {
+		mfZUnit =3D fZUnit;
 		int iVertexCountPerBlock	=3D T*T*4;
 		int iVertexCount			=3D iDX*iDY*iVertexCountPerBlock;
 		int iIndexCount				=3D iDX*iDY*T*T*6;
@@ -207,7 +210,9 @@
 	}
 	=

 	/// don't call before WriteToVertexBuffer has been called at least once t=
o set up lookup tables
-	bool	RayPick		(cGroundBlockLoader* pGroundBlockLoader,const int iBlockX,c=
onst int iBlockY,const int iDX,const int iDY,const Ogre::Vector3& vRayPos,c=
onst Ogre::Vector3& vRayDir,float& pfHitDist,int& pTX,int& pTY) {
+	bool	RayPick		(cGroundBlockLoader* pGroundBlockLoader,const int iBlockX,c=
onst int iBlockY,const int iDX,const int iDY,const float fZUnit,const Ogre:=
:Vector3& vRayPos,const Ogre::Vector3& vRayDir,float& pfHitDist,int& pTX,in=
t& pTY) {
+		mfZUnit =3D fZUnit;
+	=

 		//~ printf("mulittex_terrain_raypick %p %d,%d,%d,%d\n",pGroundBlockLoade=
r,iBlockX,iBlockY,iDX,iDY);
 		=

 		//~ if (!Ogre::Ray(vRayPos,vRayDir).intersects(Ogre::Sphere(Ogre::Vector=
3::ZERO,mfBoundRad + 0.1)).first) return -1;
@@ -259,12 +264,11 @@
 		}
 		=

 		// called once at startup
-		static bool		bNormalLookupInit =3D true;
-		if (bNormalLookupInit) { =

-			bNormalLookupInit =3D false; // only once
+		if (mfLookUpZUnit !=3D mfZUnit) { =

+			mfLookUpZUnit =3D mfZUnit; // only once per zunit
 			for (int dz_y=3D-kMaxZDiff;dz_y<=3DkMaxZDiff;++dz_y)
 			for (int dz_x=3D-kMaxZDiff;dz_x<=3DkMaxZDiff;++dz_x) {
-				Ogre::Vector3 n =3D Ogre::Vector3(2,0,dz_x*0.1).crossProduct(Ogre::Vec=
tor3(0,2,dz_y*0.1)).normalisedCopy();
+				Ogre::Vector3 n =3D Ogre::Vector3(2,0,dz_x*mfZUnit).crossProduct(Ogre:=
:Vector3(0,2,dz_y*mfZUnit)).normalisedCopy();
 				float* p =3D LookUpNormal(dz_x,dz_y);
 				p[0] =3D n.x;
 				p[1] =3D n.y;
@@ -423,8 +427,8 @@
 =

 cTiledMultiTexTerrain<8>	gTiledMultiTexTerrain;
 =

-void	 TerrainMultiTexWrite	(cGroundBlockLoader* pGroundBlockLoader,const i=
nt iBlockX,const int iBlockY,const int iDX,const int iDY,cRobRenderOp& pRob=
RenderOp) {
-	gTiledMultiTexTerrain.WriteToRobRenderOp(pGroundBlockLoader,iBlockX,iBloc=
kY,iDX,iDY,pRobRenderOp);
+void	 TerrainMultiTexWrite	(cGroundBlockLoader* pGroundBlockLoader,const i=
nt iBlockX,const int iBlockY,const int iDX,const int iDY,const float fZUnit=
,cRobRenderOp& pRobRenderOp) {
+	gTiledMultiTexTerrain.WriteToRobRenderOp(pGroundBlockLoader,iBlockX,iBloc=
kY,iDX,iDY,fZUnit,pRobRenderOp);
 }
 =

 void	 TerrainMultiTex_SetGroundMaterialTypeLookUp	(const int* piValues,con=
st int iCount) {
@@ -459,7 +463,7 @@
 	gTiledMultiTexTerrain.mTexCoords_Mask.push_back(v4);
 }
 =

-bool	TerrainMultiTex_RayPick		(cGroundBlockLoader* pGroundBlockLoader,cons=
t int iBlockX,const int iBlockY,const int iDX,const int iDY,const Ogre::Vec=
tor3& vRayPos,const Ogre::Vector3& vRayDir,float& pfHitDist,int& pTX,int& p=
TY) {
-	return gTiledMultiTexTerrain.RayPick(pGroundBlockLoader,iBlockX,iBlockY,i=
DX,iDY,vRayPos,vRayDir,pfHitDist,pTX,pTY);
+bool	TerrainMultiTex_RayPick		(cGroundBlockLoader* pGroundBlockLoader,cons=
t int iBlockX,const int iBlockY,const int iDX,const int iDY,const float fZU=
nit,const Ogre::Vector3& vRayPos,const Ogre::Vector3& vRayDir,float& pfHitD=
ist,int& pTX,int& pTY) {
+	return gTiledMultiTexTerrain.RayPick(pGroundBlockLoader,iBlockX,iBlockY,i=
DX,iDY,fZUnit,vRayPos,vRayDir,pfHitDist,pTX,pTY);
 }
 =




From no-reply at zwischenwelt.org  Sun Sep 21 23:42:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Sep 2008 21:42:20 -0000
Subject: [Iris-commit] [IRIS] r2468 - in /trunk: README bin/iris2.exe
Message-ID: <20080921214220.826A01524030@zwischenwelt.org>

Author: sience
Date: Sun Sep 21 23:42:20 2008
New Revision: 2468

Log:
-new win32 binary
-updated readme

Modified:
    trunk/README
    trunk/bin/iris2.exe

Modified: trunk/README
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/README (original)
+++ trunk/README Sun Sep 21 23:42:20 2008
@@ -121,12 +121,7 @@
 	(this is for searching and destroying billboard-like models)
 	(careful with big changes to param1, will be slow, skipping tries to load=
 all meshes in between)
 =

-=3D=3D=3D 2d-Renderer and data =3D=3D=3D
-the 2DRenderer is only available as compiled .luac file, =

-it is a optional closed source plugin that is not statically linked, =

-if you don't want it, you can delete the .luac file.
-(note : it will probably be opensourced soon)
-
+=3D=3D=3D  data =3D=3D=3D
 there is currently no license for the models and textures in the data dir,
 they have been created by the iris1 team for use with the iris project.
 We are in the progress of replacing them with new art that will be made av=
ailable =

@@ -146,7 +141,6 @@
 Florian Fischer (SiENcE) =

 Robert Noll (Ghoulsblade) =

 Sebastian Dorda (hagish)
-R=C3=BCdiger Pakmor (Varan)
 =

 =3D=3D=3D other projects of the iris-ogre-developers =3D=3D=3D
 http://schattenkind.net/		- Our mainsite (a Game developer association)

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Mon Sep 22 00:53:01 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Sep 2008 22:53:01 -0000
Subject: [Iris-commit] [IRIS] r2469 - in /trunk/lua: lib.2d.dynamic.lua
	lib.2d.spriteblock.lua
Message-ID: <20080921225302.0D7161524030@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep 22 00:52:58 2008
New Revision: 2469

Log:
slight 2d adjustments

Modified:
    trunk/lua/lib.2d.dynamic.lua
    trunk/lua/lib.2d.spriteblock.lua

Modified: trunk/lua/lib.2d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.dynamic.lua (original)
+++ trunk/lua/lib.2d.dynamic.lua Mon Sep 22 00:52:58 2008
@@ -31,7 +31,7 @@
 		local ty =3D yloc-itemyloc
 		local tz =3D zloc-itemzloc
 		local fIndexRel =3D k / totalpartnum
-		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,tz,tz,fIndexRel),item)
+		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,ty,tz,fIndexRel)+1,item)
 	end
 	spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
 	local x,y,z =3D gCurrentRenderer:UOPosToLocal(itemxloc,itemyloc,itemzloc*=
kRenderer2D_ZScale)

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Mon Sep 22 00:52:58 2008
@@ -88,7 +88,7 @@
 	local pTileType =3D GetStaticTileType(artid)
 	return				1.000 * (zloc + pTileType.iSortBonus2D) + -- zloc + =

 						1.000 * (pTileType.miHeight/100) +
-						0.000 * (fIndexRel) +
+						0.005 * (fIndexRel) +
 						0.005 * (tx / 8)
 end
 =




From no-reply at zwischenwelt.org  Mon Sep 22 16:11:17 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 22 Sep 2008 14:11:17 -0000
Subject: [Iris-commit] [IRIS] r2470 - /trunk/lua/lib.2d.dynamic.lua
Message-ID: <20080922141117.8EB9F1524030@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep 22 16:11:16 2008
New Revision: 2470

Log:
2d : fixed sorting for dynamic vs multi

Modified:
    trunk/lua/lib.2d.dynamic.lua

Modified: trunk/lua/lib.2d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.dynamic.lua (original)
+++ trunk/lua/lib.2d.dynamic.lua Mon Sep 22 16:11:16 2008
@@ -1,8 +1,4 @@
 -- dynamics (items,doors,...)
-
-function Renderer2D:UpdateMultiData					(item) =

-	print("TODO:Renderer2D:UpdateMultiData")
-end
 =

 function Renderer2D:RemoveDynamicItem				(item) =

 	if (item.gfx2d) then item.gfx2d:Destroy() item.gfx2d =3D nil end
@@ -30,8 +26,11 @@
 		local tx =3D xloc-itemxloc
 		local ty =3D yloc-itemyloc
 		local tz =3D zloc-itemzloc
+		local sorttx =3D xloc-floor(xloc/8)*8
+		local sortty =3D yloc-floor(yloc/8)*8
+		local sorttz =3D zloc
 		local fIndexRel =3D k / totalpartnum
-		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,ty,tz,fIndexRel)+1,item)
+		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,sorttx,sortty,sorttz,fIndexRel)+1,item)
 	end
 	spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
 	local x,y,z =3D gCurrentRenderer:UOPosToLocal(itemxloc,itemyloc,itemzloc*=
kRenderer2D_ZScale)
@@ -51,12 +50,18 @@
 		local spriteblock =3D cUOSpriteBlock:New()
 		item.gfx2d =3D spriteblock
 		=

+		local xloc =3D item.xloc
+		local yloc =3D item.yloc
+		local zloc =3D item.zloc
 		local tx,ty,tz,fIndexRel =3D 0,0,0,0
+		local sorttx =3D xloc-floor(xloc/8)*8
+		local sortty =3D yloc-floor(yloc/8)*8
+		local sorttz =3D zloc
 		local iTileTypeID	=3D item.artid
 		local iHue			=3D item.hue
-		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,tx,tz,tz,fIndexRel)+1,item)
+		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,sorttx,sortty,sorttz,fIndexRel)+1,item)
 		spriteblock:Build(Renderer2D.kSpriteBaseMaterial,true)
-		local x,y,z =3D gCurrentRenderer:UOPosToLocal(item.xloc,item.yloc,item.z=
loc*kRenderer2D_ZScale)
+		local x,y,z =3D gCurrentRenderer:UOPosToLocal(xloc,yloc,zloc*kRenderer2D=
_ZScale)
 		spriteblock:SetPosition(x,y,z)
 	end
 end
@@ -66,5 +71,5 @@
 		Renderer2D.bDebugWarnUpdateDynamicItemPos =3D true
 		print("todo : 2dmode : UpdateDynamicItemPos")
 	end
-	--~ if (item.gfx2d) then print("Renderer2D:UpdateDynamicItemPos: fixme, z=
scale !=3D 0.1") item.gfx2d:SetPosition(self:UOPosToLocal(item.xloc,item.yl=
oc,item.zloc * 0.1)) end
+	--~ if (item.gfx2d) then print("Renderer2D:UpdateDynamicItemPos: fixme, z=
scale !=3D 0.1") item.gfx2d:SetPosition(self:UOPosToLocal(item.xloc,item.yl=
oc,item.zloc * kRenderer2D_ZScale)) end
 end



From no-reply at zwischenwelt.org  Mon Sep 22 17:27:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 22 Sep 2008 15:27:47 -0000
Subject: [Iris-commit] [IRIS] r2471 - in /trunk/lua: lib.2d.spriteblock.lua
 lib.mapblock.2d.statics.lua lib.mapblock.2d.terrain.lua
Message-ID: <20080922152747.984671524030@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep 22 17:27:47 2008
New Revision: 2471

Log:
2d : fixed zloc factor in sorting

Modified:
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.2d.terrain.lua

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Mon Sep 22 17:27:47 2008
@@ -86,10 +86,10 @@
 	--~ prio4 =3D fIndexRel						in [0,1]
 	--~ prio5 =3D tx								in [0,7]
 	local pTileType =3D GetStaticTileType(artid)
-	return				1.000 * (zloc + pTileType.iSortBonus2D) + -- zloc + =

+	return		0.05*(	1.000 * (zloc + pTileType.iSortBonus2D) + -- zloc + =

 						1.000 * (pTileType.miHeight/100) +
 						0.005 * (fIndexRel) +
-						0.005 * (tx / 8)
+						0.005 * (tx / 8) )
 end
 =

 =

@@ -131,7 +131,7 @@
 	=

 	=

 	local x,y,z =3D -tx,ty,zloc * kRenderer2D_ZScale
-	local sortadd =3D sortbonus * kRenderer2D_ZScale
+	local sortadd =3D sortbonus * kRenderer2D_ZScale + 1
 	local movedown =3D 1 -- ox-1,oy+1 : sprites are too high normally, this m=
oves them down =

 	x =3D x +   -1 * sortadd - movedown  =

 	y =3D y +    1 * sortadd + movedown

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Mon Sep 22 17:27:47 2008
@@ -13,6 +13,8 @@
 end
 =

 function cMapBlock_2D_Statics:WorkStep_LoadDetail ()
+	self:ClearDetail()
+	=

 	-- statics : load infos from file
 	self.statics =3D MapGetBlockStatics(self.bx,self.by)
 	self:YieldIfOverTime()

Modified: trunk/lua/lib.mapblock.2d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.2d.terrain.lua Mon Sep 22 17:27:47 2008
@@ -20,5 +20,6 @@
 =

 function cMapBlock_2D_Terrain:WorkStep_LoadDetail ()
 	local bs =3D kMultiTexTerrainChunkSize
+	self:ClearDetail()
 	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs,kRe=
nderer2D_ZScale)
 end



From no-reply at zwischenwelt.org  Mon Sep 22 22:01:43 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 22 Sep 2008 20:01:43 -0000
Subject: [Iris-commit] [IRIS] r2472 - in /trunk/lua: lib.2d.cam.lua
	lib.2d.renderer.lua
Message-ID: <20080922200143.948601524030@zwischenwelt.org>

Author: hagish
Date: Mon Sep 22 22:01:42 2008
New Revision: 2472

Log:
ogre16 zoom in 2d mode

Modified:
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Mon Sep 22 22:01:42 2008
@@ -59,6 +59,15 @@
 	self:SetCamPos(self:GetCamPos()) -- nearclip changed
 end
 =

+function Renderer2D:SetZoom (f)
+	GetMainCam():SetOrthoWindow(f)
+	self.mfZoomFactor =3D f
+end
+
+function Renderer2D:CamChangeZoom				(f)
+	self:SetZoom(self.mfZoomFactor + f * 10)
+end
+
 function Renderer2D:CamInit ()
 	--~ self:CamTestTile()
 	=

@@ -67,6 +76,8 @@
 	--~ cam:SetFarClipDistance( 100000.0 )
 	cam:SetProjectionType(kCamera_PT_ORTHOGRAPHIC)
 	cam:SetFOVy( gfDeg2Rad*90 )
+	=

+	self:SetZoom(25)
 	=

 	-- cam rotation
 	local xang =3D gfDeg2Rad * (45) =


Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Mon Sep 22 22:01:42 2008
@@ -148,7 +148,6 @@
 end
 =

 function Renderer2D:InitLocalCam				(x,y,z) end -- ??? offline mode ?
-function Renderer2D:CamChangeZoom				() end
 function Renderer2D:ChangeCamMode				() end
 function Renderer2D:GetMouseHitSerial			() end
 function Renderer2D:GetMouseHitTileCoords		() end



From no-reply at zwischenwelt.org  Mon Sep 22 22:01:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 22 Sep 2008 20:01:47 -0000
Subject: [Iris-commit] [IRIS] r2473 - /trunk/lua/widgets/widget.uobutton.lua
Message-ID: <20080922200147.4C1B31524030@zwischenwelt.org>

Author: hagish
Date: Mon Sep 22 22:01:46 2008
New Revision: 2473

Log:
bugfix: some buttons in gumps does not work

Modified:
    trunk/lua/widgets/widget.uobutton.lua

Modified: trunk/lua/widgets/widget.uobutton.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/widgets/widget.uobutton.lua (original)
+++ trunk/lua/widgets/widget.uobutton.lua Mon Sep 22 22:01:46 2008
@@ -38,8 +38,8 @@
 	local dialog =3D self:GetDialog()
 	local page_id =3D self.params.page_id
 	local return_value =3D self.params.return_value
-	print("UOButton:on_button_click",page_id,return_value,dialog,dialog and d=
ialog.bClientSideMode)
-	if (page_id and page_id > 0) then
+	printdebug("gump","UOButton:on_button_click",page_id,return_value,dialog,=
dialog and dialog.bClientSideMode)
+	if (page_id and page_id > 0 and dialog.pages[page_id]) then
 		if (dialog) then dialog:ShowPage(page_id) end
 	elseif (return_value) then
 		if (dialog) then =




From no-reply at zwischenwelt.org  Mon Sep 22 23:55:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 22 Sep 2008 21:55:14 -0000
Subject: [Iris-commit] [IRIS] r2474 - /trunk/lua/gui/gui.trade.lua
Message-ID: <20080922215517.36EA61524030@zwischenwelt.org>

Author: hagish
Date: Mon Sep 22 23:55:14 2008
New Revision: 2474

Log:
bugfix: wrong images in tamer shop, name still wrong

Modified:
    trunk/lua/gui/gui.trade.lua

Modified: trunk/lua/gui/gui.trade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.trade.lua (original)
+++ trunk/lua/gui/gui.trade.lua Mon Sep 22 23:55:14 2008
@@ -81,7 +81,33 @@
 	for k,good in pairs(shop.goods) do =

 		if (i >=3D pageoff and i < pageoff + perpage) then
 			local y =3D 60 * (i - pageoff)
-			local itemmodel	=3D MakeArtGumpPart(  dialog.rootwidget,					good.itema=
rtid,25, 75 + y, 0, 0, 0, good.itemhue)
+			=

+			local itemmodel
+			if good.itemartid < 1000 then
+				-- anim image
+				local sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1 =
=3D Anim2DAtlas_Load(good.itemartid,2,0,0)
+				if sMatName then
+					-- reduce size of too big images
+					if iWidth > 40 then
+						iHeight =3D 40/(iWidth/iHeight)
+						iWidth =3D 40
+					end
+					if iHeight > 40 then
+						iWidth =3D 40*(iWidth/iHeight)
+						iHeight =3D 40
+					end
+					=

+					itemmodel =3D guimaker.MakePlane( dialog.rootwidget, sMatName, 0, 0, =
iWidth,iHeight)
+					itemmodel.gfx:SetUV(u0,v0,u1,v1)
+					itemmodel.gfx:SetPos(25, 75 + y - 5)
+				end
+			end
+			=

+			if not itemmodel then
+				-- fallback to normal artimage case
+				itemmodel	=3D MakeArtGumpPart(  dialog.rootwidget, good.itemartid, 25,=
 75 + y, 0, 0, 0, good.itemhue)
+			end
+			=

 			local it_name 	=3D guimaker.MakeText(dialog.rootwidget, 80, 75 + y,		go=
od.name,
 												gFontDefs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gump=
"].name)
 			local it_price 	=3D guimaker.MakeText(dialog.rootwidget, 80, 75 + y + 1=
2,	good.price .. " Gold",



From no-reply at zwischenwelt.org  Sat Sep 27 21:26:05 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 27 Sep 2008 19:26:05 -0000
Subject: [Iris-commit] [IRIS] r2475 - in /trunk/lua: lib.test.lua main.lua
Message-ID: <20080927192606.1C0FA1524030@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Sep 27 21:26:03 2008
New Revision: 2475

Log:
textdump/fifo write speed test (for registry)

Modified:
    trunk/lua/lib.test.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.test.lua (original)
+++ trunk/lua/lib.test.lua Sat Sep 27 21:26:03 2008
@@ -45,6 +45,86 @@
 	]]--
 	-------------------------------------------------------------------------=
---------------------------------
 end
+
+function FileWriteSpeedTest ()
+	local function luadump	(name,data)
+		local t =3D type(data)
+		if t =3D=3D "table" then
+			local s =3D "["..name.."]".."=3D{"
+			for k,v in pairs(data) do
+				s =3D s..luadump(k,v)..","
+			end
+			return s.."}"
+		else
+			return "["..name.."]".."=3D"..tostring(data)..""
+		end
+	end
+ =

+	local entry =3D {id=3D1,x=3D100,y=3D-200,z=3D4}
+
+	local t =3D {}
+	for i=3D0,100 do
+		table.insert(t,entry)
+	end
+	=

+	local startt =3D Client_GetTicks()
+	for i=3D0,1000 do
+		local fp =3D io.open("test.txt","w")
+		if (fp) then
+			fp:write(luadump("data",t))
+			fp:close()
+		end
+	end
+	local endt =3D Client_GetTicks()
+	print("dt text save=3D",(endt-startt)/1000)
+	=

+	=

+	local f =3D CreateFIFO()
+	local startt =3D Client_GetTicks()
+	for i=3D0,1000 do
+		f:Clear()
+		=

+		for k,v in pairs(t) do
+			f:PushU(v.id)
+			f:PushU(v.x)
+			f:PushU(v.y)
+			f:PushU(v.z)
+		end
+		f:WriteToFile("test.bin")
+		=

+	end
+	f:Destroy()
+	local endt =3D Client_GetTicks()
+	print("dt bin save=3D",(endt-startt)/1000)
+	=

+	=

+	local f =3D CreateFIFO()
+	local startt =3D Client_GetTicks()
+	for i=3D0,1000 do
+		f:Clear()
+		=

+		FIFO_Open(f)
+		for k,v in pairs(t) do
+			FIFO_PushNetUint32(v.id)
+			FIFO_PushNetUint32(v.x)
+			FIFO_PushNetUint32(v.y)
+			FIFO_PushNetUint32(v.z)
+		end
+		FIFO_Close()
+		f:WriteToFile("test.bin")
+		=

+	end
+	f:Destroy()
+	local endt =3D Client_GetTicks()
+	print("dt bin2 save=3D",(endt-startt)/1000)
+
+	--~ dt text save=3D   1.355
+	--~ dt bin save=3D    0.552
+	--~ dt bin2 save=3D    0.086
+
+	os.exit(0) =

+end
+
 =

 function TestZLib()
 	local c =3D CreateFIFO()

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat Sep 27 21:26:03 2008
@@ -33,7 +33,6 @@
 dofile(libpath .. "lib.keybinds.lua")
 dofile(libpath .. "lib.xml.lua")
 dofile(libpath .. "lib.net.lua")
- =

 =

 -- renderer second
 gRendererList =3D {}
@@ -99,6 +98,7 @@
 =

 dofile(libpath .. "config_declarations.lua")
 =

+
 if (LugreActivateGlobalVarChecking) then LugreActivateGlobalVarChecking() =
end
 =

 --###############################



From no-reply at zwischenwelt.org  Sun Sep 28 03:04:24 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 28 Sep 2008 01:04:24 -0000
Subject: [Iris-commit] [IRIS] r2476 - in /trunk/lua: lib.2d.dynamic.lua
 lib.2d.renderer.lua lib.2d.spriteblock.lua net.walk.lua
Message-ID: <20080928010424.67F341C1802D@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Sep 28 03:04:23 2008
New Revision: 2476

Log:
2d mode : walk with right mouse button

Modified:
    trunk/lua/lib.2d.dynamic.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/net.walk.lua

Modified: trunk/lua/lib.2d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.dynamic.lua (original)
+++ trunk/lua/lib.2d.dynamic.lua Sun Sep 28 03:04:23 2008
@@ -30,7 +30,7 @@
 		local sortty =3D yloc-floor(yloc/8)*8
 		local sorttz =3D zloc
 		local fIndexRel =3D k / totalpartnum
-		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,sorttx,sortty,sorttz,fIndexRel)+1,item)
+		spriteblock:AddArtSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTy=
peID,sorttx,sortty,sorttz,fIndexRel)+1,item)
 	end
 	spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
 	local x,y,z =3D gCurrentRenderer:UOPosToLocal(itemxloc,itemyloc,itemzloc*=
kRenderer2D_ZScale)
@@ -59,7 +59,7 @@
 		local sorttz =3D zloc
 		local iTileTypeID	=3D item.artid
 		local iHue			=3D item.hue
-		spriteblock:AddSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTypeI=
D,sorttx,sortty,sorttz,fIndexRel)+1,item)
+		spriteblock:AddArtSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTy=
peID,sorttx,sortty,sorttz,fIndexRel)+1,item)
 		spriteblock:Build(Renderer2D.kSpriteBaseMaterial,true)
 		local x,y,z =3D gCurrentRenderer:UOPosToLocal(xloc,yloc,zloc*kRenderer2D=
_ZScale)
 		spriteblock:SetPosition(x,y,z)

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sun Sep 28 03:04:23 2008
@@ -67,18 +67,33 @@
 	Client_ClearLights()
 end
 =

+-- local uodir,pixeldist =3D Get2DMouseDirAndDist()
+function Get2DMouseDirAndDist ()
+	local mx,my =3D GetMousePos()
+	local vw,vh =3D GetViewportSize()
+	local cx,cy =3D 0.5*vw,0.5*vh
+	return DirWrap( floor(1.5+math.atan2(my-cy,mx-cx) * 8 / (2*kPi)) ),dist2(=
mx,my,cx,cy)
+end
+
 -- called from mainstep while ingame
 function Renderer2D:MainStep ()
 	self:CamStep()
 	self:MobileAnimStep()
-	-- TODO : self:CombatGuiStep() ?
-	-- TODO : self:MousePickStep() ?
+	=

+	local uodir,pixeldist =3D Get2DMouseDirAndDist()
+	=

 	local xloc,yloc,zloc =3D GetPlayerPos()
-	if (xloc) then self:SetCamPos(xloc,yloc,zloc) end
-	=

 	local bOfflineMode =3D xloc =3D=3D nil
-	=

 	if (not bOfflineMode) then
+		if (gKeyPressed[key_mouse_right]) then =

+			local bRunFlag =3D pixeldist > 200
+			bRunFlag =3D true
+			--~ print("Get2DMouseDirAndDist",uodir,pixeldist)
+			WalkStep_WalkInDir(uodir,bRunFlag,true)
+		end
+		=

+		=

+		--[[
 		local dx =3D 0
 		local dy =3D 0
 		if (gKeyPressed[key_left] ) then dx =3D dx + 1 end
@@ -90,7 +105,13 @@
 			local bRunFlag =3D true
 			WalkStep_WalkInDir(iDir,bRunFlag,true)
 		end
+		]]--
 	end
+	=

+	-- TODO : self:CombatGuiStep() ?
+	-- TODO : self:MousePickStep() ?
+	local xloc,yloc,zloc =3D GetPlayerPos()
+	if (xloc) then self:SetCamPos(xloc,yloc,zloc) end
 	=

 	-- keyboard move cam
 	local bKeyBoardMoveCam =3D bOfflineMode

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sun Sep 28 03:04:23 2008
@@ -36,7 +36,7 @@
 	return bitmask:TestBit(floor(px),floor(py))
 end
 =

--- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,data=3D?} (see AddSprite)
+-- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,data=3D?} (see AddArtSprite)
 function cUOSpriteBlock:RayPick (rx,ry,rz, rvx,rvy,rvz)
 	local bx,by =3D self.bx,self.by
 	if (not bx) then return end
@@ -70,7 +70,9 @@
 					px,py =3D pw * fc,ph * fb
 				end
 			end
-			if (dist and ((not founddist) or dist < founddist) and ArtCheckBitMask(=
sprite.artid+0x4000,px,py)) then
+			if (dist and ((not founddist) or dist < founddist) and (
+				(sprite.artid and ArtCheckBitMask(sprite.artid+0x4000,px,py)) =

+				)) then
 				founddist =3D dist
 				foundsprite =3D sprite
 			end
@@ -99,12 +101,12 @@
 	local tx =3D static.tx
 	local ty =3D static.ty
 	local zloc =3D static.zloc
-	self:AddSprite(tx,ty,zloc,artid,static.hue,CalcSortBonus(artid,tx,ty,zloc=
,static.fBlockIndexRel),static)
+	self:AddArtSprite(tx,ty,zloc,artid,static.hue,CalcSortBonus(artid,tx,ty,z=
loc,static.fBlockIndexRel),static)
 end
 =

 =

 -- load textures to atlas, artid-hue
-function cUOSpriteBlock:AddSprite (tx,ty,zloc,artid,hue,sortbonus,data)
+function cUOSpriteBlock:AddArtSprite (tx,ty,zloc,artid,hue,sortbonus,data)
 	sortbonus =3D sortbonus or 0
 	hue =3D hue or 0
 	local arr =3D self.pTileTypeAtlasMats[artid]
@@ -119,7 +121,7 @@
 	=

 	-- add to matname group
 	if (not pAtlasPiece) then
-		print("warning, cUOSpriteBlock:AddSprite failed",artid,hue)
+		print("warning, cUOSpriteBlock:AddArtSprite failed",artid,hue)
 		return
 	end
 	=

@@ -139,7 +141,6 @@
 	local xa =3D pw * kRenderer2D_XPixelScale
 	local za =3D ph * kRenderer2D_YPixelScale			=

 	=

-	--~ local px,py =3D TileOffsetToPixelOffset(tx,ty)
 	local sprite =3D {
 		x =3D x,
 		y =3D y,
@@ -152,8 +153,6 @@
 		v1 =3D pAtlasPiece.v1,
 		pw =3D pw, -- in pixels
 		ph =3D ph, -- in pixels
-		--~ px =3D floor(px - pw*0.5 		  ),
-		--~ py =3D floor(py - ph	 - 4*zloc ), -- 1 z-unit =3D 4 pixels upwards i=
n the original client
 		hue =3D hue,
 		artid =3D artid, -- for mousepicking
 		data =3D data
@@ -164,6 +163,7 @@
 =

 -- bUseRootGfx : default false, can be set to true if there is only one sp=
rite
 function cUOSpriteBlock:Build 	(basemat,bUseRootGfx)
+	if (self.pGroupGfx) then for k,v in pairs(self.pGroupGfx) do v:Destroy() =
end self.pGroupGfx =3D {} end
 	if (not self.rootgfx) then self.rootgfx =3D CreateRootGfx3D() end
 	-- for 3d statics
 	-- statics : create gfx
@@ -211,3 +211,71 @@
 		gfx:RenderableEnd()
 	end
 end
+
+--[[
+	old 2D geometry..  problem : z range [-1;1], terrain z conversion difficu=
lt
+	=

+	function cUOSpriteBlock:Init ()...
+		self.rendergroup2d =3D CreateRenderGroup2D(GetGUILayer_Dialogs():CastToR=
enderGroup2D()) -- TODO : needs extra layer
+		self.rendergroup2d:SetVisible(false)
+		self.bSetVisibleOnCamStep =3D true
+	end
+
+	function cUOSpriteBlock:CamStep(t,xloc,yloc,zloc)
+		if (not self.bx) then return end
+		local dx =3D self.bx * 8 - xloc
+		local dy =3D self.by * 8 - yloc
+		local px,py =3D TileOffsetToPixelOffset(dx,dy)
+		self.rendergroup2d:SetPos(
+			floor(px+gViewportW*0.5   ),
+			floor(py+gViewportH*0.5+66),
+			0)
+		if (self.bSetVisibleOnCamStep) then
+			self.bSetVisibleOnCamStep =3D false
+			self.rendergroup2d:SetVisible(true)
+		end
+	end
+
+		if (z < -1 or z > 1) then print("2d-z out of bounds",z) end
+	--~ local px,py =3D TileOffsetToPixelOffset(tx,ty)
+		--~ px =3D floor(px - pw*0.5 		  ),
+		--~ py =3D floor(py - ph	 - 4*zloc ), -- 1 z-unit =3D 4 pixels upwards i=
n the original client
+
+	for atlas,group in pairs(self.pSpritesByAtlas) do
+		if (#group > 0) then =

+			local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
+			-- TODO : sort by z for blendout upper floors ?
+			local spritecount =3D #group
+			local gfx =3D CreateRobRenderable2D(self.rendergroup2d)
+			table.insert(self.pGroupGfx,gfx)
+			gfx:SetMaterial(matname)
+			=

+			-- generate geometry
+			local vc =3D 4*spritecount
+			local ic =3D 6*spritecount
+			local bDynamic,bKeepOldIndices =3D false,false
+			RobRenderable2D_Open(gfx,vc,ic,bDynamic,bKeepOldIndices,OT_TRIANGLE_LIS=
T)
+			vc =3D 0
+			for k,sprite in pairs(group) do
+				local x =3D sprite.x
+				local y =3D sprite.y
+				local w =3D sprite.w
+				local h =3D sprite.h
+				local z_bottom	=3D sprite.z_bottom
+				local z_top		=3D sprite.z_top
+				local u0 		=3D sprite.u0
+				local v0 		=3D sprite.v0
+				local u1 		=3D sprite.u1
+				local v1 		=3D sprite.v1
+				RobRenderable2D_Vertex(x  ,y  ,z_top, 	u0,v0)
+				RobRenderable2D_Vertex(x+w,y  ,z_top, 	u1,v0)
+				RobRenderable2D_Vertex(x  ,y+h,z_bottom,u0,v1)
+				RobRenderable2D_Vertex(x+w,y+h,z_bottom,u1,v1)
+				RobRenderable2D_Index3(vc+0,vc+2,vc+1)
+				RobRenderable2D_Index3(vc+1,vc+2,vc+3)
+				vc =3D vc + 4
+			end
+			RobRenderable2D_Close()
+		end
+	end
+]]--

Modified: trunk/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.walk.lua (original)
+++ trunk/lua/net.walk.lua Sun Sep 28 03:04:23 2008
@@ -128,6 +128,7 @@
 -- clientside collision check, returns true if passable
 function WalkStep_CanWalkInDir	(iDir) =

 	iDir =3D DirWrap(iDir)
+	if (iDir ~=3D gPlayerDir) then return true end
 	return GetNearestGroundLevel(gPlayerXLoc,gPlayerYLoc,gPlayerZLoc,iDir) ~=
=3D nil
 end
 =




From no-reply at zwischenwelt.org  Mon Sep 29 01:23:01 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 28 Sep 2008 23:23:01 -0000
Subject: [Iris-commit] [IRIS] r2477 - in /trunk/lua: lib.2d.spriteblock.lua
 lib.artatlas.lua lib.iris_atlasgroup.lua
Message-ID: <20080929000008.8CE311C186AA@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep 29 01:23:01 2008
New Revision: 2477

Log:
artatlas code replaced by generic atlasgroup code

Modified:
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.artatlas.lua
    trunk/lua/lib.iris_atlasgroup.lua

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Mon Sep 29 01:23:01 2008
@@ -128,8 +128,8 @@
 	local atlas =3D pAtlasPiece.atlas
 	local group =3D self.pSpritesByAtlas[atlas]
 	if (not group) then group =3D {} self.pSpritesByAtlas[atlas] =3D group end
-	local pw =3D pAtlasPiece.w
-	local ph =3D pAtlasPiece.h
+	local pw =3D pAtlasPiece.origw
+	local ph =3D pAtlasPiece.origh
 	=

 	=

 	local x,y,z =3D -tx,ty,zloc * kRenderer2D_ZScale

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Mon Sep 29 01:23:01 2008
@@ -1,12 +1,6 @@
 -- loads artid graphics to one or multiple texture-atlases
--- can also reorganizes atlases as needed with locking/unlocking system
-
-gArtAtlasSize =3D 512*2
-gLastArtAtlas =3D nil
-gArtAtlasCache =3D {}
-kArtAtlasDebugDumpAtlas =3D false
-gArtAtlasList =3D {}
-
+-- TODO : can also reorganizes atlases as needed with locking/unlocking sy=
stem ?
+-- ... now just a wrapper for a call to the generic atlasgroup implementat=
ion
 =

 -- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,u0,v0,u1,v1 =3D ArtAt=
lasLoadAndLockDirect(iTileTypeID,iHue,pLockKeeper,basematerial)
 -- immediately load material, useful for dynamics
@@ -14,120 +8,17 @@
 	local o =3D ArtAtlasLoadAndLock(iTileTypeID,iHue,pLockKeeper)
 	if (not o) then return end
 	local sMatName =3D ArtAtlasLoadMaterial(o.atlas,basematerial)
-	local iCenterX,iCenterY =3D o.w/2,o.h-22
-	return sMatName,o.w,o.h,iCenterX,iCenterY,o.u0,o.v0,o.u1,o.v1
+	local iCenterX,iCenterY =3D o.origw/2,o.origh-22
+	return sMatName,o.origw,o.origh,iCenterX,iCenterY,o.u0,o.v0,o.u1,o.v1
 end
 =

 -- material is not immediately loaded, useful for statics
 -- returns object with fields : atlas,u0,v0,u1,v1,w,h
-function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)
-	local n =3D iTileTypeID.."_"..iHue
-	local o =3D gArtAtlasCache[n] =

-	if (o ~=3D nil) then return o end
-	gArtAtlasCache[n] =3D false
-	=

-	-- load image
-	local pImage =3D CreateImage()
-	if (not gArtMapLoader:ExportToImage(pImage,iTileTypeID,gHueLoader,iHue)) =
then print("ArtAtlasLoadAndLock:ExportToImage fail",iTileTypeID,iHue) pImag=
e:Destroy() return end
-	if (not gArtMapLoader:GetSize(pImage,iTileTypeID,gHueLoader,iHue)) then p=
rint("ArtAtlasLoadAndLock:GetSize fail",iTileTypeID,iHue) pImage:Destroy() =
return end
-	=

-	-- load/create atlas
-	local w =3D gArtAtlasSize
-	if (gLastArtAtlas =3D=3D nil) then
-		print("ArtAtlasLoadAndLock : create first atlas") =

-		gLastArtAtlas =3D CreateTexAtlas(w,w) =

-		table.insert(gArtAtlasList, gLastArtAtlas)
-	end -- only first time
-	=

-	-- add to exisiting texatlas or start a new one if it doesn't fit
-	local iBorderPixels=3D1
-	local bWrap=3Dfalse
-	=

-	local usedAtlas =3D nil
-	=

-	local bSuccess,l,r,t,b
-	=

-	-- search fitting atlas
-	for k,v in pairs(gArtAtlasList) do
-		bSuccess,l,r,t,b =3D v:AddImage(pImage,iBorderPixels,bWrap)
-		if bSuccess then =

-			usedAtlas =3D v
-			-- stop searching
-			break
-		end
-	end
-	=

-	if (not bSuccess) then =

-		-- not more space in the old atlas, start a new one
-		print("ArtAtlasLoadAndLock : create new atlas") =

-		gLastArtAtlas =3D CreateTexAtlas(w,w)
-		table.insert(gArtAtlasList, gLastArtAtlas)
-		bSuccess,l,r,t,b =3D gLastArtAtlas:AddImage(pImage,iBorderPixels,bWrap)
-		usedAtlas =3D gLastArtAtlas
-		if (not bSuccess) then print("warning : ArtAtlasLoadAndLock: art too big=
 for texatlas") pImage:Destroy() return end
-	end
-	=

-	local w =3D pImage:GetWidth()
-	local h =3D pImage:GetHeight()
-	pImage:Destroy()
-	=

-	-- create or update texatlas
-	usedAtlas.bIsDirty =3D true -- only rebuild on demand, not for every add
-	=

-	-- return info about the allocated area for this glyph
-	o =3D {}
-	gArtAtlasCache[n] =3D o
-	o.atlas =3D usedAtlas
-	o.u0 =3D l
-	o.v0 =3D t
-	o.u1 =3D r
-	o.v1 =3D b
-	o.w =3D w
-	o.h =3D h
-	=

-	return o
-end
+function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)  return PreLoa=
dArt(iTileTypeID,iHue) end
 =

-function ArtAtlasReloadAll ()
-	for k,atlas in pairs(gArtAtlasList) do atlas.bIsDirty =3D true ArtAtlasLo=
adMaterial(atlas) end
-end
-
--- param : ArtAtlasLoadAndLock(...).atlas
+-- atlas =3D ArtAtlasLoadAndLock(...).atlas
 -- creates/updates texture/material as needed
--- returns matname
-function ArtAtlasLoadMaterial (atlas, basematerial) =

-	if (atlas.bIsDirty) then
-		--~ local startt =3D Client_GetTicks()
-		atlas.bIsDirty =3D false
-		if (atlas.texname) then =

-			atlas:LoadToTexture(atlas.texname) -- update existing texture
-		else
-			atlas.texname =3D atlas:MakeTexture() -- generate new texture
-		end
-		-- dump atlas image
-		if (kArtAtlasDebugDumpAtlas) then
-			local img2 =3D CreateImage()
-			gLastArtAtlas:MakeImage(img2)
-			gArtAtlasDebugDumpAtlasCount =3D (gArtAtlasDebugDumpAtlasCount or 0) + 1
-			img2:SaveAsFile("artatlas_"..gArtAtlasDebugDumpAtlasCount..".png")
-			img2:Destroy()
-		end
-		--~ local startt2 =3D Client_GetTicks()
-		--~ print("ArtAtlasLoadMaterial t:",startt2-startt)
-	end
-	if (not basematerial) then return end
-	atlas.mats =3D atlas.mats or {}
-	local matname =3D atlas.mats[basematerial]
-	if (not matname) then =

-		matname =3D CloneMaterial(basematerial)
-		if (not matname) then print("ArtAtlasLoadMaterial: failed to clone basem=
at",basematerial) return end
-		SetTexture(matname,atlas.texname)
-		--~ SetSceneBlend(matname,0,0,0)
-		--~ SetDepthWriteEnabled(matname,0,0,1)
-		atlas.mats[basematerial] =3D matname
-	end
-	return matname
-end
+function ArtAtlasLoadMaterial (atlas,basemat) return gAtlasGroup_Art:LoadA=
tlasMat(atlas,basemat) end
 =

 function ArtAtlasUnLock (pLockKeeper) end
 =


Modified: trunk/lua/lib.iris_atlasgroup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.iris_atlasgroup.lua (original)
+++ trunk/lua/lib.iris_atlasgroup.lua Mon Sep 29 01:23:01 2008
@@ -8,8 +8,8 @@
 gAtlasGroup_Gump	=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
 gAtlasGroup_Art		=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
 =

-function PreLoadGump		(gump_id,hue)	if (gump_id) then gAtlasGroup_Gump:Pre=
Load(gump_id,hue) end end
-function PreLoadArt			(art_id,hue)	if (art_id) then gAtlasGroup_Art:PreLoa=
d(art_id,hue) end end
+function PreLoadGump		(gump_id,hue)	if (gump_id) then return gAtlasGroup_G=
ump:PreLoad(gump_id,hue) end end
+function PreLoadArt			( art_id,hue)	if ( art_id) then return gAtlasGroup_A=
rt:PreLoad(art_id,hue) end end
 =

 function GetGumpSize	(gump_id,hue)	return gAtlasGroup_Gump:GetSize(gump_id=
,hue) end -- loads it and returns the size
 function GetArtSize		(art_id,hue) 	return gAtlasGroup_Art:GetSize(art_id,h=
ue) end



From no-reply at zwischenwelt.org  Mon Sep 29 03:12:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 29 Sep 2008 01:12:31 -0000
Subject: [Iris-commit] [IRIS] r2478 - in /trunk/lua: lib.2d.mobile.lua
 lib.2d.spriteblock.lua lib.artatlas.lua lib.iris_atlasgroup.lua
 lib.uoanim.lua
Message-ID: <20080929020008.EAC261524030@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Sep 29 03:12:31 2008
New Revision: 2478

Log:
generalised spriteblock  and used it for drawing 2d mobiles

Modified:
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.artatlas.lua
    trunk/lua/lib.iris_atlasgroup.lua
    trunk/lua/lib.uoanim.lua

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Mon Sep 29 03:12:31 2008
@@ -1,75 +1,50 @@
 -- mobiles (animals,players,monsters,npcs..)
+-- TODO : bMirrorX !
 =

 -- main updater, create, position ...
 function Renderer2D:UpdateMobile				(mobile) =

 	local gfx =3D mobile.gfx2d
-	local iModelID,iAnimID =3D mobile.artid,0 -- 401,0
-	local iHue =3D BitwiseAND(mobile.hue,0x7fff) -- 0x03F4 : human skin hue (=
0x83F4=3D33780, but 0x8* is partial hue and turned out all gray here)
 	if (not gfx) then
-		--~ print("Renderer2D:UpdateMobile artid,iHue",mobile.artid,sprintf("%04=
x",iHue))
-	=

-		gfx =3D CreateRootGfx3D()
-		mobile.gfx2d =3D gfx
-		gfx:SetSimpleRenderable()
-		=

-		local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

-		gfx.animinfo =3D GetAnimDataInfo(iModelID) -- o.miFrames,o.miUnknown,o.m=
iCount,o.miFrameInterval,o.miFrameStart
-		gfx.iAnimStartTime =3D Client_GetTicks()
-		gfx.iFrame =3D 0
-		=

-		self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
+		local spriteblock =3D cUOSpriteBlock:New()
+		mobile.gfx2d =3D spriteblock
+		local xloc,yloc,zloc =3D mobile.xloc,mobile.yloc,mobile.zloc
+		local tx,ty,tz,fIndexRel =3D 0,0,0,0
+		local sorttx =3D 0 -- xloc-floor(xloc/8)*8
+		local sortty =3D 0 -- yloc-floor(yloc/8)*8
+		local sorttz =3D zloc
+		local iTileTypeID	=3D mobile.artid
+		local iHue			=3D BitwiseAND(mobile.hue,0x7fff) -- 0x03F4 : human skin hu=
e (0x83F4=3D33780, but 0x8* is partial hue and turned out all gray here)
+		local iModelID,iAnimID,iFrame =3D mobile.artid,0,0 -- 401,0
+		local pAtlasPiece	=3D Anim2DAtlas_LoadAtlasPiece(iModelID,iAnimID,iFrame=
,iHue)
+		if (pAtlasPiece) then
+			spriteblock:AddSpriteEx(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTy=
peID,sorttx,sortty,sorttz,fIndexRel)+1,item,pAtlasPiece)
+		else
+			print("warning, Renderer2D:UpdateMobile load uoanim failed",iModelID,iA=
nimID,iFrame,iHue)
+		end
+		spriteblock:Build(Renderer2D.kSpriteBaseMaterial,true)
 	end
 	=

-	local x,y,z =3D self:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zloc)
-	gfx:SetPosition(x,y,z*0.1)
-	self:MobileGfxUpdateGeometry(gfx,iModelID,iAnimID,gfx.iFrame,iHue)
+	local x,y,z =3D self:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zloc*kRe=
nderer2D_ZScale)
+	mobile.gfx2d:SetPosition(x,y,z)
 end =

 =

 function Renderer2D:DestroyMobileGfx			(mobile) if (mobile.gfx2d) then mob=
ile.gfx2d:Destroy() mobile.gfx2d =3D nil end end
 =

-function Renderer2D:CreateMobileGfx				( mobile ) self:UpdateMobile(mobile=
) end	=

+function Renderer2D:CreateMobileGfx				(mobile) self:UpdateMobile(mobile) =
end	=

 =

 function Renderer2D:UpdateMobileModel			() end -- check equipment change e=
tc ?? called every time when UpdateMobile() is called ..
 =

 function Renderer2D:MobileAnimStep				() end -- from mainstep
 function Renderer2D:MobileStartServerSideAnim	(animdata) end
 =

-
--- TODO : bMirrorX !
-function Renderer2D:MobileGfxUpdateGeometry (gfx,iModelID,iAnimID,iFrame,i=
Hue)
-	local sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1 =3D A=
nim2DAtlas_Load(iModelID,iAnimID,iFrame,iHue)
-	if (not sMatName) then return end
-	--~ print("MobileGfxUpdateGeometry",sMatName,iWidth,iHeight,iCenterX,iCen=
terY,iFrames,u0,v0,u1,v1)
-	--~ sMatName =3D "BaseWhiteNoLighting"
-	--~ print("MobileGfxUpdateGeometry",iAnimID,iFrame,iWidth,iHeight,iCenter=
X,iCenterY,iFrames)
-	-- MobileGfxUpdateGeometry : cen=3D  12      -11
-	local zoom =3D 1
-	local pix2coord =3D zoom * 1 / 44
-	local x =3D -1 + ( iCenterY +iCenterX)*pix2coord -- iCenterX<0=3Dright iC=
enterY<0=3Ddown
-	local y =3D  1 + (-iCenterY +iCenterX)*pix2coord
-	local z =3D  0  -- x-1,y+1 : sprites are too high normally, this moves th=
em down =

-	local w =3D k2D_ScaleW05 * iWidth * zoom
-	local h =3D k2D_ScaleH   * iHeight * zoom
-	gfx:SetMaterial(sMatName)
-	gfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
-	gfx:RenderableVertex(x-w,y-w,z  , u1,v1)
-	gfx:RenderableVertex(x+w,y+w,z  , u0,v1)
-	gfx:RenderableVertex(x-w,y-w,z+h, u1,v0)
-	gfx:RenderableVertex(x+w,y+w,z+h, u0,v0)
-	gfx:RenderableIndex3(0,2,1)
-	gfx:RenderableIndex3(1,2,3)
-	gfx:RenderableEnd()
-	gfx.iMaxFrames =3D iFrames
-end
-
 function Renderer2D:MobileTestStep()
 	if true then return end
 	=

-	=

-		--~ local o =3D gfx.animinfo =

-		--~ print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,=
o.miFrameStart)
-		--animinfo        table: 0x93e5d90        -1      -1      -1      -1
-		--~ for k,v in pairs(o.miFrames) do print("frame",k,v) end -- were all -=
1 =

+	--~ local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

+	--~ local o =3D gfx.animinfo   =3D GetAnimDataInfo(iModelID) -- o.miFrame=
s,o.miUnknown,o.miCount,o.miFrameInterval,o.miFrameStart
+	--~ print("animinfo",o.miFrames,o.miUnknown,o.miCount,o.miFrameInterval,o=
.miFrameStart)
+	--animinfo        table: 0x93e5d90        -1      -1      -1      -1
+	--~ for k,v in pairs(o.miFrames) do print("frame",k,v) end -- were all -1 =

 		=

 	--~ local t =3D Client_GetTicks() - gfx.iAnimStartTime
 	--~ local framedt =3D 200

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Mon Sep 29 03:12:31 2008
@@ -1,7 +1,7 @@
 -- TODO : mousepicking , staticitem =3D {xloc,yloc,zloc,z_sort,typ_handle(=
for draw,pick)}  staticitems grouped by texatlas
 -- TODO : blendout-upper-floors : cFastBatch::cSubBatch::SetDisplayRange()=
 : raw access to index
 -- TODO : generic 2d spritesystem : render, mousepick, zsort?
--- TODO : unify : terrainload-water,static-types : MapGetBlockStatics     =
  ArtAtlasLoadAndLock : atlasgroup
+-- TODO : unify : terrainload-water,static-types : MapGetBlockStatics
 =

 -- ***** ***** ***** ***** ***** cUOSpriteBlock
 =

@@ -87,9 +87,9 @@
 	--~ prio3 =3D (hue>0) and 1007 or 7
 	--~ prio4 =3D fIndexRel						in [0,1]
 	--~ prio5 =3D tx								in [0,7]
-	local pTileType =3D GetStaticTileType(artid)
-	return		0.05*(	1.000 * (zloc + pTileType.iSortBonus2D) + -- zloc + =

-						1.000 * (pTileType.miHeight/100) +
+	local pTileType =3D artid and GetStaticTileType(artid)
+	return		0.05*(	1.000 * (zloc + (pTileType and pTileType.iSortBonus2D or 0=
)) + -- zloc + =

+						1.000 * ((pTileType and pTileType.miHeight or 0)/100) +
 						0.005 * (fIndexRel) +
 						0.005 * (tx / 8) )
 end
@@ -124,13 +124,16 @@
 		print("warning, cUOSpriteBlock:AddArtSprite failed",artid,hue)
 		return
 	end
-	=

+	self:AddSpriteEx(tx,ty,zloc,artid,hue,sortbonus,data,pAtlasPiece)
+end
+	=

+-- pAtlasPiece=3D{atlas=3D?,origw=3D?,origh=3D?,u0=3D?,v0=3D?,u1=3D?,v1=3D=
?}
+function cUOSpriteBlock:AddSpriteEx (tx,ty,zloc,artid,hue,sortbonus,data,p=
AtlasPiece)
 	local atlas =3D pAtlasPiece.atlas
 	local group =3D self.pSpritesByAtlas[atlas]
 	if (not group) then group =3D {} self.pSpritesByAtlas[atlas] =3D group end
 	local pw =3D pAtlasPiece.origw
 	local ph =3D pAtlasPiece.origh
-	=

 	=

 	local x,y,z =3D -tx,ty,zloc * kRenderer2D_ZScale
 	local sortadd =3D sortbonus * kRenderer2D_ZScale + 1
@@ -140,6 +143,12 @@
 	z =3D z + kSq2 * sortadd
 	local xa =3D pw * kRenderer2D_XPixelScale
 	local za =3D ph * kRenderer2D_YPixelScale			=

+	=

+	-- TODO : mobs ?
+	-- local iCenterX =3D pAtlasPiece.iCenterX or half?
+	--~ local pix2coord =3D zoom * 1 / 44
+	--~ local x =3D -1 + ( iCenterY +iCenterX)*pix2coord -- iCenterX<0=3Drigh=
t iCenterY<0=3Ddown
+	--~ local y =3D  1 + (-iCenterY +iCenterX)*pix2coord
 	=

 	local sprite =3D {
 		x =3D x,
@@ -160,6 +169,10 @@
 	table.insert(group,sprite)
 end
 =

+function cUOSpriteBlock:LoadAtlasMat	(atlas,basemat)
+	-- works for art and uoanim (see atlasgroup system)
+	if (atlas.atlasgroup) then return atlas.atlasgroup:LoadAtlasMat(atlas,bas=
emat) end
+end
 =

 -- bUseRootGfx : default false, can be set to true if there is only one sp=
rite
 function cUOSpriteBlock:Build 	(basemat,bUseRootGfx)
@@ -171,44 +184,48 @@
 	-- -so 552,2088
 	-- -so 632,1488
 	for atlas,group in pairs(self.pSpritesByAtlas) do
-		local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
-		-- TODO : sort by z for blendout upper floors
-		local spritecount =3D #group
-		local gfx
-		if (bUseRootGfx) then
-			gfx =3D self.rootgfx
-			bUseRootGfx =3D false
+		local matname =3D self:LoadAtlasMat(atlas,basemat)
+		if (not matname) then
+			print("warning : cUOSpriteBlock:Build : atlas mat load failed","basemat=
")
 		else
-			gfx =3D self.rootgfx:CreateChild()
-			table.insert(self.pGroupGfx,gfx)
-		end
-		gfx:SetSimpleRenderable()
-		gfx:SetMaterial(matname)
-		=

-		-- generate geometry
-		local vc =3D 4*spritecount
-		local ic =3D 6*spritecount
-		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-		vc =3D 0
-		for k,sprite in pairs(group) do
-			local x 		=3D sprite.x
-			local y 		=3D sprite.y
-			local z 		=3D sprite.z
-			local xa 		=3D sprite.xa
-			local za 		=3D sprite.za
-			local u0 		=3D sprite.u0
-			local v0 		=3D sprite.v0
-			local u1 		=3D sprite.u1
-			local v1 		=3D sprite.v1
-			gfx:RenderableVertex(x-xa,y-xa,z  	, u1,v1)
-			gfx:RenderableVertex(x+xa,y+xa,z  	, u0,v1)
-			gfx:RenderableVertex(x-xa,y-xa,z+za	, u1,v0)
-			gfx:RenderableVertex(x+xa,y+xa,z+za	, u0,v0)
-			gfx:RenderableIndex3(vc+0,vc+2,vc+1)
-			gfx:RenderableIndex3(vc+1,vc+2,vc+3)
-			vc =3D vc + 4
-		end
-		gfx:RenderableEnd()
+			-- TODO : sort by z for blendout upper floors
+			local spritecount =3D #group
+			local gfx
+			if (bUseRootGfx) then
+				gfx =3D self.rootgfx
+				bUseRootGfx =3D false
+			else
+				gfx =3D self.rootgfx:CreateChild()
+				table.insert(self.pGroupGfx,gfx)
+			end
+			gfx:SetSimpleRenderable()
+			gfx:SetMaterial(matname)
+			=

+			-- generate geometry
+			local vc =3D 4*spritecount
+			local ic =3D 6*spritecount
+			gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
+			vc =3D 0
+			for k,sprite in pairs(group) do
+				local x 		=3D sprite.x
+				local y 		=3D sprite.y
+				local z 		=3D sprite.z
+				local xa 		=3D sprite.xa
+				local za 		=3D sprite.za
+				local u0 		=3D sprite.u0
+				local v0 		=3D sprite.v0
+				local u1 		=3D sprite.u1
+				local v1 		=3D sprite.v1
+				gfx:RenderableVertex(x-xa,y-xa,z  	, u1,v1)
+				gfx:RenderableVertex(x+xa,y+xa,z  	, u0,v1)
+				gfx:RenderableVertex(x-xa,y-xa,z+za	, u1,v0)
+				gfx:RenderableVertex(x+xa,y+xa,z+za	, u0,v0)
+				gfx:RenderableIndex3(vc+0,vc+2,vc+1)
+				gfx:RenderableIndex3(vc+1,vc+2,vc+3)
+				vc =3D vc + 4
+			end
+			gfx:RenderableEnd()
+		end
 	end
 end
 =

@@ -243,7 +260,7 @@
 =

 	for atlas,group in pairs(self.pSpritesByAtlas) do
 		if (#group > 0) then =

-			local matname =3D ArtAtlasLoadMaterial(atlas,basemat)
+			local matname =3D self:LoadAtlasMat(atlas,basemat)
 			-- TODO : sort by z for blendout upper floors ?
 			local spritecount =3D #group
 			local gfx =3D CreateRobRenderable2D(self.rendergroup2d)

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Mon Sep 29 03:12:31 2008
@@ -7,18 +7,14 @@
 function ArtAtlasLoadAndLockDirect (iTileTypeID,iHue,pLockKeeper,basemater=
ial)
 	local o =3D ArtAtlasLoadAndLock(iTileTypeID,iHue,pLockKeeper)
 	if (not o) then return end
-	local sMatName =3D ArtAtlasLoadMaterial(o.atlas,basematerial)
+	local sMatName =3D gAtlasGroup_Art:LoadAtlasMat(o.atlas,basematerial)
 	local iCenterX,iCenterY =3D o.origw/2,o.origh-22
 	return sMatName,o.origw,o.origh,iCenterX,iCenterY,o.u0,o.v0,o.u1,o.v1
 end
 =

 -- material is not immediately loaded, useful for statics
--- returns object with fields : atlas,u0,v0,u1,v1,w,h
+-- returns pAtlasPiece =3D {atlas=3D?,u0=3D?,v0=3D?,u1=3D?,v1=3D?,origw=3D=
?,origh=3D?}
 function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)  return PreLoa=
dArt(iTileTypeID,iHue) end
-
--- atlas =3D ArtAtlasLoadAndLock(...).atlas
--- creates/updates texture/material as needed
-function ArtAtlasLoadMaterial (atlas,basemat) return gAtlasGroup_Art:LoadA=
tlasMat(atlas,basemat) end
 =

 function ArtAtlasUnLock (pLockKeeper) end
 =


Modified: trunk/lua/lib.iris_atlasgroup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.iris_atlasgroup.lua (original)
+++ trunk/lua/lib.iris_atlasgroup.lua Mon Sep 29 03:12:31 2008
@@ -8,8 +8,8 @@
 gAtlasGroup_Gump	=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
 gAtlasGroup_Art		=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
 =

-function PreLoadGump		(gump_id,hue)	if (gump_id) then return gAtlasGroup_G=
ump:PreLoad(gump_id,hue) end end
-function PreLoadArt			( art_id,hue)	if ( art_id) then return gAtlasGroup_A=
rt:PreLoad(art_id,hue) end end
+function PreLoadGump		(gump_id,hue)	if (gump_id) then return gAtlasGroup_G=
ump:LoadToAtlas(gump_id,hue) end end
+function PreLoadArt			( art_id,hue)	if ( art_id) then return gAtlasGroup_A=
rt:LoadToAtlas(art_id,hue) end end
 =

 function GetGumpSize	(gump_id,hue)	return gAtlasGroup_Gump:GetSize(gump_id=
,hue) end -- loads it and returns the size
 function GetArtSize		(art_id,hue) 	return gAtlasGroup_Art:GetSize(art_id,h=
ue) end

Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Mon Sep 29 03:12:31 2008
@@ -11,45 +11,59 @@
 -- todo : humans : one atlas with complete equipment, will need alpha-blit=
 for images ?
 -- todo : mobile : load anim only on demand, e.g. only load walk anim when=
 the mobile actually walks
 -- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1
-function Anim2DAtlas_Load (iModelID,iAnimID,iFrame,iHue)
-	--~ iAnimID =3D 0 -- kAnimID_Human_Idle
-	iFrame =3D 0
-	--~ iHue =3D 0
+function Anim2DAtlas_Load (iModelID,iAnimID,iFrame,iHue) =

+	local o =3D Anim2DAtlas_LoadAtlasPiece(iModelID,iAnimID,iFrame,iHue)
+	if (o) then =

+		local basematerial =3D "renderer2dbillboard"
+		local matname =3D o.atlas.atlasgroup:LoadAtlasMat(o.atlas,basematerial)
+		return matname,o.origw,o.origh,o.iCenterX,o.iCenterY,o.iFrames,o.u0,o.v0=
,o.u1,o.v1 =

+	end =

+end
+
+
+-- returns atlaspiece
+function Anim2DAtlas_LoadAtlasPiece (iModelID,iAnimID,iFrame,iHue)
 	local n =3D iModelID..","..iAnimID..","..iFrame..","..iHue
 	local o =3D gAnimAtlasCache[n]
-	if (o) then return unpack(o) end
+	if (o ~=3D nil) then return o end
+	=

+	-- load frame image
 	local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

-	local pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFrame=
ToImage(iRealID,iFrame,iHue)
-	--~ print("Anim2DAtlas_Load",iRealID,iFrame,iHue,"#",pImage,iWidth,iHeigh=
t,iCenterX,iCenterY,iFrames)
-	if (not pImage) then print("Anim2DAtlas_Load : dead anim ",iModelID,iAnim=
ID,iFrame,iHue) end
-	if (not pImage) then o =3D {} gAnimAtlasCache[n] =3D o return unpack(o) e=
nd
+	local img,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D ExportAnimFrameToI=
mage(iRealID,iFrame,iHue)
+	if (not img) then print("Anim2DAtlas_Load : dead anim ",iModelID,iAnimID,=
iFrame,iHue) end
+	if (not img) then gAnimAtlasCache[n] =3D false return end
 		=

-	=

+	-- add to atlas
 	local w =3D 64
-	while (w < iWidth) do w =3D w * 2 end
-	while (w < iHeight) do w =3D w * 2 end
-	local atlas =3D CreateTexAtlas(w,w)
-	local iBorderPixels =3D 0
+	local iBorderPixels =3D 4
 	local bWrap =3D false
-	local bSuccess,l,r,t,b =3D atlas:AddImage(pImage,iBorderPixels,bWrap)
-	pImage:Destroy()
-
-	--~ if (2 =3D=3D 1) then
-		--~ local img2 =3D CreateImage()
-		--~ atlas:MakeImage(img2)
-		--~ img2:SaveAsFile("../animtest.png")
-		--~ img2:Destroy()
-	--~ end
-	=

-	local tex =3D atlas:MakeTexture() -- generate new texture
-	local sMatName =3D CloneMaterial("renderer2dbillboard")
-	SetTexture(sMatName,tex)
-	=

-	local u0,v0,u1,v1 =3D l,t,r,b
-	o =3D {sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v0,u1,v1}
-	--~ print("anim2d",sMatName,iWidth,iHeight,iCenterX,iCenterY,iFrames,u0,v=
0,u1,v1)
-	gAnimAtlasCache[n] =3D o
-	return unpack(o)
+	local b =3D iBorderPixels
+	while (w < b+iWidth+b) do w =3D w * 2 end
+	while (w < b+iHeight+b) do w =3D w * 2 end
+	local atlasgroup =3D CreateAtlasGroup(w,w,iBorderPixels,bWrap)
+	local atlas,u0,v0,u1,v1,origw,origh =3D atlasgroup:AddImageToAtlasGroup(i=
mg)
+	img:Destroy()
+	if (not atlas) then gAnimAtlasCache[n] =3D false return end
+	assert(iWidth =3D=3D origw)
+	assert(iHeight =3D=3D origh)
+	=

+	-- create and store extended atlaspiece
+	local atlaspiece =3D {
+		atlas	=3Datlas,
+		u0		=3Du0,
+		v0		=3Dv0,
+		u1		=3Du1,
+		v1		=3Dv1,
+		uvw		=3Du1-u0,
+		uvh		=3Dv1-v0,
+		origw	=3Dorigw,
+		origh	=3Dorigh,
+		iCenterX=3DiCenterX,
+		iCenterY=3DiCenterY,
+		iFrames=3DiFrames,
+		}
+	gAnimAtlasCache[n] =3D atlaspiece
+	return atlaspiece
 end
 =

 =




From no-reply at zwischenwelt.org  Tue Sep 30 16:34:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 30 Sep 2008 14:34:14 -0000
Subject: [Iris-commit] [IRIS] r2479 - in /trunk: include/builder.h
 lua/lib.2d.map.lua lua/lib.2d.mobile.lua lua/lib.2d.spriteblock.lua
 lua/lib.uoanim.lua src/data_anim.cpp src/data_anim_L.cpp
Message-ID: <20080930143414.494DE1524030@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Sep 30 16:34:13 2008
New Revision: 2479

Log:
uoanim : bitmask export improved, 2d : raypick for dynamics and mobiles, sp=
riteblock raypick for uoanim

Modified:
    trunk/include/builder.h
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.mobile.lua
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.uoanim.lua
    trunk/src/data_anim.cpp
    trunk/src/data_anim_L.cpp

Modified: trunk/include/builder.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/builder.h (original)
+++ trunk/include/builder.h Tue Sep 30 16:34:13 2008
@@ -48,7 +48,7 @@
 =

 void	GenerateArtBitMask	(cArtMapLoader& oArtMapLoader,	const int iID,cBitM=
ask& bitmask);
 void	GenerateGumpBitMask	(cGumpLoader& oGumpLoader,		const int iID,cBitMas=
k& bitmask);
-void	GenerateAnimBitMask	(cAnimLoader& oAnimLoader,		const int iID, const =
int iAnimID, const int iFrame, cBitMask& bitmask);
+void	GenerateAnimBitMask	(cAnimLoader& oAnimLoader, 		const int iRealID, c=
onst int iFrame, cBitMask& bitmask);
 =

 /// creates a ogre font from the unifont (given through the loader) and cr=
eates the font with the name szName
 /// free_rgba is the color of the visible pixels in the letter

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Tue Sep 30 16:34:13 2008
@@ -45,6 +45,7 @@
 	end
 end
 =

+	=

 -- returns dist,xloc,yloc   if hit, or nil otherwise
 function Renderer2D:RayPickTerrain (rx,ry,rz, rvx,rvy,rvz)
 	local founddist,foundxloc,foundyloc
@@ -63,7 +64,7 @@
 function Renderer2D:RayPickStatics (rx,ry,rz, rvx,rvy,rvz)
 	local founddist,foundsprite
 	for block,v in pairs(self.map2d_spawners.statics.pMapBlocks) do  -- spawn=
er:ForAllBlocks()
-		local dist,sprite =3D block:RayPick (rx,ry,rz, rvx,rvy,rvz) =

+		local dist,sprite =3D block:RayPick(rx,ry,rz, rvx,rvy,rvz) =

 		if (dist and ((not founddist) or dist < founddist)) then
 			founddist =3D dist
 			foundsprite =3D sprite
@@ -71,6 +72,42 @@
 	end
 	return founddist,foundsprite
 end
+
+
+
+function Renderer2D:RayPickDynamics (rx,ry,rz, rvx,rvy,rvz)
+	local founddist,foundsprite
+	for k,item in pairs(GetDynamicList()) do =

+		if (DynamicIsInWorld(item)) then =

+			local spriteblock =3D item.gfx2d
+			if (spriteblock) then =

+				local dist,sprite =3D spriteblock:RayPick(rx,ry,rz, rvx,rvy,rvz) =

+				if (dist and ((not founddist) or dist < founddist)) then
+					founddist =3D dist
+					foundsprite =3D sprite
+				end
+			end
+		end
+	end
+	return founddist,foundsprite -- item=3Dfoundsprite.data
+end
+
+function Renderer2D:RayPickMobiles (rx,ry,rz, rvx,rvy,rvz)
+	local founddist,foundsprite
+	for k,mobile in pairs(GetMobileList()) do =

+		local spriteblock =3D mobile.gfx2d
+		if (spriteblock) then =

+			local dist,sprite =3D spriteblock:RayPick(rx,ry,rz, rvx,rvy,rvz) =

+			if (dist and ((not founddist) or dist < founddist)) then
+				founddist =3D dist
+				foundsprite =3D sprite
+			end
+		end
+	end
+	return founddist,foundsprite -- item=3Dfoundsprite.data
+end
+	=

+	=

 =

 function Renderer2D:MapStep		()
 	self:MobileTestStep()
@@ -82,14 +119,18 @@
 	=

 	=

 	-- raypick test : =

-	local rx,ry,rz, rvx,rvy,rvz =3D GetMouseRay()
-	local dist,sprite =3D self:RayPickStatics(rx,ry,rz, rvx,rvy,rvz)
-	if (dist) then
-		--~ print("Renderer2D raypick static",sprite,GetStaticTileTypeName(sprit=
e.artid))
-	else	=

-		local dist,xloc,yloc =3D self:RayPickTerrain(rx,ry,rz, rvx,rvy,rvz)
-		--~ print("Renderer2D raypick terrain",xloc,yloc)
-	end
+	--~ local rx,ry,rz, rvx,rvy,rvz =3D GetMouseRay()
+	--~ local dist,sprite =3D self:RayPickStatics(rx,ry,rz, rvx,rvy,rvz)
+	--~ if (dist) then print("RayPickStatics",sprite,GetStaticTileTypeName(sp=
rite.artid)) end
+	=

+	--~ local dist,xloc,yloc =3D self:RayPickTerrain(rx,ry,rz, rvx,rvy,rvz)
+	--~ print("RayPickTerrain",xloc,yloc)
+	=

+	--~ local dist,sprite =3D self:RayPickDynamics(rx,ry,rz, rvx,rvy,rvz)
+	--~ if (dist) then print("RayPickDynamics",GetStaticTileTypeName(sprite.d=
ata.artid)) end
+	=

+	--~ local dist,sprite =3D self:RayPickMobiles(rx,ry,rz, rvx,rvy,rvz)
+	--~ if (dist) then print("RayPickMobiles",sprite.data.artid) end
 end
 =

 function Renderer2D:MapClear	()

Modified: trunk/lua/lib.2d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.mobile.lua (original)
+++ trunk/lua/lib.2d.mobile.lua Tue Sep 30 16:34:13 2008
@@ -12,12 +12,16 @@
 		local sorttx =3D 0 -- xloc-floor(xloc/8)*8
 		local sortty =3D 0 -- yloc-floor(yloc/8)*8
 		local sorttz =3D zloc
-		local iTileTypeID	=3D mobile.artid
+		local iTileTypeID	=3D nil
 		local iHue			=3D BitwiseAND(mobile.hue,0x7fff) -- 0x03F4 : human skin hu=
e (0x83F4=3D33780, but 0x8* is partial hue and turned out all gray here)
 		local iModelID,iAnimID,iFrame =3D mobile.artid,0,0 -- 401,0
 		local pAtlasPiece	=3D Anim2DAtlas_LoadAtlasPiece(iModelID,iAnimID,iFrame=
,iHue)
 		if (pAtlasPiece) then
-			spriteblock:AddSpriteEx(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTy=
peID,sorttx,sortty,sorttz,fIndexRel)+1,item,pAtlasPiece)
+			local sprite =3D spriteblock:AddSpriteEx(tx,ty,tz,CalcSortBonus(iTileTy=
peID,sorttx,sortty,sorttz,fIndexRel)+1,mobile,pAtlasPiece)
+			sprite.uoanim_ModelID	=3D iModelID
+			sprite.uoanim_AnimID	=3D iAnimID
+			sprite.uoanim_Frame		=3D iFrame
+			sprite.hue =3D iHue
 		else
 			print("warning, Renderer2D:UpdateMobile load uoanim failed",iModelID,iA=
nimID,iFrame,iHue)
 		end

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Tue Sep 30 16:34:13 2008
@@ -38,8 +38,7 @@
 =

 -- returns dist,sprite   if hit, or nil if not hit.    sprite=3D{artid=3D?=
,hue=3D?,data=3D?} (see AddArtSprite)
 function cUOSpriteBlock:RayPick (rx,ry,rz, rvx,rvy,rvz)
-	local bx,by =3D self.bx,self.by
-	if (not bx) then return end
+	if (not self.bBuilt) then return end
 	rx =3D rx - self.x
 	ry =3D ry - self.y
 	rz =3D rz - self.z
@@ -60,6 +59,8 @@
 			local cx,cy,cz =3D x-xa,y-xa,z+za	--, u1,v0 -- right,top
 			local dx,dy,dz =3D x+xa,y+xa,z+za	--, u0,v0 -- left ,top
 			local px,py
+			=

+				=

 			local dist,fa,fc,fb =3D TriangleRayPickEx(ax,ay,az, cx,cy,cz, bx,by,bz,=
 rx,ry,rz, rvx,rvy,rvz) -- (vc+0,vc+2,vc+1)
 			if (dist) then =

 				px,py =3D pw * (fa + fc),ph * (fb + fa) =

@@ -70,11 +71,15 @@
 					px,py =3D pw * fc,ph * fb
 				end
 			end
-			if (dist and ((not founddist) or dist < founddist) and (
-				(sprite.artid and ArtCheckBitMask(sprite.artid+0x4000,px,py)) =

-				)) then
-				founddist =3D dist
-				foundsprite =3D sprite
+			if (dist and ((not founddist) or dist < founddist)) then
+				--~ print("cUOSpriteBlock:RayPick hit",sprite.artid,sprite.uoanim_Mode=
lID,px,py)
+				if (
+					(sprite.artid and ArtCheckBitMask(sprite.artid+0x4000,px,py)) or
+					(sprite.uoanim_ModelID and UOAnimCheckBitMask(sprite.uoanim_ModelID,s=
prite.uoanim_AnimID,sprite.uoanim_Frame,px,py)) =

+					) then
+						founddist =3D dist
+						foundsprite =3D sprite
+				end
 			end
 		end
 	end
@@ -124,11 +129,14 @@
 		print("warning, cUOSpriteBlock:AddArtSprite failed",artid,hue)
 		return
 	end
-	self:AddSpriteEx(tx,ty,zloc,artid,hue,sortbonus,data,pAtlasPiece)
+	local sprite =3D self:AddSpriteEx(tx,ty,zloc,sortbonus,data,pAtlasPiece)
+	sprite.artid =3D artid
+	sprite.hue =3D hue
+	return sprite
 end
 	=

 -- pAtlasPiece=3D{atlas=3D?,origw=3D?,origh=3D?,u0=3D?,v0=3D?,u1=3D?,v1=3D=
?}
-function cUOSpriteBlock:AddSpriteEx (tx,ty,zloc,artid,hue,sortbonus,data,p=
AtlasPiece)
+function cUOSpriteBlock:AddSpriteEx (tx,ty,zloc,sortbonus,data,pAtlasPiece)
 	local atlas =3D pAtlasPiece.atlas
 	local group =3D self.pSpritesByAtlas[atlas]
 	if (not group) then group =3D {} self.pSpritesByAtlas[atlas] =3D group end
@@ -162,11 +170,10 @@
 		v1 =3D pAtlasPiece.v1,
 		pw =3D pw, -- in pixels
 		ph =3D ph, -- in pixels
-		hue =3D hue,
-		artid =3D artid, -- for mousepicking
 		data =3D data
 	}
 	table.insert(group,sprite)
+	return sprite
 end
 =

 function cUOSpriteBlock:LoadAtlasMat	(atlas,basemat)
@@ -227,6 +234,7 @@
 			gfx:RenderableEnd()
 		end
 	end
+	self.bBuilt =3D true
 end
 =

 --[[

Modified: trunk/lua/lib.uoanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoanim.lua (original)
+++ trunk/lua/lib.uoanim.lua Tue Sep 30 16:34:13 2008
@@ -69,7 +69,6 @@
 =

 =

 =

-
 -- iID is probably bodyid, and animid the animation ? ported from varans c=
ode
 function Anim_GetRealID (iModelID,iAnimID) =

 	if (iModelID < kAnimIDRangeLen_HighDetailed) then return iAnimID + iModel=
ID*110 end
@@ -95,6 +94,23 @@
 	local bSuccess,iWidth,iHeight,iCenterX,iCenterY,iFrames =3D gAnimLoader:E=
xportToImage(pImage,iRealID,iFrame,gHueLoader,iHue)
 	if (not bSuccess) then pImage:Destroy() return end
 	return pImage,iWidth,iHeight,iCenterX,iCenterY,iFrames
+end
+
+gAnimFrameBitMaskCache =3D {}
+function GetAnimFrameBitMask (iRealID,iFrame)
+	local n =3D iRealID..","..iFrame
+	local o =3D gAnimFrameBitMaskCache[n]
+	if (o ~=3D nil) then return o end
+	o =3D gAnimLoader:CreateBitMask(iRealID,iFrame)
+	gAnimFrameBitMaskCache[n] =3D o
+	return o
+end
+
+function UOAnimCheckBitMask (iModelID,iAnimID,iFrame,px,py)
+	local iRealID =3D Anim_GetRealID(iModelID,iAnimID) =

+	local bitmask =3D GetAnimFrameBitMask(iRealID,iFrame)
+	if (not bitmask) then return true end -- no bitmask -> always hit
+	return bitmask:TestBit(floor(px),floor(py))
 end
 =

 =


Modified: trunk/src/data_anim.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_anim.cpp (original)
+++ trunk/src/data_anim.cpp Tue Sep 30 16:34:13 2008
@@ -33,28 +33,15 @@
 // ***** ***** ***** ***** ***** builder
 =

 =

-void	GenerateAnimBitMask	(cAnimLoader& oAnimLoader, const int iID, const i=
nt iAnimID, const int iFrame, cBitMask& bitmask) { PROFILE
+void	GenerateAnimBitMask	(cAnimLoader& oAnimLoader, const int iRealID, con=
st int iFrame, cBitMask& bitmask) { PROFILE
 	bitmask.Reset();
-
-	int RealID;
-	if (iID < oAnimLoader.mHighDetailed) {
-		RealID =3D iID*110;
-	} else if (iID < oAnimLoader.mHighDetailed + oAnimLoader.mLowDetailed) {
-		RealID =3D oAnimLoader.mHighDetailed*110 + (iID-oAnimLoader.mHighDetaile=
d)*65;
-	} else {
-		RealID =3D oAnimLoader.mHighDetailed*110 + oAnimLoader.mLowDetailed*65 +=
 (iID-oAnimLoader.mHighDetailed-oAnimLoader.mLowDetailed)*175;
-	}
-	RealID +=3D iAnimID;
-
-	cAnim *anim =3D oAnimLoader.GetAnim( RealID );
-
-	if (!anim) {
-		return;
-	}
+	cAnim *anim =3D oAnimLoader.GetAnim( iRealID );
+	if (!anim) return;
 =

 	cSetHighBitFilter Filter;
 	short *pImgRaw =3D 0;
-	if (anim->Decode( pImgRaw, iFrame, Filter, 0 )) {
+	bool bTexSize =3D false;
+	if (anim->Decode( pImgRaw, iFrame, Filter, 0, bTexSize )) {
 		bitmask.SetDataFrom16BitImage(pImgRaw,anim->GetTexWidth(),anim->GetTexHe=
ight());
 		delete [] pImgRaw;
 	}

Modified: trunk/src/data_anim_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_anim_L.cpp (original)
+++ trunk/src/data_anim_L.cpp Tue Sep 30 16:34:13 2008
@@ -80,9 +80,11 @@
 		=

 	// object methods exported to lua
 		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
+	=

+		/// bitmask	CreateBitMask	(iRealID,iFrame)
 		static int  CreateBitMask	(lua_State *L) { PROFILE
 			cBitMask* pTarget =3D new cBitMask();
-			GenerateAnimBitMask(*checkudata_alive(L),luaL_checkint(L,2),luaL_checki=
nt(L,3),luaL_checkint(L,4),*pTarget);
+			GenerateAnimBitMask(*checkudata_alive(L),luaL_checkint(L,2),luaL_checki=
nt(L,3),*pTarget);
 			return cLuaBind<cBitMask>::CreateUData(L,pTarget);
 		}
 		=




From no-reply at zwischenwelt.org  Tue Sep 30 23:36:36 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 30 Sep 2008 21:36:36 -0000
Subject: [Iris-commit] [IRIS] r2480 - in /trunk/lua: ./ net/ obj/
Message-ID: <20080930213636.C4F291524030@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Sep 30 23:36:35 2008
New Revision: 2480

Log:
mousepick code cleaned up a bit, and enabled in 2d mode. fixed crash when o=
pening spellbook a second time

Added:
    trunk/lua/lib.2d.mousepick.lua
Modified:
    trunk/lua/lib.2d.dynamic.lua
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.cursor.lua
    trunk/lua/lib.devtool.lua
    trunk/lua/lib.fallback.lua
    trunk/lua/lib.macrolist.lua
    trunk/lua/lib.mousepick.lua
    trunk/lua/lib.pathfind.lua
    trunk/lua/lib.tilefreewalk.lua
    trunk/lua/lib.uodragdrop.lua
    trunk/lua/net/net.cursor.lua
    trunk/lua/obj/obj.container.lua

Modified: trunk/lua/lib.2d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.dynamic.lua (original)
+++ trunk/lua/lib.2d.dynamic.lua Tue Sep 30 23:36:35 2008
@@ -30,7 +30,10 @@
 		local sortty =3D yloc-floor(yloc/8)*8
 		local sorttz =3D zloc
 		local fIndexRel =3D k / totalpartnum
-		spriteblock:AddArtSprite(tx,ty,tz,iTileTypeID,iHue,CalcSortBonus(iTileTy=
peID,sorttx,sortty,sorttz,fIndexRel)+1,item)
+		local sprite =3D spriteblock:AddArtSprite(tx,ty,tz,iTileTypeID,iHue,Calc=
SortBonus(iTileTypeID,sorttx,sortty,sorttz,fIndexRel)+1,item)
+		sprite.xloc =3D xloc -- mousepicking
+		sprite.yloc =3D yloc
+		sprite.zloc =3D zloc
 	end
 	spriteblock:Build(Renderer2D.kSpriteBaseMaterial)
 	local x,y,z =3D gCurrentRenderer:UOPosToLocal(itemxloc,itemyloc,itemzloc*=
kRenderer2D_ZScale)

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Tue Sep 30 23:36:35 2008
@@ -45,70 +45,6 @@
 	end
 end
 =

-	=

--- returns dist,xloc,yloc   if hit, or nil otherwise
-function Renderer2D:RayPickTerrain (rx,ry,rz, rvx,rvy,rvz)
-	local founddist,foundxloc,foundyloc
-	for block,v in pairs(self.map2d_spawners.terrain.pMapBlocks) do  -- spawn=
er:ForAllBlocks()
-		local dist,xloc,yloc =3D block:RayPick(rx,ry,rz, rvx,rvy,rvz) =

-		if (dist and ((not founddist) or dist < founddist)) then
-			founddist =3D dist
-			foundxloc =3D xloc
-			foundyloc =3D yloc
-		end
-	end
-	return founddist,foundxloc,foundyloc
-end
-
--- returns dist,sprite   if hit, or nil otherwise    sprite=3D{artid=3D?,h=
ue=3D?,static=3D?}
-function Renderer2D:RayPickStatics (rx,ry,rz, rvx,rvy,rvz)
-	local founddist,foundsprite
-	for block,v in pairs(self.map2d_spawners.statics.pMapBlocks) do  -- spawn=
er:ForAllBlocks()
-		local dist,sprite =3D block:RayPick(rx,ry,rz, rvx,rvy,rvz) =

-		if (dist and ((not founddist) or dist < founddist)) then
-			founddist =3D dist
-			foundsprite =3D sprite
-		end
-	end
-	return founddist,foundsprite
-end
-
-
-
-function Renderer2D:RayPickDynamics (rx,ry,rz, rvx,rvy,rvz)
-	local founddist,foundsprite
-	for k,item in pairs(GetDynamicList()) do =

-		if (DynamicIsInWorld(item)) then =

-			local spriteblock =3D item.gfx2d
-			if (spriteblock) then =

-				local dist,sprite =3D spriteblock:RayPick(rx,ry,rz, rvx,rvy,rvz) =

-				if (dist and ((not founddist) or dist < founddist)) then
-					founddist =3D dist
-					foundsprite =3D sprite
-				end
-			end
-		end
-	end
-	return founddist,foundsprite -- item=3Dfoundsprite.data
-end
-
-function Renderer2D:RayPickMobiles (rx,ry,rz, rvx,rvy,rvz)
-	local founddist,foundsprite
-	for k,mobile in pairs(GetMobileList()) do =

-		local spriteblock =3D mobile.gfx2d
-		if (spriteblock) then =

-			local dist,sprite =3D spriteblock:RayPick(rx,ry,rz, rvx,rvy,rvz) =

-			if (dist and ((not founddist) or dist < founddist)) then
-				founddist =3D dist
-				foundsprite =3D sprite
-			end
-		end
-	end
-	return founddist,foundsprite -- item=3Dfoundsprite.data
-end
-	=

-	=

-
 function Renderer2D:MapStep		()
 	self:MobileTestStep()
 	=

@@ -116,21 +52,6 @@
 	local x,y,z =3D self:GetCamPos()
 	for k,spawner in pairs(self.map2d_spawners) do spawner:Step(t,x,y,z) end
 	self.map2d_scheduler:Step(x,y,z)
-	=

-	=

-	-- raypick test : =

-	--~ local rx,ry,rz, rvx,rvy,rvz =3D GetMouseRay()
-	--~ local dist,sprite =3D self:RayPickStatics(rx,ry,rz, rvx,rvy,rvz)
-	--~ if (dist) then print("RayPickStatics",sprite,GetStaticTileTypeName(sp=
rite.artid)) end
-	=

-	--~ local dist,xloc,yloc =3D self:RayPickTerrain(rx,ry,rz, rvx,rvy,rvz)
-	--~ print("RayPickTerrain",xloc,yloc)
-	=

-	--~ local dist,sprite =3D self:RayPickDynamics(rx,ry,rz, rvx,rvy,rvz)
-	--~ if (dist) then print("RayPickDynamics",GetStaticTileTypeName(sprite.d=
ata.artid)) end
-	=

-	--~ local dist,sprite =3D self:RayPickMobiles(rx,ry,rz, rvx,rvy,rvz)
-	--~ if (dist) then print("RayPickMobiles",sprite.data.artid) end
 end
 =

 function Renderer2D:MapClear	()

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Tue Sep 30 23:36:35 2008
@@ -19,6 +19,7 @@
 =

 dofile(libpath .. "lib.2d.cam.lua")
 dofile(libpath .. "lib.2d.map.lua")
+dofile(libpath .. "lib.2d.mousepick.lua")
 dofile(libpath .. "lib.2d.mobile.lua")
 dofile(libpath .. "lib.2d.dynamic.lua")
 dofile(libpath .. "lib.2d.spriteblock.lua")
@@ -56,7 +57,7 @@
 	-- initialize Mapenvironment
 	self:SetMapEnvironment()
 =

--- sience: not needed anymore? bring up and assertion failure (it seems wi=
thout, everything is correct)
+	-- switch renderer : create all object visuals
 	--	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynam=
ic)) then self:AddDynamicItem(dynamic) end end
 	--	for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile)=
 end
 end
@@ -109,7 +110,6 @@
 	end
 	=

 	-- TODO : self:CombatGuiStep() ?
-	-- TODO : self:MousePickStep() ?
 	local xloc,yloc,zloc =3D GetPlayerPos()
 	if (xloc) then self:SetCamPos(xloc,yloc,zloc) end
 	=

@@ -129,7 +129,10 @@
 end
 =

  =

-function Renderer2D:DestroyMousePickItemBySerial	() end
+ =

+ =

+
+
 function Renderer2D:AddEffect						(effectdata) end
 function Renderer2D:CamKeyDown						(key) end
 function Renderer2D:CamKeyUp						(key) end
@@ -144,7 +147,6 @@
 -- used by MacroRead_GetPlayerPosition when no playermobile found (yet)
 function Renderer2D:GetExactLocalPos() return 0,0,0 end
 =

-function Renderer2D:MousePickStep				() end
 function Renderer2D:SetOfflineStartPos			(x,y,z) self:SetCamPos(-x,y,z) end
 =

 =

@@ -170,12 +172,8 @@
 =

 function Renderer2D:InitLocalCam				(x,y,z) end -- ??? offline mode ?
 function Renderer2D:ChangeCamMode				() end
-function Renderer2D:GetMouseHitSerial			() end
-function Renderer2D:GetMouseHitTileCoords		() end
 function Renderer2D:SelectMobile				() end
 function Renderer2D:DeselectMobile				() end
-function Renderer2D:GetMouseHitSerial			() end
-function Renderer2D:MousePick					() end
 function Renderer2D:UpdateTrackingArrow			(...) end -- tracking skill, not=
 yet implemented
 function Renderer2D:NotifyDamage				(olddamage_serial,olddamage_amount) end
 function Renderer2D:NotifyHPChange				(mobile, value) end

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Tue Sep 30 23:36:35 2008
@@ -14,11 +14,6 @@
 Renderer3D.gMousePickTippOverride =3D false -- used for container-item-tip=
ps and other stuff from widget system, TODO : proper mousepicking for them
 =

 =

-function Renderer3D:GetMouseHitTileCoords ()
-	if ((not gMousePickFoundHit) or (not self.gMousePickFoundHit_ExactX)) the=
n return end
-	local x,y =3D Renderer3D:LocalToUOPos(self.gMousePickFoundHit_ExactX,self=
.gMousePickFoundHit_ExactY)
-	return math.floor(x),math.floor(y),math.floor(0.5 + (self.gMousePickFound=
Hit_ExactZ)/0.1)
-end
 =

 function Renderer3D:DeactivateMousePick ()
 	Client_SetBottomLine(self.gMousePickTippOverride or "")
@@ -37,47 +32,9 @@
 	end
 end
 =

-function Renderer3D:MousePick ()
-	gMousePickFoundHit =3D false
-	=

-	local widget =3D self:MousePick_2D()
-	=

-	-- 3d mousepicking, only if no widget hit
-	if (not widget) then self:MousePick_3D() end
-	=

-	self:MousePick_ShowHits()
-	=

-	-- close context/popup menu if currently open, widget is the currently cl=
icked widget, to ignore close in context menu
-	ClosePopUpMenu(widget)
-end
-		=

-function Renderer3D:MousePick_2D ()
-	-- 2d mousepicking
-	local widget =3D GetWidgetUnderMouse()
-	if (widget) then =

-		--~ print("Renderer3D:MousePick_2D",widget,widget.uoContainer,widget.ite=
m,widget.GetClassName and widget:GetClassName())
-		if (widget.uoContainer and widget.item) then
-			gMousePickFoundHit =3D {}
-			gMousePickFoundHit.hittype =3D kMousePickHitType_ContainerItem
-			gMousePickFoundHit.item =3D widget.item
-			gMousePickFoundHit.is2DHit =3D true
-		elseif (widget.uoPaperdoll and widget.item) then
-			gMousePickFoundHit =3D {}
-			gMousePickFoundHit.hittype =3D kMousePickHitType_PaperdollItem
-			gMousePickFoundHit.item =3D widget.item
-			gMousePickFoundHit.is2DHit =3D true
-		elseif widget.dialog and widget.dialog.uoContainer then
-			gMousePickFoundHit =3D {}
-			gMousePickFoundHit.hittype =3D kMousePickHitType_Container
-			gMousePickFoundHit.container =3D widget.dialog.uoContainer
-			gMousePickFoundHit.is2DHit =3D true
-		end
-	end
-	return widget
-end
 =

 -- CLEAR gMousePickFoundHit =3D {} if you want to use this alone !!!
-function Renderer3D:MousePick_3D ()
+function Renderer3D:MousePick_Scene ()
 	-- 3d mousepicking : mouseray
 	local rx,ry,rz,rvx,rvy,rvz =3D GetMouseRay()
 =

@@ -500,20 +457,6 @@
 	end
 end
 =

--- excecutes mousepick by default
-function Renderer3D:GetMouseHitSerial (bExecuteMousePick)
-	if (bExecuteMousePick =3D=3D nil) then bExecuteMousePick =3D true end
-	if (bExecuteMousePick) then self:MousePick() end
-	if (gMousePickFoundHit) then
-		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic) 	then r=
eturn gMousePickFoundHit.dynamic.serial end
-		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Mobile)  	then r=
eturn gMousePickFoundHit.mobile.serial end
-		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_ContainerItem) t=
hen return gMousePickFoundHit.item.serial end
-		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_PaperdollItem) t=
hen return gMousePickFoundHit.item.serial end
-		--print(vardump(gMousePickFoundHit))
-	end
-	return 0
-end
-
 function Renderer3D:DestroyMousePickItemBySerial (serial)
-	if (self:GetMouseHitSerial(false) =3D=3D serial) then self.gMousePickFoun=
dHit =3D false end
-end
+	if (GetMouseHitSerial(false) =3D=3D serial) then gMousePickFoundHit =3D f=
alse end
+end

Modified: trunk/lua/lib.cursor.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.cursor.lua (original)
+++ trunk/lua/lib.cursor.lua Tue Sep 30 23:36:35 2008
@@ -125,7 +125,7 @@
 =

 function CompleteTargetMode (hitobject)
 	if (not hitobject) then
-		gCurrentRenderer:MousePick()
+		MainMousePick()
 		if (not gMousePickFoundHit) then CancelTargetMode() return end
 		hitobject =3D gMousePickFoundHit
 	end
@@ -158,20 +158,20 @@
 	-- in object and pos pick ?
 	if (hitobject.hittype =3D=3D kMousePickHitType_Static) then =

 		bSendPos =3D false =

-		local x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords()
+		local x,y,z =3D GetMouseHitTileCoords()
 		Send_Target_Static(x,y,z,hitobject.entity)
 	end
 	=

 	-- ground hit
-	if (hitobject.hittype =3D=3D kMousePickHitType_Ground) then
+	if (hitobject.hittype =3D=3D kMousePickHitType_Ground) then -- only used =
by macro system
 		bSendPos =3D false =

 		Send_Target_Ground(hitobject.x,hitobject.y,hitobject.z)
 	end
 	=

-	-- TODO: Obsolete ?! (SiENcE)
+	-- kMousePickHitType_Terrain
 	if (bSendPos) then
 		-- target ground
-		local x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords()
+		local x,y,z =3D GetMouseHitTileCoords()
 		Send_Target_Ground(x,y,z)
 	end
 	=


Modified: trunk/lua/lib.devtool.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.devtool.lua (original)
+++ trunk/lua/lib.devtool.lua Tue Sep 30 23:36:35 2008
@@ -4,8 +4,8 @@
 gMeshTextureUsageFilePath =3D datapath.."meshtextureusage.lua"
 =

 function ShowDevTool ()
-	gCurrentRenderer:MousePick()
-	local x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords()
+	MainMousePick()
+	local x,y,z =3D GetMouseHitTileCoords()
 	local radius =3D gKeyPressed[key_lshift] and 0 or 2
 =

 	=

@@ -252,9 +252,9 @@
 	print("AdjustArtPosition",x,y,z)
 	if (not x) then =

 		-- default params : read current mousepos
-		gCurrentRenderer:MousePick()
+		MainMousePick()
 		if (not gMousePickFoundHit) then return end
-		x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords() =

+		x,y,z =3D GetMouseHitTileCoords() =

 	end
 	print("AdjustArtPosition2",x,y,z)
 	=

@@ -304,9 +304,9 @@
 	print("DevToolListStuffUnderMouse1",x,y,z,radius)
 	if (not x) then =

 		-- default params : read current mousepos
-		gCurrentRenderer:MousePick()
+		MainMousePick()
 		if (not gMousePickFoundHit) then return end
-		x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords() =

+		x,y,z =3D GetMouseHitTileCoords() =

 		radius =3D gKeyPressed[key_lshift] and 0 or 3 =

 	end
 	print("DevToolListStuffUnderMouse2",x,y,z,radius)

Modified: trunk/lua/lib.fallback.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.fallback.lua (original)
+++ trunk/lua/lib.fallback.lua Tue Sep 30 23:36:35 2008
@@ -41,9 +41,9 @@
 	if (gCurrentRenderer ~=3D Renderer3D) then return end
 	if (not x) then =

 		-- default params : read current mousepos
-		gCurrentRenderer:MousePick()
+		MainMousePick()
 		if (not gMousePickFoundHit) then return end
-		x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords() =

+		x,y,z =3D GetMouseHitTileCoords() =

 		radius =3D gKeyPressed[key_lshift] and 0 or 3 =

 	end
 	local statictypes =3D ListFallBackTypesNearPos(x,y,z,radius)

Modified: trunk/lua/lib.macrolist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.macrolist.lua (original)
+++ trunk/lua/lib.macrolist.lua Tue Sep 30 23:36:35 2008
@@ -137,7 +137,7 @@
 -- itemserial defaults to the serial of the item currently under the mouse
 function MacroCmd_ItemSlot_Set	(slotnumber,itemserial) 	=

 	if (not gInGameStarted) then return end
-	if (not itemserial) then itemserial =3D gCurrentRenderer:GetMouseHitSeria=
l() end -- itemserial_under_mouse
+	if (not itemserial) then itemserial =3D GetMouseHitSerial() end -- itemse=
rial_under_mouse
 	if (itemserial =3D=3D 0) then itemserial =3D nil end -- set 0 to clear
 	print("MacroCmd_ItemSlot_Set",slotnumber,itemserial)
 	local item =3D itemserial and GetObjectBySerial(itemserial)
@@ -372,8 +372,8 @@
 end
 =

 function MacroCmd_WalkToMouse	()
-	gCurrentRenderer:MousePick()
-	local x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords()
+	MainMousePick()
+	local x,y,z =3D GetMouseHitTileCoords()
 	SetAutoWalkTo(x,y)
 end
 =

@@ -574,6 +574,5 @@
 end
 =

 function MacroGetSerialUnderMouse	()
-	gCurrentRenderer:MousePick()
-	return gCurrentRenderer:GetMouseHitSerial()
-end
+	return GetMouseHitSerial(true)
+end

Modified: trunk/lua/lib.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mousepick.lua (original)
+++ trunk/lua/lib.mousepick.lua Tue Sep 30 23:36:35 2008
@@ -16,10 +16,84 @@
 	gCurrentRenderer:TerrainRayIntersect_Hit (tx,ty,tiletype,hit_dist,minz,ma=
xz)
 end
 =

+function MainMousePick ()
+	gMousePickFoundHit =3D false
+	Renderer3D.gMousePickFoundHit_ExactX =3D false
+	=

+	local widget =3D MousePick_GUI()
+	=

+	-- 3d mousepicking, only if no widget hit
+	if (not widget) then gCurrentRenderer:MousePick_Scene() end
+	=

+	gCurrentRenderer:MousePick_ShowHits()
+	=

+	-- close context/popup menu if currently open, widget is the currently cl=
icked widget, to ignore close in context menu
+	ClosePopUpMenu(widget)
+end
+
+
+-- returns xloc,yloc,zloc   (uocoordinates,directly used by  uodragdrop Se=
nd_Drop_Object)
+function GetMouseHitTileCoords ()
+	if (not gMousePickFoundHit) then return end
+	if (gMousePickFoundHit.hit_xloc) then return	gMousePickFoundHit.hit_xloc,
+													gMousePickFoundHit.hit_yloc,
+													gMousePickFoundHit.hit_zloc end
+	if (not Renderer3D.gMousePickFoundHit_ExactX) then return end
+	local x,y =3D Renderer3D:LocalToUOPos(Renderer3D.gMousePickFoundHit_Exact=
X,Renderer3D.gMousePickFoundHit_ExactY)
+	return math.floor(x),math.floor(y),math.floor(0.5 + (Renderer3D.gMousePic=
kFoundHit_ExactZ)/0.1)
+end
+
+function MousePick_GUI ()
+	-- 2d mousepicking
+	local widget =3D GetWidgetUnderMouse()
+	if (widget) then =

+		--~ print("MousePick_GUI",widget,widget.uoContainer,widget.item,widget.G=
etClassName and widget:GetClassName())
+		if (widget.uoContainer and widget.item) then
+			gMousePickFoundHit =3D {}
+			gMousePickFoundHit.hittype =3D kMousePickHitType_ContainerItem
+			gMousePickFoundHit.item =3D widget.item
+			gMousePickFoundHit.is2DHit =3D true
+		elseif (widget.uoPaperdoll and widget.item) then
+			gMousePickFoundHit =3D {}
+			gMousePickFoundHit.hittype =3D kMousePickHitType_PaperdollItem
+			gMousePickFoundHit.item =3D widget.item
+			gMousePickFoundHit.is2DHit =3D true
+		elseif widget.dialog and widget.dialog.uoContainer then
+			gMousePickFoundHit =3D {}
+			gMousePickFoundHit.hittype =3D kMousePickHitType_Container
+			gMousePickFoundHit.container =3D widget.dialog.uoContainer
+			gMousePickFoundHit.is2DHit =3D true
+		end
+	end
+	return widget
+end
+
+
+
+-- excecutes mousepick by default
+function GetMouseHitSerial (bExecuteMousePick)
+	local o =3D GetMouseHitObject(bExecuteMousePick)
+	return o and o.serial or 0
+end
+
+-- excecutes mousepick by default
+function GetMouseHitObject (bExecuteMousePick)
+	if (bExecuteMousePick =3D=3D nil) then bExecuteMousePick =3D true end
+	if (bExecuteMousePick) then MainMousePick() end
+	if (gMousePickFoundHit) then
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Static			) then =
return gMousePickFoundHit.entity end
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic			) then=
 return gMousePickFoundHit.dynamic end
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Mobile			) then =
return gMousePickFoundHit.mobile end
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_ContainerItem	) =
then return gMousePickFoundHit.item end
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_PaperdollItem	) =
then return gMousePickFoundHit.item end
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Container		) the=
n return gMousePickFoundHit.container end
+	end
+end
+
 =

 function IrisDoubleClick ()
-	gCurrentRenderer:MousePick()
-	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+	MainMousePick()
+	local iSerial =3D GetMouseHitSerial()
 	if gKeyPressed[key_lcontrol] then
 		-- open status window if control pressed and mobile targeted
 		if (iSerial and iSerial ~=3D 0) then =

@@ -74,7 +148,7 @@
 		not gbMouseLastLeftDownWasTarget and =

 		len2(sub2(x,y,gbMouseLastLeftDownWasTargetPositionX, gbMouseLastLeftDown=
WasTargetPositionY)) <=3D 2
 	then =

-		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		local iSerial =3D GetMouseHitSerial()
 		gLastRightClickSerial =3D nil
 		if (iSerial and iSerial ~=3D 0) then =

 			printdebug("net",sprintf("IrisContextMenuClick: serial=3D0x%08x\n",iSer=
ial))
@@ -82,7 +156,7 @@
 			gLastRightClickSerial =3D iSerial
 		end
 =

-		--~ local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		--~ local iSerial =3D GetMouseHitSerial()
 		--~ if (iSerial and iSerial ~=3D 0) then =

 			--~ printdebug("net",sprintf("IrisSingleClick: serial=3D0x%08x\n",iSeri=
al))
 			--~ Send_SingleClick(iSerial)
@@ -92,7 +166,7 @@
 			--~ -- gCurrentRenderer:DeselectMobile()
 			--~ =

 			--~ if gEnableGotoOnClick and not GetWidgetUnderMouse() then
-				--~ local x,y =3D gCurrentRenderer:GetMouseHitTileCoords()
+				--~ local x,y =3D GetMouseHitTileCoords()
 				--~ SetAutoWalkTo(x,y)
 			--~ end
 		--~ end

Modified: trunk/lua/lib.pathfind.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.pathfind.lua (original)
+++ trunk/lua/lib.pathfind.lua Tue Sep 30 23:36:35 2008
@@ -1,8 +1,8 @@
 -- a star pathfinding
 =

 function Pathfinding_TriggeredByMouse	()
-	gCurrentRenderer:MousePick()
-	local x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords()
+	MainMousePick()
+	local x,y,z =3D GetMouseHitTileCoords()
 	z =3D math.floor(z * 0.1)
 	Pathfinding_TriggeredByDestination(x,y,z)
 end

Modified: trunk/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.tilefreewalk.lua (original)
+++ trunk/lua/lib.tilefreewalk.lua Tue Sep 30 23:36:35 2008
@@ -650,7 +650,7 @@
 -- returns x,y,z
 function gTileFreeWalk:Impl_MousePickPos ()
 	gMousePickFoundHit =3D false
-	Renderer3D:MousePick_3D()
+	Renderer3D:MousePick_Scene()
 	local x =3D Renderer3D.gMousePickFoundHit_ExactX
 	local y =3D Renderer3D.gMousePickFoundHit_ExactY
 	local z =3D Renderer3D.gMousePickFoundHit_ExactZ

Modified: trunk/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uodragdrop.lua (original)
+++ trunk/lua/lib.uodragdrop.lua Tue Sep 30 23:36:35 2008
@@ -53,7 +53,7 @@
 end
 =

 function MouseDownUODragDrop()
-	gCurrentRenderer:MousePick()
+	MainMousePick()
 	if (gMousePickFoundHit and gMousePickFoundHit.hittype =3D=3D kMousePickHi=
tType_Dynamic) then
 		gLeftDownItem =3D {}
 		gLeftDownItem.item =3D gMousePickFoundHit.dynamic
@@ -89,7 +89,7 @@
 				Send_Equip_Item_Request( gDragDropItem.serial, gDragDropItem.layer, Gu=
mp.mobileserial )
 			end
 		else
-			gCurrentRenderer:MousePick()
+			MainMousePick()
 			=

 			if (gMousePickFoundHit) then
 				if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic and Te=
stBit(GetStaticTileTypeFlags( gDragDropItem.artid ) or 0,kTileDataFlag_Cont=
ainer)) then
@@ -98,7 +98,7 @@
 					--Send_Equip_Item_Request( gDragDropItem.serial, gDragDropItem.layer,=
 gMousePickFoundHit.mobile.serial )
 					Send_Drop_Object( gDragDropItem.serial, hex2num("0xFFFF"), hex2num("0=
xFFFF"), 0, gMousePickFoundHit.mobile.serial )
 				else
-					local x, y, z =3D gCurrentRenderer:GetMouseHitTileCoords()
+					local x, y, z =3D GetMouseHitTileCoords()
 					Send_Drop_Object( gDragDropItem.serial, x, y, z, hex2num("0xFFFFFFFF"=
) )
 				end
 			end
@@ -242,7 +242,7 @@
 	if (gDragDrop and gDragDrop.started) then -- when dragging with amount di=
alog
 		CompleteUODragDrop()
 	else =

-		gCurrentRenderer:MousePick()
+		MainMousePick()
 		if (gMousePickFoundHit) then
 			if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_ContainerItem)	=
then PrepareDragContainerItem(gMousePickFoundHit.item) end
 			if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_PaperdollItem)	=
then PrepareDragPaperdollItem(gMousePickFoundHit.item) end
@@ -327,7 +327,7 @@
 	if (not gDragDrop) then return end
 	--GuiAddChatLine("dragdrop : complete")
 =

-	gCurrentRenderer:MousePick()
+	MainMousePick()
 	=

 	local item =3D gDragDrop.item
 	local dialog_under_mouse =3D GetDialogUnderMouse()
@@ -435,8 +435,8 @@
 			Send_Equip_Item_Request(item.serial,layer,paperdoll.mobileserial)
 		end
 	elseif (gMousePickFoundHit) then
-		x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords()
-		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		x,y,z =3D GetMouseHitTileCoords()
+		local iSerial =3D GetMouseHitSerial()
 		if (iSerial and iSerial ~=3D 0) then =

 			-- drop on mobile,dynamic etc =

 			printdebug("dragdrop","MouseUpUODragDrop: drop on worlobject : ",item.s=
erial,item.amount,x,y,z,iSerial)

Modified: trunk/lua/net/net.cursor.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.cursor.lua (original)
+++ trunk/lua/net/net.cursor.lua Tue Sep 30 23:36:35 2008
@@ -83,7 +83,7 @@
 -- Target Statics (TODO: is this correct?; sends entitiy tile zloc instead=
 of click pos; seems to expect the position at the ground
 function Send_Target_Static (x,y,z,entity) =

 	NotifyListener("Hook_TargetMode_Static",x,y,z,entity)
-	Send_Target(true,0,hex2num("0x00000000"),x,y,entity.zloc,entity.iTileType=
ID) =

+	Send_Target(true,0,hex2num("0x00000000"),x,y,entity.zloc,entity.artid or =
entity.iTileTypeID) =

 end
 =

 -- Target Item (Backpack, Paperdoll)

Modified: trunk/lua/obj/obj.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.container.lua (original)
+++ trunk/lua/obj/obj.container.lua Tue Sep 30 23:36:35 2008
@@ -90,7 +90,7 @@
 		spellbook.itemid =3D containerdata.gumpid
 		-- container with spell is already created (invisible)
 		Open_Spellbook(spellbook)
-		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)
+		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial or 0, spellbook.itemid or 0, spellbook.scrolloffset=
 or 0)
 		return =

 	end
 	=




