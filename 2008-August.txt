From no-reply at zwischenwelt.org  Sat Aug  2 00:20:09 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 01 Aug 2008 22:20:09 -0000
Subject: [Iris-commit] [IRIS] r2339 - /trunk/lua/gui/gui.gumpmaker.lua
Message-ID: <20080801230007.764851C1857B@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug  2 00:20:08 2008
New Revision: 2339

Log:
added error handling for gumps failing to load, so they don't crash the who=
le client

Modified:
    trunk/lua/gui/gui.gumpmaker.lua

Modified: trunk/lua/gui/gui.gumpmaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpmaker.lua (original)
+++ trunk/lua/gui/gui.gumpmaker.lua Sat Aug  2 00:20:08 2008
@@ -151,8 +151,9 @@
 		mat =3D "hudUnknown"
 	end
 	local w,h =3D GetGumpSize(iGumpID)
-	cx =3D (cx ~=3D 0) and cx or w -- default =3D w =

-	cy =3D (cy ~=3D 0) and cy or h -- default =3D h
+	if (not w) then print("WARNING ! MakeBorderGumpPart : GetGumpSize =3D nil=
 for id:",iGumpID) end
+	cx =3D (cx ~=3D 0) and cx or w or 1 -- default =3D w =

+	cy =3D (cy ~=3D 0) and cy or h or 1 -- default =3D h
 	local widget =3D guimaker.MakePlane(parent,mat,x,y,cx,cy)
 	local tw,th =3D texsize(w),texsize(h)
 	widget.gfx:SetUV(0,(skip_rows_from_top)/th,cx/tw,(cy+skip_rows_from_top)/=
th)



From no-reply at zwischenwelt.org  Sun Aug  3 03:15:18 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 03 Aug 2008 01:15:18 -0000
Subject: [Iris-commit] [IRIS] r2340 - /trunk/lua/gui/gui.gumpmaker.lua
Message-ID: <20080803011519.1529B1C1857B@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug  3 03:15:18 2008
New Revision: 2340

Log:
MakeBorderGumpPart fix for missing gumps, 2nd try

Modified:
    trunk/lua/gui/gui.gumpmaker.lua

Modified: trunk/lua/gui/gui.gumpmaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpmaker.lua (original)
+++ trunk/lua/gui/gui.gumpmaker.lua Sun Aug  3 03:15:18 2008
@@ -152,8 +152,10 @@
 	end
 	local w,h =3D GetGumpSize(iGumpID)
 	if (not w) then print("WARNING ! MakeBorderGumpPart : GetGumpSize =3D nil=
 for id:",iGumpID) end
-	cx =3D (cx ~=3D 0) and cx or w or 1 -- default =3D w =

-	cy =3D (cy ~=3D 0) and cy or h or 1 -- default =3D h
+	w =3D w or 1
+	h =3D h or 1
+	cx =3D (cx ~=3D 0) and cx or w -- default =3D w =

+	cy =3D (cy ~=3D 0) and cy or h -- default =3D h
 	local widget =3D guimaker.MakePlane(parent,mat,x,y,cx,cy)
 	local tw,th =3D texsize(w),texsize(h)
 	widget.gfx:SetUV(0,(skip_rows_from_top)/th,cx/tw,(cy+skip_rows_from_top)/=
th)



From no-reply at zwischenwelt.org  Sun Aug  3 23:45:10 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 03 Aug 2008 21:45:10 -0000
Subject: [Iris-commit] [IRIS] r2341 - /trunk/bin/iris2.exe
Message-ID: <20080803220007.2A24A1C185DA@zwischenwelt.org>

Author: sience
Date: Sun Aug  3 23:45:10 2008
New Revision: 2341

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Mon Aug  4 12:20:35 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 10:20:35 -0000
Subject: [Iris-commit] [IRIS] r2342 - /trunk/lua/
Message-ID: <20080804102035.44AA31524030@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug  4 12:20:34 2008
New Revision: 2342

Log:
mapl loading planning

Added:
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.3d.dynamics.lua
    trunk/lua/lib.mapblock.3d.multis.lua
    trunk/lua/lib.mapblock.3d.statics.lua
    trunk/lua/lib.mapblock.3d.terrain.lua
    trunk/lua/lib.mapblock.3d.water.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/lib.mapblock.scheduler.lua
    trunk/lua/lib.mapblock.spawner.lua
Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.artatlas.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon Aug  4 12:20:34 2008
@@ -3,243 +3,46 @@
 Renderer2D.pMapBlocks =3D {}
 Renderer2D.iNextMapStep =3D 0
 =

-Renderer2D.kMapLoadRad =3D 4
 Renderer2D.kGoodFPS =3D 25
 Renderer2D.kGoodTicksBetweenFrames =3D 1000 / Renderer2D.kGoodFPS -- 1000=
=3D1sec
 Renderer2D.kMapLoadAllowedTicksPerFrame =3D Renderer2D.kGoodTicksBetweenFr=
ames =

 Renderer2D.kMapLoadStaticLoadAllowedTicks =3D Renderer2D.kGoodTicksBetween=
Frames =

-
-
 --~ local bWeHaveSpareTime =3D gSecondsSinceLastFrame*1000 < Renderer2D.kG=
oodTicksBetweenFrames
 =

+kMapLoad_2D_Terrain_Rough		=3D {prio=3D0}
+kMapLoad_2D_Water_Rough			=3D {prio=3D1} -- similar to rough water, just o=
ne poly per block
+kMapLoad_2D_Statics_Rough		=3D {prio=3D2}
+kMapLoad_2D_Multis_Rough		=3D {prio=3D3}
+kMapLoad_2D_Terrain_Detail		=3D {prio=3D4}
+kMapLoad_2D_Water_Detail		=3D {prio=3D5}
+kMapLoad_2D_Statics_Detail		=3D {prio=3D6}
+kMapLoad_2D_Multis_Detail		=3D {prio=3D7}
+kMapLoad_2D_Dynamics			=3D {prio=3D8}
 =

--- map load jobs, sorted by priority
-k2DMapJob =3D {}
-k2DMapJob.TerrainGfx	=3D {fPrio=3D1.00} -- load&gfx in one step, quick
-k2DMapJob.StaticList	=3D {fPrio=3D2.00} -- data from file, index
-k2DMapJob.StaticLoad	=3D {fPrio=3D2.01} -- load textures to texatlas etc ,=
 might be done in multiple steps
-k2DMapJob.StaticGfx		=3D {fPrio=3D2.02} =

-k2DMapJob.WaterLoad		=3D {fPrio=3D3.00} -- load ground info
-k2DMapJob.WaterCalc		=3D {fPrio=3D3.01}
-k2DMapJob.WaterGfx		=3D {fPrio=3D3.02}
-k2DMapJob.Idle			=3D {fPrio=3D9.99}
-for k,v in pairs(k2DMapJob) do v.totaltime =3D 0 v.totalcount =3D 0 end --=
 TODO : profiling ?
-
-
+dofile(libpath .. "lua/lib.mapblock.2d.statics.lua")
+--~ dofile(libpath .. "lua/lib.mapblock.2d.terrain.lua")
+--~ dofile(libpath .. "lua/lib.mapblock.2d.water.lua")
+cMapBlock_2D_Terrain	=3D CreateClass(cMapBlock)
+cMapBlock_2D_Water		=3D CreateClass(cMapBlock)
 =

 function Renderer2D:MapStep	()
+	if (not self.bMapLoadSystemInitialized) then
+		self.bMapLoadSystemInitialized =3D true
+		self.map2d_scheduler =3D CreateScheduler()
+		self.map2d_spawners =3D {}
+		self.map2d_spawners.terrain		=3D CreateMapBlockSpawner(cMapBlock_2D_Terr=
ain)
+		self.map2d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_2D_Stat=
ics)
+		self.map2d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_2D_Water)
+	end
 	self:MobileTestStep()
-	local iCurTicks =3D Client_GetTicks()
-	if (iCurTicks < Renderer2D.iNextMapStep) then return end
-	Renderer2D.iNextMapStep =3D iCurTicks + 0.1*Renderer2D.kGoodTicksBetweenF=
rames -- often, but small steps
-	=

-	-- do some work until we run out of time
-	local iAllowedTimeEnd =3D iCurTicks + Renderer2D.kMapLoadAllowedTicksPerF=
rame
-	=

-	-- check if the cam moved and blocks nearby have to be initialized
-	local xloc,yloc =3D self:GetCamPos()
-	local bx,by =3D math.floor(xloc/8 - 0.5),math.floor(yloc/8 - 0.5)
-	if (self.pMapFocusBlockX ~=3D bx or self.pMapFocusBlockY ~=3D by) then =

-		--~ print("Renderer2D:MapStep focus:",bx*8,by*8)
-		self.pMapFocusBlockX =3D bx
-		self.pMapFocusBlockY =3D by
-		local r =3D Renderer2D.kMapLoadRad
-		for ax =3D -r,r do
-		for ay =3D -r,r do
-			self:MapBlockInitIfNeeded(bx+ax,by+ay)
-		end
-		end
-		self:MapDestroyBlocksOutsideRange()
-	end
-	=

-	-- sort blocks by priority
-	table.sort(self.pMapBlocks,Renderer2D.MapBlockCmpPrio)
-
-	-- step all blocks until we run out of time
-	for k,block in ipairs(self.pMapBlocks) do =

-		if (self:MapBlockStep(block)) then -- returns true if something was done=
, otherwise don't check time
-			--~ return -- one job per frame should be enough
-			if (Client_GetTicks() > iAllowedTimeEnd) then return end -- we ran out =
of time
-		end
-	end
 end
 =

--- returns true if a < b
-function Renderer2D.MapBlockCmpPrio(a,b) return a.pJob.fPrio < b.pJob.fPri=
o end
+-- TODO : mousepick, group statics by material
+-- TODO : blendout-upper-floors : cFastBatch::cSubBatch::SetDisplayRange()=
 : raw access to index
 =

-function Renderer2D:MapBlockInitIfNeeded (bx,by) =

-	if (not self:MapGetBlock(bx,by)) then self:MapInitBlock(bx,by) end
-end
+-- statics : if (block.pStaticGroupGfx) then for k,v in pairs(block.pStati=
cGroupGfx) do v:Destroy() end block.pStaticGroupGfx =3D nil end
+-- terrain : block.gfx_terrain =3D MakeMultiTexTerrainGfx(block.bx * bla,b=
lock.by * bla) -- kMultiTexTerrainChunkSize
+-- terrain : if (block.gfx_terrain) then block.gfx_terrain:Destroy() block=
.gfx_terrain =3D nil end
+-- water : block.terrain[10*ty+tx] =3D MapGetGround(block.bx*8+tx,block.by=
*8+ty)
+-- water : analyze terrain infos and determine where water should be, Filt=
erIsMapWater(tiletype) -- 3D: chunk:SetWaterZ(tx,ty,z) ??
 =

-function Renderer2D:MapGetBlock		(bx,by) for k,block in pairs(self.pMapBlo=
cks) do if (block.bx =3D=3D bx and block.by =3D=3D by) then return block en=
d end end
-function Renderer2D:MapInitBlock	(bx,by) table.insert(self.pMapBlocks,{bx=
=3Dbx,by=3Dby,pJob=3Dk2DMapJob.TerrainGfx}) end
-
-
-function Renderer2D:MapDestroyBlocksOutsideRange	() =

-	local newarr =3D {}
-	local bx =3D self.pMapFocusBlockX
-	local by =3D self.pMapFocusBlockY
-	local r =3D Renderer2D.kMapLoadRad
-	=

-	-- check all blocks and decide what to do
-	for k,block in pairs(self.pMapBlocks) do =

-		if (block.bx >=3D bx-r and block.bx <=3D bx+r and =

-			block.by >=3D by-r and block.by <=3D by+r) then
-			-- inside, kept
-			table.insert(newarr,block)
-		else
-			-- outside, destroyed
-			self:MapDestroyBlockData(block)
-		end
-	end
-	=

-	self.pMapBlocks =3D newarr =

-end
-
--- mapchange etc
-function Renderer2D:MapClear	()
-	for k,block in pairs(self.pMapBlocks) do self:MapDestroyBlockData(block) =
end
-	self.pMapBlocks =3D {}
-end
-
--- doesn't remove the block from the list, only destroys data
-function Renderer2D:MapDestroyBlockData	(block) =

-	ArtAtlasUnLock(block) -- release atlas mat lock
-	if (block.gfx_terrain) then block.gfx_terrain:Destroy() block.gfx_terrain=
 =3D nil end
-	if (block.pStaticGroupGfx) then for k,v in pairs(block.pStaticGroupGfx) d=
o v:Destroy() end block.pStaticGroupGfx =3D nil end
-end
-
-function Renderer2D:MapBlockStep	(block) =

-	local job =3D block.pJob
-	if (not job.fun) then return end
-	local tstart =3D Client_GetTicks() -- profiling
-	job.fun(block) =

-	job.totaltime  =3D job.totaltime  + (Client_GetTicks() - tstart)
-	job.totalcount =3D job.totalcount + 1
-	return true =

-end
-
--- terrain : load and create gfx
-function k2DMapJob.TerrainGfx.fun	(block)
-	--~ print("MapBlockStep terrain",block.bx,block.by)
-	if ((block.bx % kMultiTexTerrainChunkSize) =3D=3D 0 and (block.by % kMult=
iTexTerrainChunkSize) =3D=3D 0) then
-		block.gfx_terrain =3D MakeMultiTexTerrainGfx(block.bx,block.by)
-	end
-	block.pJob =3D k2DMapJob.StaticList
-end
-
--- statics : load infos from file
-function k2DMapJob.StaticList.fun	(block)
-	block.statics =3D MapGetBlockStatics(block.bx,block.by)
-	block.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Ar=
tAtlasLoadAndLock)
-	block.pStaticGroups =3D {}
-	block.iStaticLoadingIndex =3D 1
-	block.iStaticLoadingIndexMax =3D table.getn(block.statics)
-	block.pJob =3D k2DMapJob.StaticLoad
-end
-
--- statics : analyze, load textures to atlas
-function k2DMapJob.StaticLoad.fun	(block)
-	-- load atlas : artid-hue
-	local iBlockLoadTicks =3D Client_GetTicks()
-	for i =3D block.iStaticLoadingIndex,block.iStaticLoadingIndexMax do
-		block.iStaticLoadingIndex =3D i+1
-		local static =3D block.statics[i]
-		local iTileTypeID	=3D static.artid
-		local iHue			=3D static.hue
-		=

-		local arr =3D block.pStaticAtlasMats[iTileTypeID]
-		if (not arr) then arr =3D {} block.pStaticAtlasMats[iTileTypeID] =3D arr=
 end
-		=

-		-- get/load atlas mat
-		local pAtlasPiece =3D arr[iHue]
-		local bCheckTime =3D false
-		if (not pAtlasPiece) then
-			pAtlasPiece =3D ArtAtlasLoadAndLock(iTileTypeID+0x4000,iHue,block)
-			arr[iHue] =3D pAtlasPiece
-			bCheckTime =3D true
-		end
-		=

-		-- add to matname group
-		if (pAtlasPiece) then
-			local atlas =3D pAtlasPiece.atlas
-			local group =3D block.pStaticGroups[atlas]
-			if (not group) then group =3D {} block.pStaticGroups[atlas] =3D group e=
nd
-			=

-			table.insert(group,static)
-		end
-		=

-		-- if we are out of time, exit for now, and continue loading in the next=
 frame
-		if (bCheckTime and Client_GetTicks() - iBlockLoadTicks > Renderer2D.kMap=
LoadStaticLoadAllowedTicks) then return end --  print("k2DMapJob.StaticLoad=
 split")
-	end
-	block.pJob =3D k2DMapJob.StaticGfx
-end
-
--- statics : create gfx
-function k2DMapJob.StaticGfx.fun	(block) =

-	block.pStaticGroupGfx =3D {}
-	-- -so 1420,1550
-	-- -so 552,2088
-	-- -so 632,1488
-	for atlas,group in pairs(block.pStaticGroups) do
-		local matname =3D ArtAtlasLoadMaterial(atlas,Renderer2D.kAtlasBaseMateri=
al)
-		-- TODO : sort by z for blendout upper floors
-		local spritecount =3D table.getn(group)
-		local x,y,z =3D gCurrentRenderer:UOPosToLocal(block.bx*8,block.by*8,0)
-		local gfx =3D CreateRootGfx3D()
-		table.insert(block.pStaticGroupGfx,gfx)
-		gfx:SetPosition(x,y,z)
-		gfx:SetSimpleRenderable()
-		gfx:SetMaterial(matname)
-		=

-		-- generate geometry
-		local vc =3D 4*spritecount
-		local ic =3D 6*spritecount
-		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-		vc =3D 0
-		for k,static in pairs(group) do
-			local pAtlasPiece =3D block.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
-			local pTileType =3D GetStaticTileType(static.artid)
-			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-			local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileTy=
pe.miHeight + 0.001*static.iBlockIndex)  -- + =3D nearer to cam      -- gue=
ss this works ok for now, but far from ideal
-			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

-			y =3D y +   1 * fOrderCorrection + 1
-			z =3D z + kSq2 * fOrderCorrection
-			local w =3D k2D_ScaleW05 * pAtlasPiece.w
-			local h =3D k2D_ScaleH   * pAtlasPiece.h
-			gfx:RenderableVertex(x-w,y-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
-			gfx:RenderableVertex(x+w,y+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
-			gfx:RenderableVertex(x-w,y-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
-			gfx:RenderableVertex(x+w,y+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
-			gfx:RenderableIndex3(vc+0,vc+2,vc+1)
-			gfx:RenderableIndex3(vc+1,vc+2,vc+3)
-			vc =3D vc + 4
-		end
-		gfx:RenderableEnd()
-	end
-	block.pJob =3D k2DMapJob.WaterLoad
-end
-
--- water : load terrain infos from file
-function k2DMapJob.WaterLoad.fun	(block) =

-	block.terrain =3D {}
-	for ty =3D 0,7 do
-	for tx =3D 0,7 do
-		block.terrain[10*ty+tx] =3D MapGetGround(block.bx*8+tx,block.by*8+ty)
-	end
-	end
-	block.pJob =3D k2DMapJob.WaterCalc
-end
-
--- water : analyze terrain infos and determine where water should be
-function k2DMapJob.WaterCalc.fun	(block)
-	-- FilterIsMapWater(tiletype) -- 3D: chunk:SetWaterZ(tx,ty,z) ??
-	block.pJob =3D k2DMapJob.WaterGfx
-end
-
--- water : create gfx
-function k2DMapJob.WaterGfx.fun		(block)
-	block.pJob =3D k2DMapJob.Idle
-end
-
-

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Mon Aug  4 12:20:34 2008
@@ -22,7 +22,7 @@
 function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)
 	local n =3D iTileTypeID.."_"..iHue
 	local o =3D gArtAtlasCache[n] =

-	if (o ~=3D nil) then print("cache hit") return o end
+	if (o ~=3D nil) then return o end
 	gArtAtlasCache[n] =3D false
 	=

 	-- load image



From no-reply at zwischenwelt.org  Mon Aug  4 13:10:59 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 11:10:59 -0000
Subject: [Iris-commit] [IRIS] r2343 - in /trunk/lua: lib.2d.map.lua
 lib.mapblock.2d.statics.lua lib.mapblock.2d.terrain.lua
 lib.mapblock.base.lua lib.mapblock.spawner.lua
Message-ID: <20080804111102.011521C185D8@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug  4 13:10:58 2008
New Revision: 2343

Log:
working on maploading

Added:
    trunk/lua/lib.mapblock.2d.terrain.lua
Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/lib.mapblock.spawner.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon Aug  4 13:10:58 2008
@@ -19,10 +19,9 @@
 kMapLoad_2D_Multis_Detail		=3D {prio=3D7}
 kMapLoad_2D_Dynamics			=3D {prio=3D8}
 =

-dofile(libpath .. "lua/lib.mapblock.2d.statics.lua")
---~ dofile(libpath .. "lua/lib.mapblock.2d.terrain.lua")
---~ dofile(libpath .. "lua/lib.mapblock.2d.water.lua")
-cMapBlock_2D_Terrain	=3D CreateClass(cMapBlock)
+dofile(libpath .. "lib.mapblock.2d.statics.lua")
+dofile(libpath .. "lib.mapblock.2d.terrain.lua")
+--~ dofile(libpath .. "lib.mapblock.2d.water.lua")
 cMapBlock_2D_Water		=3D CreateClass(cMapBlock)
 =

 function Renderer2D:MapStep	()
@@ -32,17 +31,19 @@
 		self.map2d_spawners =3D {}
 		self.map2d_spawners.terrain		=3D CreateMapBlockSpawner(cMapBlock_2D_Terr=
ain)
 		self.map2d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_2D_Stat=
ics)
-		self.map2d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_2D_Water)
+		--~ self.map2d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_2D_Wa=
ter)
 	end
 	self:MobileTestStep()
+	=

+	local t =3D Client_GetTicks()
+	local xloc,yloc,zloc =3D self:GetCamPos()
+	for k,spawner in pairs(self.map2d_spawners) do spawner:Step(t,xloc,yloc,z=
loc) end
+	self.map2d_scheduler:Step()
 end
 =

 -- TODO : mousepick, group statics by material
 -- TODO : blendout-upper-floors : cFastBatch::cSubBatch::SetDisplayRange()=
 : raw access to index
 =

--- statics : if (block.pStaticGroupGfx) then for k,v in pairs(block.pStati=
cGroupGfx) do v:Destroy() end block.pStaticGroupGfx =3D nil end
--- terrain : block.gfx_terrain =3D MakeMultiTexTerrainGfx(block.bx * bla,b=
lock.by * bla) -- kMultiTexTerrainChunkSize
--- terrain : if (block.gfx_terrain) then block.gfx_terrain:Destroy() block=
.gfx_terrain =3D nil end
 -- water : block.terrain[10*ty+tx] =3D MapGetGround(block.bx*8+tx,block.by=
*8+ty)
 -- water : analyze terrain infos and determine where water should be, Filt=
erIsMapWater(tiletype) -- 3D: chunk:SetWaterZ(tx,ty,z) ??
 =


Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Mon Aug  4 13:10:58 2008
@@ -7,16 +7,19 @@
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
 =

 function cMapBlock_2D_Statics:ClearDetail ()
-
+	if (self.pStaticGroupGfx) then for k,v in pairs(self.pStaticGroupGfx) do =
v:Destroy() end self.pStaticGroupGfx =3D nil end
 end
 =

 function cMapBlock_2D_Statics:WorkStep_LoadDetail ()
 	-- statics : load infos from file
+	local block =3D self
 	block.statics =3D MapGetBlockStatics(block.bx,block.by)
 	block.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Ar=
tAtlasLoadAndLock)
 	block.pStaticGroups =3D {}
 	block.iStaticLoadingIndex =3D 1
 	block.iStaticLoadingIndexMax =3D table.getn(block.statics)
+	=

+	self:Yield()
 =

 	-- statics : analyze, load textures to atlas
 	-- load atlas : artid-hue
@@ -49,8 +52,10 @@
 		end
 		=

 		-- if we are out of time, exit for now, and continue loading in the next=
 frame
-		if (bCheckTime and Client_GetTicks() - iBlockLoadTicks > Renderer2D.kMap=
LoadStaticLoadAllowedTicks) then return end
+		if (bCheckTime) then self:YieldIfOverTime() end
 	end
+	=

+	self:Yield()
 	=

 	-- statics : create gfx
 	block.pStaticGroupGfx =3D {}

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Mon Aug  4 13:10:58 2008
@@ -13,8 +13,9 @@
 	self.co =3D coroutine.create(self.WorkThread) =

 end
 =

-function cMapBlock:SetPriority	(prio)	self.prio =3D prio end
-function cMapBlock:Yield		()		coroutine.yield() end
+function cMapBlock:SetPriority		(prio)	self.prio =3D prio end
+function cMapBlock:Yield			()		coroutine.yield() end
+function cMapBlock:YieldIfOverTime	()		if (Client_GetTicks() > self.t_end)=
 then self:Yield() end end
 =

 function cMapBlock:Work			(t_end)	self.t_end =3D t_end coroutine.resume(se=
lf.co,self) end
 =


Modified: trunk/lua/lib.mapblock.spawner.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.spawner.lua (original)
+++ trunk/lua/lib.mapblock.spawner.lua Mon Aug  4 13:10:58 2008
@@ -14,13 +14,13 @@
 end
 =

 -- creates new blocks in area near cam if needed, releases old blocks
-function cMapBlockSpawner:Step	(t) =

+-- params : time, focuspos
+function cMapBlockSpawner:Step	(t,x,y,z) =

 	if ((self.iNextStep or 0) > t) then return end
 	self.iNextStep =3D t + self.kStepInterval
 	=

-	local center_x,center_y =3D TODO()  -- cam ? rather focus point for 3rdpe=
rson
-	local bx =3D floor(center_x/self.iBlockSize + 0.5)
-	local by =3D floor(center_y/self.iBlockSize + 0.5)
+	local bx =3D floor(x/self.iBlockSize + 0.5)
+	local by =3D floor(y/self.iBlockSize + 0.5)
 	if (self.pMapFocusBlockX ~=3D bx or =

 		self.pMapFocusBlockY ~=3D by) then =

 		self.pMapFocusBlockX =3D bx



From no-reply at zwischenwelt.org  Mon Aug  4 13:26:53 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 11:26:53 -0000
Subject: [Iris-commit] [IRIS] r2344 - in /trunk/lua: lib.2d.map.lua
 lib.mapblock.2d.statics.lua lib.mapblock.2d.terrain.lua
 lib.mapblock.base.lua lib.mapblock.scheduler.lua lib.mapblock.spawner.lua
Message-ID: <20080804112654.5895D1C185D8@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug  4 13:26:52 2008
New Revision: 2344

Log:
maploader works for 2d renderer

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.2d.terrain.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/lib.mapblock.scheduler.lua
    trunk/lua/lib.mapblock.spawner.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon Aug  4 13:26:52 2008
@@ -19,26 +19,40 @@
 kMapLoad_2D_Multis_Detail		=3D {prio=3D7}
 kMapLoad_2D_Dynamics			=3D {prio=3D8}
 =

+dofile(libpath .. "lib.mapblock.scheduler.lua")
+dofile(libpath .. "lib.mapblock.spawner.lua")
+dofile(libpath .. "lib.mapblock.base.lua")
 dofile(libpath .. "lib.mapblock.2d.statics.lua")
 dofile(libpath .. "lib.mapblock.2d.terrain.lua")
 --~ dofile(libpath .. "lib.mapblock.2d.water.lua")
 cMapBlock_2D_Water		=3D CreateClass(cMapBlock)
 =

-function Renderer2D:MapStep	()
+cMapBlock_2D_Terrain.kLOD_Detail		=3D kMapLoad_2D_Terrain_Detail
+cMapBlock_2D_Terrain.kLOD_Rough			=3D kMapLoad_2D_Terrain_Rough
+cMapBlock_2D_Statics.kLOD_Detail		=3D kMapLoad_2D_Statics_Detail
+cMapBlock_2D_Statics.kLOD_Rough			=3D kMapLoad_2D_Statics_Rough
+
+
+function Renderer2D:MapStep		()
 	if (not self.bMapLoadSystemInitialized) then
 		self.bMapLoadSystemInitialized =3D true
-		self.map2d_scheduler =3D CreateScheduler()
+		local scheduler =3D CreateScheduler()
+		self.map2d_scheduler =3D scheduler
 		self.map2d_spawners =3D {}
-		self.map2d_spawners.terrain		=3D CreateMapBlockSpawner(cMapBlock_2D_Terr=
ain)
-		self.map2d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_2D_Stat=
ics)
-		--~ self.map2d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_2D_Wa=
ter)
+		self.map2d_spawners.terrain		=3D CreateMapBlockSpawner(cMapBlock_2D_Terr=
ain,scheduler)
+		self.map2d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_2D_Stat=
ics,scheduler)
+		--~ self.map2d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_2D_Wa=
ter,scheduler)
 	end
 	self:MobileTestStep()
 	=

 	local t =3D Client_GetTicks()
 	local xloc,yloc,zloc =3D self:GetCamPos()
 	for k,spawner in pairs(self.map2d_spawners) do spawner:Step(t,xloc,yloc,z=
loc) end
-	self.map2d_scheduler:Step()
+	self.map2d_scheduler:Step(xloc,yloc,zloc)
+end
+
+function Renderer2D:MapClear	()
+	for k,spawner in pairs(self.map2d_spawners or {}) do spawner:Clear() end
 end
 =

 -- TODO : mousepick, group statics by material

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Mon Aug  4 13:26:52 2008
@@ -7,10 +7,12 @@
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
 =

 function cMapBlock_2D_Statics:ClearDetail ()
+	print("cMapBlock_2D_Statics:ClearDetail")
 	if (self.pStaticGroupGfx) then for k,v in pairs(self.pStaticGroupGfx) do =
v:Destroy() end self.pStaticGroupGfx =3D nil end
 end
 =

 function cMapBlock_2D_Statics:WorkStep_LoadDetail ()
+	print("cMapBlock_2D_Statics:WorkStep_LoadDetail")
 	-- statics : load infos from file
 	local block =3D self
 	block.statics =3D MapGetBlockStatics(block.bx,block.by)

Modified: trunk/lua/lib.mapblock.2d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.2d.terrain.lua Mon Aug  4 13:26:52 2008
@@ -3,10 +3,12 @@
 cMapBlock_2D_Terrain.iLoadRadius	=3D 3 -- in iBlockSize-blocks
 =

 function cMapBlock_2D_Terrain:ClearDetail ()
+	print("cMapBlock_2D_Terrain:ClearDetail")
 	if (self.gfx_terrain) then self.gfx_terrain:Destroy() self.gfx_terrain =
=3D nil end
 end
 =

 function cMapBlock_2D_Terrain:WorkStep_LoadDetail ()
+	print("cMapBlock_2D_Terrain:WorkStep_LoadDetail")
 	local bs =3D kMultiTexTerrainChunkSize
 	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs)
 end

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Mon Aug  4 13:26:52 2008
@@ -10,6 +10,7 @@
 function cMapBlock:Init			(bx,by)		=

 	self.bx =3D bx
 	self.by =3D by
+	self.prio =3D kSchedulerIdlePriority
 	self.co =3D coroutine.create(self.WorkThread) =

 end
 =

@@ -41,13 +42,19 @@
 function cMapBlock:Clear () self:ClearRough() self:ClearDetail() end -- re=
move all gfx
 =

 -- called every frame, instant actions (destroy gfx), evaluate priority =

-function cMapBlock:ShortStep (t)
+function cMapBlock:ShortStep (t,xloc,yloc,zloc)
 	if ((self.iNextLODUpdate or 0) < t) then
 		self.iNextLODUpdate =3D t + self.kLODUpdateInterval
-		local camdist =3D MapGetDistToCam(self.centerx,self.centery)
+		=

+		local bx =3D floor(xloc/self.iBlockSize + 0.5)
+		local by =3D floor(yloc/self.iBlockSize + 0.5)
+		=

+		local camdist =3D hypot(	(self.bx + 0.5)*self.iBlockSize-xloc,
+								(self.by + 0.5)*self.iBlockSize-yloc)
 		local newlod
 		if (	camdist <  self.kMaxDist_Detail ) then newlod =3D self.kLOD_Detail =

 		elseif (camdist <  self.kMaxDist_Visible) then newlod =3D self.kLOD_Roug=
h end
+		if (newlod or 1) then print("cMapBlock:ShortStep",newlod,camdist,self.kM=
axDist_Detail) end
 		=

 		if (newlod ~=3D self.lod) then =

 			self:SetPriority(newlod and newlod.prio or kSchedulerIdlePriority)

Modified: trunk/lua/lib.mapblock.scheduler.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.scheduler.lua (original)
+++ trunk/lua/lib.mapblock.scheduler.lua Mon Aug  4 13:26:52 2008
@@ -19,14 +19,14 @@
 end
 =

 -- internal, search current index in list
-function cScheduler:_FindProcessPos	(process) for k,process2 in ipairs(sel=
f.pProcessList) do if (process2 =3D=3D process) then return k end end =

+function cScheduler:_FindProcessPos	(process) for k,process2 in ipairs(sel=
f.pProcessList) do if (process2 =3D=3D process) then return k end end end =

 =

-function cScheduler:Step		()
+function cScheduler:Step		(xloc,yloc,zloc)
 	local t =3D Client_GetTicks()
 	local t_end =3D t + self.kAllowedTicksPerFrame
 	=

 	-- shortsteps, re-evaluate prio, release gfx
-	for k,process in ipairs(self.pProcessList) do process:ShortStep(t) end =

+	for k,process in ipairs(self.pProcessList) do process:ShortStep(t,xloc,yl=
oc,zloc) end =

 	=

 	-- sort by priority
 	table.sort(self.pProcessList,self.CmpProcess)

Modified: trunk/lua/lib.mapblock.spawner.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.spawner.lua (original)
+++ trunk/lua/lib.mapblock.spawner.lua Mon Aug  4 13:26:52 2008
@@ -15,12 +15,12 @@
 =

 -- creates new blocks in area near cam if needed, releases old blocks
 -- params : time, focuspos
-function cMapBlockSpawner:Step	(t,x,y,z) =

+function cMapBlockSpawner:Step	(t,xloc,yloc) =

 	if ((self.iNextStep or 0) > t) then return end
 	self.iNextStep =3D t + self.kStepInterval
 	=

-	local bx =3D floor(x/self.iBlockSize + 0.5)
-	local by =3D floor(y/self.iBlockSize + 0.5)
+	local bx =3D floor(xloc/self.iBlockSize + 0.5)
+	local by =3D floor(yloc/self.iBlockSize + 0.5)
 	if (self.pMapFocusBlockX ~=3D bx or =

 		self.pMapFocusBlockY ~=3D by) then =

 		self.pMapFocusBlockX =3D bx
@@ -57,7 +57,8 @@
 	for block,v in pairs(self.pMapBlocks) do if (block.bx =3D=3D bx and block=
.by =3D=3D by) then return block end end =

 end
 =

-function cMapBlockSpawner:CreateMapBlock	(bx,by) =

+function cMapBlockSpawner:CreateMapBlock	(bx,by)
+	print("cMapBlockSpawner:CreateMapBlock",bx,by)
 	local block =3D CreateClassInstance(self.pBlockClass)
 	block:Init(bx,by)
 	=




From no-reply at zwischenwelt.org  Mon Aug  4 13:37:07 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 11:37:07 -0000
Subject: [Iris-commit] [IRIS] r2345 - in /trunk/lua:
 lib.mapblock.2d.statics.lua lib.mapblock.2d.terrain.lua
 lib.mapblock.base.lua lib.mapblock.spawner.lua
Message-ID: <20080804113712.575761524030@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug  4 13:37:06 2008
New Revision: 2345

Log:
mapload for 2d improved

Modified:
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.2d.terrain.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/lib.mapblock.spawner.lua

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Mon Aug  4 13:37:06 2008
@@ -7,7 +7,7 @@
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
 =

 function cMapBlock_2D_Statics:ClearDetail ()
-	print("cMapBlock_2D_Statics:ClearDetail")
+	--~ print("cMapBlock_2D_Statics:ClearDetail")
 	if (self.pStaticGroupGfx) then for k,v in pairs(self.pStaticGroupGfx) do =
v:Destroy() end self.pStaticGroupGfx =3D nil end
 end
 =


Modified: trunk/lua/lib.mapblock.2d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.2d.terrain.lua Mon Aug  4 13:37:06 2008
@@ -1,14 +1,16 @@
 cMapBlock_2D_Terrain	=3D CreateClass(cMapBlock)
 cMapBlock_2D_Terrain.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_2D_Terrain.iLoadRadius	=3D 3 -- in iBlockSize-blocks
+cMapBlock_2D_Terrain.iLoadRadius	=3D 4 -- in iBlockSize-blocks
+--~ cMapBlock_2D_Terrain.kMaxDist_Visible		=3D 8*4 -- camdist in tiles  se=
e mapblock.base for default
+--~ cMapBlock_2D_Terrain.kMaxDist_Detail		=3D 8*2 -- camdist in tiles
 =

 function cMapBlock_2D_Terrain:ClearDetail ()
-	print("cMapBlock_2D_Terrain:ClearDetail")
+	--~ print("cMapBlock_2D_Terrain:ClearDetail")
 	if (self.gfx_terrain) then self.gfx_terrain:Destroy() self.gfx_terrain =
=3D nil end
 end
 =

 function cMapBlock_2D_Terrain:WorkStep_LoadDetail ()
-	print("cMapBlock_2D_Terrain:WorkStep_LoadDetail")
+	print("cMapBlock_2D_Terrain:WorkStep_LoadDetail",self.bx,self.by)
 	local bs =3D kMultiTexTerrainChunkSize
 	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs)
 end

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Mon Aug  4 13:37:06 2008
@@ -3,8 +3,8 @@
 cMapBlock =3D CreateClass()
 cMapBlock.kLOD_Detail			=3D nil -- set to something with .prio =3D value
 cMapBlock.kLOD_Rough			=3D nil
-cMapBlock.kMaxDist_Visible		=3D 8*4 -- camdist in tiles
-cMapBlock.kMaxDist_Detail		=3D 8*2 -- camdist in tiles
+cMapBlock.kMaxDist_Visible		=3D 8*6 -- camdist in tiles
+cMapBlock.kMaxDist_Detail		=3D 8*3 -- camdist in tiles
 cMapBlock.kLODUpdateInterval	=3D 500 -- msec
 =

 function cMapBlock:Init			(bx,by)		=

@@ -54,7 +54,7 @@
 		local newlod
 		if (	camdist <  self.kMaxDist_Detail ) then newlod =3D self.kLOD_Detail =

 		elseif (camdist <  self.kMaxDist_Visible) then newlod =3D self.kLOD_Roug=
h end
-		if (newlod or 1) then print("cMapBlock:ShortStep",newlod,camdist,self.kM=
axDist_Detail) end
+		--~ if (newlod) then print("cMapBlock:ShortStep",newlod,camdist,self.kMa=
xDist_Detail) end
 		=

 		if (newlod ~=3D self.lod) then =

 			self:SetPriority(newlod and newlod.prio or kSchedulerIdlePriority)

Modified: trunk/lua/lib.mapblock.spawner.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.spawner.lua (original)
+++ trunk/lua/lib.mapblock.spawner.lua Mon Aug  4 13:37:06 2008
@@ -58,7 +58,7 @@
 end
 =

 function cMapBlockSpawner:CreateMapBlock	(bx,by)
-	print("cMapBlockSpawner:CreateMapBlock",bx,by)
+	--~ print("cMapBlockSpawner:CreateMapBlock",bx,by)
 	local block =3D CreateClassInstance(self.pBlockClass)
 	block:Init(bx,by)
 	=




From no-reply at zwischenwelt.org  Mon Aug  4 15:10:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 13:10:33 -0000
Subject: [Iris-commit] [IRIS] r2346 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.2d.map.lua lua/lib.gump.samples.lua lua/lib.mapblock.base.lua
 widgets/widget.uoedittext.lua widgets/widget.uotext.lua
Message-ID: <20080804131033.355B61C185D8@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug  4 15:10:32 2008
New Revision: 2346

Log:
serverside gumps : fixed edittext

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.gump.samples.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/widgets/widget.uoedittext.lua
    trunk/widgets/widget.uotext.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Mon Aug  4 15:10:32 2008
@@ -71,7 +71,7 @@
 		HealthBarSetWarMode()
 	end
 	=

-	local testgump,x,y,kDebugName =3D kGumpSample_VM_ChatMenu,0,300,"kGumpSam=
ple_RuneBook2"
+	local testgump,x,y,kDebugName =3D kGumpSample_PM,0,300,"bla"
 	local d2 =3D GumpParser_New(testgump,false) -- d2:SetPos(x,y) d2.sDebugNa=
me =3D kDebugName
 	=

 	--~ local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) d=
ialog:SetLeftTop(400,100)

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Mon Aug  4 15:10:32 2008
@@ -10,7 +10,7 @@
 --~ local bWeHaveSpareTime =3D gSecondsSinceLastFrame*1000 < Renderer2D.kG=
oodTicksBetweenFrames
 =

 kMapLoad_2D_Terrain_Rough		=3D {prio=3D0}
-kMapLoad_2D_Water_Rough			=3D {prio=3D1} -- similar to rough water, just o=
ne poly per block
+kMapLoad_2D_Water_Rough			=3D {prio=3D1} -- similar to rough terrain, just=
 one poly per block
 kMapLoad_2D_Statics_Rough		=3D {prio=3D2}
 kMapLoad_2D_Multis_Rough		=3D {prio=3D3}
 kMapLoad_2D_Terrain_Detail		=3D {prio=3D4}

Modified: trunk/lua/lib.gump.samples.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.gump.samples.lua (original)
+++ trunk/lua/lib.gump.samples.lua Mon Aug  4 15:10:32 2008
@@ -1,4 +1,22 @@
 -- a few recorded example gumps for testing
+
+
+
+kGumpSample_PM =3D {
+	Data=3D"{ resizepic 0 0 5120 300 255 }{ htmlgump 0 10 300 21 0 0 0 }{ gum=
ppic 30 12 57 }{ gumppic 240 12 59 }{ gumppictiled 30 30 240 21 3004 }{ tex=
tentry 30 30 240 21 1152 7442 1 }{ gumppictiled 20 60 260 150 3004 }{ texte=
ntry 20 60 260 150 1152 13108 1 }{ button 50 225 9704 9705 1 0 13956 }{ gum=
ppic 140 225 9026 hue=3D1152 }{ button 144 229 10006 10006 1 0 10659 }{ htm=
lgump 215 225 50 21 2 0 0 }{ button 200 228 10006 10006 1 0 14175 }{ page 0=
 }{ gumppic 300 255 10460 hue=3D903 }{ button 310 259 2362 2362 1 0 7310 }{=
 button 310 270 2360 2360 1 0 19710 }{ button 295 257 9766 9767 1 0 145 }{ =
button 319 257 9762 9763 1 0 5685 }{ button 295 268 9766 9767 1 0 10529 }{ =
button 319 268 9762 9763 1 0 13966 }",
+
+
+	textline=3D{
+	[1]=3D"",
+	[2]=3D"<BASEFONT COLOR=3D#FFFFFF><BASEFONT COLOR=3D#FFFFFF>Send",
+	[0]=3D"<BASEFONT COLOR=3D#FFFFFF><BASEFONT COLOR=3D#FFFFFF><CENTER>Messag=
e to Hagish",
+	},
+	textline_unicode=3D{
+	[1]=3D{},
+	[2]=3D{60,66,65,83,69,70,79,78,84,32,67,79,76,79,82,61,35,70,70,70,70,70,=
70,62,60,66,65,83,69,70,79,78,84,32,67,79,76,79,82,61,35,70,70,70,70,70,70,=
62,83,101,110,100,},
+	[0]=3D{60,66,65,83,69,70,79,78,84,32,67,79,76,79,82,61,35,70,70,70,70,70,=
70,62,60,66,65,83,69,70,79,78,84,32,67,79,76,79,82,61,35,70,70,70,70,70,70,=
62,60,67,69,78,84,69,82,62,77,101,115,115,97,103,101,32,116,111,32,72,97,10=
3,105,115,104,},
+	},
+}
 =

 =

 	=


Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Mon Aug  4 15:10:32 2008
@@ -67,8 +67,20 @@
 -- a single step during the thread
 function cMapBlock:WorkStep ()
 	if (self.lod_finished =3D=3D self.lod) then return end -- nothing to do
-	if (self.lod =3D=3D self.kLOD_Rough ) then self:WorkStep_LoadRough()  sel=
f:ClearDetail() self.lod_finished =3D self.lod return end
-	if (self.lod =3D=3D self.kLOD_Detail) then self:WorkStep_LoadDetail() sel=
f:ClearRough() self.lod_finished =3D self.lod return end
+	if (self.lod =3D=3D self.kLOD_Rough ) then =

+		self:WorkStep_LoadRough()  =

+		self:ClearDetail() =

+		self.lod_finished =3D self.lod =

+		self:SetPriority(kSchedulerIdlePriority)
+		return =

+	end
+	if (self.lod =3D=3D self.kLOD_Detail) then =

+		self:WorkStep_LoadDetail() =

+		self:ClearRough() =

+		self.lod_finished =3D self.lod =

+		self:SetPriority(kSchedulerIdlePriority)
+		return =

+	end
 end
 =

 function cMapBlock:ClearRough   () end -- override me !

Modified: trunk/widgets/widget.uoedittext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoedittext.lua (original)
+++ trunk/widgets/widget.uoedittext.lua Mon Aug  4 15:10:32 2008
@@ -18,25 +18,21 @@
 	=

 	local p =3D params
 	self.textwidget =3D self:CreateChild("UOText",{x=3D0,y=3D0,width=3Dp.widt=
h,height=3Dp.height,textline_id=3Dp.textline_id_default,hue=3Dp.hue},textli=
nes)
+	--~ self.textwidget:SetUOHtml("blabla")
 	self:SetText(self.textwidget:GetUOHtml())
 	self:UpdateTextDisplay()
+	self:SetSize(p.width,p.height)
+	self:SetPos(p.x,p.y)
 end
 =

 function gWidgetPrototype.UOEditText:GetReturnVal	() return self.params.re=
turn_value end
 =

 function gWidgetPrototype.UOEditText:GetPlainText ()
-	if (type(self.text) =3D=3D "table") then
-		local plaintext =3D ""
-		for k,unicode_charcode in ipairs(self.text) do =

-			plaintext =3D plaintext .. string.format("%c",unicode_charcode) -- non-=
asci specifics are lost
-		end
-		return plaintext
-	end
-	return self.text
+	return (type(self.text) =3D=3D "table") and UnicodeToPlainText_KeepLength=
(self.text) or self.text
 end
 =

 function gWidgetPrototype.UOEditText:GetText ()		return self.text end -- w=
arning ! might be an array of unicode charcodes (usually)
-function gWidgetPrototype.UOEditText:SetText (text)	self.text =3D text sel=
f:UpdateTextDisplay() end
+function gWidgetPrototype.UOEditText:SetText (text) self.text =3D text sel=
f:UpdateTextDisplay() end
 =

 function gWidgetPrototype.UOEditText:UpdateTextDisplay () self.textwidget:=
SetUOHtml(self.text) end
 =

@@ -53,8 +49,10 @@
 end
 =

 function gWidgetPrototype.UOEditText:AppendChar			(char) =

+	--~ print("UOEditText:AppendChar",type(self.text) =3D=3D "table",char)
 	if (type(self.text) =3D=3D "table") then
-		table.insert(self.text,string.byte(char,1))
+		local c =3D string.byte(char,1)
+		if (c) then table.insert(self.text,c) end
 	else
 		self.text =3D self.text .. char
 	end

Modified: trunk/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uotext.lua (original)
+++ trunk/widgets/widget.uotext.lua Mon Aug  4 15:10:32 2008
@@ -42,6 +42,8 @@
 -- see also HtmlParser in lib.gumpparser.lua
 function gWidgetPrototype.UOText:GetUOHtml () return self.uohtml end
 function gWidgetPrototype.UOText:SetUOHtml (uohtml,bParseHTML)
+	local bIsUniCode =3D type(uohtml) =3D=3D "table"
+	if (bIsUniCode) then uohtml =3D CopyArray(uohtml) end
 	self.uohtml =3D uohtml
 	local fontsize =3D nil
 	local fontid =3D 1
@@ -52,7 +54,6 @@
 	if (self.params.hue) then local r,g,b =3D gHueLoader:GetColor(self.params=
.hue,31) col =3D {r=3Dr,g=3Dg,b=3Db} end
 	=

 	local glyphlist =3D self.glyphlist
-	local bIsUniCode =3D type(uohtml) =3D=3D "table"
 	local plaintext =3D bIsUniCode and UnicodeToPlainText_KeepLength(uohtml) =
or uohtml
 	=

 	glyphlist:Clear()
@@ -112,6 +113,7 @@
 		end
 	end
 	self:UpdateGeometry()
+	self:SetPos(self:GetPos())
 end
 --[[
 -- vetus-mundus changelog : big text =3D htmlgump.. todo : clip



From no-reply at zwischenwelt.org  Mon Aug  4 15:38:28 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 13:38:28 -0000
Subject: [Iris-commit] [IRIS] r2347 - in /trunk/widgets:
	widget.uoedittext.lua widget.uotext.lua
Message-ID: <20080804133828.F0B7A1C1825C@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug  4 15:38:28 2008
New Revision: 2347

Log:
clip-bug solved

Modified:
    trunk/widgets/widget.uoedittext.lua
    trunk/widgets/widget.uotext.lua

Modified: trunk/widgets/widget.uoedittext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoedittext.lua (original)
+++ trunk/widgets/widget.uoedittext.lua Mon Aug  4 15:38:28 2008
@@ -18,11 +18,9 @@
 	=

 	local p =3D params
 	self.textwidget =3D self:CreateChild("UOText",{x=3D0,y=3D0,width=3Dp.widt=
h,height=3Dp.height,textline_id=3Dp.textline_id_default,hue=3Dp.hue},textli=
nes)
-	--~ self.textwidget:SetUOHtml("blabla")
-	self:SetText(self.textwidget:GetUOHtml())
-	self:UpdateTextDisplay()
 	self:SetSize(p.width,p.height)
 	self:SetPos(p.x,p.y)
+	self:SetText(self.textwidget:GetUOHtml())
 end
 =

 function gWidgetPrototype.UOEditText:GetReturnVal	() return self.params.re=
turn_value end

Modified: trunk/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uotext.lua (original)
+++ trunk/widgets/widget.uotext.lua Mon Aug  4 15:38:28 2008
@@ -35,7 +35,7 @@
 	--~ if (params.width) then local l,t,r,b =3D self:GetRelBounds() self:Set=
Clip(0,0,params.width,params.height) end
 	=

 	local w,h =3D params.width,params.height
-	if (w) then local l,t,r,b =3D self:GetRelBounds() self:SetClip(l-xoff,t-y=
off,l-xoff+params.width,t+params.height-yoff) end
+	if (w) then local l,t,r,b =3D self:GetRelBounds() self:SetClip(l-xoff,t-y=
off,l-xoff+w,t-yoff+h) end
 end
 =

 -- TODO : uohtml might be an array of ints for unicode (textline) instead =
of text (no html then)
@@ -113,7 +113,6 @@
 		end
 	end
 	self:UpdateGeometry()
-	self:SetPos(self:GetPos())
 end
 --[[
 -- vetus-mundus changelog : big text =3D htmlgump.. todo : clip



From no-reply at zwischenwelt.org  Mon Aug  4 17:05:52 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 15:05:52 -0000
Subject: [Iris-commit] [IRIS] r2348 - in /trunk/lua/gui: gui.amount.lua
	gui.helper.lua gui.main.lua
Message-ID: <20080804150552.712BA1524030@zwischenwelt.org>

Author: hagish
Date: Mon Aug  4 17:05:51 2008
New Revision: 2348

Log:
first version of the amount dialog, currently not working

Added:
    trunk/lua/gui/gui.amount.lua
Modified:
    trunk/lua/gui/gui.helper.lua
    trunk/lua/gui/gui.main.lua

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Mon Aug  4 17:05:51 2008
@@ -3,10 +3,9 @@
 	if (gHideMemoryUsage) then return end
 	if (gMyTicks > gMemStats_NextUpdate) then
 		gMemStats_NextUpdate =3D gMyTicks + 1000
-		local mem_dyn, mem_tresh =3D gcinfo()
+		local mem_dyn =3D gcinfo()
 		mem_dyn =3D mem_dyn or 0
-		mem_tresh =3D mem_tresh or 0
-		local text =3D sprintf("%5.1ffps %0.1fmb %dt %db OGRE | %0.fmb/%0.1fmb L=
UA | %i jobs",OgreAvgFPS(),memoryusage / 1024 / 1024, OgreTriangleCount(), =
OgreBatchCount(), mem_dyn / 1024, mem_tresh / 1024, job.count())
+		local text =3D sprintf("%5.1ffps %0.1fmb %dt %db OGRE | %0.fmb LUA | %i =
jobs",OgreAvgFPS(),memoryusage / 1024 / 1024, OgreTriangleCount(), OgreBatc=
hCount(), mem_dyn / 1024, job.count())
 		if (not gMemoryUsageField) then
 			local vw,vh =3D GetViewportSize()
 			local w,h =3D 0,12

Modified: trunk/lua/gui/gui.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.main.lua (original)
+++ trunk/lua/gui/gui.main.lua Mon Aug  4 17:05:51 2008
@@ -13,3 +13,4 @@
 dofile(libpath .. "gui/gui.spellbook.lua")
 dofile(libpath .. "gui/gui.trade.lua")
 dofile(libpath .. "gui/gui.chat.lua")
+dofile(libpath .. "gui/gui.amount.lua")



From no-reply at zwischenwelt.org  Mon Aug  4 23:55:44 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 04 Aug 2008 21:55:44 -0000
Subject: [Iris-commit] [IRIS] r2349 - in /trunk: bin/iris2.exe
	lua/lib.3d.renderer.lua
Message-ID: <20080804220005.555C61C184CC@zwischenwelt.org>

Author: sience
Date: Mon Aug  4 23:55:44 2008
New Revision: 2349

Log:
-new win32 binary because of caelum fix (starfield is now visible)

Modified:
    trunk/bin/iris2.exe
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Mon Aug  4 23:55:44 2008
@@ -173,9 +173,9 @@
 		-- create with CG shaders
 		gCaelumSystem =3D CreateCaelumCaelumSystem(
 			CAELUM_COMPONENT_SUN + =

+			CAELUM_COMPONENT_MOON +
 	        CAELUM_COMPONENT_SKY_DOME +
-			CAELUM_COMPONENT_MOON +
-	        CAELUM_COMPONENT_POINT_STARFIELD +
+	        CAELUM_COMPONENT_IMAGE_STARFIELD +
 	        CAELUM_COMPONENT_CLOUDS +
 	        CAELUM_COMPONENT_PRECIPITATION +
 	        0



From no-reply at zwischenwelt.org  Tue Aug  5 02:12:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 00:12:55 -0000
Subject: [Iris-commit] [IRIS] r2350 - in /trunk/lua: lib.2d.renderer.lua
 lib.3d.renderer.lua lib.light.lua lib.loading.lua net/net.login.lua
Message-ID: <20080805001255.F10D81524030@zwischenwelt.org>

Author: sience
Date: Tue Aug  5 02:12:55 2008
New Revision: 2350

Log:
-login messages added to chatline
-caelum seg fault fixed now (clear_lights makes some problem with caelum)
-todo: if in dungeon are or underground caelum is always on, dunno why!? un=
derground bug?

Modified:
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.light.lua
    trunk/lua/lib.loading.lua
    trunk/lua/net/net.login.lua

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Tue Aug  5 02:12:55 2008
@@ -36,17 +36,15 @@
 =

 -- called by main.lua
 function Renderer2D:StartWorld ()
-	Client_ClearLights()
-	=

 	-- for 2D/3D renderer switching
 	self:CamInit()
 	=

+	Client_ClearLights()  -- this has to be verified, this couses a seg fault=
 with caelum (sience)
+	-- initialize Worldlight
 	SetupWorldLight_Default()
 	=

 	-- initialize Mapenvironment
 	self:SetMapEnvironment()
-	-- initialize Worldlight
-	SetupWorldLight_Default()
 =

 -- sience: not needed anymore? bring up and assertion failure (it seems wi=
thout, everything is correct)
 	--	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynam=
ic)) then self:AddDynamicItem(dynamic) end end

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Tue Aug  5 02:12:55 2008
@@ -47,13 +47,12 @@
 =

 -- called by main.lua
 function Renderer3D:StartWorld ()
-	Client_ClearLights()
-
 	-- for 2D/3D renderer switching
 	self:CamInit()
 	=

 	-- only Worldlight when Caelum is disabled
-	if (not(gUseCaelumSkysystem)) then
+	if (not(gCaelumSystem)) then
+		Client_ClearLights()
 		-- initialize Worldlight for normal SkyBox=C2=B4
 		SetupWorldLight_Default()
 	end
@@ -77,7 +76,9 @@
 	self:DeleteMapEnvironment()
 	-- DeInit Caelum here (doesn't seem to work)
 	if (gCaelumSystem) then
+		print("deinit caelum")
 		gCaelumSystem:Shutdown(true)
+		gCaelumSystem =3D nil
 	end
 end
 =

@@ -161,14 +162,16 @@
 	if (bUnderGround) then
 		-- if Caelum deinit first
 		if (gCaelumSystem) then
+			print("deinit caelum")
 			gCaelumSystem:Shutdown(true)
+			gCaelumSystem =3D nil
 		end
 		GetMainViewport():SetBackCol(0,0,0)
 		Client_SetSkybox()
 	elseif (gUseCaelumSkysystem) then
 		-- check if already a caelum skysystem is there
 		if (gCaelumSystem) then return end
-
+		print("init caelum")
 		-- create a new Skysystem
 		-- create with CG shaders
 		gCaelumSystem =3D CreateCaelumCaelumSystem(
@@ -222,11 +225,11 @@
 		local t =3D os.date('*t')
 		cl:SetGregorianDateTime(t.year, t.month, t.day, t.hour, t.min, t.sec)
 =

-		-- cl:SetTimeScale(timeScale)
+		cl:SetTimeScale(1024)
 		=

 		-- to prevent wobbly shadows
 		-- updates clock and caelum every 30 sec
-		cl:SetUpdateRate(30)
+--		cl:SetUpdateRate(30)
 =

 		function rotate(gfx,w,x,y,z)
 			local ww,xx,yy,zz =3D gfx:GetOrientation()

Modified: trunk/lua/lib.light.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.light.lua (original)
+++ trunk/lua/lib.light.lua Tue Aug  5 02:12:55 2008
@@ -1,8 +1,6 @@
 -- light utils shared between renderers
 =

 function SetupWorldLight_Default ()
-	Client_ClearLights()
-
 	-- disable directional light for depthshadowmapping (integrated_shadowmap=
ping)
 	if (not(gShadowTechnique =3D=3D "texture_modulative_integrated") or
 		not(gShadowTechnique =3D=3D "texture_additive_integrated")) then

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Tue Aug  5 02:12:55 2008
@@ -290,8 +290,7 @@
 function LoadMap (index)
 	gMapLoaded =3D true
 	gMapIndex =3D index
-	=

-	=

+
 	local profile =3D MakeProfiler("mapload")
 =

 	profile:StartSection("clearcache")

Modified: trunk/lua/net/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.login.lua (original)
+++ trunk/lua/net/net.login.lua Tue Aug  5 02:12:55 2008
@@ -264,7 +264,8 @@
 function gPacketHandler.kPacket_Login_Complete()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	printdebug("login",sprintf("NET: Login_Complete id: %i\n",id))
+	printdebug("login",sprintf("NET: Login_Complete with id: %i\n",id))
+	GuiAddChatLine("NET: Login_Complete with id: " .. id) =

 =

 	--Start World
 	StartInGame()
@@ -276,11 +277,14 @@
 	local id =3D input:PopNetUint8()
 	local value =3D input:PopNetUint8()
 	if (value =3D=3D 5) then
-		printf("NET: Login_Reject id: %i value: another character is online\n",i=
d)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: another char=
acter is online\n",id))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: another charac=
ter is online") =

 	elseif (value =3D=3D 7) then
-		printf("NET: Login_Reject id: %i value: server is idle\n",id)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: server is id=
le\n",id))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: server is idle=
") =

 	else
-		printf("NET: Login_Reject id: %i value: %i\n",id,value)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: %i\n",id,val=
ue))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: " .. value ) =

 	end
 end
 =

@@ -290,15 +294,20 @@
 	local id =3D input:PopNetUint8()
 	local value =3D input:PopNetUint8()
 	if (value =3D=3D 0) then
-		printf("NET: Login_Reject id: %i value: unknown user\n",id)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: unknown user=
\n",id))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: unknown user") =

 	elseif (value =3D=3D 1) then
-		printf("NET: Login_Reject id: %i value: account is already in use\n",id)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: account is a=
lready in use\n",id))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: account is alr=
eady in use") =

 	elseif (value =3D=3D 2) then
-		printf("NET: Login_Reject id: %i value: account disabled\n",id)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: account disa=
bled\n",id))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: account disabl=
ed") =

 	elseif (value =3D=3D 3) then
-		printf("NET: Login_Reject id: %i value: account disabled\n",id)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: account disa=
bled\n",id))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: account disabl=
ed") =

 	else -- 0x04 and higher =3D communications failed
-		printf("NET: Login_Reject id: %i value: communications failed\n",id)
+		printdebug("login",sprintf("NET: Login_Reject id: %i value: communicatio=
ns failed\n",id))
+		GuiAddChatLine("NET: Login_Reject id: " .. id .. " value: communications=
 failed")
 	end
 end
 =

@@ -308,6 +317,7 @@
 	local id =3D input:PopNetUint8()
 	local value =3D input:PopNetUint16()
 	printdebug("login",sprintf("NET: Request Clientversion =3D %i\n",value))
+	GuiAddChatLine("NET: Request Clientversion " .. value)
 =

 	--Send Client ident string
 	Send_ClientVersion(gClientVersion or "4.0.11c5 3D")



From no-reply at zwischenwelt.org  Tue Aug  5 12:00:19 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 10:00:19 -0000
Subject: [Iris-commit] [IRIS] r2351 - /trunk/lua/lib.3d.cam.lua
Message-ID: <20080805100021.1962B1C184A7@zwischenwelt.org>

Author: hagish
Date: Tue Aug  5 12:00:18 2008
New Revision: 2351

Log:
changing cam mode resets the camera to a usefull position

Modified:
    trunk/lua/lib.3d.cam.lua

Modified: trunk/lua/lib.3d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.cam.lua (original)
+++ trunk/lua/lib.3d.cam.lua Tue Aug  5 12:00:18 2008
@@ -148,10 +148,20 @@
 	self.gThirdPersonDist =3D self.gStartThirdPersonDist
 	self.gCamLookAheadDist =3D self.gCamLookAheadDistList[self.gCamMode]
 	self.gbCamRotChanged =3D true
-	if (self.gCamMode =3D=3D self.kCamMode_Ego) then self.gfCamAngV =3D 0.0 s=
elf.gfCamAngH =3D kPi - 0 end
-	if (self.gCamMode =3D=3D self.kCamMode_Ego) then GuiAddChatLine("CamMode:=
Ego") end
-	if (self.gCamMode =3D=3D self.kCamMode_Third) then GuiAddChatLine("CamMod=
e:ThirdPerson") end
-	if (self.gCamMode =3D=3D self.kCamMode_FreeMove) then GuiAddChatLine("Cam=
Mode:Free") end
+	if (self.gCamMode =3D=3D self.kCamMode_Ego) then =

+		GuiAddChatLine("CamMode:Ego") =

+		self.gfCamAngV =3D 0.0 =

+		self.gfCamAngH =3D kPi - 0
+	end
+	if (self.gCamMode =3D=3D self.kCamMode_Third) then =

+		GuiAddChatLine("CamMode:ThirdPerson") =

+		self.gfCamAngH =3D -3*0.25*kPi  -- default to original iso angle
+		self.gfCamAngV =3D -0.25*kPi
+		self:CamApplyAngHV()
+	end
+	if (self.gCamMode =3D=3D self.kCamMode_FreeMove) then =

+		GuiAddChatLine("CamMode:Free") =

+	end
 	=

 	self:BlendOutLayersAbovePlayer()
 end



From no-reply at zwischenwelt.org  Tue Aug  5 17:35:10 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 15:35:10 -0000
Subject: [Iris-commit] [IRIS] r2352 - /trunk/lua/gui/gui.amount.lua
Message-ID: <20080805153511.0D2851524030@zwischenwelt.org>

Author: hagish
Date: Tue Aug  5 17:35:10 2008
New Revision: 2352

Log:
amount dialog working but not bound to drag actions

Modified:
    trunk/lua/gui/gui.amount.lua

Modified: trunk/lua/gui/gui.amount.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.amount.lua (original)
+++ trunk/lua/gui/gui.amount.lua Tue Aug  5 17:35:10 2008
@@ -37,7 +37,8 @@
 =

 -- Open amount Gump
 function OpenAmount (x,y,minValue,currentValue,maxValue)
-	if minValue =3D=3D nil or currentValue =3D=3D nil or maxValue =3D=3D nil =
then return end
+	if currentValue =3D=3D nil then currentValue =3D maxValue end
+	if minValue =3D=3D nil or maxValue =3D=3D nil then return end
 	=

 	CloseAmount()
 	=

@@ -58,7 +59,7 @@
 =

 	-- set a value (adjusts dot and amount text entry field)
 	dialog.SetAbsoluteValue =3D function(self,v)
-		v =3D tonumber(v) or 0
+		v =3D math.floor(tonumber(v) or 0)
 		self.currentValue =3D Clamp(v, self.minValue, self.maxValue)
 		dialog:GetCtrlByName("amount"):SetText(self.currentValue or "?",false)
 		=

@@ -79,33 +80,20 @@
 	local dot =3D dialog:GetCtrlByName("dot")
 =

 	dialog.moveDot =3D function (self, x,y)
-		print("#",x,y)
+		local x1,y1 =3D dialog:GetCtrlByName("start"):GetPos()
+		local x2,y2 =3D dialog:GetCtrlByName("end"):GetPos()
+		local r =3D (x - x1) / (x2 - x1)
+		local v =3D minValue + (maxValue + minValue) * r
+		dialog:SetAbsoluteValue(v)
 	end
 =

-	dot.onMouseDown =3D function () dot:StartMouseMove(key_mouse_left,dialog.=
moveDot,dialog) end
+	dot.on_mouse_left_down =3D function () dot:StartMouseMove(key_mouse_left,=
dialog.moveDot,dialog) end
 =

 	-- initial setup
 	if x and y then dialog:SetPos(x,y) end
 	dialog:SetAbsoluteValue(currentValue)
 	=

-	--~ =

-	--~ skill.button_use =3D MakeGumpButtonFunctionOnClick(curparent, hex2num=
("0x837"), hex2num("0x838"), hex2num("0x838"), x, y, 11, 11,
-						--~ function (widget,mousebutton) Send_Request_SkillUse(skill.skilli=
d) end)
-					--~ skill.button_use_drag =3D MakeGumpButtonFunctionOnClick(curparent=
, hex2num("0x93a"), hex2num("0x93a"), hex2num("0x93a"), x, y, 11, 11,
-						--~ function (widget,mousebutton) end)
-					--~ skill.button_use_drag.onMouseDown =3D function (widget,mousebutto=
n)
-						--~ if (mousebutton =3D=3D 1) then =

-							--~ skill.button_use_drag.mStartX,skill.button_use_drag.mStartY =3D=
 skill.button_use_drag.gfx:GetPos()
-							--~ skill.button_use_drag.dialog:BringToFront() =

-							--~ gui.StartMoveDialog(skill.button_use_drag) =

-						--~ end
-					--~ end
-					--~ skill.button_use_drag.CustomMoveStop =3D function(widget)
-						--~ -- reset button to source and create quick use/cast button
-						--~ -- current position
-						--~ local x,y =3D GetMousePos()
-						--~ CreateQuickCastButtonSkill(x,y,skill.skillid)
-						--~ =

-						--~ skill.button_use_drag.gfx:SetPos(skill.button_use_drag.mStartX,s=
kill.button_use_drag.mStartY)
-					--~ end
+	dialog:GetCtrlByName("start"):SetVisible(false)
+	dialog:GetCtrlByName("end"):SetVisible(false)
+	=

 end



From no-reply at zwischenwelt.org  Tue Aug  5 17:51:34 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 15:51:34 -0000
Subject: [Iris-commit] [IRIS] r2353 - /trunk/lua/lib.mapblock.2d.statics.lua
Message-ID: <20080805155134.EEB981524030@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Aug  5 17:51:34 2008
New Revision: 2353

Log:
working on 2d maploader

Modified:
    trunk/lua/lib.mapblock.2d.statics.lua

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Tue Aug  5 17:51:34 2008
@@ -7,9 +7,50 @@
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
 =

 function cMapBlock_2D_Statics:ClearDetail ()
-	--~ print("cMapBlock_2D_Statics:ClearDetail")
-	if (self.pStaticGroupGfx) then for k,v in pairs(self.pStaticGroupGfx) do =
v:Destroy() end self.pStaticGroupGfx =3D nil end
+	if (self.spriteblock) then self.spriteblock:Destroy() self.spriteblock =
=3D nil end
+	if (self.pStaticGroupGfx) then for k,v in pairs(self.pStaticGroupGfx) do =
v:Destroy() end self.pStaticGroupGfx =3D nil end -- old
 end
+
+function cMapBlock_2D_Statics:WorkStep_LoadDetail_New ()
+	local spriteblock =3D cUOSpriteBlock:New()
+	self.spriteblock =3D spriteblock
+	self.statics =3D MapGetBlockStatics(self.bx,self.by)
+	self:Yield()
+	for i,static in pairs(self.statics) do =

+		spriteblock:AddStatic(static)
+		if (Client_GetTicks() > self.t_end) then self:Yield() end
+	end
+	self:Yield()
+	spriteblock:Build()
+end
+
+-- ***** ***** ***** ***** ***** cUOSpriteBlock
+
+cUOSpriteBlock =3D CreateClass()
+function cUOSpriteBlock:New () local c =3D CreateClassInstance(cUOSpriteBl=
ock) c:Init() return c end
+function cUOSpriteBlock:Init ()
+	self.matgroups =3D {}
+end
+function cUOSpriteBlock:Destroy ()
+
+end
+
+function cUOSpriteBlock:AddStatic (static)
+	local tx,ty,zloc,artid,hue =3D static.tx,static.ty,static.zloc,static.art=
id,static.hue
+	local pTileType =3D GetStaticTileType(artid)
+	local x,y,z =3D -tx,ty,zloc*0.1 -- static : {zloc=3D?,artid=3D?,hue=3D?,x=
loc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
+	local sort_zadd =3D 0.05*pTileType.iSortBonus2D + 0.005*pTileType.miHeigh=
t + 0.001*static.iBlockIndex -- + =3D nearer to =

+	=

+	-- todo : group by artid,hue ?  no.. map artid,hue -> atlas_handle, group=
 by atlas handle
+	--~ local pAtlasPiece =3D ArtAtlasLoadAndLock(artid+0x4000,hue,self)
+end
+
+
+function cUOSpriteBlock:Build 	() =

+	--~ local matname =3D ArtAtlasLoadMaterial(atlas,Renderer2D.kAtlasBaseMat=
erial)
+end
+
+-- ***** ***** ***** ***** ***** old
 =

 function cMapBlock_2D_Statics:WorkStep_LoadDetail ()
 	print("cMapBlock_2D_Statics:WorkStep_LoadDetail")
@@ -18,17 +59,14 @@
 	block.statics =3D MapGetBlockStatics(block.bx,block.by)
 	block.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Ar=
tAtlasLoadAndLock)
 	block.pStaticGroups =3D {}
-	block.iStaticLoadingIndex =3D 1
-	block.iStaticLoadingIndexMax =3D table.getn(block.statics)
 	=

 	self:Yield()
 =

 	-- statics : analyze, load textures to atlas
 	-- load atlas : artid-hue
 	local iBlockLoadTicks =3D Client_GetTicks()
-	for i =3D block.iStaticLoadingIndex,block.iStaticLoadingIndexMax do
-		block.iStaticLoadingIndex =3D i+1
-		local static =3D block.statics[i]
+	for i,static in pairs(block.statics) do
+		local static 		=3D block.statics[i]
 		local iTileTypeID	=3D static.artid
 		local iHue			=3D static.hue
 		=




From no-reply at zwischenwelt.org  Tue Aug  5 19:24:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 17:24:46 -0000
Subject: [Iris-commit] [IRIS] r2354 - in /trunk: lua/gui/gui.amount.lua
 lua/gui/gui.gumpparser.lua lua/lib.uodragdrop.lua
 widgets/widget.uoedittext.lua
Message-ID: <20080805172446.A5B0D1C18017@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Aug  5 19:24:46 2008
New Revision: 2354

Log:
uodragdrop : activated amount-input-dialog, amount dialog : tweaked edittex=
t, added callback, gumpparser : removed debug output

Modified:
    trunk/lua/gui/gui.amount.lua
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.uodragdrop.lua
    trunk/widgets/widget.uoedittext.lua

Modified: trunk/lua/gui/gui.amount.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.amount.lua (original)
+++ trunk/lua/gui/gui.amount.lua Tue Aug  5 19:24:46 2008
@@ -29,14 +29,16 @@
 =

 =

 -- open healdbar at mouse pos
-function OpenAmountAtMouse (minValue,currentValue,maxValue)
+-- callback_done(amount)
+function OpenAmountAtMouse (minValue,currentValue,maxValue,callback_done)
 	local iMouseX,iMouseY =3D GetMousePos()
-	OpenAmount(iMouseX - 50,iMouseY - 30, minValue,currentValue,maxValue)
+	OpenAmount(iMouseX - 50,iMouseY - 30, minValue,currentValue,maxValue,call=
back_done)
 end
 =

 =

 -- Open amount Gump
-function OpenAmount (x,y,minValue,currentValue,maxValue)
+-- callback_done(amount) =

+function OpenAmount (x,y,minValue,currentValue,maxValue,callback_done)
 	if currentValue =3D=3D nil then currentValue =3D maxValue end
 	if minValue =3D=3D nil or maxValue =3D=3D nil then return end
 	=

@@ -47,21 +49,36 @@
 	gAmountDialog =3D dialog
 =

 	-- save mobile info to dialog
+	dialog.callback_done =3D callback_done
 	dialog.minValue =3D minValue
 	dialog.currentValue =3D currentValue
 	dialog.maxValue =3D maxValue
 	=

 	-- update dialog on pressing enter
-	dialog:GetCtrlByName("amount").on_return =3D function(self) =

-		self:RemoveFocus() =

+	dialog:GetCtrlByName("amount").params.bClearOnFirstKeyDown =3D true
+	dialog:GetCtrlByName("amount").params.bNumbersOnly =3D true
+	dialog:GetCtrlByName("amount"):SetFocus()
+	dialog:GetCtrlByName("amount").on_change_text =3D function(self) =

+		local text =3D self:GetText()
+		local v =3D math.floor(tonumber(text) or 0)
+		if (v > dialog.maxValue) then
+			dialog:SetAbsoluteValue(dialog.maxValue)
+		else
+			dialog.bKeepAmountText =3D true
+			dialog:SetAbsoluteValue(text)
+			dialog.bKeepAmountText =3D false
+		end
+	end
+	dialog:GetCtrlByName("amount").on_return =3D function(self)
 		dialog:SetAbsoluteValue(self:GetText())
+		dialog:SendClose()
 	end
 =

 	-- set a value (adjusts dot and amount text entry field)
 	dialog.SetAbsoluteValue =3D function(self,v)
 		v =3D math.floor(tonumber(v) or 0)
 		self.currentValue =3D Clamp(v, self.minValue, self.maxValue)
-		dialog:GetCtrlByName("amount"):SetText(self.currentValue or "?",false)
+		if (not dialog.bKeepAmountText) then dialog:GetCtrlByName("amount"):SetT=
ext(self.currentValue or "?",false) end
 		=

 		local r =3D (self.currentValue - self.minValue) / (self.maxValue - self.=
minValue)
 		=

@@ -73,7 +90,7 @@
 	end
 =

 	-- overwrite the dialog close function from gumpparser
-	dialog.SendClose =3D function (self) CloseAmount() end
+	dialog.SendClose =3D function (self) local amount =3D self.currentValue C=
loseAmount() self.callback_done(amount) end
 	=

 =

 	-- drag the dot around

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Tue Aug  5 19:24:46 2008
@@ -325,7 +325,7 @@
 	=

 	-- parse gump code
 	local command_chunks =3D {}
-	local profiler =3D MakeProfiler("gumpparser","preload")
+	--~ local profiler =3D MakeProfiler("gumpparser","preload")
 	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
 		local bToken =3D {}
 		for token in string.gfind(v, "%w+") do table.insert(bToken,token) end
@@ -350,7 +350,7 @@
 			PreLoadArt(param.art_id,param.hue)
 		end
 	end
-	profiler:FinishAndPrint()
+	--~ profiler:FinishAndPrint()
 	=

 	for k,command_chunk in pairs(command_chunks) do =

 		local command,bToken,param =3D unpack(command_chunk)

Modified: trunk/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uodragdrop.lua (original)
+++ trunk/lua/lib.uodragdrop.lua Tue Aug  5 19:24:46 2008
@@ -223,30 +223,36 @@
 	gDragDrop.offy =3D offy
 	gDragDrop.iMouseX,gDragDrop.iMouseY =3D GetMousePos()
 	gDragDrop.started =3D false
+	gDragDrop.wait_for_dragmove =3D true
 end
 =

 function StepUODragDrop () =

 	-- start dragdrop if the mouse is dragged for a minimum distance
-	if (gDragDrop and (not gDragDrop.started)) then =

+	if (gDragDrop and gDragDrop.wait_for_dragmove) then =

 		local iMouseX,iMouseY =3D GetMousePos()
 		local dx =3D gDragDrop.iMouseX - iMouseX
 		local dy =3D gDragDrop.iMouseY - iMouseY
 		local sqdist =3D dx*dx + dy*dy
-		if (sqdist >=3D gSquareDragStartDist) then StartUODragDrop() end
-	end
-end
-
-function MouseDownUODragDrop () =

-	gCurrentRenderer:MousePick()
-	if (gMousePickFoundHit) then
-		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_ContainerItem)	t=
hen PrepareDragContainerItem(gMousePickFoundHit.item) end
-		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_PaperdollItem)	t=
hen PrepareDragPaperdollItem(gMousePickFoundHit.item) end
-		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic)		then P=
repareDragDynamic(gMousePickFoundHit.dynamic) end
+		if (sqdist >=3D gSquareDragStartDist) then gDragDrop.wait_for_dragmove =
=3D false UODragDrop_TakeItem() end
+	end
+end
+
+function MouseDownUODragDrop ()
+	if (gDragDrop and gDragDrop.started) then -- when dragging with amount di=
alog
+		CompleteUODragDrop()
+	else =

+		gCurrentRenderer:MousePick()
+		if (gMousePickFoundHit) then
+			if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_ContainerItem)	=
then PrepareDragContainerItem(gMousePickFoundHit.item) end
+			if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_PaperdollItem)	=
then PrepareDragPaperdollItem(gMousePickFoundHit.item) end
+			if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic)		then =
PrepareDragDynamic(gMousePickFoundHit.dynamic) end
+		end
 	end
 end
 =

 function MouseUpUODragDrop () =

 	if (not gDragDrop) then return end
+	if (gDragDrop.bWithAmountDialog) then return end
 	if (gDragDrop.started) then
 		CompleteUODragDrop()
 	else
@@ -262,20 +268,29 @@
 	end
 end
 =

-function StartUODragDrop ()
-	--~ GuiAddChatLine("dragdrop : start")
+function StartUODragDrop (amount)
+	if (not gDragDrop) then print("StartUODragDrop : error, gDragDrop already=
 released") return end
 	gDragDrop.started =3D true
-	if (gDragDrop.widget and gDragDrop.widget:IsAlive()) then gDragDrop.widge=
t.gfx:SetVisible(false) end
+	--~ if (gDragDrop.widget and gDragDrop.widget:IsAlive()) then gDragDrop.w=
idget.gfx:SetVisible(false) end
 	SetDragIcon(gDragDrop.matname,gDragDrop.w,gDragDrop.h,gDragDrop.offx,gDra=
gDrop.offy)
 =

-	-- TODO better amount handling
+	Send_Take_Object(gDragDrop.item.serial,amount) =

+	gui.bMouseBlocked =3D true
+end
+
+function UODragDrop_AmountEntryCallback (chosen_amount)
+	StartUODragDrop(chosen_amount)
+end
+
+function UODragDrop_TakeItem ()
 	local amount =3D gDragDrop.item.amount
-	-- take only half the amount if shift is pressed
-	if (gKeyPressed[key_lalt] or gKeyPressed[key_lshift]) and amount then amo=
unt =3D math.floor(amount / 2) end
-	if ((gKeyPressed[key_lcontrol]	or gKeyPressed[key_rcontrol]) and amount) =
then amount =3D 1 end
-
-	Send_Take_Object(gDragDrop.item.serial,amount)
-	gui.bMouseBlocked =3D true
+	if (amount > 1 and (not gKeyPressed[key_lshift])) then =

+		-- show amount bSendTakeMessage
+		gDragDrop.bWithAmountDialog =3D true
+		OpenAmountAtMouse(1,amount,amount,UODragDrop_AmountEntryCallback)
+	else
+		StartUODragDrop(amount)
+	end
 end
 =

 -- called in all cases at the end
@@ -424,7 +439,7 @@
 			Send_Drop_Object(item.serial,x,y,z,iSerial)
 		else
 			-- drop on world
-			print("MouseUpUODragDrop: drop on world : ",item.serial,item.amount,x,y=
,z,hex2num("0xFFFFFFFF"))
+			printdebug("dragdrop","MouseUpUODragDrop: drop on world : ",item.serial=
,item.amount,x,y,z,hex2num("0xFFFFFFFF"))
 			Send_Drop_Object(item.serial,x,y,z,hex2num("0xFFFFFFFF"))
 		end
 	else

Modified: trunk/widgets/widget.uoedittext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoedittext.lua (original)
+++ trunk/widgets/widget.uoedittext.lua Tue Aug  5 19:24:46 2008
@@ -32,7 +32,10 @@
 function gWidgetPrototype.UOEditText:GetText ()		return self.text end -- w=
arning ! might be an array of unicode charcodes (usually)
 function gWidgetPrototype.UOEditText:SetText (text) self.text =3D text sel=
f:UpdateTextDisplay() end
 =

-function gWidgetPrototype.UOEditText:UpdateTextDisplay () self.textwidget:=
SetUOHtml(self.text) end
+function gWidgetPrototype.UOEditText:UpdateTextDisplay () =

+	self.textwidget:SetUOHtml(self.text) =

+	self:on_change_text()
+end
 =

 function gWidgetPrototype.UOEditText:RemoveLastChar		()
 	if (type(self.text) =3D=3D "table") then



From no-reply at zwischenwelt.org  Tue Aug  5 19:58:26 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 17:58:26 -0000
Subject: [Iris-commit] [IRIS] r2355 - /trunk/lua/lib.mapblock.spawner.lua
Message-ID: <20080805175826.CCDF81C1801A@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Aug  5 19:58:26 2008
New Revision: 2355

Log:
spawner : forall

Modified:
    trunk/lua/lib.mapblock.spawner.lua

Modified: trunk/lua/lib.mapblock.spawner.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.spawner.lua (original)
+++ trunk/lua/lib.mapblock.spawner.lua Tue Aug  5 19:58:26 2008
@@ -12,6 +12,9 @@
 	self.pBlockClass	=3D pBlockClass
 	self.pScheduler		=3D pScheduler
 end
+
+-- calls fun(block) for all blocks
+function cMapBlockSpawner:ForAllBlocks	(fun) for block,v in pairs(self.pMa=
pBlocks) do fun(block) end end
 =

 -- creates new blocks in area near cam if needed, releases old blocks
 -- params : time, focuspos



From no-reply at zwischenwelt.org  Tue Aug  5 21:03:35 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 19:03:35 -0000
Subject: [Iris-commit] [IRIS] r2356 - /trunk/lua/lib.2d.renderer.lua
Message-ID: <20080805200011.E28BA1524032@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Aug  5 21:03:35 2008
New Revision: 2356

Log:
bugfix

Modified:
    trunk/lua/lib.2d.renderer.lua

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Tue Aug  5 21:03:35 2008
@@ -51,7 +51,7 @@
 	--	for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile)=
 end
 end
 =

-function Renderer3D:StopWorld ()
+function Renderer2D:StopWorld ()
 	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
) then self:RemoveDynamicItem(dynamic) end end
 	for k,mobile in pairs(GetMobileList()) do self:DestroyMobileGfx(mobile) e=
nd
 	Client_ClearLights()



From no-reply at zwischenwelt.org  Tue Aug  5 21:35:17 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 19:35:17 -0000
Subject: [Iris-commit] [IRIS] r2357 - /trunk/lua/gui/gui.gumpmaker.lua
Message-ID: <20080805200012.BF2A41C18015@zwischenwelt.org>

Author: sience
Date: Tue Aug  5 21:35:16 2008
New Revision: 2357

Log:
-some abbadon gfm code removed

Modified:
    trunk/lua/gui/gui.gumpmaker.lua

Modified: trunk/lua/gui/gui.gumpmaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpmaker.lua (original)
+++ trunk/lua/gui/gui.gumpmaker.lua Tue Aug  5 21:35:16 2008
@@ -189,76 +189,3 @@
 	widget.mbIgnoreMouseOver =3D true
 	return widget
 end
-
--- TODO: remove obsolete code, gfm's not used anymore
---[[
-function CreateGumpDlgFromGfm (path) =

-	local dialog =3D guimaker.MakeSortedDialog()
-	if (gGumpLoader) then
-		dialog.formnode =3D xmlchild(LuaXML_ParseFile(path),"form")
-		dialog.controls =3D {} -- associative list of controlls, key=3Dname of c=
ontroll
-		for i =3D 1,dialog.formnode.n do -- normal order
-			local child =3D dialog.formnode[i]
-				if (child.name =3D=3D "control"	) then GumpDlgAddGfmControlNode(dialog=
,child)
-			elseif (child.name =3D=3D "fade"	) then -- TODO : (currently unused)
-			elseif (child.name =3D=3D "event"	) then -- TODO : (currently unused)
-			end
-		end
-	end
-	return dialog
-end
-
-function GumpDlgAddGfmControlNode (dialog,node)
-	local widget =3D {}
-	local gump 	=3D xmlchild(node,"gump")
-	local text 	=3D xmlchild(node,"text") =

-	local event =3D xmlchild(node,"event")
-	local attr =3D node.attr
-	-- TODO : controll attributes "freezed=3D'1' visible=3D'1' alpha=3D'0' fl=
ags=3D'0'" currently unknown
-	-- TODO : <event onclick=3D'' onclose=3D'' onmouseup=3D'' onmousedown=3D'=
' onkeypressed=3D''/> currently unknown
-	-- TODO : text attributes <text font=3D'0' hue=3D'0x95' align=3D'center'>=
Network Error</text> currently unknown
-	-- gumpmode 1 (border) <gump>0xA28</gump>
-	-- gumpmode 2 (button) <gump normal=3D'0x47E' over=3D'0x47F' pressed=3D'0=
x47E'/>
-	=

-	--print("GumpDlgAddGfmControlNode : class=3D",attr.class)
-	=

-		if (attr.class =3D=3D "border") then
-			widget =3D MakeBorderGump(dialog.rootwidget,hex2num(gump[1]),attr.left,=
attr.top,attr.width,attr.height)
-	elseif (attr.class =3D=3D "button") then
-			--print("GumpDlgAddGfmControlNode button",attr.name)
-			widget =3D MakeGumpButton(dialog.rootwidget,
-				hex2num(gump.attr.normal), hex2num(gump.attr.over), hex2num(gump.attr.=
pressed),
-				attr.left, attr.top, attr.width, attr.height )
-	elseif (attr.class =3D=3D "label") then
-			widget =3D guimaker.MakeText(dialog.rootwidget,attr.left,attr.top,text[=
1],gFontDefs["Gump"].size,gFontDefs["Gump"].col,gFontDefs["Gump"].name)
-			if (text.attr.align =3D=3D "center") then
-				local w,h =3D widget.gfx:GetTextBounds()
-				widget.gfx:SetPos(attr.left+attr.width/2 - w/2,attr.top)
-			end
-			-- TODO : better font, color=3Dhue    <text font=3D'0' hue=3D'0x95' ali=
gn=3D'center'>
-	elseif (attr.class =3D=3D "picture") then
-			widget =3D MakeBorderGumpPart(dialog.rootwidget,hex2num(gump[1]),attr.l=
eft,attr.top,attr.width,attr.height)
-		-- TODO :  "data/gfm/healthbar.gfm" "data/gfm/main_menu.gfm" "data/gfm/b=
ackground.gfm" "data/gfm/askquit.gfm"
-		--<control class=3D'picture' name=3D'picture_816' left=3D'0' top=3D'0' w=
idth=3D'178' height=3D'108' freezed=3D'1' visible=3D'1' alpha=3D'0' flags=
=3D'0'>
-		--<event onclick=3D'' onclose=3D'' onmouseup=3D'' onmousedown=3D'' onkey=
pressed=3D''/>
-		--<gump>0x816</gump>
-		--</control>
-	elseif (attr.class =3D=3D "checkbox") then =

-		-- "data/gfm/secure_trade.gfm"
-			local bChecked =3D tonumber(hex2num(xmlchild(node,"checked")[1])) =3D=
=3D 1  -- <checked>0</checked>
-			widget =3D MakeGumpCheckBox(dialog.rootwidget,
-				bChecked,hex2num(gump.attr.normal), hex2num(gump.attr.checked),
-				attr.left, attr.top, attr.width, attr.height )
-	elseif (attr.class =3D=3D "edit") then
-		-- TODO :  "data/gfm/main_menu.gfm"
-	end
-	widget.dialog =3D dialog
-	widget.node =3D node
-	widget.gump =3D gump
-	widget.text =3D text
-	widget.event =3D event
-	if (attr.name and attr.name ~=3D "") then
-		dialog.controls[attr.name] =3D widget
-	end
-end
-]]--



From no-reply at zwischenwelt.org  Tue Aug  5 22:16:22 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 20:16:22 -0000
Subject: [Iris-commit] [IRIS] r2358 - in /trunk/lua: gui/gui.gumpparser.lua
 gui/gui.healthbar.lua gui/gui.main.lua gui/gui.popup.lua
 gui/gui.spellbook.lua net.popup.lua net/net.main.lua net/net.other.lua
Message-ID: <20080805201623.5300C1524030@zwischenwelt.org>

Author: sience
Date: Tue Aug  5 22:16:22 2008
New Revision: 2358

Log:
-net.popup.lua deleted and moved to gui.popup.lua & net.other.lua
-some other small cleanups for better reading the source

Added:
    trunk/lua/gui/gui.popup.lua
Removed:
    trunk/lua/net.popup.lua
Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/gui/gui.healthbar.lua
    trunk/lua/gui/gui.main.lua
    trunk/lua/gui/gui.spellbook.lua
    trunk/lua/net/net.main.lua
    trunk/lua/net/net.other.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Tue Aug  5 22:16:22 2008
@@ -104,6 +104,318 @@
 =

 gServerSideGump =3D {}
 gGumpPosition =3D {}
+
+local function ServerSideGump_GetParams (dialogId)
+	local params =3D {}
+	params.switches =3D {}
+	params.texts =3D {}
+	local dialog =3D gServerSideGump[dialogId]
+	=

+	if (dialog) then
+		for k,widget in pairs(dialog.uo_radio) do if (widget.state =3D=3D 1) the=
n table.insert(params.switches,widget.returnmsg) end end
+		for k,widget in pairs(dialog.uo_check) do if (widget.state =3D=3D 1) the=
n table.insert(params.switches,widget.returnmsg) end end
+		for k,widget in pairs(dialog.uo_text) do =

+			table.insert(params.texts,{id=3Dwidget.returnmsg,text=3Dwidget.plaintex=
t or  ""})
+		end
+	end
+
+	return params
+end
+
+function CloseServerSideGump (playerId, dialogId, buttonId)
+	if (buttonId) then
+		printdebug("gump","CloseServerSideGump dialogId=3D"..dialogId.." buttonI=
d=3D"..buttonId)
+	else
+		printdebug("gump","CloseServerSideGump dialogId=3D"..dialogId.." buttonI=
d=3Dnil")
+	end
+
+	local dialog =3D gServerSideGump[dialogId]
+	if (not dialog) then printdebug("gump","CloseServerSideGump : dialog not =
found=3D",dialogId) return end
+	if (dialog.SendClose) then dialog:SendClose(buttonId) return end
+	=

+	local params =3D ServerSideGump_GetParams(dialogId)
+	GumpReturnMsg(playerId, dialogId, buttonId, params)
+
+	printdebug("gump","ServerSideGump Dialog closed: dialogID=3D"..dialogId)
+	dialog:Close()
+end
+
+-- returns a table
+-- token is an array
+-- tokenformat is a string with comma-separated field names like "x,y,widt=
h,height,[ctrlname],..." =

+-- [] encasing optional params and ... for not checking the number of rema=
ining params
+function GumpParser_ParseToken (token,tokenformat,paramadd)
+	local res =3D paramadd and CopyArray(paramadd) or {}
+	for k,fieldname in ipairs(explode(",",tokenformat)) do
+		if (fieldname =3D=3D "...") then return res end
+		local tokenval =3D token[k+1]
+		-- [param] is optional
+		if (StrLeft(fieldname,1) =3D=3D "[" and StrRight(fieldname,1) =3D=3D "]"=
) then
+			fieldname =3D string.sub(fieldname,2,-2) -- cut away one char from each=
 side
+			if (not tokenval) then return res end -- optional, so exit without warn=
ing possible
+		end
+		if (not tokenval) then print("GumpParser_ParseToken:warning:missing para=
m",k,fieldname,implode(",",token)) return res end -- warn of missing parame=
ters
+		local tokenvalnum =3D tonumber(tokenval)
+		if (tokenvalnum and tokenval =3D=3D ""..tokenvalnum) then tokenval =3D t=
okenvalnum end -- convert number-strings to real numbers
+		res[fieldname] =3D tokenval
+	end
+	return res
+end
+
+
+-- close already existing dialog with the same id
+function GumpParser_CloseOldDialog	(dialogId,playerid,bClientSideMode)
+	print("TODO:GumpParser_CloseOldDialog")
+	if ((not bClientSideMode) and gServerSideGump[dialogId]) then
+		CloseServerSideGump(playerid, dialogId, 0, bClientSideMode)
+	end
+end
+
+
+kGumpParser_CommandTypes =3D {}
+kGumpParser_CommandTypes["page"]				=3D {paramformat=3D"pagenum"}
+kGumpParser_CommandTypes["xmfhtmlgump"]			=3D {paramformat=3D"x,y,width,he=
ight,cliloc_id,background,scrollbar,[ctrlname]",paramadd=3D{default_black=
=3Dtrue,html=3Dtrue}} =

+kGumpParser_CommandTypes["xmfhtmlgumpcolor"]	=3D {paramformat=3D"x,y,width=
,height,cliloc_id,background,scrollbar,hue,[ctrlname]",paramadd=3D{html=3Dt=
rue}}
+kGumpParser_CommandTypes["croppedtext"]			=3D {paramformat=3D"x,y,width,he=
ight,hue,textline_id,[ctrlname]",paramadd=3D{bold=3Dtrue,crop=3Dtrue}}
+kGumpParser_CommandTypes["htmlgump"]			=3D {paramformat=3D"x,y,width,heigh=
t,textline_id,background,scrollbar,[ctrlname]",paramadd=3D{default_black=3D=
true,html=3Dtrue}} =

+kGumpParser_CommandTypes["text"]				=3D {paramformat=3D"x,y,hue,textline_i=
d,[ctrlname]",paramadd=3D{bold=3Dfalse,default_black=3Dtrue}}
+kGumpParser_CommandTypes["tooltip"]				=3D {paramformat=3D"cliloc_id,[ctrl=
name]"}
+kGumpParser_CommandTypes["resizepic"]			=3D {paramformat=3D"x,y,gump_id,wi=
dth,height,[ctrlname]",paramadd=3D{multipart=3Dtrue}}
+kGumpParser_CommandTypes["gumppictiled"]		=3D {paramformat=3D"x,y,width,he=
ight,gump_id,[ctrlname]",paramadd=3D{tiled=3Dtrue}}
+kGumpParser_CommandTypes["checkertrans"]		=3D {paramformat=3D"x,y,width,he=
ight,[ctrlname]",paramadd=3D{checker=3Dtrue}}
+kGumpParser_CommandTypes["tilepic"]				=3D {paramformat=3D"x,y,art_id,[ctr=
lname]"}
+kGumpParser_CommandTypes["tilepichue"]			=3D {paramformat=3D"x,y,art_id,hu=
e,[ctrlname]"}
+kGumpParser_CommandTypes["button"]				=3D {paramformat=3D"x,y,gump_id_norm=
al,gump_id_pressed,quit,page_id,[return_value],[ctrlname]"}
+kGumpParser_CommandTypes["buttontileart"]		=3D {paramformat=3D"x,y,gump_id=
_normal,gump_id_pressed,quit,page_id,return_value,art_id,hue,art_x,art_y,[c=
trlname]"}
+kGumpParser_CommandTypes["checkbox"]			=3D {paramformat=3D"x,y,gump_id_nor=
mal,gump_id_pressed,status,return_value,[ctrlname]"}
+kGumpParser_CommandTypes["radio"]				=3D {paramformat=3D"x,y,gump_id_norma=
l,gump_id_pressed,status,return_value,[ctrlname]"}
+kGumpParser_CommandTypes["group"]				=3D {paramformat=3D"groupnumber"}
+kGumpParser_CommandTypes["textentry"]			=3D {paramformat=3D"x,y,width,heig=
ht,hue,return_value,textline_id_default,[ctrlname]"}
+kGumpParser_CommandTypes["gumppic"]				=3D {paramformat=3D"x,y,gump_id,...=
"}
+				=

+
+function GumpParser_DebugDumpGump (Gumpdata)
+	-- debug dump
+	if (1 =3D=3D 1 and (not Clientsidemode)) then =

+		print("\n\n##### GUMP #####\n\n\""..Gumpdata.Data.."\",\n\ntextline=3D{"=
) =

+		for k,v in pairs(Gumpdata.textline or {}) do print("["..k.."]=3D\""..v..=
"\",") end =

+		print("},")
+		print("textline_unicode=3D{")
+		for k,unicode_arr in pairs(Gumpdata.textline_unicode or {}) do =

+			printf("["..k.."]=3D{") =

+			for k2,unicode_charcode in pairs(unicode_arr) do printf("%d,",unicode_c=
harcode) end
+			printf("},\n") =

+		end =

+		print("},")
+		print("#######\n\n") =

+	end
+end
+
+
+function GumpParser_New (Gumpdata, bClientSideMode)
+	-- if there is a dialog with the same id, close it
+	GumpParser_CloseOldDialog(Gumpdata.dialogId,Gumpdata.playerid,bClientSide=
Mode)
+	if (kGumpParser_DebugDump) then GumpParser_DebugDumpGump(Gumpdata) end
+	=

+	-- setup
+	local dialog =3D GetDesktopWidget():CreateChild("GumpDialog",{dialogId=3D=
Gumpdata.dialogId,bClientSideMode=3DbClientSideMode,Gumpdata=3DGumpdata})
+	dialog.gumpdata =3D Gumpdata -- for debugging
+	local parent =3D dialog:GetPage(0)
+	local groupnumber =3D -1 -- for radiobuttons
+	local widget
+	=

+	-- parse gump code
+	local command_chunks =3D {}
+	--~ local profiler =3D MakeProfiler("gumpparser","preload")
+	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
+		local bToken =3D {}
+		for token in string.gfind(v, "%w+") do table.insert(bToken,token) end
+		local command =3D bToken[1] and string.lower(bToken[1]) or ""
+		local commandtype =3D kGumpParser_CommandTypes[command]
+		local param =3D commandtype and GumpParser_ParseToken(bToken,commandtype=
.paramformat,commandtype.paramadd)
+		=

+		if (command =3D=3D "gumppic") then -- special format, optional hue=3D123
+			if (bToken[5] =3D=3D "hue") then param.hue =3D bToken[6] end
+			if (bClientSideMode) then param.ctrlname =3D bToken[5] end
+		end
+		=

+		table.insert(command_chunks,{command,bToken,param})
+		=

+		-- preload gumps,artids and maybe unicode chars from cliloc and textline=
s, texatlas bulk loading
+		--~ PreLoadCliloc(param.cliloc_id) -- later : unicode glyphs for font ?
+		if (param) then =

+			if (command =3D=3D "resizepic") then for k,v in pairs(kBorderGumpIndexA=
dd) do PreLoadGump(param.gump_id + v) end end
+			PreLoadGump(param.gump_id_normal)
+			PreLoadGump(param.gump_id_pressed)
+			PreLoadGump(param.gump_id,param.hue)
+			PreLoadArt(param.art_id,param.hue)
+		end
+	end
+	--~ profiler:FinishAndPrint()
+	=

+	for k,command_chunk in pairs(command_chunks) do =

+		local command,bToken,param =3D unpack(command_chunk)
+		------------------------------------------------------------------------=
--------------------
+		if (command =3D=3D "") then -- no word in line
+		elseif (command =3D=3D "noclose") then
+			dialog.noclose =3D true
+		elseif (command =3D=3D "nomove") then
+			dialog.nomove =3D true
+		elseif (command =3D=3D "nodispose") then
+			dialog.nodispose =3D true
+		elseif (command =3D=3D "noresize") then
+			dialog.noresize =3D true
+			=

+		--Description:  Specifies which page to define. Page 0 is already presen=
t and visible with all other Pages (1,2,3,etc) =

+		elseif (command =3D=3D "page") then
+			parent =3D dialog:GetPage(param.pagenum)
+			-- NO:groupnumber =3D -1 -- DON'T start new radio button group on page-=
switch ! (moongate menu for example)
+			=

+			=

+			=

+		-- ***** ***** ***** ***** ***** TEXT =

+			=

+			=

+		=

+		--xmfhtmlgump <x> <y> <width> <height> <cliloc_id> <background> <scrollb=
ar>
+		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
+		elseif (command =3D=3D "xmfhtmlgump") then
+			widget =3D parent:CreateChild("UOText",param)
+			=

+		--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc_id> <background> <sc=
rollbar> <hue>
+		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
+		elseif (command =3D=3D "xmfhtmlgumpcolor") then
+			widget =3D parent:CreateChild("UOText",param)
+			=

+		-- croppedtext <x> <y> <width> <height> <hue> <textline_id>
+		-- Description:  Adds a text field to the gump. This is similar to the t=
ext command,
+		-- but the text is cropped to the defined area.
+		-- text is automatically bold/outlined
+		elseif (command =3D=3D "croppedtext") then
+			widget =3D parent:CreateChild("UOText",param,Gumpdata.textline_unicode =
or Gumpdata.textline)
+			=

+		--HtmlGump <x> <y> <width> <height> <textline_id> <background> <scrollba=
r>
+		--Description:  Defines a text-area where Html-commands are allowed.
+		--				<background> and <scrollbar> can be 0 or 1 and define whether the =
background is transparent and a scrollbar is displayed.
+		--{ htmlgump 10 8 100 20 0 0 0 }
+		elseif (command =3D=3D "htmlgump") then
+			widget =3D parent:CreateChild("UOText",param,Gumpdata.textline_unicode =
or Gumpdata.textline)
+			=

+		--text <x> <y> <hue> <textline_id>
+		--Description:  Defines the position and hue of a text (data) entry.
+		elseif (command =3D=3D "text") then
+			widget =3D parent:CreateChild("UOText",param,Gumpdata.textline_unicode =
or Gumpdata.textline)
+
+		--tooltip <cliloc_id>
+		--Description:  Adds to the previous layoutarray entry a Tooltip with th=
e in [cliloc-nr] defined Cliloc entry
+		elseif (command =3D=3D "tooltip") then
+			print("TODO:GumpParser_SetToolTipp",widget,param.cliloc_id)
+			=

+			=

+			=

+			=

+		-- ***** ***** ***** ***** ***** IMAGE =

+		=

+		=

+		=

+		--resizepic <x> <y> <gump_id> <width> <height>
+		--consists of multiple(9) parts, for which gump_id is the base-id, a bor=
der-frame like thing, dialog background for example. tiled
+		-- multipart=3Dtrue : the gump_id is just the base id, the border tiles =
have different ids, calculated from it
+		elseif (command =3D=3D "resizepic") then
+			widget =3D parent:CreateChild("UOImage",param)
+			=

+		--gumppic <x> <y> <gump_id> [hue=3D353]
+		--Description:  Adds a graphic to the gump, where <id> ist the graphic i=
d of an item.
+		--				Optionaly there is a color parameter. =

+		elseif (command =3D=3D "gumppic") then
+			widget =3D parent:CreateChild("UOImage",param)
+
+		--gumppictiled <x> <y> <width> <height> <gump_id>
+		--Description:  Similar to GumpPic, but the gumppic is tiled to the give=
n <height> and <width>.
+		elseif (command =3D=3D "gumppictiled") then
+			widget =3D parent:CreateChild("UOImage",param)
+
+		--checkertrans <x> <y> <width> <height>
+		--Description:  Creates a transparent rectangle on position <x,y> using =
<width> and <height>.
+		elseif (command =3D=3D "checkertrans") then
+			widget =3D parent:CreateChild("UOImage",param)
+
+		--tilepic <x> <y> <art_id>
+		--Description:  Adds a Tilepicture to the gump. <id> defines the tile gr=
aphic-id.
+		elseif (command =3D=3D "tilepic") then
+			widget =3D parent:CreateChild("UOImage",param)
+
+		--TilePicHue <x> <y> <art_id> <hue>
+		--Description:  Similar to the tilepic command, but with an additional h=
ue parameter.
+		elseif (command =3D=3D "tilepichue") then
+			widget =3D parent:CreateChild("UOImage",param)
+		=

+		=

+		=

+		-- ***** ***** ***** ***** ***** INPUT =

+		=

+		=

+		=

+		--Button <x> <y> <gump_id_normal> <gump_id_pressed> <quit> <page_id> <re=
turn_value>
+		--Description:  Adds a button to the gump with the specified coordinates=
 and button graphics.
+		--				<released-id> and <pressed-id> specify the buttongraphic. If press=
ed check for <return-value>.
+		--				Use <page-id> to switch between pages and <quit>=3D1/0 to close th=
e gump.
+		--  return_value is optional on pol
+		elseif (command =3D=3D "button") then
+			widget =3D parent:CreateChild("UOButton",param)
+
+		--buttontileart <x> <y> <gump_id_normal> <gump_id_pressed> <quit> <page_=
id> <return_value> <art_id> <hue> <art_x> <art_y>
+		--Client introduced: between 4.0.4d and 5.0.2b
+		--Description:  Adds a button to the gump with the specified coordinates=
 and tilepic as graphic.
+		--				<tile-x> and <tile-y> define the coordinates of the tile graphic a=
nd are relative to <x> and <y>.
+		--{ buttontileart 432 248 9010 9010 1 0 33 1352 0 100 20 }
+		elseif (command =3D=3D "buttontileart") then
+			widget =3D parent:CreateChild("UOButton",param)
+			=

+		--checkbox <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_v=
alue>
+		--Description:  Adds a CheckBox to the gump. Multiple CheckBoxes can be =
pressed at the same time.
+		--				Check the <return-value> if you want to know which CheckBoxes were=
 selected.
+		elseif (command =3D=3D "checkbox") then
+			widget =3D parent:CreateChild("UOCheckBox",param)
+			=

+		--radio <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_valu=
e>
+		--Description:  Same as Checkbox, but only one Radiobutton can be presse=
d at the same time, except they are per linked via the 'Group' command.
+		elseif (command =3D=3D "radio") then
+			widget =3D parent:CreateChild("UORadioButton",param,groupnumber)
+			=

+		--Group <groupnumber>
+		--Description:  Links radio buttons to a group. Group is send before rad=
iobuttons. Seems only to work on page 0 and 1.  =

+		elseif (command =3D=3D "group") then
+			groupnumber =3D param.groupnumber
+			=

+		--textentry <x> <y> <width> <height> <hue> <return_value> <textline_id_d=
efault>
+		--Description:  Defines an area where the <default-text-id> is displayed.
+		--				The player can modify this data. To get this data check the <retur=
n-value>
+		elseif (command =3D=3D "textentry") then
+			widget =3D parent:CreateChild("UOEditText",param,Gumpdata.textline_unic=
ode or Gumpdata.textline)
+			=

+			=

+			=

+			=

+		-- ***** ***** ***** ***** ***** END =

+		=

+		=

+		-- UNKNOWN...
+		else
+			printdebug("gump","UNKNOWN Generic Gump Command: "..strjoin(bToken))
+		end
+		=

+		if (param and param.ctrlname) then dialog.controls[param.ctrlname] =3D w=
idget end
+	end
+
+	-- hide all except page 0 and 1
+	dialog:ShowPage(1)
+
+	if (not bClientSideMode) then
+		if (Gumpdata.dialogId) then gServerSideGump[Gumpdata.dialogId] =3D dialo=
g end
+	end
+	return dialog
+end
 =

 -- simple html parser (only center,basefont,br and color tags yep realized)
 -- TODO : BODY, <A HREF=3D"HTTP://www.polserver.com">This is a link</A>
@@ -204,320 +516,6 @@
 	return msg
 end
 =

-local function ServerSideGump_GetParams (dialogId)
-	local params =3D {}
-	params.switches =3D {}
-	params.texts =3D {}
-	local dialog =3D gServerSideGump[dialogId]
-	=

-	if (dialog) then
-		for k,widget in pairs(dialog.uo_radio) do if (widget.state =3D=3D 1) the=
n table.insert(params.switches,widget.returnmsg) end end
-		for k,widget in pairs(dialog.uo_check) do if (widget.state =3D=3D 1) the=
n table.insert(params.switches,widget.returnmsg) end end
-		for k,widget in pairs(dialog.uo_text) do =

-			table.insert(params.texts,{id=3Dwidget.returnmsg,text=3Dwidget.plaintex=
t or  ""})
-		end
-	end
-
-	return params
-end
-
-function CloseServerSideGump (playerId, dialogId, buttonId)
-	if (buttonId) then
-		printdebug("gump","CloseServerSideGump dialogId=3D"..dialogId.." buttonI=
d=3D"..buttonId)
-	else
-		printdebug("gump","CloseServerSideGump dialogId=3D"..dialogId.." buttonI=
d=3Dnil")
-	end
-
-	local dialog =3D gServerSideGump[dialogId]
-	if (not dialog) then printdebug("gump","CloseServerSideGump : dialog not =
found=3D",dialogId) return end
-	if (dialog.SendClose) then dialog:SendClose(buttonId) return end
-	=

-	local params =3D ServerSideGump_GetParams(dialogId)
-	GumpReturnMsg(playerId, dialogId, buttonId, params)
-
-	printdebug("gump","ServerSideGump Dialog closed: dialogID=3D"..dialogId)
-	dialog:Close()
-end
-
--- returns a table
--- token is an array
--- tokenformat is a string with comma-separated field names like "x,y,widt=
h,height,[ctrlname],..." =

--- [] encasing optional params and ... for not checking the number of rema=
ining params
-function GumpParser_ParseToken (token,tokenformat,paramadd)
-	local res =3D paramadd and CopyArray(paramadd) or {}
-	for k,fieldname in ipairs(explode(",",tokenformat)) do
-		if (fieldname =3D=3D "...") then return res end
-		local tokenval =3D token[k+1]
-		-- [param] is optional
-		if (StrLeft(fieldname,1) =3D=3D "[" and StrRight(fieldname,1) =3D=3D "]"=
) then
-			fieldname =3D string.sub(fieldname,2,-2) -- cut away one char from each=
 side
-			if (not tokenval) then return res end -- optional, so exit without warn=
ing possible
-		end
-		if (not tokenval) then print("GumpParser_ParseToken:warning:missing para=
m",k,fieldname,implode(",",token)) return res end -- warn of missing parame=
ters
-		local tokenvalnum =3D tonumber(tokenval)
-		if (tokenvalnum and tokenval =3D=3D ""..tokenvalnum) then tokenval =3D t=
okenvalnum end -- convert number-strings to real numbers
-		res[fieldname] =3D tokenval
-	end
-	return res
-end
-
-
--- close already existing dialog with the same id
-function GumpParser_CloseOldDialog	(dialogId,playerid,bClientSideMode)
-	print("TODO:GumpParser_CloseOldDialog")
-	if ((not bClientSideMode) and gServerSideGump[dialogId]) then
-		CloseServerSideGump(playerid, dialogId, 0, bClientSideMode)
-	end
-end
-
-
-kGumpParser_CommandTypes =3D {}
-kGumpParser_CommandTypes["page"]				=3D {paramformat=3D"pagenum"}
-kGumpParser_CommandTypes["xmfhtmlgump"]			=3D {paramformat=3D"x,y,width,he=
ight,cliloc_id,background,scrollbar,[ctrlname]",paramadd=3D{default_black=
=3Dtrue,html=3Dtrue}} =

-kGumpParser_CommandTypes["xmfhtmlgumpcolor"]	=3D {paramformat=3D"x,y,width=
,height,cliloc_id,background,scrollbar,hue,[ctrlname]",paramadd=3D{html=3Dt=
rue}}
-kGumpParser_CommandTypes["croppedtext"]			=3D {paramformat=3D"x,y,width,he=
ight,hue,textline_id,[ctrlname]",paramadd=3D{bold=3Dtrue,crop=3Dtrue}}
-kGumpParser_CommandTypes["htmlgump"]			=3D {paramformat=3D"x,y,width,heigh=
t,textline_id,background,scrollbar,[ctrlname]",paramadd=3D{default_black=3D=
true,html=3Dtrue}} =

-kGumpParser_CommandTypes["text"]				=3D {paramformat=3D"x,y,hue,textline_i=
d,[ctrlname]",paramadd=3D{bold=3Dfalse,default_black=3Dtrue}}
-kGumpParser_CommandTypes["tooltip"]				=3D {paramformat=3D"cliloc_id,[ctrl=
name]"}
-kGumpParser_CommandTypes["resizepic"]			=3D {paramformat=3D"x,y,gump_id,wi=
dth,height,[ctrlname]",paramadd=3D{multipart=3Dtrue}}
-kGumpParser_CommandTypes["gumppictiled"]		=3D {paramformat=3D"x,y,width,he=
ight,gump_id,[ctrlname]",paramadd=3D{tiled=3Dtrue}}
-kGumpParser_CommandTypes["checkertrans"]		=3D {paramformat=3D"x,y,width,he=
ight,[ctrlname]",paramadd=3D{checker=3Dtrue}}
-kGumpParser_CommandTypes["tilepic"]				=3D {paramformat=3D"x,y,art_id,[ctr=
lname]"}
-kGumpParser_CommandTypes["tilepichue"]			=3D {paramformat=3D"x,y,art_id,hu=
e,[ctrlname]"}
-kGumpParser_CommandTypes["button"]				=3D {paramformat=3D"x,y,gump_id_norm=
al,gump_id_pressed,quit,page_id,[return_value],[ctrlname]"}
-kGumpParser_CommandTypes["buttontileart"]		=3D {paramformat=3D"x,y,gump_id=
_normal,gump_id_pressed,quit,page_id,return_value,art_id,hue,art_x,art_y,[c=
trlname]"}
-kGumpParser_CommandTypes["checkbox"]			=3D {paramformat=3D"x,y,gump_id_nor=
mal,gump_id_pressed,status,return_value,[ctrlname]"}
-kGumpParser_CommandTypes["radio"]				=3D {paramformat=3D"x,y,gump_id_norma=
l,gump_id_pressed,status,return_value,[ctrlname]"}
-kGumpParser_CommandTypes["group"]				=3D {paramformat=3D"groupnumber"}
-kGumpParser_CommandTypes["textentry"]			=3D {paramformat=3D"x,y,width,heig=
ht,hue,return_value,textline_id_default,[ctrlname]"}
-kGumpParser_CommandTypes["gumppic"]				=3D {paramformat=3D"x,y,gump_id,...=
"}
-				=

-
-function GumpParser_DebugDumpGump (Gumpdata)
-	-- debug dump
-	if (1 =3D=3D 1 and (not Clientsidemode)) then =

-		print("\n\n##### GUMP #####\n\n\""..Gumpdata.Data.."\",\n\ntextline=3D{"=
) =

-		for k,v in pairs(Gumpdata.textline or {}) do print("["..k.."]=3D\""..v..=
"\",") end =

-		print("},")
-		print("textline_unicode=3D{")
-		for k,unicode_arr in pairs(Gumpdata.textline_unicode or {}) do =

-			printf("["..k.."]=3D{") =

-			for k2,unicode_charcode in pairs(unicode_arr) do printf("%d,",unicode_c=
harcode) end
-			printf("},\n") =

-		end =

-		print("},")
-		print("#######\n\n") =

-	end
-end
-
-
-function GumpParser_New (Gumpdata, bClientSideMode)
-	-- if there is a dialog with the same id, close it
-	GumpParser_CloseOldDialog(Gumpdata.dialogId,Gumpdata.playerid,bClientSide=
Mode)
-	if (kGumpParser_DebugDump) then GumpParser_DebugDumpGump(Gumpdata) end
-	=

-	-- setup
-	local dialog =3D GetDesktopWidget():CreateChild("GumpDialog",{dialogId=3D=
Gumpdata.dialogId,bClientSideMode=3DbClientSideMode,Gumpdata=3DGumpdata})
-	dialog.gumpdata =3D Gumpdata -- for debugging
-	local parent =3D dialog:GetPage(0)
-	local groupnumber =3D -1 -- for radiobuttons
-	local widget
-	=

-	-- parse gump code
-	local command_chunks =3D {}
-	--~ local profiler =3D MakeProfiler("gumpparser","preload")
-	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
-		local bToken =3D {}
-		for token in string.gfind(v, "%w+") do table.insert(bToken,token) end
-		local command =3D bToken[1] and string.lower(bToken[1]) or ""
-		local commandtype =3D kGumpParser_CommandTypes[command]
-		local param =3D commandtype and GumpParser_ParseToken(bToken,commandtype=
.paramformat,commandtype.paramadd)
-		=

-		if (command =3D=3D "gumppic") then -- special format, optional hue=3D123
-			if (bToken[5] =3D=3D "hue") then param.hue =3D bToken[6] end
-			if (bClientSideMode) then param.ctrlname =3D bToken[5] end
-		end
-		=

-		table.insert(command_chunks,{command,bToken,param})
-		=

-		-- preload gumps,artids and maybe unicode chars from cliloc and textline=
s, texatlas bulk loading
-		--~ PreLoadCliloc(param.cliloc_id) -- later : unicode glyphs for font ?
-		if (param) then =

-			if (command =3D=3D "resizepic") then for k,v in pairs(kBorderGumpIndexA=
dd) do PreLoadGump(param.gump_id + v) end end
-			PreLoadGump(param.gump_id_normal)
-			PreLoadGump(param.gump_id_pressed)
-			PreLoadGump(param.gump_id,param.hue)
-			PreLoadArt(param.art_id,param.hue)
-		end
-	end
-	--~ profiler:FinishAndPrint()
-	=

-	for k,command_chunk in pairs(command_chunks) do =

-		local command,bToken,param =3D unpack(command_chunk)
-		------------------------------------------------------------------------=
--------------------
-		if (command =3D=3D "") then -- no word in line
-		elseif (command =3D=3D "noclose") then
-			dialog.noclose =3D true
-		elseif (command =3D=3D "nomove") then
-			dialog.nomove =3D true
-		elseif (command =3D=3D "nodispose") then
-			dialog.nodispose =3D true
-		elseif (command =3D=3D "noresize") then
-			dialog.noresize =3D true
-			=

-		--Description:  Specifies which page to define. Page 0 is already presen=
t and visible with all other Pages (1,2,3,etc) =

-		elseif (command =3D=3D "page") then
-			parent =3D dialog:GetPage(param.pagenum)
-			-- NO:groupnumber =3D -1 -- DON'T start new radio button group on page-=
switch ! (moongate menu for example)
-			=

-			=

-			=

-		-- ***** ***** ***** ***** ***** TEXT =

-			=

-			=

-		=

-		--xmfhtmlgump <x> <y> <width> <height> <cliloc_id> <background> <scrollb=
ar>
-		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
-		elseif (command =3D=3D "xmfhtmlgump") then
-			widget =3D parent:CreateChild("UOText",param)
-			=

-		--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc_id> <background> <sc=
rollbar> <hue>
-		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
-		elseif (command =3D=3D "xmfhtmlgumpcolor") then
-			widget =3D parent:CreateChild("UOText",param)
-			=

-		-- croppedtext <x> <y> <width> <height> <hue> <textline_id>
-		-- Description:  Adds a text field to the gump. This is similar to the t=
ext command,
-		-- but the text is cropped to the defined area.
-		-- text is automatically bold/outlined
-		elseif (command =3D=3D "croppedtext") then
-			widget =3D parent:CreateChild("UOText",param,Gumpdata.textline_unicode =
or Gumpdata.textline)
-			=

-		--HtmlGump <x> <y> <width> <height> <textline_id> <background> <scrollba=
r>
-		--Description:  Defines a text-area where Html-commands are allowed.
-		--				<background> and <scrollbar> can be 0 or 1 and define whether the =
background is transparent and a scrollbar is displayed.
-		--{ htmlgump 10 8 100 20 0 0 0 }
-		elseif (command =3D=3D "htmlgump") then
-			widget =3D parent:CreateChild("UOText",param,Gumpdata.textline_unicode =
or Gumpdata.textline)
-			=

-		--text <x> <y> <hue> <textline_id>
-		--Description:  Defines the position and hue of a text (data) entry.
-		elseif (command =3D=3D "text") then
-			widget =3D parent:CreateChild("UOText",param,Gumpdata.textline_unicode =
or Gumpdata.textline)
-
-		--tooltip <cliloc_id>
-		--Description:  Adds to the previous layoutarray entry a Tooltip with th=
e in [cliloc-nr] defined Cliloc entry
-		elseif (command =3D=3D "tooltip") then
-			print("TODO:GumpParser_SetToolTipp",widget,param.cliloc_id)
-			=

-			=

-			=

-			=

-		-- ***** ***** ***** ***** ***** IMAGE =

-		=

-		=

-		=

-		--resizepic <x> <y> <gump_id> <width> <height>
-		--consists of multiple(9) parts, for which gump_id is the base-id, a bor=
der-frame like thing, dialog background for example. tiled
-		-- multipart=3Dtrue : the gump_id is just the base id, the border tiles =
have different ids, calculated from it
-		elseif (command =3D=3D "resizepic") then
-			widget =3D parent:CreateChild("UOImage",param)
-			=

-		--gumppic <x> <y> <gump_id> [hue=3D353]
-		--Description:  Adds a graphic to the gump, where <id> ist the graphic i=
d of an item.
-		--				Optionaly there is a color parameter. =

-		elseif (command =3D=3D "gumppic") then
-			widget =3D parent:CreateChild("UOImage",param)
-
-		--gumppictiled <x> <y> <width> <height> <gump_id>
-		--Description:  Similar to GumpPic, but the gumppic is tiled to the give=
n <height> and <width>.
-		elseif (command =3D=3D "gumppictiled") then
-			widget =3D parent:CreateChild("UOImage",param)
-
-		--checkertrans <x> <y> <width> <height>
-		--Description:  Creates a transparent rectangle on position <x,y> using =
<width> and <height>.
-		elseif (command =3D=3D "checkertrans") then
-			widget =3D parent:CreateChild("UOImage",param)
-
-		--tilepic <x> <y> <art_id>
-		--Description:  Adds a Tilepicture to the gump. <id> defines the tile gr=
aphic-id.
-		elseif (command =3D=3D "tilepic") then
-			widget =3D parent:CreateChild("UOImage",param)
-
-		--TilePicHue <x> <y> <art_id> <hue>
-		--Description:  Similar to the tilepic command, but with an additional h=
ue parameter.
-		elseif (command =3D=3D "tilepichue") then
-			widget =3D parent:CreateChild("UOImage",param)
-		=

-		=

-		=

-		-- ***** ***** ***** ***** ***** INPUT =

-		=

-		=

-		=

-		--Button <x> <y> <gump_id_normal> <gump_id_pressed> <quit> <page_id> <re=
turn_value>
-		--Description:  Adds a button to the gump with the specified coordinates=
 and button graphics.
-		--				<released-id> and <pressed-id> specify the buttongraphic. If press=
ed check for <return-value>.
-		--				Use <page-id> to switch between pages and <quit>=3D1/0 to close th=
e gump.
-		--  return_value is optional on pol
-		elseif (command =3D=3D "button") then
-			widget =3D parent:CreateChild("UOButton",param)
-
-		--buttontileart <x> <y> <gump_id_normal> <gump_id_pressed> <quit> <page_=
id> <return_value> <art_id> <hue> <art_x> <art_y>
-		--Client introduced: between 4.0.4d and 5.0.2b
-		--Description:  Adds a button to the gump with the specified coordinates=
 and tilepic as graphic.
-		--				<tile-x> and <tile-y> define the coordinates of the tile graphic a=
nd are relative to <x> and <y>.
-		--{ buttontileart 432 248 9010 9010 1 0 33 1352 0 100 20 }
-		elseif (command =3D=3D "buttontileart") then
-			widget =3D parent:CreateChild("UOButton",param)
-			=

-		--checkbox <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_v=
alue>
-		--Description:  Adds a CheckBox to the gump. Multiple CheckBoxes can be =
pressed at the same time.
-		--				Check the <return-value> if you want to know which CheckBoxes were=
 selected.
-		elseif (command =3D=3D "checkbox") then
-			widget =3D parent:CreateChild("UOCheckBox",param)
-			=

-		--radio <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_valu=
e>
-		--Description:  Same as Checkbox, but only one Radiobutton can be presse=
d at the same time, except they are per linked via the 'Group' command.
-		elseif (command =3D=3D "radio") then
-			widget =3D parent:CreateChild("UORadioButton",param,groupnumber)
-			=

-		--Group <groupnumber>
-		--Description:  Links radio buttons to a group. Group is send before rad=
iobuttons. Seems only to work on page 0 and 1.  =

-		elseif (command =3D=3D "group") then
-			groupnumber =3D param.groupnumber
-			=

-		--textentry <x> <y> <width> <height> <hue> <return_value> <textline_id_d=
efault>
-		--Description:  Defines an area where the <default-text-id> is displayed.
-		--				The player can modify this data. To get this data check the <retur=
n-value>
-		elseif (command =3D=3D "textentry") then
-			widget =3D parent:CreateChild("UOEditText",param,Gumpdata.textline_unic=
ode or Gumpdata.textline)
-			=

-			=

-			=

-			=

-		-- ***** ***** ***** ***** ***** END =

-		=

-		=

-		-- UNKNOWN...
-		else
-			printdebug("gump","UNKNOWN Generic Gump Command: "..strjoin(bToken))
-		end
-		=

-		if (param and param.ctrlname) then dialog.controls[param.ctrlname] =3D w=
idget end
-	end
-
-	-- hide all except page 0 and 1
-	dialog:ShowPage(1)
-
-	if (not bClientSideMode) then
-		if (Gumpdata.dialogId) then gServerSideGump[Gumpdata.dialogId] =3D dialo=
g end
-	end
-	return dialog
-end
-
-
-	=

 function GumpParser_Old (Gumpdata, Clientsidemode)
 	if (not gGumpLoader) then return end
 =

@@ -883,6 +881,7 @@
 										end
 									  end
 ]]--
+
 				if (Clientsidemode) then dialog.controls[ bToken[8] ] =3D widget end
 				table.insert(dialog.uo_check,widget)
 =

@@ -928,3 +927,4 @@
 	end
 	return dialog
 end
+

Modified: trunk/lua/gui/gui.healthbar.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.healthbar.lua (original)
+++ trunk/lua/gui/gui.healthbar.lua Tue Aug  5 22:16:22 2008
@@ -128,6 +128,8 @@
 ]]--
 -- Open Healthbar Gump
 function OpenHealthbar (mobile,x,y)
+--	if true then return end
+	=

 	if mobile =3D=3D nil then return end
 	=

 	-- try to read position from desktop infos
@@ -189,10 +191,7 @@
 	end
 end
 =

-
-
 -- focused/selection auto health bar
-
 function HealthBarUpdateSelection(mobile)
 	if not gHealthBarSelectionDialog then
 		-- init dialog
@@ -206,6 +205,5 @@
 		gHealthBarSelectionDialog:SetVisible(false) =

 	else
 		gHealthBarSelectionDialog:SetVisible(true)
-				=

-	end
-end
+	end
+end

Modified: trunk/lua/gui/gui.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.main.lua (original)
+++ trunk/lua/gui/gui.main.lua Tue Aug  5 22:16:22 2008
@@ -14,3 +14,4 @@
 dofile(libpath .. "gui/gui.trade.lua")
 dofile(libpath .. "gui/gui.chat.lua")
 dofile(libpath .. "gui/gui.amount.lua")
+dofile(libpath .. "gui/gui.popup.lua")

Modified: trunk/lua/gui/gui.spellbook.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.spellbook.lua (original)
+++ trunk/lua/gui/gui.spellbook.lua Tue Aug  5 22:16:22 2008
@@ -33,6 +33,8 @@
 end
 =

 function CreateQuickCastButtonSpell(x,y,spellid,spelliconid)
+--	if true then return end
+
 	for k,v in pairs(glQuickCastDialog) do
 		if v and v.spellid and v.spellid =3D=3D spellid then
 			if v and v.rootwidget and v.rootwidget.gfx and v.rootwidget.gfx:IsAlive=
() then
@@ -63,6 +65,8 @@
 end
 =

 function Open_Spellbook(spellbook)
+--	if true then return end
+
 	local dialog =3D gAvailSpellbooks[spellbook.serial]
 =

 	if (dialog and not(spellbook.old)) then

Modified: trunk/lua/net/net.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.main.lua (original)
+++ trunk/lua/net/net.main.lua Tue Aug  5 22:16:22 2008
@@ -19,7 +19,6 @@
 -- only things that have at least 2 packets get its own file, everything e=
lse is handled here:
 dofile(libpath .. "net/net.packethandlers.lua")
 =

-dofile(libpath .. "net.popup.lua")
 dofile(libpath .. "net.walk.lua")
 =

 gLastDoubleClickSerial =3D 0

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Tue Aug  5 22:16:22 2008
@@ -93,8 +93,33 @@
 	--print("PingPong")
 end
 =

-
-
+-- triggers -- which came from kPacket_Generic_SubCommand_DisplayPopup
+function Send_PopupRequest (serial)
+	--- if there is already one open, close it
+	if gPopupMenu ~=3D nil then gPopupMenu:Close() end
+	gRunningPopupRequestTimeOut =3D gMyTicks + kRunningPopupRequestTimeOutInt=
erval
+
+	gPopupMenuSavedPosX,gPopupMenuSavedPosY =3D GetMousePos() -- TODO : maybe=
 save mousepos at the time of contextrequest ?
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Generic_Command)
+	out:PushNetUint16(hex2num("0x09")) -- packet size
+	out:PushNetUint16(kPacket_Generic_SubCommand_PopupRequest) -- Popup Reque=
st Sub-Command
+	out:PushNetUint32(serial) -- Popup Request Sub-Command
+	out:SendPacket()
+end
+
+-- sends kPacket_Generic_SubCommand_PopupEntrySelect after the user has ch=
oosen an answer to the popup
+-- which came from kPacket_Generic_SubCommand_DisplayPopup
+-- see also SendPopupChoice() from old iris
+function Send_PopupAnswer (popupserial,entrytag)
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Generic_Command)
+	out:PushNetUint16(hex2num("0x0B")) -- packet size
+	out:PushNetUint16(kPacket_Generic_SubCommand_PopupEntrySelect) -- Popup R=
equest Sub-Command
+	out:PushNetUint32(popupserial)
+	out:PushNetUint16(entrytag)
+	out:SendPacket()
+end
 =

 -- sends the server the lock state of one stat
 -- stat (0=3Dstr, 1=3Ddex, 2=3Dint)



From no-reply at zwischenwelt.org  Wed Aug  6 00:34:43 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 22:34:43 -0000
Subject: [Iris-commit] [IRIS] r2359 - in /trunk: data/ lua/ lua/gui/
	lua/obj/ widgets/
Message-ID: <20080805223444.136C41524030@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug  6 00:34:43 2008
New Revision: 2359

Log:
uodragdrop : osi-like-behavior,bugfixes, container-gumps now use guisys2

Added:
    trunk/widgets/widget.uocontainer.lua
    trunk/widgets/widget.uocontaineritem.lua
Modified:
    trunk/data/config.lua.dist
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/gui/gui.securetrade.lua
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.uodragdrop.lua
    trunk/lua/obj/obj.container.lua
    trunk/lua/obj/obj.dynamic.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Wed Aug  6 00:34:43 2008
@@ -18,6 +18,8 @@
 -- gUOPath =3D "C:\\Programme\\EA Games\\Ultima Online\\" -- example for w=
in
 -- gUOPath =3D "c:/programme/uo/"  -- example for win
 =

+gShiftDragCombine =3D false
+gDisableContainerItemStackDoubleImage =3D false
 gDebugTerrainGrid =3D false
 =

 -- Speech support

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Wed Aug  6 00:34:43 2008
@@ -73,6 +73,18 @@
 	=

 	local testgump,x,y,kDebugName =3D kGumpSample_PM,0,300,"bla"
 	local d2 =3D GumpParser_New(testgump,false) -- d2:SetPos(x,y) d2.sDebugNa=
me =3D kDebugName
+	=

+	local container =3D {serial=3D1234,gumpid=3D60,content=3D{
+			{serial=3D1001,artid=3D9625,xloc=3D61,yloc=3D104,hue=3D0,amount=3D1,use=
gump=3Dfalse},
+			{serial=3D1002,artid=3D3982,xloc=3D51,yloc=3D65,hue=3D0,amount=3D38,use=
gump=3Dfalse},
+			{serial=3D1003,artid=3D3965,xloc=3D135,yloc=3D87,hue=3D0,amount=3D22,us=
egump=3Dfalse},
+			{serial=3D1004,artid=3D3965,xloc=3D87,yloc=3D75,hue=3D0,amount=3D16,use=
gump=3Dfalse},
+			{serial=3D1005,artid=3D8901,xloc=3D83,yloc=3D102,hue=3D1121,amount=3D1,=
usegump=3Dfalse},
+			{serial=3D1006,artid=3D3983,xloc=3D86,yloc=3D102,hue=3D0,amount=3D38,us=
egump=3Dfalse},
+			{serial=3D1007,artid=3D8787,xloc=3D110,yloc=3D95,hue=3D2406,amount=3D1,=
usegump=3Dfalse},
+		},GetContent=3Dfunction (self) return self.content end}
+
+	local containerdialog =3D CreateUOContainerDialog(container)
 	=

 	--~ local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) d=
ialog:SetLeftTop(400,100)
 	--~ GumpParser(kClientSideGump_Paperdoll_Own,true)

Modified: trunk/lua/gui/gui.securetrade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.securetrade.lua (original)
+++ trunk/lua/gui/gui.securetrade.lua Wed Aug  6 00:34:43 2008
@@ -4,6 +4,7 @@
 securetrading.dialogId =3D 4000001
 securetrading.x =3D 0
 securetrading.y =3D 0
+--~ securetrading.bSupportsGuiSys2 =3D true
 securetrading.Data =3D
 	 "{ page 0 }" ..
 	 "{ gumppic 0 0 2150 securepic }" ..
@@ -37,6 +38,7 @@
 gSecureTrades =3D {}
 =

 function SecureTradeRebuildContainerWidgets (mysectrade,container,bIsMyStu=
ff)
+	assert(mysectrade.dialog.rootwidget,"SecureTrade not supported by new gui=
 system yet")
 	if (bIsMyStuff) then
 		for k,widget in pairs(mysectrade.myStuff) do widget:Destroy() end
 		mysectrade.myStuff =3D {}
@@ -136,6 +138,8 @@
 =

 		-- show dialog
 		local dialog =3D GumpParser( securetrading, true )
+		=

+		assert(dialog.rootwidget,"SecureTrade not supported by new gui system ye=
t 2")
 =

 		mysectrade.dialog =3D dialog
 		dialog.uoSecureTrade =3D mysectrade

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Wed Aug  6 00:34:43 2008
@@ -55,6 +55,7 @@
 	-- 2d mousepicking
 	local widget =3D GetWidgetUnderMouse()
 	if (widget) then =

+		--~ print("Renderer3D:MousePick_2D",widget,widget.uoContainer,widget.ite=
m,widget.GetClassName and widget:GetClassName())
 		if (widget.uoContainer and widget.item) then
 			gMousePickFoundHit =3D {}
 			gMousePickFoundHit.hittype =3D kMousePickHitType_ContainerItem

Modified: trunk/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uodragdrop.lua (original)
+++ trunk/lua/lib.uodragdrop.lua Wed Aug  6 00:34:43 2008
@@ -5,8 +5,8 @@
 =

 function SetDragItem( item, offx, offy )
 	if (item) then
-		local material		=3D GetArtMat( item.artid + hex2num("0x4000"), item.hue )
-		local width, height	=3D GetArtSize( item.artid + hex2num("0x4000"), item=
.hue )
+		local material		=3D GetArtMat( item.artid + 0x4000, item.hue )
+		local width, height	=3D GetArtSize( item.artid + 0x4000, item.hue )
 		=

 		if (not offx) then offx =3D -math.floor( width/2 ) end
 		if (not offy) then offy =3D -math.floor( height*3/5 ) end
@@ -170,7 +170,7 @@
 function PrepareDragPaperdollItem (item) =

 	if (item.layer =3D=3D kLayer_Backpack) then return end
 	local widget =3D item.widget
-	local iArtID =3D item.artid + hex2num("0x4000")
+	local iArtID =3D item.artid + 0x4000
 	local mat =3D GetArtMat(iArtID,item.hue)
 	local w,h =3D GetArtSize(iArtID,item.hue)
 	local offx,offy =3D -w/2,-h/2 =

@@ -182,12 +182,13 @@
 function PrepareDragContainerItem (item) =

 	local widget =3D item.widget or item.secwidget
 	if (not widget) then return end
-	local iArtID =3D item.artid + hex2num("0x4000")
+	local iArtID =3D item.artid + 0x4000
 	local mat =3D GetArtMat(iArtID,item.hue)
 	local w,h =3D GetArtSize(iArtID,item.hue)
 	local iMouseX,iMouseY =3D GetMousePos()
-	local offx =3D widget.gfx:GetDerivedLeft() - iMouseX =

-	local offy =3D widget.gfx:GetDerivedTop() - iMouseY
+	local x,y =3D widget:GetDerivedPos()
+	local offx =3D x - iMouseX =

+	local offy =3D y - iMouseY
 	=

 	-- used fields of gDragDrop.item : 	.artid .serial .amount =

 	PrepareUODragDrop(item,widget,mat,w,h,offx,offy)
@@ -197,7 +198,7 @@
 -- Todo: Multi support
 function PrepareDragDynamic (dynamic)
 	if dynamic.artid < gMulti_ID then
-		local iArtID =3D dynamic.artid + hex2num("0x4000")
+		local iArtID =3D dynamic.artid + 0x4000
 		local matname =3D GetArtMat(iArtID,dynamic.hue)
 		local w,h =3D GetArtSize(iArtID,dynamic.hue)
 		local offx,offy =3D -w/2,-h/2 =

@@ -337,10 +338,14 @@
 	printdebug("dragdrop","MouseUpUODragDrop",dialog_under_mouse,dialog_under=
_mouse and dialog_under_mouse.debugname)
 	=

 	if (dialog_under_mouse) then
+		local iMouseX,iMouseY =3D GetMousePos()
 		if (dialog_under_mouse.rootwidget) then
-			local iMouseX,iMouseY =3D GetMousePos()
 			x =3D iMouseX - dialog_under_mouse.rootwidget.gfx:GetDerivedLeft() + gD=
ragDrop.offx
 			y =3D iMouseY - dialog_under_mouse.rootwidget.gfx:GetDerivedTop() + gDr=
agDrop.offy
+		elseif (dialog_under_mouse.GetDerivedPos) then
+			local dx,dy =3D dialog_under_mouse:GetDerivedPos()
+			x =3D iMouseX - dx + gDragDrop.offx
+			y =3D iMouseY - dy + gDragDrop.offy
 		end
 	end
 	=

@@ -378,7 +383,7 @@
 		end
 		=

 		-- stack items of same type in the container if shift is pressed
-		if (gKeyPressed[key_lshift] and container) then
+		if (gShiftDragCombine and gKeyPressed[key_lshift] and container) then
 			printdebug("dragdrop","stack same items")
 			for k,i in pairs(container:GetContent()) do =

 				if =


Modified: trunk/lua/obj/obj.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.container.lua (original)
+++ trunk/lua/obj/obj.container.lua Wed Aug  6 00:34:43 2008
@@ -35,64 +35,7 @@
 	self:UpdateContent()
 end
 =

--- ----------------------------------------------- container prototype ---=
--------------------------
-
-local function DestroyContainerItemWidgets (container) =

-	for k,item in pairs(container:GetContent()) do
-		if (item.widget) then item.widget:Destroy()  item.widget =3D nil end
-	end
-end
-
--- create graphical representation (use only if container dialog is alread=
y visible)
-local function MakeContainerItemWidget (item)
-	local parent =3D item.container.dialog.rootwidget
-	local widget =3D nil
-
-	-- If it's not an ART-gfx to display -> Display GUMP-gfx
-	if (item.usegump=3D=3Dtrue) then -- true for gold pieces and similar, see=
 obj.dynamic.lua ApplyArtidStackManipulation
-		widget =3D MakeBorderGumpPart (parent,item.artid,item.xloc,item.yloc + i=
tem.gumpyoffset)
-
-		widget.mbIgnoreMouseOver =3D false
-		widget.uoContainer =3D item.container
-		widget.item =3D item
-		item.widget =3D widget
-
-		widget.onMouseLeave =3D function () gCurrentRenderer.gMousePickTippOverr=
ide =3D false end
-		widget.onMouseDown	=3D function (widget,mousebutton) end
-	else
-		widget =3D MakeArtGumpPart (parent,item.artid,item.xloc,item.yloc,0,0,0,=
item.hue)
-
-		widget.mbIgnoreMouseOver =3D false
-		widget.uoContainer =3D item.container
-		widget.item =3D item
-		item.widget =3D widget
-
-		-- item debuginfo on mouseover (clientside,debuginfos)
-		widget.onMouseLeave =3D function () =

-			gCurrentRenderer.gMousePickTippOverride =3D false =

-			Client_SetBottomLine("")
-		end
-		widget.onMouseDown	=3D function (widget,mousebutton) end
-		widget.onMouseEnter =3D function ()
-			-- TODO : find a cleaner solution to override the mousepick tipp
-			local item =3D widget.item
-			local name =3D GetStaticTileTypeName(item.artid) or ""
-			info =3D sprintf("item %s amount=3D%d (artid=3D%04x=3D%d)",name,item.am=
ount,item.artid,item.artid)
-			gCurrentRenderer.gMousePickTippOverride =3D info
-			Client_SetBottomLine(gCurrentRenderer.gMousePickTippOverride)
-		end
-	end
-
-	if (gTooltipSupport and widget) then
-		widget.tooltip_offx =3D kUOToolTippOffX
-		widget.tooltip_offy =3D kUOToolTippOffY
-		widget.stylesetname =3D gGuiDefaultStyleSet
-		widget.on_simple_tooltip =3D function (widget) =

-				local tooltiptext =3D AosToolTip_GetText(widget.item.serial) or ""
-				return (tooltiptext .. " \n ") or "?" =

-			end -- add newline, workaround for tooltip sizecalc bug
-	end
-end
+
 =

 -- ----------------------------------------------- End of local functions =
-----------------------------
 =

@@ -125,10 +68,7 @@
 =

 -- destroys old widgets and creates new ones from contents
 function RefreshContainerItemWidgets (container) =

-	if (container.dialog) then
-		DestroyContainerItemWidgets(container)
-		for k,item in pairs(container:GetContent()) do MakeContainerItemWidget(i=
tem) end
-	end
+	if (container.dialog) then container.dialog:RefreshItems() end
 end
 =

 -- called from kPacket_Open_Container
@@ -157,36 +97,16 @@
 	end
 	=

 	-- normal container
-	=

 	local container =3D GetOrCreateContainer(containerdata.serial)
 	container.gumpid =3D containerdata.gumpid
 	=

 	-- 0x003c =3D backpack
 	-- 0x0030 =3D shopcontainer
-	if (not container.dialog) then
-		-- create dialog from scratch
-		local dialog =3D guimaker.MakeSortedDialog()
-		container.dialog =3D dialog
-		dialog.uoContainer =3D container
-		=

-		local x,y =3D GetDesktopElementPosition("container",containerdata.serial)
-		if x and y then =

-			dialog.rootwidget.gfx:SetPos(x,y) -- TODO : choose position
-		else
-			dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
-		end
-		=

-		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
-		dialog.backpane.mbIgnoreMouseOver =3D false
-		dialog.backpane.on_mouse_right_down	=3D function (widget) CloseContainer=
(widget.dialog.uoContainer.serial) end
-		dialog.backpane.on_mouse_left_down	=3D function (widget) widget.dialog:B=
ringToFront() gui.StartMoveDialog(widget.dialog.rootwidget) end
-		=

-		NotifyListener("Hook_OpenContainer", dialog, container.serial)
-	end
+	if (not container.dialog) then container.dialog =3D CreateUOContainerDial=
og(container) end
 	gLastDebugContainer =3D container
 	RefreshContainerItemWidgets(container)
-
 	SecureTradeRebuildContainerHook(container)
+	NotifyListener("Hook_OpenContainer",container.dialog,container.serial)
 end
 =

 -- packet handlers for containers (chests, drawers, inventory..)
@@ -203,7 +123,6 @@
 	local container =3D GetContainer(serial)
 	if (container and container.dialog) then
 		NotifyListener("Hook_CloseContainer",container.dialog,serial)
-		DestroyContainerItemWidgets(container)
 		container.dialog:Destroy()
 		container.dialog =3D nil
 	end
@@ -225,9 +144,7 @@
 function OpenContainer	(serial, x,y)
 	Send_DoubleClick(serial)
 	local container =3D GetOrCreateContainer(serial) =

-	if container.dialog and container.dialog.rootwidget then
-		container.dialog.rootwidget.gfx:SetPos(x,y)
-	end
+	if container.dialog then container.dialog:SetPos(x,y) end
 end
 =

 --[[

Modified: trunk/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.dynamic.lua (original)
+++ trunk/lua/obj/obj.dynamic.lua Wed Aug  6 00:34:43 2008
@@ -120,11 +120,6 @@
 	local bIsInWorld =3D self.iContainerSerial =3D=3D 0
 	-- i think bIsInWorld is only true if the object was initially created us=
ing kPacket_Show_Item
 	-- or is it possible for object_to_object/equip_item to set iContainerSer=
ial to zero ?
-
-	if (not bIsInWorld) then =

-		-- TODO : burn in gumpyoffset if dynamicdata contains position ?? =

-		-- self.yloc =3D self.yloc+self.gumpyoffset
-	end
 =

 	-- TODO : if (self.artid >=3D gMulti_ID +100) .. model is multi
 	-- gMulti_ID =3D hex2num("0x4000")



From no-reply at zwischenwelt.org  Wed Aug  6 01:46:24 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 05 Aug 2008 23:46:24 -0000
Subject: [Iris-commit] [IRIS] r2360 - in /trunk: lua/gui/gui.securetrade.lua
 lua/lib.uodragdrop.lua lua/obj/obj.container.lua
 widgets/widget.uocheckbox.lua
Message-ID: <20080806000010.71B841C18011@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug  6 01:46:24 2008
New Revision: 2360

Log:
secure trade dialog ported to new guisystem. uocheckbox: on_change,readonly

Modified:
    trunk/lua/gui/gui.securetrade.lua
    trunk/lua/lib.uodragdrop.lua
    trunk/lua/obj/obj.container.lua
    trunk/widgets/widget.uocheckbox.lua

Modified: trunk/lua/gui/gui.securetrade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.securetrade.lua (original)
+++ trunk/lua/gui/gui.securetrade.lua Wed Aug  6 01:46:24 2008
@@ -4,7 +4,7 @@
 securetrading.dialogId =3D 4000001
 securetrading.x =3D 0
 securetrading.y =3D 0
---~ securetrading.bSupportsGuiSys2 =3D true
+securetrading.bSupportsGuiSys2 =3D true
 securetrading.Data =3D
 	 "{ page 0 }" ..
 	 "{ gumppic 0 0 2150 securepic }" ..
@@ -38,61 +38,15 @@
 gSecureTrades =3D {}
 =

 function SecureTradeRebuildContainerWidgets (mysectrade,container,bIsMyStu=
ff)
-	assert(mysectrade.dialog.rootwidget,"SecureTrade not supported by new gui=
 system yet")
-	if (bIsMyStuff) then
-		for k,widget in pairs(mysectrade.myStuff) do widget:Destroy() end
-		mysectrade.myStuff =3D {}
-	else
-		for k,widget in pairs(mysectrade.theirStuff) do widget:Destroy() end
-		mysectrade.theirStuff =3D {}
-	end
 	local widgetarr =3D bIsMyStuff and mysectrade.myStuff or mysectrade.their=
Stuff
+	for k,widget in pairs(widgetarr) do widget:Destroy() end widgetarr =3D {}
+	if (bIsMyStuff) then mysectrade.myStuff =3D widgetarr else mysectrade.the=
irStuff =3D widgetarr end
 	=

-
-	local addx,addy =3D kSecureTradeContainerPos_LeftX,kSecureTradeContainerP=
os_LeftY
-	if (not bIsMyStuff) then addx,addy =3D kSecureTradeContainerPos_RightX,kS=
ecureTradeContainerPos_RightY end
-	=

-	local parent =3D mysectrade.dialog.rootwidget
+	local parent =3D bIsMyStuff and mysectrade.dialog.items_mine or mysectrad=
e.dialog.items_other
 	for k,item in pairs(container:GetContent()) do
-		-- todo : gold art modifyer
-		local iArtID =3D item.artid + hex2num("0x4000")
-		local mat =3D GetArtMat(iArtID,item.hue)
-		if ((not mat) or mat =3D=3D "") then
-			print("WARNING ! SecureTradeRebuildContainerWidgets : material load fai=
led for artid=3D", iArtID)
-		else
-			local bitmask =3D GetArtBitMask(iArtID)
-			local w,h =3D GetArtSize(iArtID,item.hue)
-			local x =3D item.xloc+addx
-			local y =3D item.yloc+addy
-			local sanepos =3D 200 -- just to make sure
-			if (math.abs(x-addx) > sanepos) then x =3D addx end
-			if (math.abs(y-addy) > sanepos) then y =3D addy end
-			--print("   ",GetStaticTileTypeName(item.artid) or "",item.xloc,item.yl=
oc,sprintf("0x%08x",item.xloc),sprintf("0x%08x",item.yloc))
-			local widget =3D {}
-			widget =3D guimaker.MakePlane(parent,mat,x,y,w,h)
-			local tw,th =3D texsize(w),texsize(h)
-			widget.gfx:SetUV(0,(0)/th,w/tw,(h+0)/th)
-			widget:SetBitMask(bitmask)
-			widget.mbIgnoreMouseOver =3D false
-			--widget.uoContainer =3D item.container     TODO !!!
-			widget.item =3D item
-			item.secwidget =3D widget
-		=

-			-- item debuginfo on mouseover (clientside,debuginfos)
-			widget.onMouseLeave =3D function () =

-				gCurrentRenderer.gMousePickTippOverride =3D false =

-				Client_SetBottomLine("")
-			end
-			widget.onMouseDown	=3D function (widget,mousebutton) end
-			widget.onMouseEnter =3D function ()
-				-- TODO : find a cleaner solution to override the mousepick tipp
-				local item =3D widget.item
-				local name =3D GetStaticTileTypeName(item.artid) or ""
-				info =3D sprintf("tradeitem %s amount=3D%d (artid=3D%04x=3D%d)",name,i=
tem.amount,item.artid,item.artid)
-				gCurrentRenderer.gMousePickTippOverride =3D info
-				Client_SetBottomLine(gCurrentRenderer.gMousePickTippOverride)
-			end
-		end
+		local widget =3D parent:CreateChild("UOContainerItemWidget",{item=3Ditem=
})
+		item.widget =3D widget
+		table.insert(widgetarr,widget)
 	end
 end
 =

@@ -138,25 +92,23 @@
 =

 		-- show dialog
 		local dialog =3D GumpParser( securetrading, true )
-		=

-		assert(dialog.rootwidget,"SecureTrade not supported by new gui system ye=
t 2")
+		dialog.items_mine	=3D dialog:CreateChild("Group",{x=3DkSecureTradeContai=
nerPos_LeftX,y=3DkSecureTradeContainerPos_LeftY})
+		dialog.items_other	=3D dialog:CreateChild("Group",{x=3DkSecureTradeConta=
inerPos_RightX,y=3DkSecureTradeContainerPos_RightY})
 =

 		mysectrade.dialog =3D dialog
 		dialog.uoSecureTrade =3D mysectrade
 =

 		-- overwrite the onMouseDown function from gumpparser
-		dialog.onMouseDown =3D function (widget,mousebutton)
-			if (mousebutton =3D=3D 2) then widget.dialog.uoSecureTrade:Cancel() end
-			if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.StartMo=
veDialog(widget.dialog.rootwidget) end
-		end
+		dialog.SendClose =3D function (dialog) dialog.uoSecureTrade:Cancel() end
 =

 		-- update gump text fields
-		dialog.controls["namemy"].gfx:SetText(GetPlayerName() or "me")
-		dialog.controls["nametheir"].gfx:SetText(sectrade.name or "unknown")
+		dialog:GetCtrlByName("namemy"):SetUOHtml(GetPlayerName() or "me")
+		dialog:GetCtrlByName("nametheir"):SetUOHtml(sectrade.name or "unknown")
 =

 		-- create function for checkbox
-		dialog.controls["cbmy"].onChange =3D function (widget,bChecked)
-												Send_SecureTrade_ChangeAgree(widget.dialog.uoSecureTrade.id,bC=
hecked and 1 or 0)
+		dialog:GetCtrlByName("cbtheir").params.bReadOnly =3D true
+		dialog:GetCtrlByName("cbmy").on_change =3D function (widget,bState)
+												Send_SecureTrade_ChangeAgree(widget:GetDialog().uoSecureTrade.=
id,bState and 1 or 0)
 										   end
 =

 		SecureTradeRebuildContainers(mysectrade)
@@ -173,8 +125,8 @@
 				mysectrade:Close()
 			else =

 				-- change checkboxes
-				mysectrade.dialog.controls["cbmy"]:SetChecked(myOK)
-				mysectrade.dialog.controls["cbtheir"]:SetChecked(theirOK)
+				mysectrade.dialog:GetCtrlByName("cbmy"):SetState(myOK)
+				mysectrade.dialog:GetCtrlByName("cbtheir"):SetState(theirOK)
 			end
 		end
 	end

Modified: trunk/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uodragdrop.lua (original)
+++ trunk/lua/lib.uodragdrop.lua Wed Aug  6 01:46:24 2008
@@ -272,7 +272,6 @@
 function StartUODragDrop (amount)
 	if (not gDragDrop) then print("StartUODragDrop : error, gDragDrop already=
 released") return end
 	gDragDrop.started =3D true
-	--~ if (gDragDrop.widget and gDragDrop.widget:IsAlive()) then gDragDrop.w=
idget.gfx:SetVisible(false) end
 	SetDragIcon(gDragDrop.matname,gDragDrop.w,gDragDrop.h,gDragDrop.offx,gDra=
gDrop.offy)
 =

 	Send_Take_Object(gDragDrop.item.serial,amount) =

@@ -299,7 +298,6 @@
 	if (not gDragDrop) then return end
 	=

 	if (gDragDrop.started) then
-		if (gDragDrop.widget and gDragDrop.widget:IsAlive()) then gDragDrop.widg=
et.gfx:SetVisible(true) end
 		HideDragIcon()
 		gui.bMouseBlocked =3D false
 	end

Modified: trunk/lua/obj/obj.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.container.lua (original)
+++ trunk/lua/obj/obj.container.lua Wed Aug  6 01:46:24 2008
@@ -105,7 +105,6 @@
 	if (not container.dialog) then container.dialog =3D CreateUOContainerDial=
og(container) end
 	gLastDebugContainer =3D container
 	RefreshContainerItemWidgets(container)
-	SecureTradeRebuildContainerHook(container)
 	NotifyListener("Hook_OpenContainer",container.dialog,container.serial)
 end
 =


Modified: trunk/widgets/widget.uocheckbox.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uocheckbox.lua (original)
+++ trunk/widgets/widget.uocheckbox.lua Wed Aug  6 01:46:24 2008
@@ -27,12 +27,14 @@
 	self:UpdateGfx()
 end
 =

+function gWidgetPrototype.UOCheckBox:on_change		(bState) end
+
 function gWidgetPrototype.UOCheckBox:on_mouse_left_down	() self.bMouseDown=
 =3D true		end
 function gWidgetPrototype.UOCheckBox:on_mouse_left_up	() self.bMouseDown =
=3D false		end
 function gWidgetPrototype.UOCheckBox:on_mouse_enter		() self.bMouseInside =
=3D true		end
 function gWidgetPrototype.UOCheckBox:on_mouse_leave		() self.bMouseInside =
=3D false	end
 =

-function gWidgetPrototype.UOCheckBox:on_button_click	() self:SetState(not =
self:GetState()) end
+function gWidgetPrototype.UOCheckBox:on_button_click	() if (not self.param=
s.bReadOnly) then self:SetState(not self:GetState()) end end
 =

 function gWidgetPrototype.UOCheckBox:UpdateGfx	()
 	self.gfx_normal:SetVisible(not self.state)
@@ -43,6 +45,7 @@
 function gWidgetPrototype.UOCheckBox:GetState		() return self.state end
 function gWidgetPrototype.UOCheckBox:SetState		(bState)
 	if (self.state =3D=3D bState) then return end -- no change
+	self:on_change(bState)
 	self.state =3D bState
 	self:UpdateGfx()
 end



From no-reply at zwischenwelt.org  Wed Aug  6 03:37:21 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 06 Aug 2008 01:37:21 -0000
Subject: [Iris-commit] [IRIS] r2361 - in /trunk/lua: lib.2d.renderer.lua
 lib.2d.spriteblock.lua lib.artatlas.lua lib.mapblock.2d.statics.lua
 lib.mapblock.2d.terrain.lua
Message-ID: <20080806013721.508991524030@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug  6 03:37:20 2008
New Revision: 2361

Log:
2d:started spritelist class

Added:
    trunk/lua/lib.2d.spriteblock.lua
Modified:
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.artatlas.lua
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.2d.terrain.lua

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Wed Aug  6 03:37:20 2008
@@ -13,6 +13,7 @@
 dofile(libpath .. "lib.2d.map.lua")
 dofile(libpath .. "lib.2d.mobile.lua")
 dofile(libpath .. "lib.2d.dynamic.lua")
+dofile(libpath .. "lib.2d.spriteblock.lua")
 =

 function Renderer2D:FirstInit ()
 	if (self.bFirstInitDone) then return end

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Wed Aug  6 03:37:20 2008
@@ -19,6 +19,7 @@
 end
 =

 -- material is not immediately loaded, useful for statics
+-- returns object with fields : atlas,u0,v0,u1,v1,w,h
 function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)
 	local n =3D iTileTypeID.."_"..iHue
 	local o =3D gArtAtlasCache[n] =


Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Wed Aug  6 03:37:20 2008
@@ -1,142 +1,28 @@
--- TODO : mousepicking , staticitem =3D {xloc,yloc,zloc,z_sort,typ_handle(=
for draw,pick)}  staticitems grouped by texatlas
--- TODO : generic 2d spritesystem : render, mousepick, zsort?
--- TODO : unify : terrainload-water, static-types, artatlas, atlasgroup
-
 cMapBlock_2D_Statics	=3D CreateClass(cMapBlock)
 cMapBlock_2D_Statics.iBlockSize		=3D 8 -- in tiles
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
 =

 function cMapBlock_2D_Statics:ClearDetail ()
 	if (self.spriteblock) then self.spriteblock:Destroy() self.spriteblock =
=3D nil end
-	if (self.pStaticGroupGfx) then for k,v in pairs(self.pStaticGroupGfx) do =
v:Destroy() end self.pStaticGroupGfx =3D nil end -- old
 end
 =

-function cMapBlock_2D_Statics:WorkStep_LoadDetail_New ()
+function cMapBlock_2D_Statics:WorkStep_LoadDetail ()
+	-- statics : load infos from file
+	self.statics =3D MapGetBlockStatics(self.bx,self.by)
+	=

+	-- create spriteblock
 	local spriteblock =3D cUOSpriteBlock:New()
 	self.spriteblock =3D spriteblock
-	self.statics =3D MapGetBlockStatics(self.bx,self.by)
-	self:Yield()
+	=

+	self:YieldIfOverTime()
+	=

+	-- preload statics
 	for i,static in pairs(self.statics) do =

 		spriteblock:AddStatic(static)
-		if (Client_GetTicks() > self.t_end) then self:Yield() end
-	end
-	self:Yield()
-	spriteblock:Build()
-end
-
--- ***** ***** ***** ***** ***** cUOSpriteBlock
-
-cUOSpriteBlock =3D CreateClass()
-function cUOSpriteBlock:New () local c =3D CreateClassInstance(cUOSpriteBl=
ock) c:Init() return c end
-function cUOSpriteBlock:Init ()
-	self.matgroups =3D {}
-end
-function cUOSpriteBlock:Destroy ()
-
-end
-
-function cUOSpriteBlock:AddStatic (static)
-	local tx,ty,zloc,artid,hue =3D static.tx,static.ty,static.zloc,static.art=
id,static.hue
-	local pTileType =3D GetStaticTileType(artid)
-	local x,y,z =3D -tx,ty,zloc*0.1 -- static : {zloc=3D?,artid=3D?,hue=3D?,x=
loc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-	local sort_zadd =3D 0.05*pTileType.iSortBonus2D + 0.005*pTileType.miHeigh=
t + 0.001*static.iBlockIndex -- + =3D nearer to =

-	=

-	-- todo : group by artid,hue ?  no.. map artid,hue -> atlas_handle, group=
 by atlas handle
-	--~ local pAtlasPiece =3D ArtAtlasLoadAndLock(artid+0x4000,hue,self)
-end
-
-
-function cUOSpriteBlock:Build 	() =

-	--~ local matname =3D ArtAtlasLoadMaterial(atlas,Renderer2D.kAtlasBaseMat=
erial)
-end
-
--- ***** ***** ***** ***** ***** old
-
-function cMapBlock_2D_Statics:WorkStep_LoadDetail ()
-	print("cMapBlock_2D_Statics:WorkStep_LoadDetail")
-	-- statics : load infos from file
-	local block =3D self
-	block.statics =3D MapGetBlockStatics(block.bx,block.by)
-	block.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Ar=
tAtlasLoadAndLock)
-	block.pStaticGroups =3D {}
-	=

-	self:Yield()
-
-	-- statics : analyze, load textures to atlas
-	-- load atlas : artid-hue
-	local iBlockLoadTicks =3D Client_GetTicks()
-	for i,static in pairs(block.statics) do
-		local static 		=3D block.statics[i]
-		local iTileTypeID	=3D static.artid
-		local iHue			=3D static.hue
-		=

-		local arr =3D block.pStaticAtlasMats[iTileTypeID]
-		if (not arr) then arr =3D {} block.pStaticAtlasMats[iTileTypeID] =3D arr=
 end
-		=

-		-- get/load atlas mat
-		local pAtlasPiece =3D arr[iHue]
-		local bCheckTime =3D false
-		if (not pAtlasPiece) then
-			pAtlasPiece =3D ArtAtlasLoadAndLock(iTileTypeID+0x4000,iHue,block)
-			arr[iHue] =3D pAtlasPiece
-			bCheckTime =3D true
-		end
-		=

-		-- add to matname group
-		if (pAtlasPiece) then
-			local atlas =3D pAtlasPiece.atlas
-			local group =3D block.pStaticGroups[atlas]
-			if (not group) then group =3D {} block.pStaticGroups[atlas] =3D group e=
nd
-			=

-			table.insert(group,static)
-		end
-		=

-		-- if we are out of time, exit for now, and continue loading in the next=
 frame
-		if (bCheckTime) then self:YieldIfOverTime() end
+		self:YieldIfOverTime()
 	end
 	=

+	-- construct geometry
 	self:Yield()
-	=

-	-- statics : create gfx
-	block.pStaticGroupGfx =3D {}
-	-- -so 1420,1550
-	-- -so 552,2088
-	-- -so 632,1488
-	for atlas,group in pairs(block.pStaticGroups) do
-		local matname =3D ArtAtlasLoadMaterial(atlas,Renderer2D.kAtlasBaseMateri=
al)
-		-- TODO : sort by z for blendout upper floors
-		local spritecount =3D table.getn(group)
-		local x,y,z =3D gCurrentRenderer:UOPosToLocal(block.bx*8,block.by*8,0)
-		local gfx =3D CreateRootGfx3D()
-		table.insert(block.pStaticGroupGfx,gfx)
-		gfx:SetPosition(x,y,z)
-		gfx:SetSimpleRenderable()
-		gfx:SetMaterial(matname)
-		=

-		-- generate geometry
-		local vc =3D 4*spritecount
-		local ic =3D 6*spritecount
-		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-		vc =3D 0
-		for k,static in pairs(group) do
-			local pAtlasPiece =3D block.pStaticAtlasMats[static.artid][static.hue] =
-- u0 v0 u1 v1 w h
-			local pTileType =3D GetStaticTileType(static.artid)
-			local x,y,z =3D -static.tx,static.ty,static.zloc*0.1 -- static : {zloc=
=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-			local fOrderCorrection =3D (0.05*pTileType.iSortBonus2D + 0.005*pTileTy=
pe.miHeight + 0.001*static.iBlockIndex)  -- + =3D nearer to cam      -- gue=
ss this works ok for now, but far from ideal
-			x =3D x +  -1 * fOrderCorrection - 1  -- ox-1,oy+1 : sprites are too hi=
gh normally, this moves them down =

-			y =3D y +   1 * fOrderCorrection + 1
-			z =3D z + kSq2 * fOrderCorrection
-			local w =3D k2D_ScaleW05 * pAtlasPiece.w
-			local h =3D k2D_ScaleH   * pAtlasPiece.h
-			gfx:RenderableVertex(x-w,y-w,z  , pAtlasPiece.u1,pAtlasPiece.v1)
-			gfx:RenderableVertex(x+w,y+w,z  , pAtlasPiece.u0,pAtlasPiece.v1)
-			gfx:RenderableVertex(x-w,y-w,z+h, pAtlasPiece.u1,pAtlasPiece.v0)
-			gfx:RenderableVertex(x+w,y+w,z+h, pAtlasPiece.u0,pAtlasPiece.v0)
-			gfx:RenderableIndex3(vc+0,vc+2,vc+1)
-			gfx:RenderableIndex3(vc+1,vc+2,vc+3)
-			vc =3D vc + 4
-		end
-		gfx:RenderableEnd()
-	end
+	spriteblock:Build(self.bx,self.by)
 end
-

Modified: trunk/lua/lib.mapblock.2d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.2d.terrain.lua Wed Aug  6 03:37:20 2008
@@ -5,12 +5,10 @@
 --~ cMapBlock_2D_Terrain.kMaxDist_Detail		=3D 8*2 -- camdist in tiles
 =

 function cMapBlock_2D_Terrain:ClearDetail ()
-	--~ print("cMapBlock_2D_Terrain:ClearDetail")
 	if (self.gfx_terrain) then self.gfx_terrain:Destroy() self.gfx_terrain =
=3D nil end
 end
 =

 function cMapBlock_2D_Terrain:WorkStep_LoadDetail ()
-	print("cMapBlock_2D_Terrain:WorkStep_LoadDetail",self.bx,self.by)
 	local bs =3D kMultiTexTerrainChunkSize
 	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs)
 end



From no-reply at zwischenwelt.org  Wed Aug  6 13:55:04 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 06 Aug 2008 11:55:04 -0000
Subject: [Iris-commit] [IRIS] r2362 - in /trunk/lua: lib.2d.map.lua
 lib.2d.spriteblock.lua lib.mapblock.2d.statics.lua lib.mapblock.base.lua
 lib.mapblock.scheduler.lua lib.mapblock.spawner.lua
Message-ID: <20080806120009.C3B541C18047@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug  6 13:54:57 2008
New Revision: 2362

Log:
cleaned up a bit

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/lib.mapblock.scheduler.lua
    trunk/lua/lib.mapblock.spawner.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Wed Aug  6 13:54:57 2008
@@ -46,18 +46,15 @@
 	self:MobileTestStep()
 	=

 	local t =3D Client_GetTicks()
-	local xloc,yloc,zloc =3D self:GetCamPos()
-	for k,spawner in pairs(self.map2d_spawners) do spawner:Step(t,xloc,yloc,z=
loc) end
-	self.map2d_scheduler:Step(xloc,yloc,zloc)
+	local x,y,z =3D self:GetCamPos()
+	for k,spawner in pairs(self.map2d_spawners) do spawner:Step(t,x,y,z) end
+	self.map2d_scheduler:Step(x,y,z)
 end
 =

 function Renderer2D:MapClear	()
 	for k,spawner in pairs(self.map2d_spawners or {}) do spawner:Clear() end
 end
 =

--- TODO : mousepick, group statics by material
--- TODO : blendout-upper-floors : cFastBatch::cSubBatch::SetDisplayRange()=
 : raw access to index
-
 -- water : block.terrain[10*ty+tx] =3D MapGetGround(block.bx*8+tx,block.by=
*8+ty)
 -- water : analyze terrain infos and determine where water should be, Filt=
erIsMapWater(tiletype) -- 3D: chunk:SetWaterZ(tx,ty,z) ??
 =


Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Wed Aug  6 13:54:57 2008
@@ -1,14 +1,32 @@
 -- TODO : mousepicking , staticitem =3D {xloc,yloc,zloc,z_sort,typ_handle(=
for draw,pick)}  staticitems grouped by texatlas
+-- TODO : blendout-upper-floors : cFastBatch::cSubBatch::SetDisplayRange()=
 : raw access to index
 -- TODO : generic 2d spritesystem : render, mousepick, zsort?
--- TODO : unify : terrainload-water, static-types, artatlas, atlasgroup
+-- TODO : unify : terrainload-water,static-types : MapGetBlockStatics     =
  ArtAtlasLoadAndLock : atlasgroup
 =

+--[[
+local rendergroup2d =3D TODO() -- needs extra layer
+local bVertexBufferDynamic=3Dfalse
+local bVertexCol=3Dfalse
+local spritelist =3D CreateSpriteList(rendergroup2d,bVertexBufferDynamic,b=
VertexCol)
+table.insert(self.spritelists,spritelist)
+spritelist:SetMaterial(matname)
+spritelist:ResizeList(len)
+SpriteList_Open(spritelist)
+SpriteList_SetSprite		(iSpriteIndex, l,t,w,h, u0,v0, uvw, uvh, z)
+SpriteList_Close()
+]]--
+		=

 -- ***** ***** ***** ***** ***** cUOSpriteBlock
 =

 cUOSpriteBlock =3D CreateClass()
 function cUOSpriteBlock:New () local c =3D CreateClassInstance(cUOSpriteBl=
ock) c:Init() return c end
 function cUOSpriteBlock:Init ()
-	self.pStaticAtlasMats =3D {} -- [iTileTypeID][iHue] =3D atlasmat (see Art=
AtlasLoadAndLock)
+	self.pStaticAtlasMats =3D {} -- self.pStaticAtlasMats[iTileTypeID][iHue] =
=3D pAtlasPiece (see ArtAtlasLoadAndLock)
 	self.pStaticGroups =3D {}
+end
+
+function cUOSpriteBlock:CamStep(t,x,y,z)
+	--~ print("cUOSpriteBlock:CamStep",t,x,y,z)
 end
 =

 function cUOSpriteBlock:Destroy ()
@@ -16,15 +34,8 @@
 end
 =

 -- load textures to atlas, artid-hue
+-- static comes from MapGetBlockStatics(bx,by)
 function cUOSpriteBlock:AddStatic (static)
-	--~ local tx,ty,zloc,artid,hue =3D static.tx,static.ty,static.zloc,static=
.artid,static.hue
-	--~ local pTileType =3D GetStaticTileType(artid)
-	--~ local x,y,z =3D -tx,ty,zloc*0.1 -- static : {zloc=3D?,artid=3D?,hue=
=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=3Dtrue}
-	--~ local sort_zadd =3D 0.05*pTileType.iSortBonus2D + 0.005*pTileType.miH=
eight + 0.001*static.iBlockIndex -- + =3D nearer to =

-	=

-	-- todo : group by artid,hue ?  no.. map artid,hue -> atlas_handle, group=
 by atlas handle
-	--~ local pAtlasPiece =3D ArtAtlasLoadAndLock(artid+0x4000,hue,self)
-	=

 	local iTileTypeID	=3D static.artid
 	local iHue			=3D static.hue
 	=

@@ -33,11 +44,9 @@
 	=

 	-- get/load atlas mat
 	local pAtlasPiece =3D arr[iHue]
-	local bCheckTime =3D false
 	if (not pAtlasPiece) then
-		pAtlasPiece =3D ArtAtlasLoadAndLock(iTileTypeID+0x4000,iHue,self) -- atl=
as,u0,v0,u1,v1,w,h
+		pAtlasPiece =3D ArtAtlasLoadAndLock(iTileTypeID+0x4000,iHue,self) -- .at=
las,u0,v0,u1,v1,w,h
 		arr[iHue] =3D pAtlasPiece
-		bCheckTime =3D true
 	end
 	=

 	-- add to matname group
@@ -45,7 +54,6 @@
 		local atlas =3D pAtlasPiece.atlas
 		local group =3D self.pStaticGroups[atlas]
 		if (not group) then group =3D {} self.pStaticGroups[atlas] =3D group end
-		=

 		table.insert(group,static)
 	end
 end

Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Wed Aug  6 13:54:57 2008
@@ -1,6 +1,11 @@
 cMapBlock_2D_Statics	=3D CreateClass(cMapBlock)
 cMapBlock_2D_Statics.iBlockSize		=3D 8 -- in tiles
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
+
+function cMapBlock_2D_Statics:ShortStep (t,xloc,yloc,zloc)
+	if (self.spriteblock) then self.spriteblock:CamStep(t,xloc,yloc,zloc) end
+	cMapBlock.ShortStep(self,t,xloc,yloc,zloc)
+end
 =

 function cMapBlock_2D_Statics:ClearDetail ()
 	if (self.spriteblock) then self.spriteblock:Destroy() self.spriteblock =
=3D nil end

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Wed Aug  6 13:54:57 2008
@@ -42,15 +42,15 @@
 function cMapBlock:Clear () self:ClearRough() self:ClearDetail() end -- re=
move all gfx
 =

 -- called every frame, instant actions (destroy gfx), evaluate priority =

-function cMapBlock:ShortStep (t,xloc,yloc,zloc)
+function cMapBlock:ShortStep (t,x,y,z)
 	if ((self.iNextLODUpdate or 0) < t) then
 		self.iNextLODUpdate =3D t + self.kLODUpdateInterval
 		=

-		local bx =3D floor(xloc/self.iBlockSize + 0.5)
-		local by =3D floor(yloc/self.iBlockSize + 0.5)
+		local bx =3D floor(x/self.iBlockSize + 0.5)
+		local by =3D floor(y/self.iBlockSize + 0.5)
 		=

-		local camdist =3D hypot(	(self.bx + 0.5)*self.iBlockSize-xloc,
-								(self.by + 0.5)*self.iBlockSize-yloc)
+		local camdist =3D hypot(	(self.bx + 0.5)*self.iBlockSize-x,
+								(self.by + 0.5)*self.iBlockSize-y)
 		local newlod
 		if (	camdist <  self.kMaxDist_Detail ) then newlod =3D self.kLOD_Detail =

 		elseif (camdist <  self.kMaxDist_Visible) then newlod =3D self.kLOD_Roug=
h end

Modified: trunk/lua/lib.mapblock.scheduler.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.scheduler.lua (original)
+++ trunk/lua/lib.mapblock.scheduler.lua Wed Aug  6 13:54:57 2008
@@ -21,12 +21,13 @@
 -- internal, search current index in list
 function cScheduler:_FindProcessPos	(process) for k,process2 in ipairs(sel=
f.pProcessList) do if (process2 =3D=3D process) then return k end end end =

 =

-function cScheduler:Step		(xloc,yloc,zloc)
+-- x,y,z : cam/focus-pos
+function cScheduler:Step		(x,y,z)
 	local t =3D Client_GetTicks()
 	local t_end =3D t + self.kAllowedTicksPerFrame
 	=

 	-- shortsteps, re-evaluate prio, release gfx
-	for k,process in ipairs(self.pProcessList) do process:ShortStep(t,xloc,yl=
oc,zloc) end =

+	for k,process in ipairs(self.pProcessList) do process:ShortStep(t,x,y,z) =
end =

 	=

 	-- sort by priority
 	table.sort(self.pProcessList,self.CmpProcess)

Modified: trunk/lua/lib.mapblock.spawner.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.spawner.lua (original)
+++ trunk/lua/lib.mapblock.spawner.lua Wed Aug  6 13:54:57 2008
@@ -18,12 +18,12 @@
 =

 -- creates new blocks in area near cam if needed, releases old blocks
 -- params : time, focuspos
-function cMapBlockSpawner:Step	(t,xloc,yloc) =

+function cMapBlockSpawner:Step	(t,x,y) =

 	if ((self.iNextStep or 0) > t) then return end
 	self.iNextStep =3D t + self.kStepInterval
 	=

-	local bx =3D floor(xloc/self.iBlockSize + 0.5)
-	local by =3D floor(yloc/self.iBlockSize + 0.5)
+	local bx =3D floor(x/self.iBlockSize + 0.5)
+	local by =3D floor(y/self.iBlockSize + 0.5)
 	if (self.pMapFocusBlockX ~=3D bx or =

 		self.pMapFocusBlockY ~=3D by) then =

 		self.pMapFocusBlockX =3D bx



From no-reply at zwischenwelt.org  Wed Aug  6 14:20:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 06 Aug 2008 12:20:16 -0000
Subject: [Iris-commit] [IRIS] r2363 - /trunk/lua/lib.pathfind.lua
Message-ID: <20080806122016.338871C184CC@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug  6 14:20:15 2008
New Revision: 2363

Log:
fixed crashbug

Modified:
    trunk/lua/lib.pathfind.lua

Modified: trunk/lua/lib.pathfind.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.pathfind.lua (original)
+++ trunk/lua/lib.pathfind.lua Wed Aug  6 14:20:15 2008
@@ -201,7 +201,7 @@
 		=

 	end,function(a,b) =

 		-- print("FINISHED",a,b)
-		if a and countarr(b) > 0 then =

+		if a and b and countarr(b) > 0 then =

 			GuiAddChatLine("path found :)")
 			gWalkPathToGo =3D b
 		else



From no-reply at zwischenwelt.org  Wed Aug  6 18:56:07 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 06 Aug 2008 16:56:07 -0000
Subject: [Iris-commit] [IRIS] r2365 - /branches/stable_release/
Message-ID: <20080806165607.C01E71C18529@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug  6 18:56:07 2008
New Revision: 2365

Log:
copying trunk to stable

Added:
    branches/stable_release/
      - copied from r2364, trunk/



From no-reply at zwischenwelt.org  Wed Aug  6 18:56:06 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 06 Aug 2008 16:56:06 -0000
Subject: [Iris-commit] [IRIS] r2364 - /branches/stable_release/
Message-ID: <20080806165607.1210A1C184CC@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug  6 18:56:06 2008
New Revision: 2364

Log:
removing stable for trunk -> stable update

Removed:
    branches/stable_release/



From no-reply at zwischenwelt.org  Thu Aug 14 15:54:03 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 13:54:03 -0000
Subject: [Iris-commit] [IRIS] r2367 - /trunk/lua/
Message-ID: <20080814135404.C580A1C18259@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 15:54:03 2008
New Revision: 2367

Log:
first quite untested version of the new 3d renderer

Added:
    trunk/lua/lib.3d.dynamicspawner.lua
    trunk/lua/lib.3d.tilebatch.lua
Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.loading.lua
    trunk/lua/lib.mapblock.2d.statics.lua
    trunk/lua/lib.mapblock.2d.terrain.lua
    trunk/lua/lib.mapblock.3d.dynamics.lua
    trunk/lua/lib.mapblock.3d.multis.lua
    trunk/lua/lib.mapblock.3d.statics.lua
    trunk/lua/lib.mapblock.3d.terrain.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/lib.mapblock.scheduler.lua
    trunk/lua/lib.mapblock.spawner.lua
    trunk/lua/lib.static.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Thu Aug 14 15:54:03 2008
@@ -22,10 +22,11 @@
 dofile(libpath .. "lib.mapblock.scheduler.lua")
 dofile(libpath .. "lib.mapblock.spawner.lua")
 dofile(libpath .. "lib.mapblock.base.lua")
+dofile(libpath .. "lib.mapblock.grid.lua")
 dofile(libpath .. "lib.mapblock.2d.statics.lua")
 dofile(libpath .. "lib.mapblock.2d.terrain.lua")
 --~ dofile(libpath .. "lib.mapblock.2d.water.lua")
-cMapBlock_2D_Water		=3D CreateClass(cMapBlock)
+cMapBlock_2D_Water		=3D CreateClass(cMapBlockGrid)
 =

 cMapBlock_2D_Terrain.kLOD_Detail		=3D kMapLoad_2D_Terrain_Detail
 cMapBlock_2D_Terrain.kLOD_Rough			=3D kMapLoad_2D_Terrain_Rough

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Thu Aug 14 15:54:03 2008
@@ -133,7 +133,7 @@
 		if randomRotation then
 			local x,y,z =3D dynamic.gfx:GetPosition()
 			local r =3D math.mod(math.floor(math.abs(x)+math.abs(y)+math.abs(z)) * =
10,360)
-			print("####",x,y,z,r)
+			--~ print("####",x,y,z,r)
 			dynamic.gfx:SetOrientation( QuaternionFromString("x:0,y:0,z:"..r) )
 		end
 		=

@@ -176,48 +176,57 @@
 		end)
 	end
 =

-	Renderer3D:RemoveDynamicFromMap(dynamic)
-
-	-- block position
-	local bx =3D math.floor(dynamic.xloc / Renderer3D.gFastBatchDynamicsBlock=
Size)
-	local by =3D math.floor(dynamic.yloc / Renderer3D.gFastBatchDynamicsBlock=
Size)
-	=

-	-- block empty? create a new entry
-	if not Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by) then
-		Array2DSet(Renderer3D.gFastBatchDynamicsMap, bx,by, {mbUpdateNeeded=3Dtr=
ue, miCount=3D0,mlDynamic=3D{}})
-	end
-	=

-	local e =3D Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by)
-	-- add dynamic if not available
-	if not e.mlDynamic[dynamic.serial] then
-		-- print("ADD",bx,by,dynamic.serial)
-		e.miCount =3D e.miCount + 1
-		e.mlDynamic[dynamic.serial] =3D dynamic
-	end
-
-	e.mbUpdateNeeded =3D true
-	Renderer3D.gFastBatchDynamicsUpdateNeeded =3D true
-	=

-	-- Renderer3D:ShowDynamicMapStats()
+	self:RemoveDynamicFromMap(dynamic)
+
+	-- add dynamic items to render blocks or queue for delayed add
+	if self.map3d_spawners and self.map3d_spawners.dynamics then =

+		self.map3d_spawners.dynamics:AddDynamic(dynamic)
+	end
+
+	--~ -- block position
+	--~ local bx =3D math.floor(dynamic.xloc / Renderer3D.gFastBatchDynamicsB=
lockSize)
+	--~ local by =3D math.floor(dynamic.yloc / Renderer3D.gFastBatchDynamicsB=
lockSize)
+	--~ =

+	--~ -- block empty? create a new entry
+	--~ if not Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by) then
+		--~ Array2DSet(Renderer3D.gFastBatchDynamicsMap, bx,by, {mbUpdateNeeded=
=3Dtrue, miCount=3D0,mlDynamic=3D{}})
+	--~ end
+	--~ =

+	--~ local e =3D Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by)
+	--~ -- add dynamic if not available
+	--~ if not e.mlDynamic[dynamic.serial] then
+		--~ -- print("ADD",bx,by,dynamic.serial)
+		--~ e.miCount =3D e.miCount + 1
+		--~ e.mlDynamic[dynamic.serial] =3D dynamic
+	--~ end
+--~ =

+	--~ e.mbUpdateNeeded =3D true
+	--~ Renderer3D.gFastBatchDynamicsUpdateNeeded =3D true
+	--~ =

+	--~ -- Renderer3D:ShowDynamicMapStats()
 end
 =

 function Renderer3D:RemoveDynamicFromMap	(dynamic)
-	Array2DForAll(Renderer3D.gFastBatchDynamicsMap, function(e,bx,by)
-		-- remove dynamic if available
-		if e.mlDynamic[dynamic.serial] then
-			-- print("REMOVE",bx,by,dynamic.serial)
-			e.mbUpdateNeeded =3D true
-			e.miCount =3D e.miCount - 1
-			e.mlDynamic[dynamic.serial] =3D nil
-			Renderer3D.gFastBatchDynamicsUpdateNeeded =3D true
-		end
-		=

-		-- remove block entry
-		if e.miCount =3D=3D 0 then
-			if e.mFastBatch then e.mFastBatch:Destroy() end
-			Array2DSet(Renderer3D.gFastBatchDynamicsMap, bx,by, nil)
-		end
-	end)
+	if self.map3d_spawners and self.map3d_spawners.dynamics then =

+		self.map3d_spawners.dynamics:RemoveDynamic(dynamic)
+	end
+	=

+	--~ Array2DForAll(Renderer3D.gFastBatchDynamicsMap, function(e,bx,by)
+		--~ -- remove dynamic if available
+		--~ if e.mlDynamic[dynamic.serial] then
+			--~ -- print("REMOVE",bx,by,dynamic.serial)
+			--~ e.mbUpdateNeeded =3D true
+			--~ e.miCount =3D e.miCount - 1
+			--~ e.mlDynamic[dynamic.serial] =3D nil
+			--~ Renderer3D.gFastBatchDynamicsUpdateNeeded =3D true
+		--~ end
+		--~ =

+		--~ -- remove block entry
+		--~ if e.miCount =3D=3D 0 then
+			--~ if e.mFastBatch then e.mFastBatch:Destroy() end
+			--~ Array2DSet(Renderer3D.gFastBatchDynamicsMap, bx,by, nil)
+		--~ end
+	--~ end)
 end
 =

 -- rebuilds the graphic of the dynamics
@@ -245,7 +254,13 @@
 =

 =

 -- creates the geometry of the given multi and stores the gfx object in th=
is multi
-function Renderer3D:CreateMultiGraphic	(multi)
+function Renderer3D:CreateMultiGraphic	(serial, multi)
+	-- add dynamic items to render blocks or queue for delayed add
+	if self.map3d_spawners and self.map3d_spawners.multis then =

+		self.map3d_spawners.multis:AddMulti(serial, multi)
+	end
+	=

+	--[[
 	-- only run one build process per multi
 	if multi.mbBuildRunning then return end
 	multi.mbBuildRunning =3D true
@@ -324,16 +339,23 @@
 		-- terminate?
 		if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() ret=
urn end
 	end, nil, 1)
+	]]
 end
 =

 -- destroys the multi gfx static geometry
 function Renderer3D:DestroyMultiGraphic	(multi)
+	if self.map3d_spawners and self.map3d_spawners.multis then =

+		self.map3d_spawners.multis:RemoveMulti(multi)
+	end
+
+	--[[
 	if multi.mbBuildRunning then
 		multi.mbCancelBuildAndDestroy =3D true
 	elseif multi.staticGeometry then =

 		multi.staticGeometry:Destroy() =

 		multi.staticGeometry =3D nil
 	end
+	]]
 end
 =

 =

@@ -415,7 +437,7 @@
 			item.gfx =3D nil
 			gMultis[multi] =3D true
 			=

-			Renderer3D:CreateMultiGraphic(multi)
+			Renderer3D:CreateMultiGraphic(item.serial, multi)
 			=

 		-- Clientside Multi Check
 		elseif gMultiLoader then
@@ -457,7 +479,7 @@
 			item.gfx =3D nil
 			gMultis[multi] =3D true
 =

-			Renderer3D:CreateMultiGraphic(multi)
+			Renderer3D:CreateMultiGraphic(item.serial, multi)
 		else =

 			printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed loadi=
ng mesh for dynamic (multi): artid=3D%i z_typename=3D%s\n",item.artid or -1=
,GetStaticTileTypeName(item.artid) or ""))
 		end
@@ -703,9 +725,9 @@
 	-- remove multi entry
 	if (dynamic.multi) then
 		printdebug("multi", sprintf("Multi destroyed with ARTID",dynamic.artid,v=
ardump(dynamic)) )
-		Renderer3D:RebuildChunkAtUOPos(dynamic.xloc,dynamic.yloc)
+		--~ Renderer3D:RebuildChunkAtUOPos(dynamic.xloc,dynamic.yloc)
 		gMultis[dynamic.multi] =3D nil =

-		Renderer3D:DestroyMultiGraphic(dynamic.multi)
+		Renderer3D:DestroyMultiGraphic(dynamic.serial)
 	end
 	=

 	-- remove lightsource from dynamic

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Thu Aug 14 15:54:03 2008
@@ -1,617 +1,83 @@
-Renderer3D.gNextMapUpdate =3D 0
-Renderer3D.gMapChunks =3D {}
+-- handles maploading and similar
+
+Renderer3D.pMapBlocks =3D {}
+Renderer3D.iNextMapStep =3D 0
+
 Renderer3D.giMapOriginX =3D 0
 Renderer3D.giMapOriginY =3D 0
-Renderer3D.ROBMAP_CHUNK_SIZE =3D 2  -- size of one chunk, should be 2^n
-Renderer3D.ROBMAP_RECENTER_DIST =3D 200   -- if cur position is off by mor=
e than ROBMAP_RECENTER_DIST blocks, clear cache and recenter
+Renderer3D.ROBMAP_CHUNK_SIZE =3D 2
 Renderer3D.giBlendOutPlayerHeight =3D 18	--eriminator: es galt grob, alles=
 was 18z =C3=AF=C2=BF=C2=BDberm char war wurd ausgebledent
 Renderer3D.giBlendOutCurZ =3D nil
-Renderer3D.gbBlendOutTerrainVisible =3D true
-Renderer3D.gMapUpdateInterval =3D 500 -- update the map not every frame, d=
ecrease for fly-videos
-Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 1 -- increase for fly-videos
-Renderer3D.gLowDetailTerrainNeedsRebuild =3D true
-
--- the whole map cache consists of (ROBMAP_RECENTER_DIST*2)*(ROBMAP_RECENT=
ER_DIST*2)  chunks
--- every chunk consists of ROBMAP_CHUNK_SIZE*ROBMAP_CHUNK_SIZE blocks
--- every block is equivalent to one MapBlock3D
-
-function Renderer3D:ZToLayer(zloc)
-	--~ return math.floor(zloc / Renderer3D.giBlendOutPlayerHeight)
-	return math.floor(zloc)
-end
-
-function Renderer3D:LayerToZ(zlayer)
-	--~ return zlayer * Renderer3D.giBlendOutPlayerHeight
-	return zlayer
-end
-
-function Renderer3D:UpdateMap ()
-	if (not self.gbActive) then return end
-	=

-	if (gMyTicks > self.gNextMapUpdate) then
-		-- get cam position + a little distance ahead of it (focal point?)
-		local camx,camy,camz =3D self:GetLookAheadCamPos()
-		local iCamOverBlockX =3D self.giMapOriginX*self.ROBMAP_CHUNK_SIZE + camx=
/8
-		local iCamOverBlockY =3D self.giMapOriginY*self.ROBMAP_CHUNK_SIZE + camy=
/8
-
-		-- recenter world if too far away, to avoid float-rounding-errors
-		local fCamOriginDist =3D math.sqrt(camx*camx + camy*camy)
-		if (false and fCamOriginDist / 8 > self.ROBMAP_RECENTER_DIST) then -- de=
activated for now, so coordinates are consistent
-			printf("RecenterMap (%d,%d)\n",iCamOverBlockX,iCamOverBlockY)
-
-			-- calc new origin
-			local ox =3D math.floor(iCamOverBlockX / self.ROBMAP_CHUNK_SIZE)
-			local oy =3D math.floor(iCamOverBlockY / self.ROBMAP_CHUNK_SIZE)
-			local difx =3D (self.giMapOriginX - ox) * 8 * self.ROBMAP_CHUNK_SIZE
-			local dify =3D (self.giMapOriginY - oy) * 8 * self.ROBMAP_CHUNK_SIZE =

-			self.giMapOriginX =3D ox
-			self.giMapOriginY =3D oy
-
-			-- update cam,map,dynamics,mobiles,...
-			GetMainCam():Move(difx,dify,0)
-			self:ClearMapCache()
-			gCurrentRenderer:CheckForUpdateMapOrigin()
-			NotifyListener("Hook_RecenterWorld",difx,dify)
-		end
-
-		-- mapblocks are loaded and unloaded here  (also iCamOverBlockX will alw=
ays be negative  while over the map)
-		self:UpdateMapCache(-iCamOverBlockX,iCamOverBlockY, gSightRange)
-
-		self.gNextMapUpdate =3D Client_GetTicks() + self.gMapUpdateInterval -- m=
ake sure the game runs for at least 100msec AFTER this loading without bein=
g interrupted by loading
-	end
-	=

-	if gFastBatchDynamics then
-		-- need to reburn dynamics?
-		gCurrentRenderer:CheckForFastBatchDynamicsUpdate()
-	end
-end
-
-
--- param is the area where normal mapblocks are loaded
-function Renderer3D:RebuildLowDetailTerrain (minx,maxx,miny,maxy)
-
-	-- currently doesn't work, temp. disabled (no textures) !!!!!!!!!!!!!!!
-	if (true) then return end
-
-	if (not gEnableLowDetailTerrainFarSight) then return end
-	if (not Renderer3D.gLowDetailTerrainNeedsRebuild) then return end
-	self.gLowDetailTerrainNeedsRebuild =3D false
-	--~ if (gLowDetailTerrain) then gLowDetailTerrain:Destroy() gLowDetailTer=
rain =3D nil end
-	if (not gGroundBlockLoader) then return end
-	--~ if (gKeyPressed[key_lshift]) then return end
-	--~ if (true) then return end
-	=

-	-- the border around the input area in which lowlevel chunks should be
-	local b =3D gEnableLowDetailTerrainFarSightRangeAdd
-	=

-	-- count chunks that need lowlevel display (for allocating renderable)
-	local lowlist =3D {}
-	for y=3Dminy-b,maxy+b do
-	for x=3Dminx-b,maxx+b do
-		if (not self:IsMapChunkLoaded(x,y)) then table.insert(lowlist,{x=3Dx,y=
=3Dy}) end
-	end
-	end
-	=

-	-- allocate renderable from lowcount
-	local bGfxInit =3D false
-	if (not gLowDetailTerrain) then
-		gLowDetailTerrain =3D CreateRootGfx3D()
-		gLowDetailTerrain:SetSimpleRenderable()
-		bGfxInit =3D true
-	end
-	local gfx =3D gLowDetailTerrain
-	local cs =3D self.ROBMAP_CHUNK_SIZE
-	local polycount =3D (2*2) * (cs * cs) * table.getn(lowlist) -- each lowli=
st entry is one chunk, each chunk is cx*cx mapblocks, we use 2*2 polys for =
each
-	local vc =3D 4 * polycount
-	local ic =3D 6 * polycount
-	gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-	=

-	-- generate geometry
-	local vertexnum =3D 0
-	local bx0,by0
-	local x,y
-	local tiletype00,z00
-	local tiletype01,z01
-	local tiletype10,z10
-	local tiletype11,z11
-	local e =3D 4/512
-	local u1,v1 =3D 0,0
-
-	for k,low in pairs(lowlist) do
-		bx0 =3D low.x * cs
-		by0 =3D low.y * cs
-		for bx =3D bx0,bx0 + cs-1 do -- iBlockUO_X
-		for by =3D by0,by0 + cs-1 do
-			for px=3D0,1 do
-			for py=3D0,1 do
-				x =3D 8*bx+4*px
-				y =3D 8*by+4*py
-				tiletype00,z00 =3D GetGroundAtAbsPos(x+0,y+0)
-				tiletype01,z01 =3D GetGroundAtAbsPos(x+0,y+4)
-				tiletype10,z10 =3D GetGroundAtAbsPos(x+4,y+0)
-				tiletype11,z11 =3D GetGroundAtAbsPos(x+4,y+4)
-				=

-				local u0,v0,w,h =3D MultiTexGetTexCoordsForTiletype(tiletype00)
-
-				if (not u0) then u0,v0,w,h =3D e,e,1/16-e,1/16-e end
-				u1,v1 =3D u0+w*4,v0+h*4
-				gfx:RenderableVertex(-x  ,y  ,(z00 or 0)*0.1, 0,0,1, u0,v0)
-				gfx:RenderableVertex(-x-4,y  ,(z10 or 0)*0.1, 0,0,1, u1,v0)
-				gfx:RenderableVertex(-x  ,y+4,(z01 or 0)*0.1, 0,0,1, u0,v1)
-				gfx:RenderableVertex(-x-4,y+4,(z11 or 0)*0.1, 0,0,1, u1,v1)
-				=

-				gfx:RenderableIndex3(vertexnum+0, vertexnum+2, vertexnum+1)
-				gfx:RenderableIndex3(vertexnum+1, vertexnum+2, vertexnum+3)
-				=

-				vertexnum =3D vertexnum + 4
-			end
-			end
-		end
-		end
-	end
-	=

-	-- finish renderable
-	gfx:RenderableEnd()
-	gfx:SetMaterial("terrain_multitex_far")
-	gfx:SetCastShadows(false)
-	local x,y,z =3D self:UOPosToLocal(0,0,0)
-	gfx:SetPosition(x, y, z)
-end
-
-
--- these coordinates are in absolute map-blocks, all others are in chunks
-function Renderer3D:UpdateMapCache (iMidX,iMidY,iRad)
-		local minx =3D math.floor((iMidX-iRad) / self.ROBMAP_CHUNK_SIZE)
-		local miny =3D math.floor((iMidY-iRad) / self.ROBMAP_CHUNK_SIZE)
-		local maxx =3D math.floor((iMidX+iRad) / self.ROBMAP_CHUNK_SIZE)
-		local maxy =3D math.floor((iMidY+iRad) / self.ROBMAP_CHUNK_SIZE)
-		=

-		-- transform coordinates from map-blocks to chunks
-		iMidX =3D math.floor(iMidX / self.ROBMAP_CHUNK_SIZE)
-		iMidY =3D math.floor(iMidY / self.ROBMAP_CHUNK_SIZE)
-		=

-		-- release invisible chunks
-		for y,row in pairs(self.gMapChunks) do
-			for x,chunk in pairs(row) do
-				if (chunk.miX < minx or chunk.miY < miny or chunk.miX > maxx or chunk.=
miY > maxy) then
-					self:DestroyMapChunk(x,y,chunk)
-				end
-			end
-		end
-
-		local rebuilds_per_run =3D 1
-		-- rebuild chunks if needed
-		for y,row in pairs(self.gMapChunks) do
-			for x,chunk in pairs(row) do
-				if (chunk.mbRebuild) and rebuilds_per_run > 0 then
-					self:DestroyMapChunk(x,y,chunk)
-					self:LoadMapChunk(x,y)
-					rebuilds_per_run =3D rebuilds_per_run - 1
-				end
-			end
-		end
-
-		-- load visible chunks into cache if not already there
-		local iLoadedCount =3D 0 -- make sure only a limited number of blocks is=
 created during update, otherwise the game would hang
-		for y=3Dminy,maxy do
-			for x=3Dminx,maxx do
-				if (iLoadedCount < self.gMaxMapBlocksLoadedPerUpdate) then
-					if (self:LoadMapChunk(x,y)) then
-						iLoadedCount =3D iLoadedCount + 1
-					end
-				end
-			end
-		end
-		=

-		self:RebuildLowDetailTerrain(minx,maxx,miny,maxy)
-end
-
--- rebuild chunk at uo pos
-function Renderer3D:RebuildChunkAtUOPos (x,y)
-	local chunkx =3D math.floor(x / self.ROBMAP_CHUNK_SIZE / 8)
-	local chunky =3D math.floor(y / self.ROBMAP_CHUNK_SIZE / 8)
-	=

-	--print("DEBUG","rebuild",x,y,chunkx,chunky,self.ROBMAP_CHUNK_SIZE)
-	=

-	for y,row in pairs(self.gMapChunks) do
-		for x,chunk in pairs(row) do
-			if (chunk.miX =3D=3D chunkx and chunk.miY =3D=3D chunky)  then
-				chunk.mbRebuild =3D true
-			end
-		end
-	end
-end
-
--- coords in chunks
-function Renderer3D:LoadMapChunk (x,y)
-	local bDidLoad =3D false
-	if (not self.gMapChunks[y]) then self.gMapChunks[y] =3D {} end
-	if ((not self.gMapChunks[y][x]) or self.gMapChunks[y][x].bIsDead) then
-		--~ print("LoadMapChunk "..x..","..y)
-		self.gMapChunks[y][x] =3D self:CreateMapChunk(x,y)
-		bDidLoad =3D true
-	end
-	return bDidLoad
-end
-
-function Renderer3D:IsMapChunkLoaded (x,y)
-	if (not self.gMapChunks[y]) then return false end
-	local chunk =3D self.gMapChunks[y][x]
-	if ((not chunk) or chunk.bIsDead) then return false end
-	return true
-end
-
--- rebuilds the map. this is slow!!!! so dont do this during normal gamepl=
ay
-function Renderer3D:RebuildMap ()
-	-- Renderer3D:ClearMapCache()
-	-- Renderer3D:UpdateMap()
-
-	for y,row in pairs(self.gMapChunks) do
-		for x,chunk in pairs(row) do
-			chunk.mbRebuild =3D true
-		end
-	end
-end
-
-function Renderer3D:ClearMapCache ()
-	--print("ClearMapCache")
-	local y,row,x,chunk
-	for y,row in pairs(self.gMapChunks) do
-		for x,chunk in pairs(row) do
-			self:DestroyMapChunk(x,y,chunk)
-	end end
-	self.gMapChunks =3D {}
-end
-
--- handles the entity creation for CreateMapChunk and adds it to chunk.lSt=
aticEntities
-function Renderer3D:CreateMapChunkEntity (chunk,iTileTypeID,iXLoc,iYLoc,iZ=
Loc,iHue,visible)
-	visible =3D visible or true
-	local entity =3D {}
-
-	-- FILTER: correction
-	entity.xadd,entity.yadd,entity.zadd =3D FilterPositionXYZ(iTileTypeID)
-
-	entity.xloc =3D iXLoc + entity.xadd
-	entity.yloc =3D iYLoc + entity.yadd
-	entity.zloc =3D iZLoc + entity.zadd -- in tilecoords from uo
-
-	entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc,entity.yloc,=
iZLoc * 0.1 + entity.zadd)
-	=

-	entity.iBlockX =3D math.floor(entity.xloc / 8)
-	entity.iBlockY =3D math.floor(entity.yloc / 8)
-
-	entity.iTileTypeID =3D iTileTypeID
-	entity.iHue =3D iHue
-	=

-	local staticwatertile =3D true -- true if not water ?
-	-- add level
-	if gEnableMultiTexTerrain and (not gDisableMultiTexWater) and FilterIsSta=
ticWater(iTileTypeID) then
-		local z =3D entity.zloc
-		local bx =3D chunk.miX * self.ROBMAP_CHUNK_SIZE * 8
-		local by =3D chunk.miY * self.ROBMAP_CHUNK_SIZE * 8
-		local tx,ty =3D entity.xloc - bx, entity.yloc - by
-		=

-		chunk:SetWaterZ(tx,ty,z)
-		=

-		staticwatertile =3D not gEnableMultiTexTerrain		--on multitexturing filt=
er static water
-	end
-
-	local meshname =3D (not gForceFallBackBillboards_Statics) and staticwater=
tile and GetMeshName(iTileTypeID)
-
-	-- create Mesh
-	if (meshname and meshname ~=3D false) then
-		local qw,qx,qy,qz =3D GetStaticMeshOrientation(iTileTypeID)
-		local sx,sy,sz =3D -1,1,1 -- scale
-		entity.qw =3D qw
-		entity.qx =3D qx
-		entity.qy =3D qy
-		entity.qz =3D qz
-		entity.sx =3D sx
-		entity.sy =3D sy
-		entity.sz =3D sz
-
-		if (gFastBatchStatics) then
-			local r,g,b,a =3D 1,1,1,1
-			if (gHueLoader and entity.iHue > 0) then
-				r,g,b =3D gHueLoader:GetColor(entity.iHue - 1,31) -- get first color
-			end
-
-			entity.meshbuffer =3D GetMeshBuffer(meshname) -- for mousepicking
-			local orderval =3D entity.zloc -- used for blendout later (fastbatch fe=
ature)
-			if visible then chunk.fastbatch:FastBatch_AddMeshBuffer(entity.meshbuff=
er, orderval ,entity.x,entity.y,entity.z, qw,qx,qy,qz, sx,sy,sz, r,g,b,a) e=
nd
-		else
-			entity.staticentity =3D CreateMeshEntity(meshname)
-			local myLayer =3D Renderer3D:ZToLayer(entity.zloc)
-			local myLayerStaticGeom =3D chunk.pStaticGeometryLayers[myLayer]
-			if (not myLayerStaticGeom) then
-				myLayerStaticGeom =3D CreateStaticGeometry()
-				chunk.pStaticGeometryLayers[myLayer] =3D myLayerStaticGeom
-			end
-			if visible then myLayerStaticGeom:AddEntity(entity.staticentity,entity.=
x,entity.y,entity.z,qw,qx,qy,qz,sx,sy,sz) end
-		end
-
-		table.insert(chunk.lStaticEntities,entity)
-
-	-- if no *.mesh is available, a fallback billboard with original uo_art i=
s generated
-	-- What about caching here ??
-	else
-		local iTranslatedTileTypeID =3D SeasonalStaticTranslation(iTileTypeID, g=
SeasonSetting)
-		if (
-			(gEnableFallBackBillboards_Statics or =

-			(gEnableFallBackGroundPlates and IsGroundPlate(iTranslatedTileTypeID))
-			) and not IsArtBillboardFallBackSkipped(iTranslatedTileTypeID)) =

-		then
-			entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc+0.5,entity=
.yloc+0.5,entity.zloc*0.1 + 0.5)
-			entity.gfx =3D CreateRootGfx3D()
-			entity.gfx:SetPosition(entity.x,entity.y,entity.z)
-			entity.gfx.billboard =3D entity.gfx:CreateChild()
-			-- we have to add 0x4000 for fallbacks
-			self:CreateArtBillBoard(entity.gfx.billboard,iTranslatedTileTypeID + 0x=
4000,entity.iHue)
-			table.insert(chunk.lStaticEntities,entity)
-			printdebug("missing",sprintf("Fallback: Static Billboard created : iTra=
nslatedTileTypeID=3D%i\n", iTranslatedTileTypeID))
-		end
-	end
-
-	-- generate Cadune Trees
-	if gUseCaduneTree then
-		Renderer3D:GenerateCaduneTree(entity)
-	end
-	=

-	-- adds a lightsource to Mesh-Tile
-	-- note! lights don't cast shadows
-	if (gLightsources) then
-		local arrtiletype =3D GetStaticTileType(iTileTypeID)
-		if( arrtiletype and TestBit(arrtiletype.miFlags or 0,kTileDataFlag_Light=
Source) ) then
-			entity.lightname =3D Renderer3D:AddPointLight(entity.x-0.5,entity.y+0.5=
,entity.z+1+arrtiletype.miHeight, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
-		end
-	end
-
-	self:UpdateStaticVisibility(entity)
-
-	-- adds particle Effect to Mesh-Tile
-	entity.particle =3D Renderer3D:Hook_ItemAddParticle(iTileTypeID, entity.x=
,entity.y,entity.z)
-end
-
--- coords in chunks
-function Renderer3D:CreateMapChunk (x,y)
-	if ((x < 0) or (y < 0)) then return end	-- we might also check the heighs=
t value !?
-	=

-	self.gLowDetailTerrainNeedsRebuild =3D true
-		=

-	local chunk =3D {}
-	chunk.bIsDead =3D false
-	chunk.miX =3D x
-	chunk.miY =3D y
-	chunk.pStaticGeometryLayers =3D {}
-
-	-- water stats
-	if gEnableMultiTexTerrain and (not gDisableMultiTexWater) then
-		chunk.mWaterZMap =3D {}		-- local z height [x.."_"..y]
-		chunk.SetWaterZWithoutBorder =3D function(self, tx, ty, z)
-			if (tx >=3D 0 and ty >=3D 0 and tx < Renderer3D.ROBMAP_CHUNK_SIZE * 8 a=
nd ty < Renderer3D.ROBMAP_CHUNK_SIZE * 8) then
-				Array2DSet(self.mWaterZMap, tx,ty, math.max(Array2DGet(self.mWaterZMap=
, tx,ty) or z, z))
-				-- self.mWaterZMap[tx.."_"..ty] =3D math.max(self.mWaterZMap[tx.."_"..=
ty] or z, z)
-			end
-		end
-		chunk.SetWaterZ =3D function(self, tx, ty, z)
-			self:SetWaterZWithoutBorder(tx,ty,z)
-			-- set border of 1 tile
-			-- TODO this is slow!!!
-			--[[
-			self:SetWaterZWithoutBorder(tx+1,ty+0,z)
-			self:SetWaterZWithoutBorder(tx-1,ty+0,z)
-			self:SetWaterZWithoutBorder(tx+0,ty+1,z)
-			self:SetWaterZWithoutBorder(tx+0,ty-1,z)
-			=

-			self:SetWaterZWithoutBorder(tx+1,ty+1,z)
-			self:SetWaterZWithoutBorder(tx-1,ty-1,z)
-			self:SetWaterZWithoutBorder(tx+1,ty-1,z)
-			self:SetWaterZWithoutBorder(tx-1,ty+1,z)
-			]]--
-		end
-	end
-	=

-	-- start fastbatch
-	if (gFastBatchStatics) then
-		chunk.fastbatch =3D CreateRootGfx3D()
-		chunk.fastbatch:SetFastBatch()
-	end
-
-	local iBlockUO_X =3D x * self.ROBMAP_CHUNK_SIZE
-	local iBlockUO_Y =3D y * self.ROBMAP_CHUNK_SIZE
-	=

-	-- water analysis
-	if gEnableMultiTexTerrain and (not gDisableMultiTexWater) then
-		if (gGroundBlockLoader) then
-			local tiletype,z
-			local tx,ty
-			for bx =3D 0,self.ROBMAP_CHUNK_SIZE-1 do
-				for by =3D 0,self.ROBMAP_CHUNK_SIZE-1 do
-					for lx =3D 0,7 do
-						for ly =3D 0,7 do
-							tiletype,z =3D gGroundBlockLoader:GetTile(iBlockUO_X+bx,iBlockUO_Y+=
by,lx,ly)
-							tx,ty =3D lx + (bx*8), ly + (by*8)
-							=

-							if tiletype and FilterIsMapWater(tiletype) then
-								chunk:SetWaterZ(tx,ty,z)
-							end
-						end
-					end
-				end
-			end
-		end
-	end
-
-
-	-- GROUNDMAP
-	if (gGroundBlockLoader) then -- probably needs gTexMapLoader
-		if (gEnableMultiTexTerrain) then
-			chunk.terrain_multitex_gfx =3D MakeMultiTexTerrainGfx(iBlockUO_X,iBlock=
UO_Y) =

-		else -- old terrain code
-			--local meshname =3D BuildTerrainEntity_Simple(gGroundBlockLoader,iBloc=
kUO_X,iBlockUO_Y,self.ROBMAP_CHUNK_SIZE,self.ROBMAP_CHUNK_SIZE,false)
-			local meshname =3D BuildTerrainEntity_Shaded(gGroundBlockLoader,iBlockU=
O_X,iBlockUO_Y,self.ROBMAP_CHUNK_SIZE,self.ROBMAP_CHUNK_SIZE)
-			if (meshname) then
-				chunk.sTerrainMeshName =3D meshname
-				local x,y,z =3D self:UOPosToLocal(iBlockUO_X*8,iBlockUO_Y*8,0)
-				if (gbUseStaticGeometryForTerrain) then
-					-- use static geometry
-					chunk.pTerrainEntity =3D CreateMeshEntity(meshname)	=

-					chunk.pStaticGeometryTerrain =3D CreateStaticGeometry()
-					chunk.pStaticGeometryTerrain:AddEntity(chunk.pTerrainEntity,x,y,0)
-					chunk.pStaticGeometryTerrain:Build()
-					chunk.pStaticGeometryTerrain:SetVisible(self.gbBlendOutTerrainVisible)
-				else
-					-- use scenenode
-					chunk.terraingfx =3D CreateRootGfx3D()
-					chunk.terraingfx:SetMesh(meshname)
-					chunk.terraingfx:SetPosition(x,y,0)
-					chunk.terraingfx:SetCastShadows(gTerrainCastShadows)
-					chunk.terraingfx:SetVisible(self.gbBlendOutTerrainVisible)
-				end
-			end
-		end
-	end
-	=

-	chunk.lStaticEntities =3D {}
-	=

-	-- STATICS
-	if (gStaticBlockLoader) then
-		local iTileTypeID,iX,iY,iZ,iHue
-		local iStaticCount
-		local xloc,yloc
-
-		for x =3D 0,self.ROBMAP_CHUNK_SIZE-1 do
-			for y =3D 0,self.ROBMAP_CHUNK_SIZE-1 do
-				gStaticBlockLoader:Load(iBlockUO_X+x,iBlockUO_Y+y)
-				iStaticCount =3D gStaticBlockLoader:Count() -- operates on the block t=
hat was last loaded using :Load()
-
-				for i =3D 0,iStaticCount-1 do
-					iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- oper=
ates on the block that was last loaded using :Load()
-					=

-					xloc =3D (iBlockUO_X+x)*8 + iX
-					yloc =3D (iBlockUO_Y+y)*8 + iY
-
-					self:CreateMapChunkEntity(chunk,iTileTypeID,xloc,yloc,iZ,iHue)
-				end =

-		end end
-	end
-	=

-	--[[
-	-- MULTIS (add multis as statics)
-	if (gMultis) then
-		local iTileTypeID,iX,iY,iZ,iHue
-		local UO_X,UO_Y
-		local multi
-		=

-		for k,v in pairs(gMultis) do
-			multi =3D k
-			=

-			if multi.lparts then
-				for k,v in pairs(multi.lparts) do
-					UO_X =3D x * self.ROBMAP_CHUNK_SIZE * 8
-					UO_Y =3D y * self.ROBMAP_CHUNK_SIZE * 8
-
-					iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
-
-					if	iX >=3D UO_X and iX < UO_X+self.ROBMAP_CHUNK_SIZE*8 and =

-						iY >=3D UO_Y and iY < UO_Y+self.ROBMAP_CHUNK_SIZE*8 then
-						=

-						self:CreateMapChunkEntity(chunk,iTileTypeID,iX,iY,iZ,iHue,false)
-						=

-						print("MULTI PART")
-					end
-				end
-			end
-		end
-	end
-	]]
-
-	-- TODO : fish in water ? other gimiks ?
-
-	if (gFastBatchStatics) then
-		chunk.fastbatch:SetCastShadows(gStaticsCastShadows)
-		chunk.fastbatch:FastBatch_Build()
-		chunk.fastbatch:FastBatch_SetDisplayRange(self:BlendoutGetVisibleRange())
-	else
-		for layerZ,layerStaticGeom in pairs(chunk.pStaticGeometryLayers) do =

-			layerStaticGeom:SetCastShadows(gStaticsCastShadows)
-			layerStaticGeom:SetVisible(self:IsZLayerVisible(Renderer3D:LayerToZ(lay=
erZ)))
-			layerStaticGeom:Build()
-		end
-	end
-
-	-- WATER
-	if gEnableMultiTexTerrain and (not gDisableMultiTexWater) then
-		local count =3D Array2DGetElementCount(chunk.mWaterZMap) -- might be slow
-		=

-		local tiles =3D self.ROBMAP_CHUNK_SIZE * 8
-
-		if (gEnableMultiTexTerrain and count and count > 0) then
-			-- print("DEBUG",chunk,"mostz",mostz)
-			=

-			-- create water
-			local gfx =3D CreateRootGfx3D()
-			local vc =3D 4 * count
-			local ic =3D 6 * count
-			=

-			gfx:SetSimpleRenderable()
-			=

-			gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
-			=

-			-- print("DEBUG","WATERSTART",count,vc,ic)
-			local index =3D 0
-			local x,y,z
-
-			-- k,v in pairs(chunk.mWaterZMap) do
-			Array2DForAll(chunk.mWaterZMap, function(z, x,y)
-				--x,y =3D unpack(strsplit("_",k))
-				z =3D z * 0.1
-
-				-- print("DEBUG","water tile",x,y,z,k,v)
-
-				gfx:RenderableVertex(-x,y,z, 0,0,1, x/tiles, y/tiles)
-				gfx:RenderableVertex(-x-1,y,z, 0,0,1, (x+1)/tiles, y/tiles)
-				gfx:RenderableVertex(-x,y+1,z, 0,0,1, x/tiles, (y+1)/tiles)
-				gfx:RenderableVertex(-x-1,y+1,z, 0,0,1, (x+1)/tiles, (y+1)/tiles)
-				=

-				gfx:RenderableIndex3(index+0, index+2, index+1)
-				gfx:RenderableIndex3(index+1, index+2, index+3)
-				=

-				index =3D index + 4
-			end)
-
-			gfx:RenderableEnd()
-
-			gfx:SetMaterial("water")
-			gfx:SetCastShadows(false)
-			=

-			x,y,z =3D self:UOPosToLocal(chunk.miX * self.ROBMAP_CHUNK_SIZE * 8, chu=
nk.miY * self.ROBMAP_CHUNK_SIZE * 8, 0.1)
-
-			gfx:SetPosition(x, y, z)
-			=

-			chunk.mWaterGfx =3D gfx
-		end
-	end
-
-	return chunk
-end
-
--- NOTE: layerZ is a uo zloc not the layer index in pStaticGeometryLayers
-function Renderer3D:IsZLayerVisible (layerZ)
-	return (not self.giBlendOutCurZ) or layerZ <=3D self.giBlendOutCurZ
-end
-
-function Renderer3D:UpdateStaticVisibility	(entity) =

-	if (entity and entity.gfx and entity.gfx.billboard) then
-		entity.gfx.billboard:SetVisible(self:IsZLayerVisible(entity.zloc))
-	end
-end
-
--- returns fMinZ,fMaxZ
-function Renderer3D:BlendoutGetVisibleRange ()
-	local fMinZ =3D -1000
-	local fMaxZ =3D (self.giBlendOutCurZ or 1000) -- inclusive
-	return fMinZ,fMaxZ
+
+Renderer3D.kGoodFPS =3D 25
+Renderer3D.kGoodTicksBetweenFrames =3D 1000 / Renderer3D.kGoodFPS -- 1000=
=3D1sec
+Renderer3D.kMapLoadAllowedTicksPerFrame =3D Renderer3D.kGoodTicksBetweenFr=
ames =

+Renderer3D.kMapLoadStaticLoadAllowedTicks =3D Renderer3D.kGoodTicksBetween=
Frames =

+--~ local bWeHaveSpareTime =3D gSecondsSinceLastFrame*1000 < Renderer3D.kG=
oodTicksBetweenFrames
+
+kMapLoad_3D_Terrain_Rough		=3D {prio=3D0}
+kMapLoad_3D_Water_Rough			=3D {prio=3D1} -- similar to rough terrain, just=
 one poly per block
+kMapLoad_3D_Statics_Rough		=3D {prio=3D2}
+kMapLoad_3D_Multis_Rough		=3D {prio=3D3}
+kMapLoad_3D_Terrain_Detail		=3D {prio=3D4}
+kMapLoad_3D_Water_Detail		=3D {prio=3D5}
+kMapLoad_3D_Statics_Detail		=3D {prio=3D6}
+kMapLoad_3D_Multis_Detail		=3D {prio=3D7}
+kMapLoad_3D_Dynamics_AddRemove	=3D {prio=3D8}
+kMapLoad_3D_Dynamics_Batch		=3D {prio=3D5}
+
+dofile(libpath .. "lib.mapblock.scheduler.lua")
+dofile(libpath .. "lib.mapblock.spawner.lua")
+dofile(libpath .. "lib.mapblock.base.lua")
+dofile(libpath .. "lib.mapblock.grid.lua")
+dofile(libpath .. "lib.mapblock.aabb.lua")
+dofile(libpath .. "lib.mapblock.3d.statics.lua")
+dofile(libpath .. "lib.mapblock.3d.terrain.lua")
+dofile(libpath .. "lib.mapblock.3d.dynamics.lua")
+dofile(libpath .. "lib.mapblock.3d.multis.lua")
+--~ dofile(libpath .. "lib.mapblock.3d.water.lua")
+cMapBlock_3D_Water		=3D CreateClass(cMapBlockGrid)
+
+cMapBlock_3D_Terrain.kLOD_Detail		=3D kMapLoad_3D_Terrain_Detail
+cMapBlock_3D_Terrain.kLOD_Rough			=3D kMapLoad_3D_Terrain_Rough
+cMapBlock_3D_Statics.kLOD_Detail		=3D kMapLoad_3D_Statics_Detail
+cMapBlock_3D_Statics.kLOD_Rough			=3D kMapLoad_3D_Statics_Rough
+cMapBlock_3D_Multis.kLOD_Detail			=3D kMapLoad_3D_Multis_Detail
+cMapBlock_3D_Multis.kLOD_Rough			=3D kMapLoad_3D_Multis_Rough
+
+function Renderer3D:MapStep		()
+	if (not self.bMapLoadSystemInitialized) then
+		self.bMapLoadSystemInitialized =3D true
+		local scheduler =3D CreateScheduler()
+		self.map3d_scheduler =3D scheduler
+		self.map3d_spawners =3D {}
+		self.map3d_spawners.terrain		=3D CreateMapBlockSpawner(cMapBlock_3D_Terr=
ain,scheduler)
+		self.map3d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_3D_Stat=
ics,scheduler)
+		self.map3d_spawners.dynamics	=3D CreateDynamicSpawner(scheduler)
+		self.map3d_spawners.multis		=3D CreateMultiSpawner(scheduler)
+		--~ self.map3d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_3D_Wa=
ter,scheduler)
+	end
+	=

+	local t =3D Client_GetTicks()
+	local xloc,yloc,zloc =3D self:GetCamPos()
+	for k,spawner in pairs(self.map3d_spawners) do spawner:Step(t,xloc,yloc,z=
loc) end
+	self.map3d_scheduler:Step(xloc,yloc,zloc)
+end
+
+function Renderer3D:MapClear	()
+	for k,spawner in pairs(self.map3d_spawners or {}) do spawner:Clear() end
+end
+
+-- water : block.terrain[10*ty+tx] =3D MapGetGround(block.bx*8+tx,block.by=
*8+ty)
+-- water : analyze terrain infos and determine where water should be, Filt=
erIsMapWater(tiletype) -- 3D: chunk:SetWaterZ(tx,ty,z) ??
+
+
+-- #########################################
+
+-- returns xloc,yloc in uo coords
+function Renderer3D:GetCamPos () =

+	local x,y,z =3D Renderer3D:GetLookAheadCamPos()
+	return -x,y,z
 end
 =

 -- TODO: blend out mounts
@@ -712,67 +178,54 @@
 			self.gbBlendOutTerrainVisible =3D bTerrainVisible
 		end
 		=

-		-- update mapblocks
-		for y,row in pairs(self.gMapChunks) do
-			for x,chunk in pairs(row) do
-				if (not chunk.bIsDead) then
-					-- update statics
-					for layerZ,layerStaticGeom in pairs(chunk.pStaticGeometryLayers) do
-						layerStaticGeom:SetVisible(self:IsZLayerVisible(Renderer3D:LayerToZ(=
layerZ + 1)))
+		if self.map3d_spawners then
+			for k,v in pairs(self.map3d_spawners) do
+				v:ForAllBlocks(function(block)
+					if block.SetDisplayRange then
+						block:SetDisplayRange(self:BlendoutGetVisibleRange())
 					end
-					for k,entity in pairs(chunk.lStaticEntities) do =

-						self:UpdateStaticVisibility(entity) =

-					end
-					=

-					-- update fast batch
-					if gFastBatchStatics then
-						-- invalidate map chunk and trigger rebuild
-						--~ chunk.mbRebuild =3D true
-						chunk.fastbatch:FastBatch_SetDisplayRange(self:BlendoutGetVisibleRan=
ge())
-					end
-					=

-					-- update terrain
-					if (chunk.pStaticGeometryTerrain) then
-						chunk.pStaticGeometryTerrain:SetVisible(bTerrainVisible)
-					elseif (chunk.terraingfx) then
-						chunk.terraingfx:SetVisible(bTerrainVisible)
-					end
-				end
+				end)
 			end
 		end
 		=

 		-- update dynamics =

-		for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic=
)) then self:UpdateDynamicVisibility(dynamic) end end
-		=

-		self:UpdateDynamicDisplayRange()
+		--~ for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dyn=
amic)) then self:UpdateDynamicVisibility(dynamic) end end
+		=

+		--~ self:UpdateDynamicDisplayRange()
 		=

 		-- update mobiles
 		for k,mobile in pairs(GetMobileList()) do self:UpdateMobileVisibility(mo=
bile) end
 	end
 end
 =

--- coords in chunks
--- TODO : release anything else that was allocated in CreateMapChunk
-function Renderer3D:DestroyMapChunk (x,y,chunk)
-	chunk.mbRebuild =3D nil
-	if (not chunk.bIsDead) then
-		self.gLowDetailTerrainNeedsRebuild =3D true
-		--print("DestroyMapChunk",x,y)
-		chunk.bIsDead =3D true
-		if (chunk.mWaterGfx) then chunk.mWaterGfx:Destroy() chunk.mWaterGfx =3D =
nil end
-		if (chunk.fastbatch) then chunk.fastbatch:Destroy() chunk.fastbatch =3D =
nil end
-		if (chunk.pStaticGeometryTerrain) then chunk.pStaticGeometryTerrain:Dest=
roy() chunk.pStaticGeometryTerrain =3D nil end
-		if (chunk.terraingfx) then chunk.terraingfx:Destroy() chunk.terraingfx =
=3D nil end
-		if (chunk.terrain_multitex_gfx) then chunk.terrain_multitex_gfx:Destroy(=
) chunk.terrain_multitex_gfx =3D nil end
-		if (chunk.pTerrainEntity) then chunk.pTerrainEntity:Destroy() chunk.pTer=
rainEntity =3D nil end
-		for k,v in pairs(chunk.lStaticEntities) do
-			if (v.lightname) then Renderer3D:RemovePointLight(v.lightname) v.lightn=
ame =3D nil end
-			if (v.particle and v.particle:IsAlive()) then v.particle:Destroy() v.pa=
rticle =3D nil end
-			if (v.staticentity) then v.staticentity:Destroy() v.staticentity =3D ni=
l end
-			if (v.gfx and v.gfx.billboard) then v.gfx.billboard:Destroy() v.gfx.bil=
lboard =3D nil end
-			if (v.gfx) then v.gfx:Destroy() v.gfx =3D nil end
-		end =

-		for k,v in pairs(chunk.pStaticGeometryLayers) do v:Destroy() end chunk.p=
StaticGeometryLayers =3D {}
-		if (chunk.sTerrainMeshName) then UnloadMeshName(chunk.sTerrainMeshName) =
chunk.sTerrainMeshName =3D nil end -- unload terrain mesh
-	end
-end
+
+-- returns fMinZ,fMaxZ
+function Renderer3D:BlendoutGetVisibleRange ()
+	local fMinZ =3D -1000
+	local fMaxZ =3D (self.giBlendOutCurZ or 1000) -- inclusive
+	return fMinZ,fMaxZ
+end
+
+
+-- NOTE: layerZ is a uo zloc not the layer index in pStaticGeometryLayers
+function Renderer3D:IsZLayerVisible (layerZ)
+	return (not self.giBlendOutCurZ) or layerZ <=3D self.giBlendOutCurZ
+end
+
+function Renderer3D:LayerToZ(zlayer)
+	--~ return zlayer * Renderer3D.giBlendOutPlayerHeight
+	return zlayer
+end
+
+function Renderer3D:UpdateStaticVisibility	(entity) =

+	if (entity and entity.gfx and entity.gfx.billboard) then
+		entity.gfx.billboard:SetVisible(self:IsZLayerVisible(entity.zloc))
+	end
+end
+
+function Renderer3D:ZToLayer(zloc)
+	--~ return math.floor(zloc / Renderer3D.giBlendOutPlayerHeight)
+	return math.floor(zloc)
+end
+
+function Renderer3D:ClearMapCache () end

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Thu Aug 14 15:54:03 2008
@@ -104,39 +104,44 @@
 		end
 	end
 	=

+	=

+	if self.map3d_spawners and self.map3d_spawners.terrain then
+		self.map3d_spawners.statics:ForAllBlocks(function(block)
+			-- statics
+			block:ForAllEntities(function(entity)
+				if (Renderer3D:IsZLayerVisible(entity.zloc)) then -- zloc is in intege=
r tilecoords from uo
+					if (entity.gfx and entity.gfx.billboard) then
+						-- fallback
+						local x,y,z =3D entity.gfx.billboard:GetDerivedPosition()
+						fHitDist =3D SphereRayPick(x,y,z,0.5,rx,ry,rz,rvx,rvy,rvz) -- 0.5 rad
+						bHit =3D (fHitDist ~=3D nil)
+					elseif (entity.staticentity) then
+						bHit,fHitDist =3D entity.staticentity:RayPick(rx,ry,rz,rvx,rvy,rvz,
+							entity.x,entity.y,entity.z,
+							entity.qw,entity.qx,entity.qy,entity.qz,
+							entity.sx,entity.sy,entity.sz)
+					elseif (entity.meshbuffer) then
+						bHit,fHitDist =3D entity.meshbuffer:RayPick(rx,ry,rz,rvx,rvy,rvz,
+							entity.x,entity.y,entity.z,
+							entity.qw,entity.qx,entity.qy,entity.qz,
+							entity.sx,entity.sy,entity.sz)
+					end
+					if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickF=
oundDist)) then
+						self.gMousePickFoundDist =3D fHitDist
+						gMousePickFoundHit =3D {}
+						gMousePickFoundHit.hittype =3D kMousePickHitType_Static
+						gMousePickFoundHit.entity =3D entity
+						--entity has to have the following properties: hue, x, y, z, iTileTy=
peID
+					end
+				end
+			end)
+		end)
+	end
+
+	--[[
 	for chunky,row in pairs(self.gMapChunks) do
 		for chunkx,chunk in pairs(row) do
 			if (not chunk.bIsDead) then
-
-				-- statics  (contained in lStaticEntities list)
-				for k,entity in pairs(chunk.lStaticEntities) do =

-					if (Renderer3D:IsZLayerVisible(entity.zloc)) then -- zloc is in integ=
er tilecoords from uo
-						if (entity.gfx and entity.gfx.billboard) then
-							-- fallback
-							local x,y,z =3D entity.gfx.billboard:GetDerivedPosition()
-							fHitDist =3D SphereRayPick(x,y,z,0.5,rx,ry,rz,rvx,rvy,rvz) -- 0.5 r=
ad
-							bHit =3D (fHitDist ~=3D nil)
-						elseif (entity.staticentity) then
-							bHit,fHitDist =3D entity.staticentity:RayPick(rx,ry,rz,rvx,rvy,rvz,
-								entity.x,entity.y,entity.z,
-								entity.qw,entity.qx,entity.qy,entity.qz,
-								entity.sx,entity.sy,entity.sz)
-						elseif (entity.meshbuffer) then
-							bHit,fHitDist =3D entity.meshbuffer:RayPick(rx,ry,rz,rvx,rvy,rvz,
-								entity.x,entity.y,entity.z,
-								entity.qw,entity.qx,entity.qy,entity.qz,
-								entity.sx,entity.sy,entity.sz)
-						end
-						if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePick=
FoundDist)) then
-							self.gMousePickFoundDist =3D fHitDist
-							gMousePickFoundHit =3D {}
-							gMousePickFoundHit.hittype =3D kMousePickHitType_Static
-							gMousePickFoundHit.entity =3D entity
-							--entity has to have the following properties: hue, x, y, z, iTileT=
ypeID
-						end
-					end
-				end
-
 				-- terrain
 				if (gGroundBlockLoader and self.gbBlendOutTerrainVisible) then
 					local iBlockUO_X =3D chunk.miX * self.ROBMAP_CHUNK_SIZE
@@ -192,31 +197,10 @@
 						gMousePickFoundHit.blockorigin_x =3D originoffx+bx*8
 						gMousePickFoundHit.blockorigin_y =3D originoffy+by*8
 					end
-					=

-					--[[
-					-- OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror f=
ix
-					local iBlockUO_X =3D chunk.miX * self.ROBMAP_CHUNK_SIZE
-					local iBlockUO_Y =3D chunk.miY * self.ROBMAP_CHUNK_SIZE
-					local origin_abs_x =3D self.giMapOriginX * self.ROBMAP_CHUNK_SIZE
-					local origin_abs_y =3D self.giMapOriginY * self.ROBMAP_CHUNK_SIZE
-					local originoffx =3D 8.0*(iBlockUO_X-origin_abs_x)
-					local originoffy =3D 8.0*(iBlockUO_Y-origin_abs_y)
-					for bx =3D 0,self.ROBMAP_CHUNK_SIZE-1 do
-					for by =3D 0,self.ROBMAP_CHUNK_SIZE-1 do
-						self.gTerrainMousePickCurBlock.chunk =3D chunk
-						self.gTerrainMousePickCurBlock.chunk =3D chunk
-						self.gTerrainMousePickCurBlock.x =3D originoffx+bx*8
-						self.gTerrainMousePickCurBlock.y =3D originoffy+by*8
-						self.gTerrainMousePickCurBlock.iBlockX =3D iBlockUO_X+bx
-						self.gTerrainMousePickCurBlock.iBlockY =3D iBlockUO_Y+by
-						TerrainRayPick(gGroundBlockLoader,iBlockUO_X+bx,iBlockUO_Y+by,origin=
offx+bx*8,originoffy+by*8,0,rx,ry,rz,rvx,rvy,rvz)
-					end
-					end
-					]]--
 				end
 			end
 	end end
-
+	]]
 	=

 	-- dynamics
 	for k,dynamic in pairs(GetDynamicList()) do

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Thu Aug 14 15:54:03 2008
@@ -11,6 +11,9 @@
 dofile(libpath .. "lib.3d.combat.lua")
 dofile(libpath .. "lib.3d.cam.lua")
 dofile(libpath .. "lib.3d.walksmooth.lua")
+dofile(libpath .. "lib.3d.tilebatch.lua")
+dofile(libpath .. "lib.3d.dynamicspawner.lua")
+dofile(libpath .. "lib.3d.multispawner.lua")
 =

 gRendererList[ "Renderer3d" ] =3D Renderer3D
 =

@@ -90,7 +93,8 @@
 	self:CombatGuiStep()
 	self:MobileAnimStep()
 	self:CamStep()
-	self:UpdateMap()
+	--~ self:UpdateMap()
+	self:MapStep()
 	self:MousePickStep()
 	=

 	-- b&w effect on death
@@ -216,7 +220,7 @@
 		local prec =3D gCaelumSystem:GetPrecipitationController()
 		if prec then
 			--~ print("PREC")
-			prec:SetCoverage(0)
+			--~ prec:SetCoverage(0)
 		end
 		=

 		-- Sunrise with visible moon.
@@ -225,7 +229,7 @@
 		local t =3D os.date('*t')
 		cl:SetGregorianDateTime(t.year, t.month, t.day, t.hour, t.min, t.sec)
 =

-		cl:SetTimeScale(1024)
+		--~ cl:SetTimeScale(1024)
 		=

 		-- to prevent wobbly shadows
 		-- updates clock and caelum every 30 sec
@@ -343,7 +347,7 @@
 -- hook to add artid based particle effects
 function Renderer3D:Hook_ItemAddParticle	(artid, x, y, z)
 	-- moongate
-	if artid =3D=3D 3948 then
+	if artid =3D=3D 3948 or artid =3D=3D 8148 then
 		local gfx =3D CreateRootGfx3D()
 		gfx:SetParticleSystem("Moongate")
 		gfx:SetPosition(x-0.5,y+0.5,z+1.5)

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Thu Aug 14 15:54:03 2008
@@ -294,7 +294,7 @@
 	local profile =3D MakeProfiler("mapload")
 =

 	profile:StartSection("clearcache")
-	gCurrentRenderer:ClearMapCache()
+	--~ gCurrentRenderer:ClearMapCache()
 	MapClearCache()
 	print("gMapIndex",gMapIndex)
 =


Modified: trunk/lua/lib.mapblock.2d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.statics.lua (original)
+++ trunk/lua/lib.mapblock.2d.statics.lua Thu Aug 14 15:54:03 2008
@@ -1,4 +1,4 @@
-cMapBlock_2D_Statics	=3D CreateClass(cMapBlock)
+cMapBlock_2D_Statics	=3D CreateClass(cMapBlockGrid)
 cMapBlock_2D_Statics.iBlockSize		=3D 8 -- in tiles
 cMapBlock_2D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
 =


Modified: trunk/lua/lib.mapblock.2d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.2d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.2d.terrain.lua Thu Aug 14 15:54:03 2008
@@ -1,4 +1,4 @@
-cMapBlock_2D_Terrain	=3D CreateClass(cMapBlock)
+cMapBlock_2D_Terrain	=3D CreateClass(cMapBlockGrid)
 cMapBlock_2D_Terrain.iBlockSize		=3D 8*2 -- in tiles
 cMapBlock_2D_Terrain.iLoadRadius	=3D 4 -- in iBlockSize-blocks
 --~ cMapBlock_2D_Terrain.kMaxDist_Visible		=3D 8*4 -- camdist in tiles  se=
e mapblock.base for default

Modified: trunk/lua/lib.mapblock.3d.dynamics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.dynamics.lua (original)
+++ trunk/lua/lib.mapblock.3d.dynamics.lua Thu Aug 14 15:54:03 2008
@@ -1,1 +1,124 @@
 -- todo
+
+cMapBlock_3D_Dynamics	=3D CreateClass(cMapBlockGrid)
+cMapBlock_3D_Dynamics.iBlockSize		=3D 8 -- in tiles
+cMapBlock_3D_Dynamics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
+cMapBlock_3D_Dynamics.kMaxDist_Visible		=3D cMapBlock_3D_Dynamics.iBlockSi=
ze * 4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Dynamics.kMaxDist_Detail		=3D cMapBlock_3D_Dynamics.iBlockSiz=
e * 2 -- camdist in tiles
+
+function cMapBlock_3D_Dynamics:Init (bx,by)
+	cMapBlockGrid.Init(self, bx,by)
+
+	self.lDynamics =3D {}
+end
+
+-- forall entities fun(entity)
+function cMapBlock_3D_Dynamics:ForAllEntities (fun)
+	if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
+end
+
+function cMapBlock_3D_Dynamics:SetDisplayRange (fmin, fmax)
+	if self.mTileBatch then self.mTileBatch:SetDisplayRange(fmin,fmax) end
+end
+
+function cMapBlock_3D_Dynamics:Clear ()
+	if self.mTileBatch then self.mTileBatch:Clear() end
+end
+
+function cMapBlock_3D_Dynamics:IsUOLocationInsideBlock	(xloc,yloc)
+	return math.floor(xloc/8) =3D=3D self.bx and math.floor(yloc/8) =3D=3D se=
lf.by
+end
+
+-- returns {iTileTypeID,xloc,yloc,iZ,iHue} of the given dynamic
+function cMapBlock_3D_Dynamics:GetRawDataFromDynamic (dynamic)
+	-- iTileTypeID,xloc,yloc,iZ,iHue
+	return dynamic.artid, dynamic.xloc, dynamic.yloc, dynamic.zloc, dynamic.h=
ue
+end
+
+function cMapBlock_3D_Dynamics:AddDynamic (dynamic)
+	local iTileTypeID,xloc,yloc,iZ,iHue =3D self:GetRawDataFromDynamic(dynami=
c)
+	if iTileTypeID and xloc and yloc and iZ then
+		--~ print("ADD",self,dynamic.serial)
+		self.mUpdateNeeded =3D true
+
+		self.lDynamics[dynamic.serial] =3D {
+			serial=3Ddynamic.serial, =

+			--~ remove_me=3Dfalse, preload_me=3Dtrue, =

+			dynamic=3Ddynamic, rawdata=3D{self:GetRawDataFromDynamic(dynamic)}
+		}
+		=

+		self.mLastChange =3D Client_GetTicks()
+	end
+end
+
+function cMapBlock_3D_Dynamics:RemoveDynamic (dynamic)
+	if self.lDynamics[dynamic.serial] then
+		--~ print("REMOVE",self,dynamic.serial)
+		self.mUpdateNeeded =3D true
+		self.lDynamics[dynamic.serial] =3D nil
+		=

+		self.mLastChange =3D Client_GetTicks()
+	end
+end
+
+-- called every frame, instant actions (destroy gfx), evaluate priority =

+function cMapBlock_3D_Dynamics:ShortStep (t,xloc,yloc,zloc)
+	if self.mUpdateNeeded then
+		-- big changes
+		self:SetPriority(kMapLoad_3D_Dynamics_AddRemove.prio)
+	--~ elseif self.mUnbatched > 0 and self.mLastChange < t - cMapBlock_3D_Dy=
namics.kBatchTimeout then
+		--~ -- just =

+		--~ self.mRebatchNeeded =3D true
+		--~ self:SetPriority(kMapLoad_3D_Dynamics_Batch.prio)
+	--~ else
+		self:SetPriority(kSchedulerIdlePriority)
+	end
+		=

+	--~ elseif ((self.iNextLODUpdate or 0) < t) then
+		--~ -- normal lod updates
+		--~ self.iNextLODUpdate =3D t + self.kLODUpdateInterval
+		--~ =

+		--~ local bx =3D floor(xloc/self.iBlockSize + 0.5)
+		--~ local by =3D floor(yloc/self.iBlockSize + 0.5)
+		--~ =

+		--~ local camdist =3D hypot(	(self.bx + 0.5)*self.iBlockSize-xloc,
+								--~ (self.by + 0.5)*self.iBlockSize-yloc)
+		--~ local newlod
+		--~ if (	camdist <  self.kMaxDist_Detail ) then newlod =3D self.kLOD_Det=
ail =

+		--~ elseif (camdist <  self.kMaxDist_Visible) then newlod =3D self.kLOD_=
Rough end
+		--~ =

+		--~ self:SetLOD(newlod)
+	--~ end
+end
+
+-- a single step during the thread
+function cMapBlock_3D_Dynamics:WorkStep ()
+	if self.mUpdateNeeded then
+		=

+		if not self.mTileBatch then
+			self.mTileBatch =3D CreateClassInstance(cTileBatch)
+		end
+		=

+		-- preload
+		for k,v in pairs(self.lDynamics) do
+			self.mTileBatch:PreloadTile(unpack(v.rawdata))
+			self:YieldIfOverTime()
+		end
+		=

+		self:Yield()
+
+		-- clear
+		self.mUpdateNeeded =3D nil
+
+		self.mTileBatch:Clear()
+
+		-- add existing ones
+		for k,v in pairs(self.lDynamics) do
+			self.mTileBatch:AddTile(unpack(v.rawdata))
+		end
+
+		self.mTileBatch:Build()
+		=

+		--~ print("count",self,countarr(self.lDynamics))
+	end
+end

Modified: trunk/lua/lib.mapblock.3d.multis.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.multis.lua (original)
+++ trunk/lua/lib.mapblock.3d.multis.lua Thu Aug 14 15:54:03 2008
@@ -1,1 +1,85 @@
 -- todo
+
+cMapBlock_3D_Multis	=3D CreateClass(cMapBlockAABB)
+cMapBlock_3D_Multis.iLoadRadius				=3D 64 -- in tiles
+cMapBlock_3D_Multis.kMaxDist_Visible		=3D 32 -- camdist in tiles  see mapb=
lock.base for default
+cMapBlock_3D_Multis.kMaxDist_Detail			=3D 64 -- camdist in tiles
+
+function cMapBlock_3D_Multis:Init (multi)
+	local x,y,xx,yy
+	=

+	-- calc aabb
+	for k,v in pairs(multi.lparts) do
+		local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
+		=

+		x =3D x and math.min(x, iX) or iX
+		y =3D y and math.min(y, iY) or iY
+		=

+		xx =3D xx and math.max(xx, iX) or iX
+		yy =3D yy and math.max(yy, iY) or iY
+	end
+
+	cMapBlockAABB.Init(self, x,y,xx-x+1,yy-y+1)
+	self.mMulti =3D multi
+end
+
+-- forall entities fun(entity)
+function cMapBlock_3D_Multis:ForAllEntities (fun)
+	if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
+end
+
+function cMapBlock_3D_Multis:SetDisplayRange (fmin, fmax)
+	if self.mTileBatch then self.mTileBatch:SetDisplayRange(fmin,fmax) end
+end
+
+function cMapBlock_3D_Multis:ClearRough   () end -- override me !
+function cMapBlock_3D_Multis:WorkStep_LoadRough  () end -- override me !
+
+function cMapBlock_3D_Multis:ClearDetail  () =

+	if self.mTileBatch then self.mTileBatch:Clear() end
+end
+
+function cMapBlock_3D_Multis:WorkStep_LoadDetail ()
+	if not self.mTileBatch then
+		self.mTileBatch =3D CreateClassInstance(cTileBatch)
+	end
+		=

+	-- preload
+	for k,v in pairs(self.mMulti.lparts) do
+		local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
+		--~ self.mTileBatch:PreloadTile(iTileTypeID,iX,iY,iZ,iHue)
+		--~ self:YieldIfOverTime()
+		=

+		local meshname =3D GetMeshName(iTileTypeID)
+		if meshname then
+			local meshbuffer =3D GetMeshBuffer(meshname)
+
+			local xadd,yadd,zadd =3D FilterPositionXYZ(iTileTypeID)
+			local x,y,z =3D Renderer3D:UOPosToLocal(iX + xadd,iY + yadd,iZ * 0.1 + =
zadd) =

+			local qw,qx,qy,qz =3D GetStaticMeshOrientation(iTileTypeID)
+
+			local mousepick =3D {
+				xadd=3Dxadd,yadd=3Dyadd,zadd=3Dzadd,qw=3Dqw,qx=3Dqx,qy=3Dqy,qz=3Dqz,
+				sx=3D-1,sy=3D1,sz=3D1,x=3Dx,y=3Dy,z=3Dz,meshbuffer=3Dmeshbuffer,
+				iTileTypeID =3D iTileTypeID,
+				iHue =3D iHue,
+				iBlockX =3D math.floor(x/8), iBlockY =3D math.floor(y/8),
+			}
+		=

+			v.mousepick =3D mousepick
+		end
+
+		self:YieldIfOverTime()		=

+	end
+		=

+	self:Yield()
+
+	self.mTileBatch:Clear()
+
+	-- add parts
+	for k,v in pairs(self.mMulti.lparts) do
+		self.mTileBatch:AddTile(unpack(v))
+	end
+
+	self.mTileBatch:Build()
+end

Modified: trunk/lua/lib.mapblock.3d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.statics.lua (original)
+++ trunk/lua/lib.mapblock.3d.statics.lua Thu Aug 14 15:54:03 2008
@@ -1,13 +1,68 @@
 -- todo
 =

+cMapBlock_3D_Statics	=3D CreateClass(cMapBlockGrid)
+cMapBlock_3D_Statics.iBlockSize		=3D 8*2 -- in tiles
+cMapBlock_3D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
+cMapBlock_3D_Statics.kMaxDist_Visible		=3D cMapBlock_3D_Statics.iBlockSize=
 * 4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Statics.kMaxDist_Detail		=3D cMapBlock_3D_Statics.iBlockSize =
* 2 -- camdist in tiles
 =

-function StaticBlock_LoadRough ()
-	-- TODO : list rough-items
-	-- TODO : preload item models, yield if time exceeded
-	-- TODO : construct fastbatch (big step)
+-- forall entities fun(entity)
+function cMapBlock_3D_Statics:ForAllEntities (fun)
+	if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
 end
 =

-function StaticBlock_LoadDetail ()
-	-- TODO : preload item models, yield if time exceeded
-	-- TODO : construct fastbatch (big step)
+function cMapBlock_3D_Statics:SetDisplayRange (fmin, fmax)
+	if self.mTileBatch then self.mTileBatch:SetDisplayRange(fmin,fmax) end
 end
+
+function cMapBlock_3D_Statics:ClearDetail ()
+	if self.mTileBatch then self.mTileBatch:Clear() end
+end
+
+function cMapBlock_3D_Statics:WorkStep_LoadDetail ()
+	--~ print("cMapBlock_3D_Statics:WorkStep_LoadDetail",self.bx,self.by)
+	=

+	if not self.mTileBatch then
+		self.mTileBatch =3D CreateClassInstance(cTileBatch)
+	else
+		self.mTileBatch:Clear()
+	end
+	=

+	-- uo map block position
+	local iBlockUO_X =3D math.floor(self.bx * self.iBlockSize / 8)
+	local iBlockUO_Y =3D math.floor(self.by * self.iBlockSize / 8)
+
+	-- preload models
+	local iTileTypeID,iX,iY,iZ,iHue
+	local iStaticCount
+	local xloc,yloc
+
+	local blocks =3D math.floor((self.iBlockSize-1) / 8)+1
+
+	for x =3D 0,blocks-1 do
+		for y =3D 0,blocks-1 do
+			local l =3D MapGetBlockStatics(iBlockUO_X+x,iBlockUO_Y+y)
+
+			for k,s in pairs(l) do =

+				iTileTypeID,iX,iY,iZ,iHue =3D s.artid, s.tx, s.ty, s.zloc, s.hue
+				=

+				if iTileTypeID and iX and iY and iZ then =

+					-- uo tile pos
+					local xloc,yloc =3D (iBlockUO_X+x)*8+iX,(iBlockUO_Y+y)*8+iY
+					if =

+						xloc >=3D self.bx * self.iBlockSize and =

+						xloc < (self.bx+1) * self.iBlockSize and =

+						yloc >=3D self.by * self.iBlockSize and =

+						yloc < (self.by+1) * self.iBlockSize
+					then =

+						self.mTileBatch:AddTile(iTileTypeID,xloc,yloc,iZ,iHue)
+						self:YieldIfOverTime()
+					end
+				end
+			end =

+	end end
+	=

+	self:Yield()
+
+	self.mTileBatch:Build()
+end

Modified: trunk/lua/lib.mapblock.3d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.3d.terrain.lua Thu Aug 14 15:54:03 2008
@@ -1,1 +1,16 @@
--- todo
+cMapBlock_3D_Terrain	=3D CreateClass(cMapBlockGrid)
+cMapBlock_3D_Terrain.iBlockSize		=3D 8*2 -- in tiles
+cMapBlock_3D_Terrain.iLoadRadius	=3D 4 -- in iBlockSize-blocks
+cMapBlock_3D_Terrain.kMaxDist_Visible		=3D cMapBlock_3D_Terrain.iBlockSize=
*4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Terrain.kMaxDist_Detail		=3D cMapBlock_3D_Terrain.iBlockSize*=
2 -- camdist in tiles
+
+function cMapBlock_3D_Terrain:ClearDetail ()
+	--~ print("cMapBlock_3D_Terrain:ClearDetail")
+	if (self.gfx_terrain) then self.gfx_terrain:Destroy() self.gfx_terrain =
=3D nil end
+end
+
+function cMapBlock_3D_Terrain:WorkStep_LoadDetail ()
+	--~ print("cMapBlock_3D_Terrain:WorkStep_LoadDetail",self.bx,self.by)
+	local bs =3D kMultiTexTerrainChunkSize
+	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs)
+end

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Thu Aug 14 15:54:03 2008
@@ -1,4 +1,4 @@
--- ***** ***** ***** ***** ***** scheduler process baseclass
+-- ***** ***** ***** ***** ***** block baseclass
 =

 cMapBlock =3D CreateClass()
 cMapBlock.kLOD_Detail			=3D nil -- set to something with .prio =3D value
@@ -7,18 +7,44 @@
 cMapBlock.kMaxDist_Detail		=3D 8*3 -- camdist in tiles
 cMapBlock.kLODUpdateInterval	=3D 500 -- msec
 =

-function cMapBlock:Init			(bx,by)		=

-	self.bx =3D bx
-	self.by =3D by
+function cMapBlock:Init			()		=

 	self.prio =3D kSchedulerIdlePriority
-	self.co =3D coroutine.create(self.WorkThread) =

+	self.co =3D coroutine.create(self.WorkThread)
+end
+
+-- returns the bounding box of the map block (x,y,w,h) in tiles
+function cMapBlock:GetAABB	() return 0,0,0,0 end	-- override me !
+
+function cMapBlock:GetPos	()
+	local x,y,w,h =3D self:GetAABB()
+	return x,y
+end
+
+function cMapBlock:GetSize	()
+	local x,y,w,h =3D self:GetAABB()
+	return w,h
 end
 =

 function cMapBlock:SetPriority		(prio)	self.prio =3D prio end
 function cMapBlock:Yield			()		coroutine.yield() end
 function cMapBlock:YieldIfOverTime	()		if (Client_GetTicks() > self.t_end)=
 then self:Yield() end end
 =

-function cMapBlock:Work			(t_end)	self.t_end =3D t_end coroutine.resume(se=
lf.co,self) end
+function cMapBlock:Work			(t_end)	=

+	self.t_end =3D t_end =

+	self:Resume()
+end
+
+function cMapBlock:Resume	()
+	if coroutine.status(self.co) =3D=3D "dead" then return true, "co is dead"=
 end
+	local status,r =3D coroutine.resume(self.co,self)
+	self:CheckForResumeError(status,r)
+end
+
+function cMapBlock:CheckForResumeError	(status,r)
+	if not status then
+		print("ERROR: job terminated: ",r)
+	end
+end
 =

 function cMapBlock:WorkThread	()		-- executed as coroutine/thread
 	while (not self.bWorkTerminated) do =

@@ -31,7 +57,7 @@
 function cMapBlock:TerminateWork() =

 	self.bWorkTerminated =3D true
 	for i =3D 1,5 do
-		coroutine.resume(self.co,self) =

+		self:Resume()
 		if (not coroutine.running(self.co)) then return end
 	end
 	print("cMapBlock:TerminateWork warning: work timeout",debug.traceback())
@@ -41,26 +67,37 @@
 =

 function cMapBlock:Clear () self:ClearRough() self:ClearDetail() end -- re=
move all gfx
 =

+-- trigger block rebuild
+function cMapBlock:Rebuild ()
+	self:SetLOD(nil)
+	self.lod_finished =3D nil
+end
+
+-- manually sets the lod level, scheduler can overwrite this
+function cMapBlock:SetLOD (newlod)
+	if (newlod ~=3D self.lod) then =

+		self:SetPriority(newlod and newlod.prio or kSchedulerIdlePriority)
+		if (not newlod) then self:Clear() end
+		self.lod =3D newlod
+		self.iNextLODUpdate =3D 0
+	end
+end
+
 -- called every frame, instant actions (destroy gfx), evaluate priority =

 function cMapBlock:ShortStep (t,x,y,z)
 	if ((self.iNextLODUpdate or 0) < t) then
 		self.iNextLODUpdate =3D t + self.kLODUpdateInterval
 		=

-		local bx =3D floor(x/self.iBlockSize + 0.5)
-		local by =3D floor(y/self.iBlockSize + 0.5)
+		local bx,by,w,h =3D self:GetAABB()
 		=

-		local camdist =3D hypot(	(self.bx + 0.5)*self.iBlockSize-x,
-								(self.by + 0.5)*self.iBlockSize-y)
+		local camdist =3D hypot(	(bx+w/2)-x,
+								(by+h/2)-y)
 		local newlod
 		if (	camdist <  self.kMaxDist_Detail ) then newlod =3D self.kLOD_Detail =

 		elseif (camdist <  self.kMaxDist_Visible) then newlod =3D self.kLOD_Roug=
h end
 		--~ if (newlod) then print("cMapBlock:ShortStep",newlod,camdist,self.kMa=
xDist_Detail) end
 		=

-		if (newlod ~=3D self.lod) then =

-			self:SetPriority(newlod and newlod.prio or kSchedulerIdlePriority)
-			if (not newlod) then self:Clear() end
-			self.lod =3D newlod
-		end
+		self:SetLOD(newlod)
 	end
 end
 =

@@ -87,4 +124,3 @@
 function cMapBlock:ClearDetail  () end -- override me !
 function cMapBlock:WorkStep_LoadRough  () end -- override me !
 function cMapBlock:WorkStep_LoadDetail () end -- override me !
-

Modified: trunk/lua/lib.mapblock.scheduler.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.scheduler.lua (original)
+++ trunk/lua/lib.mapblock.scheduler.lua Thu Aug 14 15:54:03 2008
@@ -3,7 +3,7 @@
 cScheduler =3D CreateClass()
 kSchedulerIdlePriority =3D 9999
 =

-function CreateScheduler	() local o =3D CreateClassInstance(cScheduler) o:=
Init() return o end
+function CreateScheduler	() local o =3D CreateClassInstance(cScheduler) re=
turn o end
 =

 function cScheduler:Init	()
 	self.pProcessList =3D {}
@@ -23,7 +23,7 @@
 =

 -- x,y,z : cam/focus-pos
 function cScheduler:Step		(x,y,z)
-	local t =3D Client_GetTicks()
+	local t =3D gMyTicks
 	local t_end =3D t + self.kAllowedTicksPerFrame
 	=

 	-- shortsteps, re-evaluate prio, release gfx

Modified: trunk/lua/lib.mapblock.spawner.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.spawner.lua (original)
+++ trunk/lua/lib.mapblock.spawner.lua Thu Aug 14 15:54:03 2008
@@ -3,7 +3,7 @@
 cMapBlockSpawner =3D CreateClass()
 cMapBlockSpawner.kStepInterval =3D 200
 =

-function CreateMapBlockSpawner (pBlockClass,pScheduler) local o =3D Create=
ClassInstance(cMapBlockSpawner) o:Init(pBlockClass,pScheduler) return o end
+function CreateMapBlockSpawner (pBlockClass,pScheduler) local o =3D Create=
ClassInstance(cMapBlockSpawner, pBlockClass,pScheduler) return o end
 =

 function cMapBlockSpawner:Init	(pBlockClass,pScheduler)
 	self.pMapBlocks		=3D {} =

@@ -62,8 +62,7 @@
 =

 function cMapBlockSpawner:CreateMapBlock	(bx,by)
 	--~ print("cMapBlockSpawner:CreateMapBlock",bx,by)
-	local block =3D CreateClassInstance(self.pBlockClass)
-	block:Init(bx,by)
+	local block =3D CreateClassInstance(self.pBlockClass, bx,by)
 	=

 	self.pMapBlocks[block] =3D true =

 	self.pScheduler:AddProcess(block)

Modified: trunk/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.static.lua (original)
+++ trunk/lua/lib.static.lua Thu Aug 14 15:54:03 2008
@@ -136,6 +136,9 @@
 	gFallbackModelCacheGfx:SetMaterial(sMatName)
 	=

 	local t =3D GetStaticTileType(iTileTypeID)
+	=

+	if not t then return nil end
+	=

 	local h =3D iHeight/iWidth
 	local hh =3D t.miHeight * 0.1
 			=




From no-reply at zwischenwelt.org  Thu Aug 14 15:54:15 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 13:54:15 -0000
Subject: [Iris-commit] [IRIS] r2368 - in /trunk/lua: lib.2d.map.lua
 lib.2d.renderer.lua lib.3d.map.lua lib.3d.renderer.lua lib.artatlas.lua
 lib.mapblock.3d.statics.lua lib.mapblock.3d.terrain.lua
 lib.mapblock.base.lua lib.mapblock.scheduler.lua lib.static.lua
Message-ID: <20080814135416.213411C18259@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 15:54:14 2008
New Revision: 2368

Log:
*added block scheduler init to renderer init
*mesh preload possible with static fallback meshes

Modified:
    trunk/lua/lib.2d.map.lua
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.artatlas.lua
    trunk/lua/lib.mapblock.3d.statics.lua
    trunk/lua/lib.mapblock.3d.terrain.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/lib.mapblock.scheduler.lua
    trunk/lua/lib.static.lua

Modified: trunk/lua/lib.2d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.map.lua (original)
+++ trunk/lua/lib.2d.map.lua Thu Aug 14 15:54:14 2008
@@ -33,8 +33,7 @@
 cMapBlock_2D_Statics.kLOD_Detail		=3D kMapLoad_2D_Statics_Detail
 cMapBlock_2D_Statics.kLOD_Rough			=3D kMapLoad_2D_Statics_Rough
 =

-
-function Renderer2D:MapStep		()
+function Renderer2D:InitMap	()
 	if (not self.bMapLoadSystemInitialized) then
 		self.bMapLoadSystemInitialized =3D true
 		local scheduler =3D CreateScheduler()
@@ -44,6 +43,9 @@
 		self.map2d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_2D_Stat=
ics,scheduler)
 		--~ self.map2d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_2D_Wa=
ter,scheduler)
 	end
+end
+
+function Renderer2D:MapStep		()
 	self:MobileTestStep()
 	=

 	local t =3D Client_GetTicks()

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Thu Aug 14 15:54:14 2008
@@ -20,6 +20,7 @@
 	self.bFirstInitDone =3D true
 	RegisterListener("Hook_MainWindowResized",function () Renderer2D.gbNeedCo=
rrectAspectRatio =3D true end)
 	MultiTexTerrainInit()
+	self:InitMap()	=

 end
 =

 function Renderer2D:Init ()

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Thu Aug 14 15:54:14 2008
@@ -45,7 +45,7 @@
 cMapBlock_3D_Multis.kLOD_Detail			=3D kMapLoad_3D_Multis_Detail
 cMapBlock_3D_Multis.kLOD_Rough			=3D kMapLoad_3D_Multis_Rough
 =

-function Renderer3D:MapStep		()
+function Renderer3D:InitMap	()
 	if (not self.bMapLoadSystemInitialized) then
 		self.bMapLoadSystemInitialized =3D true
 		local scheduler =3D CreateScheduler()
@@ -57,7 +57,9 @@
 		self.map3d_spawners.multis		=3D CreateMultiSpawner(scheduler)
 		--~ self.map3d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_3D_Wa=
ter,scheduler)
 	end
-	=

+end
+
+function Renderer3D:MapStep		()
 	local t =3D Client_GetTicks()
 	local xloc,yloc,zloc =3D self:GetCamPos()
 	for k,spawner in pairs(self.map3d_spawners) do spawner:Step(t,xloc,yloc,z=
loc) end

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Thu Aug 14 15:54:14 2008
@@ -31,6 +31,7 @@
 	LoadTexAtlas()
 	MultiTexTerrainInit()
 	RegisterListener("Hook_MainWindowResized",function () Renderer3D.gbNeedCo=
rrectAspectRatio =3D true end)
+	self:InitMap()
 end
 =

 function Renderer3D:Init ()

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Thu Aug 14 15:54:14 2008
@@ -55,7 +55,7 @@
 			if (kArtAtlasDebugDumpAtlas) then
 				local img2 =3D CreateImage()
 				v:MakeImage(img2)
-				img2:SaveAsFile("../artatlas_"..k..".png")
+				img2:SaveAsFile("artatlas_"..k..".png")
 				img2:Destroy()
 			end
 			=

@@ -77,7 +77,7 @@
 		if (kArtAtlasDebugDumpAtlas) then
 			local img2 =3D CreateImage()
 			gLastArtAtlas:MakeImage(img2)
-			img2:SaveAsFile("../artatlas_"..k..".png")
+			img2:SaveAsFile("artatlas_"..k..".png")
 			img2:Destroy()
 		end
 =


Modified: trunk/lua/lib.mapblock.3d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.statics.lua (original)
+++ trunk/lua/lib.mapblock.3d.statics.lua Thu Aug 14 15:54:14 2008
@@ -2,9 +2,9 @@
 =

 cMapBlock_3D_Statics	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Statics.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_3D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
-cMapBlock_3D_Statics.kMaxDist_Visible		=3D cMapBlock_3D_Statics.iBlockSize=
 * 4 -- camdist in tiles  see mapblock.base for default
-cMapBlock_3D_Statics.kMaxDist_Detail		=3D cMapBlock_3D_Statics.iBlockSize =
* 2 -- camdist in tiles
+cMapBlock_3D_Statics.iLoadRadius	=3D 2*4 -- in iBlockSize-blocks
+cMapBlock_3D_Statics.kMaxDist_Visible		=3D 2*cMapBlock_3D_Statics.iBlockSi=
ze * 4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Statics.kMaxDist_Detail		=3D 2*cMapBlock_3D_Statics.iBlockSiz=
e * 2 -- camdist in tiles
 =

 -- forall entities fun(entity)
 function cMapBlock_3D_Statics:ForAllEntities (fun)

Modified: trunk/lua/lib.mapblock.3d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.3d.terrain.lua Thu Aug 14 15:54:14 2008
@@ -1,8 +1,8 @@
 cMapBlock_3D_Terrain	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Terrain.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_3D_Terrain.iLoadRadius	=3D 4 -- in iBlockSize-blocks
-cMapBlock_3D_Terrain.kMaxDist_Visible		=3D cMapBlock_3D_Terrain.iBlockSize=
*4 -- camdist in tiles  see mapblock.base for default
-cMapBlock_3D_Terrain.kMaxDist_Detail		=3D cMapBlock_3D_Terrain.iBlockSize*=
2 -- camdist in tiles
+cMapBlock_3D_Terrain.iLoadRadius	=3D 2*8 -- in iBlockSize-blocks
+cMapBlock_3D_Terrain.kMaxDist_Visible		=3D 2*cMapBlock_3D_Terrain.iBlockSi=
ze*4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Terrain.kMaxDist_Detail		=3D 2*cMapBlock_3D_Terrain.iBlockSiz=
e*2 -- camdist in tiles
 =

 function cMapBlock_3D_Terrain:ClearDetail ()
 	--~ print("cMapBlock_3D_Terrain:ClearDetail")

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Thu Aug 14 15:54:14 2008
@@ -3,6 +3,7 @@
 cMapBlock =3D CreateClass()
 cMapBlock.kLOD_Detail			=3D nil -- set to something with .prio =3D value
 cMapBlock.kLOD_Rough			=3D nil
+cMapBlock.kMaxDist_Destroy		=3D 8*9 -- camdist in tiles
 cMapBlock.kMaxDist_Visible		=3D 8*6 -- camdist in tiles
 cMapBlock.kMaxDist_Detail		=3D 8*3 -- camdist in tiles
 cMapBlock.kLODUpdateInterval	=3D 500 -- msec

Modified: trunk/lua/lib.mapblock.scheduler.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.scheduler.lua (original)
+++ trunk/lua/lib.mapblock.scheduler.lua Thu Aug 14 15:54:14 2008
@@ -21,8 +21,15 @@
 -- internal, search current index in list
 function cScheduler:_FindProcessPos	(process) for k,process2 in ipairs(sel=
f.pProcessList) do if (process2 =3D=3D process) then return k end end end =

 =

+gfScheduler_WorkTime =3D 0
+gfScheduler_WorkCount =3D 0
+
 -- x,y,z : cam/focus-pos
 function cScheduler:Step		(x,y,z)
+	--~ if math.mod(gMyFrameCounter, 100) =3D=3D 0 then
+		--~ print("procs",table.getn(self.pProcessList))
+	--~ end
+
 	local t =3D gMyTicks
 	local t_end =3D t + self.kAllowedTicksPerFrame
 	=

@@ -34,9 +41,17 @@
 	=

 	-- work until no time left
 	for k,process in ipairs(self.pProcessList) do =

+		local t1 =3D Client_GetTicks()
 		process:Work(t_end)
-		if (Client_GetTicks() >=3D t_end) then break end
+		local t2 =3D Client_GetTicks()
+		=

+		--~ if (Client_GetTicks() >=3D t_end) then break end
+		if (t2 + t2 - t1 >=3D t_end) then break end
 	end
+	=

+	--~ if gfScheduler_WorkCount > 0 then
+		--~ print("avg work time",gfScheduler_WorkTime/gfScheduler_WorkCount)
+	--~ end
 end
 =

 -- true when the first is less than the second       (NOT less-equal)

Modified: trunk/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.static.lua (original)
+++ trunk/lua/lib.static.lua Thu Aug 14 15:54:14 2008
@@ -40,8 +40,9 @@
 -- generates or retrieves meshname for static model
 -- TODO : not flexible enough, what if model should be skipped, or multipl=
e models set ? or model depending on surrounding ?
 -- TODO: remove hueing from her, not needed for fastbatch here
+-- bDontGenerateFallback is used during preload to not generate uo art fal=
lback models
 gLegacyModelCache =3D {}
-function GetMeshName (iTileTypeID)
+function GetMeshName (iTileTypeID, bDontGenerateFallback)
 	--1st: Seasonal Translation
 	local iTranslatedTileTypeID =3D SeasonalStaticTranslation(iTileTypeID, gS=
easonSetting)
 	-- FILTER: map Mesh to other Mesh
@@ -104,19 +105,24 @@
 	end
 	=

 	-- build a static mesh fallback with uo tile as texture (faster than clas=
sic billboard)
-	if not meshname and gUseStaticFallbacks then
-		return GetFallbackMeshName(iTranslatedTileTypeID)
+	if not meshname and gUseStaticFallbacks and not bDontGenerateFallback then
+		meshname =3D GetFallbackMeshName(iTranslatedTileTypeID)
+		if meshname then
+			gLegacyModelCache[iTranslatedTileTypeID] =3D meshname
+			--~ giStaticFallbackCount =3D (giStaticFallbackCount or 0) + 1
+			--~ print("giStaticFallbackCount",giStaticFallbackCount)
+		end
 	end
 	=

 	return meshname
 end
 =

 =

-gFallbackModelCache =3D {}
+--~ gFallbackModelCache =3D {}
 -- returns the name of a static generated mesh that can be used instead of=
 classic billboards
 function GetFallbackMeshName	(iTileTypeID)
-	local name =3D gFallbackModelCache[iTileTypeID]
-	if name then return name end
+	--~ local name =3D gFallbackModelCache[iTileTypeID]
+	--~ if name then return name end
 	=

 	if IsArtBillboardFallBackSkipped(iTileTypeID) then return nil end
 	=

@@ -128,7 +134,7 @@
 	=

 	-- TODO currently just ignores the art atlas lockkeeper
 	local sMatName,iWidth,iHeight,iCenterX,iCenterY,u0,v0,u1,v1 =3D ArtAtlasL=
oadAndLockDirect(iTileTypeID+0x4000,0,nil,gStaticFallbackAtlasBaseMaterial)
-	-- print("###", iTileTypeID, sMatName,iWidth,iHeight,iCenterX,iCenterY,u0=
,v0,u1,v1)
+	--~ print("###", iTileTypeID, sMatName,iWidth,iHeight,iCenterX,iCenterY,u=
0,v0,u1,v1)
 	=

 	if not sMatName then return nil end
 	=

@@ -207,7 +213,7 @@
 	=

 	-- name =3D "mdl_000405.mesh"
 	=

-	gFallbackModelCache[iTileTypeID] =3D name
+	--~ gFallbackModelCache[iTileTypeID] =3D name
 	=

 	return name
 end
@@ -222,6 +228,6 @@
 -- TODO: Wrong !!! hueing must be taken from statics instead of tiledata
 function PreloadAllStaticMesh()
 	for i =3D 0,16085 do
-		GetMeshName(i)
-	end
-end
+		GetMeshName(i, true)
+	end
+end



From no-reply at zwischenwelt.org  Thu Aug 14 15:54:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 13:54:20 -0000
Subject: [Iris-commit] [IRIS] r2369 - /trunk/lua/lib.3d.mousepick.lua
Message-ID: <20080814135420.BE73B1C18259@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 15:54:20 2008
New Revision: 2369

Log:
bugfix: terrain mousepicking

Modified:
    trunk/lua/lib.3d.mousepick.lua

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Thu Aug 14 15:54:20 2008
@@ -105,9 +105,60 @@
 	end
 	=

 	=

+	-- terrain
 	if self.map3d_spawners and self.map3d_spawners.terrain then
+		self.map3d_spawners.terrain:ForAllBlocks(function(block)
+			if block.gfx_terrain and block.gfx_terrain:IsAlive() then
+				local x,y,w,h =3D block:GetAABB()
+				=

+				local gfx =3D block.gfx_terrain
+
+				local iBlockUO_X,iBlockUO_Y =3D math.floor(x/8), math.floor(y/8)
+				local bx,by =3D iBlockUO_X,iBlockUO_Y
+				local tx,ty
+
+				bHit,fHitDist,tx,ty =3D TerrainMultiTex_RayPick(gGroundBlockLoader,bx,=
by,w,h, rx-gfx.x,ry-gfx.y,rz-gfx.z, rvx,rvy,rvz)
+				if (bHit) then
+					if (tx >=3D 8) then bx =3D bx + 1   tx =3D tx - 8 end
+					if (ty >=3D 8) then by =3D by + 1   ty =3D ty - 8 end
+				end
+				=

+				if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickFo=
undDist)) then
+					self.gMousePickFoundDist =3D fHitDist
+					gMousePickFoundHit =3D {}
+					gMousePickFoundHit.hittype =3D kMousePickHitType_Terrain
+					gMousePickFoundHit.chunk =3D chunk
+					=

+					local x,y =3D Renderer3D:LocalToUOPos(rx + fHitDist * rvx, ry + fHitD=
ist * rvy)
+					x,y =3D math.floor(x),math.floor(y)
+					local iTileType,iZLoc =3D GetAbsTile(x,y) =

+					local bx =3D math.floor((x - iBlockUO_X)/8)
+					local by =3D math.floor((y - iBlockUO_Y)/8)
+					local origin_abs_x =3D self.giMapOriginX * self.ROBMAP_CHUNK_SIZE
+					local origin_abs_y =3D self.giMapOriginY * self.ROBMAP_CHUNK_SIZE
+					local originoffx =3D 8.0*(iBlockUO_X-origin_abs_x)
+					local originoffy =3D 8.0*(iBlockUO_Y-origin_abs_y)
+					=

+					gMousePickFoundHit.tiletype =3D iTileType
+					gMousePickFoundHit.minz =3D iZLoc*0.1 =

+					gMousePickFoundHit.maxz =3D iZLoc*0.1
+					gMousePickFoundHit.x =3D x
+					gMousePickFoundHit.y =3D y
+					gMousePickFoundHit.tx =3D math.mod(x,8)
+					gMousePickFoundHit.ty =3D math.mod(y,8)
+					gMousePickFoundHit.iBlockX =3D iBlockUO_X+bx
+					gMousePickFoundHit.iBlockY =3D iBlockUO_Y+by
+					gMousePickFoundHit.blockorigin_x =3D originoffx+bx*8
+					gMousePickFoundHit.blockorigin_y =3D originoffy+by*8
+				end
+								=

+			end
+		end)
+	end
+	=

+	-- statics
+	if self.map3d_spawners and self.map3d_spawners.statics then
 		self.map3d_spawners.statics:ForAllBlocks(function(block)
-			-- statics
 			block:ForAllEntities(function(entity)
 				if (Renderer3D:IsZLayerVisible(entity.zloc)) then -- zloc is in intege=
r tilecoords from uo
 					if (entity.gfx and entity.gfx.billboard) then



From no-reply at zwischenwelt.org  Thu Aug 14 15:54:25 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 13:54:25 -0000
Subject: [Iris-commit] [IRIS] r2370 - in /trunk/lua: lib.keybinds.lua
 lib.mousepick.lua lib.static.lua
Message-ID: <20080814135425.A62071C18259@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 15:54:25 2008
New Revision: 2370

Log:
uo context menu on left single click

Modified:
    trunk/lua/lib.keybinds.lua
    trunk/lua/lib.mousepick.lua
    trunk/lua/lib.static.lua

Modified: trunk/lua/lib.keybinds.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.keybinds.lua (original)
+++ trunk/lua/lib.keybinds.lua Thu Aug 14 15:54:25 2008
@@ -54,11 +54,11 @@
 		RegisterListener("keydown",		function (key,char,bConsumed) if (not bCons=
umed) then gCurrentRenderer:CamKeyDown(key) end end)
 		RegisterListener("keyup",		function (key) gCurrentRenderer:CamKeyUp(key)=
 end)
 		=

-		RegisterListener("mouse_left_down",			function () IrisSingleClick() end)
-		RegisterListener("mouse_right_down",		function () IrisRightClick() end)
+		RegisterListener("mouse_left_click_single",	function () IrisSingleClick(=
) end)
+		RegisterListener("mouse_left_click_double",	function () IrisDoubleClick(=
) end)
+		RegisterListener("mouse_left_down",			function () IrisLeftClickDown() en=
d)
+		=

 		RegisterListener("mouse_left_up",			function () MouseUpUODragDrop() end)
-		=

-		RegisterListener("mouse_left_click_double",	function () IrisDoubleClick(=
) end)
 		RegisterListener("mouse_left_down",			function () MouseDownUODragDrop() =
end)
 	end
 end

Modified: trunk/lua/lib.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mousepick.lua (original)
+++ trunk/lua/lib.mousepick.lua Thu Aug 14 15:54:25 2008
@@ -51,37 +51,46 @@
 end
 =

 -- currently sent on mousedown
--- TODO : maybe only send on mouseup if no dragdrop took place ?
-function IrisSingleClick ()
+gbMouseLastLeftDownWasTarget =3D false	-- used to handle target on mouse d=
own but dont send context menu then
+function IrisLeftClickDown ()
+	gbMouseLastLeftDownWasTarget =3D false
 	if (gTestNoClick) then return end
 	if (IsTargetModeActive()) then =

 		CompleteTargetMode() -- see net/net.cursor.lua
-	else
+		gbMouseLastLeftDownWasTarget =3D true
+	end
+end
+
+function IrisSingleClick ()
+	if (gTestNoClick) then return end
+	if not gbMouseLastLeftDownWasTarget then =

 		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		gLastRightClickSerial =3D nil
 		if (iSerial and iSerial ~=3D 0) then =

-			printdebug("net",sprintf("IrisSingleClick: serial=3D0x%08x\n",iSerial))
-			Send_SingleClick(iSerial)
-			gCurrentRenderer:SelectMobile(iSerial)
-		else
-			-- TODO is this too removey?
-			-- gCurrentRenderer:DeselectMobile()
-			=

-			if gEnableGotoOnClick and not GetWidgetUnderMouse() then
-				local x,y =3D gCurrentRenderer:GetMouseHitTileCoords()
-				SetAutoWalkTo(x,y)
-			end
+			printdebug("net",sprintf("IrisRightClick: serial=3D0x%08x\n",iSerial))
+			Send_PopupRequest(iSerial) =

+			gLastRightClickSerial =3D iSerial
 		end
+
+		--~ local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		--~ if (iSerial and iSerial ~=3D 0) then =

+			--~ printdebug("net",sprintf("IrisSingleClick: serial=3D0x%08x\n",iSeri=
al))
+			--~ Send_SingleClick(iSerial)
+			--~ gCurrentRenderer:SelectMobile(iSerial)
+		--~ else
+			--~ -- TODO is this too removey?
+			--~ -- gCurrentRenderer:DeselectMobile()
+			--~ =

+			--~ if gEnableGotoOnClick and not GetWidgetUnderMouse() then
+				--~ local x,y =3D gCurrentRenderer:GetMouseHitTileCoords()
+				--~ SetAutoWalkTo(x,y)
+			--~ end
+		--~ end
 	end
 end
 =

 function IrisRightClick ()
-	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
-	gLastRightClickSerial =3D nil
-	if (iSerial and iSerial ~=3D 0) then =

-		printdebug("net",sprintf("IrisRightClick: serial=3D0x%08x\n",iSerial))
-		Send_PopupRequest(iSerial) =

-		gLastRightClickSerial =3D iSerial
-	end
+	=

 end
 =

 -- find mobile with the minimum distance to player (x,y 2d based)

Modified: trunk/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.static.lua (original)
+++ trunk/lua/lib.static.lua Thu Aug 14 15:54:25 2008
@@ -83,6 +83,12 @@
 			local img =3D CreateImage()
 			if gArtMapLoader:ExportToImage(img,iTranslatedTileTypeID + 0x4000) then
 				img:SaveAsFile(filename)
+				local o =3D GetStaticTileType(iTranslatedTileTypeID)
+				local f =3D io.open(filename..".txt","w")
+				if f then
+					f:write(vardump2(o))
+					f:close()
+				end
 			end
 			img:Destroy()
 		elseif (meshname or skip) then



From no-reply at zwischenwelt.org  Thu Aug 14 15:54:29 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 13:54:29 -0000
Subject: [Iris-commit] [IRIS] r2371 - in /trunk/lua: lib.3d.map.lua
 lib.mapblock.3d.statics.lua lib.mapblock.3d.terrain.lua
 lib.mapblock.3d.water.lua
Message-ID: <20080814135429.C65C11C18259@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 15:54:29 2008
New Revision: 2371

Log:
first water coast working

Modified:
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.mapblock.3d.statics.lua
    trunk/lua/lib.mapblock.3d.terrain.lua
    trunk/lua/lib.mapblock.3d.water.lua

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Thu Aug 14 15:54:29 2008
@@ -33,15 +33,16 @@
 dofile(libpath .. "lib.mapblock.aabb.lua")
 dofile(libpath .. "lib.mapblock.3d.statics.lua")
 dofile(libpath .. "lib.mapblock.3d.terrain.lua")
+dofile(libpath .. "lib.mapblock.3d.water.lua")
 dofile(libpath .. "lib.mapblock.3d.dynamics.lua")
 dofile(libpath .. "lib.mapblock.3d.multis.lua")
---~ dofile(libpath .. "lib.mapblock.3d.water.lua")
-cMapBlock_3D_Water		=3D CreateClass(cMapBlockGrid)
 =

 cMapBlock_3D_Terrain.kLOD_Detail		=3D kMapLoad_3D_Terrain_Detail
 cMapBlock_3D_Terrain.kLOD_Rough			=3D kMapLoad_3D_Terrain_Rough
 cMapBlock_3D_Statics.kLOD_Detail		=3D kMapLoad_3D_Statics_Detail
 cMapBlock_3D_Statics.kLOD_Rough			=3D kMapLoad_3D_Statics_Rough
+cMapBlock_3D_Water.kLOD_Detail			=3D kMapLoad_3D_Water_Detail
+cMapBlock_3D_Water.kLOD_Rough			=3D kMapLoad_3D_Water_Rough
 cMapBlock_3D_Multis.kLOD_Detail			=3D kMapLoad_3D_Multis_Detail
 cMapBlock_3D_Multis.kLOD_Rough			=3D kMapLoad_3D_Multis_Rough
 =

@@ -53,9 +54,9 @@
 		self.map3d_spawners =3D {}
 		self.map3d_spawners.terrain		=3D CreateMapBlockSpawner(cMapBlock_3D_Terr=
ain,scheduler)
 		self.map3d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_3D_Stat=
ics,scheduler)
+		self.map3d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_3D_Water,=
scheduler)
 		self.map3d_spawners.dynamics	=3D CreateDynamicSpawner(scheduler)
 		self.map3d_spawners.multis		=3D CreateMultiSpawner(scheduler)
-		--~ self.map3d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_3D_Wa=
ter,scheduler)
 	end
 end
 =


Modified: trunk/lua/lib.mapblock.3d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.statics.lua (original)
+++ trunk/lua/lib.mapblock.3d.statics.lua Thu Aug 14 15:54:29 2008
@@ -2,9 +2,9 @@
 =

 cMapBlock_3D_Statics	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Statics.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_3D_Statics.iLoadRadius	=3D 2*4 -- in iBlockSize-blocks
-cMapBlock_3D_Statics.kMaxDist_Visible		=3D 2*cMapBlock_3D_Statics.iBlockSi=
ze * 4 -- camdist in tiles  see mapblock.base for default
-cMapBlock_3D_Statics.kMaxDist_Detail		=3D 2*cMapBlock_3D_Statics.iBlockSiz=
e * 2 -- camdist in tiles
+cMapBlock_3D_Statics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
+cMapBlock_3D_Statics.kMaxDist_Visible		=3D cMapBlock_3D_Statics.iBlockSize=
 * 4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Statics.kMaxDist_Detail		=3D cMapBlock_3D_Statics.iBlockSize =
* 2 -- camdist in tiles
 =

 -- forall entities fun(entity)
 function cMapBlock_3D_Statics:ForAllEntities (fun)
@@ -34,7 +34,6 @@
 =

 	-- preload models
 	local iTileTypeID,iX,iY,iZ,iHue
-	local iStaticCount
 	local xloc,yloc
 =

 	local blocks =3D math.floor((self.iBlockSize-1) / 8)+1
@@ -46,7 +45,7 @@
 			for k,s in pairs(l) do =

 				iTileTypeID,iX,iY,iZ,iHue =3D s.artid, s.tx, s.ty, s.zloc, s.hue
 				=

-				if iTileTypeID and iX and iY and iZ then =

+				if not FilterIsStaticWater(iTileTypeID) and iTileTypeID and iX and iY =
and iZ then =

 					-- uo tile pos
 					local xloc,yloc =3D (iBlockUO_X+x)*8+iX,(iBlockUO_Y+y)*8+iY
 					if =


Modified: trunk/lua/lib.mapblock.3d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.3d.terrain.lua Thu Aug 14 15:54:29 2008
@@ -1,8 +1,8 @@
 cMapBlock_3D_Terrain	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Terrain.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_3D_Terrain.iLoadRadius	=3D 2*8 -- in iBlockSize-blocks
-cMapBlock_3D_Terrain.kMaxDist_Visible		=3D 2*cMapBlock_3D_Terrain.iBlockSi=
ze*4 -- camdist in tiles  see mapblock.base for default
-cMapBlock_3D_Terrain.kMaxDist_Detail		=3D 2*cMapBlock_3D_Terrain.iBlockSiz=
e*2 -- camdist in tiles
+cMapBlock_3D_Terrain.iLoadRadius	=3D 8 -- in iBlockSize-blocks
+cMapBlock_3D_Terrain.kMaxDist_Visible		=3D cMapBlock_3D_Terrain.iBlockSize=
*4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Terrain.kMaxDist_Detail		=3D cMapBlock_3D_Terrain.iBlockSize*=
2 -- camdist in tiles
 =

 function cMapBlock_3D_Terrain:ClearDetail ()
 	--~ print("cMapBlock_3D_Terrain:ClearDetail")

Modified: trunk/lua/lib.mapblock.3d.water.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.water.lua (original)
+++ trunk/lua/lib.mapblock.3d.water.lua Thu Aug 14 15:54:29 2008
@@ -1,1 +1,139 @@
 -- todo
+
+cMapBlock_3D_Water	=3D CreateClass(cMapBlockGrid)
+
+cMapBlock_3D_Water.iBlockSize		=3D 8*2 -- in tiles
+cMapBlock_3D_Water.iLoadRadius		=3D 4 -- in iBlockSize-blocks
+cMapBlock_3D_Water.kMaxDist_Visible		=3D cMapBlock_3D_Water.iBlockSize * 4=
 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Water.kMaxDist_Detail		=3D cMapBlock_3D_Water.iBlockSize * 2 =
-- camdist in tiles
+
+-- forall entities fun(entity)
+function cMapBlock_3D_Water:ForAllEntities (fun)
+	--~ if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
+end
+
+function cMapBlock_3D_Water:SetDisplayRange (fmin, fmax)
+	--~ if self.gfx and self.gfx:IsAlive() then self.gfx:FastBatch_SetDisplay=
Range(fmin,fmax) end
+end
+
+function cMapBlock_3D_Water:ClearDetail ()
+	self.mWaterZMap =3D {}
+	if self.gfx and self.gfx:IsAlive() then self.gfx:Destroy() end
+end
+
+function cMapBlock_3D_Water:SetWaterZWithoutBorder	(tx, ty, z)
+	if not self.mWaterZMap then self.mWaterZMap =3D {} end
+	=

+	Array2DSet(self.mWaterZMap, tx,ty, math.max(Array2DGet(self.mWaterZMap, t=
x,ty) or z, z))
+end
+
+function cMapBlock_3D_Water:SetWaterZ	(tx, ty, z)
+	--~ self:SetWaterZWithoutBorder(tx,ty,z)
+
+	-- set border of 1 tile
+	-- this is slow
+	self:SetWaterZWithoutBorder(tx+1,ty+0,z)
+	self:SetWaterZWithoutBorder(tx-1,ty+0,z)
+	self:SetWaterZWithoutBorder(tx+0,ty+1,z)
+	self:SetWaterZWithoutBorder(tx+0,ty-1,z)
+	=

+	self:SetWaterZWithoutBorder(tx+1,ty+1,z)
+	self:SetWaterZWithoutBorder(tx-1,ty-1,z)
+	self:SetWaterZWithoutBorder(tx+1,ty-1,z)
+	self:SetWaterZWithoutBorder(tx-1,ty+1,z)
+end
+
+function cMapBlock_3D_Water:WorkStep_LoadDetail ()
+	self.mWaterZMap =3D {}
+
+	--~ print("cMapBlock_3D_Water:WorkStep_LoadDetail",self.bx,self.by)
+	=

+	-- uo map block position
+	local iBlockUO_X =3D math.floor(self.bx * self.iBlockSize / 8)
+	local iBlockUO_Y =3D math.floor(self.by * self.iBlockSize / 8)
+
+	-- calculate water height
+	local iTileTypeID,iX,iY,iZ,iHue
+	local xloc,yloc
+
+	local blocks =3D math.floor((self.iBlockSize-1) / 8)+1
+
+	local basex,basey,w,h =3D self:GetAABB()
+
+	for x =3D 0,blocks-1 do
+		for y =3D 0,blocks-1 do
+			local l =3D MapGetBlockStatics(iBlockUO_X+x,iBlockUO_Y+y)
+
+			for k,s in pairs(l) do =

+				iTileTypeID,iX,iY,iZ,iHue =3D s.artid, s.tx, s.ty, s.zloc, s.hue
+				=

+				if iTileTypeID and FilterIsStaticWater(iTileTypeID) and iX and iY and =
iZ then =

+					-- uo tile pos
+					local xloc,yloc =3D (iBlockUO_X+x)*8+iX,(iBlockUO_Y+y)*8+iY
+					--~ print("DEBUG","water",x,y,basex,basey,xloc,yloc,iZ)
+					if =

+						xloc >=3D self.bx * self.iBlockSize and =

+						xloc < (self.bx+1) * self.iBlockSize and =

+						yloc >=3D self.by * self.iBlockSize and =

+						yloc < (self.by+1) * self.iBlockSize
+					then =

+						self:SetWaterZ(xloc-basex,yloc-basey,iZ)					=

+						self:YieldIfOverTime()
+					end
+				end
+			end =

+	end end
+	=

+	self:Yield()
+	=

+	-- WATER
+	--~ if gEnableMultiTexTerrain and (not gDisableMultiTexWater) then
+	local count =3D Array2DGetElementCount(self.mWaterZMap) -- might be slow
+	=

+	local tiles =3D self.iBlockSize
+	=

+	--~ print("DEBUG",count)
+	if (count and count > 0) then
+		=

+		-- create water
+		=

+		if not self.gfx or not self.gfx:IsAlive() then self.gfx =3D CreateRootGf=
x3D() end
+		=

+		local gfx =3D self.gfx
+		local vc =3D 4 * count
+		local ic =3D 6 * count
+		=

+		gfx:SetSimpleRenderable()
+		=

+		gfx:RenderableBegin(vc,ic,false,false,OT_TRIANGLE_LIST)
+		=

+		--~ print("DEBUG","WATERSTART",count,vc,ic)
+		local index =3D 0
+		local x,y,z
+
+		Array2DForAll(self.mWaterZMap, function(z, x,y)
+			z =3D z * 0.1
+
+			--~ print("DEBUG","water tile",x,y,z)
+
+			gfx:RenderableVertex(-x,y,z, 0,0,1, x/tiles, y/tiles)
+			gfx:RenderableVertex(-x-1,y,z, 0,0,1, (x+1)/tiles, y/tiles)
+			gfx:RenderableVertex(-x,y+1,z, 0,0,1, x/tiles, (y+1)/tiles)
+			gfx:RenderableVertex(-x-1,y+1,z, 0,0,1, (x+1)/tiles, (y+1)/tiles)
+			=

+			gfx:RenderableIndex3(index+0, index+2, index+1)
+			gfx:RenderableIndex3(index+1, index+2, index+3)
+			=

+			index =3D index + 4
+		end)
+
+		gfx:RenderableEnd()
+
+		gfx:SetMaterial("water")
+		gfx:SetCastShadows(false)
+		=

+		x,y,z =3D Renderer3D:UOPosToLocal(basex, basey, 0.1)
+
+		gfx:SetPosition(x, y, z)
+	end
+end



From no-reply at zwischenwelt.org  Thu Aug 14 15:54:34 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 13:54:34 -0000
Subject: [Iris-commit] [IRIS] r2372 - /trunk/lua/lib.mapblock.3d.water.lua
Message-ID: <20080814135434.4F9741C18259@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 15:54:33 2008
New Revision: 2372

Log:
water working

Modified:
    trunk/lua/lib.mapblock.3d.water.lua

Modified: trunk/lua/lib.mapblock.3d.water.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.water.lua (original)
+++ trunk/lua/lib.mapblock.3d.water.lua Thu Aug 14 15:54:33 2008
@@ -24,7 +24,14 @@
 function cMapBlock_3D_Water:SetWaterZWithoutBorder	(tx, ty, z)
 	if not self.mWaterZMap then self.mWaterZMap =3D {} end
 	=

-	Array2DSet(self.mWaterZMap, tx,ty, math.max(Array2DGet(self.mWaterZMap, t=
x,ty) or z, z))
+	if =

+		tx >=3D 0 and =

+		tx < self.iBlockSize and =

+		ty >=3D 0 and =

+		ty < self.iBlockSize
+	then =

+		Array2DSet(self.mWaterZMap, tx,ty, math.max(Array2DGet(self.mWaterZMap, =
tx,ty) or z, z))
+	end
 end
 =

 function cMapBlock_3D_Water:SetWaterZ	(tx, ty, z)
@@ -62,6 +69,7 @@
 =

 	for x =3D 0,blocks-1 do
 		for y =3D 0,blocks-1 do
+			-- check static block
 			local l =3D MapGetBlockStatics(iBlockUO_X+x,iBlockUO_Y+y)
 =

 			for k,s in pairs(l) do =

@@ -71,17 +79,24 @@
 					-- uo tile pos
 					local xloc,yloc =3D (iBlockUO_X+x)*8+iX,(iBlockUO_Y+y)*8+iY
 					--~ print("DEBUG","water",x,y,basex,basey,xloc,yloc,iZ)
-					if =

-						xloc >=3D self.bx * self.iBlockSize and =

-						xloc < (self.bx+1) * self.iBlockSize and =

-						yloc >=3D self.by * self.iBlockSize and =

-						yloc < (self.by+1) * self.iBlockSize
-					then =

-						self:SetWaterZ(xloc-basex,yloc-basey,iZ)					=

+					self:SetWaterZ(xloc-basex,yloc-basey,iZ)					=

+					self:YieldIfOverTime()
+				end
+			end =

+			=

+			-- check ground block
+			for lx =3D 0,7 do
+				for ly =3D 0,7 do
+					local tiletype,z =3D gGroundBlockLoader:GetTile(iBlockUO_X+x,iBlockUO=
_Y+y,lx,ly)
+					local xloc,yloc =3D (iBlockUO_X+x)*8+lx,(iBlockUO_Y+y)*8+ly
+					=

+					if tiletype and FilterIsMapWater(tiletype) then
+						self:SetWaterZ(xloc-basex,yloc-basey,z)					=

 						self:YieldIfOverTime()
 					end
 				end
-			end =

+			end
+			=

 	end end
 	=

 	self:Yield()



From no-reply at zwischenwelt.org  Thu Aug 14 15:54:39 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 13:54:39 -0000
Subject: [Iris-commit] [IRIS] r2373 - in /trunk:
 data/models/models/to_004000/mdl_003215.mesh
 data/models/models/to_004000/mdl_003216.mesh
 data/models/models/to_004000/mdl_003217.mesh
 data/models/models/to_004000/mdl_003512.mesh lua/filter/filter.art.lua
Message-ID: <20080814135439.323FC1C18259@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 15:54:38 2008
New Revision: 2373

Log:
improved hedge models

Added:
    trunk/data/models/models/to_004000/mdl_003217.mesh
    trunk/data/models/models/to_004000/mdl_003512.mesh
Removed:
    trunk/data/models/models/to_004000/mdl_003216.mesh
Modified:
    trunk/data/models/models/to_004000/mdl_003215.mesh
    trunk/lua/filter/filter.art.lua

Modified: trunk/data/models/models/to_004000/mdl_003215.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Thu Aug 14 15:54:38 2008
@@ -140,6 +140,11 @@
 gArtFilter[4655]=3D{maptoid=3D4650}
 =

 --Vegetation
+-- hedge
+gArtFilter[3218]=3D{maptoid=3D3217}
+gArtFilter[3216]=3D{maptoid=3D3215}
+gArtFilter[3513]=3D{maptoid=3D3512}
+
 -- grass
 gArtFilter[3244]=3D{maptoid=3D3253}
 gArtFilter[3245]=3D{maptoid=3D3253}



From no-reply at zwischenwelt.org  Thu Aug 14 16:15:50 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Aug 2008 14:15:50 -0000
Subject: [Iris-commit] [IRIS] r2376 - in /trunk/lua: lib.3d.multispawner.lua
 lib.mapblock.aabb.lua lib.mapblock.grid.lua
Message-ID: <20080814141550.573791C18606@zwischenwelt.org>

Author: hagish
Date: Thu Aug 14 16:15:50 2008
New Revision: 2376

Log:
forgot to add files

Added:
    trunk/lua/lib.3d.multispawner.lua
    trunk/lua/lib.mapblock.aabb.lua
    trunk/lua/lib.mapblock.grid.lua



From no-reply at zwischenwelt.org  Fri Aug 15 14:41:52 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 12:41:52 -0000
Subject: [Iris-commit] [IRIS] r2377 -
	/trunk/data/models/models/to_004000/mdl_003512.mesh
Message-ID: <20080815124152.A62161C18608@zwischenwelt.org>

Author: hagish
Date: Fri Aug 15 14:41:52 2008
New Revision: 2377

Log:
fixed mesh culling

Modified:
    trunk/data/models/models/to_004000/mdl_003512.mesh

Modified: trunk/data/models/models/to_004000/mdl_003512.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/models/to_004000/mdl_003512.mesh (original)
+++ trunk/data/models/models/to_004000/mdl_003512.mesh Fri Aug 15 14:41:52 =
2008
@@ -1,7 +1,7 @@
 =00=10[MeshSerializer_v1.40]
 =000t	=00=00=00=00 at 4=05=00=00tex_2
-=00$=00=00=00=00=02=00=01=00=00=00=05=00=04=00=03=00=08=00=07=00=06=00=0B=
=00
-=00	=00=0E=00
=00=0C=00=11=00=10=00=0F=00=14=00=13=00=12=00=17=00=16=00=15=00=1A=00=19=00=
=18=00=1D=00=1C=00=1B=00 =00=1F=00=1E=00#=00"=00!=00=00P=C3=90=04=00=00$=00=
=00=00=00Q6=00=00=00=10Q=10=00=00=00=00=00=02=00=01=00=00=00=00=00=10Q=10=
=00=00=00=00=00=02=00=04=00=0C=00=00=00=10Q=10=00=00=00=00=00=01=00=07=00=
=18=00=00=00=00R=C2=90=04=00=00=00=00 =00=10R=C2=86=04=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=
=00=C2=80?=00=00=00=00=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C?=
=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=
=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C=
?=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=
=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=
=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=C2=80?=00=00=
=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=
=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=C3=BA~=C3=
=8C?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=C2=80?=00=00=00=00=00=
=00=00=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=
=80=C2=BF=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=
=00=00=00=C3=BA~=C3=8C?=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=C3=BA~=C3=8C?=00=00=C2=80=C2=BF=
=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=C3=BA~=C3=8C?=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=
=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=
=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=00=00=C3=BA~=C3=8C?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=
=00=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=
=00=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=C3=BA~=C3=8C?=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=00=00=C2=80=
=C2=BF=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=C3=BA~=C3=8C?=00=
=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=C2=80?=00=00=00=
=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=
=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=
=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=
=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=00=C2=80?=
=00=00=00=00=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=
=00=00=C2=80=C2=BF=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=
=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=
=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=10@=08=00=00=00=04=00=00=C2=
=90"=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=C3=BA~=C3=8C?=C2=81=C2=8D=08@=00=C2=A0=06=00=00=00=00=C2=B00=04=00=00=00=
=C2=B1*=04=00=00=00=00=00=01=0C=00=00=00=01=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=01=00=00=00=02=00=00=00=00=00=00=00=01=00=00=00=02=00=00=00=
=00=00=00=00=C3=BA~=C3=8C?=00=00=00=C2=80=00=00=00=C2=80=00=00=00=00=00=00=
=00=00=03=00=00=00=04=00=00=00=05=00=00=00=03=00=00=00=00=00=00=00=02=00=00=
=00=00=00=00=00=C3=BA~=C3=8C?=00=00=00=C2=80=00=00=00=C2=80=00=00=00=00=00=
=00=00=00=06=00=00=00=07=00=00=00=08=00=00=00=04=00=00=00=05=00=00=00=06=00=
=00=00=00=00=00=00=C3=BA~=C3=8C=C2=BF=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=
=00=00=00=00	=00=00=00
+=00$=00=00=00=00=00=00=01=00=02=00=03=00=04=00=05=00=06=00=07=00=08=00	=00
+=00=0B=00=0C=00
=00=0E=00=0F=00=10=00=11=00=12=00=13=00=14=00=15=00=16=00=17=00=18=00=19=00=
=1A=00=1B=00=1C=00=1D=00=1E=00=1F=00 =00!=00"=00#=00=00P=C3=90=04=00=00$=00=
=00=00=00Q6=00=00=00=10Q=10=00=00=00=00=00=02=00=01=00=00=00=00=00=10Q=10=
=00=00=00=00=00=02=00=04=00=0C=00=00=00=10Q=10=00=00=00=00=00=01=00=07=00=
=18=00=00=00=00R=C2=90=04=00=00=00=00 =00=10R=C2=86=04=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=
=00=C2=80?=00=00=00=00=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C?=
=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=
=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C=
?=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=
=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=
=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=C2=80?=00=00=
=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=
=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=C3=BA~=C3=
=8C?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=C2=80?=00=00=00=00=00=
=00=00=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=
=80=C2=BF=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=
=00=00=00=C3=BA~=C3=8C?=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=C3=BA~=C3=8C?=00=00=C2=80=C2=BF=
=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=C3=BA~=C3=8C?=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=
=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=
=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=00=00=C3=BA~=C3=8C?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=
=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=
=00=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=
=00=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=C3=BA~=C3=8C?=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=00=00=C2=80=
=C2=BF=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=C3=BA~=C3=8C?=00=
=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=C2=80?=00=00=00=
=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=
=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=C3=BA~=C3=8C?=00=00=00=00=00=
=00=00=00=00=00=C2=80=C2=BF=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=
=80?=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=00=00=C2=80?=
=00=00=00=00=00=00=C2=80?=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=
=00=00=C2=80=C2=BF=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=
=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=
=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=00=00=00=00=
=00=00=00=00=00=00=C2=80?=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=
=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=C2=80?=00=00=00=00=00=00=C2=80?=10@=08=00=00=00=04=00=00=C2=
=90"=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=C2=80?=
=C3=BA~=C3=8C?=C2=81=C2=8D=08@=00=C2=A0=06=00=00=00=00=C2=B00=04=00=00=00=
=C2=B1*=04=00=00=00=00=00=01=0C=00=00=00=01=00=00=00=00=00=00=00=00=00=00=
=00=00=00=00=00=01=00=00=00=02=00=00=00=00=00=00=00=01=00=00=00=02=00=00=00=
=00=00=00=00=C3=BA~=C3=8C?=00=00=00=C2=80=00=00=00=C2=80=00=00=00=00=00=00=
=00=00=03=00=00=00=04=00=00=00=05=00=00=00=03=00=00=00=00=00=00=00=02=00=00=
=00=00=00=00=00=C3=BA~=C3=8C?=00=00=00=C2=80=00=00=00=C2=80=00=00=00=00=00=
=00=00=00=06=00=00=00=07=00=00=00=08=00=00=00=04=00=00=00=05=00=00=00=06=00=
=00=00=00=00=00=00=C3=BA~=C3=8C=C2=BF=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=
=00=00=00=00	=00=00=00
 =00=00=00=0B=00=00=00=06=00=00=00=07=00=00=00=04=00=00=00=00=00=00=00=C3=
=BA~=C3=8C=C2=BF=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=0C=00=00=
=00
=00=00=00=0E=00=00=00=03=00=00=00=02=00=00=00=07=00=00=00=C3=BA~=C3=8C=C2=
=BF=00=00=00=00=00=00=00=00=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=0F=00=00=
=00=10=00=00=00=11=00=00=00=07=00=00=00=06=00=00=00=03=00=00=00=C3=BA~=C3=
=8C=C2=BF=00=00=00=00=00=00=00=C2=80=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=
=12=00=00=00=13=00=00=00=14=00=00=00=01=00=00=00=00=00=00=00=05=00=00=00=C3=
=BA~=C3=8C?=00=00=00=C2=80=00=00=00=C2=80=00=00=00=C2=80=00=00=00=00=00=00=
=00=00=15=00=00=00=16=00=00=00=17=00=00=00=04=00=00=00=01=00=00=00=05=00=00=
=00=C3=BA~=C3=8C?=00=00=00=00=00=00=00=00=00=00=00=C2=80=00=00=00=00=00=00=
=00=00=18=00=00=00=19=00=00=00=1A=00=00=00=02=00=00=00=01=00=00=00=04=00=00=
=00=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=C3=BA~=C3=8C?=00=00=00=00=00=
=00=00=00=1B=00=00=00=1C=00=00=00=1D=00=00=00=04=00=00=00=07=00=00=00=02=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80=C2=BF=C3=BA~=C3=8C?=00=00=00=00=
=00=00=00=00=1E=00=00=00=1F=00=00=00 =00=00=00=00=00=00=00=03=00=00=00=06=
=00=00=00=00=00=00=C2=80=00=00=00=00=00=00=C2=80?=00=00=00=C2=80=00=00=00=
=00=00=00=00=00!=00=00=00"=00=00=00#=00=00=00=06=00=00=00=05=00=00=00=00=00=
=00=00=00=00=00=00=00=00=00=00=00=00=C2=80?=00=00=00=C2=80=10=C2=B1=C3=98=
=01=00=00=00=00=00=00=00=00=00=00=0C=00=00=00=12=00=00=00=00=00=00=00=06=00=
=00=00=00=00=00=00=01=00=00=00=00=00=00=00=01=00=00=00=00=00=00=00=00=08=00=
=00=00=01=00=00=00=02=00=00=00=01=00=00=00=02=00=00=00=00=00=00=00=00=01=00=
=00=00=02=00=00=00=00=00=00=00=02=00=00=00=00=00=00=00=00=01=00=00=00
 =00=00=00=03=00=00=00=04=00=00=00=03=00=00=00=00=00=00=00=00=01=00=00=00=
=04=00=00=00=05=00=00=00=03=00=00=00=02=00=00=00=03=00=00=00=00=02=00=00=00=
=07=00=00=00=06=00=00=00=07=00=00=00=04=00=00=00=05=00=00=00=00=02=00=00=00=
=0B=00=00=00=07=00=00=00=08=00=00=00=05=00=00=00=06=00=00=00=00=02=00=00=00=
=03=00=00=00=08=00=00=00=06=00=00=00=06=00=00=00=04=00=00=00=00=03=00=00=00=
=05=00=00=00	=00=00=00
 =00=00=00=06=00=00=00=07=00=00=00=00=03=00=00=00	=00=00=00



From no-reply at zwischenwelt.org  Fri Aug 15 15:10:50 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 13:10:50 -0000
Subject: [Iris-commit] [IRIS] r2381 - in /trunk/lua: lib.3d.map.lua
 lib.3d.renderer.lua lib.mapblock.3d.dynamics.lua lib.mapblock.3d.multis.lua
 lib.mapblock.3d.statics.lua lib.mapblock.3d.terrain.lua
Message-ID: <20080815131050.6EB221C18044@zwischenwelt.org>

Author: hagish
Date: Fri Aug 15 15:10:49 2008
New Revision: 2381

Log:
bugfix: sometimes blendout does not work

Modified:
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.mapblock.3d.dynamics.lua
    trunk/lua/lib.mapblock.3d.multis.lua
    trunk/lua/lib.mapblock.3d.statics.lua
    trunk/lua/lib.mapblock.3d.terrain.lua

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Fri Aug 15 15:10:49 2008
@@ -60,11 +60,21 @@
 	end
 end
 =

+function Renderer3D:BlendOutCheckNeeded		()
+	self.mbUpdateBlendOut =3D true
+end
+
 function Renderer3D:MapStep		()
 	local t =3D Client_GetTicks()
 	local xloc,yloc,zloc =3D self:GetCamPos()
 	for k,spawner in pairs(self.map3d_spawners) do spawner:Step(t,xloc,yloc,z=
loc) end
 	self.map3d_scheduler:Step(xloc,yloc,zloc)
+	=

+	-- redo blend out check?
+	if self.mbUpdateBlendOut then
+		self:BlendOutLayersAbovePlayer()
+		self.mbUpdateBlendOut =3D false
+	end
 end
 =

 function Renderer3D:MapClear	()
@@ -112,17 +122,12 @@
 		=

 		-- check statics
 		if (not playerIsInside) then
-			gStaticBlockLoader:Load(math.floor(x/8),math.floor(y/8)) -- params =3D =
mapblock-pos
-			local iStaticCount =3D gStaticBlockLoader:Count() -- operates on the bl=
ock that was last loaded using :Load()
-			local iPX =3D x - 8 * math.floor(x/8)
-			local iPY =3D y - 8 * math.floor(y/8)
-
-			local iTileTypeID,iX,iY,iZ,iHue
-			for i =3D 0,iStaticCount-1 do
-				iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- opera=
tes on the block that was last loaded using :Load()
-				if (iX =3D=3D iPX and iY =3D=3D iPY and iZ >=3D playerheadpos) then =

+			local l =3D MapGetStatics(x,y)
+			=

+			for k,v in pairs(l) do
+				if v.zloc >=3D playerheadpos then
 					playerIsInside =3D true =

-					if ((not zloc_roof) or (zloc_roof > iZ)) then zloc_roof =3D iZ end
+					if ((not zloc_roof) or (zloc_roof > v.zloc)) then zloc_roof =3D v.zlo=
c end
 				end
 			end
 		end

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Fri Aug 15 15:10:49 2008
@@ -733,5 +733,6 @@
 =

 function Renderer3D:UpdateLight	()
 	local f =3D math.max(self.mfSunLight or 0, self.mfPersonalLight or 0)
+	f =3D f / 1.2
 	Client_SetAmbientLight(f, f, f, 1)
 end

Modified: trunk/lua/lib.mapblock.3d.dynamics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.dynamics.lua (original)
+++ trunk/lua/lib.mapblock.3d.dynamics.lua Fri Aug 15 15:10:49 2008
@@ -120,5 +120,7 @@
 		self.mTileBatch:Build()
 		=

 		--~ print("count",self,countarr(self.lDynamics))
+
+		gCurrentRenderer:BlendOutCheckNeeded()
 	end
 end

Modified: trunk/lua/lib.mapblock.3d.multis.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.multis.lua (original)
+++ trunk/lua/lib.mapblock.3d.multis.lua Fri Aug 15 15:10:49 2008
@@ -82,4 +82,6 @@
 	end
 =

 	self.mTileBatch:Build()
+
+	gCurrentRenderer:BlendOutCheckNeeded()
 end

Modified: trunk/lua/lib.mapblock.3d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.statics.lua (original)
+++ trunk/lua/lib.mapblock.3d.statics.lua Fri Aug 15 15:10:49 2008
@@ -95,4 +95,6 @@
 	self:Yield()
 =

 	self.mTileBatch:Build()
+	=

+	gCurrentRenderer:BlendOutCheckNeeded()
 end

Modified: trunk/lua/lib.mapblock.3d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.3d.terrain.lua Fri Aug 15 15:10:49 2008
@@ -1,8 +1,8 @@
 cMapBlock_3D_Terrain	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Terrain.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_3D_Terrain.iLoadRadius	=3D 2*8 -- in iBlockSize-blocks
-cMapBlock_3D_Terrain.kMaxDist_Visible		=3D 2*cMapBlock_3D_Terrain.iBlockSi=
ze*4 -- camdist in tiles  see mapblock.base for default
-cMapBlock_3D_Terrain.kMaxDist_Detail		=3D 2*cMapBlock_3D_Terrain.iBlockSiz=
e*2 -- camdist in tiles
+cMapBlock_3D_Terrain.iLoadRadius	=3D 8 -- in iBlockSize-blocks
+cMapBlock_3D_Terrain.kMaxDist_Visible		=3D cMapBlock_3D_Terrain.iBlockSize=
*4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Terrain.kMaxDist_Detail		=3D cMapBlock_3D_Terrain.iBlockSize*=
2 -- camdist in tiles
 =

 function cMapBlock_3D_Terrain:ClearDetail ()
 	--~ print("cMapBlock_3D_Terrain:ClearDetail")



From no-reply at zwischenwelt.org  Fri Aug 15 23:14:48 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 21:14:48 -0000
Subject: [Iris-commit] [IRIS] r2384 - /trunk/data/config.lua.dist
Message-ID: <20080815211448.B5FBC1524030@zwischenwelt.org>

Author: sience
Date: Fri Aug 15 23:14:47 2008
New Revision: 2384

Log:
-forgot one option

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Fri Aug 15 23:14:47 2008
@@ -91,9 +91,6 @@
 gGrannyLoaderType					=3D "OnDemand" -- currently only OnDemand available
 gUniFontLoaderType					=3D "FullFile" -- currently only FullFile available
 gGenerateOldUnifontTextures			=3D false
-
--- sightrange is in blocks (8x8 tiles), larger values let you see further,=
 but will result in lower fps
---gSightRange	=3D 4
 =

 -- 0 Felucca, 1 Trammel, 2 Ilshenar, 3 Malas, 4 Tokuno
 gMapIndex =3D 0



From no-reply at zwischenwelt.org  Sat Aug 16 00:24:15 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 22:24:15 -0000
Subject: [Iris-commit] [IRIS] r2385 - in /trunk: data/config.lua.dist
 lua/lib.3d.mousepick.lua lua/lib.3d.renderer.lua
Message-ID: <20080815230019.9E89E1C185E1@zwischenwelt.org>

Author: sience
Date: Sat Aug 16 00:24:13 2008
New Revision: 2385

Log:
-fog adjusted
-personal lightlevel adjusted (normal value is back to 0.5)

Modified:
    trunk/data/config.lua.dist
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sat Aug 16 00:24:13 2008
@@ -125,9 +125,6 @@
 gUseMusic =3D true
 =

 gCurrentRenderer =3D Renderer3D	-- Renderer2D
-
--- setting this to true might speed up rendering but causes lags on mapblo=
ck-loading
-gbUseStaticGeometryForTerrain =3D false
 =

 =

 gStatsInfoFadeLineColor =3D {0,1,1,1}

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Sat Aug 16 00:24:13 2008
@@ -251,7 +251,7 @@
 				end
 			end
 	end end
-	]]
+	]]--
 	=

 	-- dynamics
 	for k,dynamic in pairs(GetDynamicList()) do

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sat Aug 16 00:24:13 2008
@@ -252,8 +252,9 @@
 		if (gUseDistanceFog) then =

 			gFogcolorred                    =3D gMaps[gMapIndex].fog_r =

 			gFogcolorgreen                  =3D gMaps[gMapIndex].fog_g =

-			gFogcolorblue                   =3D gMaps[gMapIndex].fog_b =

-			Client_SetFog(3, gFogcolorred/255, gFogcolorgreen/255, gFogcolorblue/25=
5, 1.0, 0, 80, 80+gFogValue) =

+			gFogcolorblue                   =3D gMaps[gMapIndex].fog_b
+			local radius =3D cMapBlock_3D_Terrain.iLoadRadius
+			Client_SetFog(3, gFogcolorred/255, gFogcolorgreen/255, gFogcolorblue/25=
5, 1.0, 0, 3*radius, 3*radius+gFogValue) =

 		end =

 	end
 end
@@ -270,7 +271,7 @@
 end
 =

 function Renderer3D:SetupShadows (strShadowTechnique)
-	local shadowfardist=3D12+gFogValue
+	local shadowfardist=3D5*cMapBlock_3D_Terrain.iLoadRadius+gFogValue
 =

 	if ((strShadowTechnique =3D=3D "stencil_modulative") or (strShadowTechniq=
ue =3D=3D "stencil_additive")) then
 		----- currently doesn't work with Fastbatch
@@ -733,6 +734,7 @@
 =

 function Renderer3D:UpdateLight	()
 	local f =3D math.max(self.mfSunLight or 0, self.mfPersonalLight or 0)
-	f =3D f / 1.2
+	f =3D f / 2
+	print(f)
 	Client_SetAmbientLight(f, f, f, 1)
 end



From no-reply at zwischenwelt.org  Fri Aug 15 14:42:01 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 12:42:01 -0000
Subject: [Iris-commit] [IRIS] r2380 - /trunk/data/config.lua.dist
Message-ID: <20080815124201.8A15F1C18608@zwischenwelt.org>

Author: hagish
Date: Fri Aug 15 14:42:01 2008
New Revision: 2380

Log:
*option to ignore light packets

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Fri Aug 15 14:42:01 2008
@@ -283,6 +283,7 @@
 gDebugCategories.effect		=3D false
 gDebugCategories.dragdrop	=3D false
 gDebugCategories.corpse		=3D false
+gDebugCategories.profile	=3D false
 =

 gLogPackets =3D false
 =

@@ -517,3 +518,7 @@
 gUseCaduneTree =3D false
 =

 gShow3DManaChanges =3D false
+
+-- if this is true the world is always day bright
+gIgnoreGlobalLightLevel =3D false
+



From no-reply at zwischenwelt.org  Fri Aug 15 14:41:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 12:41:55 -0000
Subject: [Iris-commit] [IRIS] r2378 - /trunk/lua/lib.debugmenu.lua
Message-ID: <20080815124155.8976B1C18608@zwischenwelt.org>

Author: hagish
Date: Fri Aug 15 14:41:55 2008
New Revision: 2378

Log:
added normal flipping button (via meshmagick) in debug menu

Modified:
    trunk/lua/lib.debugmenu.lua

Modified: trunk/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.debugmenu.lua (original)
+++ trunk/lua/lib.debugmenu.lua Fri Aug 15 14:41:55 2008
@@ -918,6 +918,22 @@
 	os.execute("rm '"..mdl.."'")	=

 end
 =

+function DebugFlipModel	(id)
+	print("###############################")
+	print("flip normals")
+	local base =3D id - math.mod(id,1000) + 1000
+	local relpath  =3D sprintf("models/to_%06d/",base)
+	local mdlname =3D GetModelName(id)
+	local mdl =3D datapath.."models/"..relpath..mdlname
+	=

+	if not file_exists(mdl) then
+		print("model file not found")
+		return
+	end
+	=

+	os.execute("meshmagick transform -flip-normals '"..mdl.."'")
+end
+
 function DebugExportModel	(id)
 	print("###############################")
 	print("export model and textures",artid,"to data/export")
@@ -1165,7 +1181,14 @@
 					DebugExportModel(gDebugMenuModelIndex)
 				end
 			}, =

-		}
+		},
+		{
+			{type=3D"Button",text=3D"Flip",onMouseDown=3Dfunction (widget)
+					DebugFlipModel(gDebugMenuModelIndex)
+					DebugMenuShowModel()
+				end
+			}, =

+		},
 	}	--end rows
 =

 --	local vw,vh =3D GetViewportSize()



From no-reply at zwischenwelt.org  Fri Aug 15 23:13:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 21:13:42 -0000
Subject: [Iris-commit] [IRIS] r2383 - in /trunk: bin/ data/ data/profiles/
	lua/
Message-ID: <20080815211342.9A8271524030@zwischenwelt.org>

Author: sience
Date: Fri Aug 15 23:13:41 2008
New Revision: 2383

Log:
-some obsolete options removed

Modified:
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist
    trunk/data/profiles/gfx_high.lua
    trunk/data/profiles/gfx_low.lua
    trunk/data/profiles/gfx_med.lua
    trunk/data/profiles/gfx_ultrahigh.lua
    trunk/data/profiles/gfx_ultralow.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.mapblock.3d.dynamics.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Fri Aug 15 23:13:41 2008
@@ -65,13 +65,6 @@
 	size =3D 15,
 	col =3D {1.0,1.0,1.0,1.0},
 }
---[[
-	gFontNameDefault	=3D "font_unifont0"
-	gFontSizeDefault	=3D 26
-	gFontChatSize		=3D 26
-	gFontGumpSize		=3D 26
-	gHudNamesFontSize	=3D 26
-]]--
 =

 -- GUI Styles : sience,iris,ray  (see lua\gui\gui.styles.lua)
 gGuiDefaultStyleSet =3D "sience"
@@ -100,7 +93,7 @@
 gGenerateOldUnifontTextures			=3D false
 =

 -- sightrange is in blocks (8x8 tiles), larger values let you see further,=
 but will result in lower fps
-gSightRange	=3D 4
+--gSightRange	=3D 4
 =

 -- 0 Felucca, 1 Trammel, 2 Ilshenar, 3 Malas, 4 Tokuno
 gMapIndex =3D 0
@@ -138,12 +131,6 @@
 =

 -- setting this to true might speed up rendering but causes lags on mapblo=
ck-loading
 gbUseStaticGeometryForTerrain =3D false
-
--- update the map not every frame, decrease for free-flight-videos
-Renderer3D.gMapUpdateInterval =3D 40
--- increase for free-flight-videos
-Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 1
-
 =

 =

 gStatsInfoFadeLineColor =3D {0,1,1,1}

Modified: trunk/data/profiles/gfx_high.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_high.lua (original)
+++ trunk/data/profiles/gfx_high.lua Fri Aug 15 23:13:41 2008
@@ -6,10 +6,3 @@
 gStaticsCastShadows =3D true
 gDynamicsCastShadows =3D true
 gMobileCastShadows =3D true
-
-gSightRange	=3D 6
-
--- update the map not every frame, decrease for free-flight-videos
-Renderer3D.gMapUpdateInterval =3D 30
--- increase for free-flight-videos
-Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 1

Modified: trunk/data/profiles/gfx_low.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_low.lua (original)
+++ trunk/data/profiles/gfx_low.lua Fri Aug 15 23:13:41 2008
@@ -9,8 +9,6 @@
 gDynamicsCastShadows =3D false
 gMobileCastShadows =3D false
 =

-gSightRange	=3D 2
-
 gGroundBlockLoaderType     =3D "OnDemand"
 =

 gUseStaticFallbacks =3D false

Modified: trunk/data/profiles/gfx_med.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_med.lua (original)
+++ trunk/data/profiles/gfx_med.lua Fri Aug 15 23:13:41 2008
@@ -7,5 +7,3 @@
 gStaticsCastShadows =3D false
 gDynamicsCastShadows =3D false
 gMobileCastShadows =3D false
-
-gSightRange	=3D 4

Modified: trunk/data/profiles/gfx_ultrahigh.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_ultrahigh.lua (original)
+++ trunk/data/profiles/gfx_ultrahigh.lua Fri Aug 15 23:13:41 2008
@@ -8,13 +8,6 @@
 gMobileCastShadows =3D true
 =

 gUseCaelumSkysystem =3D true
-
-gSightRange	=3D 8
-
--- update the map not every frame, decrease for free-flight-videos
-Renderer3D.gMapUpdateInterval =3D 20
--- increase for free-flight-videos
-Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 2
 =

 gArtMapLoaderType	=3D "FullFile"
 =


Modified: trunk/data/profiles/gfx_ultralow.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_ultralow.lua (original)
+++ trunk/data/profiles/gfx_ultralow.lua Fri Aug 15 23:13:41 2008
@@ -13,7 +13,6 @@
 =

 gEnableGrannyMaterials =3D false
 =

-gSightRange	=3D 1
 gParticleEffectSystem =3D false
 gLightsources =3D false
 =


Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Fri Aug 15 23:13:41 2008
@@ -218,6 +218,11 @@
 	return (not self.giBlendOutCurZ) or layerZ <=3D self.giBlendOutCurZ
 end
 =

+
+function Renderer3D:ClearMapCache () end
+
+
+--[[
 function Renderer3D:LayerToZ(zlayer)
 	--~ return zlayer * Renderer3D.giBlendOutPlayerHeight
 	return zlayer
@@ -233,5 +238,4 @@
 	--~ return math.floor(zloc / Renderer3D.giBlendOutPlayerHeight)
 	return math.floor(zloc)
 end
-
-function Renderer3D:ClearMapCache () end
+]]--

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Fri Aug 15 23:13:41 2008
@@ -253,7 +253,7 @@
 			gFogcolorred                    =3D gMaps[gMapIndex].fog_r =

 			gFogcolorgreen                  =3D gMaps[gMapIndex].fog_g =

 			gFogcolorblue                   =3D gMaps[gMapIndex].fog_b =

-			Client_SetFog(3, gFogcolorred/255, gFogcolorgreen/255, gFogcolorblue/25=
5, 1.0, 0, 10*gSightRange, 10*gSightRange+gFogValue) =

+			Client_SetFog(3, gFogcolorred/255, gFogcolorgreen/255, gFogcolorblue/25=
5, 1.0, 0, 80, 80+gFogValue) =

 		end =

 	end
 end
@@ -270,7 +270,7 @@
 end
 =

 function Renderer3D:SetupShadows (strShadowTechnique)
-	local shadowfardist=3D5*gSightRange+gFogValue
+	local shadowfardist=3D12+gFogValue
 =

 	if ((strShadowTechnique =3D=3D "stencil_modulative") or (strShadowTechniq=
ue =3D=3D "stencil_additive")) then
 		----- currently doesn't work with Fastbatch

Modified: trunk/lua/lib.mapblock.3d.dynamics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.dynamics.lua (original)
+++ trunk/lua/lib.mapblock.3d.dynamics.lua Fri Aug 15 23:13:41 2008
@@ -2,7 +2,7 @@
 =

 cMapBlock_3D_Dynamics	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Dynamics.iBlockSize		=3D 8 -- in tiles
-cMapBlock_3D_Dynamics.iLoadRadius	=3D 4 -- in iBlockSize-blocks
+cMapBlock_3D_Dynamics.iLoadRadius		=3D 4 -- in iBlockSize-blocks
 cMapBlock_3D_Dynamics.kMaxDist_Visible		=3D cMapBlock_3D_Dynamics.iBlockSi=
ze * 4 -- camdist in tiles  see mapblock.base for default
 cMapBlock_3D_Dynamics.kMaxDist_Detail		=3D cMapBlock_3D_Dynamics.iBlockSiz=
e * 2 -- camdist in tiles
 =




From no-reply at zwischenwelt.org  Fri Aug 15 14:41:58 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 12:41:58 -0000
Subject: [Iris-commit] [IRIS] r2379 - in /trunk/lua: ./ net/
Message-ID: <20080815124158.EE08C1C18608@zwischenwelt.org>

Author: hagish
Date: Fri Aug 15 14:41:58 2008
New Revision: 2379

Log:
*adjust ambient light depending on light packets
*its possible to display ground tiles as static tiles (patch)
*replaced gGroundBlockLoader:GetTile by cached MapGetGround

Modified:
    trunk/lua/lib.2d.renderer.lua
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.3d.tilebatch.lua
    trunk/lua/lib.compass.lua
    trunk/lua/lib.mapblock.3d.statics.lua
    trunk/lua/lib.mapblock.3d.terrain.lua
    trunk/lua/lib.mapblock.3d.water.lua
    trunk/lua/lib.mapblock.scheduler.lua
    trunk/lua/lib.uoutils.lua
    trunk/lua/lib.walking2.lua
    trunk/lua/main.lua
    trunk/lua/net/net.world.lua

Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Fri Aug 15 14:41:58 2008
@@ -62,7 +62,6 @@
 -- called from mainstep while ingame
 function Renderer2D:MainStep ()
 	self:CamStep()
-	self:MapStep()
 	self:MobileAnimStep()
 	-- TODO : self:CombatGuiStep() ?
 	-- TODO : self:MousePickStep() ?
@@ -96,6 +95,8 @@
 		local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[ke=
y_down] and 1 or 0))
 		if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end
 	end
+
+	self:MapStep()
 end
 =

  =

@@ -158,5 +159,7 @@
 function Renderer2D:TerrainRayIntersect_Hit		(...) end -- ??? might not be=
 needed
 =

 =

-
-
+-- sets the global sunlight level, intensity=3D0 -> dark, intensity=3D1 ->=
 bright
+function Renderer2D:SetSunLight		(intensity) end
+-- sets the personal light level, intensity=3D0 -> dark, intensity=3D1 -> =
bright
+function Renderer2D:SetPersonalLight		(mobile, intensity) end

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Fri Aug 15 14:41:58 2008
@@ -358,6 +358,21 @@
 	]]
 end
 =

+function Renderer3D:Multi_AddPartHelper	(multi, iTileTypeID,iX,iY,iZ,iHue)
+	table.insert(multi.lparts, {iTileTypeID,iX,iY,iZ,iHue})
+	=

+	-- calc aabb
+	multi.minx =3D math.min(multi.minx or iX, iX)
+	multi.maxx =3D math.max(multi.maxx or iX, iX)
+	multi.miny =3D math.min(multi.miny or iY, iY)
+	multi.maxy =3D math.max(multi.maxy or iY, iY)
+	=

+	-- setup fast access cache for walking
+	if (not multi.cache) then multi.cache =3D {} end
+	local myarr =3D multi.cache[iX..","..iY]
+	if (not myarr) then myarr =3D {} multi.cache[iX..","..iY] =3D myarr end
+	table.insert(myarr,{iZ=3DiZ,iTileTypeID=3DiTileTypeID,iHue=3DiHue})
+end
 =

 -- TODO: Multis & Serversidemultis don't recognize kTileDataFlag_LightSour=
ce yet
 function Renderer3D:CreateDynamicGfx( item )
@@ -427,10 +442,9 @@
 				iX =3D item.xloc + v.x + item.xadd
 				iY =3D item.yloc + v.y + item.yadd
 				iZ =3D item.zloc + v.z + item.zadd
-
+				=

 				-- add part
-				table.insert(multi.lparts, {iTileTypeID,iX,iY,iZ,iHue})
-				-- Renderer3D:RebuildChunkAtUOPos(iX,iY)
+				self:Multi_AddPartHelper(multi, iTileTypeID,iX,iY,iZ,iHue)
 			end
 =

 			item.multi =3D multi
@@ -468,12 +482,9 @@
 				-- skip invisible parts
 				if iFlags =3D=3D 1 then
 					-- add part
-					table.insert(multi.lparts, {iTileTypeID,iX,iY,iZ,iHue})
-					-- Renderer3D:RebuildChunkAtUOPos(iX,iY)
+					self:Multi_AddPartHelper(multi, iTileTypeID,iX,iY,iZ,iHue)
 				end
 			end
-			=

-			--print("DEBUG","minmax",multi.minx,multi.maxx,multi.miny,multi.maxy)
 			=

 			item.multi =3D multi
 			item.gfx =3D nil

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Fri Aug 15 14:41:58 2008
@@ -95,7 +95,6 @@
 	self:MobileAnimStep()
 	self:CamStep()
 	--~ self:UpdateMap()
-	self:MapStep()
 	self:MousePickStep()
 	=

 	-- b&w effect on death
@@ -116,6 +115,8 @@
 			end
 		end
 	end
+
+	self:MapStep()
 end
 =

 function Renderer3D:SetLastConfirmedUOPos(xloc,yloc,zloc) gTileFreeWalk:Im=
pl_SetLastConfirmedUOPos(xloc,yloc,zloc) end -- walk
@@ -716,3 +717,21 @@
 		entity.gfx:SetNormaliseNormals(true)
 	end
 end
+
+
+-- sets the global sunlight level, intensity=3D0 -> dark, intensity=3D1 ->=
 bright
+function Renderer3D:SetSunLight		(intensity) =

+	self.mfSunLight =3D intensity
+	self:UpdateLight()
+end
+
+-- sets the personal light level, intensity=3D0 -> dark, intensity=3D1 -> =
bright
+function Renderer3D:SetPersonalLight		(mobile, intensity) =

+	self.mfPersonalLight =3D intensity
+	self:UpdateLight()
+end
+
+function Renderer3D:UpdateLight	()
+	local f =3D math.max(self.mfSunLight or 0, self.mfPersonalLight or 0)
+	Client_SetAmbientLight(f, f, f, 1)
+end

Modified: trunk/lua/lib.3d.tilebatch.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.tilebatch.lua (original)
+++ trunk/lua/lib.3d.tilebatch.lua Fri Aug 15 14:41:58 2008
@@ -124,7 +124,11 @@
 =

 	gfx:FastBatch_Build()
 	gfx:SetCastShadows(gStaticsCastShadows)
-	gfx:FastBatch_SetDisplayRange(self.fmin or -100000, self.fmax or 100000)
+	=

+	-- update display range
+	if self.fmin and self.fmax then
+		gfx:FastBatch_SetDisplayRange(self.fmin, self.fmax)
+	end
 end
 =

 -- handles the entity precalc

Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Fri Aug 15 14:41:58 2008
@@ -189,7 +189,7 @@
 		gDetailMapCacheImage =3D CreateImage()
 	end
 	=

-	print("UpdateDetailMapCacheIfNeeded : updating....")
+	--~ print("UpdateDetailMapCacheIfNeeded : updating....")
 	=

 	-- update image
 	local bx0,dbx =3D math.floor((xloc-kDetailMapCacheSize/2)/8),kDetailMapCa=
cheSize/8
@@ -357,7 +357,7 @@
 			})
 	=

 	=

-	gMapImagePath_Small	=3D datapath.."tmp/compass_"..md5.."_small_s.tga"
+	gMapImagePath_Small	=3D datapath.."tmp/compass_"..md5.."_small_s.png"
 =

 	local mapfile_exists =3D file_exists(gMapImagePath_Small)
 	if (mapfile_exists) then

Modified: trunk/lua/lib.mapblock.3d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.statics.lua (original)
+++ trunk/lua/lib.mapblock.3d.statics.lua Fri Aug 15 14:41:58 2008
@@ -1,4 +1,17 @@
--- todo
+
+--[[
+	This table contains mappings from map tile types to
+	static tile types. This is used for floor tiles on the
+	map that have a uniform height.
+]]
+gMapToStaticTable =3D {
+	-- maps ground tile id to static tile id
+	[0x406] =3D 0x4a9, -- Wooden floor
+	[0x407] =3D 0x4aa, -- Wooden floor
+	[0x408] =3D 0x4ab, -- Wooden floor
+	[0x409] =3D 0x4ac, -- Wooden floor
+}
+
 =

 cMapBlock_3D_Statics	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Statics.iBlockSize		=3D 8*2 -- in tiles
@@ -42,6 +55,7 @@
 		for y =3D 0,blocks-1 do
 			local l =3D MapGetBlockStatics(iBlockUO_X+x,iBlockUO_Y+y)
 =

+			-- static tiles
 			for k,s in pairs(l) do =

 				iTileTypeID,iX,iY,iZ,iHue =3D s.artid, s.tx, s.ty, s.zloc, s.hue
 				=

@@ -59,6 +73,23 @@
 					end
 				end
 			end =

+			=

+			-- ground tiles
+			for lx =3D 0, 7 do
+				for ly =3D 0, 7 do
+					local bx,by =3D iBlockUO_X+x, iBlockUO_Y+y
+					local xloc =3D bx * 8 + lx
+					local yloc =3D by * 8 + ly
+					local o =3D MapGetGround(xloc,yloc)
+					local staticType =3D gMapToStaticTable[o.iTileType]
+
+					if staticType then
+						--~ print("Creating static tile @ ",xloc,yloc,o.zloc)
+						self.mTileBatch:AddTile(staticType,xloc,yloc,o.zloc,0)
+						self:YieldIfOverTime()
+					end
+				end =

+			end
 	end end
 	=

 	self:Yield()

Modified: trunk/lua/lib.mapblock.3d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.3d.terrain.lua Fri Aug 15 14:41:58 2008
@@ -1,8 +1,8 @@
 cMapBlock_3D_Terrain	=3D CreateClass(cMapBlockGrid)
 cMapBlock_3D_Terrain.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_3D_Terrain.iLoadRadius	=3D 8 -- in iBlockSize-blocks
-cMapBlock_3D_Terrain.kMaxDist_Visible		=3D cMapBlock_3D_Terrain.iBlockSize=
*4 -- camdist in tiles  see mapblock.base for default
-cMapBlock_3D_Terrain.kMaxDist_Detail		=3D cMapBlock_3D_Terrain.iBlockSize*=
2 -- camdist in tiles
+cMapBlock_3D_Terrain.iLoadRadius	=3D 2*8 -- in iBlockSize-blocks
+cMapBlock_3D_Terrain.kMaxDist_Visible		=3D 2*cMapBlock_3D_Terrain.iBlockSi=
ze*4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Terrain.kMaxDist_Detail		=3D 2*cMapBlock_3D_Terrain.iBlockSiz=
e*2 -- camdist in tiles
 =

 function cMapBlock_3D_Terrain:ClearDetail ()
 	--~ print("cMapBlock_3D_Terrain:ClearDetail")

Modified: trunk/lua/lib.mapblock.3d.water.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.water.lua (original)
+++ trunk/lua/lib.mapblock.3d.water.lua Fri Aug 15 14:41:58 2008
@@ -3,9 +3,9 @@
 cMapBlock_3D_Water	=3D CreateClass(cMapBlockGrid)
 =

 cMapBlock_3D_Water.iBlockSize		=3D 8*2 -- in tiles
-cMapBlock_3D_Water.iLoadRadius		=3D 4 -- in iBlockSize-blocks
-cMapBlock_3D_Water.kMaxDist_Visible		=3D cMapBlock_3D_Water.iBlockSize * 4=
 -- camdist in tiles  see mapblock.base for default
-cMapBlock_3D_Water.kMaxDist_Detail		=3D cMapBlock_3D_Water.iBlockSize * 2 =
-- camdist in tiles
+cMapBlock_3D_Water.iLoadRadius		=3D 2*4 -- in iBlockSize-blocks
+cMapBlock_3D_Water.kMaxDist_Visible		=3D 2*cMapBlock_3D_Water.iBlockSize *=
 4 -- camdist in tiles  see mapblock.base for default
+cMapBlock_3D_Water.kMaxDist_Detail		=3D 2*cMapBlock_3D_Water.iBlockSize * =
2 -- camdist in tiles
 =

 -- forall entities fun(entity)
 function cMapBlock_3D_Water:ForAllEntities (fun)
@@ -87,11 +87,11 @@
 			-- check ground block
 			for lx =3D 0,7 do
 				for ly =3D 0,7 do
-					local tiletype,z =3D gGroundBlockLoader:GetTile(iBlockUO_X+x,iBlockUO=
_Y+y,lx,ly)
 					local xloc,yloc =3D (iBlockUO_X+x)*8+lx,(iBlockUO_Y+y)*8+ly
+					local o =3D MapGetGround(xloc,yloc)
 					=

-					if tiletype and FilterIsMapWater(tiletype) then
-						self:SetWaterZ(xloc-basex,yloc-basey,z)					=

+					if o.iTileType and FilterIsMapWater(o.iTileType) then
+						self:SetWaterZ(xloc-basex,yloc-basey,o.zloc)					=

 						self:YieldIfOverTime()
 					end
 				end

Modified: trunk/lua/lib.mapblock.scheduler.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.scheduler.lua (original)
+++ trunk/lua/lib.mapblock.scheduler.lua Fri Aug 15 14:41:58 2008
@@ -48,10 +48,6 @@
 		--~ if (Client_GetTicks() >=3D t_end) then break end
 		if (t2 + t2 - t1 >=3D t_end) then break end
 	end
-	=

-	--~ if gfScheduler_WorkCount > 0 then
-		--~ print("avg work time",gfScheduler_WorkTime/gfScheduler_WorkCount)
-	--~ end
 end
 =

 -- true when the first is less than the second       (NOT less-equal)

Modified: trunk/lua/lib.uoutils.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoutils.lua (original)
+++ trunk/lua/lib.uoutils.lua Fri Aug 15 14:41:58 2008
@@ -12,7 +12,9 @@
 =

 -- returns tiletype,zloc
 function GetAbsTile (xloc,yloc) =

-	return gGroundBlockLoader:GetTile2(xloc,yloc)
+	--~ return gGroundBlockLoader:GetTile2(xloc,yloc)
+	local o =3D MapGetGround(xloc,yloc)
+	return o.iTileType, o.zloc
 end
 =

 function ApplyDir (dir,posx,posy) =


Modified: trunk/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking2.lua (original)
+++ trunk/lua/lib.walking2.lua Fri Aug 15 14:41:58 2008
@@ -7,18 +7,17 @@
 =

 		=

 function GetMultiPartsAtPos(multi,xloc,yloc) =

-	local mycache =3D multi.cache
-	if (not mycache) then
-		mycache =3D {}
-		multi.cache =3D mycache
-		for k,v in pairs(multi.lparts or {}) do
-			local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
-			local myarr =3D mycache[iX..","..iY]
-			if (not myarr) then myarr =3D {}   mycache[iX..","..iY] =3D myarr end
-			table.insert(myarr,{iZ=3DiZ,iTileTypeID=3DiTileTypeID,iHue=3DiHue})
-		end
-	end
-	return mycache[xloc..","..yloc] or {}
+	-- multi aabb box check
+	if =

+		(multi.minx and xloc < multi.minx) or
+		(multi.miny and yloc < multi.miny) or
+		(multi.maxx and xloc > multi.maxx) or
+		(multi.maxy and yloc > multi.maxy)
+	then =

+		return {} =

+	end
+
+	return multi.cache and multi.cache[xloc..","..yloc] or {}
 end
 		=

 		=

@@ -121,8 +120,7 @@
 	=

 	-- map
 	--~ printwalkdebug("---Map")
-	=

-	local iMapTileType =3D gGroundBlockLoader:GetTile(bx,by,tx,ty)
+	local iMapTileType =3D MapGetGround(bx*8+tx,by*8,ty).iTileType	-- gGround=
BlockLoader:GetTile(bx,by,tx,ty)
 	local iMapTileZ =3D tonumber(AverageGroundHeight( bx, by, tx, ty))
 =

 	--Seasonal Translation
@@ -144,55 +142,11 @@
 =

 	local iTileTypeID,iX,iY,iZ,iHue
 	=

-	local iStaticCount
-	if (gStaticBlockLoader and (bx ~=3D gStaticCacheBlockX or by ~=3D gStatic=
CacheBlockY) ) then
-		gStaticBlockLoader:Load(bx,by)
-		iStaticCount =3D gStaticBlockLoader:Count() -- operates on the block tha=
t was last loaded using :Load()
-
-		gStaticCache =3D {}
-		gStaticCacheBlockX =3D bx
-		gStaticCacheBlockY =3D by
-
-		gStaticCacheHits =3D 0
-
-		-- optimize block
-		for i =3D 0,iStaticCount-1 do
-			iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-			local l =3D Array2DGet(gStaticCache, iX,iY)
-			if not l then l =3D {} end
-			table.insert(l, {iTileTypeID,iX,iY,iZ,iHue})
-			Array2DSet(gStaticCache, iX,iY, l)
-		end
-	else
-		iStaticCount =3D 0
-	end
-	-- TODO : maybe include Seasonal translation for Statics also here!?
-	=

-	-- TODO very very very slow
-
-	if gStaticCache then
-		--print("OPTIMIZED STATIC START")
-		local l =3D Array2DGet(gStaticCache, tx,ty)
-		if l then
-			for k,v in pairs(l) do
-				iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
-				--print("X",iX,"Y",iY,"Z",iZ)
-				GetWalkingBlockFlagsHelper(iZ,iTileTypeID,flaglist)
-			end
-		end
-		gStaticCacheHits =3D gStaticCacheHits + 1
-		--print("OPTIMIZED STATIC END",gStaticCacheHits)
-	else
-		--print("STATIC START")
-		for i =3D 0,iStaticCount-1 do
-			iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-			--print("X",iX,"Y",iY,"Z",iZ)
-			if (iX =3D=3D tx and iY =3D=3D ty) then
-				--~ printwalkdebug("----new Static ID=3D" .. iTileTypeID)
-				GetWalkingBlockFlagsHelper(iZ,iTileTypeID,flaglist)
-			end
-		end
-		--print("STATIC END")
+	local l =3D MapGetBlockStatics(bx,by)
+	for k,s in pairs(l) do =

+		if s.tx =3D=3D tx and s.ty =3D=3D ty then
+			GetWalkingBlockFlagsHelper(s.zloc,s.artid,flaglist)
+		end
 	end
 =

 	local xloc=3Dbx*8+tx

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Fri Aug 15 14:41:58 2008
@@ -394,13 +394,21 @@
 	NotifyListener("Hook_MainStep") -- should called before physstep, so obje=
ct position changes affect the gfx correctly
 	=

 	NetStep()
+	SoundStep()
+
+	InputStep() -- generate mouse_left_drag_* and mouse_left_click_single eve=
nts =

+	GUIStep() -- generate mouse_enter, mouse_leave events (might adjust curso=
r -> before CursorStep)
+	ToolTipStep() -- needs mouse_enter, should be after GUIStep
+	CursorStep()
+
+	StepDebugMenu()
 =

 	if (gInGameStarted) then
-		gCurrentRenderer:MainStep()
 		StepUODragDrop()
 		UpdateCompass()
 		DisplayMemoryUsage(OgreMemoryUsage("all"))
 		PingStep()
+		gCurrentRenderer:MainStep()
 	else
 		StepMainMenu()
 	end
@@ -408,21 +416,13 @@
 	local gObjectUnderMouse =3D nil -- todo : mousepick every frame ?
 	SetToolTipSubject(GetWidgetUnderMouse() or gObjectUnderMouse)
 	=

-
-	StepDebugMenu()
-	=

 	NotifyListener("Hook_HUDStep") -- updates special hud elements dependant =
on object positions that don't have auto-tracking
 	=

-	InputStep() -- generate mouse_left_drag_* and mouse_left_click_single eve=
nts =

-	GUIStep() -- generate mouse_enter, mouse_leave events (might adjust curso=
r -> before CursorStep)
-	ToolTipStep() -- needs mouse_enter, should be after GUIStep
-	CursorStep()
-
 	NotifyListener("EveryFrame")
 	=

 	NotifyListener("Hook_PreRenderOneFrame")
+
 	Client_RenderOneFrame()
-	SoundStep()
 	Client_USleep(1) -- just 1 millisecond, but gives other processes a chanc=
e to do something
 end
 =


Modified: trunk/lua/net/net.world.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.world.lua (original)
+++ trunk/lua/net/net.world.lua Fri Aug 15 14:41:58 2008
@@ -17,6 +17,7 @@
 	end
 end
 =

+
 -- Personal light level
 function gPacketHandler.kPacket_Light_Change()
 	local input =3D GetRecvFIFO()
@@ -24,14 +25,32 @@
 	local creature_id =3D input:PopNetUint32()
 	local creature_light =3D input:PopNetUint8()
 	printdebug("net",sprintf("NET (todo): Light_Change id: %i creature_id: %i=
 creature_light: %i\n",id,creature_id,creature_light))
+	=

+	local f =3D gIgnoreGlobalLightLevel and 1 or (creature_light/0x1F)
+	=

+	local mobile =3D GetMobile(creature_id)
+	if mobile and gCurrentRenderer then
+		gCurrentRenderer:SetPersonalLight(mobile, f)
+	end
 end
 =

+
 -- Overall light level  - 0 is brightest (day), 9 is OSI night, max is 31 =
(black)
+--~ 0x00 - day
+--~ 0x09 - OSI night
+--~ 0x1F - Black
+--~ Max normal val =3D 0x1F
 function gPacketHandler.kPacket_Sunlight() -- ProtocolRecv_Globallight
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local sunlight =3D input:PopNetUint8()
 	printdebug("net",sprintf("NET (todo): Sunlight id: %i sunlight: %i\n",id,=
sunlight))
+
+	local f =3D gIgnoreGlobalLightLevel and 1 or (1 - (sunlight/0x1F))
+
+	if gCurrentRenderer then
+		gCurrentRenderer:SetSunLight(f)
+	end
 end
 =

 -- Submits Server GameTime to Client (4 bytes)



From no-reply at zwischenwelt.org  Fri Aug 15 15:49:00 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Aug 2008 13:49:00 -0000
Subject: [Iris-commit] [IRIS] r2382 - in /trunk/lua: lib.3d.map.lua
 lib.walking2.lua obj/obj.dynamic.lua obj/obj.main.lua
Message-ID: <20080815134900.6DA911C1801D@zwischenwelt.org>

Author: hagish
Date: Fri Aug 15 15:48:59 2008
New Revision: 2382

Log:
faster access to dynamics at a given x,y position

Modified:
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.walking2.lua
    trunk/lua/obj/obj.dynamic.lua
    trunk/lua/obj/obj.main.lua

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Fri Aug 15 15:48:59 2008
@@ -153,13 +153,11 @@
 		-- check dynamics to detect dynamic houseroofs and other stuff above the=
 head
 		if (not playerIsInside) then
 			local iZ
-			for k,dynamic in pairs(GetDynamicList()) do
-				if (DynamicIsInWorld(dynamic)) then
-					if (x =3D=3D dynamic.xloc and y =3D=3D dynamic.yloc and dynamic.zloc =
>=3D playerheadpos) then
-						playerIsInside =3D true
-						iZ =3D dynamic.zloc
-						if ((not zloc_roof) or (zloc_roof > iZ)) then zloc_roof =3D iZ end
-					end
+			for k,dynamic in pairs(GetDynamicsAtPosition(x,y)) do
+				if (dynamic.zloc >=3D playerheadpos) then
+					playerIsInside =3D true
+					iZ =3D dynamic.zloc
+					if ((not zloc_roof) or (zloc_roof > iZ)) then zloc_roof =3D iZ end
 				end
 			end
 		end

Modified: trunk/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking2.lua (original)
+++ trunk/lua/lib.walking2.lua Fri Aug 15 15:48:59 2008
@@ -140,18 +140,14 @@
 	-- statics
 	--~ printwalkdebug("---Statics")
 =

-	local iTileTypeID,iX,iY,iZ,iHue
-	=

-	local l =3D MapGetBlockStatics(bx,by)
-	for k,s in pairs(l) do =

-		if s.tx =3D=3D tx and s.ty =3D=3D ty then
-			GetWalkingBlockFlagsHelper(s.zloc,s.artid,flaglist)
-		end
-	end
-
 	local xloc=3Dbx*8+tx
 	local yloc=3Dby*8+ty
 	=

+	local l =3D MapGetStatics(xloc, yloc)
+	for k,s in pairs(l) do =

+		GetWalkingBlockFlagsHelper(s.zloc,s.artid,flaglist)
+	end
+
 	-- multis
 	--~ printwalkdebug("---Multis")
 	=

@@ -167,53 +163,9 @@
 	--~ printwalkdebug("---Dynamics")
 	=

 	if (not gTestIgnoreDynamicInWalk) then
-	for k,dynamic in pairs(GetDynamicList()) do
-		if(DynamicIsInWorld(dynamic) and dynamic.artid) then
-
-			-- is this a normal statictile or multi?
-			if (dynamic.artid >=3D gMulti_ID) then -- gMulti_ID + 100
-				--[[
-				=

-				skip this cause there is a gMultis list with all infos, we handle mult=
is using this list
-				=

-				if (dynamic.lTile) then
-					for k,v in pairs(dynamic.lTile) do
-						if ((dynamic.xloc+v.x) =3D=3D xloc and (dynamic.yloc+v.y) =3D=3D ylo=
c) then
-							--~ printwalkdebug("----new serverside multi tile ID=3D" .. v.artid)
-							GetWalkingBlockFlagsHelper(v.z,v.artid,flaglist)	-- todo flaglist
-						end
-					end
-				elseif gMultiLoader then
-				-- multi found, special collision handling
-					local id =3D dynamic.artid - gMulti_ID
-					local parts =3D gMultiLoader:CountMultiParts(id)
-					--~ printwalkdebug("---Dynamics multi id=3D" .. id .. " parts=3D" .. =
parts)
-					for p =3D 0, parts-1 do
-						local blocknum,x,y,z,flags
-						blocknum,x,y,z,flags =3D gMultiLoader:GetMultiParts(id,p)
-						=

-						local pxloc,pyloc,pzloc
-						pxloc =3D dynamic.xloc + x
-						pyloc =3D dynamic.yloc + y
-						pzloc =3D dynamic.zloc + z
-	=

-						if (flags =3D=3D 1 and pxloc =3D=3D xloc and pyloc =3D=3D yloc) then
-							--~ printwalkdebug("----new dynamic ID=3D" .. blocknum)
-							GetWalkingBlockFlagsHelper(pzloc,blocknum,flaglist)
-						end						=

-					end
-				else
-					--~ printwalkdebug("no Multi found")
-				end
-				]]--
-			else
-				--elseif(dynamic.artid < gMulti_ID + 100) then
-				-- no mulit just a normal tile
-				if (dynamic.xloc =3D=3D xloc and dynamic.yloc =3D=3D yloc) then
-					--~ printwalkdebug("----new dynamic ID=3D" .. dynamic.artid)
-					GetWalkingBlockFlagsHelper(dynamic.zloc,dynamic.artid,flaglist)
-				end
-			end
+	for k,dynamic in pairs(GetDynamicsAtPosition(xloc,yloc)) do
+		if (dynamic.artid < gMulti_ID) then
+			GetWalkingBlockFlagsHelper(dynamic.zloc,dynamic.artid,flaglist)
 		end
 	end
 	=


Modified: trunk/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.dynamic.lua (original)
+++ trunk/lua/obj/obj.dynamic.lua Fri Aug 15 15:48:59 2008
@@ -150,6 +150,8 @@
 		gCurrentRenderer:AddDynamicItem(self) -- create new gfx
 		gCurrentRenderer:UpdateDynamicItemPos(self)
 	end
+	=

+	DynamicUpdatePosCache(self)
 end
 =

 function gDynamicPrototype:UpdateContent () self:Update() end
@@ -171,6 +173,8 @@
 	end
 	=

 	gDynamics[self.serial] =3D nil
+	DynamicRemoveFromPosCache(self)
+	=

 	CleanupObject(self)
 end
 =


Modified: trunk/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.main.lua (original)
+++ trunk/lua/obj/obj.main.lua Fri Aug 15 15:48:59 2008
@@ -21,6 +21,54 @@
 =

 function GetDynamicList	() return gDynamics end
 function GetMobileList	() return gMobiles end
+
+
+--------------------------------------------------------------------------=
--------
+--------------------------------------------------------------------------=
--------
+gDynamicsInWorldByPosition =3D {}
+
+
+-- returns a list of dynamics at the given uo position (only dynamics that=
 are in the world)
+function GetDynamicsAtPosition	(xloc, yloc)
+	return gDynamicsInWorldByPosition[xloc.."_"..yloc] or {}
+end
+
+function DynamicRemoveFromPosCache	(dynamic)
+	if dynamic.poscache_x and dynamic.poscache_y then
+		local key =3D dynamic.poscache_x.."_"..dynamic.poscache_y
+		for k,v in pairs(gDynamicsInWorldByPosition[key]) do
+			if v =3D=3D dynamic then
+				gDynamicsInWorldByPosition[key][k] =3D nil
+				dynamic.poscache_x =3D nil
+				dynamic.poscache_y =3D nil
+				return
+			end
+		end
+	end
+end
+
+function DynamicAddToPosCache	(dynamic)
+	if not DynamicIsInWorld(dynamic) then return end
+
+	local key =3D dynamic.xloc.."_"..dynamic.yloc
+	if not gDynamicsInWorldByPosition[key] then
+		gDynamicsInWorldByPosition[key] =3D {}
+	end
+	=

+	table.insert(gDynamicsInWorldByPosition[key], dynamic)
+	dynamic.poscache_x =3D dynamic.xloc
+	dynamic.poscache_y =3D dynamic.yloc
+end
+
+function DynamicUpdatePosCache	(dynamic)
+	if dynamic.poscache_x =3D=3D dynamic.xloc and dynamic.poscache_y =3D=3D d=
ynamic.yloc then return end
+	=

+	DynamicRemoveFromPosCache(dynamic)
+	DynamicAddToPosCache(dynamic)
+end
+--------------------------------------------------------------------------=
--------
+--------------------------------------------------------------------------=
--------
+
 =

 function InitializeObject	(serial) =

 	local object =3D {serial=3Dserial} =




From no-reply at zwischenwelt.org  Mon Aug 18 17:39:48 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Aug 2008 15:39:48 -0000
Subject: [Iris-commit] [IRIS] r2386 - in /trunk/data/models/models:
 to_011000/mdl_010762.mesh to_011000/mdl_010763.mesh
 to_011000/mdl_010764.mesh to_012000/mdl_010762.mesh
 to_012000/mdl_010763.mesh to_012000/mdl_010764.mesh
Message-ID: <20080818153949.1C0C11524030@zwischenwelt.org>

Author: hagish
Date: Mon Aug 18 17:39:48 2008
New Revision: 2386

Log:
fixed culling

Removed:
    trunk/data/models/models/to_012000/mdl_010762.mesh
    trunk/data/models/models/to_012000/mdl_010763.mesh
    trunk/data/models/models/to_012000/mdl_010764.mesh
Modified:
    trunk/data/models/models/to_011000/mdl_010762.mesh
    trunk/data/models/models/to_011000/mdl_010763.mesh
    trunk/data/models/models/to_011000/mdl_010764.mesh

Modified: trunk/data/models/models/to_011000/mdl_010762.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/models/to_011000/mdl_010763.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/models/to_011000/mdl_010764.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Mon Aug 18 17:40:09 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Aug 2008 15:40:09 -0000
Subject: [Iris-commit] [IRIS] r2387 - in /trunk: data/
 data/models/materials/ data/terrain/materials/ data/terrain/programs/
 data/terrain/textures/ lua/ lua/filter/
Message-ID: <20080818154010.4C6231524030@zwischenwelt.org>

Author: hagish
Date: Mon Aug 18 17:40:09 2008
New Revision: 2387

Log:
water shader, you can activate it with "gUseWaterShader =3D true"

Added:
    trunk/data/terrain/programs/
    trunk/data/terrain/programs/Example_Fresnel.cg
    trunk/data/terrain/programs/Example_FresnelPS.asm
    trunk/data/terrain/textures/perlinvolume.dds
    trunk/data/terrain/textures/waves2.dds
Modified:
    trunk/data/config.lua.dist
    trunk/data/models/materials/textures.material
    trunk/data/terrain/materials/terrain.material
    trunk/lua/filter/filter.art.lua
    trunk/lua/filter/filter.map.lua
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.dynamicspawner.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.3d.tilebatch.lua
    trunk/lua/lib.debugmenu.lua
    trunk/lua/lib.mapblock.3d.dynamics.lua
    trunk/lua/lib.mapblock.3d.multis.lua
    trunk/lua/lib.mapblock.3d.statics.lua
    trunk/lua/lib.mapblock.3d.water.lua
    trunk/lua/lib.mapblock.base.lua
    trunk/lua/main.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Mon Aug 18 17:40:09 2008
@@ -503,3 +503,4 @@
 -- if this is true the world is always day bright
 gIgnoreGlobalLightLevel =3D false
 =

+gUseWaterShader =3D false

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Mon Aug 18 17:40:09 2008
@@ -19,9 +19,6 @@
 			//cull_hardware anticlockwise
 			//cull_software front
 			=

-			//cull_hardware none
-			//cull_software none
-
 			ambient vertexcolour
 			diffuse vertexcolour
 =

@@ -1507,170 +1504,62 @@
 =

 material tex_357 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_357.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_357.png =

 }
 =

 material tex_358 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_358.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_358.png =

 }
 =

 material tex_359 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_359.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_359.png =

 }
 =

 material tex_35 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_35.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_35.png =

 }
 =

 material tex_360 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_360.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_360.png =

 }
 =

 material tex_361 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_361.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_361.png
 }
 =

 material tex_362 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_362.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_362.png
 }
 =

 material tex_363 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_363.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_363.png
 }
 =

 material tex_364 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_364.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_364.png
 }
 =

 material tex_365 : tex_base_alpha =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_365.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_365.png
 }
 =

 material tex_366 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_366.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_366.png
 }
 =

 material tex_367 : tex_base =

 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_367.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_367.png
 }
 =

 material tex_368 : tex_base =

@@ -5677,16 +5566,7 @@
 =

 material tex_slidingdoor : tex_base
 { =

-	technique =

-	{ =

-		pass =

-		{		=

-			texture_unit =

-			{ =

-				texture tex_slidingdoor.png =

-			}	=

-		}
-	} =

+	set_texture_alias MainTexture tex_slidingdoor.png
 }
 =

 material tex_pylon : tex_base

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Mon Aug 18 17:40:09 2008
@@ -116,3 +116,158 @@
 		}
 	}
 }
+
+
+
+
+
+
+//----------------------------
+// Distortion effects from ogre samples
+//----------------------------
+
+vertex_program Water/FresnelRefractReflectVP cg
+{
+	source Example_Fresnel.cg
+	entry_point main_vp
+	profiles vs_1_1 arbvp1
+}
+vertex_program Water/FresnelRefractReflectVPold cg
+{
+	source Example_Fresnel.cg
+	entry_point main_vp_old
+	profiles vs_1_1 arbvp1
+}
+
+fragment_program Water/FresnelRefractReflectFP cg
+{
+	source Example_Fresnel.cg
+	entry_point main_fp
+	// sorry, ps_1_1 and fp20 can't do this
+	profiles ps_2_0 arbfp1
+}
+
+fragment_program Water/FresnelRefractReflectPS asm
+{
+	source Example_FresnelPS.asm
+	// sorry, only for ps_1_4 :)
+	syntax ps_1_4
+
+}
+
+material Water/FresnelReflectionRefraction
+{
+	receive_shadows off
+	=

+	// ps_2_0 / arbfp1
+	technique
+	{
+		pass =

+		{
+			=

+			vertex_program_ref Water/FresnelRefractReflectVP
+			{
+				param_named_auto worldViewProjMatrix worldviewproj_matrix
+				param_named_auto eyePosition camera_position_object_space
+				param_named_auto timeVal time 0.05
+				param_named scroll float 1  =

+				param_named scale float 1 =

+				param_named noise float 1 =

+				// scroll and noisePos will need updating per frame
+			}
+			fragment_program_ref Water/FresnelRefractReflectFP
+			{
+				param_named fresnelBias float -0.1 =

+				param_named fresnelScale float 1.8 =

+				param_named fresnelPower float 1  =

+				param_named tintColour float4 0.0 0.0 0.1 1
+				param_named noiseScale float 0.05 =

+			}
+			// Noise
+			texture_unit
+			{
+				// Perlin noise volume
+				texture waves2.dds
+				// min / mag filtering, no mip
+				filtering linear linear none
+			}
+			// Reflection
+			texture_unit
+			{
+				// Will be filled in at runtime
+				texture Reflection_
+				tex_address_mode clamp
+				// needed by ps.1.4
+				tex_coord_set 1
+			}
+			// Refraction
+			texture_unit
+			{
+				// Will be filled in at runtime
+				texture Refraction_
+				tex_address_mode clamp
+				// needed by ps.1.4
+				tex_coord_set 2
+			}
+		}
+		=

+			=

+	}
+
+	// ATI 8500 +
+	technique
+	{
+		pass
+		{
+			vertex_program_ref Water/FresnelRefractReflectVPold
+			{
+				param_named_auto worldViewProjMatrix worldviewproj_matrix
+				param_named_auto eyePosition camera_position_object_space
+				param_named fresnelBias float -0.3
+				param_named fresnelScale float 1.4
+				param_named fresnelPower float 8
+				param_named_auto timeVal time_0_1 20
+				param_named scroll float 1 =

+				param_named scale float 4 =

+				param_named noise float 1
+				// scroll and noisePos will need updating per frame
+			}
+
+			// for ATI RADEON 8500 - 9200
+			fragment_program_ref Water/FresnelRefractReflectPS
+			{
+				// distortionRange
+				param_indexed 0  float 0.025  =

+				// tintColour
+				param_indexed 1  float4 0.05 0.12 0.15 1
+			}
+
+			// Noise
+			texture_unit
+			{
+				// Perlin noise volume
+				texture perlinvolume.dds 3d
+				// min / mag filtering, no mip
+				filtering linear linear none
+			}
+			// Reflection
+			texture_unit
+			{
+				// Will be filled in at runtime
+				texture Reflection_
+				tex_address_mode clamp
+				// needed by ps.1.4
+				tex_coord_set 1
+			}
+			// Refraction
+			texture_unit
+			{
+				// Will be filled in at runtime
+				texture Refraction_
+				tex_address_mode clamp
+				// needed by ps.1.4
+				tex_coord_set 2
+			}
+		}
+	}    =

+}

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Mon Aug 18 17:40:09 2008
@@ -45,7 +45,7 @@
 	if (((iTileTypeID  >=3D  6038) and (iTileTypeID <=3D  6066)) or
 		((iTileTypeID  >=3D 13422) and (iTileTypeID <=3D 13445)) or
 		((iTileTypeID  >=3D 13460) and (iTileTypeID <=3D 13483)) or
-		((iTileTypeID  >=3D 13496) and (iTileTypeID <=3D 13514))) then
+		((iTileTypeID  >=3D 13493) and (iTileTypeID <=3D 13514))) then
 		return true
 	else
 		return false

Modified: trunk/lua/filter/filter.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.map.lua (original)
+++ trunk/lua/filter/filter.map.lua Mon Aug 18 17:40:09 2008
@@ -12,9 +12,15 @@
 =

 -- checks if the given tiletype is a water tile
 function FilterIsMapWater(iTileTypeID)
-	if (((iTileTypeID >=3D 76) and (iTileTypeID <=3D 112)) or
+	if 	=

+		((iTileTypeID >=3D 76) and (iTileTypeID <=3D 112)) or
 		((iTileTypeID >=3D 168) and (iTileTypeID <=3D 171)) or
-		((iTileTypeID >=3D 310) and (iTileTypeID <=3D 311))) then
+		((iTileTypeID >=3D 310) and (iTileTypeID <=3D 311)) or
+		((iTileTypeID >=3D 310) and (iTileTypeID <=3D 311)) or
+		((iTileTypeID >=3D 13567) and (iTileTypeID <=3D 13578)) or
+		((iTileTypeID >=3D 13597) and (iTileTypeID <=3D 13608)) or
+		false
+	then
 		return true
 	else
 		return false

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Mon Aug 18 17:40:09 2008
@@ -178,9 +178,13 @@
 =

 	self:RemoveDynamicFromMap(dynamic)
 =

-	-- add dynamic items to render blocks or queue for delayed add
+	-- add dynamic items to render blocks
 	if self.map3d_spawners and self.map3d_spawners.dynamics then =

 		self.map3d_spawners.dynamics:AddDynamic(dynamic)
+	end
+	-- add dynamic items to water blocks
+	if self.map3d_spawners and self.map3d_spawners.water then =

+		self.map3d_spawners.water:AddDynamic(dynamic)
 	end
 =

 	--~ -- block position
@@ -210,6 +214,9 @@
 	if self.map3d_spawners and self.map3d_spawners.dynamics then =

 		self.map3d_spawners.dynamics:RemoveDynamic(dynamic)
 	end
+	if self.map3d_spawners and self.map3d_spawners.water then =

+		self.map3d_spawners.water:RemoveDynamic(dynamic)
+	end
 	=

 	--~ Array2DForAll(Renderer3D.gFastBatchDynamicsMap, function(e,bx,by)
 		--~ -- remove dynamic if available

Modified: trunk/lua/lib.3d.dynamicspawner.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamicspawner.lua (original)
+++ trunk/lua/lib.3d.dynamicspawner.lua Mon Aug 18 17:40:09 2008
@@ -6,7 +6,7 @@
 function CreateDynamicSpawner (pScheduler) local o =3D CreateClassInstance=
(cDynamicSpawner, cMapBlock_3D_Dynamics,pScheduler) return o end
 =

 function cDynamicSpawner:GetBlockByUOLocation	(xloc,yloc)
-	local bx,by =3D math.floor(xloc/8), math.floor(yloc/8)
+	local bx,by =3D math.floor(xloc/self.iBlockSize), math.floor(yloc/self.iB=
lockSize)
 	return self:GetOrCreateMapBlock(bx,by)
 end
 =


Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Mon Aug 18 17:40:09 2008
@@ -54,7 +54,7 @@
 		self.map3d_spawners =3D {}
 		self.map3d_spawners.terrain		=3D CreateMapBlockSpawner(cMapBlock_3D_Terr=
ain,scheduler)
 		self.map3d_spawners.statics		=3D CreateMapBlockSpawner(cMapBlock_3D_Stat=
ics,scheduler)
-		self.map3d_spawners.water		=3D CreateMapBlockSpawner(cMapBlock_3D_Water,=
scheduler)
+		self.map3d_spawners.water		=3D CreateWaterSpawner(scheduler)
 		self.map3d_spawners.dynamics	=3D CreateDynamicSpawner(scheduler)
 		self.map3d_spawners.multis		=3D CreateMultiSpawner(scheduler)
 	end

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Mon Aug 18 17:40:09 2008
@@ -14,6 +14,7 @@
 dofile(libpath .. "lib.3d.tilebatch.lua")
 dofile(libpath .. "lib.3d.dynamicspawner.lua")
 dofile(libpath .. "lib.3d.multispawner.lua")
+dofile(libpath .. "lib.3d.waterspawner.lua")
 =

 gRendererList[ "Renderer3d" ] =3D Renderer3D
 =

@@ -735,6 +736,5 @@
 function Renderer3D:UpdateLight	()
 	local f =3D math.max(self.mfSunLight or 0, self.mfPersonalLight or 0)
 	f =3D f / 2
-	print(f)
 	Client_SetAmbientLight(f, f, f, 1)
 end

Modified: trunk/lua/lib.3d.tilebatch.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.tilebatch.lua (original)
+++ trunk/lua/lib.3d.tilebatch.lua Mon Aug 18 17:40:09 2008
@@ -17,12 +17,21 @@
 	self.mNextKey =3D 1
 end
 =

+function cTileBatch:GetDisplayRange ()
+	return self.fmin, self.fmax
+end
+
 function cTileBatch:SetDisplayRange (fmin, fmax)
+	fmin =3D fmin or -10000
+	fmax =3D fmax or 10000
+	=

 	self.fmin =3D fmin
 	self.fmax =3D fmax
+	=

 	if self.gfx_static and self.gfx_static:IsAlive() then
 		self.gfx_static:FastBatch_SetDisplayRange(fmin, fmax)
 	end
+	=

 	-- set billboard and other stuffs visibility
 	self:ForAllTiles(function(t)
 		if t.zloc then

Modified: trunk/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.debugmenu.lua (original)
+++ trunk/lua/lib.debugmenu.lua Mon Aug 18 17:40:09 2008
@@ -931,6 +931,7 @@
 		return
 	end
 	=

+	print("meshmagick transform -flip-normals '"..mdl.."'")
 	os.execute("meshmagick transform -flip-normals '"..mdl.."'")
 end
 =


Modified: trunk/lua/lib.mapblock.3d.dynamics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.dynamics.lua (original)
+++ trunk/lua/lib.mapblock.3d.dynamics.lua Mon Aug 18 17:40:09 2008
@@ -15,6 +15,10 @@
 -- forall entities fun(entity)
 function cMapBlock_3D_Dynamics:ForAllEntities (fun)
 	if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
+end
+
+function cMapBlock_3D_Dynamics:GetDisplayRange ()
+	if self.mTileBatch then return self.mTileBatch:GetDisplayRange() end
 end
 =

 function cMapBlock_3D_Dynamics:SetDisplayRange (fmin, fmax)
@@ -37,7 +41,7 @@
 =

 function cMapBlock_3D_Dynamics:AddDynamic (dynamic)
 	local iTileTypeID,xloc,yloc,iZ,iHue =3D self:GetRawDataFromDynamic(dynami=
c)
-	if iTileTypeID and xloc and yloc and iZ then
+	if iTileTypeID and xloc and yloc and iZ and not FilterIsStaticWater(iTile=
TypeID) then
 		--~ print("ADD",self,dynamic.serial)
 		self.mUpdateNeeded =3D true
 =


Modified: trunk/lua/lib.mapblock.3d.multis.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.multis.lua (original)
+++ trunk/lua/lib.mapblock.3d.multis.lua Mon Aug 18 17:40:09 2008
@@ -26,6 +26,10 @@
 -- forall entities fun(entity)
 function cMapBlock_3D_Multis:ForAllEntities (fun)
 	if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
+end
+
+function cMapBlock_3D_Multis:GetDisplayRange ()
+	if self.mTileBatch then return self.mTileBatch:GetDisplayRange() end
 end
 =

 function cMapBlock_3D_Multis:SetDisplayRange (fmin, fmax)

Modified: trunk/lua/lib.mapblock.3d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.statics.lua (original)
+++ trunk/lua/lib.mapblock.3d.statics.lua Mon Aug 18 17:40:09 2008
@@ -22,6 +22,10 @@
 -- forall entities fun(entity)
 function cMapBlock_3D_Statics:ForAllEntities (fun)
 	if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
+end
+
+function cMapBlock_3D_Statics:GetDisplayRange ()
+	if self.mTileBatch then return self.mTileBatch:GetDisplayRange() end
 end
 =

 function cMapBlock_3D_Statics:SetDisplayRange (fmin, fmax)

Modified: trunk/lua/lib.mapblock.3d.water.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.water.lua (original)
+++ trunk/lua/lib.mapblock.3d.water.lua Mon Aug 18 17:40:09 2008
@@ -7,18 +7,175 @@
 cMapBlock_3D_Water.kMaxDist_Visible		=3D 2*cMapBlock_3D_Water.iBlockSize *=
 4 -- camdist in tiles  see mapblock.base for default
 cMapBlock_3D_Water.kMaxDist_Detail		=3D 2*cMapBlock_3D_Water.iBlockSize * =
2 -- camdist in tiles
 =

+local gWaterShaderRunning =3D false
+
+local gMapBlockWaterZ =3D 0
+local gMapBlockWaterZSum =3D 0
+local gMapBlockWaterBlockCount =3D 0
+
+local gMapBlockWaterGfxList	=3D {}	-- contains all gfx refs to hide and sh=
ow all waters
+
+local function UpdateReflectionPlaneZ()
+	if gMapBlockWaterBlockCount > 0 then
+		gMapBlockWaterZ =3D gMapBlockWaterZSum / gMapBlockWaterBlockCount
+	end
+end
+
+-- blend out stuff ------------------------------------
+function WaterBlendOutBelowZ	(z)
+	for k,spawner in pairs(gCurrentRenderer.map3d_spawners) do
+		if spawner.ForAllBlocks then
+			spawner:ForAllBlocks(function(block)
+				if block.GetDisplayRange and block.SetDisplayRange then
+					block.water_cache_fmin, block.water_cache_fmax =3D block:GetDisplayRa=
nge()
+					block:SetDisplayRange(z,10000)
+				end
+			end)
+		end
+	end
+
+	--~ for k,mobile in pairs(GetMobileList()) do =

+		--~ if mobile.bar then =

+			--~ mobile.watercache_bar =3D mobile.bar:IsVisiblity()
+			--~ mobile.bar:SetVisible(false)
+		--~ end
+		--~ =

+		--~ if mobile.zloc < z then
+			--~ self:DestroyMobileGfx(mobile) =

+		--~ end
+	--~ end
+end
+
+function WaterBlendOutAboveZ	(z)
+	for k,spawner in pairs(gCurrentRenderer.map3d_spawners) do
+		if spawner.ForAllBlocks then
+			spawner:ForAllBlocks(function(block)
+				if block.GetDisplayRange and block.SetDisplayRange then
+					block.water_cache_fmin, block.water_cache_fmax =3D block:GetDisplayRa=
nge()
+					block:SetDisplayRange(-10000,z)
+				end
+			end)
+		end
+	end
+end
+
+function WaterRestoreBlendOut	()
+	for k,spawner in pairs(gCurrentRenderer.map3d_spawners) do
+		if spawner.ForAllBlocks then
+			spawner:ForAllBlocks(function(block)
+				if block.GetDisplayRange and block.SetDisplayRange then
+					block:SetDisplayRange(block.water_cache_fmin,block.water_cache_fmax)
+				end
+			end)
+		end
+	end
+end
+
+-- refraction -----------------------------------------
+local function WaterPreRenderRefraction	()
+	for k,v in pairs(gMapBlockWaterGfxList) do k:SetVisible(false) end
+	=

+	WaterBlendOutAboveZ(gMapBlockWaterZ)
+end
+
+local function WaterPostRenderRefraction	()
+	for k,v in pairs(gMapBlockWaterGfxList) do k:SetVisible(true) end
+
+	WaterRestoreBlendOut()
+end
+
+-- reflection -----------------------------------------
+local function WaterPreRenderReflection	()
+	local cam =3D GetMainCam()
+	gWaterReflectionCam:SetPos(cam:GetPos())
+	gWaterReflectionCam:SetRot(cam:GetRot())
+
+	for k,v in pairs(gMapBlockWaterGfxList) do k:SetVisible(false) end
+	=

+	WaterBlendOutBelowZ(gMapBlockWaterZ)
+	=

+	gWaterReflectionCam:EnableReflection(0,0,gMapBlockWaterZ, 0,0,1)
+end
+
+local function WaterPostRenderReflection	()
+	for k,v in pairs(gMapBlockWaterGfxList) do k:SetVisible(true) end
+	=

+	WaterRestoreBlendOut()
+
+	gWaterReflectionCam:DisableReflection()	=

+end
+
+-- setup ----------------------------------------------
+function WaterTeardownReflection	()
+	if gWaterShaderRunning then
+		-- TODO kill rtt stuff
+	end
+end
+
+function WaterSetupReflection	()
+	-- setup the rtt stuff
+	if not gWaterShaderRunning then
+		gWaterShaderRunning =3D true
+
+		local mat =3D "Water/FresnelReflectionRefraction"
+
+		local size =3D 512
+
+		local cam =3D GetMainCam()
+		=

+		=

+		gWaterReflectionCam =3D CreateCamera()
+		gWaterReflectionCam:SetNearClipDistance(cam:GetNearClipDistance())
+		gWaterReflectionCam:SetFarClipDistance(cam:GetFarClipDistance())
+		=

+		gWaterReflectionTex =3D CreateRenderTexture("Reflection", size, size, PF=
_R8G8B8)
+		--~ gWaterReflectionTex:SetAutoUpdated(true)
+		local vp =3D CreateRTTViewport(gWaterReflectionTex,gWaterReflectionCam)
+		vp:SetOverlaysEnabled(false)
+		SetTexture(mat,"Reflection",0,0,1)
+		gWaterReflectionTex:SetPrePostFunctions(WaterPreRenderReflection,WaterPo=
stRenderReflection)
+
+
+		gWaterRefractionTex =3D CreateRenderTexture("Refraction", size, size, PF=
_R8G8B8)
+		--~ gWaterRefractionTex:SetAutoUpdated(true)
+		local vp =3D CreateRTTViewport(gWaterRefractionTex,cam)
+		vp:SetOverlaysEnabled(false)
+		SetTexture(mat,"Refraction",0,0,2)
+		gWaterRefractionTex:SetPrePostFunctions(WaterPreRenderRefraction,WaterPo=
stRenderRefraction)
+	end
+end
+
+
+
+
+
 -- forall entities fun(entity)
 function cMapBlock_3D_Water:ForAllEntities (fun)
 	--~ if self.mTileBatch then self.mTileBatch:ForAllTiles(fun) end
 end
 =

+function cMapBlock_3D_Water:GetDisplayRange ()
+	--~ if self.mTileBatch then return self.mTileBatch:GetDisplayRange() end
+end
+
 function cMapBlock_3D_Water:SetDisplayRange (fmin, fmax)
 	--~ if self.gfx and self.gfx:IsAlive() then self.gfx:FastBatch_SetDisplay=
Range(fmin,fmax) end
 end
 =

 function cMapBlock_3D_Water:ClearDetail ()
 	self.mWaterZMap =3D {}
-	if self.gfx and self.gfx:IsAlive() then self.gfx:Destroy() end
+	if self.gfx and self.gfx:IsAlive() then =

+		gMapBlockWaterGfxList[self.gfx] =3D nil =

+		=

+		local x,y,z =3D self.gfx:GetPosition(x, y, z)
+		=

+		gMapBlockWaterZSum =3D gMapBlockWaterZSum - z
+		gMapBlockWaterBlockCount =3D gMapBlockWaterBlockCount - 1
+		=

+		UpdateReflectionPlaneZ()
+		=

+		self.gfx:Destroy() =

+	end
 end
 =

 function cMapBlock_3D_Water:SetWaterZWithoutBorder	(tx, ty, z)
@@ -30,6 +187,7 @@
 		ty >=3D 0 and =

 		ty < self.iBlockSize
 	then =

+		--~ print("SetWaterZ",self.bx,self.by, tx, ty, z)
 		Array2DSet(self.mWaterZMap, tx,ty, math.max(Array2DGet(self.mWaterZMap, =
tx,ty) or z, z))
 	end
 end
@@ -96,15 +254,22 @@
 					end
 				end
 			end
-			=

 	end end
 	=

-	self:Yield()
-	=

+	-- check dynamics
+	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
) then
+		if dynamic.artid and FilterIsStaticWater(dynamic.artid) then
+			self:SetWaterZ(dynamic.xloc-basex,dynamic.yloc-basey,dynamic.zloc)					=

+			self:YieldIfOverTime()
+		end
+	end end
+
 	-- WATER
 	--~ if gEnableMultiTexTerrain and (not gDisableMultiTexWater) then
 	local count =3D Array2DGetElementCount(self.mWaterZMap) -- might be slow
 	=

+	self:Yield()
+	=

 	local tiles =3D self.iBlockSize
 	=

 	--~ print("DEBUG",count)
@@ -130,11 +295,10 @@
 			z =3D z * 0.1
 =

 			--~ print("DEBUG","water tile",x,y,z)
-
-			gfx:RenderableVertex(-x,y,z, 0,0,1, x/tiles, y/tiles)
-			gfx:RenderableVertex(-x-1,y,z, 0,0,1, (x+1)/tiles, y/tiles)
-			gfx:RenderableVertex(-x,y+1,z, 0,0,1, x/tiles, (y+1)/tiles)
-			gfx:RenderableVertex(-x-1,y+1,z, 0,0,1, (x+1)/tiles, (y+1)/tiles)
+			gfx:RenderableVertex(-x,y,z, 0,0,1, (x)/tiles, y/tiles)
+			gfx:RenderableVertex(-x-1,y,z, 0,0,1, ((x+1))/tiles, y/tiles)
+			gfx:RenderableVertex(-x,y+1,z, 0,0,1, (x)/tiles, (y+1)/tiles)
+			gfx:RenderableVertex(-x-1,y+1,z, 0,0,1, ((x+1))/tiles, (y+1)/tiles)
 			=

 			gfx:RenderableIndex3(index+0, index+2, index+1)
 			gfx:RenderableIndex3(index+1, index+2, index+3)
@@ -144,11 +308,23 @@
 =

 		gfx:RenderableEnd()
 =

-		gfx:SetMaterial("water")
+		gMapBlockWaterGfxList[gfx] =3D true
+
 		gfx:SetCastShadows(false)
 		=

 		x,y,z =3D Renderer3D:UOPosToLocal(basex, basey, 0.1)
 =

-		gfx:SetPosition(x, y, z)
-	end
-end
+		gfx:SetPosition(x, y, z + 0.01)
+
+		gMapBlockWaterZSum =3D gMapBlockWaterZSum + z
+		gMapBlockWaterBlockCount =3D gMapBlockWaterBlockCount + 1
+		=

+		if gUseWaterShader then
+			gfx:SetMaterial("Water/FresnelReflectionRefraction")
+			WaterSetupReflection()
+			UpdateReflectionPlaneZ()
+		else
+			gfx:SetMaterial("water")
+		end
+	end
+end

Modified: trunk/lua/lib.mapblock.base.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.base.lua (original)
+++ trunk/lua/lib.mapblock.base.lua Mon Aug 18 17:40:09 2008
@@ -74,7 +74,7 @@
 	self.lod_finished =3D nil
 end
 =

--- manually sets the lod level, scheduler can overwrite this
+-- manually sets the lod level, scheduler can overwrite the lod level
 function cMapBlock:SetLOD (newlod)
 	if (newlod ~=3D self.lod) then =

 		self:SetPriority(newlod and newlod.prio or kSchedulerIdlePriority)

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Mon Aug 18 17:40:09 2008
@@ -199,6 +199,7 @@
 =

 	--~ # new Terrain Shaderengine
 	OgreAddResLoc(mydatapath.."terrain/materials"			,"FileSystem","General")
+	OgreAddResLoc(mydatapath.."terrain/programs"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."terrain/textures"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."terrain/multitex"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."terrain/multitex/parts"		,"FileSystem","Genera=
l")



From no-reply at zwischenwelt.org  Mon Aug 18 17:40:15 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Aug 2008 15:40:15 -0000
Subject: [Iris-commit] [IRIS] r2388 - /trunk/lua/lib.3d.waterspawner.lua
Message-ID: <20080818154015.64BA71524030@zwischenwelt.org>

Author: hagish
Date: Mon Aug 18 17:40:14 2008
New Revision: 2388

Log:
forgot to add file

Added:
    trunk/lua/lib.3d.waterspawner.lua



From no-reply at zwischenwelt.org  Tue Aug 19 00:48:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Aug 2008 22:48:55 -0000
Subject: [Iris-commit] [IRIS] r2389 - in /trunk: bin/iris2.exe
	data/config.lua.dist vc8/iris.vcproj
Message-ID: <20080818224855.A68341524030@zwischenwelt.org>

Author: sience
Date: Tue Aug 19 00:48:54 2008
New Revision: 2389

Log:
-new win32 binary
-header file added to vc8 project
-some obsolete options removed from config

Modified:
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist
    trunk/vc8/iris.vcproj

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Tue Aug 19 00:48:54 2008
@@ -456,10 +456,6 @@
 -- for debugging
 gDisableMultiTexWater =3D false
 =

--- additional lower quality terrain in the distance
-gEnableLowDetailTerrainFarSight =3D false
-gEnableLowDetailTerrainFarSightRangeAdd =3D 2
-
 -- Fastbatching of Statics/Dynamics (no hueing)
 gFastBatchStatics =3D true
 gFastBatchDynamics =3D true

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Tue Aug 19 00:48:54 2008
@@ -121,7 +121,7 @@
 				UseUnicodeResponseFiles=3D"false"
 				Optimization=3D"4"
 				InlineFunctionExpansion=3D"0"
-				EnableIntrinsicFunctions=3D"true"
+				EnableIntrinsicFunctions=3D"false"
 				FavorSizeOrSpeed=3D"1"
 				OmitFramePointers=3D"false"
 				EnableFiberSafeOptimizations=3D"true"
@@ -607,6 +607,10 @@
 					>
 				</File>
 				<File
+					RelativePath=3D"..\lugre\include\lugre_luacallback.h"
+					>
+				</File>
+				<File
 					RelativePath=3D"..\lugre\include\lugre_luaxml.h"
 					>
 				</File>



From no-reply at zwischenwelt.org  Tue Aug 19 14:43:11 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Aug 2008 12:43:11 -0000
Subject: [Iris-commit] [IRIS] r2390 - in /trunk:
 data/models/models/to_005000/mdl_004793.mesh
 data/models/models/to_011000/mdl_010662.mesh lua/filter/filter.art.lua
 lua/lib.devtool.lua
Message-ID: <20080819124311.E55141C18028@zwischenwelt.org>

Author: hagish
Date: Tue Aug 19 14:43:10 2008
New Revision: 2390

Log:
improved tree model and added stonewall with window

Added:
    trunk/data/models/models/to_011000/mdl_010662.mesh
Modified:
    trunk/data/models/models/to_005000/mdl_004793.mesh
    trunk/lua/filter/filter.art.lua
    trunk/lua/lib.devtool.lua

Modified: trunk/data/models/models/to_005000/mdl_004793.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Tue Aug 19 14:43:10 2008
@@ -116,6 +116,19 @@
 gArtFilter[10494]=3D{maptoid=3D10496,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
 gArtFilter[10498]=3D{maptoid=3D10496,rotation=3D"x:0,y:0,z:-180",xadd=3D-1=
,yadd=3D1,zadd=3D0}
 gArtFilter[10500]=3D{maptoid=3D10496,rotation=3D"x:0,y:0,z:-90",xadd=3D-1,=
yadd=3D0,zadd=3D0}
+
+
+-- stained glass windows brock wall stuff
+gArtFilter[10660]=3D{maptoid=3D10662}
+gArtFilter[10661]=3D{maptoid=3D10662}
+gArtFilter[10663]=3D{maptoid=3D10662}
+
+gArtFilter[10664]=3D{maptoid=3D10662,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
+gArtFilter[10665]=3D{maptoid=3D10662,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
+gArtFilter[10666]=3D{maptoid=3D10662,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
+gArtFilter[10667]=3D{maptoid=3D10662,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
+
+
 =

 -- sandstone
 gArtFilter[387]=3D{maptoid=3D386,rotation=3D"x:0,y:0,z:-90",xadd=3D1,yadd=
=3D0,zadd=3D0}

Modified: trunk/lua/lib.devtool.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.devtool.lua (original)
+++ trunk/lua/lib.devtool.lua Tue Aug 19 14:43:10 2008
@@ -194,7 +194,7 @@
 	end
 	=

 	-- update geometry
-	Renderer3D:RebuildMap()
+	-- Renderer3D:RebuildMap()
 	-- update dynamics
 	Renderer3D:RebuildAllDynamicsWithArtid(otherid)
 	Renderer3D:RebuildAllDynamicsWithArtid(dialog.tileid)



From no-reply at zwischenwelt.org  Tue Aug 19 14:43:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Aug 2008 12:43:14 -0000
Subject: [Iris-commit] [IRIS] r2391 - /trunk/lua/lib.walking2.lua
Message-ID: <20080819124314.7675A1C18028@zwischenwelt.org>

Author: hagish
Date: Tue Aug 19 14:43:14 2008
New Revision: 2391

Log:
bugfix: walking bug

Modified:
    trunk/lua/lib.walking2.lua

Modified: trunk/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking2.lua (original)
+++ trunk/lua/lib.walking2.lua Tue Aug 19 14:43:14 2008
@@ -74,7 +74,7 @@
 								)) then return end -- ghost can walk through doors
 						=

 		if ( not(t_isBridge) and not(t_isImpassable) and not(t_isSurface)  ) then
-			--~ printwalkdebug("----" .. t.msName .."  !impassable  !bridge  !surfa=
ceblocking")
+			-- printwalkdebug("----" .. t.msName .."  !impassable  !bridge  !surfac=
eblocking")
 		else
 			local iHeight =3D t.miHeight
 			if (t_isBridge) then iHeight =3D iHeight/2 + 0.5 end -- TODO : 2 is the=
 right value, but playerpos is to low
@@ -101,7 +101,7 @@
 				if (t_isBridge	) then myflaglist.bBridge =3D true end
 			end
 			=

-			--~ printwalkdebug("----" .. t.msName .."  z=3D" .. zloc .. "  height=
=3D" .. iHeight .. " bImpassable=3D" .. tostring(t_isImpassable) .. " bSurf=
ace=3D" .. tostring(isSurface(t.miFlags)) .. " isBridge=3D" .. tostring(isB=
ridge(t.miFlags)))
+			-- printwalkdebug("----" .. t.msName .."  z=3D" .. zloc .. "  height=3D=
" .. iHeight .. " bImpassable=3D" .. tostring(t_isImpassable) .. " bSurface=
=3D" .. tostring(isSurface(t.miFlags)) .. " isBridge=3D" .. tostring(isBrid=
ge(t.miFlags)))
 		end
 	end
 end
@@ -113,14 +113,14 @@
 -- returns an array of flags (impassable, surface, maptile)
 -- array might contain empty entries (meaning on the specific z level is n=
either something blocking nor a surface/maptile)
 function GetWalkingBlockFlags(bx, by, tx, ty)
-	--~ printwalkdebug("--GetWalkingBlockFlags() for bx=3D"..bx.."  by=3D"..b=
y.."  tx=3D"..tx.."  ty=3D"..ty.."  ("..(bx*8 + tx).."/"..(by*8+ty)..")") =

+	-- printwalkdebug("--GetWalkingBlockFlags() for bx=3D"..bx.."  by=3D"..by=
.."  tx=3D"..tx.."  ty=3D"..ty.."  ("..(bx*8 + tx).."/"..(by*8+ty)..")") =

 	=

 	if ( not(gTileTypeLoader) ) then return {} end
 	local flaglist =3D { }
 	=

 	-- map
-	--~ printwalkdebug("---Map")
-	local iMapTileType =3D MapGetGround(bx*8+tx,by*8,ty).iTileType	-- gGround=
BlockLoader:GetTile(bx,by,tx,ty)
+	-- printwalkdebug("---Map")
+	local iMapTileType =3D MapGetGround(bx*8+tx,by*8+ty).iTileType	-- gGround=
BlockLoader:GetTile(bx,by,tx,ty)
 	local iMapTileZ =3D tonumber(AverageGroundHeight( bx, by, tx, ty))
 =

 	--Seasonal Translation
@@ -128,18 +128,18 @@
 	local miFlags,miTexID,msName =3D gTileTypeLoader:GetGroundTileType(iTrans=
tile)
 	=

 	-- ignore NoDraw Tiles
-	if (iMapTileType ~=3D kHex02) then
+	if (iTranstile ~=3D kHex02) then
 		local myflaglist =3D { }
 		myflaglist.bSurface =3D true
 		myflaglist.bImpassable =3D isImpassable(miFlags)
 		myflaglist.bMaptile =3D true
 		flaglist[iMapTileZ] =3D myflaglist
-		--~ printwalkdebug("----Map Name=3D" .. msName .."  Heigt=3D" .. iMapTil=
eZ .."   bSurface=3Dtrue  bImpassable=3D" .. tostring(flaglist[iMapTileZ].b=
Impassable))
+		-- printwalkdebug("----Map Name=3D" .. msName .."  Heigt=3D" .. iMapTile=
Z .."   bSurface=3Dtrue  bImpassable=3D" .. tostring(flaglist[iMapTileZ].bI=
mpassable))
 	end
 	=

 	-- statics
-	--~ printwalkdebug("---Statics")
-
+	-- printwalkdebug("---Statics")
+ =

 	local xloc=3Dbx*8+tx
 	local yloc=3Dby*8+ty
 	=

@@ -147,9 +147,10 @@
 	for k,s in pairs(l) do =

 		GetWalkingBlockFlagsHelper(s.zloc,s.artid,flaglist)
 	end
+	=

 =

 	-- multis
-	--~ printwalkdebug("---Multis")
+	-- printwalkdebug("---Multis")
 	=

 	if (not gTestIgnoreMultisInWalk) then
 	for multi,v in pairs(gMultis) do
@@ -160,7 +161,7 @@
 	end
 =

 	-- dynamics
-	--~ printwalkdebug("---Dynamics")
+	-- printwalkdebug("---Dynamics")
 	=

 	if (not gTestIgnoreDynamicInWalk) then
 	for k,dynamic in pairs(GetDynamicsAtPosition(xloc,yloc)) do
@@ -171,7 +172,7 @@
 	=

 	end
 	=

-	--~ printwalkdebug("End GetWalkingBlockFlags()")
+	-- printwalkdebug("End GetWalkingBlockFlags()")
 	return flaglist
 end
 =

@@ -211,7 +212,7 @@
 function CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
 	local bDiagonal
 	local diagonalFlagList1, diagonalFlagList2
-	--~ printwalkdebug("------direction: "..iDir)
+	-- printwalkdebug("------direction: "..iDir)
 	if (iDir =3D=3D 1) then --northeast (right)
 		bDiagonal =3D true
 		if (tx =3D=3D 0) then
@@ -270,13 +271,13 @@
 	end
 			=

 	if (bDiagonal) then
-		--~ printwalkdebug("------walking diagonally")
+		-- printwalkdebug("------walking diagonally")
 				=

 		if (CheckZSpace(diagonalFlagList1, iStartZ, true) and CheckZSpace(diagon=
alFlagList2, iStartZ, true)) then
-			--~ printwalkdebug("-------no obstacles on adjacent coordinates")
+			-- printwalkdebug("-------no obstacles on adjacent coordinates")
 			return true
 		else
-			--~ printwalkdebug("-------adjacent tiles are not free to walk, blockin=
g")
+			-- printwalkdebug("-------adjacent tiles are not free to walk, blocking=
")
 			return false
 		end
 	else
@@ -309,25 +310,24 @@
 	--~ print("GetNearestGroundLevel_NoCache",xloc,yloc,iStartZ,iDir)
 	local bx,by,tx,ty =3D math.floor(xloc/8),math.floor(yloc/8),math.mod(xloc=
,8),math.mod(yloc,8)
 	local Walking_Start =3D Client_GetTicks()
-	--~ printwalkdebug("-------------------")
-	--~ printwalkdebug("GetNearestGroundLevel()")
+	-- printwalkdebug("-------------------")
+	-- printwalkdebug("GetNearestGroundLevel()")
 	=

 	if ( (tx >=3D 8) or (ty >=3D 8) or (tx < 0) or (ty < 0)) then return fals=
e, 255 end
 	if (not gGroundBlockLoader) then return false, 255 end
 =

-	--~ printwalkdebug("iStartZ=3D"..iStartZ)
+	-- printwalkdebug("iStartZ=3D"..iStartZ)
 	=

 	local flaglist =3D GetWalkingBlockFlags(bx, by, tx, ty)
 	=

-	--~ printwalkdebug("--------------------")
-	--~ printwalkdebug("List output:")
-	--~ for index, value in pairs(flaglist) do
-		--~ printwalkdebug("z=3D" .. index .. "   bSurface=3D" .. tostring(flagl=
ist[index].bSurface) .. "  bImpassable=3D" .. tostring(flaglist[index].bImp=
assable).. "  bBridge=3D" .. tostring(flaglist[index].bBridge))
-	--~ end
-
-	--~ printwalkdebug("--------------------")
-	=

-	=

+	-- printwalkdebug("--------------------")
+	-- printwalkdebug("List output:")
+	for index, value in pairs(flaglist) do
+		-- printwalkdebug("z=3D" .. index .. ": "..vardump2(value))
+		--~ -- printwalkdebug("z=3D" .. index .. "   bSurface=3D" .. tostring(fl=
aglist[index].bSurface) .. "  bImpassable=3D" .. tostring(flaglist[index].b=
Impassable).. "  bBridge=3D" .. tostring(flaglist[index].bBridge))
+	end
+	-- printwalkdebug("--------------------")
+		=

 	-- find closest surface (z + 0, -1, +1, -2, +2 etc)
 	-- check for maxfall and maxclimb
 	-- if surface is maptile +5 climbing bonus
@@ -339,18 +339,18 @@
 		myflaglist =3D flaglist[iCur]
 =

 		if (i ~=3D 0 and myflaglist ~=3D nil) then
-			--~ printwalkdebug("-----iCur=3D" .. iCur)
+			-- printwalkdebug("-----iCur=3D" .. iCur)
 			if (i < gMaxZ_Climb or (i < (gMaxZ_Climb + 5) and (myflaglist.bMaptile =
or myflaglist.bBridge))) then
 				if ((not myflaglist.bImpassable) and myflaglist.bSurface) then
-					--~ printwalkdebug("------found Surface");
+					-- printwalkdebug("------found Surface");
 					if (CheckZSpace(flaglist, iCur)) then
-						--~ printwalkdebug("------checkSpace successful")
+						-- printwalkdebug("------checkSpace successful")
 						=

 						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
 						=

-						--~ printwalkdebug("End GetNearestGroundLevel()")
-						--~ printwalkdebug("----------------------------")
-						--~ printwalkdebug()
+						-- printwalkdebug("End GetNearestGroundLevel()")
+						-- printwalkdebug("----------------------------")
+						-- printwalkdebug()
 						--~ printdebug("walking",sprintf( "Walking calculations took %d msec=
.\n", Client_GetTicks() - Walking_Start ))
 						if (bAdjacent) then
 							return true, iCur
@@ -364,23 +364,23 @@
 =

 		iCur =3D iStartZ - i
 		if (flaglist[iCur] ~=3D nil) then
-			--~ printwalkdebug("-----iCur=3D" .. iCur)
+			-- printwalkdebug("-----iCur=3D" .. iCur)
 			if (i < gMaxZ_Fall) then
 				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
-					--~ printwalkdebug("------found Surface");
+					-- printwalkdebug("------found Surface");
 					if (CheckZSpace(flaglist, iCur)) then
 -- SiENcE
 --					if (CheckZSpace(flaglist, iCur,false,gMaxZ_Fall)) then
-						--~ printwalkdebug("------ checkSpace successful")
+						-- printwalkdebug("------ checkSpace successful")
 						=

 						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
 						=

-						--~ printwalkdebug("End GetNearestGroundLevel()")
-						--~ printwalkdebug("----------------------------")
-						--~ printwalkdebug()
+						-- printwalkdebug("End GetNearestGroundLevel()")
+						-- printwalkdebug("----------------------------")
+						-- printwalkdebug()
 						--~ printdebug("walking",sprintf( "Walking calculations took %d msec=
.\n", Client_GetTicks() - Walking_Start ))
 						if (bAdjacent) then
-							--~ printwalkdebug("walking",sprintf( "return true, %d\n",iCur))
+							-- printwalkdebug("walking",sprintf( "return true, %d\n",iCur))
 							return true, iCur
 						else
 							return false, 255
@@ -392,9 +392,9 @@
 	end
 	=

 	-- if there was no space to walk through found, return false
-	--~ printwalkdebug("End GetNearestGroundLevel()")
-	--~ printwalkdebug("returning false")
-	--~ printwalkdebug("----------------------------")
+	-- printwalkdebug("End GetNearestGroundLevel()")
+	-- printwalkdebug("returning false")
+	-- printwalkdebug("----------------------------")
 	=

 	--~ printdebug("walking",sprintf( "Walking calculations took %d msec.\n",=
 Client_GetTicks() - Walking_Start ))
 	return false, 255 =




From no-reply at zwischenwelt.org  Tue Aug 19 14:43:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Aug 2008 12:43:16 -0000
Subject: [Iris-commit] [IRIS] r2392 - in /trunk:
 data/models/models/to_004000/ data/models/models/to_010000/
 data/models/models/to_014000/ lua/filter/
Message-ID: <20080819124316.D68141C18028@zwischenwelt.org>

Author: hagish
Date: Tue Aug 19 14:43:16 2008
New Revision: 2392

Log:
added some more models

Added:
    trunk/data/models/models/to_004000/mdl_001801.mesh
    trunk/data/models/models/to_010000/mdl_009532.mesh
    trunk/data/models/models/to_014000/mdl_013940.mesh
    trunk/data/models/models/to_014000/mdl_013942.mesh
    trunk/data/models/models/to_014000/mdl_013943.mesh
Modified:
    trunk/lua/filter/filter.art.lua

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Tue Aug 19 14:43:16 2008
@@ -129,6 +129,21 @@
 gArtFilter[10667]=3D{maptoid=3D10662,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
 =

 =

+gArtFilter[13941]=3D{maptoid=3D13940,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
+
+
+gArtFilter[9533]=3D{maptoid=3D9532}
+gArtFilter[9534]=3D{maptoid=3D9532}
+
+gArtFilter[9940]=3D{maptoid=3D9532,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D1,zadd=3D0}
+gArtFilter[9941]=3D{maptoid=3D9532,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D1,zadd=3D0}
+gArtFilter[9942]=3D{maptoid=3D9532,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D1,zadd=3D0}
+
+gArtFilter[8661]=3D{maptoid=3D167}
+gArtFilter[8662]=3D{maptoid=3D167}
+
+gArtFilter[8663]=3D{maptoid=3D167,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D2,zadd=3D0}
+gArtFilter[8664]=3D{maptoid=3D167,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D2,zadd=3D0}
 =

 -- sandstone
 gArtFilter[387]=3D{maptoid=3D386,rotation=3D"x:0,y:0,z:-90",xadd=3D1,yadd=
=3D0,zadd=3D0}



From no-reply at zwischenwelt.org  Tue Aug 19 14:43:19 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Aug 2008 12:43:19 -0000
Subject: [Iris-commit] [IRIS] r2393 - in /trunk: data/config.lua.dist
 lua/lib.3d.mobile.lua lua/lib.mapblock.3d.water.lua
Message-ID: <20080819124319.4C60F1C18650@zwischenwelt.org>

Author: hagish
Date: Tue Aug 19 14:43:18 2008
New Revision: 2393

Log:
its possible to disable the health bars above the mobiles

Modified:
    trunk/data/config.lua.dist
    trunk/lua/lib.3d.mobile.lua
    trunk/lua/lib.mapblock.3d.water.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Tue Aug 19 14:43:18 2008
@@ -500,3 +500,5 @@
 gIgnoreGlobalLightLevel =3D false
 =

 gUseWaterShader =3D false
+
+gShowHealthBarOverEveryMobile =3D false

Modified: trunk/lua/lib.3d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mobile.lua (original)
+++ trunk/lua/lib.3d.mobile.lua Tue Aug 19 14:43:18 2008
@@ -96,7 +96,7 @@
 	end
 	=

 	-- mobile health bar
-	if (not mobile.bar) then
+	if (gShowHealthBarOverEveryMobile and not mobile.bar) then
 		mobile.bar =3D CreateRootGfx3D()
 		mobile.bar:SetSimpleRenderable()
 		mobile.bar:SetMaterial("mobile/3d_healthbar")
@@ -105,7 +105,7 @@
 	end
 =

 	-- update mobile bar color
-	if (mobile and mobile.stats and mobile.stats.curHits and =

+	if (gShowHealthBarOverEveryMobile and mobile and mobile.stats and mobile.=
stats.curHits and =

 		mobile.bar.lastn ~=3D mobile.stats.curHits) then
 =

 		-- store current as last value

Modified: trunk/lua/lib.mapblock.3d.water.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.water.lua (original)
+++ trunk/lua/lib.mapblock.3d.water.lua Tue Aug 19 14:43:18 2008
@@ -314,7 +314,7 @@
 		=

 		x,y,z =3D Renderer3D:UOPosToLocal(basex, basey, 0.1)
 =

-		gfx:SetPosition(x, y, z + 0.01)
+		gfx:SetPosition(x, y, z)
 =

 		gMapBlockWaterZSum =3D gMapBlockWaterZSum + z
 		gMapBlockWaterBlockCount =3D gMapBlockWaterBlockCount + 1



From no-reply at zwischenwelt.org  Thu Aug 21 07:16:52 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 21 Aug 2008 05:16:52 -0000
Subject: [Iris-commit] [IRIS] r2394 - in /trunk: data/models/atlas/
 data/models/materials/ data/models/models/to_003000/
 data/models/models/to_007000/ data/models/models/to_012000/
 data/models/textures/ lua/filter/
Message-ID: <20080821060006.C11A01C18016@zwischenwelt.org>

Author: hagish
Date: Thu Aug 21 07:16:51 2008
New Revision: 2394

Log:
added missing models

Added:
    trunk/data/models/models/to_007000/mdl_006792.mesh
    trunk/data/models/models/to_012000/mdl_011745.mesh
    trunk/data/models/models/to_012000/mdl_011755.mesh
    trunk/data/models/textures/tex_big_elven_chair.png
    trunk/data/models/textures/tex_elphlen_ear_plant.png
    trunk/data/models/textures/tex_elven_table.png
    trunk/data/models/textures/tex_orccart.png
Modified:
    trunk/data/models/atlas/tex_atlas_low.lua
    trunk/data/models/atlas/tex_atlas_low0.dds
    trunk/data/models/atlas/tex_atlas_low0.png
    trunk/data/models/atlas/tex_atlas_low1.dds
    trunk/data/models/atlas/tex_atlas_low1.png
    trunk/data/models/atlas/tex_atlas_med.lua
    trunk/data/models/atlas/tex_atlas_med1.dds
    trunk/data/models/atlas/tex_atlas_med1.png
    trunk/data/models/atlas/tex_atlas_med2.dds
    trunk/data/models/atlas/tex_atlas_med2.png
    trunk/data/models/atlas/tex_atlas_med3.dds
    trunk/data/models/atlas/tex_atlas_med3.png
    trunk/data/models/atlas/tex_atlas_ultralow.lua
    trunk/data/models/atlas/tex_atlas_ultralow0.dds
    trunk/data/models/atlas/tex_atlas_ultralow0.png
    trunk/data/models/materials/textures.material
    trunk/data/models/models/to_003000/mdl_002885.mesh
    trunk/lua/filter/filter.art.lua

Modified: trunk/data/models/atlas/tex_atlas_low.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_low.lua (original)
+++ trunk/data/models/atlas/tex_atlas_low.lua Thu Aug 21 07:16:51 2008
@@ -209,228 +209,232 @@
 TexAtlas_RegisterMatTransform('tex_462', 'tex_atlas_low0', 0.53515625,0.91=
796875,0.56640625,0.98046875)
 TexAtlas_RegisterMatTransform('tex_238', 'tex_atlas_low0', 0.57421875,0.91=
796875,0.63671875,0.98046875)
 TexAtlas_RegisterMatTransform('tex_208', 'tex_atlas_low0', 0.64453125,0.91=
796875,0.70703125,0.98046875)
-TexAtlas_RegisterMatTransform('tex_342', 'tex_atlas_low0', 0.71484375,0.91=
796875,0.77734375,0.98046875)
-TexAtlas_RegisterMatTransform('tex_22', 'tex_atlas_low0', 0.78515625,0.917=
96875,0.84765625,0.98046875)
-TexAtlas_RegisterMatTransform('tex_339', 'tex_atlas_low0', 0.85546875,0.91=
796875,0.91796875,0.98046875)
-TexAtlas_RegisterMatTransform('tex_225', 'tex_atlas_low0', 0.92578125,0.91=
796875,0.98828125,0.98046875)
-TexAtlas_RegisterMatTransform('tex_271', 'tex_atlas_low1', 0.00390625,0.01=
171875,0.06640625,0.07421875)
-TexAtlas_RegisterMatTransform('tex_190', 'tex_atlas_low1', 0.07421875,0.01=
171875,0.13671875,0.07421875)
-TexAtlas_RegisterMatTransform('tex_234', 'tex_atlas_low1', 0.14453125,0.01=
171875,0.20703125,0.07421875)
-TexAtlas_RegisterMatTransform('tex_315', 'tex_atlas_low1', 0.21484375,0.01=
171875,0.27734375,0.07421875)
-TexAtlas_RegisterMatTransform('tex_279', 'tex_atlas_low1', 0.28515625,0.01=
171875,0.34765625,0.07421875)
-TexAtlas_RegisterMatTransform('tex_458', 'tex_atlas_low1', 0.35546875,0.01=
171875,0.38671875,0.07421875)
-TexAtlas_RegisterMatTransform('tex_539', 'tex_atlas_low1', 0.39453125,0.01=
171875,0.45703125,0.07421875)
-TexAtlas_RegisterMatTransform('tex_343', 'tex_atlas_low1', 0.46484375,0.01=
171875,0.52734375,0.07421875)
-TexAtlas_RegisterMatTransform('tex_319', 'tex_atlas_low1', 0.53515625,0.01=
171875,0.59765625,0.07421875)
-TexAtlas_RegisterMatTransform('tex_217', 'tex_atlas_low1', 0.60546875,0.01=
171875,0.66796875,0.07421875)
-TexAtlas_RegisterMatTransform('tex_459', 'tex_atlas_low1', 0.67578125,0.01=
171875,0.73828125,0.07421875)
-TexAtlas_RegisterMatTransform('tex_188', 'tex_atlas_low1', 0.74609375,0.01=
171875,0.80859375,0.07421875)
-TexAtlas_RegisterMatTransform('tex_100', 'tex_atlas_low1', 0.81640625,0.01=
171875,0.84765625,0.07421875)
-TexAtlas_RegisterMatTransform('tex_71', 'tex_atlas_low1', 0.85546875,0.011=
71875,0.88671875,0.07421875)
-TexAtlas_RegisterMatTransform('tex_6', 'tex_atlas_low1', 0.89453125,0.0117=
1875,0.95703125,0.07421875)
-TexAtlas_RegisterMatTransform('tex_312', 'tex_atlas_low1', 0.00390625,0.08=
203125,0.06640625,0.14453125)
-TexAtlas_RegisterMatTransform('tex_412', 'tex_atlas_low1', 0.07421875,0.08=
203125,0.13671875,0.14453125)
-TexAtlas_RegisterMatTransform('tex_330', 'tex_atlas_low1', 0.14453125,0.08=
203125,0.20703125,0.14453125)
-TexAtlas_RegisterMatTransform('tex_56', 'tex_atlas_low1', 0.21484375,0.082=
03125,0.24609375,0.14453125)
-TexAtlas_RegisterMatTransform('tex_277', 'tex_atlas_low1', 0.25390625,0.08=
203125,0.31640625,0.14453125)
-TexAtlas_RegisterMatTransform('tex_390', 'tex_atlas_low1', 0.32421875,0.08=
203125,0.38671875,0.14453125)
-TexAtlas_RegisterMatTransform('tex_42', 'tex_atlas_low1', 0.39453125,0.082=
03125,0.42578125,0.14453125)
-TexAtlas_RegisterMatTransform('tex_344', 'tex_atlas_low1', 0.43359375,0.08=
203125,0.49609375,0.14453125)
-TexAtlas_RegisterMatTransform('tex_321', 'tex_atlas_low1', 0.50390625,0.08=
203125,0.56640625,0.14453125)
-TexAtlas_RegisterMatTransform('tex_flowers2', 'tex_atlas_low1', 0.57421875=
,0.08203125,0.63671875,0.14453125)
-TexAtlas_RegisterMatTransform('tex_567', 'tex_atlas_low1', 0.64453125,0.08=
203125,0.67578125,0.14453125)
-TexAtlas_RegisterMatTransform('tex_373', 'tex_atlas_low1', 0.68359375,0.08=
203125,0.69921875,0.14453125)
-TexAtlas_RegisterMatTransform('tex_518', 'tex_atlas_low1', 0.70703125,0.08=
203125,0.76953125,0.14453125)
-TexAtlas_RegisterMatTransform('tex_278', 'tex_atlas_low1', 0.77734375,0.08=
203125,0.83984375,0.14453125)
-TexAtlas_RegisterMatTransform('tex_308', 'tex_atlas_low1', 0.84765625,0.08=
203125,0.91015625,0.14453125)
-TexAtlas_RegisterMatTransform('tex_538', 'tex_atlas_low1', 0.91796875,0.08=
203125,0.98046875,0.14453125)
-TexAtlas_RegisterMatTransform('tex_sattel', 'tex_atlas_low1', 0.00390625,0=
.15234375,0.06640625,0.21484375)
-TexAtlas_RegisterMatTransform('tex_491', 'tex_atlas_low1', 0.07421875,0.15=
234375,0.13671875,0.21484375)
-TexAtlas_RegisterMatTransform('tex_331', 'tex_atlas_low1', 0.14453125,0.15=
234375,0.20703125,0.21484375)
-TexAtlas_RegisterMatTransform('tex_8', 'tex_atlas_low1', 0.21484375,0.1523=
4375,0.27734375,0.21484375)
-TexAtlas_RegisterMatTransform('tex_atlas_william', 'tex_atlas_low1', 0.285=
15625,0.15234375,0.34765625,0.21484375)
-TexAtlas_RegisterMatTransform('tex_89', 'tex_atlas_low1', 0.35546875,0.152=
34375,0.36328125,0.21484375)
-TexAtlas_RegisterMatTransform('tex_91', 'tex_atlas_low1', 0.37109375,0.152=
34375,0.40234375,0.21484375)
-TexAtlas_RegisterMatTransform('tex_323', 'tex_atlas_low1', 0.41015625,0.15=
234375,0.47265625,0.21484375)
-TexAtlas_RegisterMatTransform('tex_palmbark', 'tex_atlas_low1', 0.48046875=
,0.15234375,0.54296875,0.21484375)
-TexAtlas_RegisterMatTransform('tex_411', 'tex_atlas_low1', 0.55078125,0.15=
234375,0.61328125,0.21484375)
-TexAtlas_RegisterMatTransform('tex_423', 'tex_atlas_low1', 0.62109375,0.15=
234375,0.68359375,0.21484375)
-TexAtlas_RegisterMatTransform('tex_60', 'tex_atlas_low1', 0.69140625,0.152=
34375,0.72265625,0.21484375)
-TexAtlas_RegisterMatTransform('tex_509', 'tex_atlas_low1', 0.73046875,0.15=
234375,0.79296875,0.21484375)
-TexAtlas_RegisterMatTransform('tex_470', 'tex_atlas_low1', 0.80078125,0.15=
234375,0.86328125,0.21484375)
-TexAtlas_RegisterMatTransform('tex_111', 'tex_atlas_low1', 0.87109375,0.15=
234375,0.93359375,0.21484375)
-TexAtlas_RegisterMatTransform('tex_307', 'tex_atlas_low1', 0.00390625,0.22=
265625,0.06640625,0.28515625)
-TexAtlas_RegisterMatTransform('tex_102', 'tex_atlas_low1', 0.07421875,0.22=
265625,0.08984375,0.28515625)
-TexAtlas_RegisterMatTransform('tex_460', 'tex_atlas_low1', 0.09765625,0.22=
265625,0.16015625,0.28515625)
-TexAtlas_RegisterMatTransform('tex_212', 'tex_atlas_low1', 0.16796875,0.22=
265625,0.23046875,0.28515625)
-TexAtlas_RegisterMatTransform('tex_121', 'tex_atlas_low1', 0.23828125,0.22=
265625,0.30078125,0.28515625)
-TexAtlas_RegisterMatTransform('tex_38', 'tex_atlas_low1', 0.30859375,0.222=
65625,0.33984375,0.28515625)
-TexAtlas_RegisterMatTransform('tex_345', 'tex_atlas_low1', 0.34765625,0.22=
265625,0.41015625,0.28515625)
-TexAtlas_RegisterMatTransform('tex_340', 'tex_atlas_low1', 0.41796875,0.22=
265625,0.48046875,0.28515625)
-TexAtlas_RegisterMatTransform('tex_398', 'tex_atlas_low1', 0.48828125,0.22=
265625,0.55078125,0.28515625)
-TexAtlas_RegisterMatTransform('tex_515', 'tex_atlas_low1', 0.55859375,0.22=
265625,0.62109375,0.28515625)
-TexAtlas_RegisterMatTransform('tex_79', 'tex_atlas_low1', 0.62890625,0.222=
65625,0.66015625,0.28515625)
-TexAtlas_RegisterMatTransform('tex_18', 'tex_atlas_low1', 0.66796875,0.222=
65625,0.73046875,0.28515625)
-TexAtlas_RegisterMatTransform('tex_222', 'tex_atlas_low1', 0.73828125,0.22=
265625,0.80078125,0.28515625)
-TexAtlas_RegisterMatTransform('tex_464', 'tex_atlas_low1', 0.80859375,0.22=
265625,0.87109375,0.28515625)
-TexAtlas_RegisterMatTransform('tex_181', 'tex_atlas_low1', 0.87890625,0.22=
265625,0.91015625,0.28515625)
-TexAtlas_RegisterMatTransform('tex_347', 'tex_atlas_low1', 0.91796875,0.22=
265625,0.98046875,0.28515625)
-TexAtlas_RegisterMatTransform('tex_314', 'tex_atlas_low1', 0.00390625,0.29=
296875,0.06640625,0.35546875)
-TexAtlas_RegisterMatTransform('tex_276', 'tex_atlas_low1', 0.07421875,0.29=
296875,0.13671875,0.35546875)
-TexAtlas_RegisterMatTransform('tex_vase', 'tex_atlas_low1', 0.14453125,0.2=
9296875,0.20703125,0.35546875)
-TexAtlas_RegisterMatTransform('tex_mud', 'tex_atlas_low1', 0.21484375,0.29=
296875,0.27734375,0.35546875)
-TexAtlas_RegisterMatTransform('tex_551', 'tex_atlas_low1', 0.28515625,0.29=
296875,0.34765625,0.35546875)
-TexAtlas_RegisterMatTransform('tex_34', 'tex_atlas_low1', 0.35546875,0.292=
96875,0.38671875,0.35546875)
-TexAtlas_RegisterMatTransform('tex_487', 'tex_atlas_low1', 0.39453125,0.29=
296875,0.42578125,0.35546875)
-TexAtlas_RegisterMatTransform('tex_186', 'tex_atlas_low1', 0.43359375,0.29=
296875,0.49609375,0.35546875)
-TexAtlas_RegisterMatTransform('tex_478', 'tex_atlas_low1', 0.50390625,0.29=
296875,0.56640625,0.35546875)
-TexAtlas_RegisterMatTransform('tex_206', 'tex_atlas_low1', 0.57421875,0.29=
296875,0.63671875,0.35546875)
-TexAtlas_RegisterMatTransform('tex_556', 'tex_atlas_low1', 0.64453125,0.29=
296875,0.70703125,0.35546875)
-TexAtlas_RegisterMatTransform('tex_204', 'tex_atlas_low1', 0.71484375,0.29=
296875,0.77734375,0.35546875)
-TexAtlas_RegisterMatTransform('tex_78', 'tex_atlas_low1', 0.78515625,0.292=
96875,0.81640625,0.35546875)
-TexAtlas_RegisterMatTransform('tex_557', 'tex_atlas_low1', 0.82421875,0.29=
296875,0.85546875,0.35546875)
-TexAtlas_RegisterMatTransform('tex_415', 'tex_atlas_low1', 0.86328125,0.29=
296875,0.92578125,0.35546875)
-TexAtlas_RegisterMatTransform('tex_5351', 'tex_atlas_low1', 0.93359375,0.2=
9296875,0.99609375,0.35546875)
-TexAtlas_RegisterMatTransform('tex_99', 'tex_atlas_low1', 0.00390625,0.363=
28125,0.03515625,0.42578125)
-TexAtlas_RegisterMatTransform('tex_386', 'tex_atlas_low1', 0.04296875,0.36=
328125,0.10546875,0.42578125)
-TexAtlas_RegisterMatTransform('tex_338', 'tex_atlas_low1', 0.11328125,0.36=
328125,0.17578125,0.42578125)
-TexAtlas_RegisterMatTransform('tex_192', 'tex_atlas_low1', 0.18359375,0.36=
328125,0.24609375,0.42578125)
-TexAtlas_RegisterMatTransform('tex_517', 'tex_atlas_low1', 0.25390625,0.36=
328125,0.31640625,0.42578125)
-TexAtlas_RegisterMatTransform('tex_461', 'tex_atlas_low1', 0.32421875,0.36=
328125,0.35546875,0.42578125)
-TexAtlas_RegisterMatTransform('tex_183', 'tex_atlas_low1', 0.36328125,0.36=
328125,0.42578125,0.42578125)
-TexAtlas_RegisterMatTransform('tex_335', 'tex_atlas_low1', 0.43359375,0.36=
328125,0.49609375,0.42578125)
-TexAtlas_RegisterMatTransform('tex_449', 'tex_atlas_low1', 0.50390625,0.36=
328125,0.56640625,0.42578125)
-TexAtlas_RegisterMatTransform('tex_120', 'tex_atlas_low1', 0.57421875,0.36=
328125,0.63671875,0.42578125)
-TexAtlas_RegisterMatTransform('tex_524', 'tex_atlas_low1', 0.64453125,0.36=
328125,0.70703125,0.42578125)
-TexAtlas_RegisterMatTransform('tex_273', 'tex_atlas_low1', 0.71484375,0.36=
328125,0.77734375,0.42578125)
-TexAtlas_RegisterMatTransform('tex_328', 'tex_atlas_low1', 0.78515625,0.36=
328125,0.84765625,0.42578125)
-TexAtlas_RegisterMatTransform('tex_226', 'tex_atlas_low1', 0.85546875,0.36=
328125,0.91796875,0.42578125)
-TexAtlas_RegisterMatTransform('tex_55', 'tex_atlas_low1', 0.92578125,0.363=
28125,0.95703125,0.42578125)
-TexAtlas_RegisterMatTransform('tex_414', 'tex_atlas_low1', 0.00390625,0.43=
359375,0.06640625,0.49609375)
-TexAtlas_RegisterMatTransform('tex_211', 'tex_atlas_low1', 0.07421875,0.43=
359375,0.13671875,0.49609375)
-TexAtlas_RegisterMatTransform('tex_404', 'tex_atlas_low1', 0.14453125,0.43=
359375,0.20703125,0.49609375)
-TexAtlas_RegisterMatTransform('tex_245', 'tex_atlas_low1', 0.21484375,0.43=
359375,0.27734375,0.49609375)
-TexAtlas_RegisterMatTransform('tex_101', 'tex_atlas_low1', 0.28515625,0.43=
359375,0.30078125,0.49609375)
-TexAtlas_RegisterMatTransform('tex_armoire_2637', 'tex_atlas_low1', 0.3085=
9375,0.43359375,0.37109375,0.49609375)
-TexAtlas_RegisterMatTransform('tex_207', 'tex_atlas_low1', 0.37890625,0.43=
359375,0.44140625,0.49609375)
-TexAtlas_RegisterMatTransform('tex_12', 'tex_atlas_low1', 0.44921875,0.433=
59375,0.51171875,0.49609375)
-TexAtlas_RegisterMatTransform('tex_224', 'tex_atlas_low1', 0.51953125,0.43=
359375,0.58203125,0.49609375)
-TexAtlas_RegisterMatTransform('tex_457', 'tex_atlas_low1', 0.58984375,0.43=
359375,0.65234375,0.49609375)
-TexAtlas_RegisterMatTransform('tex_258', 'tex_atlas_low1', 0.66015625,0.43=
359375,0.72265625,0.49609375)
-TexAtlas_RegisterMatTransform('tex_2', 'tex_atlas_low1', 0.73046875,0.4335=
9375,0.79296875,0.49609375)
-TexAtlas_RegisterMatTransform('tex_74', 'tex_atlas_low1', 0.80078125,0.433=
59375,0.83203125,0.49609375)
-TexAtlas_RegisterMatTransform('tex_37', 'tex_atlas_low1', 0.83984375,0.433=
59375,0.87109375,0.49609375)
-TexAtlas_RegisterMatTransform('tex_231', 'tex_atlas_low1', 0.87890625,0.43=
359375,0.94140625,0.49609375)
-TexAtlas_RegisterMatTransform('tex_pylon', 'tex_atlas_low1', 0.00390625,0.=
50390625,0.06640625,0.56640625)
-TexAtlas_RegisterMatTransform('tex_260', 'tex_atlas_low1', 0.07421875,0.50=
390625,0.13671875,0.56640625)
-TexAtlas_RegisterMatTransform('tex_534', 'tex_atlas_low1', 0.14453125,0.50=
390625,0.20703125,0.56640625)
-TexAtlas_RegisterMatTransform('tex_200', 'tex_atlas_low1', 0.21484375,0.50=
390625,0.27734375,0.56640625)
-TexAtlas_RegisterMatTransform('tex_24', 'tex_atlas_low1', 0.28515625,0.503=
90625,0.31640625,0.56640625)
-TexAtlas_RegisterMatTransform('tex_477', 'tex_atlas_low1', 0.32421875,0.50=
390625,0.38671875,0.56640625)
-TexAtlas_RegisterMatTransform('tex_230', 'tex_atlas_low1', 0.39453125,0.50=
390625,0.45703125,0.56640625)
-TexAtlas_RegisterMatTransform('tex_246', 'tex_atlas_low1', 0.46484375,0.50=
390625,0.52734375,0.56640625)
-TexAtlas_RegisterMatTransform('tex_327', 'tex_atlas_low1', 0.53515625,0.50=
390625,0.59765625,0.56640625)
-TexAtlas_RegisterMatTransform('tex_496', 'tex_atlas_low1', 0.60546875,0.50=
390625,0.66796875,0.56640625)
-TexAtlas_RegisterMatTransform('tex_555', 'tex_atlas_low1', 0.67578125,0.50=
390625,0.73828125,0.56640625)
-TexAtlas_RegisterMatTransform('tex_45', 'tex_atlas_low1', 0.74609375,0.503=
90625,0.77734375,0.56640625)
-TexAtlas_RegisterMatTransform('tex_66', 'tex_atlas_low1', 0.78515625,0.503=
90625,0.81640625,0.56640625)
-TexAtlas_RegisterMatTransform('tex_346', 'tex_atlas_low1', 0.82421875,0.50=
390625,0.88671875,0.56640625)
-TexAtlas_RegisterMatTransform('tex_546', 'tex_atlas_low1', 0.89453125,0.50=
390625,0.95703125,0.56640625)
-TexAtlas_RegisterMatTransform('tex_232', 'tex_atlas_low1', 0.00390625,0.57=
421875,0.06640625,0.63671875)
-TexAtlas_RegisterMatTransform('tex_20', 'tex_atlas_low1', 0.07421875,0.574=
21875,0.13671875,0.63671875)
-TexAtlas_RegisterMatTransform('tex_219', 'tex_atlas_low1', 0.14453125,0.57=
421875,0.20703125,0.63671875)
-TexAtlas_RegisterMatTransform('tex_482', 'tex_atlas_low1', 0.21484375,0.57=
421875,0.27734375,0.63671875)
-TexAtlas_RegisterMatTransform('tex_209', 'tex_atlas_low1', 0.28515625,0.57=
421875,0.34765625,0.63671875)
-TexAtlas_RegisterMatTransform('tex_537', 'tex_atlas_low1', 0.35546875,0.57=
421875,0.41796875,0.63671875)
-TexAtlas_RegisterMatTransform('tex_220', 'tex_atlas_low1', 0.42578125,0.57=
421875,0.48828125,0.63671875)
-TexAtlas_RegisterMatTransform('tex_422', 'tex_atlas_low1', 0.49609375,0.57=
421875,0.55859375,0.63671875)
-TexAtlas_RegisterMatTransform('tex_portrait', 'tex_atlas_low1', 0.56640625=
,0.57421875,0.62890625,0.63671875)
-TexAtlas_RegisterMatTransform('tex_313', 'tex_atlas_low1', 0.63671875,0.57=
421875,0.69921875,0.63671875)
-TexAtlas_RegisterMatTransform('tex_13', 'tex_atlas_low1', 0.70703125,0.574=
21875,0.76953125,0.63671875)
-TexAtlas_RegisterMatTransform('tex_511', 'tex_atlas_low1', 0.77734375,0.57=
421875,0.83984375,0.63671875)
-TexAtlas_RegisterMatTransform('tex_536', 'tex_atlas_low1', 0.84765625,0.57=
421875,0.91015625,0.63671875)
-TexAtlas_RegisterMatTransform('tex_221', 'tex_atlas_low1', 0.91796875,0.57=
421875,0.98046875,0.63671875)
-TexAtlas_RegisterMatTransform('tex_472', 'tex_atlas_low1', 0.00390625,0.64=
453125,0.03515625,0.70703125)
-TexAtlas_RegisterMatTransform('tex_467', 'tex_atlas_low1', 0.04296875,0.64=
453125,0.10546875,0.70703125)
-TexAtlas_RegisterMatTransform('tex_58', 'tex_atlas_low1', 0.11328125,0.644=
53125,0.14453125,0.70703125)
-TexAtlas_RegisterMatTransform('tex_armoire_2639', 'tex_atlas_low1', 0.1523=
4375,0.64453125,0.21484375,0.70703125)
-TexAtlas_RegisterMatTransform('tex_228', 'tex_atlas_low1', 0.22265625,0.64=
453125,0.28515625,0.70703125)
-TexAtlas_RegisterMatTransform('tex_495', 'tex_atlas_low1', 0.29296875,0.64=
453125,0.35546875,0.70703125)
-TexAtlas_RegisterMatTransform('tex_253', 'tex_atlas_low1', 0.36328125,0.64=
453125,0.42578125,0.70703125)
-TexAtlas_RegisterMatTransform('tex_389', 'tex_atlas_low1', 0.43359375,0.64=
453125,0.49609375,0.70703125)
-TexAtlas_RegisterMatTransform('tex_375', 'tex_atlas_low1', 0.50390625,0.64=
453125,0.53515625,0.70703125)
-TexAtlas_RegisterMatTransform('tex_27', 'tex_atlas_low1', 0.54296875,0.644=
53125,0.60546875,0.70703125)
-TexAtlas_RegisterMatTransform('tex_355', 'tex_atlas_low1', 0.61328125,0.64=
453125,0.64453125,0.70703125)
-TexAtlas_RegisterMatTransform('tex_63', 'tex_atlas_low1', 0.65234375,0.644=
53125,0.68359375,0.70703125)
-TexAtlas_RegisterMatTransform('tex_558', 'tex_atlas_low1', 0.69140625,0.64=
453125,0.72265625,0.70703125)
-TexAtlas_RegisterMatTransform('tex_376', 'tex_atlas_low1', 0.73046875,0.64=
453125,0.79296875,0.70703125)
-TexAtlas_RegisterMatTransform('tex_334', 'tex_atlas_low1', 0.80078125,0.64=
453125,0.86328125,0.70703125)
-TexAtlas_RegisterMatTransform('tex_125', 'tex_atlas_low1', 0.00390625,0.71=
484375,0.06640625,0.74609375)
-TexAtlas_RegisterMatTransform('tex_161', 'tex_atlas_low1', 0.07421875,0.71=
484375,0.13671875,0.74609375)
-TexAtlas_RegisterMatTransform('tex_136', 'tex_atlas_low1', 0.14453125,0.71=
484375,0.20703125,0.74609375)
-TexAtlas_RegisterMatTransform('tex_36', 'tex_atlas_low1', 0.21484375,0.714=
84375,0.27734375,0.74609375)
-TexAtlas_RegisterMatTransform('tex_483', 'tex_atlas_low1', 0.28515625,0.71=
484375,0.34765625,0.74609375)
-TexAtlas_RegisterMatTransform('tex_571', 'tex_atlas_low1', 0.35546875,0.71=
484375,0.41796875,0.74609375)
-TexAtlas_RegisterMatTransform('tex_147', 'tex_atlas_low1', 0.42578125,0.71=
484375,0.48828125,0.74609375)
-TexAtlas_RegisterMatTransform('tex_132', 'tex_atlas_low1', 0.49609375,0.71=
484375,0.55859375,0.74609375)
-TexAtlas_RegisterMatTransform('tex_157', 'tex_atlas_low1', 0.56640625,0.71=
484375,0.62890625,0.74609375)
-TexAtlas_RegisterMatTransform('tex_130', 'tex_atlas_low1', 0.63671875,0.71=
484375,0.69921875,0.74609375)
-TexAtlas_RegisterMatTransform('tex_251', 'tex_atlas_low1', 0.70703125,0.71=
484375,0.76953125,0.74609375)
-TexAtlas_RegisterMatTransform('tex_142', 'tex_atlas_low1', 0.77734375,0.71=
484375,0.83984375,0.74609375)
-TexAtlas_RegisterMatTransform('tex_23', 'tex_atlas_low1', 0.84765625,0.714=
84375,0.91015625,0.74609375)
-TexAtlas_RegisterMatTransform('tex_154', 'tex_atlas_low1', 0.91796875,0.71=
484375,0.98046875,0.74609375)
-TexAtlas_RegisterMatTransform('tex_168', 'tex_atlas_low1', 0.00390625,0.75=
390625,0.06640625,0.78515625)
-TexAtlas_RegisterMatTransform('tex_564', 'tex_atlas_low1', 0.07421875,0.75=
390625,0.13671875,0.78515625)
-TexAtlas_RegisterMatTransform('tex_133', 'tex_atlas_low1', 0.14453125,0.75=
390625,0.20703125,0.78515625)
-TexAtlas_RegisterMatTransform('tex_167', 'tex_atlas_low1', 0.21484375,0.75=
390625,0.27734375,0.78515625)
-TexAtlas_RegisterMatTransform('tex_158', 'tex_atlas_low1', 0.28515625,0.75=
390625,0.34765625,0.78515625)
-TexAtlas_RegisterMatTransform('tex_134', 'tex_atlas_low1', 0.35546875,0.75=
390625,0.41796875,0.78515625)
-TexAtlas_RegisterMatTransform('tex_148', 'tex_atlas_low1', 0.42578125,0.75=
390625,0.48828125,0.78515625)
-TexAtlas_RegisterMatTransform('tex_143', 'tex_atlas_low1', 0.49609375,0.75=
390625,0.55859375,0.78515625)
-TexAtlas_RegisterMatTransform('tex_572', 'tex_atlas_low1', 0.56640625,0.75=
390625,0.62890625,0.78515625)
-TexAtlas_RegisterMatTransform('tex_25', 'tex_atlas_low1', 0.63671875,0.753=
90625,0.69921875,0.78515625)
-TexAtlas_RegisterMatTransform('tex_250', 'tex_atlas_low1', 0.70703125,0.75=
390625,0.76953125,0.78515625)
-TexAtlas_RegisterMatTransform('tex_126', 'tex_atlas_low1', 0.77734375,0.75=
390625,0.83984375,0.78515625)
-TexAtlas_RegisterMatTransform('tex_159', 'tex_atlas_low1', 0.84765625,0.75=
390625,0.91015625,0.78515625)
-TexAtlas_RegisterMatTransform('tex_523', 'tex_atlas_low1', 0.91796875,0.75=
390625,0.98046875,0.78515625)
-TexAtlas_RegisterMatTransform('tex_137', 'tex_atlas_low1', 0.00390625,0.79=
296875,0.06640625,0.82421875)
-TexAtlas_RegisterMatTransform('tex_128', 'tex_atlas_low1', 0.07421875,0.79=
296875,0.13671875,0.82421875)
-TexAtlas_RegisterMatTransform('tex_144', 'tex_atlas_low1', 0.14453125,0.79=
296875,0.20703125,0.82421875)
-TexAtlas_RegisterMatTransform('tex_162', 'tex_atlas_low1', 0.21484375,0.79=
296875,0.27734375,0.82421875)
-TexAtlas_RegisterMatTransform('tex_135', 'tex_atlas_low1', 0.28515625,0.79=
296875,0.34765625,0.82421875)
-TexAtlas_RegisterMatTransform('tex_150', 'tex_atlas_low1', 0.35546875,0.79=
296875,0.41796875,0.82421875)
-TexAtlas_RegisterMatTransform('tex_256', 'tex_atlas_low1', 0.42578125,0.79=
296875,0.48828125,0.82421875)
-TexAtlas_RegisterMatTransform('tex_139', 'tex_atlas_low1', 0.49609375,0.79=
296875,0.55859375,0.82421875)
-TexAtlas_RegisterMatTransform('tex_149', 'tex_atlas_low1', 0.56640625,0.79=
296875,0.62890625,0.82421875)
-TexAtlas_RegisterMatTransform('tex_138', 'tex_atlas_low1', 0.63671875,0.79=
296875,0.69921875,0.82421875)
-TexAtlas_RegisterMatTransform('tex_561', 'tex_atlas_low1', 0.70703125,0.79=
296875,0.76953125,0.82421875)
-TexAtlas_RegisterMatTransform('tex_70', 'tex_atlas_low1', 0.77734375,0.792=
96875,0.83984375,0.82421875)
-TexAtlas_RegisterMatTransform('tex_127', 'tex_atlas_low1', 0.84765625,0.79=
296875,0.91015625,0.82421875)
-TexAtlas_RegisterMatTransform('tex_146', 'tex_atlas_low1', 0.91796875,0.79=
296875,0.98046875,0.82421875)
-TexAtlas_RegisterMatTransform('tex_166', 'tex_atlas_low1', 0.00390625,0.83=
203125,0.06640625,0.86328125)
-TexAtlas_RegisterMatTransform('tex_141', 'tex_atlas_low1', 0.07421875,0.83=
203125,0.13671875,0.86328125)
-TexAtlas_RegisterMatTransform('tex_131', 'tex_atlas_low1', 0.14453125,0.83=
203125,0.20703125,0.86328125)
-TexAtlas_RegisterMatTransform('tex_129', 'tex_atlas_low1', 0.21484375,0.83=
203125,0.27734375,0.86328125)
-TexAtlas_RegisterMatTransform('tex_140', 'tex_atlas_low1', 0.28515625,0.83=
203125,0.34765625,0.86328125)
-TexAtlas_RegisterMatTransform('tex_170', 'tex_atlas_low1', 0.35546875,0.83=
203125,0.41796875,0.86328125)
-TexAtlas_RegisterMatTransform('tex_484', 'tex_atlas_low1', 0.42578125,0.83=
203125,0.48828125,0.86328125)
-TexAtlas_RegisterMatTransform('tex_3', 'tex_atlas_low1', 0.49609375,0.8320=
3125,0.55859375,0.86328125)
-TexAtlas_RegisterMatTransform('tex_171', 'tex_atlas_low1', 0.56640625,0.83=
203125,0.62890625,0.86328125)
-TexAtlas_RegisterMatTransform('tex_124', 'tex_atlas_low1', 0.63671875,0.83=
203125,0.69921875,0.86328125)
-TexAtlas_RegisterMatTransform('tex_152', 'tex_atlas_low1', 0.70703125,0.83=
203125,0.76953125,0.86328125)
-TexAtlas_RegisterMatTransform('tex_169', 'tex_atlas_low1', 0.77734375,0.83=
203125,0.83984375,0.86328125)
-TexAtlas_RegisterMatTransform('tex_113', 'tex_atlas_low1', 0.84765625,0.83=
203125,0.91015625,0.86328125)
-TexAtlas_RegisterMatTransform('tex_110', 'tex_atlas_low1', 0.91796875,0.83=
203125,0.98046875,0.86328125)
-TexAtlas_RegisterMatTransform('tex_145', 'tex_atlas_low1', 0.00390625,0.87=
109375,0.06640625,0.90234375)
-TexAtlas_RegisterMatTransform('tex_286', 'tex_atlas_low1', 0.07421875,0.87=
109375,0.13671875,0.90234375)
-TexAtlas_RegisterMatTransform('tex_247', 'tex_atlas_low1', 0.00390625,0.91=
015625,0.06640625,0.92578125)
-TexAtlas_RegisterMatTransform('tex_249', 'tex_atlas_low1', 0.07421875,0.91=
015625,0.13671875,0.92578125)
-TexAtlas_RegisterMatTransform('tex_248', 'tex_atlas_low1', 0.14453125,0.91=
015625,0.20703125,0.92578125)
-TexAtlas_RegisterMatTransform('tex_563', 'tex_atlas_low1', 0.21484375,0.91=
015625,0.27734375,0.92578125)
-TexAtlas_RegisterMatTransform('tex_32', 'tex_atlas_low1', 0.28515625,0.910=
15625,0.34765625,0.92578125)
-TexAtlas_RegisterMatTransform('tex_21', 'tex_atlas_low1', 0.35546875,0.910=
15625,0.41796875,0.92578125)
-TexAtlas_RegisterMatTransform('tex_107', 'tex_atlas_low1', 0.42578125,0.91=
015625,0.48828125,0.92578125)
-TexAtlas_RegisterMatTransform('tex_108', 'tex_atlas_low1', 0.49609375,0.91=
015625,0.55859375,0.92578125)
-TexAtlas_RegisterMatTransform('tex_174', 'tex_atlas_low1', 0.56640625,0.91=
015625,0.62890625,0.92578125)
-TexAtlas_RegisterMatTransform('tex_30', 'tex_atlas_low1', 0.63671875,0.910=
15625,0.69921875,0.92578125)
-TexAtlas_RegisterMatTransform('tex_31', 'tex_atlas_low1', 0.70703125,0.910=
15625,0.76953125,0.92578125)
+TexAtlas_RegisterMatTransform('tex_orccart', 'tex_atlas_low0', 0.71484375,=
0.91796875,0.77734375,0.98046875)
+TexAtlas_RegisterMatTransform('tex_342', 'tex_atlas_low0', 0.78515625,0.91=
796875,0.84765625,0.98046875)
+TexAtlas_RegisterMatTransform('tex_22', 'tex_atlas_low0', 0.85546875,0.917=
96875,0.91796875,0.98046875)
+TexAtlas_RegisterMatTransform('tex_339', 'tex_atlas_low0', 0.92578125,0.91=
796875,0.98828125,0.98046875)
+TexAtlas_RegisterMatTransform('tex_225', 'tex_atlas_low1', 0.00390625,0.01=
171875,0.06640625,0.07421875)
+TexAtlas_RegisterMatTransform('tex_271', 'tex_atlas_low1', 0.07421875,0.01=
171875,0.13671875,0.07421875)
+TexAtlas_RegisterMatTransform('tex_190', 'tex_atlas_low1', 0.14453125,0.01=
171875,0.20703125,0.07421875)
+TexAtlas_RegisterMatTransform('tex_234', 'tex_atlas_low1', 0.21484375,0.01=
171875,0.27734375,0.07421875)
+TexAtlas_RegisterMatTransform('tex_315', 'tex_atlas_low1', 0.28515625,0.01=
171875,0.34765625,0.07421875)
+TexAtlas_RegisterMatTransform('tex_279', 'tex_atlas_low1', 0.35546875,0.01=
171875,0.41796875,0.07421875)
+TexAtlas_RegisterMatTransform('tex_458', 'tex_atlas_low1', 0.42578125,0.01=
171875,0.45703125,0.07421875)
+TexAtlas_RegisterMatTransform('tex_539', 'tex_atlas_low1', 0.46484375,0.01=
171875,0.52734375,0.07421875)
+TexAtlas_RegisterMatTransform('tex_343', 'tex_atlas_low1', 0.53515625,0.01=
171875,0.59765625,0.07421875)
+TexAtlas_RegisterMatTransform('tex_319', 'tex_atlas_low1', 0.60546875,0.01=
171875,0.66796875,0.07421875)
+TexAtlas_RegisterMatTransform('tex_217', 'tex_atlas_low1', 0.67578125,0.01=
171875,0.73828125,0.07421875)
+TexAtlas_RegisterMatTransform('tex_459', 'tex_atlas_low1', 0.74609375,0.01=
171875,0.80859375,0.07421875)
+TexAtlas_RegisterMatTransform('tex_188', 'tex_atlas_low1', 0.81640625,0.01=
171875,0.87890625,0.07421875)
+TexAtlas_RegisterMatTransform('tex_100', 'tex_atlas_low1', 0.88671875,0.01=
171875,0.91796875,0.07421875)
+TexAtlas_RegisterMatTransform('tex_71', 'tex_atlas_low1', 0.92578125,0.011=
71875,0.95703125,0.07421875)
+TexAtlas_RegisterMatTransform('tex_6', 'tex_atlas_low1', 0.00390625,0.0820=
3125,0.06640625,0.14453125)
+TexAtlas_RegisterMatTransform('tex_312', 'tex_atlas_low1', 0.07421875,0.08=
203125,0.13671875,0.14453125)
+TexAtlas_RegisterMatTransform('tex_412', 'tex_atlas_low1', 0.14453125,0.08=
203125,0.20703125,0.14453125)
+TexAtlas_RegisterMatTransform('tex_330', 'tex_atlas_low1', 0.21484375,0.08=
203125,0.27734375,0.14453125)
+TexAtlas_RegisterMatTransform('tex_56', 'tex_atlas_low1', 0.28515625,0.082=
03125,0.31640625,0.14453125)
+TexAtlas_RegisterMatTransform('tex_277', 'tex_atlas_low1', 0.32421875,0.08=
203125,0.38671875,0.14453125)
+TexAtlas_RegisterMatTransform('tex_390', 'tex_atlas_low1', 0.39453125,0.08=
203125,0.45703125,0.14453125)
+TexAtlas_RegisterMatTransform('tex_42', 'tex_atlas_low1', 0.46484375,0.082=
03125,0.49609375,0.14453125)
+TexAtlas_RegisterMatTransform('tex_344', 'tex_atlas_low1', 0.50390625,0.08=
203125,0.56640625,0.14453125)
+TexAtlas_RegisterMatTransform('tex_321', 'tex_atlas_low1', 0.57421875,0.08=
203125,0.63671875,0.14453125)
+TexAtlas_RegisterMatTransform('tex_flowers2', 'tex_atlas_low1', 0.64453125=
,0.08203125,0.70703125,0.14453125)
+TexAtlas_RegisterMatTransform('tex_567', 'tex_atlas_low1', 0.71484375,0.08=
203125,0.74609375,0.14453125)
+TexAtlas_RegisterMatTransform('tex_373', 'tex_atlas_low1', 0.75390625,0.08=
203125,0.76953125,0.14453125)
+TexAtlas_RegisterMatTransform('tex_518', 'tex_atlas_low1', 0.77734375,0.08=
203125,0.83984375,0.14453125)
+TexAtlas_RegisterMatTransform('tex_278', 'tex_atlas_low1', 0.84765625,0.08=
203125,0.91015625,0.14453125)
+TexAtlas_RegisterMatTransform('tex_308', 'tex_atlas_low1', 0.91796875,0.08=
203125,0.98046875,0.14453125)
+TexAtlas_RegisterMatTransform('tex_538', 'tex_atlas_low1', 0.00390625,0.15=
234375,0.06640625,0.21484375)
+TexAtlas_RegisterMatTransform('tex_sattel', 'tex_atlas_low1', 0.07421875,0=
.15234375,0.13671875,0.21484375)
+TexAtlas_RegisterMatTransform('tex_491', 'tex_atlas_low1', 0.14453125,0.15=
234375,0.20703125,0.21484375)
+TexAtlas_RegisterMatTransform('tex_331', 'tex_atlas_low1', 0.21484375,0.15=
234375,0.27734375,0.21484375)
+TexAtlas_RegisterMatTransform('tex_8', 'tex_atlas_low1', 0.28515625,0.1523=
4375,0.34765625,0.21484375)
+TexAtlas_RegisterMatTransform('tex_atlas_william', 'tex_atlas_low1', 0.355=
46875,0.15234375,0.41796875,0.21484375)
+TexAtlas_RegisterMatTransform('tex_89', 'tex_atlas_low1', 0.42578125,0.152=
34375,0.43359375,0.21484375)
+TexAtlas_RegisterMatTransform('tex_91', 'tex_atlas_low1', 0.44140625,0.152=
34375,0.47265625,0.21484375)
+TexAtlas_RegisterMatTransform('tex_323', 'tex_atlas_low1', 0.48046875,0.15=
234375,0.54296875,0.21484375)
+TexAtlas_RegisterMatTransform('tex_palmbark', 'tex_atlas_low1', 0.55078125=
,0.15234375,0.61328125,0.21484375)
+TexAtlas_RegisterMatTransform('tex_411', 'tex_atlas_low1', 0.62109375,0.15=
234375,0.68359375,0.21484375)
+TexAtlas_RegisterMatTransform('tex_423', 'tex_atlas_low1', 0.69140625,0.15=
234375,0.75390625,0.21484375)
+TexAtlas_RegisterMatTransform('tex_60', 'tex_atlas_low1', 0.76171875,0.152=
34375,0.79296875,0.21484375)
+TexAtlas_RegisterMatTransform('tex_509', 'tex_atlas_low1', 0.80078125,0.15=
234375,0.86328125,0.21484375)
+TexAtlas_RegisterMatTransform('tex_470', 'tex_atlas_low1', 0.87109375,0.15=
234375,0.93359375,0.21484375)
+TexAtlas_RegisterMatTransform('tex_111', 'tex_atlas_low1', 0.00390625,0.22=
265625,0.06640625,0.28515625)
+TexAtlas_RegisterMatTransform('tex_307', 'tex_atlas_low1', 0.07421875,0.22=
265625,0.13671875,0.28515625)
+TexAtlas_RegisterMatTransform('tex_102', 'tex_atlas_low1', 0.14453125,0.22=
265625,0.16015625,0.28515625)
+TexAtlas_RegisterMatTransform('tex_460', 'tex_atlas_low1', 0.16796875,0.22=
265625,0.23046875,0.28515625)
+TexAtlas_RegisterMatTransform('tex_212', 'tex_atlas_low1', 0.23828125,0.22=
265625,0.30078125,0.28515625)
+TexAtlas_RegisterMatTransform('tex_121', 'tex_atlas_low1', 0.30859375,0.22=
265625,0.37109375,0.28515625)
+TexAtlas_RegisterMatTransform('tex_38', 'tex_atlas_low1', 0.37890625,0.222=
65625,0.41015625,0.28515625)
+TexAtlas_RegisterMatTransform('tex_345', 'tex_atlas_low1', 0.41796875,0.22=
265625,0.48046875,0.28515625)
+TexAtlas_RegisterMatTransform('tex_340', 'tex_atlas_low1', 0.48828125,0.22=
265625,0.55078125,0.28515625)
+TexAtlas_RegisterMatTransform('tex_398', 'tex_atlas_low1', 0.55859375,0.22=
265625,0.62109375,0.28515625)
+TexAtlas_RegisterMatTransform('tex_515', 'tex_atlas_low1', 0.62890625,0.22=
265625,0.69140625,0.28515625)
+TexAtlas_RegisterMatTransform('tex_79', 'tex_atlas_low1', 0.69921875,0.222=
65625,0.73046875,0.28515625)
+TexAtlas_RegisterMatTransform('tex_18', 'tex_atlas_low1', 0.73828125,0.222=
65625,0.80078125,0.28515625)
+TexAtlas_RegisterMatTransform('tex_222', 'tex_atlas_low1', 0.80859375,0.22=
265625,0.87109375,0.28515625)
+TexAtlas_RegisterMatTransform('tex_464', 'tex_atlas_low1', 0.87890625,0.22=
265625,0.94140625,0.28515625)
+TexAtlas_RegisterMatTransform('tex_181', 'tex_atlas_low1', 0.94921875,0.22=
265625,0.98046875,0.28515625)
+TexAtlas_RegisterMatTransform('tex_347', 'tex_atlas_low1', 0.00390625,0.29=
296875,0.06640625,0.35546875)
+TexAtlas_RegisterMatTransform('tex_314', 'tex_atlas_low1', 0.07421875,0.29=
296875,0.13671875,0.35546875)
+TexAtlas_RegisterMatTransform('tex_276', 'tex_atlas_low1', 0.14453125,0.29=
296875,0.20703125,0.35546875)
+TexAtlas_RegisterMatTransform('tex_vase', 'tex_atlas_low1', 0.21484375,0.2=
9296875,0.27734375,0.35546875)
+TexAtlas_RegisterMatTransform('tex_mud', 'tex_atlas_low1', 0.28515625,0.29=
296875,0.34765625,0.35546875)
+TexAtlas_RegisterMatTransform('tex_551', 'tex_atlas_low1', 0.35546875,0.29=
296875,0.41796875,0.35546875)
+TexAtlas_RegisterMatTransform('tex_34', 'tex_atlas_low1', 0.42578125,0.292=
96875,0.45703125,0.35546875)
+TexAtlas_RegisterMatTransform('tex_487', 'tex_atlas_low1', 0.46484375,0.29=
296875,0.49609375,0.35546875)
+TexAtlas_RegisterMatTransform('tex_186', 'tex_atlas_low1', 0.50390625,0.29=
296875,0.56640625,0.35546875)
+TexAtlas_RegisterMatTransform('tex_478', 'tex_atlas_low1', 0.57421875,0.29=
296875,0.63671875,0.35546875)
+TexAtlas_RegisterMatTransform('tex_206', 'tex_atlas_low1', 0.64453125,0.29=
296875,0.70703125,0.35546875)
+TexAtlas_RegisterMatTransform('tex_556', 'tex_atlas_low1', 0.71484375,0.29=
296875,0.77734375,0.35546875)
+TexAtlas_RegisterMatTransform('tex_204', 'tex_atlas_low1', 0.78515625,0.29=
296875,0.84765625,0.35546875)
+TexAtlas_RegisterMatTransform('tex_78', 'tex_atlas_low1', 0.85546875,0.292=
96875,0.88671875,0.35546875)
+TexAtlas_RegisterMatTransform('tex_557', 'tex_atlas_low1', 0.89453125,0.29=
296875,0.92578125,0.35546875)
+TexAtlas_RegisterMatTransform('tex_415', 'tex_atlas_low1', 0.93359375,0.29=
296875,0.99609375,0.35546875)
+TexAtlas_RegisterMatTransform('tex_5351', 'tex_atlas_low1', 0.00390625,0.3=
6328125,0.06640625,0.42578125)
+TexAtlas_RegisterMatTransform('tex_99', 'tex_atlas_low1', 0.07421875,0.363=
28125,0.10546875,0.42578125)
+TexAtlas_RegisterMatTransform('tex_386', 'tex_atlas_low1', 0.11328125,0.36=
328125,0.17578125,0.42578125)
+TexAtlas_RegisterMatTransform('tex_338', 'tex_atlas_low1', 0.18359375,0.36=
328125,0.24609375,0.42578125)
+TexAtlas_RegisterMatTransform('tex_192', 'tex_atlas_low1', 0.25390625,0.36=
328125,0.31640625,0.42578125)
+TexAtlas_RegisterMatTransform('tex_517', 'tex_atlas_low1', 0.32421875,0.36=
328125,0.38671875,0.42578125)
+TexAtlas_RegisterMatTransform('tex_461', 'tex_atlas_low1', 0.39453125,0.36=
328125,0.42578125,0.42578125)
+TexAtlas_RegisterMatTransform('tex_183', 'tex_atlas_low1', 0.43359375,0.36=
328125,0.49609375,0.42578125)
+TexAtlas_RegisterMatTransform('tex_335', 'tex_atlas_low1', 0.50390625,0.36=
328125,0.56640625,0.42578125)
+TexAtlas_RegisterMatTransform('tex_449', 'tex_atlas_low1', 0.57421875,0.36=
328125,0.63671875,0.42578125)
+TexAtlas_RegisterMatTransform('tex_120', 'tex_atlas_low1', 0.64453125,0.36=
328125,0.70703125,0.42578125)
+TexAtlas_RegisterMatTransform('tex_524', 'tex_atlas_low1', 0.71484375,0.36=
328125,0.77734375,0.42578125)
+TexAtlas_RegisterMatTransform('tex_273', 'tex_atlas_low1', 0.78515625,0.36=
328125,0.84765625,0.42578125)
+TexAtlas_RegisterMatTransform('tex_328', 'tex_atlas_low1', 0.85546875,0.36=
328125,0.91796875,0.42578125)
+TexAtlas_RegisterMatTransform('tex_226', 'tex_atlas_low1', 0.92578125,0.36=
328125,0.98828125,0.42578125)
+TexAtlas_RegisterMatTransform('tex_55', 'tex_atlas_low1', 0.00390625,0.433=
59375,0.03515625,0.49609375)
+TexAtlas_RegisterMatTransform('tex_414', 'tex_atlas_low1', 0.04296875,0.43=
359375,0.10546875,0.49609375)
+TexAtlas_RegisterMatTransform('tex_211', 'tex_atlas_low1', 0.11328125,0.43=
359375,0.17578125,0.49609375)
+TexAtlas_RegisterMatTransform('tex_404', 'tex_atlas_low1', 0.18359375,0.43=
359375,0.24609375,0.49609375)
+TexAtlas_RegisterMatTransform('tex_245', 'tex_atlas_low1', 0.25390625,0.43=
359375,0.31640625,0.49609375)
+TexAtlas_RegisterMatTransform('tex_101', 'tex_atlas_low1', 0.32421875,0.43=
359375,0.33984375,0.49609375)
+TexAtlas_RegisterMatTransform('tex_elphlen_ear_plant', 'tex_atlas_low1', 0=
.34765625,0.43359375,0.41015625,0.49609375)
+TexAtlas_RegisterMatTransform('tex_armoire_2637', 'tex_atlas_low1', 0.4179=
6875,0.43359375,0.48046875,0.49609375)
+TexAtlas_RegisterMatTransform('tex_207', 'tex_atlas_low1', 0.48828125,0.43=
359375,0.55078125,0.49609375)
+TexAtlas_RegisterMatTransform('tex_12', 'tex_atlas_low1', 0.55859375,0.433=
59375,0.62109375,0.49609375)
+TexAtlas_RegisterMatTransform('tex_224', 'tex_atlas_low1', 0.62890625,0.43=
359375,0.69140625,0.49609375)
+TexAtlas_RegisterMatTransform('tex_457', 'tex_atlas_low1', 0.69921875,0.43=
359375,0.76171875,0.49609375)
+TexAtlas_RegisterMatTransform('tex_258', 'tex_atlas_low1', 0.76953125,0.43=
359375,0.83203125,0.49609375)
+TexAtlas_RegisterMatTransform('tex_2', 'tex_atlas_low1', 0.83984375,0.4335=
9375,0.90234375,0.49609375)
+TexAtlas_RegisterMatTransform('tex_74', 'tex_atlas_low1', 0.91015625,0.433=
59375,0.94140625,0.49609375)
+TexAtlas_RegisterMatTransform('tex_37', 'tex_atlas_low1', 0.94921875,0.433=
59375,0.98046875,0.49609375)
+TexAtlas_RegisterMatTransform('tex_231', 'tex_atlas_low1', 0.00390625,0.50=
390625,0.06640625,0.56640625)
+TexAtlas_RegisterMatTransform('tex_big_elven_chair', 'tex_atlas_low1', 0.0=
7421875,0.50390625,0.13671875,0.56640625)
+TexAtlas_RegisterMatTransform('tex_pylon', 'tex_atlas_low1', 0.14453125,0.=
50390625,0.20703125,0.56640625)
+TexAtlas_RegisterMatTransform('tex_260', 'tex_atlas_low1', 0.21484375,0.50=
390625,0.27734375,0.56640625)
+TexAtlas_RegisterMatTransform('tex_534', 'tex_atlas_low1', 0.28515625,0.50=
390625,0.34765625,0.56640625)
+TexAtlas_RegisterMatTransform('tex_200', 'tex_atlas_low1', 0.35546875,0.50=
390625,0.41796875,0.56640625)
+TexAtlas_RegisterMatTransform('tex_24', 'tex_atlas_low1', 0.42578125,0.503=
90625,0.45703125,0.56640625)
+TexAtlas_RegisterMatTransform('tex_elven_table', 'tex_atlas_low1', 0.46484=
375,0.50390625,0.52734375,0.56640625)
+TexAtlas_RegisterMatTransform('tex_477', 'tex_atlas_low1', 0.53515625,0.50=
390625,0.59765625,0.56640625)
+TexAtlas_RegisterMatTransform('tex_230', 'tex_atlas_low1', 0.60546875,0.50=
390625,0.66796875,0.56640625)
+TexAtlas_RegisterMatTransform('tex_246', 'tex_atlas_low1', 0.67578125,0.50=
390625,0.73828125,0.56640625)
+TexAtlas_RegisterMatTransform('tex_327', 'tex_atlas_low1', 0.74609375,0.50=
390625,0.80859375,0.56640625)
+TexAtlas_RegisterMatTransform('tex_496', 'tex_atlas_low1', 0.81640625,0.50=
390625,0.87890625,0.56640625)
+TexAtlas_RegisterMatTransform('tex_555', 'tex_atlas_low1', 0.88671875,0.50=
390625,0.94921875,0.56640625)
+TexAtlas_RegisterMatTransform('tex_45', 'tex_atlas_low1', 0.95703125,0.503=
90625,0.98828125,0.56640625)
+TexAtlas_RegisterMatTransform('tex_66', 'tex_atlas_low1', 0.00390625,0.574=
21875,0.03515625,0.63671875)
+TexAtlas_RegisterMatTransform('tex_346', 'tex_atlas_low1', 0.04296875,0.57=
421875,0.10546875,0.63671875)
+TexAtlas_RegisterMatTransform('tex_546', 'tex_atlas_low1', 0.11328125,0.57=
421875,0.17578125,0.63671875)
+TexAtlas_RegisterMatTransform('tex_232', 'tex_atlas_low1', 0.18359375,0.57=
421875,0.24609375,0.63671875)
+TexAtlas_RegisterMatTransform('tex_20', 'tex_atlas_low1', 0.25390625,0.574=
21875,0.31640625,0.63671875)
+TexAtlas_RegisterMatTransform('tex_219', 'tex_atlas_low1', 0.32421875,0.57=
421875,0.38671875,0.63671875)
+TexAtlas_RegisterMatTransform('tex_482', 'tex_atlas_low1', 0.39453125,0.57=
421875,0.45703125,0.63671875)
+TexAtlas_RegisterMatTransform('tex_209', 'tex_atlas_low1', 0.46484375,0.57=
421875,0.52734375,0.63671875)
+TexAtlas_RegisterMatTransform('tex_537', 'tex_atlas_low1', 0.53515625,0.57=
421875,0.59765625,0.63671875)
+TexAtlas_RegisterMatTransform('tex_220', 'tex_atlas_low1', 0.60546875,0.57=
421875,0.66796875,0.63671875)
+TexAtlas_RegisterMatTransform('tex_422', 'tex_atlas_low1', 0.67578125,0.57=
421875,0.73828125,0.63671875)
+TexAtlas_RegisterMatTransform('tex_portrait', 'tex_atlas_low1', 0.74609375=
,0.57421875,0.80859375,0.63671875)
+TexAtlas_RegisterMatTransform('tex_313', 'tex_atlas_low1', 0.81640625,0.57=
421875,0.87890625,0.63671875)
+TexAtlas_RegisterMatTransform('tex_13', 'tex_atlas_low1', 0.88671875,0.574=
21875,0.94921875,0.63671875)
+TexAtlas_RegisterMatTransform('tex_511', 'tex_atlas_low1', 0.00390625,0.64=
453125,0.06640625,0.70703125)
+TexAtlas_RegisterMatTransform('tex_536', 'tex_atlas_low1', 0.07421875,0.64=
453125,0.13671875,0.70703125)
+TexAtlas_RegisterMatTransform('tex_221', 'tex_atlas_low1', 0.14453125,0.64=
453125,0.20703125,0.70703125)
+TexAtlas_RegisterMatTransform('tex_472', 'tex_atlas_low1', 0.21484375,0.64=
453125,0.24609375,0.70703125)
+TexAtlas_RegisterMatTransform('tex_467', 'tex_atlas_low1', 0.25390625,0.64=
453125,0.31640625,0.70703125)
+TexAtlas_RegisterMatTransform('tex_58', 'tex_atlas_low1', 0.32421875,0.644=
53125,0.35546875,0.70703125)
+TexAtlas_RegisterMatTransform('tex_armoire_2639', 'tex_atlas_low1', 0.3632=
8125,0.64453125,0.42578125,0.70703125)
+TexAtlas_RegisterMatTransform('tex_228', 'tex_atlas_low1', 0.43359375,0.64=
453125,0.49609375,0.70703125)
+TexAtlas_RegisterMatTransform('tex_495', 'tex_atlas_low1', 0.50390625,0.64=
453125,0.56640625,0.70703125)
+TexAtlas_RegisterMatTransform('tex_253', 'tex_atlas_low1', 0.57421875,0.64=
453125,0.63671875,0.70703125)
+TexAtlas_RegisterMatTransform('tex_389', 'tex_atlas_low1', 0.64453125,0.64=
453125,0.70703125,0.70703125)
+TexAtlas_RegisterMatTransform('tex_375', 'tex_atlas_low1', 0.71484375,0.64=
453125,0.74609375,0.70703125)
+TexAtlas_RegisterMatTransform('tex_27', 'tex_atlas_low1', 0.75390625,0.644=
53125,0.81640625,0.70703125)
+TexAtlas_RegisterMatTransform('tex_355', 'tex_atlas_low1', 0.82421875,0.64=
453125,0.85546875,0.70703125)
+TexAtlas_RegisterMatTransform('tex_63', 'tex_atlas_low1', 0.86328125,0.644=
53125,0.89453125,0.70703125)
+TexAtlas_RegisterMatTransform('tex_558', 'tex_atlas_low1', 0.90234375,0.64=
453125,0.93359375,0.70703125)
+TexAtlas_RegisterMatTransform('tex_376', 'tex_atlas_low1', 0.00390625,0.71=
484375,0.06640625,0.77734375)
+TexAtlas_RegisterMatTransform('tex_334', 'tex_atlas_low1', 0.07421875,0.71=
484375,0.13671875,0.77734375)
+TexAtlas_RegisterMatTransform('tex_125', 'tex_atlas_low1', 0.00390625,0.78=
515625,0.06640625,0.81640625)
+TexAtlas_RegisterMatTransform('tex_161', 'tex_atlas_low1', 0.07421875,0.78=
515625,0.13671875,0.81640625)
+TexAtlas_RegisterMatTransform('tex_136', 'tex_atlas_low1', 0.14453125,0.78=
515625,0.20703125,0.81640625)
+TexAtlas_RegisterMatTransform('tex_36', 'tex_atlas_low1', 0.21484375,0.785=
15625,0.27734375,0.81640625)
+TexAtlas_RegisterMatTransform('tex_483', 'tex_atlas_low1', 0.28515625,0.78=
515625,0.34765625,0.81640625)
+TexAtlas_RegisterMatTransform('tex_571', 'tex_atlas_low1', 0.35546875,0.78=
515625,0.41796875,0.81640625)
+TexAtlas_RegisterMatTransform('tex_147', 'tex_atlas_low1', 0.42578125,0.78=
515625,0.48828125,0.81640625)
+TexAtlas_RegisterMatTransform('tex_132', 'tex_atlas_low1', 0.49609375,0.78=
515625,0.55859375,0.81640625)
+TexAtlas_RegisterMatTransform('tex_157', 'tex_atlas_low1', 0.56640625,0.78=
515625,0.62890625,0.81640625)
+TexAtlas_RegisterMatTransform('tex_130', 'tex_atlas_low1', 0.63671875,0.78=
515625,0.69921875,0.81640625)
+TexAtlas_RegisterMatTransform('tex_251', 'tex_atlas_low1', 0.70703125,0.78=
515625,0.76953125,0.81640625)
+TexAtlas_RegisterMatTransform('tex_142', 'tex_atlas_low1', 0.77734375,0.78=
515625,0.83984375,0.81640625)
+TexAtlas_RegisterMatTransform('tex_23', 'tex_atlas_low1', 0.84765625,0.785=
15625,0.91015625,0.81640625)
+TexAtlas_RegisterMatTransform('tex_154', 'tex_atlas_low1', 0.91796875,0.78=
515625,0.98046875,0.81640625)
+TexAtlas_RegisterMatTransform('tex_168', 'tex_atlas_low1', 0.00390625,0.82=
421875,0.06640625,0.85546875)
+TexAtlas_RegisterMatTransform('tex_564', 'tex_atlas_low1', 0.07421875,0.82=
421875,0.13671875,0.85546875)
+TexAtlas_RegisterMatTransform('tex_133', 'tex_atlas_low1', 0.14453125,0.82=
421875,0.20703125,0.85546875)
+TexAtlas_RegisterMatTransform('tex_167', 'tex_atlas_low1', 0.21484375,0.82=
421875,0.27734375,0.85546875)
+TexAtlas_RegisterMatTransform('tex_158', 'tex_atlas_low1', 0.28515625,0.82=
421875,0.34765625,0.85546875)
+TexAtlas_RegisterMatTransform('tex_134', 'tex_atlas_low1', 0.35546875,0.82=
421875,0.41796875,0.85546875)
+TexAtlas_RegisterMatTransform('tex_148', 'tex_atlas_low1', 0.42578125,0.82=
421875,0.48828125,0.85546875)
+TexAtlas_RegisterMatTransform('tex_143', 'tex_atlas_low1', 0.49609375,0.82=
421875,0.55859375,0.85546875)
+TexAtlas_RegisterMatTransform('tex_572', 'tex_atlas_low1', 0.56640625,0.82=
421875,0.62890625,0.85546875)
+TexAtlas_RegisterMatTransform('tex_25', 'tex_atlas_low1', 0.63671875,0.824=
21875,0.69921875,0.85546875)
+TexAtlas_RegisterMatTransform('tex_250', 'tex_atlas_low1', 0.70703125,0.82=
421875,0.76953125,0.85546875)
+TexAtlas_RegisterMatTransform('tex_126', 'tex_atlas_low1', 0.77734375,0.82=
421875,0.83984375,0.85546875)
+TexAtlas_RegisterMatTransform('tex_159', 'tex_atlas_low1', 0.84765625,0.82=
421875,0.91015625,0.85546875)
+TexAtlas_RegisterMatTransform('tex_523', 'tex_atlas_low1', 0.91796875,0.82=
421875,0.98046875,0.85546875)
+TexAtlas_RegisterMatTransform('tex_137', 'tex_atlas_low1', 0.00390625,0.86=
328125,0.06640625,0.89453125)
+TexAtlas_RegisterMatTransform('tex_128', 'tex_atlas_low1', 0.07421875,0.86=
328125,0.13671875,0.89453125)
+TexAtlas_RegisterMatTransform('tex_144', 'tex_atlas_low1', 0.14453125,0.86=
328125,0.20703125,0.89453125)
+TexAtlas_RegisterMatTransform('tex_162', 'tex_atlas_low1', 0.21484375,0.86=
328125,0.27734375,0.89453125)
+TexAtlas_RegisterMatTransform('tex_135', 'tex_atlas_low1', 0.28515625,0.86=
328125,0.34765625,0.89453125)
+TexAtlas_RegisterMatTransform('tex_150', 'tex_atlas_low1', 0.35546875,0.86=
328125,0.41796875,0.89453125)
+TexAtlas_RegisterMatTransform('tex_256', 'tex_atlas_low1', 0.42578125,0.86=
328125,0.48828125,0.89453125)
+TexAtlas_RegisterMatTransform('tex_139', 'tex_atlas_low1', 0.49609375,0.86=
328125,0.55859375,0.89453125)
+TexAtlas_RegisterMatTransform('tex_149', 'tex_atlas_low1', 0.56640625,0.86=
328125,0.62890625,0.89453125)
+TexAtlas_RegisterMatTransform('tex_138', 'tex_atlas_low1', 0.63671875,0.86=
328125,0.69921875,0.89453125)
+TexAtlas_RegisterMatTransform('tex_561', 'tex_atlas_low1', 0.70703125,0.86=
328125,0.76953125,0.89453125)
+TexAtlas_RegisterMatTransform('tex_70', 'tex_atlas_low1', 0.77734375,0.863=
28125,0.83984375,0.89453125)
+TexAtlas_RegisterMatTransform('tex_127', 'tex_atlas_low1', 0.84765625,0.86=
328125,0.91015625,0.89453125)
+TexAtlas_RegisterMatTransform('tex_146', 'tex_atlas_low1', 0.91796875,0.86=
328125,0.98046875,0.89453125)
+TexAtlas_RegisterMatTransform('tex_166', 'tex_atlas_low1', 0.00390625,0.90=
234375,0.06640625,0.93359375)
+TexAtlas_RegisterMatTransform('tex_141', 'tex_atlas_low1', 0.07421875,0.90=
234375,0.13671875,0.93359375)
+TexAtlas_RegisterMatTransform('tex_131', 'tex_atlas_low1', 0.14453125,0.90=
234375,0.20703125,0.93359375)
+TexAtlas_RegisterMatTransform('tex_129', 'tex_atlas_low1', 0.21484375,0.90=
234375,0.27734375,0.93359375)
+TexAtlas_RegisterMatTransform('tex_140', 'tex_atlas_low1', 0.28515625,0.90=
234375,0.34765625,0.93359375)
+TexAtlas_RegisterMatTransform('tex_170', 'tex_atlas_low1', 0.35546875,0.90=
234375,0.41796875,0.93359375)
+TexAtlas_RegisterMatTransform('tex_484', 'tex_atlas_low1', 0.42578125,0.90=
234375,0.48828125,0.93359375)
+TexAtlas_RegisterMatTransform('tex_3', 'tex_atlas_low1', 0.49609375,0.9023=
4375,0.55859375,0.93359375)
+TexAtlas_RegisterMatTransform('tex_171', 'tex_atlas_low1', 0.56640625,0.90=
234375,0.62890625,0.93359375)
+TexAtlas_RegisterMatTransform('tex_124', 'tex_atlas_low1', 0.63671875,0.90=
234375,0.69921875,0.93359375)
+TexAtlas_RegisterMatTransform('tex_152', 'tex_atlas_low1', 0.70703125,0.90=
234375,0.76953125,0.93359375)
+TexAtlas_RegisterMatTransform('tex_169', 'tex_atlas_low1', 0.77734375,0.90=
234375,0.83984375,0.93359375)
+TexAtlas_RegisterMatTransform('tex_113', 'tex_atlas_low1', 0.84765625,0.90=
234375,0.91015625,0.93359375)
+TexAtlas_RegisterMatTransform('tex_110', 'tex_atlas_low1', 0.91796875,0.90=
234375,0.98046875,0.93359375)
+TexAtlas_RegisterMatTransform('tex_145', 'tex_atlas_low1', 0.00390625,0.94=
140625,0.06640625,0.97265625)
+TexAtlas_RegisterMatTransform('tex_286', 'tex_atlas_low1', 0.07421875,0.94=
140625,0.13671875,0.97265625)
+TexAtlas_RegisterMatTransform('tex_247', 'tex_atlas_low1', 0.00390625,0.98=
046875,0.06640625,0.99609375)
+TexAtlas_RegisterMatTransform('tex_249', 'tex_atlas_low1', 0.07421875,0.98=
046875,0.13671875,0.99609375)
+TexAtlas_RegisterMatTransform('tex_248', 'tex_atlas_low1', 0.14453125,0.98=
046875,0.20703125,0.99609375)
+TexAtlas_RegisterMatTransform('tex_563', 'tex_atlas_low1', 0.21484375,0.98=
046875,0.27734375,0.99609375)
+TexAtlas_RegisterMatTransform('tex_32', 'tex_atlas_low1', 0.28515625,0.980=
46875,0.34765625,0.99609375)
+TexAtlas_RegisterMatTransform('tex_21', 'tex_atlas_low1', 0.35546875,0.980=
46875,0.41796875,0.99609375)
+TexAtlas_RegisterMatTransform('tex_107', 'tex_atlas_low1', 0.42578125,0.98=
046875,0.48828125,0.99609375)
+TexAtlas_RegisterMatTransform('tex_108', 'tex_atlas_low1', 0.49609375,0.98=
046875,0.55859375,0.99609375)
+TexAtlas_RegisterMatTransform('tex_174', 'tex_atlas_low1', 0.56640625,0.98=
046875,0.62890625,0.99609375)
+TexAtlas_RegisterMatTransform('tex_30', 'tex_atlas_low1', 0.63671875,0.980=
46875,0.69921875,0.99609375)
+TexAtlas_RegisterMatTransform('tex_31', 'tex_atlas_low1', 0.70703125,0.980=
46875,0.76953125,0.99609375)

Modified: trunk/data/models/atlas/tex_atlas_low0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_low0.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_low1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_low1.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_med.lua (original)
+++ trunk/data/models/atlas/tex_atlas_med.lua Thu Aug 21 07:16:51 2008
@@ -113,91 +113,95 @@
 TexAtlas_RegisterMatTransform('tex_15', 'tex_atlas_med1', 0.392578125,0.65=
0390625,0.517578125,0.775390625)
 TexAtlas_RegisterMatTransform('tex_550', 'tex_atlas_med1', 0.521484375,0.6=
50390625,0.646484375,0.775390625)
 TexAtlas_RegisterMatTransform('tex_marblewall', 'tex_atlas_med1', 0.650390=
625,0.650390625,0.775390625,0.775390625)
-TexAtlas_RegisterMatTransform('tex_271', 'tex_atlas_med1', 0.779296875,0.6=
50390625,0.904296875,0.775390625)
-TexAtlas_RegisterMatTransform('tex_279', 'tex_atlas_med1', 0.001953125,0.7=
79296875,0.126953125,0.904296875)
-TexAtlas_RegisterMatTransform('tex_458', 'tex_atlas_med1', 0.130859375,0.7=
79296875,0.193359375,0.904296875)
-TexAtlas_RegisterMatTransform('tex_539', 'tex_atlas_med1', 0.197265625,0.7=
79296875,0.322265625,0.904296875)
-TexAtlas_RegisterMatTransform('tex_459', 'tex_atlas_med1', 0.326171875,0.7=
79296875,0.451171875,0.904296875)
-TexAtlas_RegisterMatTransform('tex_100', 'tex_atlas_med1', 0.455078125,0.7=
79296875,0.517578125,0.904296875)
-TexAtlas_RegisterMatTransform('tex_71', 'tex_atlas_med1', 0.521484375,0.77=
9296875,0.583984375,0.904296875)
-TexAtlas_RegisterMatTransform('tex_6', 'tex_atlas_med1', 0.587890625,0.779=
296875,0.712890625,0.904296875)
-TexAtlas_RegisterMatTransform('tex_412', 'tex_atlas_med1', 0.716796875,0.7=
79296875,0.841796875,0.904296875)
-TexAtlas_RegisterMatTransform('tex_56', 'tex_atlas_med1', 0.845703125,0.77=
9296875,0.908203125,0.904296875)
-TexAtlas_RegisterMatTransform('tex_277', 'tex_atlas_med2', 0.001953125,0.0=
05859375,0.126953125,0.130859375)
-TexAtlas_RegisterMatTransform('tex_42', 'tex_atlas_med2', 0.130859375,0.00=
5859375,0.193359375,0.130859375)
-TexAtlas_RegisterMatTransform('tex_flowers2', 'tex_atlas_med2', 0.19726562=
5,0.005859375,0.322265625,0.130859375)
-TexAtlas_RegisterMatTransform('tex_567', 'tex_atlas_med2', 0.326171875,0.0=
05859375,0.388671875,0.130859375)
-TexAtlas_RegisterMatTransform('tex_373', 'tex_atlas_med2', 0.392578125,0.0=
05859375,0.423828125,0.130859375)
-TexAtlas_RegisterMatTransform('tex_518', 'tex_atlas_med2', 0.427734375,0.0=
05859375,0.552734375,0.130859375)
-TexAtlas_RegisterMatTransform('tex_278', 'tex_atlas_med2', 0.556640625,0.0=
05859375,0.681640625,0.130859375)
-TexAtlas_RegisterMatTransform('tex_538', 'tex_atlas_med2', 0.685546875,0.0=
05859375,0.810546875,0.130859375)
-TexAtlas_RegisterMatTransform('tex_sattel', 'tex_atlas_med2', 0.814453125,=
0.005859375,0.939453125,0.130859375)
-TexAtlas_RegisterMatTransform('tex_8', 'tex_atlas_med2', 0.001953125,0.134=
765625,0.126953125,0.259765625)
-TexAtlas_RegisterMatTransform('tex_atlas_william', 'tex_atlas_med2', 0.130=
859375,0.134765625,0.255859375,0.259765625)
-TexAtlas_RegisterMatTransform('tex_89', 'tex_atlas_med2', 0.259765625,0.13=
4765625,0.275390625,0.259765625)
-TexAtlas_RegisterMatTransform('tex_91', 'tex_atlas_med2', 0.279296875,0.13=
4765625,0.341796875,0.259765625)
-TexAtlas_RegisterMatTransform('tex_palmbark', 'tex_atlas_med2', 0.34570312=
5,0.134765625,0.470703125,0.259765625)
-TexAtlas_RegisterMatTransform('tex_411', 'tex_atlas_med2', 0.474609375,0.1=
34765625,0.599609375,0.259765625)
-TexAtlas_RegisterMatTransform('tex_423', 'tex_atlas_med2', 0.603515625,0.1=
34765625,0.728515625,0.259765625)
-TexAtlas_RegisterMatTransform('tex_60', 'tex_atlas_med2', 0.732421875,0.13=
4765625,0.794921875,0.259765625)
-TexAtlas_RegisterMatTransform('tex_509', 'tex_atlas_med2', 0.798828125,0.1=
34765625,0.923828125,0.259765625)
-TexAtlas_RegisterMatTransform('tex_470', 'tex_atlas_med2', 0.001953125,0.2=
63671875,0.126953125,0.388671875)
-TexAtlas_RegisterMatTransform('tex_111', 'tex_atlas_med2', 0.130859375,0.2=
63671875,0.255859375,0.388671875)
-TexAtlas_RegisterMatTransform('tex_102', 'tex_atlas_med2', 0.259765625,0.2=
63671875,0.291015625,0.388671875)
-TexAtlas_RegisterMatTransform('tex_460', 'tex_atlas_med2', 0.294921875,0.2=
63671875,0.419921875,0.388671875)
-TexAtlas_RegisterMatTransform('tex_38', 'tex_atlas_med2', 0.423828125,0.26=
3671875,0.486328125,0.388671875)
-TexAtlas_RegisterMatTransform('tex_79', 'tex_atlas_med2', 0.490234375,0.26=
3671875,0.552734375,0.388671875)
-TexAtlas_RegisterMatTransform('tex_18', 'tex_atlas_med2', 0.556640625,0.26=
3671875,0.681640625,0.388671875)
-TexAtlas_RegisterMatTransform('tex_181', 'tex_atlas_med2', 0.685546875,0.2=
63671875,0.748046875,0.388671875)
-TexAtlas_RegisterMatTransform('tex_347', 'tex_atlas_med2', 0.751953125,0.2=
63671875,0.876953125,0.388671875)
-TexAtlas_RegisterMatTransform('tex_276', 'tex_atlas_med2', 0.001953125,0.3=
92578125,0.126953125,0.517578125)
-TexAtlas_RegisterMatTransform('tex_vase', 'tex_atlas_med2', 0.130859375,0.=
392578125,0.255859375,0.517578125)
-TexAtlas_RegisterMatTransform('tex_mud', 'tex_atlas_med2', 0.259765625,0.3=
92578125,0.384765625,0.517578125)
-TexAtlas_RegisterMatTransform('tex_34', 'tex_atlas_med2', 0.388671875,0.39=
2578125,0.451171875,0.517578125)
-TexAtlas_RegisterMatTransform('tex_478', 'tex_atlas_med2', 0.455078125,0.3=
92578125,0.580078125,0.517578125)
-TexAtlas_RegisterMatTransform('tex_78', 'tex_atlas_med2', 0.583984375,0.39=
2578125,0.646484375,0.517578125)
-TexAtlas_RegisterMatTransform('tex_557', 'tex_atlas_med2', 0.650390625,0.3=
92578125,0.712890625,0.517578125)
-TexAtlas_RegisterMatTransform('tex_415', 'tex_atlas_med2', 0.716796875,0.3=
92578125,0.841796875,0.517578125)
-TexAtlas_RegisterMatTransform('tex_5351', 'tex_atlas_med2', 0.845703125,0.=
392578125,0.970703125,0.517578125)
-TexAtlas_RegisterMatTransform('tex_99', 'tex_atlas_med2', 0.001953125,0.52=
1484375,0.064453125,0.646484375)
-TexAtlas_RegisterMatTransform('tex_449', 'tex_atlas_med2', 0.068359375,0.5=
21484375,0.193359375,0.646484375)
-TexAtlas_RegisterMatTransform('tex_120', 'tex_atlas_med2', 0.197265625,0.5=
21484375,0.322265625,0.646484375)
-TexAtlas_RegisterMatTransform('tex_273', 'tex_atlas_med2', 0.326171875,0.5=
21484375,0.451171875,0.646484375)
-TexAtlas_RegisterMatTransform('tex_55', 'tex_atlas_med2', 0.455078125,0.52=
1484375,0.517578125,0.646484375)
-TexAtlas_RegisterMatTransform('tex_414', 'tex_atlas_med2', 0.521484375,0.5=
21484375,0.646484375,0.646484375)
-TexAtlas_RegisterMatTransform('tex_404', 'tex_atlas_med2', 0.650390625,0.5=
21484375,0.775390625,0.646484375)
-TexAtlas_RegisterMatTransform('tex_101', 'tex_atlas_med2', 0.779296875,0.5=
21484375,0.810546875,0.646484375)
-TexAtlas_RegisterMatTransform('tex_armoire_2637', 'tex_atlas_med2', 0.8144=
53125,0.521484375,0.939453125,0.646484375)
-TexAtlas_RegisterMatTransform('tex_12', 'tex_atlas_med2', 0.001953125,0.65=
0390625,0.126953125,0.775390625)
-TexAtlas_RegisterMatTransform('tex_457', 'tex_atlas_med2', 0.130859375,0.6=
50390625,0.255859375,0.775390625)
-TexAtlas_RegisterMatTransform('tex_74', 'tex_atlas_med2', 0.259765625,0.65=
0390625,0.322265625,0.775390625)
-TexAtlas_RegisterMatTransform('tex_37', 'tex_atlas_med2', 0.326171875,0.65=
0390625,0.388671875,0.775390625)
-TexAtlas_RegisterMatTransform('tex_pylon', 'tex_atlas_med2', 0.392578125,0=
.650390625,0.517578125,0.775390625)
-TexAtlas_RegisterMatTransform('tex_534', 'tex_atlas_med2', 0.521484375,0.6=
50390625,0.646484375,0.775390625)
-TexAtlas_RegisterMatTransform('tex_24', 'tex_atlas_med2', 0.650390625,0.65=
0390625,0.712890625,0.775390625)
-TexAtlas_RegisterMatTransform('tex_45', 'tex_atlas_med2', 0.716796875,0.65=
0390625,0.779296875,0.775390625)
-TexAtlas_RegisterMatTransform('tex_66', 'tex_atlas_med2', 0.783203125,0.65=
0390625,0.845703125,0.775390625)
-TexAtlas_RegisterMatTransform('tex_346', 'tex_atlas_med2', 0.849609375,0.6=
50390625,0.974609375,0.775390625)
-TexAtlas_RegisterMatTransform('tex_546', 'tex_atlas_med2', 0.001953125,0.7=
79296875,0.126953125,0.904296875)
-TexAtlas_RegisterMatTransform('tex_20', 'tex_atlas_med2', 0.130859375,0.77=
9296875,0.255859375,0.904296875)
-TexAtlas_RegisterMatTransform('tex_219', 'tex_atlas_med2', 0.259765625,0.7=
79296875,0.384765625,0.904296875)
-TexAtlas_RegisterMatTransform('tex_482', 'tex_atlas_med2', 0.388671875,0.7=
79296875,0.513671875,0.904296875)
-TexAtlas_RegisterMatTransform('tex_537', 'tex_atlas_med2', 0.517578125,0.7=
79296875,0.642578125,0.904296875)
-TexAtlas_RegisterMatTransform('tex_422', 'tex_atlas_med2', 0.646484375,0.7=
79296875,0.771484375,0.904296875)
-TexAtlas_RegisterMatTransform('tex_portrait', 'tex_atlas_med2', 0.77539062=
5,0.779296875,0.900390625,0.904296875)
-TexAtlas_RegisterMatTransform('tex_13', 'tex_atlas_med3', 0.001953125,0.00=
5859375,0.126953125,0.130859375)
-TexAtlas_RegisterMatTransform('tex_511', 'tex_atlas_med3', 0.130859375,0.0=
05859375,0.255859375,0.130859375)
-TexAtlas_RegisterMatTransform('tex_536', 'tex_atlas_med3', 0.259765625,0.0=
05859375,0.384765625,0.130859375)
-TexAtlas_RegisterMatTransform('tex_472', 'tex_atlas_med3', 0.388671875,0.0=
05859375,0.451171875,0.130859375)
-TexAtlas_RegisterMatTransform('tex_467', 'tex_atlas_med3', 0.455078125,0.0=
05859375,0.580078125,0.130859375)
-TexAtlas_RegisterMatTransform('tex_58', 'tex_atlas_med3', 0.583984375,0.00=
5859375,0.646484375,0.130859375)
-TexAtlas_RegisterMatTransform('tex_armoire_2639', 'tex_atlas_med3', 0.6503=
90625,0.005859375,0.775390625,0.130859375)
-TexAtlas_RegisterMatTransform('tex_253', 'tex_atlas_med3', 0.779296875,0.0=
05859375,0.904296875,0.130859375)
-TexAtlas_RegisterMatTransform('tex_375', 'tex_atlas_med3', 0.908203125,0.0=
05859375,0.970703125,0.130859375)
-TexAtlas_RegisterMatTransform('tex_355', 'tex_atlas_med3', 0.001953125,0.1=
34765625,0.064453125,0.259765625)
-TexAtlas_RegisterMatTransform('tex_63', 'tex_atlas_med3', 0.068359375,0.13=
4765625,0.130859375,0.259765625)
-TexAtlas_RegisterMatTransform('tex_558', 'tex_atlas_med3', 0.134765625,0.1=
34765625,0.197265625,0.259765625)
-TexAtlas_RegisterMatTransform('tex_376', 'tex_atlas_med3', 0.201171875,0.1=
34765625,0.326171875,0.259765625)
+TexAtlas_RegisterMatTransform('tex_orccart', 'tex_atlas_med1', 0.779296875=
,0.650390625,0.904296875,0.775390625)
+TexAtlas_RegisterMatTransform('tex_271', 'tex_atlas_med1', 0.001953125,0.7=
79296875,0.126953125,0.904296875)
+TexAtlas_RegisterMatTransform('tex_279', 'tex_atlas_med1', 0.130859375,0.7=
79296875,0.255859375,0.904296875)
+TexAtlas_RegisterMatTransform('tex_458', 'tex_atlas_med1', 0.259765625,0.7=
79296875,0.322265625,0.904296875)
+TexAtlas_RegisterMatTransform('tex_539', 'tex_atlas_med1', 0.326171875,0.7=
79296875,0.451171875,0.904296875)
+TexAtlas_RegisterMatTransform('tex_459', 'tex_atlas_med1', 0.455078125,0.7=
79296875,0.580078125,0.904296875)
+TexAtlas_RegisterMatTransform('tex_100', 'tex_atlas_med1', 0.583984375,0.7=
79296875,0.646484375,0.904296875)
+TexAtlas_RegisterMatTransform('tex_71', 'tex_atlas_med1', 0.650390625,0.77=
9296875,0.712890625,0.904296875)
+TexAtlas_RegisterMatTransform('tex_6', 'tex_atlas_med1', 0.716796875,0.779=
296875,0.841796875,0.904296875)
+TexAtlas_RegisterMatTransform('tex_412', 'tex_atlas_med1', 0.845703125,0.7=
79296875,0.970703125,0.904296875)
+TexAtlas_RegisterMatTransform('tex_56', 'tex_atlas_med2', 0.001953125,0.00=
5859375,0.064453125,0.130859375)
+TexAtlas_RegisterMatTransform('tex_277', 'tex_atlas_med2', 0.068359375,0.0=
05859375,0.193359375,0.130859375)
+TexAtlas_RegisterMatTransform('tex_42', 'tex_atlas_med2', 0.197265625,0.00=
5859375,0.259765625,0.130859375)
+TexAtlas_RegisterMatTransform('tex_flowers2', 'tex_atlas_med2', 0.26367187=
5,0.005859375,0.388671875,0.130859375)
+TexAtlas_RegisterMatTransform('tex_567', 'tex_atlas_med2', 0.392578125,0.0=
05859375,0.455078125,0.130859375)
+TexAtlas_RegisterMatTransform('tex_373', 'tex_atlas_med2', 0.458984375,0.0=
05859375,0.490234375,0.130859375)
+TexAtlas_RegisterMatTransform('tex_518', 'tex_atlas_med2', 0.494140625,0.0=
05859375,0.619140625,0.130859375)
+TexAtlas_RegisterMatTransform('tex_278', 'tex_atlas_med2', 0.623046875,0.0=
05859375,0.748046875,0.130859375)
+TexAtlas_RegisterMatTransform('tex_538', 'tex_atlas_med2', 0.751953125,0.0=
05859375,0.876953125,0.130859375)
+TexAtlas_RegisterMatTransform('tex_sattel', 'tex_atlas_med2', 0.001953125,=
0.134765625,0.126953125,0.259765625)
+TexAtlas_RegisterMatTransform('tex_8', 'tex_atlas_med2', 0.130859375,0.134=
765625,0.255859375,0.259765625)
+TexAtlas_RegisterMatTransform('tex_atlas_william', 'tex_atlas_med2', 0.259=
765625,0.134765625,0.384765625,0.259765625)
+TexAtlas_RegisterMatTransform('tex_89', 'tex_atlas_med2', 0.388671875,0.13=
4765625,0.404296875,0.259765625)
+TexAtlas_RegisterMatTransform('tex_91', 'tex_atlas_med2', 0.408203125,0.13=
4765625,0.470703125,0.259765625)
+TexAtlas_RegisterMatTransform('tex_palmbark', 'tex_atlas_med2', 0.47460937=
5,0.134765625,0.599609375,0.259765625)
+TexAtlas_RegisterMatTransform('tex_411', 'tex_atlas_med2', 0.603515625,0.1=
34765625,0.728515625,0.259765625)
+TexAtlas_RegisterMatTransform('tex_423', 'tex_atlas_med2', 0.732421875,0.1=
34765625,0.857421875,0.259765625)
+TexAtlas_RegisterMatTransform('tex_60', 'tex_atlas_med2', 0.861328125,0.13=
4765625,0.923828125,0.259765625)
+TexAtlas_RegisterMatTransform('tex_509', 'tex_atlas_med2', 0.001953125,0.2=
63671875,0.126953125,0.388671875)
+TexAtlas_RegisterMatTransform('tex_470', 'tex_atlas_med2', 0.130859375,0.2=
63671875,0.255859375,0.388671875)
+TexAtlas_RegisterMatTransform('tex_111', 'tex_atlas_med2', 0.259765625,0.2=
63671875,0.384765625,0.388671875)
+TexAtlas_RegisterMatTransform('tex_102', 'tex_atlas_med2', 0.388671875,0.2=
63671875,0.419921875,0.388671875)
+TexAtlas_RegisterMatTransform('tex_460', 'tex_atlas_med2', 0.423828125,0.2=
63671875,0.548828125,0.388671875)
+TexAtlas_RegisterMatTransform('tex_38', 'tex_atlas_med2', 0.552734375,0.26=
3671875,0.615234375,0.388671875)
+TexAtlas_RegisterMatTransform('tex_79', 'tex_atlas_med2', 0.619140625,0.26=
3671875,0.681640625,0.388671875)
+TexAtlas_RegisterMatTransform('tex_18', 'tex_atlas_med2', 0.685546875,0.26=
3671875,0.810546875,0.388671875)
+TexAtlas_RegisterMatTransform('tex_181', 'tex_atlas_med2', 0.814453125,0.2=
63671875,0.876953125,0.388671875)
+TexAtlas_RegisterMatTransform('tex_347', 'tex_atlas_med2', 0.001953125,0.3=
92578125,0.126953125,0.517578125)
+TexAtlas_RegisterMatTransform('tex_276', 'tex_atlas_med2', 0.130859375,0.3=
92578125,0.255859375,0.517578125)
+TexAtlas_RegisterMatTransform('tex_vase', 'tex_atlas_med2', 0.259765625,0.=
392578125,0.384765625,0.517578125)
+TexAtlas_RegisterMatTransform('tex_mud', 'tex_atlas_med2', 0.388671875,0.3=
92578125,0.513671875,0.517578125)
+TexAtlas_RegisterMatTransform('tex_34', 'tex_atlas_med2', 0.517578125,0.39=
2578125,0.580078125,0.517578125)
+TexAtlas_RegisterMatTransform('tex_478', 'tex_atlas_med2', 0.583984375,0.3=
92578125,0.708984375,0.517578125)
+TexAtlas_RegisterMatTransform('tex_78', 'tex_atlas_med2', 0.712890625,0.39=
2578125,0.775390625,0.517578125)
+TexAtlas_RegisterMatTransform('tex_557', 'tex_atlas_med2', 0.779296875,0.3=
92578125,0.841796875,0.517578125)
+TexAtlas_RegisterMatTransform('tex_415', 'tex_atlas_med2', 0.845703125,0.3=
92578125,0.970703125,0.517578125)
+TexAtlas_RegisterMatTransform('tex_5351', 'tex_atlas_med2', 0.001953125,0.=
521484375,0.126953125,0.646484375)
+TexAtlas_RegisterMatTransform('tex_99', 'tex_atlas_med2', 0.130859375,0.52=
1484375,0.193359375,0.646484375)
+TexAtlas_RegisterMatTransform('tex_449', 'tex_atlas_med2', 0.197265625,0.5=
21484375,0.322265625,0.646484375)
+TexAtlas_RegisterMatTransform('tex_120', 'tex_atlas_med2', 0.326171875,0.5=
21484375,0.451171875,0.646484375)
+TexAtlas_RegisterMatTransform('tex_273', 'tex_atlas_med2', 0.455078125,0.5=
21484375,0.580078125,0.646484375)
+TexAtlas_RegisterMatTransform('tex_55', 'tex_atlas_med2', 0.583984375,0.52=
1484375,0.646484375,0.646484375)
+TexAtlas_RegisterMatTransform('tex_414', 'tex_atlas_med2', 0.650390625,0.5=
21484375,0.775390625,0.646484375)
+TexAtlas_RegisterMatTransform('tex_404', 'tex_atlas_med2', 0.779296875,0.5=
21484375,0.904296875,0.646484375)
+TexAtlas_RegisterMatTransform('tex_101', 'tex_atlas_med2', 0.908203125,0.5=
21484375,0.939453125,0.646484375)
+TexAtlas_RegisterMatTransform('tex_elphlen_ear_plant', 'tex_atlas_med2', 0=
.001953125,0.650390625,0.126953125,0.775390625)
+TexAtlas_RegisterMatTransform('tex_armoire_2637', 'tex_atlas_med2', 0.1308=
59375,0.650390625,0.255859375,0.775390625)
+TexAtlas_RegisterMatTransform('tex_12', 'tex_atlas_med2', 0.259765625,0.65=
0390625,0.384765625,0.775390625)
+TexAtlas_RegisterMatTransform('tex_457', 'tex_atlas_med2', 0.388671875,0.6=
50390625,0.513671875,0.775390625)
+TexAtlas_RegisterMatTransform('tex_74', 'tex_atlas_med2', 0.517578125,0.65=
0390625,0.580078125,0.775390625)
+TexAtlas_RegisterMatTransform('tex_37', 'tex_atlas_med2', 0.583984375,0.65=
0390625,0.646484375,0.775390625)
+TexAtlas_RegisterMatTransform('tex_big_elven_chair', 'tex_atlas_med2', 0.6=
50390625,0.650390625,0.775390625,0.775390625)
+TexAtlas_RegisterMatTransform('tex_pylon', 'tex_atlas_med2', 0.779296875,0=
.650390625,0.904296875,0.775390625)
+TexAtlas_RegisterMatTransform('tex_534', 'tex_atlas_med2', 0.001953125,0.7=
79296875,0.126953125,0.904296875)
+TexAtlas_RegisterMatTransform('tex_24', 'tex_atlas_med2', 0.130859375,0.77=
9296875,0.193359375,0.904296875)
+TexAtlas_RegisterMatTransform('tex_elven_table', 'tex_atlas_med2', 0.19726=
5625,0.779296875,0.322265625,0.904296875)
+TexAtlas_RegisterMatTransform('tex_45', 'tex_atlas_med2', 0.326171875,0.77=
9296875,0.388671875,0.904296875)
+TexAtlas_RegisterMatTransform('tex_66', 'tex_atlas_med2', 0.392578125,0.77=
9296875,0.455078125,0.904296875)
+TexAtlas_RegisterMatTransform('tex_346', 'tex_atlas_med2', 0.458984375,0.7=
79296875,0.583984375,0.904296875)
+TexAtlas_RegisterMatTransform('tex_546', 'tex_atlas_med2', 0.587890625,0.7=
79296875,0.712890625,0.904296875)
+TexAtlas_RegisterMatTransform('tex_20', 'tex_atlas_med2', 0.716796875,0.77=
9296875,0.841796875,0.904296875)
+TexAtlas_RegisterMatTransform('tex_219', 'tex_atlas_med2', 0.845703125,0.7=
79296875,0.970703125,0.904296875)
+TexAtlas_RegisterMatTransform('tex_482', 'tex_atlas_med3', 0.001953125,0.0=
05859375,0.126953125,0.130859375)
+TexAtlas_RegisterMatTransform('tex_537', 'tex_atlas_med3', 0.130859375,0.0=
05859375,0.255859375,0.130859375)
+TexAtlas_RegisterMatTransform('tex_422', 'tex_atlas_med3', 0.259765625,0.0=
05859375,0.384765625,0.130859375)
+TexAtlas_RegisterMatTransform('tex_portrait', 'tex_atlas_med3', 0.38867187=
5,0.005859375,0.513671875,0.130859375)
+TexAtlas_RegisterMatTransform('tex_13', 'tex_atlas_med3', 0.517578125,0.00=
5859375,0.642578125,0.130859375)
+TexAtlas_RegisterMatTransform('tex_511', 'tex_atlas_med3', 0.646484375,0.0=
05859375,0.771484375,0.130859375)
+TexAtlas_RegisterMatTransform('tex_536', 'tex_atlas_med3', 0.775390625,0.0=
05859375,0.900390625,0.130859375)
+TexAtlas_RegisterMatTransform('tex_472', 'tex_atlas_med3', 0.904296875,0.0=
05859375,0.966796875,0.130859375)
+TexAtlas_RegisterMatTransform('tex_467', 'tex_atlas_med3', 0.001953125,0.1=
34765625,0.126953125,0.259765625)
+TexAtlas_RegisterMatTransform('tex_58', 'tex_atlas_med3', 0.130859375,0.13=
4765625,0.193359375,0.259765625)
+TexAtlas_RegisterMatTransform('tex_armoire_2639', 'tex_atlas_med3', 0.1972=
65625,0.134765625,0.322265625,0.259765625)
+TexAtlas_RegisterMatTransform('tex_253', 'tex_atlas_med3', 0.326171875,0.1=
34765625,0.451171875,0.259765625)
+TexAtlas_RegisterMatTransform('tex_375', 'tex_atlas_med3', 0.455078125,0.1=
34765625,0.517578125,0.259765625)
+TexAtlas_RegisterMatTransform('tex_355', 'tex_atlas_med3', 0.521484375,0.1=
34765625,0.583984375,0.259765625)
+TexAtlas_RegisterMatTransform('tex_63', 'tex_atlas_med3', 0.587890625,0.13=
4765625,0.650390625,0.259765625)
+TexAtlas_RegisterMatTransform('tex_558', 'tex_atlas_med3', 0.654296875,0.1=
34765625,0.716796875,0.259765625)
+TexAtlas_RegisterMatTransform('tex_376', 'tex_atlas_med3', 0.720703125,0.1=
34765625,0.845703125,0.259765625)
 TexAtlas_RegisterMatTransform('tex_189', 'tex_atlas_med3', 0.001953125,0.2=
63671875,0.064453125,0.326171875)
 TexAtlas_RegisterMatTransform('tex_125', 'tex_atlas_med3', 0.068359375,0.2=
63671875,0.193359375,0.326171875)
 TexAtlas_RegisterMatTransform('tex_210', 'tex_atlas_med3', 0.197265625,0.2=
63671875,0.259765625,0.326171875)

Modified: trunk/data/models/atlas/tex_atlas_med1.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med1.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med2.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med2.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med3.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_med3.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_ultralow.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/atlas/tex_atlas_ultralow.lua (original)
+++ trunk/data/models/atlas/tex_atlas_ultralow.lua Thu Aug 21 07:16:51 2008
@@ -209,162 +209,166 @@
 TexAtlas_RegisterMatTransform('tex_462', 'tex_atlas_ultralow0', 0.1015625,=
0.4296875,0.1171875,0.4609375)
 TexAtlas_RegisterMatTransform('tex_238', 'tex_atlas_ultralow0', 0.1328125,=
0.4296875,0.1640625,0.4609375)
 TexAtlas_RegisterMatTransform('tex_208', 'tex_atlas_ultralow0', 0.1796875,=
0.4296875,0.2109375,0.4609375)
-TexAtlas_RegisterMatTransform('tex_342', 'tex_atlas_ultralow0', 0.2265625,=
0.4296875,0.2578125,0.4609375)
-TexAtlas_RegisterMatTransform('tex_22', 'tex_atlas_ultralow0', 0.2734375,0=
.4296875,0.3046875,0.4609375)
-TexAtlas_RegisterMatTransform('tex_339', 'tex_atlas_ultralow0', 0.3203125,=
0.4296875,0.3515625,0.4609375)
-TexAtlas_RegisterMatTransform('tex_225', 'tex_atlas_ultralow0', 0.3671875,=
0.4296875,0.3984375,0.4609375)
-TexAtlas_RegisterMatTransform('tex_271', 'tex_atlas_ultralow0', 0.4140625,=
0.4296875,0.4453125,0.4609375)
-TexAtlas_RegisterMatTransform('tex_190', 'tex_atlas_ultralow0', 0.4609375,=
0.4296875,0.4921875,0.4609375)
-TexAtlas_RegisterMatTransform('tex_234', 'tex_atlas_ultralow0', 0.5078125,=
0.4296875,0.5390625,0.4609375)
-TexAtlas_RegisterMatTransform('tex_315', 'tex_atlas_ultralow0', 0.5546875,=
0.4296875,0.5859375,0.4609375)
-TexAtlas_RegisterMatTransform('tex_279', 'tex_atlas_ultralow0', 0.6015625,=
0.4296875,0.6328125,0.4609375)
-TexAtlas_RegisterMatTransform('tex_458', 'tex_atlas_ultralow0', 0.6484375,=
0.4296875,0.6640625,0.4609375)
-TexAtlas_RegisterMatTransform('tex_539', 'tex_atlas_ultralow0', 0.6796875,=
0.4296875,0.7109375,0.4609375)
-TexAtlas_RegisterMatTransform('tex_343', 'tex_atlas_ultralow0', 0.7265625,=
0.4296875,0.7578125,0.4609375)
-TexAtlas_RegisterMatTransform('tex_319', 'tex_atlas_ultralow0', 0.7734375,=
0.4296875,0.8046875,0.4609375)
-TexAtlas_RegisterMatTransform('tex_217', 'tex_atlas_ultralow0', 0.8203125,=
0.4296875,0.8515625,0.4609375)
-TexAtlas_RegisterMatTransform('tex_459', 'tex_atlas_ultralow0', 0.8671875,=
0.4296875,0.8984375,0.4609375)
-TexAtlas_RegisterMatTransform('tex_188', 'tex_atlas_ultralow0', 0.9140625,=
0.4296875,0.9453125,0.4609375)
-TexAtlas_RegisterMatTransform('tex_100', 'tex_atlas_ultralow0', 0.9609375,=
0.4296875,0.9765625,0.4609375)
-TexAtlas_RegisterMatTransform('tex_71', 'tex_atlas_ultralow0', 0.0078125,0=
.4765625,0.0234375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_6', 'tex_atlas_ultralow0', 0.0390625,0.=
4765625,0.0703125,0.5078125)
-TexAtlas_RegisterMatTransform('tex_312', 'tex_atlas_ultralow0', 0.0859375,=
0.4765625,0.1171875,0.5078125)
-TexAtlas_RegisterMatTransform('tex_412', 'tex_atlas_ultralow0', 0.1328125,=
0.4765625,0.1640625,0.5078125)
-TexAtlas_RegisterMatTransform('tex_330', 'tex_atlas_ultralow0', 0.1796875,=
0.4765625,0.2109375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_56', 'tex_atlas_ultralow0', 0.2265625,0=
.4765625,0.2421875,0.5078125)
-TexAtlas_RegisterMatTransform('tex_277', 'tex_atlas_ultralow0', 0.2578125,=
0.4765625,0.2890625,0.5078125)
-TexAtlas_RegisterMatTransform('tex_390', 'tex_atlas_ultralow0', 0.3046875,=
0.4765625,0.3359375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_42', 'tex_atlas_ultralow0', 0.3515625,0=
.4765625,0.3671875,0.5078125)
-TexAtlas_RegisterMatTransform('tex_344', 'tex_atlas_ultralow0', 0.3828125,=
0.4765625,0.4140625,0.5078125)
-TexAtlas_RegisterMatTransform('tex_321', 'tex_atlas_ultralow0', 0.4296875,=
0.4765625,0.4609375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_flowers2', 'tex_atlas_ultralow0', 0.476=
5625,0.4765625,0.5078125,0.5078125)
-TexAtlas_RegisterMatTransform('tex_567', 'tex_atlas_ultralow0', 0.5234375,=
0.4765625,0.5390625,0.5078125)
-TexAtlas_RegisterMatTransform('tex_373', 'tex_atlas_ultralow0', 0.5546875,=
0.4765625,0.5625,0.5078125)
-TexAtlas_RegisterMatTransform('tex_518', 'tex_atlas_ultralow0', 0.578125,0=
.4765625,0.609375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_278', 'tex_atlas_ultralow0', 0.625,0.47=
65625,0.65625,0.5078125)
-TexAtlas_RegisterMatTransform('tex_308', 'tex_atlas_ultralow0', 0.671875,0=
.4765625,0.703125,0.5078125)
-TexAtlas_RegisterMatTransform('tex_538', 'tex_atlas_ultralow0', 0.71875,0.=
4765625,0.75,0.5078125)
-TexAtlas_RegisterMatTransform('tex_sattel', 'tex_atlas_ultralow0', 0.76562=
5,0.4765625,0.796875,0.5078125)
-TexAtlas_RegisterMatTransform('tex_491', 'tex_atlas_ultralow0', 0.8125,0.4=
765625,0.84375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_331', 'tex_atlas_ultralow0', 0.859375,0=
.4765625,0.890625,0.5078125)
-TexAtlas_RegisterMatTransform('tex_8', 'tex_atlas_ultralow0', 0.90625,0.47=
65625,0.9375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_atlas_william', 'tex_atlas_ultralow0', =
0.953125,0.4765625,0.984375,0.5078125)
-TexAtlas_RegisterMatTransform('tex_89', 'tex_atlas_ultralow0', 0.0078125,0=
.5234375,0.01171875,0.5546875)
-TexAtlas_RegisterMatTransform('tex_91', 'tex_atlas_ultralow0', 0.02734375,=
0.5234375,0.04296875,0.5546875)
-TexAtlas_RegisterMatTransform('tex_323', 'tex_atlas_ultralow0', 0.05859375=
,0.5234375,0.08984375,0.5546875)
-TexAtlas_RegisterMatTransform('tex_palmbark', 'tex_atlas_ultralow0', 0.105=
46875,0.5234375,0.13671875,0.5546875)
-TexAtlas_RegisterMatTransform('tex_411', 'tex_atlas_ultralow0', 0.15234375=
,0.5234375,0.18359375,0.5546875)
-TexAtlas_RegisterMatTransform('tex_423', 'tex_atlas_ultralow0', 0.19921875=
,0.5234375,0.23046875,0.5546875)
-TexAtlas_RegisterMatTransform('tex_60', 'tex_atlas_ultralow0', 0.24609375,=
0.5234375,0.26171875,0.5546875)
-TexAtlas_RegisterMatTransform('tex_509', 'tex_atlas_ultralow0', 0.27734375=
,0.5234375,0.30859375,0.5546875)
-TexAtlas_RegisterMatTransform('tex_470', 'tex_atlas_ultralow0', 0.32421875=
,0.5234375,0.35546875,0.5546875)
-TexAtlas_RegisterMatTransform('tex_111', 'tex_atlas_ultralow0', 0.37109375=
,0.5234375,0.40234375,0.5546875)
-TexAtlas_RegisterMatTransform('tex_307', 'tex_atlas_ultralow0', 0.41796875=
,0.5234375,0.44921875,0.5546875)
-TexAtlas_RegisterMatTransform('tex_102', 'tex_atlas_ultralow0', 0.46484375=
,0.5234375,0.47265625,0.5546875)
-TexAtlas_RegisterMatTransform('tex_460', 'tex_atlas_ultralow0', 0.48828125=
,0.5234375,0.51953125,0.5546875)
-TexAtlas_RegisterMatTransform('tex_212', 'tex_atlas_ultralow0', 0.53515625=
,0.5234375,0.56640625,0.5546875)
-TexAtlas_RegisterMatTransform('tex_121', 'tex_atlas_ultralow0', 0.58203125=
,0.5234375,0.61328125,0.5546875)
-TexAtlas_RegisterMatTransform('tex_38', 'tex_atlas_ultralow0', 0.62890625,=
0.5234375,0.64453125,0.5546875)
-TexAtlas_RegisterMatTransform('tex_345', 'tex_atlas_ultralow0', 0.66015625=
,0.5234375,0.69140625,0.5546875)
-TexAtlas_RegisterMatTransform('tex_340', 'tex_atlas_ultralow0', 0.70703125=
,0.5234375,0.73828125,0.5546875)
-TexAtlas_RegisterMatTransform('tex_398', 'tex_atlas_ultralow0', 0.75390625=
,0.5234375,0.78515625,0.5546875)
-TexAtlas_RegisterMatTransform('tex_515', 'tex_atlas_ultralow0', 0.80078125=
,0.5234375,0.83203125,0.5546875)
-TexAtlas_RegisterMatTransform('tex_79', 'tex_atlas_ultralow0', 0.84765625,=
0.5234375,0.86328125,0.5546875)
-TexAtlas_RegisterMatTransform('tex_18', 'tex_atlas_ultralow0', 0.87890625,=
0.5234375,0.91015625,0.5546875)
-TexAtlas_RegisterMatTransform('tex_222', 'tex_atlas_ultralow0', 0.92578125=
,0.5234375,0.95703125,0.5546875)
-TexAtlas_RegisterMatTransform('tex_464', 'tex_atlas_ultralow0', 0.0078125,=
0.5703125,0.0390625,0.6015625)
-TexAtlas_RegisterMatTransform('tex_181', 'tex_atlas_ultralow0', 0.0546875,=
0.5703125,0.0703125,0.6015625)
-TexAtlas_RegisterMatTransform('tex_347', 'tex_atlas_ultralow0', 0.0859375,=
0.5703125,0.1171875,0.6015625)
-TexAtlas_RegisterMatTransform('tex_314', 'tex_atlas_ultralow0', 0.1328125,=
0.5703125,0.1640625,0.6015625)
-TexAtlas_RegisterMatTransform('tex_276', 'tex_atlas_ultralow0', 0.1796875,=
0.5703125,0.2109375,0.6015625)
-TexAtlas_RegisterMatTransform('tex_vase', 'tex_atlas_ultralow0', 0.2265625=
,0.5703125,0.2578125,0.6015625)
-TexAtlas_RegisterMatTransform('tex_mud', 'tex_atlas_ultralow0', 0.2734375,=
0.5703125,0.3046875,0.6015625)
-TexAtlas_RegisterMatTransform('tex_551', 'tex_atlas_ultralow0', 0.3203125,=
0.5703125,0.3515625,0.6015625)
-TexAtlas_RegisterMatTransform('tex_34', 'tex_atlas_ultralow0', 0.3671875,0=
.5703125,0.3828125,0.6015625)
-TexAtlas_RegisterMatTransform('tex_487', 'tex_atlas_ultralow0', 0.3984375,=
0.5703125,0.4140625,0.6015625)
-TexAtlas_RegisterMatTransform('tex_186', 'tex_atlas_ultralow0', 0.4296875,=
0.5703125,0.4609375,0.6015625)
-TexAtlas_RegisterMatTransform('tex_478', 'tex_atlas_ultralow0', 0.4765625,=
0.5703125,0.5078125,0.6015625)
-TexAtlas_RegisterMatTransform('tex_206', 'tex_atlas_ultralow0', 0.5234375,=
0.5703125,0.5546875,0.6015625)
-TexAtlas_RegisterMatTransform('tex_556', 'tex_atlas_ultralow0', 0.5703125,=
0.5703125,0.6015625,0.6015625)
-TexAtlas_RegisterMatTransform('tex_204', 'tex_atlas_ultralow0', 0.6171875,=
0.5703125,0.6484375,0.6015625)
-TexAtlas_RegisterMatTransform('tex_78', 'tex_atlas_ultralow0', 0.6640625,0=
.5703125,0.6796875,0.6015625)
-TexAtlas_RegisterMatTransform('tex_557', 'tex_atlas_ultralow0', 0.6953125,=
0.5703125,0.7109375,0.6015625)
-TexAtlas_RegisterMatTransform('tex_415', 'tex_atlas_ultralow0', 0.7265625,=
0.5703125,0.7578125,0.6015625)
-TexAtlas_RegisterMatTransform('tex_5351', 'tex_atlas_ultralow0', 0.7734375=
,0.5703125,0.8046875,0.6015625)
-TexAtlas_RegisterMatTransform('tex_99', 'tex_atlas_ultralow0', 0.8203125,0=
.5703125,0.8359375,0.6015625)
-TexAtlas_RegisterMatTransform('tex_386', 'tex_atlas_ultralow0', 0.8515625,=
0.5703125,0.8828125,0.6015625)
-TexAtlas_RegisterMatTransform('tex_338', 'tex_atlas_ultralow0', 0.8984375,=
0.5703125,0.9296875,0.6015625)
-TexAtlas_RegisterMatTransform('tex_192', 'tex_atlas_ultralow0', 0.9453125,=
0.5703125,0.9765625,0.6015625)
-TexAtlas_RegisterMatTransform('tex_517', 'tex_atlas_ultralow0', 0.0078125,=
0.6171875,0.0390625,0.6484375)
-TexAtlas_RegisterMatTransform('tex_461', 'tex_atlas_ultralow0', 0.0546875,=
0.6171875,0.0703125,0.6484375)
-TexAtlas_RegisterMatTransform('tex_183', 'tex_atlas_ultralow0', 0.0859375,=
0.6171875,0.1171875,0.6484375)
-TexAtlas_RegisterMatTransform('tex_335', 'tex_atlas_ultralow0', 0.1328125,=
0.6171875,0.1640625,0.6484375)
-TexAtlas_RegisterMatTransform('tex_449', 'tex_atlas_ultralow0', 0.1796875,=
0.6171875,0.2109375,0.6484375)
-TexAtlas_RegisterMatTransform('tex_120', 'tex_atlas_ultralow0', 0.2265625,=
0.6171875,0.2578125,0.6484375)
-TexAtlas_RegisterMatTransform('tex_524', 'tex_atlas_ultralow0', 0.2734375,=
0.6171875,0.3046875,0.6484375)
-TexAtlas_RegisterMatTransform('tex_273', 'tex_atlas_ultralow0', 0.3203125,=
0.6171875,0.3515625,0.6484375)
-TexAtlas_RegisterMatTransform('tex_328', 'tex_atlas_ultralow0', 0.3671875,=
0.6171875,0.3984375,0.6484375)
-TexAtlas_RegisterMatTransform('tex_226', 'tex_atlas_ultralow0', 0.4140625,=
0.6171875,0.4453125,0.6484375)
-TexAtlas_RegisterMatTransform('tex_55', 'tex_atlas_ultralow0', 0.4609375,0=
.6171875,0.4765625,0.6484375)
-TexAtlas_RegisterMatTransform('tex_414', 'tex_atlas_ultralow0', 0.4921875,=
0.6171875,0.5234375,0.6484375)
-TexAtlas_RegisterMatTransform('tex_211', 'tex_atlas_ultralow0', 0.5390625,=
0.6171875,0.5703125,0.6484375)
-TexAtlas_RegisterMatTransform('tex_404', 'tex_atlas_ultralow0', 0.5859375,=
0.6171875,0.6171875,0.6484375)
-TexAtlas_RegisterMatTransform('tex_245', 'tex_atlas_ultralow0', 0.6328125,=
0.6171875,0.6640625,0.6484375)
-TexAtlas_RegisterMatTransform('tex_101', 'tex_atlas_ultralow0', 0.6796875,=
0.6171875,0.6875,0.6484375)
-TexAtlas_RegisterMatTransform('tex_armoire_2637', 'tex_atlas_ultralow0', 0=
.703125,0.6171875,0.734375,0.6484375)
-TexAtlas_RegisterMatTransform('tex_207', 'tex_atlas_ultralow0', 0.75,0.617=
1875,0.78125,0.6484375)
-TexAtlas_RegisterMatTransform('tex_12', 'tex_atlas_ultralow0', 0.796875,0.=
6171875,0.828125,0.6484375)
-TexAtlas_RegisterMatTransform('tex_224', 'tex_atlas_ultralow0', 0.84375,0.=
6171875,0.875,0.6484375)
-TexAtlas_RegisterMatTransform('tex_457', 'tex_atlas_ultralow0', 0.890625,0=
.6171875,0.921875,0.6484375)
-TexAtlas_RegisterMatTransform('tex_258', 'tex_atlas_ultralow0', 0.9375,0.6=
171875,0.96875,0.6484375)
-TexAtlas_RegisterMatTransform('tex_2', 'tex_atlas_ultralow0', 0.0078125,0.=
6640625,0.0390625,0.6953125)
-TexAtlas_RegisterMatTransform('tex_74', 'tex_atlas_ultralow0', 0.0546875,0=
.6640625,0.0703125,0.6953125)
-TexAtlas_RegisterMatTransform('tex_37', 'tex_atlas_ultralow0', 0.0859375,0=
.6640625,0.1015625,0.6953125)
-TexAtlas_RegisterMatTransform('tex_231', 'tex_atlas_ultralow0', 0.1171875,=
0.6640625,0.1484375,0.6953125)
-TexAtlas_RegisterMatTransform('tex_pylon', 'tex_atlas_ultralow0', 0.164062=
5,0.6640625,0.1953125,0.6953125)
-TexAtlas_RegisterMatTransform('tex_260', 'tex_atlas_ultralow0', 0.2109375,=
0.6640625,0.2421875,0.6953125)
-TexAtlas_RegisterMatTransform('tex_534', 'tex_atlas_ultralow0', 0.2578125,=
0.6640625,0.2890625,0.6953125)
-TexAtlas_RegisterMatTransform('tex_200', 'tex_atlas_ultralow0', 0.3046875,=
0.6640625,0.3359375,0.6953125)
-TexAtlas_RegisterMatTransform('tex_24', 'tex_atlas_ultralow0', 0.3515625,0=
.6640625,0.3671875,0.6953125)
-TexAtlas_RegisterMatTransform('tex_477', 'tex_atlas_ultralow0', 0.3828125,=
0.6640625,0.4140625,0.6953125)
-TexAtlas_RegisterMatTransform('tex_230', 'tex_atlas_ultralow0', 0.4296875,=
0.6640625,0.4609375,0.6953125)
-TexAtlas_RegisterMatTransform('tex_246', 'tex_atlas_ultralow0', 0.4765625,=
0.6640625,0.5078125,0.6953125)
-TexAtlas_RegisterMatTransform('tex_327', 'tex_atlas_ultralow0', 0.5234375,=
0.6640625,0.5546875,0.6953125)
-TexAtlas_RegisterMatTransform('tex_496', 'tex_atlas_ultralow0', 0.5703125,=
0.6640625,0.6015625,0.6953125)
-TexAtlas_RegisterMatTransform('tex_555', 'tex_atlas_ultralow0', 0.6171875,=
0.6640625,0.6484375,0.6953125)
-TexAtlas_RegisterMatTransform('tex_45', 'tex_atlas_ultralow0', 0.6640625,0=
.6640625,0.6796875,0.6953125)
-TexAtlas_RegisterMatTransform('tex_66', 'tex_atlas_ultralow0', 0.6953125,0=
.6640625,0.7109375,0.6953125)
-TexAtlas_RegisterMatTransform('tex_346', 'tex_atlas_ultralow0', 0.7265625,=
0.6640625,0.7578125,0.6953125)
-TexAtlas_RegisterMatTransform('tex_546', 'tex_atlas_ultralow0', 0.7734375,=
0.6640625,0.8046875,0.6953125)
-TexAtlas_RegisterMatTransform('tex_232', 'tex_atlas_ultralow0', 0.8203125,=
0.6640625,0.8515625,0.6953125)
-TexAtlas_RegisterMatTransform('tex_20', 'tex_atlas_ultralow0', 0.8671875,0=
.6640625,0.8984375,0.6953125)
-TexAtlas_RegisterMatTransform('tex_219', 'tex_atlas_ultralow0', 0.9140625,=
0.6640625,0.9453125,0.6953125)
-TexAtlas_RegisterMatTransform('tex_482', 'tex_atlas_ultralow0', 0.9609375,=
0.6640625,0.9921875,0.6953125)
-TexAtlas_RegisterMatTransform('tex_209', 'tex_atlas_ultralow0', 0.0078125,=
0.7109375,0.0390625,0.7421875)
-TexAtlas_RegisterMatTransform('tex_537', 'tex_atlas_ultralow0', 0.0546875,=
0.7109375,0.0859375,0.7421875)
-TexAtlas_RegisterMatTransform('tex_220', 'tex_atlas_ultralow0', 0.1015625,=
0.7109375,0.1328125,0.7421875)
-TexAtlas_RegisterMatTransform('tex_422', 'tex_atlas_ultralow0', 0.1484375,=
0.7109375,0.1796875,0.7421875)
-TexAtlas_RegisterMatTransform('tex_portrait', 'tex_atlas_ultralow0', 0.195=
3125,0.7109375,0.2265625,0.7421875)
-TexAtlas_RegisterMatTransform('tex_313', 'tex_atlas_ultralow0', 0.2421875,=
0.7109375,0.2734375,0.7421875)
-TexAtlas_RegisterMatTransform('tex_13', 'tex_atlas_ultralow0', 0.2890625,0=
.7109375,0.3203125,0.7421875)
-TexAtlas_RegisterMatTransform('tex_511', 'tex_atlas_ultralow0', 0.3359375,=
0.7109375,0.3671875,0.7421875)
-TexAtlas_RegisterMatTransform('tex_536', 'tex_atlas_ultralow0', 0.3828125,=
0.7109375,0.4140625,0.7421875)
-TexAtlas_RegisterMatTransform('tex_221', 'tex_atlas_ultralow0', 0.4296875,=
0.7109375,0.4609375,0.7421875)
-TexAtlas_RegisterMatTransform('tex_472', 'tex_atlas_ultralow0', 0.4765625,=
0.7109375,0.4921875,0.7421875)
-TexAtlas_RegisterMatTransform('tex_467', 'tex_atlas_ultralow0', 0.5078125,=
0.7109375,0.5390625,0.7421875)
-TexAtlas_RegisterMatTransform('tex_58', 'tex_atlas_ultralow0', 0.5546875,0=
.7109375,0.5703125,0.7421875)
-TexAtlas_RegisterMatTransform('tex_armoire_2639', 'tex_atlas_ultralow0', 0=
.5859375,0.7109375,0.6171875,0.7421875)
-TexAtlas_RegisterMatTransform('tex_228', 'tex_atlas_ultralow0', 0.6328125,=
0.7109375,0.6640625,0.7421875)
-TexAtlas_RegisterMatTransform('tex_495', 'tex_atlas_ultralow0', 0.6796875,=
0.7109375,0.7109375,0.7421875)
-TexAtlas_RegisterMatTransform('tex_253', 'tex_atlas_ultralow0', 0.7265625,=
0.7109375,0.7578125,0.7421875)
-TexAtlas_RegisterMatTransform('tex_389', 'tex_atlas_ultralow0', 0.7734375,=
0.7109375,0.8046875,0.7421875)
-TexAtlas_RegisterMatTransform('tex_375', 'tex_atlas_ultralow0', 0.8203125,=
0.7109375,0.8359375,0.7421875)
-TexAtlas_RegisterMatTransform('tex_27', 'tex_atlas_ultralow0', 0.8515625,0=
.7109375,0.8828125,0.7421875)
-TexAtlas_RegisterMatTransform('tex_355', 'tex_atlas_ultralow0', 0.8984375,=
0.7109375,0.9140625,0.7421875)
-TexAtlas_RegisterMatTransform('tex_63', 'tex_atlas_ultralow0', 0.9296875,0=
.7109375,0.9453125,0.7421875)
-TexAtlas_RegisterMatTransform('tex_558', 'tex_atlas_ultralow0', 0.9609375,=
0.7109375,0.9765625,0.7421875)
-TexAtlas_RegisterMatTransform('tex_376', 'tex_atlas_ultralow0', 0.0078125,=
0.7578125,0.0390625,0.7890625)
-TexAtlas_RegisterMatTransform('tex_334', 'tex_atlas_ultralow0', 0.0546875,=
0.7578125,0.0859375,0.7890625)
+TexAtlas_RegisterMatTransform('tex_orccart', 'tex_atlas_ultralow0', 0.2265=
625,0.4296875,0.2578125,0.4609375)
+TexAtlas_RegisterMatTransform('tex_342', 'tex_atlas_ultralow0', 0.2734375,=
0.4296875,0.3046875,0.4609375)
+TexAtlas_RegisterMatTransform('tex_22', 'tex_atlas_ultralow0', 0.3203125,0=
.4296875,0.3515625,0.4609375)
+TexAtlas_RegisterMatTransform('tex_339', 'tex_atlas_ultralow0', 0.3671875,=
0.4296875,0.3984375,0.4609375)
+TexAtlas_RegisterMatTransform('tex_225', 'tex_atlas_ultralow0', 0.4140625,=
0.4296875,0.4453125,0.4609375)
+TexAtlas_RegisterMatTransform('tex_271', 'tex_atlas_ultralow0', 0.4609375,=
0.4296875,0.4921875,0.4609375)
+TexAtlas_RegisterMatTransform('tex_190', 'tex_atlas_ultralow0', 0.5078125,=
0.4296875,0.5390625,0.4609375)
+TexAtlas_RegisterMatTransform('tex_234', 'tex_atlas_ultralow0', 0.5546875,=
0.4296875,0.5859375,0.4609375)
+TexAtlas_RegisterMatTransform('tex_315', 'tex_atlas_ultralow0', 0.6015625,=
0.4296875,0.6328125,0.4609375)
+TexAtlas_RegisterMatTransform('tex_279', 'tex_atlas_ultralow0', 0.6484375,=
0.4296875,0.6796875,0.4609375)
+TexAtlas_RegisterMatTransform('tex_458', 'tex_atlas_ultralow0', 0.6953125,=
0.4296875,0.7109375,0.4609375)
+TexAtlas_RegisterMatTransform('tex_539', 'tex_atlas_ultralow0', 0.7265625,=
0.4296875,0.7578125,0.4609375)
+TexAtlas_RegisterMatTransform('tex_343', 'tex_atlas_ultralow0', 0.7734375,=
0.4296875,0.8046875,0.4609375)
+TexAtlas_RegisterMatTransform('tex_319', 'tex_atlas_ultralow0', 0.8203125,=
0.4296875,0.8515625,0.4609375)
+TexAtlas_RegisterMatTransform('tex_217', 'tex_atlas_ultralow0', 0.8671875,=
0.4296875,0.8984375,0.4609375)
+TexAtlas_RegisterMatTransform('tex_459', 'tex_atlas_ultralow0', 0.9140625,=
0.4296875,0.9453125,0.4609375)
+TexAtlas_RegisterMatTransform('tex_188', 'tex_atlas_ultralow0', 0.9609375,=
0.4296875,0.9921875,0.4609375)
+TexAtlas_RegisterMatTransform('tex_100', 'tex_atlas_ultralow0', 0.0078125,=
0.4765625,0.0234375,0.5078125)
+TexAtlas_RegisterMatTransform('tex_71', 'tex_atlas_ultralow0', 0.0390625,0=
.4765625,0.0546875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_6', 'tex_atlas_ultralow0', 0.0703125,0.=
4765625,0.1015625,0.5078125)
+TexAtlas_RegisterMatTransform('tex_312', 'tex_atlas_ultralow0', 0.1171875,=
0.4765625,0.1484375,0.5078125)
+TexAtlas_RegisterMatTransform('tex_412', 'tex_atlas_ultralow0', 0.1640625,=
0.4765625,0.1953125,0.5078125)
+TexAtlas_RegisterMatTransform('tex_330', 'tex_atlas_ultralow0', 0.2109375,=
0.4765625,0.2421875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_56', 'tex_atlas_ultralow0', 0.2578125,0=
.4765625,0.2734375,0.5078125)
+TexAtlas_RegisterMatTransform('tex_277', 'tex_atlas_ultralow0', 0.2890625,=
0.4765625,0.3203125,0.5078125)
+TexAtlas_RegisterMatTransform('tex_390', 'tex_atlas_ultralow0', 0.3359375,=
0.4765625,0.3671875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_42', 'tex_atlas_ultralow0', 0.3828125,0=
.4765625,0.3984375,0.5078125)
+TexAtlas_RegisterMatTransform('tex_344', 'tex_atlas_ultralow0', 0.4140625,=
0.4765625,0.4453125,0.5078125)
+TexAtlas_RegisterMatTransform('tex_321', 'tex_atlas_ultralow0', 0.4609375,=
0.4765625,0.4921875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_flowers2', 'tex_atlas_ultralow0', 0.507=
8125,0.4765625,0.5390625,0.5078125)
+TexAtlas_RegisterMatTransform('tex_567', 'tex_atlas_ultralow0', 0.5546875,=
0.4765625,0.5703125,0.5078125)
+TexAtlas_RegisterMatTransform('tex_373', 'tex_atlas_ultralow0', 0.5859375,=
0.4765625,0.59375,0.5078125)
+TexAtlas_RegisterMatTransform('tex_518', 'tex_atlas_ultralow0', 0.609375,0=
.4765625,0.640625,0.5078125)
+TexAtlas_RegisterMatTransform('tex_278', 'tex_atlas_ultralow0', 0.65625,0.=
4765625,0.6875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_308', 'tex_atlas_ultralow0', 0.703125,0=
.4765625,0.734375,0.5078125)
+TexAtlas_RegisterMatTransform('tex_538', 'tex_atlas_ultralow0', 0.75,0.476=
5625,0.78125,0.5078125)
+TexAtlas_RegisterMatTransform('tex_sattel', 'tex_atlas_ultralow0', 0.79687=
5,0.4765625,0.828125,0.5078125)
+TexAtlas_RegisterMatTransform('tex_491', 'tex_atlas_ultralow0', 0.84375,0.=
4765625,0.875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_331', 'tex_atlas_ultralow0', 0.890625,0=
.4765625,0.921875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_8', 'tex_atlas_ultralow0', 0.9375,0.476=
5625,0.96875,0.5078125)
+TexAtlas_RegisterMatTransform('tex_atlas_william', 'tex_atlas_ultralow0', =
0.0078125,0.5234375,0.0390625,0.5546875)
+TexAtlas_RegisterMatTransform('tex_89', 'tex_atlas_ultralow0', 0.0546875,0=
.5234375,0.05859375,0.5546875)
+TexAtlas_RegisterMatTransform('tex_91', 'tex_atlas_ultralow0', 0.07421875,=
0.5234375,0.08984375,0.5546875)
+TexAtlas_RegisterMatTransform('tex_323', 'tex_atlas_ultralow0', 0.10546875=
,0.5234375,0.13671875,0.5546875)
+TexAtlas_RegisterMatTransform('tex_palmbark', 'tex_atlas_ultralow0', 0.152=
34375,0.5234375,0.18359375,0.5546875)
+TexAtlas_RegisterMatTransform('tex_411', 'tex_atlas_ultralow0', 0.19921875=
,0.5234375,0.23046875,0.5546875)
+TexAtlas_RegisterMatTransform('tex_423', 'tex_atlas_ultralow0', 0.24609375=
,0.5234375,0.27734375,0.5546875)
+TexAtlas_RegisterMatTransform('tex_60', 'tex_atlas_ultralow0', 0.29296875,=
0.5234375,0.30859375,0.5546875)
+TexAtlas_RegisterMatTransform('tex_509', 'tex_atlas_ultralow0', 0.32421875=
,0.5234375,0.35546875,0.5546875)
+TexAtlas_RegisterMatTransform('tex_470', 'tex_atlas_ultralow0', 0.37109375=
,0.5234375,0.40234375,0.5546875)
+TexAtlas_RegisterMatTransform('tex_111', 'tex_atlas_ultralow0', 0.41796875=
,0.5234375,0.44921875,0.5546875)
+TexAtlas_RegisterMatTransform('tex_307', 'tex_atlas_ultralow0', 0.46484375=
,0.5234375,0.49609375,0.5546875)
+TexAtlas_RegisterMatTransform('tex_102', 'tex_atlas_ultralow0', 0.51171875=
,0.5234375,0.51953125,0.5546875)
+TexAtlas_RegisterMatTransform('tex_460', 'tex_atlas_ultralow0', 0.53515625=
,0.5234375,0.56640625,0.5546875)
+TexAtlas_RegisterMatTransform('tex_212', 'tex_atlas_ultralow0', 0.58203125=
,0.5234375,0.61328125,0.5546875)
+TexAtlas_RegisterMatTransform('tex_121', 'tex_atlas_ultralow0', 0.62890625=
,0.5234375,0.66015625,0.5546875)
+TexAtlas_RegisterMatTransform('tex_38', 'tex_atlas_ultralow0', 0.67578125,=
0.5234375,0.69140625,0.5546875)
+TexAtlas_RegisterMatTransform('tex_345', 'tex_atlas_ultralow0', 0.70703125=
,0.5234375,0.73828125,0.5546875)
+TexAtlas_RegisterMatTransform('tex_340', 'tex_atlas_ultralow0', 0.75390625=
,0.5234375,0.78515625,0.5546875)
+TexAtlas_RegisterMatTransform('tex_398', 'tex_atlas_ultralow0', 0.80078125=
,0.5234375,0.83203125,0.5546875)
+TexAtlas_RegisterMatTransform('tex_515', 'tex_atlas_ultralow0', 0.84765625=
,0.5234375,0.87890625,0.5546875)
+TexAtlas_RegisterMatTransform('tex_79', 'tex_atlas_ultralow0', 0.89453125,=
0.5234375,0.91015625,0.5546875)
+TexAtlas_RegisterMatTransform('tex_18', 'tex_atlas_ultralow0', 0.92578125,=
0.5234375,0.95703125,0.5546875)
+TexAtlas_RegisterMatTransform('tex_222', 'tex_atlas_ultralow0', 0.0078125,=
0.5703125,0.0390625,0.6015625)
+TexAtlas_RegisterMatTransform('tex_464', 'tex_atlas_ultralow0', 0.0546875,=
0.5703125,0.0859375,0.6015625)
+TexAtlas_RegisterMatTransform('tex_181', 'tex_atlas_ultralow0', 0.1015625,=
0.5703125,0.1171875,0.6015625)
+TexAtlas_RegisterMatTransform('tex_347', 'tex_atlas_ultralow0', 0.1328125,=
0.5703125,0.1640625,0.6015625)
+TexAtlas_RegisterMatTransform('tex_314', 'tex_atlas_ultralow0', 0.1796875,=
0.5703125,0.2109375,0.6015625)
+TexAtlas_RegisterMatTransform('tex_276', 'tex_atlas_ultralow0', 0.2265625,=
0.5703125,0.2578125,0.6015625)
+TexAtlas_RegisterMatTransform('tex_vase', 'tex_atlas_ultralow0', 0.2734375=
,0.5703125,0.3046875,0.6015625)
+TexAtlas_RegisterMatTransform('tex_mud', 'tex_atlas_ultralow0', 0.3203125,=
0.5703125,0.3515625,0.6015625)
+TexAtlas_RegisterMatTransform('tex_551', 'tex_atlas_ultralow0', 0.3671875,=
0.5703125,0.3984375,0.6015625)
+TexAtlas_RegisterMatTransform('tex_34', 'tex_atlas_ultralow0', 0.4140625,0=
.5703125,0.4296875,0.6015625)
+TexAtlas_RegisterMatTransform('tex_487', 'tex_atlas_ultralow0', 0.4453125,=
0.5703125,0.4609375,0.6015625)
+TexAtlas_RegisterMatTransform('tex_186', 'tex_atlas_ultralow0', 0.4765625,=
0.5703125,0.5078125,0.6015625)
+TexAtlas_RegisterMatTransform('tex_478', 'tex_atlas_ultralow0', 0.5234375,=
0.5703125,0.5546875,0.6015625)
+TexAtlas_RegisterMatTransform('tex_206', 'tex_atlas_ultralow0', 0.5703125,=
0.5703125,0.6015625,0.6015625)
+TexAtlas_RegisterMatTransform('tex_556', 'tex_atlas_ultralow0', 0.6171875,=
0.5703125,0.6484375,0.6015625)
+TexAtlas_RegisterMatTransform('tex_204', 'tex_atlas_ultralow0', 0.6640625,=
0.5703125,0.6953125,0.6015625)
+TexAtlas_RegisterMatTransform('tex_78', 'tex_atlas_ultralow0', 0.7109375,0=
.5703125,0.7265625,0.6015625)
+TexAtlas_RegisterMatTransform('tex_557', 'tex_atlas_ultralow0', 0.7421875,=
0.5703125,0.7578125,0.6015625)
+TexAtlas_RegisterMatTransform('tex_415', 'tex_atlas_ultralow0', 0.7734375,=
0.5703125,0.8046875,0.6015625)
+TexAtlas_RegisterMatTransform('tex_5351', 'tex_atlas_ultralow0', 0.8203125=
,0.5703125,0.8515625,0.6015625)
+TexAtlas_RegisterMatTransform('tex_99', 'tex_atlas_ultralow0', 0.8671875,0=
.5703125,0.8828125,0.6015625)
+TexAtlas_RegisterMatTransform('tex_386', 'tex_atlas_ultralow0', 0.8984375,=
0.5703125,0.9296875,0.6015625)
+TexAtlas_RegisterMatTransform('tex_338', 'tex_atlas_ultralow0', 0.9453125,=
0.5703125,0.9765625,0.6015625)
+TexAtlas_RegisterMatTransform('tex_192', 'tex_atlas_ultralow0', 0.0078125,=
0.6171875,0.0390625,0.6484375)
+TexAtlas_RegisterMatTransform('tex_517', 'tex_atlas_ultralow0', 0.0546875,=
0.6171875,0.0859375,0.6484375)
+TexAtlas_RegisterMatTransform('tex_461', 'tex_atlas_ultralow0', 0.1015625,=
0.6171875,0.1171875,0.6484375)
+TexAtlas_RegisterMatTransform('tex_183', 'tex_atlas_ultralow0', 0.1328125,=
0.6171875,0.1640625,0.6484375)
+TexAtlas_RegisterMatTransform('tex_335', 'tex_atlas_ultralow0', 0.1796875,=
0.6171875,0.2109375,0.6484375)
+TexAtlas_RegisterMatTransform('tex_449', 'tex_atlas_ultralow0', 0.2265625,=
0.6171875,0.2578125,0.6484375)
+TexAtlas_RegisterMatTransform('tex_120', 'tex_atlas_ultralow0', 0.2734375,=
0.6171875,0.3046875,0.6484375)
+TexAtlas_RegisterMatTransform('tex_524', 'tex_atlas_ultralow0', 0.3203125,=
0.6171875,0.3515625,0.6484375)
+TexAtlas_RegisterMatTransform('tex_273', 'tex_atlas_ultralow0', 0.3671875,=
0.6171875,0.3984375,0.6484375)
+TexAtlas_RegisterMatTransform('tex_328', 'tex_atlas_ultralow0', 0.4140625,=
0.6171875,0.4453125,0.6484375)
+TexAtlas_RegisterMatTransform('tex_226', 'tex_atlas_ultralow0', 0.4609375,=
0.6171875,0.4921875,0.6484375)
+TexAtlas_RegisterMatTransform('tex_55', 'tex_atlas_ultralow0', 0.5078125,0=
.6171875,0.5234375,0.6484375)
+TexAtlas_RegisterMatTransform('tex_414', 'tex_atlas_ultralow0', 0.5390625,=
0.6171875,0.5703125,0.6484375)
+TexAtlas_RegisterMatTransform('tex_211', 'tex_atlas_ultralow0', 0.5859375,=
0.6171875,0.6171875,0.6484375)
+TexAtlas_RegisterMatTransform('tex_404', 'tex_atlas_ultralow0', 0.6328125,=
0.6171875,0.6640625,0.6484375)
+TexAtlas_RegisterMatTransform('tex_245', 'tex_atlas_ultralow0', 0.6796875,=
0.6171875,0.7109375,0.6484375)
+TexAtlas_RegisterMatTransform('tex_101', 'tex_atlas_ultralow0', 0.7265625,=
0.6171875,0.734375,0.6484375)
+TexAtlas_RegisterMatTransform('tex_elphlen_ear_plant', 'tex_atlas_ultralow=
0', 0.75,0.6171875,0.78125,0.6484375)
+TexAtlas_RegisterMatTransform('tex_armoire_2637', 'tex_atlas_ultralow0', 0=
.796875,0.6171875,0.828125,0.6484375)
+TexAtlas_RegisterMatTransform('tex_207', 'tex_atlas_ultralow0', 0.84375,0.=
6171875,0.875,0.6484375)
+TexAtlas_RegisterMatTransform('tex_12', 'tex_atlas_ultralow0', 0.890625,0.=
6171875,0.921875,0.6484375)
+TexAtlas_RegisterMatTransform('tex_224', 'tex_atlas_ultralow0', 0.9375,0.6=
171875,0.96875,0.6484375)
+TexAtlas_RegisterMatTransform('tex_457', 'tex_atlas_ultralow0', 0.0078125,=
0.6640625,0.0390625,0.6953125)
+TexAtlas_RegisterMatTransform('tex_258', 'tex_atlas_ultralow0', 0.0546875,=
0.6640625,0.0859375,0.6953125)
+TexAtlas_RegisterMatTransform('tex_2', 'tex_atlas_ultralow0', 0.1015625,0.=
6640625,0.1328125,0.6953125)
+TexAtlas_RegisterMatTransform('tex_74', 'tex_atlas_ultralow0', 0.1484375,0=
.6640625,0.1640625,0.6953125)
+TexAtlas_RegisterMatTransform('tex_37', 'tex_atlas_ultralow0', 0.1796875,0=
.6640625,0.1953125,0.6953125)
+TexAtlas_RegisterMatTransform('tex_231', 'tex_atlas_ultralow0', 0.2109375,=
0.6640625,0.2421875,0.6953125)
+TexAtlas_RegisterMatTransform('tex_big_elven_chair', 'tex_atlas_ultralow0'=
, 0.2578125,0.6640625,0.2890625,0.6953125)
+TexAtlas_RegisterMatTransform('tex_pylon', 'tex_atlas_ultralow0', 0.304687=
5,0.6640625,0.3359375,0.6953125)
+TexAtlas_RegisterMatTransform('tex_260', 'tex_atlas_ultralow0', 0.3515625,=
0.6640625,0.3828125,0.6953125)
+TexAtlas_RegisterMatTransform('tex_534', 'tex_atlas_ultralow0', 0.3984375,=
0.6640625,0.4296875,0.6953125)
+TexAtlas_RegisterMatTransform('tex_200', 'tex_atlas_ultralow0', 0.4453125,=
0.6640625,0.4765625,0.6953125)
+TexAtlas_RegisterMatTransform('tex_24', 'tex_atlas_ultralow0', 0.4921875,0=
.6640625,0.5078125,0.6953125)
+TexAtlas_RegisterMatTransform('tex_elven_table', 'tex_atlas_ultralow0', 0.=
5234375,0.6640625,0.5546875,0.6953125)
+TexAtlas_RegisterMatTransform('tex_477', 'tex_atlas_ultralow0', 0.5703125,=
0.6640625,0.6015625,0.6953125)
+TexAtlas_RegisterMatTransform('tex_230', 'tex_atlas_ultralow0', 0.6171875,=
0.6640625,0.6484375,0.6953125)
+TexAtlas_RegisterMatTransform('tex_246', 'tex_atlas_ultralow0', 0.6640625,=
0.6640625,0.6953125,0.6953125)
+TexAtlas_RegisterMatTransform('tex_327', 'tex_atlas_ultralow0', 0.7109375,=
0.6640625,0.7421875,0.6953125)
+TexAtlas_RegisterMatTransform('tex_496', 'tex_atlas_ultralow0', 0.7578125,=
0.6640625,0.7890625,0.6953125)
+TexAtlas_RegisterMatTransform('tex_555', 'tex_atlas_ultralow0', 0.8046875,=
0.6640625,0.8359375,0.6953125)
+TexAtlas_RegisterMatTransform('tex_45', 'tex_atlas_ultralow0', 0.8515625,0=
.6640625,0.8671875,0.6953125)
+TexAtlas_RegisterMatTransform('tex_66', 'tex_atlas_ultralow0', 0.8828125,0=
.6640625,0.8984375,0.6953125)
+TexAtlas_RegisterMatTransform('tex_346', 'tex_atlas_ultralow0', 0.9140625,=
0.6640625,0.9453125,0.6953125)
+TexAtlas_RegisterMatTransform('tex_546', 'tex_atlas_ultralow0', 0.9609375,=
0.6640625,0.9921875,0.6953125)
+TexAtlas_RegisterMatTransform('tex_232', 'tex_atlas_ultralow0', 0.0078125,=
0.7109375,0.0390625,0.7421875)
+TexAtlas_RegisterMatTransform('tex_20', 'tex_atlas_ultralow0', 0.0546875,0=
.7109375,0.0859375,0.7421875)
+TexAtlas_RegisterMatTransform('tex_219', 'tex_atlas_ultralow0', 0.1015625,=
0.7109375,0.1328125,0.7421875)
+TexAtlas_RegisterMatTransform('tex_482', 'tex_atlas_ultralow0', 0.1484375,=
0.7109375,0.1796875,0.7421875)
+TexAtlas_RegisterMatTransform('tex_209', 'tex_atlas_ultralow0', 0.1953125,=
0.7109375,0.2265625,0.7421875)
+TexAtlas_RegisterMatTransform('tex_537', 'tex_atlas_ultralow0', 0.2421875,=
0.7109375,0.2734375,0.7421875)
+TexAtlas_RegisterMatTransform('tex_220', 'tex_atlas_ultralow0', 0.2890625,=
0.7109375,0.3203125,0.7421875)
+TexAtlas_RegisterMatTransform('tex_422', 'tex_atlas_ultralow0', 0.3359375,=
0.7109375,0.3671875,0.7421875)
+TexAtlas_RegisterMatTransform('tex_portrait', 'tex_atlas_ultralow0', 0.382=
8125,0.7109375,0.4140625,0.7421875)
+TexAtlas_RegisterMatTransform('tex_313', 'tex_atlas_ultralow0', 0.4296875,=
0.7109375,0.4609375,0.7421875)
+TexAtlas_RegisterMatTransform('tex_13', 'tex_atlas_ultralow0', 0.4765625,0=
.7109375,0.5078125,0.7421875)
+TexAtlas_RegisterMatTransform('tex_511', 'tex_atlas_ultralow0', 0.5234375,=
0.7109375,0.5546875,0.7421875)
+TexAtlas_RegisterMatTransform('tex_536', 'tex_atlas_ultralow0', 0.5703125,=
0.7109375,0.6015625,0.7421875)
+TexAtlas_RegisterMatTransform('tex_221', 'tex_atlas_ultralow0', 0.6171875,=
0.7109375,0.6484375,0.7421875)
+TexAtlas_RegisterMatTransform('tex_472', 'tex_atlas_ultralow0', 0.6640625,=
0.7109375,0.6796875,0.7421875)
+TexAtlas_RegisterMatTransform('tex_467', 'tex_atlas_ultralow0', 0.6953125,=
0.7109375,0.7265625,0.7421875)
+TexAtlas_RegisterMatTransform('tex_58', 'tex_atlas_ultralow0', 0.7421875,0=
.7109375,0.7578125,0.7421875)
+TexAtlas_RegisterMatTransform('tex_armoire_2639', 'tex_atlas_ultralow0', 0=
.7734375,0.7109375,0.8046875,0.7421875)
+TexAtlas_RegisterMatTransform('tex_228', 'tex_atlas_ultralow0', 0.8203125,=
0.7109375,0.8515625,0.7421875)
+TexAtlas_RegisterMatTransform('tex_495', 'tex_atlas_ultralow0', 0.8671875,=
0.7109375,0.8984375,0.7421875)
+TexAtlas_RegisterMatTransform('tex_253', 'tex_atlas_ultralow0', 0.9140625,=
0.7109375,0.9453125,0.7421875)
+TexAtlas_RegisterMatTransform('tex_389', 'tex_atlas_ultralow0', 0.9609375,=
0.7109375,0.9921875,0.7421875)
+TexAtlas_RegisterMatTransform('tex_375', 'tex_atlas_ultralow0', 0.0078125,=
0.7578125,0.0234375,0.7890625)
+TexAtlas_RegisterMatTransform('tex_27', 'tex_atlas_ultralow0', 0.0390625,0=
.7578125,0.0703125,0.7890625)
+TexAtlas_RegisterMatTransform('tex_355', 'tex_atlas_ultralow0', 0.0859375,=
0.7578125,0.1015625,0.7890625)
+TexAtlas_RegisterMatTransform('tex_63', 'tex_atlas_ultralow0', 0.1171875,0=
.7578125,0.1328125,0.7890625)
+TexAtlas_RegisterMatTransform('tex_558', 'tex_atlas_ultralow0', 0.1484375,=
0.7578125,0.1640625,0.7890625)
+TexAtlas_RegisterMatTransform('tex_376', 'tex_atlas_ultralow0', 0.1796875,=
0.7578125,0.2109375,0.7890625)
+TexAtlas_RegisterMatTransform('tex_334', 'tex_atlas_ultralow0', 0.2265625,=
0.7578125,0.2578125,0.7890625)
 TexAtlas_RegisterMatTransform('tex_125', 'tex_atlas_ultralow0', 0.0078125,=
0.8046875,0.0390625,0.8203125)
 TexAtlas_RegisterMatTransform('tex_161', 'tex_atlas_ultralow0', 0.0546875,=
0.8046875,0.0859375,0.8203125)
 TexAtlas_RegisterMatTransform('tex_136', 'tex_atlas_ultralow0', 0.1015625,=
0.8046875,0.1328125,0.8203125)

Modified: trunk/data/models/atlas/tex_atlas_ultralow0.dds
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/atlas/tex_atlas_ultralow0.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Thu Aug 21 07:16:51 2008
@@ -5963,3 +5963,23 @@
 	set_texture_alias MainTexture tex_atlas_william.png
 }
 =

+material tex_elephantplant : tex_base =

+{ =

+	set_texture_alias MainTexture tex_elphlen_ear_plant.png
+}
+
+material tex_big_elven_chair : tex_base =

+{ =

+	set_texture_alias MainTexture tex_big_elven_chair.png
+}
+
+material tex_elven_table : tex_base =

+{ =

+	set_texture_alias MainTexture tex_elven_table.png
+}
+
+material tex_orccart : tex_base =

+{ =

+	set_texture_alias MainTexture tex_orccart.png
+}
+

Modified: trunk/data/models/models/to_003000/mdl_002885.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Thu Aug 21 07:16:51 2008
@@ -153,6 +153,20 @@
 gArtFilter[389]=3D{maptoid=3D388,rotation=3D"x:0,y:0,z:-90",xadd=3D0.4,yad=
d=3D0,zadd=3D0}
 gArtFilter[361]=3D{maptoid=3D388,rotation=3D"x:0,y:0,z:-90",xadd=3D1,yadd=
=3D0,zadd=3D0}
 gArtFilter[362]=3D{maptoid=3D388,rotation=3D"x:0,y:0,z:0",xadd=3D0,yadd=3D=
0.6,zadd=3D0}
+
+-- orc car
+gArtFilter[6787]=3D{maptoid=3D6792,rotation=3D"x:0,y:0,z:-90",xadd=3D1,yad=
d=3D0,zadd=3D0}
+gArtFilter[6786]=3D{skip=3Dtrue}
+gArtFilter[6790]=3D{skip=3Dtrue}
+gArtFilter[6791]=3D{skip=3Dtrue}
+
+-- elvenchair
+gArtFilter[11756]=3D{maptoid=3D11755,rotation=3D"x:0,y:0,z:180",xadd=3D1,y=
add=3D1,zadd=3D0}
+gArtFilter[11757]=3D{maptoid=3D11755,rotation=3D"x:0,y:0,z:270",xadd=3D1,y=
add=3D0,zadd=3D0}
+gArtFilter[11758]=3D{maptoid=3D11755,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D1,zadd=3D0}
+
+-- elventable
+gArtFilter[11746]=3D{maptoid=3D11745,rotation=3D"x:0,y:0,z:90",xadd=3D0,ya=
dd=3D-1,zadd=3D0}
 =

 -- lava
 gArtFilter[6682]=3D{maptoid=3D6681}



From no-reply at zwischenwelt.org  Sat Aug 23 13:56:48 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 11:56:48 -0000
Subject: [Iris-commit] [IRIS] r2395 - in /trunk: bin/iris2.exe vc8/iris.sln
	vc8/iris.vcproj
Message-ID: <20080823115648.E8CE91C18291@zwischenwelt.org>

Author: sience
Date: Sat Aug 23 13:56:47 2008
New Revision: 2395

Log:
-new win32 binary
-vc8 project updated to LUA 5.1.4

Modified:
    trunk/bin/iris2.exe
    trunk/vc8/iris.sln
    trunk/vc8/iris.vcproj

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/vc8/iris.sln
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.sln (original)
+++ trunk/vc8/iris.sln Sat Aug 23 13:56:47 2008
@@ -6,7 +6,7 @@
 		{D7488B96-456A-1E46-8B0B-0F698E025694} =3D {D7488B96-456A-1E46-8B0B-0F69=
8E025694}
 	EndProjectSection
 EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") =3D "lua5.1_lib", "..\lu=
gre\lib\lua-5.1.3\mak.vs2005\lua5.1_lib.vcproj", "{D7488B96-456A-1E46-8B0B-=
0F698E025694}"
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") =3D "lua5.1_lib", "..\lu=
gre\lib\lua-5.1.4\mak.vs2005\lua5.1_lib.vcproj", "{D7488B96-456A-1E46-8B0B-=
0F698E025694}"
 EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) =3D preSolution

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Sat Aug 23 13:56:47 2008
@@ -59,7 +59,7 @@
 				Name=3D"VCLinkerTool"
 				AdditionalDependencies=3D"AdvAPI32.Lib User32.Lib ws2_32.lib zlibd.lib=
 lua50.lib OgreMain_d.lib OIS_d.lib fmodex_vc.lib"
 				OutputFile=3D"$(OutDir)\..\..\bin\$(ProjectName)_d.exe"
-				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;C:\Programme\=
Microsoft Platform SDK\Lib\&quot;;&quot;$(OGRE_HOME)\lib\&quot;;&quot;..\lu=
gre\lib\lua-5.0.3\lib\static&quot;;..\libs\fmodx;..\libs\lua;..\libs\zlib"
+				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;C:\Programme\=
Microsoft SDKs\Windows\v6.1\Lib\&quot;;&quot;$(OGRE_HOME)\lib\&quot;;&quot;=
..\lugre\lib\lua-5.1.4\lib\static&quot;;..\lugre\lib\caelum\lib\static;..\l=
ibs\fmodx;..\libs\lua;..\libs\zlib"
 				IgnoreAllDefaultLibraries=3D"false"
 				IgnoreDefaultLibraryNames=3D"LIBCMTD.lib"
 				GenerateDebugInformation=3D"true"
@@ -153,7 +153,7 @@
 				Name=3D"VCLinkerTool"
 				AdditionalDependencies=3D"AdvAPI32.Lib User32.Lib ws2_32.lib zlib.lib =
OgreMain.lib OIS.lib lua5.1.lib fmodex_vc.lib"
 				OutputFile=3D"$(OutDir)\..\..\bin\iris2.exe"
-				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;C:\Programme\=
Microsoft SDKs\Windows\v6.1\Lib\&quot;;&quot;$(OGRE_HOME)\lib\&quot;;..\lib=
s\fmodx;..\libs\zlib;&quot;..\lugre\lib\lua-5.1.3\lib\static&quot;;..\lugre=
\lib\caelum\lib\static;..\lugre\lib\paged_geometry\lib\static;c:\Programme\=
boost\boost_1_34_1\lib"
+				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;C:\Programme\=
Microsoft SDKs\Windows\v6.1\Lib\&quot;;&quot;$(OGRE_HOME)\lib\&quot;;..\lib=
s\fmodx;..\libs\zlib;&quot;..\lugre\lib\lua-5.1.4\lib\static&quot;;..\lugre=
\lib\caelum\lib\static;..\lugre\lib\paged_geometry\lib\static;c:\Programme\=
boost\boost_1_34_1\lib"
 				GenerateManifest=3D"true"
 				IgnoreAllDefaultLibraries=3D"false"
 				IgnoreDefaultLibraryNames=3D"LIBCMT.lib"



From no-reply at zwischenwelt.org  Sat Aug 23 14:19:00 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 12:19:00 -0000
Subject: [Iris-commit] [IRIS] r2396 - in /trunk/lua: lib.map.lua
	lib.uoutils.lua
Message-ID: <20080823130005.AFEF81C1802D@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 23 14:19:00 2008
New Revision: 2396

Log:
small map code cleanup

Modified:
    trunk/lua/lib.map.lua
    trunk/lua/lib.uoutils.lua

Modified: trunk/lua/lib.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.map.lua (original)
+++ trunk/lua/lib.map.lua Sat Aug 23 14:19:00 2008
@@ -4,12 +4,23 @@
 gMapCacheBlocks =3D {}
 kMapCacheBlocks_MaxSqDist =3D 16*16
 =

+-- returns tiletype,zloc
+-- TODO : obsolete me ? use GetGroundAtAbsPos or MapGetGround instead ?
+-- returns iTerrainTileType,iTerrainZ
+function GetAbsTile (xloc,yloc) =

+	--~ return gGroundBlockLoader:GetTile2(xloc,yloc)
+	local o =3D MapGetGround(xloc,yloc)
+	return o.iTileType, o.zloc
+end
 =

+-- TODO : obsolete : lua/lib.3d.map.lua:432:	tiletype,z =3D gGroundBlockLo=
ader:GetTile(iBlockUO_X+bx,iBlockUO_Y+by,lx,ly)
+-- TODO : obsolete : lua/lib.walking2.lua:125:	local iMapTileType =3D gGro=
undBlockLoader:GetTile(bx,by,tx,ty)
+-- TODO : obsolete : gStaticBlockLoader in lib.3d.map.lua  and lib.walking=
2.lua
 =

 -- {iTileType=3D?,zloc=3D?,bIgnoredByWalk=3D?,flags=3D?}
 function MapGetGround		(xloc,yloc)	return MapGetCacheBlock(math.floor(xloc=
/8),math.floor(yloc/8)).ground[ 		 (math.floor(yloc) % 8)*10 + (math.floor(=
xloc) % 8)] end
 =

--- {{zloc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bIsStatic=
=3Dtrue},...} -- xloc,yloc absolute
+-- {{zloc=3D?,artid=3D?,hue=3D?,xloc=3D?,yloc=3D?,tx=3D?,ty=3D?,bx=3D?,by=
=3D?,bIsStatic=3Dtrue},...} -- xloc,yloc absolute
 function MapGetStatics		(xloc,yloc)	return MapGetCacheBlock(math.floor(xlo=
c/8),math.floor(yloc/8)).statics_bypos[(math.floor(yloc) % 8)*10 + (math.fl=
oor(xloc) % 8)] end =

 function MapGetBlockStatics	(bx,by)		return MapGetCacheBlock(bx,by).static=
s_all end =

 =

@@ -59,7 +70,7 @@
 	end
 	for i =3D 0,iStaticCount-1 do
 		local iTileTypeID,tx,ty,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,tx=3Dtx,ty=3D=
ty,xloc=3Dtx+bx*8,yloc=3Dty+by*8,iBlockIndex=3Di,bIsStatic=3Dtrue}
+		local static =3D {zloc=3DiZ,artid=3DiTileTypeID,hue=3DiHue,tx=3Dtx,ty=3D=
ty,xloc=3Dtx+bx*8,yloc=3Dty+by*8,bx=3Dbx,by=3Dby,iBlockIndex=3Di,bIsStatic=
=3Dtrue}
 		table.insert(b.statics_bypos[ty*10 + tx],static)
 		table.insert(b.statics_all,static)
 	end

Modified: trunk/lua/lib.uoutils.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoutils.lua (original)
+++ trunk/lua/lib.uoutils.lua Sat Aug 23 14:19:00 2008
@@ -8,14 +8,6 @@
 kUODir_SouthWest	=3D 5
 kUODir_West			=3D 6
 kUODir_NorthWest	=3D 7
-
-
--- returns tiletype,zloc
-function GetAbsTile (xloc,yloc) =

-	--~ return gGroundBlockLoader:GetTile2(xloc,yloc)
-	local o =3D MapGetGround(xloc,yloc)
-	return o.iTileType, o.zloc
-end
 =

 function ApplyDir (dir,posx,posy) =

 	dir =3D DirWrap(dir) -- warp and remove run bit



From no-reply at zwischenwelt.org  Sat Aug 23 14:31:00 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 12:31:00 -0000
Subject: [Iris-commit] [IRIS] r2398 - /trunk/lua/lib.2d.spriteblock.lua
Message-ID: <20080823130006.1D29E1C18032@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 23 14:31:00 2008
New Revision: 2398

Log:
small 2d load changes/prepartions

Modified:
    trunk/lua/lib.2d.spriteblock.lua

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sat Aug 23 14:31:00 2008
@@ -3,19 +3,6 @@
 -- TODO : generic 2d spritesystem : render, mousepick, zsort?
 -- TODO : unify : terrainload-water,static-types : MapGetBlockStatics     =
  ArtAtlasLoadAndLock : atlasgroup
 =

---[[
-local rendergroup2d =3D TODO() -- needs extra layer
-local bVertexBufferDynamic=3Dfalse
-local bVertexCol=3Dfalse
-local spritelist =3D CreateSpriteList(rendergroup2d,bVertexBufferDynamic,b=
VertexCol)
-table.insert(self.spritelists,spritelist)
-spritelist:SetMaterial(matname)
-spritelist:ResizeList(len)
-SpriteList_Open(spritelist)
-SpriteList_SetSprite		(iSpriteIndex, l,t,w,h, u0,v0, uvw, uvh, z)
-SpriteList_Close()
-]]--
-		=

 -- ***** ***** ***** ***** ***** cUOSpriteBlock
 =

 cUOSpriteBlock =3D CreateClass()
@@ -23,10 +10,14 @@
 function cUOSpriteBlock:Init ()
 	self.pStaticAtlasMats =3D {} -- self.pStaticAtlasMats[iTileTypeID][iHue] =
=3D pAtlasPiece (see ArtAtlasLoadAndLock)
 	self.pStaticGroups =3D {}
+	self.spritelists =3D {}
+	self.rendergroup2d =3D CreateRenderGroup2D(GetGUILayer_Dialogs():CastToRe=
nderGroup2D()) -- TODO : needs extra layer
 end
 =

 function cUOSpriteBlock:CamStep(t,x,y,z)
 	--~ print("cUOSpriteBlock:CamStep",t,x,y,z)
+	local gx,gy,gz =3D 0,0,0
+	self.rendergroup2d:SetPos(gx,gy,gz)
 end
 =

 function cUOSpriteBlock:Destroy ()
@@ -60,6 +51,20 @@
 =

 =

 function cUOSpriteBlock:Build 	(bx,by)
+	--[[
+	local bVertexBufferDynamic	=3Dfalse
+	local bVertexCol			=3Dfalse
+	local spritelist =3D CreateSpriteList(rendergroup2d,bVertexBufferDynamic,=
bVertexCol)
+	table.insert(self.spritelists,spritelist)
+	spritelist:SetMaterial(matname)
+	spritelist:ResizeList(len)
+	SpriteList_Open(spritelist)
+	SpriteList_SetSprite(iSpriteIndex, l,t,w,h, u0,v0, uvw, uvh, z)
+	SpriteList_Close()
+	]]--
+
+
+
 	-- statics : create gfx
 	self.pStaticGroupGfx =3D {}
 	-- -so 1420,1550



From no-reply at zwischenwelt.org  Sat Aug 23 14:20:18 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 12:20:18 -0000
Subject: [Iris-commit] [IRIS] r2397 - in /trunk/lua: lib.packet.lua
 net/net.main.lua net/net.other.lua net/net.partysystem.lua
Message-ID: <20080823130005.E17CA1C1802D@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 23 14:20:18 2008
New Revision: 2397

Log:
party system starts to work, instant accept

Added:
    trunk/lua/net/net.partysystem.lua
Modified:
    trunk/lua/lib.packet.lua
    trunk/lua/net/net.main.lua
    trunk/lua/net/net.other.lua

Modified: trunk/lua/lib.packet.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.packet.lua (original)
+++ trunk/lua/lib.packet.lua Sat Aug 23 14:20:18 2008
@@ -1,275 +1,275 @@
-gPacketType.kPacket_CharacterCreation 								=3D { id=3Dhex2num("0x00") }
-gPacketType.kPacket_Logout					 						=3D { id=3Dhex2num("0x01") }
-gPacketType.kPacket_Request_Movement								=3D { id=3Dhex2num("0x02") }
-gPacketType.kPacket_Speech											=3D { id=3Dhex2num("0x03") }
-gPacketType.kPacket_Request_God_Mode								=3D { id=3Dhex2num("0x04") }
-gPacketType.kPacket_Attack											=3D { id=3Dhex2num("0x05") }
-gPacketType.kPacket_Double_Click									=3D { id=3Dhex2num("0x06") }
-gPacketType.kPacket_Take_Object										=3D { id=3Dhex2num("0x07") }
-gPacketType.kPacket_Drop_Object										=3D { id=3Dhex2num("0x08") }
-gPacketType.kPacket_Single_Click									=3D { id=3Dhex2num("0x09") }
-gPacketType.kPacket_Edit											=3D { id=3Dhex2num("0x0A") }
-gPacketType.kPacket_Damage											=3D { id=3Dhex2num("0x0B") }
-gPacketType.kPacket_Tile_Data										=3D { id=3Dhex2num("0x0C") }
-gPacketType.kPacket_NPC_Data										=3D { id=3Dhex2num("0x0D") }
-gPacketType.kPacket_Edit_Template_Data								=3D { id=3Dhex2num("0x0E") }
-gPacketType.kPacket_Paperdoll_Old									=3D { id=3Dhex2num("0x0F") }
-gPacketType.kPacket_Hue_Data										=3D { id=3Dhex2num("0x10") }
-gPacketType.kPacket_Mobile_Stats									=3D { id=3Dhex2num("0x11") }
-gPacketType.kPacket_Request_SkillOrSpell							=3D { id=3Dhex2num("0x12") }
-gPacketType.kPacket_Equip_Item_Request								=3D { id=3Dhex2num("0x13") }
-gPacketType.kPacket_Change_Elevation								=3D { id=3Dhex2num("0x14") }
-gPacketType.kPacket_Follow											=3D { id=3Dhex2num("0x15") }
-gPacketType.kPacket_Request_Script_Names							=3D { id=3Dhex2num("0x16") }
-gPacketType.kPacket_Script_Tree_Command								=3D { id=3Dhex2num("0x17") }
-gPacketType.kPacket_Script_Attach									=3D { id=3Dhex2num("0x18") }
-gPacketType.kPacket_NPC_Conversation_Data							=3D { id=3Dhex2num("0x19")=
 }
-gPacketType.kPacket_Show_Item										=3D { id=3Dhex2num("0x1A") }
-gPacketType.kPacket_Login_Confirm									=3D { id=3Dhex2num("0x1B") }
-gPacketType.kPacket_Text											=3D { id=3Dhex2num("0x1C") }
-gPacketType.kPacket_Destroy											=3D { id=3Dhex2num("0x1D") }
-gPacketType.kPacket_Animate											=3D { id=3Dhex2num("0x1E") }
-gPacketType.kPacket_Explode											=3D { id=3Dhex2num("0x1F") }
-
-gPacketType.kPacket_Teleport										=3D { id=3Dhex2num("0x20") }
-gPacketType.kPacket_Block_Movement									=3D { id=3Dhex2num("0x21") }
-gPacketType.kPacket_Accept_Movement_Resync_Request					=3D { id=3Dhex2num(=
"0x22") }
-gPacketType.kPacket_Drag_Item										=3D { id=3Dhex2num("0x23") }
-gPacketType.kPacket_Open_Container									=3D { id=3Dhex2num("0x24") }
-gPacketType.kPacket_Object_to_Object								=3D { id=3Dhex2num("0x25") }
-gPacketType.kPacket_Old_Client										=3D { id=3Dhex2num("0x26") }
-gPacketType.kPacket_Get_Item_Failed									=3D { id=3Dhex2num("0x27") }
-gPacketType.kPacket_Drop_Item_Failed								=3D { id=3Dhex2num("0x28") }
-gPacketType.kPacket_Drop_Item_OK									=3D { id=3Dhex2num("0x29") }
-gPacketType.kPacket_Blood											=3D { id=3Dhex2num("0x2A") }
-gPacketType.kPacket_God_Mode										=3D { id=3Dhex2num("0x2B") }
-gPacketType.kPacket_Death											=3D { id=3Dhex2num("0x2C") }
-gPacketType.kPacket_Health											=3D { id=3Dhex2num("0x2D") }
-gPacketType.kPacket_Equip_Item										=3D { id=3Dhex2num("0x2E") }
-gPacketType.kPacket_Swing											=3D { id=3Dhex2num("0x2F") }
-
-gPacketType.kPacket_Attack_OK										=3D { id=3Dhex2num("0x30") }
-gPacketType.kPacket_Attack_End										=3D { id=3Dhex2num("0x31") }
-gPacketType.kPacket_Hack_Mover										=3D { id=3Dhex2num("0x32") }
-gPacketType.kPacket_Group											=3D { id=3Dhex2num("0x33") }
-gPacketType.kPacket_Client_Query									=3D { id=3Dhex2num("0x34") }
-gPacketType.kPacket_Resource_Type									=3D { id=3Dhex2num("0x35") }
-gPacketType.kPacket_Resource_Tile_Data								=3D { id=3Dhex2num("0x36") }
-gPacketType.kPacket_Move_Object										=3D { id=3Dhex2num("0x37") }
-gPacketType.kPacket_Follow_Move										=3D { id=3Dhex2num("0x38") }
-gPacketType.kPacket_Groups											=3D { id=3Dhex2num("0x39") }
-gPacketType.kPacket_Skills											=3D { id=3Dhex2num("0x3A") }
-gPacketType.kPacket_Accept_Offer									=3D { id=3Dhex2num("0x3B") }
-gPacketType.kPacket_Container_Contents								=3D { id=3Dhex2num("0x3C") }
-gPacketType.kPacket_Ship											=3D { id=3Dhex2num("0x3D") }
-gPacketType.kPacket_Versions										=3D { id=3Dhex2num("0x3E") }
-gPacketType.kPacket_Update_Statics									=3D { id=3Dhex2num("0x3F") }
-
-gPacketType.kPacket_Update_Terrain									=3D { id=3Dhex2num("0x40") }
-gPacketType.kPacket_Update_Tiledata									=3D { id=3Dhex2num("0x41") }
-gPacketType.kPacket_Update_Art										=3D { id=3Dhex2num("0x42") }
-gPacketType.kPacket_Update_Anim										=3D { id=3Dhex2num("0x43") }
-gPacketType.kPacket_Update_Hues										=3D { id=3Dhex2num("0x44") }
-gPacketType.kPacket_Ver_OK											=3D { id=3Dhex2num("0x45") }
-gPacketType.kPacket_New_Art											=3D { id=3Dhex2num("0x46") }
-gPacketType.kPacket_New_Terrain										=3D { id=3Dhex2num("0x47") }
-gPacketType.kPacket_New_Anim										=3D { id=3Dhex2num("0x48") }
-gPacketType.kPacket_New_Hues										=3D { id=3Dhex2num("0x49") }
-gPacketType.kPacket_Destroy_Art										=3D { id=3Dhex2num("0x4A") }
-gPacketType.kPacket_Check_Ver										=3D { id=3Dhex2num("0x4B") }
-gPacketType.kPacket_Script_Names									=3D { id=3Dhex2num("0x4C") }
-gPacketType.kPacket_Script_File										=3D { id=3Dhex2num("0x4D") }
-gPacketType.kPacket_Light_Change									=3D { id=3Dhex2num("0x4E") }
-gPacketType.kPacket_Sunlight										=3D { id=3Dhex2num("0x4F") }
-
-gPacketType.kPacket_Board_Header									=3D { id=3Dhex2num("0x50") }
-gPacketType.kPacket_Board_Message									=3D { id=3Dhex2num("0x51") }
-gPacketType.kPacket_Post_Message									=3D { id=3Dhex2num("0x52") }
-gPacketType.kPacket_Login_Reject									=3D { id=3Dhex2num("0x53") }
-gPacketType.kPacket_Sound											=3D { id=3Dhex2num("0x54") }
-gPacketType.kPacket_Login_Complete									=3D { id=3Dhex2num("0x55") }
-gPacketType.kPacket_Map_Command										=3D { id=3Dhex2num("0x56") }
-gPacketType.kPacket_Update_Regions									=3D { id=3Dhex2num("0x57") }
-gPacketType.kPacket_New_Region										=3D { id=3Dhex2num("0x58") }
-gPacketType.kPacket_New_Context_FX									=3D { id=3Dhex2num("0x59") }
-gPacketType.kPacket_Update_Context_FX								=3D { id=3Dhex2num("0x5A") }
-gPacketType.kPacket_Game_Time										=3D { id=3Dhex2num("0x5B") }
-gPacketType.kPacket_Restart_Ver										=3D { id=3Dhex2num("0x5C") }
-gPacketType.kPacket_Pre_Login										=3D { id=3Dhex2num("0x5D") }
-gPacketType.kPacket_Server_List2									=3D { id=3Dhex2num("0x5E") }
-gPacketType.kPacket_Add_Server										=3D { id=3Dhex2num("0x5F") }
-
-gPacketType.kPacket_Server_Remove									=3D { id=3Dhex2num("0x60") }
-gPacketType.kPacket_Destroy_Static									=3D { id=3Dhex2num("0x61") }
-gPacketType.kPacket_Move_Static										=3D { id=3Dhex2num("0x62") }
-gPacketType.kPacket_Area_Load										=3D { id=3Dhex2num("0x63") }
-gPacketType.kPacket_Area_Load_Request								=3D { id=3Dhex2num("0x64") }
-gPacketType.kPacket_Weather_Change									=3D { id=3Dhex2num("0x65") }
-gPacketType.kPacket_Book_Contents									=3D { id=3Dhex2num("0x66") }
-gPacketType.kPacket_Simple_Edit										=3D { id=3Dhex2num("0x67") }
-gPacketType.kPacket_Script_LS_Attach								=3D { id=3Dhex2num("0x68") }
-gPacketType.kPacket_Friends											=3D { id=3Dhex2num("0x69") }
-gPacketType.kPacket_Friend_Notify									=3D { id=3Dhex2num("0x6A") }
-gPacketType.kPacket_Key_Use											=3D { id=3Dhex2num("0x6B") }
-gPacketType.kPacket_Target											=3D { id=3Dhex2num("0x6C") }
-gPacketType.kPacket_Music											=3D { id=3Dhex2num("0x6D") }
-gPacketType.kPacket_Animation										=3D { id=3Dhex2num("0x6E") }
-gPacketType.kPacket_SecureTrade										=3D { id=3Dhex2num("0x6F") }
-
-gPacketType.kPacket_Effect											=3D { id=3Dhex2num("0x70") }
-gPacketType.kPacket_Bulletin_Board									=3D { id=3Dhex2num("0x71") }
-gPacketType.kPacket_SetPlayerWarmode								=3D { id=3Dhex2num("0x72") }
-gPacketType.kPacket_Ping											=3D { id=3Dhex2num("0x73") }
-gPacketType.kPacket_Shop_Data										=3D { id=3Dhex2num("0x74") }
-gPacketType.kPacket_Rename_MOB										=3D { id=3Dhex2num("0x75") }
-gPacketType.kPacket_Server_Change									=3D { id=3Dhex2num("0x76") }
-gPacketType.kPacket_Naked_MOB										=3D { id=3Dhex2num("0x77") }
-gPacketType.kPacket_Equipped_MOB									=3D { id=3Dhex2num("0x78") }
-gPacketType.kPacket_Resource_Query									=3D { id=3Dhex2num("0x79") }
-gPacketType.kPacket_Resource_Data									=3D { id=3Dhex2num("0x7A") }
-gPacketType.kPacket_Sequence										=3D { id=3Dhex2num("0x7B") }
-gPacketType.kPacket_Object_Picker									=3D { id=3Dhex2num("0x7C") }
-gPacketType.kPacket_Picked_Object									=3D { id=3Dhex2num("0x7D") }
-gPacketType.kPacket_God_View_Query									=3D { id=3Dhex2num("0x7E") }
-gPacketType.kPacket_God_View_Data									=3D { id=3Dhex2num("0x7F") }
-
-gPacketType.kPacket_Account_Login_Request							=3D { id=3Dhex2num("0x80")=
 }
-gPacketType.kPacket_Account_Login_OK								=3D { id=3Dhex2num("0x81") }
-gPacketType.kPacket_Account_Login_Failed							=3D { id=3Dhex2num("0x82") }
-gPacketType.kPacket_Account_Delete_Character						=3D { id=3Dhex2num("0x83=
") }
-gPacketType.kPacket_Change_Character_Password						=3D { id=3Dhex2num("0x8=
4") }
-gPacketType.kPacket_Delete_Character_Failed							=3D { id=3Dhex2num("0x85=
") }
-gPacketType.kPacket_All_Characters									=3D { id=3Dhex2num("0x86") }
-gPacketType.kPacket_Send_Resources									=3D { id=3Dhex2num("0x87") }
-gPacketType.kPacket_Open_Paperdoll									=3D { id=3Dhex2num("0x88") }
-gPacketType.kPacket_Corpse_Equipment								=3D { id=3Dhex2num("0x89") }
-gPacketType.kPacket_Trigger_Edit									=3D { id=3Dhex2num("0x8A") }
-gPacketType.kPacket_Display_Sign									=3D { id=3Dhex2num("0x8B") }
-gPacketType.kPacket_Server_Redirect									=3D { id=3Dhex2num("0x8C") }
-gPacketType.kPacket_KR_CharacterCreation							=3D { id=3Dhex2num("0x8D") }
-gPacketType.kPacket_Move_Character									=3D { id=3Dhex2num("0x8E") }
-gPacketType.kPacket_Unused4											=3D { id=3Dhex2num("0x8F") }
-
-gPacketType.kPacket_Open_Course_Gump								=3D { id=3Dhex2num("0x90") }
-gPacketType.kPacket_Post_Login										=3D { id=3Dhex2num("0x91") }
-gPacketType.kPacket_Update_Multi									=3D { id=3Dhex2num("0x92") }
-gPacketType.kPacket_Book_Header										=3D { id=3Dhex2num("0x93") }
-gPacketType.kPacket_Update_Skill									=3D { id=3Dhex2num("0x94") }
-gPacketType.kPacket_Hue_Picker										=3D { id=3Dhex2num("0x95") }
-gPacketType.kPacket_Game_Central_Monitor							=3D { id=3Dhex2num("0x96") }
-gPacketType.kPacket_Move_Player										=3D { id=3Dhex2num("0x97") }
-gPacketType.kPacket_MOB_Name										=3D { id=3Dhex2num("0x98") }
-gPacketType.kPacket_Target_Multi									=3D { id=3Dhex2num("0x99") }
-gPacketType.kPacket_Text_Entry										=3D { id=3Dhex2num("0x9A") }
-gPacketType.kPacket_Request_Assistance								=3D { id=3Dhex2num("0x9B") }
-gPacketType.kPacket_Assist_Request									=3D { id=3Dhex2num("0x9C") }
-gPacketType.kPacket_GM_Single										=3D { id=3Dhex2num("0x9D") }
-gPacketType.kPacket_Shop_Sell										=3D { id=3Dhex2num("0x9E") }
-gPacketType.kPacket_Shop_Offer										=3D { id=3Dhex2num("0x9F") }
-
-gPacketType.kPacket_Server_Select									=3D { id=3Dhex2num("0xA0") }
-gPacketType.kPacket_HP_Health										=3D { id=3Dhex2num("0xA1") }
-gPacketType.kPacket_Mana_Health										=3D { id=3Dhex2num("0xA2") }
-gPacketType.kPacket_Stamina											=3D { id=3Dhex2num("0xA3") }
-gPacketType.kPacket_Hardware_Info									=3D { id=3Dhex2num("0xA4") }
-gPacketType.kPacket_Web_Browser										=3D { id=3Dhex2num("0xA5") }
-gPacketType.kPacket_Message											=3D { id=3Dhex2num("0xA6") }	--Tips/=
Notice window
-gPacketType.kPacket_Request_Tip										=3D { id=3Dhex2num("0xA7") }
-gPacketType.kPacket_Server_List										=3D { id=3Dhex2num("0xA8") } =

-gPacketType.kPacket_Character_List									=3D { id=3Dhex2num("0xA9") }
-gPacketType.kPacket_Current_Target									=3D { id=3Dhex2num("0xAA") }
-gPacketType.kPacket_String_Query									=3D { id=3Dhex2num("0xAB") }
-gPacketType.kPacket_String_Response									=3D { id=3Dhex2num("0xAC") }
-gPacketType.kPacket_Speech_Unicode									=3D { id=3Dhex2num("0xAD") }
-gPacketType.kPacket_Text_Unicode									=3D { id=3Dhex2num("0xAE") }
-gPacketType.kPacket_Death_Animation									=3D { id=3Dhex2num("0xAF") }
-
-gPacketType.kPacket_Generic_Gump									=3D { id=3Dhex2num("0xB0") }
-gPacketType.kPacket_Generic_Gump_Trigger							=3D { id=3Dhex2num("0xB1") }
-gPacketType.kPacket_Chat_Message									=3D { id=3Dhex2num("0xB2") }
-gPacketType.kPacket_Chat_Text										=3D { id=3Dhex2num("0xB3") }
-gPacketType.kPacket_Target_Object_List								=3D { id=3Dhex2num("0xB4") }
-gPacketType.kPacket_Open_Chat										=3D { id=3Dhex2num("0xB5") }
-gPacketType.kPacket_Help_Request									=3D { id=3Dhex2num("0xB6") }
-gPacketType.kPacket_Help_Text										=3D { id=3Dhex2num("0xB7") }
-gPacketType.kPacket_Character_Profile								=3D { id=3Dhex2num("0xB8") }
-gPacketType.kPacket_Features										=3D { id=3Dhex2num("0xB9") }
-gPacketType.kPacket_TrackingArrow									=3D { id=3Dhex2num("0xBA") }
-gPacketType.kPacket_Account_ID										=3D { id=3Dhex2num("0xBB") }
-gPacketType.kPacket_Game_Season										=3D { id=3Dhex2num("0xBC") }
-gPacketType.kPacket_Client_Version									=3D { id=3Dhex2num("0xBD") }
-gPacketType.kPacket_Assist_Version									=3D { id=3Dhex2num("0xBE") }
-gPacketType.kPacket_Generic_Command									=3D { id=3Dhex2num("0xBF") }
-
-gPacketType.kPacket_Hued_FX											=3D { id=3Dhex2num("0xC0") }
-gPacketType.kPacket_Localized_Text									=3D { id=3Dhex2num("0xC1") }
-gPacketType.kPacket_Unicode_Text_Entry								=3D { id=3Dhex2num("0xC2") }
-gPacketType.kPacket_Global_Queue									=3D { id=3Dhex2num("0xC3") }
-gPacketType.kPacket_Semivisible										=3D { id=3Dhex2num("0xC4") }
-gPacketType.kPacket_Invalid_Map										=3D { id=3Dhex2num("0xC5") }
-gPacketType.kPacket_Invalid_Map_Enable								=3D { id=3Dhex2num("0xC6") }
-gPacketType.kPacket_Particle_Effect									=3D { id=3Dhex2num("0xC7") }
-gPacketType.kPacket_Change_Update_Range								=3D { id=3Dhex2num("0xC8") }
-gPacketType.kPacket_Trip_Time										=3D { id=3Dhex2num("0xC9") }
-gPacketType.kPacket_UTrip_Time										=3D { id=3Dhex2num("0xCA") }
-gPacketType.kPacket_Global_Queue_Count								=3D { id=3Dhex2num("0xCB") }
-gPacketType.kPacket_Localized_Text_Plus_String						=3D { id=3Dhex2num("0x=
CC") }
-gPacketType.kPacket_Unknown_God_Packet								=3D { id=3Dhex2num("0xCD") }
-gPacketType.kPacket_IGR_Client										=3D { id=3Dhex2num("0xCE") }
-gPacketType.kPacket_IGR_Login										=3D { id=3Dhex2num("0xCF") }
-
-gPacketType.kPacket_IGR_Configuration								=3D { id=3Dhex2num("0xD0") }
-gPacketType.kPacket_IGR_Logout										=3D { id=3Dhex2num("0xD1") }
-gPacketType.kPacket_Update_Mobile									=3D { id=3Dhex2num("0xD2") }
-gPacketType.kPacket_Show_Mobile										=3D { id=3Dhex2num("0xD3") }
-gPacketType.kPacket_Book_Info										=3D { id=3Dhex2num("0xD4") }
-gPacketType.kPacket_Unknown_Client_Packet							=3D { id=3Dhex2num("0xD5")=
 }
-gPacketType.kPacket_Mega_Cliloc										=3D { id=3Dhex2num("0xD6") }
-gPacketType.kPacket_AOS_Command										=3D { id=3Dhex2num("0xD7") }
-gPacketType.kPacket_Custom_House									=3D { id=3Dhex2num("0xD8") }
-gPacketType.kPacket_Metrics											=3D { id=3Dhex2num("0xD9") }
-gPacketType.kPacket_Mahjong											=3D { id=3Dhex2num("0xDA") }
-gPacketType.kPacket_Character_Transfer_Log							=3D { id=3Dhex2num("0xDB"=
) }
-gPacketType.kPacket_AOSObjProp										=3D { id=3Dhex2num("0xDC") } -- si=
ze was not in necro list
+gPacketType.kPacket_CharacterCreation 								=3D { id=3D0x00 }
+gPacketType.kPacket_Logout					 						=3D { id=3D0x01 }
+gPacketType.kPacket_Request_Movement								=3D { id=3D0x02 }
+gPacketType.kPacket_Speech											=3D { id=3D0x03 }
+gPacketType.kPacket_Request_God_Mode								=3D { id=3D0x04 }
+gPacketType.kPacket_Attack											=3D { id=3D0x05 }
+gPacketType.kPacket_Double_Click									=3D { id=3D0x06 }
+gPacketType.kPacket_Take_Object										=3D { id=3D0x07 }
+gPacketType.kPacket_Drop_Object										=3D { id=3D0x08 }
+gPacketType.kPacket_Single_Click									=3D { id=3D0x09 }
+gPacketType.kPacket_Edit											=3D { id=3D0x0A }
+gPacketType.kPacket_Damage											=3D { id=3D0x0B }
+gPacketType.kPacket_Tile_Data										=3D { id=3D0x0C }
+gPacketType.kPacket_NPC_Data										=3D { id=3D0x0D }
+gPacketType.kPacket_Edit_Template_Data								=3D { id=3D0x0E }
+gPacketType.kPacket_Paperdoll_Old									=3D { id=3D0x0F }
+gPacketType.kPacket_Hue_Data										=3D { id=3D0x10 }
+gPacketType.kPacket_Mobile_Stats									=3D { id=3D0x11 }
+gPacketType.kPacket_Request_SkillOrSpell							=3D { id=3D0x12 }
+gPacketType.kPacket_Equip_Item_Request								=3D { id=3D0x13 }
+gPacketType.kPacket_Change_Elevation								=3D { id=3D0x14 }
+gPacketType.kPacket_Follow											=3D { id=3D0x15 }
+gPacketType.kPacket_Request_Script_Names							=3D { id=3D0x16 }
+gPacketType.kPacket_Script_Tree_Command								=3D { id=3D0x17 }
+gPacketType.kPacket_Script_Attach									=3D { id=3D0x18 }
+gPacketType.kPacket_NPC_Conversation_Data							=3D { id=3D0x19 }
+gPacketType.kPacket_Show_Item										=3D { id=3D0x1A }
+gPacketType.kPacket_Login_Confirm									=3D { id=3D0x1B }
+gPacketType.kPacket_Text											=3D { id=3D0x1C }
+gPacketType.kPacket_Destroy											=3D { id=3D0x1D }
+gPacketType.kPacket_Animate											=3D { id=3D0x1E }
+gPacketType.kPacket_Explode											=3D { id=3D0x1F }
+
+gPacketType.kPacket_Teleport										=3D { id=3D0x20 }
+gPacketType.kPacket_Block_Movement									=3D { id=3D0x21 }
+gPacketType.kPacket_Accept_Movement_Resync_Request					=3D { id=3D0x22 }
+gPacketType.kPacket_Drag_Item										=3D { id=3D0x23 }
+gPacketType.kPacket_Open_Container									=3D { id=3D0x24 }
+gPacketType.kPacket_Object_to_Object								=3D { id=3D0x25 }
+gPacketType.kPacket_Old_Client										=3D { id=3D0x26 }
+gPacketType.kPacket_Get_Item_Failed									=3D { id=3D0x27 }
+gPacketType.kPacket_Drop_Item_Failed								=3D { id=3D0x28 }
+gPacketType.kPacket_Drop_Item_OK									=3D { id=3D0x29 }
+gPacketType.kPacket_Blood											=3D { id=3D0x2A }
+gPacketType.kPacket_God_Mode										=3D { id=3D0x2B }
+gPacketType.kPacket_Death											=3D { id=3D0x2C }
+gPacketType.kPacket_Health											=3D { id=3D0x2D }
+gPacketType.kPacket_Equip_Item										=3D { id=3D0x2E }
+gPacketType.kPacket_Swing											=3D { id=3D0x2F }
+
+gPacketType.kPacket_Attack_OK										=3D { id=3D0x30 }
+gPacketType.kPacket_Attack_End										=3D { id=3D0x31 }
+gPacketType.kPacket_Hack_Mover										=3D { id=3D0x32 }
+gPacketType.kPacket_Group											=3D { id=3D0x33 }
+gPacketType.kPacket_Client_Query									=3D { id=3D0x34 }
+gPacketType.kPacket_Resource_Type									=3D { id=3D0x35 }
+gPacketType.kPacket_Resource_Tile_Data								=3D { id=3D0x36 }
+gPacketType.kPacket_Move_Object										=3D { id=3D0x37 }
+gPacketType.kPacket_Follow_Move										=3D { id=3D0x38 }
+gPacketType.kPacket_Groups											=3D { id=3D0x39 }
+gPacketType.kPacket_Skills											=3D { id=3D0x3A }
+gPacketType.kPacket_Accept_Offer									=3D { id=3D0x3B }
+gPacketType.kPacket_Container_Contents								=3D { id=3D0x3C }
+gPacketType.kPacket_Ship											=3D { id=3D0x3D }
+gPacketType.kPacket_Versions										=3D { id=3D0x3E }
+gPacketType.kPacket_Update_Statics									=3D { id=3D0x3F }
+
+gPacketType.kPacket_Update_Terrain									=3D { id=3D0x40 }
+gPacketType.kPacket_Update_Tiledata									=3D { id=3D0x41 }
+gPacketType.kPacket_Update_Art										=3D { id=3D0x42 }
+gPacketType.kPacket_Update_Anim										=3D { id=3D0x43 }
+gPacketType.kPacket_Update_Hues										=3D { id=3D0x44 }
+gPacketType.kPacket_Ver_OK											=3D { id=3D0x45 }
+gPacketType.kPacket_New_Art											=3D { id=3D0x46 }
+gPacketType.kPacket_New_Terrain										=3D { id=3D0x47 }
+gPacketType.kPacket_New_Anim										=3D { id=3D0x48 }
+gPacketType.kPacket_New_Hues										=3D { id=3D0x49 }
+gPacketType.kPacket_Destroy_Art										=3D { id=3D0x4A }
+gPacketType.kPacket_Check_Ver										=3D { id=3D0x4B }
+gPacketType.kPacket_Script_Names									=3D { id=3D0x4C }
+gPacketType.kPacket_Script_File										=3D { id=3D0x4D }
+gPacketType.kPacket_Light_Change									=3D { id=3D0x4E }
+gPacketType.kPacket_Sunlight										=3D { id=3D0x4F }
+
+gPacketType.kPacket_Board_Header									=3D { id=3D0x50 }
+gPacketType.kPacket_Board_Message									=3D { id=3D0x51 }
+gPacketType.kPacket_Post_Message									=3D { id=3D0x52 }
+gPacketType.kPacket_Login_Reject									=3D { id=3D0x53 }
+gPacketType.kPacket_Sound											=3D { id=3D0x54 }
+gPacketType.kPacket_Login_Complete									=3D { id=3D0x55 }
+gPacketType.kPacket_Map_Command										=3D { id=3D0x56 }
+gPacketType.kPacket_Update_Regions									=3D { id=3D0x57 }
+gPacketType.kPacket_New_Region										=3D { id=3D0x58 }
+gPacketType.kPacket_New_Context_FX									=3D { id=3D0x59 }
+gPacketType.kPacket_Update_Context_FX								=3D { id=3D0x5A }
+gPacketType.kPacket_Game_Time										=3D { id=3D0x5B }
+gPacketType.kPacket_Restart_Ver										=3D { id=3D0x5C }
+gPacketType.kPacket_Pre_Login										=3D { id=3D0x5D }
+gPacketType.kPacket_Server_List2									=3D { id=3D0x5E }
+gPacketType.kPacket_Add_Server										=3D { id=3D0x5F }
+
+gPacketType.kPacket_Server_Remove									=3D { id=3D0x60 }
+gPacketType.kPacket_Destroy_Static									=3D { id=3D0x61 }
+gPacketType.kPacket_Move_Static										=3D { id=3D0x62 }
+gPacketType.kPacket_Area_Load										=3D { id=3D0x63 }
+gPacketType.kPacket_Area_Load_Request								=3D { id=3D0x64 }
+gPacketType.kPacket_Weather_Change									=3D { id=3D0x65 }
+gPacketType.kPacket_Book_Contents									=3D { id=3D0x66 }
+gPacketType.kPacket_Simple_Edit										=3D { id=3D0x67 }
+gPacketType.kPacket_Script_LS_Attach								=3D { id=3D0x68 }
+gPacketType.kPacket_Friends											=3D { id=3D0x69 }
+gPacketType.kPacket_Friend_Notify									=3D { id=3D0x6A }
+gPacketType.kPacket_Key_Use											=3D { id=3D0x6B }
+gPacketType.kPacket_Target											=3D { id=3D0x6C }
+gPacketType.kPacket_Music											=3D { id=3D0x6D }
+gPacketType.kPacket_Animation										=3D { id=3D0x6E }
+gPacketType.kPacket_SecureTrade										=3D { id=3D0x6F }
+
+gPacketType.kPacket_Effect											=3D { id=3D0x70 }
+gPacketType.kPacket_Bulletin_Board									=3D { id=3D0x71 }
+gPacketType.kPacket_SetPlayerWarmode								=3D { id=3D0x72 }
+gPacketType.kPacket_Ping											=3D { id=3D0x73 }
+gPacketType.kPacket_Shop_Data										=3D { id=3D0x74 }
+gPacketType.kPacket_Rename_MOB										=3D { id=3D0x75 }
+gPacketType.kPacket_Server_Change									=3D { id=3D0x76 }
+gPacketType.kPacket_Naked_MOB										=3D { id=3D0x77 }
+gPacketType.kPacket_Equipped_MOB									=3D { id=3D0x78 }
+gPacketType.kPacket_Resource_Query									=3D { id=3D0x79 }
+gPacketType.kPacket_Resource_Data									=3D { id=3D0x7A }
+gPacketType.kPacket_Sequence										=3D { id=3D0x7B }
+gPacketType.kPacket_Object_Picker									=3D { id=3D0x7C }
+gPacketType.kPacket_Picked_Object									=3D { id=3D0x7D }
+gPacketType.kPacket_God_View_Query									=3D { id=3D0x7E }
+gPacketType.kPacket_God_View_Data									=3D { id=3D0x7F }
+
+gPacketType.kPacket_Account_Login_Request							=3D { id=3D0x80 }
+gPacketType.kPacket_Account_Login_OK								=3D { id=3D0x81 }
+gPacketType.kPacket_Account_Login_Failed							=3D { id=3D0x82 }
+gPacketType.kPacket_Account_Delete_Character						=3D { id=3D0x83 }
+gPacketType.kPacket_Change_Character_Password						=3D { id=3D0x84 }
+gPacketType.kPacket_Delete_Character_Failed							=3D { id=3D0x85 }
+gPacketType.kPacket_All_Characters									=3D { id=3D0x86 }
+gPacketType.kPacket_Send_Resources									=3D { id=3D0x87 }
+gPacketType.kPacket_Open_Paperdoll									=3D { id=3D0x88 }
+gPacketType.kPacket_Corpse_Equipment								=3D { id=3D0x89 }
+gPacketType.kPacket_Trigger_Edit									=3D { id=3D0x8A }
+gPacketType.kPacket_Display_Sign									=3D { id=3D0x8B }
+gPacketType.kPacket_Server_Redirect									=3D { id=3D0x8C }
+gPacketType.kPacket_KR_CharacterCreation							=3D { id=3D0x8D }
+gPacketType.kPacket_Move_Character									=3D { id=3D0x8E }
+gPacketType.kPacket_Unused4											=3D { id=3D0x8F }
+
+gPacketType.kPacket_Open_Course_Gump								=3D { id=3D0x90 }
+gPacketType.kPacket_Post_Login										=3D { id=3D0x91 }
+gPacketType.kPacket_Update_Multi									=3D { id=3D0x92 }
+gPacketType.kPacket_Book_Header										=3D { id=3D0x93 }
+gPacketType.kPacket_Update_Skill									=3D { id=3D0x94 }
+gPacketType.kPacket_Hue_Picker										=3D { id=3D0x95 }
+gPacketType.kPacket_Game_Central_Monitor							=3D { id=3D0x96 }
+gPacketType.kPacket_Move_Player										=3D { id=3D0x97 }
+gPacketType.kPacket_MOB_Name										=3D { id=3D0x98 }
+gPacketType.kPacket_Target_Multi									=3D { id=3D0x99 }
+gPacketType.kPacket_Text_Entry										=3D { id=3D0x9A }
+gPacketType.kPacket_Request_Assistance								=3D { id=3D0x9B }
+gPacketType.kPacket_Assist_Request									=3D { id=3D0x9C }
+gPacketType.kPacket_GM_Single										=3D { id=3D0x9D }
+gPacketType.kPacket_Shop_Sell										=3D { id=3D0x9E }
+gPacketType.kPacket_Shop_Offer										=3D { id=3D0x9F }
+
+gPacketType.kPacket_Server_Select									=3D { id=3D0xA0 }
+gPacketType.kPacket_HP_Health										=3D { id=3D0xA1 }
+gPacketType.kPacket_Mana_Health										=3D { id=3D0xA2 }
+gPacketType.kPacket_Stamina											=3D { id=3D0xA3 }
+gPacketType.kPacket_Hardware_Info									=3D { id=3D0xA4 }
+gPacketType.kPacket_Web_Browser										=3D { id=3D0xA5 }
+gPacketType.kPacket_Message											=3D { id=3D0xA6 }	--Tips/Notice wind=
ow
+gPacketType.kPacket_Request_Tip										=3D { id=3D0xA7 }
+gPacketType.kPacket_Server_List										=3D { id=3D0xA8 } =

+gPacketType.kPacket_Character_List									=3D { id=3D0xA9 }
+gPacketType.kPacket_Current_Target									=3D { id=3D0xAA }
+gPacketType.kPacket_String_Query									=3D { id=3D0xAB }
+gPacketType.kPacket_String_Response									=3D { id=3D0xAC }
+gPacketType.kPacket_Speech_Unicode									=3D { id=3D0xAD }
+gPacketType.kPacket_Text_Unicode									=3D { id=3D0xAE }
+gPacketType.kPacket_Death_Animation									=3D { id=3D0xAF }
+
+gPacketType.kPacket_Generic_Gump									=3D { id=3D0xB0 }
+gPacketType.kPacket_Generic_Gump_Trigger							=3D { id=3D0xB1 }
+gPacketType.kPacket_Chat_Message									=3D { id=3D0xB2 }
+gPacketType.kPacket_Chat_Text										=3D { id=3D0xB3 }
+gPacketType.kPacket_Target_Object_List								=3D { id=3D0xB4 }
+gPacketType.kPacket_Open_Chat										=3D { id=3D0xB5 }
+gPacketType.kPacket_Help_Request									=3D { id=3D0xB6 }
+gPacketType.kPacket_Help_Text										=3D { id=3D0xB7 }
+gPacketType.kPacket_Character_Profile								=3D { id=3D0xB8 }
+gPacketType.kPacket_Features										=3D { id=3D0xB9 }
+gPacketType.kPacket_TrackingArrow									=3D { id=3D0xBA }
+gPacketType.kPacket_Account_ID										=3D { id=3D0xBB }
+gPacketType.kPacket_Game_Season										=3D { id=3D0xBC }
+gPacketType.kPacket_Client_Version									=3D { id=3D0xBD }
+gPacketType.kPacket_Assist_Version									=3D { id=3D0xBE }
+gPacketType.kPacket_Generic_Command									=3D { id=3D0xBF }
+
+gPacketType.kPacket_Hued_FX											=3D { id=3D0xC0 }
+gPacketType.kPacket_Localized_Text									=3D { id=3D0xC1 }
+gPacketType.kPacket_Unicode_Text_Entry								=3D { id=3D0xC2 }
+gPacketType.kPacket_Global_Queue									=3D { id=3D0xC3 }
+gPacketType.kPacket_Semivisible										=3D { id=3D0xC4 }
+gPacketType.kPacket_Invalid_Map										=3D { id=3D0xC5 }
+gPacketType.kPacket_Invalid_Map_Enable								=3D { id=3D0xC6 }
+gPacketType.kPacket_Particle_Effect									=3D { id=3D0xC7 }
+gPacketType.kPacket_Change_Update_Range								=3D { id=3D0xC8 }
+gPacketType.kPacket_Trip_Time										=3D { id=3D0xC9 }
+gPacketType.kPacket_UTrip_Time										=3D { id=3D0xCA }
+gPacketType.kPacket_Global_Queue_Count								=3D { id=3D0xCB }
+gPacketType.kPacket_Localized_Text_Plus_String						=3D { id=3D0xCC }
+gPacketType.kPacket_Unknown_God_Packet								=3D { id=3D0xCD }
+gPacketType.kPacket_IGR_Client										=3D { id=3D0xCE }
+gPacketType.kPacket_IGR_Login										=3D { id=3D0xCF }
+
+gPacketType.kPacket_IGR_Configuration								=3D { id=3D0xD0 }
+gPacketType.kPacket_IGR_Logout										=3D { id=3D0xD1 }
+gPacketType.kPacket_Update_Mobile									=3D { id=3D0xD2 }
+gPacketType.kPacket_Show_Mobile										=3D { id=3D0xD3 }
+gPacketType.kPacket_Book_Info										=3D { id=3D0xD4 }
+gPacketType.kPacket_Unknown_Client_Packet							=3D { id=3D0xD5 }
+gPacketType.kPacket_Mega_Cliloc										=3D { id=3D0xD6 }
+gPacketType.kPacket_AOS_Command										=3D { id=3D0xD7 }
+gPacketType.kPacket_Custom_House									=3D { id=3D0xD8 }
+gPacketType.kPacket_Metrics											=3D { id=3D0xD9 }
+gPacketType.kPacket_Mahjong											=3D { id=3D0xDA }
+gPacketType.kPacket_Character_Transfer_Log							=3D { id=3D0xDB }
+gPacketType.kPacket_AOSObjProp										=3D { id=3D0xDC } -- size was not =
in necro list
 -- dd df (compressed gump und buff system)
-gPacketType.kPacket_Compressed_Gump									=3D { id=3Dhex2num("0xDD") }
+gPacketType.kPacket_Compressed_Gump									=3D { id=3D0xDD }
 -- unknown yet
-gPacketType.kPacket_unknownDEpacket									=3D { id=3Dhex2num("0xDE") }
+gPacketType.kPacket_unknownDEpacket									=3D { id=3D0xDE }
 -- buff/debuff packet
-gPacketType.kPacket_BuffDebuff_System								=3D { id=3Dhex2num("0xDF") }
+gPacketType.kPacket_BuffDebuff_System								=3D { id=3D0xDF }
 =

 --[[
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE0") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE1") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE2") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE3") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE4") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE5") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE6") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE7") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE8") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xE9") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xEA") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xEB") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xEC") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xED") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xEE") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xEF") }
-
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF0") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF1") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF2") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF3") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF4") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF5") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF6") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF7") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF8") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xF9") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xFA") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xFB") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xFC") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xFD") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xFE") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xFF") }
+gPacketType.kPacket_								=3D { id=3D0xE0 }
+gPacketType.kPacket_								=3D { id=3D0xE1 }
+gPacketType.kPacket_								=3D { id=3D0xE2 }
+gPacketType.kPacket_								=3D { id=3D0xE3 }
+gPacketType.kPacket_								=3D { id=3D0xE4 }
+gPacketType.kPacket_								=3D { id=3D0xE5 }
+gPacketType.kPacket_								=3D { id=3D0xE6 }
+gPacketType.kPacket_								=3D { id=3D0xE7 }
+gPacketType.kPacket_								=3D { id=3D0xE8 }
+gPacketType.kPacket_								=3D { id=3D0xE9 }
+gPacketType.kPacket_								=3D { id=3D0xEA }
+gPacketType.kPacket_								=3D { id=3D0xEB }
+gPacketType.kPacket_								=3D { id=3D0xEC }
+gPacketType.kPacket_								=3D { id=3D0xED }
+gPacketType.kPacket_								=3D { id=3D0xEE }
+gPacketType.kPacket_								=3D { id=3D0xEF }
+
+gPacketType.kPacket_								=3D { id=3D0xF0 }
+gPacketType.kPacket_								=3D { id=3D0xF1 }
+gPacketType.kPacket_								=3D { id=3D0xF2 }
+gPacketType.kPacket_								=3D { id=3D0xF3 }
+gPacketType.kPacket_								=3D { id=3D0xF4 }
+gPacketType.kPacket_								=3D { id=3D0xF5 }
+gPacketType.kPacket_								=3D { id=3D0xF6 }
+gPacketType.kPacket_								=3D { id=3D0xF7 }
+gPacketType.kPacket_								=3D { id=3D0xF8 }
+gPacketType.kPacket_								=3D { id=3D0xF9 }
+gPacketType.kPacket_								=3D { id=3D0xFA }
+gPacketType.kPacket_								=3D { id=3D0xFB }
+gPacketType.kPacket_								=3D { id=3D0xFC }
+gPacketType.kPacket_								=3D { id=3D0xFD }
+gPacketType.kPacket_								=3D { id=3D0xFE }
+gPacketType.kPacket_								=3D { id=3D0xFF }
 ]]--

Modified: trunk/lua/net/net.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.main.lua (original)
+++ trunk/lua/net/net.main.lua Sat Aug 23 14:20:18 2008
@@ -3,6 +3,7 @@
 dofile(libpath .. "net/net.object.lua")
 dofile(libpath .. "net/net.effect.lua")
 dofile(libpath .. "net/net.multi.lua")
+dofile(libpath .. "net/net.partysystem.lua")
 dofile(libpath .. "net/net.uodragdrop.lua")
 dofile(libpath .. "net/net.corpse.lua")
 dofile(libpath .. "net/net.world.lua")

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Sat Aug 23 14:20:18 2008
@@ -2,39 +2,39 @@
 -- see also lib.packet.lua and lib.protocol.lua
 -- see also net.popup.lua
 =

-kPacket_Generic_SubCommand_FastWalkInit			=3D hex2num("0x01")
-kPacket_Generic_SubCommand_FastWalkAddKey		=3D hex2num("0x02")
-kPacket_Generic_SubCommand_CloseGenericGump		=3D hex2num("0x04")
-kPacket_Generic_SubCommand_Screensize			=3D hex2num("0x05")
-kPacket_Generic_SubCommand_PartySystem			=3D hex2num("0x06")
-kPacket_Generic_SubCommand_QuestArrow			=3D hex2num("0x07")
-kPacket_Generic_SubCommand_MapChange			=3D hex2num("0x08")
-kPacket_Generic_SubCommand_DisarmRequest		=3D hex2num("0x09")
-kPacket_Generic_SubCommand_AOSTooltip			=3D hex2num("0x10")
+kPacket_Generic_SubCommand_FastWalkInit			=3D 0x01
+kPacket_Generic_SubCommand_FastWalkAddKey		=3D 0x02
+kPacket_Generic_SubCommand_CloseGenericGump		=3D 0x04
+kPacket_Generic_SubCommand_Screensize			=3D 0x05
+kPacket_Generic_SubCommand_PartySystem			=3D 0x06
+kPacket_Generic_SubCommand_QuestArrow			=3D 0x07
+kPacket_Generic_SubCommand_MapChange			=3D 0x08
+kPacket_Generic_SubCommand_DisarmRequest		=3D 0x09
+kPacket_Generic_SubCommand_AOSTooltip			=3D 0x10
 --(0x0A) Sent by using the client Wrestle Stun Macro key in Options.
 --This is no longer used since AoS was introduced. The Macro selection tha=
t used it was removed.
-kPacket_Generic_SubCommand_Wrestling_Stun		=3D hex2num("0x0A")
-kPacket_Generic_SubCommand_ClientLanguage		=3D hex2num("0x0B")	-- Client s=
ends Client-language to Server
-kPacket_Generic_SubCommand_CloseStatus			=3D hex2num("0x0C")
-kPacket_Generic_SubCommand_3DClientAction		=3D hex2num("0x0E")	-- Client S=
ent. Server responds with Play Animation packets.
-kPacket_Generic_SubCommand_PopupRequest			=3D hex2num("0x13")	-- Client ->=
 Server packet
-kPacket_Generic_SubCommand_DisplayPopup			=3D hex2num("0x14")
-kPacket_Generic_SubCommand_PopupEntrySelect		=3D hex2num("0x15")
-kPacket_Generic_SubCommand_CodexOfWisdom		=3D hex2num("0x17")
-kPacket_Generic_SubCommand_EnableMapDiff		=3D hex2num("0x18")
-kPacket_Generic_SubCommand_ExtendedStats		=3D hex2num("0x19")
-kPacket_Generic_SubCommand_ExtendedStats2		=3D hex2num("0x1A")
-kPacket_Generic_SubCommand_NewSpellbook			=3D hex2num("0x1B")	-- Create Ne=
w Spellbook
-kPacket_Generic_SubCommand_SpellSelected		=3D hex2num("0x1C")	-- Client ->=
 Server packet ! Doppelclick auf Spell
-kPacket_Generic_SubCommand_RevisionCustomHouse	=3D hex2num("0x1D")	-- Send=
s a house Revision number for handling client multi cache.
-																	-- If revision is newer than what client has it asks for =
the new multi packets to cache it.
-kPacket_Generic_SubCommand_HouseSerial			=3D hex2num("0x1E")
-kPacket_Generic_SubCommand_Ability_Icon			=3D hex2num("0x21")	-- nodata ju=
st (bf 00 05 21) , used together with weapon abilities / combat skills
-kPacket_Generic_SubCommand_OldDamage			=3D hex2num("0x22")	-- Done!
-kPacket_Generic_SubCommand_UnknownSE			=3D hex2num("0x24")	-- Client -> Se=
rver packet
-kPacket_Generic_SubCommand_EnableSESpellIcons	=3D hex2num("0x25")
-kPacket_Generic_SubCommand_SpeedMode			=3D hex2num("0x26")
-kPacket_Generic_SubCommand_NewRaceGender		=3D hex2num("0x2A")
+kPacket_Generic_SubCommand_Wrestling_Stun		=3D 0x0A
+kPacket_Generic_SubCommand_ClientLanguage		=3D 0x0B	-- Client sends Client=
-language to Server
+kPacket_Generic_SubCommand_CloseStatus			=3D 0x0C
+kPacket_Generic_SubCommand_3DClientAction		=3D 0x0E	-- Client Sent. Server=
 responds with Play Animation packets.
+kPacket_Generic_SubCommand_PopupRequest			=3D 0x13	-- Client -> Server pac=
ket
+kPacket_Generic_SubCommand_DisplayPopup			=3D 0x14
+kPacket_Generic_SubCommand_PopupEntrySelect		=3D 0x15
+kPacket_Generic_SubCommand_CodexOfWisdom		=3D 0x17
+kPacket_Generic_SubCommand_EnableMapDiff		=3D 0x18
+kPacket_Generic_SubCommand_ExtendedStats		=3D 0x19
+kPacket_Generic_SubCommand_ExtendedStats2		=3D 0x1A
+kPacket_Generic_SubCommand_NewSpellbook			=3D 0x1B	-- Create New Spellbook
+kPacket_Generic_SubCommand_SpellSelected		=3D 0x1C	-- Client -> Server pac=
ket ! Doppelclick auf Spell
+kPacket_Generic_SubCommand_RevisionCustomHouse	=3D 0x1D	-- Sends a house R=
evision number for handling client multi cache.
+															-- If revision is newer than what client has it asks for th=
e new multi packets to cache it.
+kPacket_Generic_SubCommand_HouseSerial			=3D 0x1E
+kPacket_Generic_SubCommand_Ability_Icon			=3D 0x21	-- nodata just (bf 00 0=
5 21) , used together with weapon abilities / combat skills
+kPacket_Generic_SubCommand_OldDamage			=3D 0x22	-- Done!
+kPacket_Generic_SubCommand_UnknownSE			=3D 0x24	-- Client -> Server packet
+kPacket_Generic_SubCommand_EnableSESpellIcons	=3D 0x25
+kPacket_Generic_SubCommand_SpeedMode			=3D 0x26
+kPacket_Generic_SubCommand_NewRaceGender		=3D 0x2A
 --[[
 -race_gender-packet
 Client -> Server =

@@ -169,10 +169,7 @@
 =

 	-- Party System
 	if (subcmd =3D=3D kPacket_Generic_SubCommand_PartySystem) then -- 0x06
-		for i =3D 0, size-6 do
-			local temp =3D input:PopNetUint8()
-			print("NET (todo): 0xbf subcmd 0x06: "..temp)
-		end
+		HandlePartySystemMessage(input,size)
 	end
 =

 	-- Quest Arrow (mobile)
@@ -384,7 +381,7 @@
 		Crash()
 	end
 	if (rest > 0) then
---		printf("WARNING ! kPacket_Generic_Command : subcmd 0x%02x (used=3D%d s=
ize=3D%d) popped to few\n",subcmd,used,size)
+		printf("WARNING ! kPacket_Generic_Command : subcmd 0x%02x (used=3D%d siz=
e=3D%d) popped to few\n",subcmd,used,size)
 		input:PopRaw(rest)
 	end
 end



From no-reply at zwischenwelt.org  Sat Aug 23 16:21:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 14:21:16 -0000
Subject: [Iris-commit] [IRIS] r2399 - /trunk/lua/net/net.partysystem.lua
Message-ID: <20080823142116.ABC251524030@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 23 16:21:15 2008
New Revision: 2399

Log:
simple party invitation accept/decline dialog

Modified:
    trunk/lua/net/net.partysystem.lua

Modified: trunk/lua/net/net.partysystem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.partysystem.lua (original)
+++ trunk/lua/net/net.partysystem.lua Sat Aug 23 16:21:15 2008
@@ -29,10 +29,20 @@
 	out:SendPacket()
 end
 =

+function	ClosePartyInvitationDialog	() =

+	if (gInvitationDialog) then gInvitationDialog:Destroy() gInvitationDialog=
 =3D nil end =

+end
+
 function	gPartySystemHandler.kPartySubCmd_Invite	(input,size)
 	local leaderID =3D input:PopNetUint32()
 	print("partysystem:got invite, accepting (TODO:dialog)")
-	PartySendAccept()
+	=

+	local rows =3D {
+		{ {"party invitation"} },
+		{ {"Decline",function () ClosePartyInvitationDialog() end} },
+		{ {"Accept",function () ClosePartyInvitationDialog() PartySendAccept() e=
nd} },
+		}
+	gInvitationDialog =3D guimaker.MakeTableDlg(rows,100,100,false,true,gGuiD=
efaultStyleSet,"window")
 end
 =

 -- used to inform party members of the other members, e.g. after accept or=
 adding a new member
@@ -63,6 +73,7 @@
 	=

 	if (num =3D=3D 0) then
 		print("kPartySubCmd_RemoveMembers: list cleared",removedid)
+		ClosePartyInvitationDialog()
 		return
 	end
 	local memberlist =3D {}



From no-reply at zwischenwelt.org  Sat Aug 23 23:08:30 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 21:08:30 -0000
Subject: [Iris-commit] [IRIS] r2400 - in /trunk/lua: config_declarations.lua
 lib.2d.spriteblock.lua lib.3d.tilebatch.lua main.lua
Message-ID: <20080823210830.625E31C1864D@zwischenwelt.org>

Author: hagish
Date: Sat Aug 23 23:08:29 2008
New Revision: 2400

Log:
first version of the new config system, config.lua.dist is obsolete, see lu=
a/config_declarations.lua instead

Added:
    trunk/lua/config_declarations.lua
Modified:
    trunk/lua/lib.2d.spriteblock.lua
    trunk/lua/lib.3d.tilebatch.lua
    trunk/lua/main.lua

Modified: trunk/lua/lib.2d.spriteblock.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.spriteblock.lua (original)
+++ trunk/lua/lib.2d.spriteblock.lua Sat Aug 23 23:08:29 2008
@@ -6,7 +6,7 @@
 -- ***** ***** ***** ***** ***** cUOSpriteBlock
 =

 cUOSpriteBlock =3D CreateClass()
-function cUOSpriteBlock:New () local c =3D CreateClassInstance(cUOSpriteBl=
ock) c:Init() return c end
+function cUOSpriteBlock:New () local c =3D CreateClassInstance(cUOSpriteBl=
ock) return c end
 function cUOSpriteBlock:Init ()
 	self.pStaticAtlasMats =3D {} -- self.pStaticAtlasMats[iTileTypeID][iHue] =
=3D pAtlasPiece (see ArtAtlasLoadAndLock)
 	self.pStaticGroups =3D {}

Modified: trunk/lua/lib.3d.tilebatch.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.tilebatch.lua (original)
+++ trunk/lua/lib.3d.tilebatch.lua Sat Aug 23 23:08:29 2008
@@ -148,6 +148,14 @@
 	if (meshname and meshname ~=3D false) then
 		local meshbuffer =3D GetMeshBuffer(meshname) -- for mousepicking
 	end
+end
+
+function cTileBatch:CalculateHash ()
+	local s =3D ""
+	for k,v in pairs(self.lStaticTiles) do
+		s =3D s .. "-" .. v.rawdata[1] .. "-" .. v.rawdata[2] .. "-" .. v.rawdat=
a[3] .. "-" .. v.rawdata[4] .. "-" .. v.rawdata[5]
+	end
+	if MD5FromString then return MD5FromString(s) else return "MD5FromString_=
missing" end
 end
 =

 -- handles the entity creation

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat Aug 23 23:08:29 2008
@@ -7,7 +7,8 @@
 libpath 			=3D gMainWorkingDir.."lua/"
 lugreluapath 		=3D gMainWorkingDir..(file_exists(gMainWorkingDir.."mylugre=
") and "mylugre/lua/" or "lugre/lua/")
 gConfigPath 		=3D datapath.."config.lua"
-gConfigPathFallback	=3D datapath.."config.lua.dist"
+--~ gConfigPathFallback	=3D datapath.."config.lua.dist"
+gConfigPathFallback	=3D libpath.."config_declarations.lua"
 gMacroPath 			=3D datapath.."mymacros.lua"
 gMacroPathFallback	=3D datapath.."mymacros.lua.dist"
 gMainPluginDir 		=3D gMainWorkingDir.."plugins/"



From no-reply at zwischenwelt.org  Sat Aug 23 23:55:11 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 21:55:11 -0000
Subject: [Iris-commit] [IRIS] r2401 - in /trunk:
 data/models/models/to_002000/mdl_001372.mesh
 data/models/models/to_002000/mdl_001373.mesh lua/filter/filter.art.lua
Message-ID: <20080823215511.EF5B91C18651@zwischenwelt.org>

Author: hagish
Date: Sat Aug 23 23:55:11 2008
New Revision: 2401

Log:
fixed wrong roof tile

Removed:
    trunk/data/models/models/to_002000/mdl_001372.mesh
Modified:
    trunk/data/models/models/to_002000/mdl_001373.mesh
    trunk/lua/filter/filter.art.lua

Modified: trunk/data/models/models/to_002000/mdl_001373.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Sat Aug 23 23:55:11 2008
@@ -144,6 +144,9 @@
 =

 gArtFilter[8663]=3D{maptoid=3D167,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D2,zadd=3D0}
 gArtFilter[8664]=3D{maptoid=3D167,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D2,zadd=3D0}
+
+-- roof tiles
+gArtFilter[1372]=3D{maptoid=3D1373,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D1,zadd=3D0}
 =

 -- sandstone
 gArtFilter[387]=3D{maptoid=3D386,rotation=3D"x:0,y:0,z:-90",xadd=3D1,yadd=
=3D0,zadd=3D0}



From no-reply at zwischenwelt.org  Sun Aug 24 01:32:41 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Aug 2008 23:32:41 -0000
Subject: [Iris-commit] [IRIS] r2402 - /tools/installer/Iris_Setup.iss
 /trunk/data/config.lua.dist /trunk/lua/lib.3d.renderer.lua
 /trunk/lua/lib.loading.lua /trunk/lua/lib.mapblock.3d.water.lua
 /trunk/widgets/widget.uocontaineritem.lua
Message-ID: <20080824000040.867391524032@zwischenwelt.org>

Author: sience
Date: Sun Aug 24 01:32:40 2008
New Revision: 2402

Log:
-some obsolete options removed from config.lua.dist
-installer script updated

Modified:
    tools/installer/Iris_Setup.iss
    trunk/data/config.lua.dist
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.loading.lua
    trunk/lua/lib.mapblock.3d.water.lua
    trunk/widgets/widget.uocontaineritem.lua

Modified: tools/installer/Iris_Setup.iss
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- tools/installer/Iris_Setup.iss (original)
+++ tools/installer/Iris_Setup.iss Sun Aug 24 01:32:40 2008
@@ -3,13 +3,14 @@
 #define AppUpdaterName "Iris2 Updater"
 #define AppUpdaterName2 "Iris2 Emergency Updater"
 #define AppVersion "2.0"
-#define BuildNumber "build 2010"
 #define AppPublisher "Iris2 Developer Team"
 #define AppURL "http://www.iris2.de"
 #define AppExeName "iris2.exe"
 #define UpdaterExeName "updater.exe"
 #define UpdaterExeName2 "emergency_update.bat"
 #define AppUrlName "iris2.url"
+#define BuildNumber "build 2365"
+#define DataDir "svnclient\Data\"
 =

 [Setup]
 AppName=3D{#AppName}
@@ -20,8 +21,8 @@
 AppUpdatesURL=3D{#AppURL}
 DefaultDirName=3D{pf}\{#AppName2}
 DefaultGroupName=3D{#AppName2}
-LicenseFile=3DData\COPYING
-InfoBeforeFile=3DData\README
+LicenseFile=3D{#DataDir}\COPYING
+InfoBeforeFile=3D{#DataDir}\README
 OutputDir=3DOutput
 OutputBaseFilename=3D{#AppName}_Setup
 Compression=3Dlzma/normal
@@ -44,7 +45,7 @@
 Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: =
{cm:AdditionalIcons}; Flags: unchecked
 =

 [Files]
-Source: Data\*; DestDir: {app}; Flags: recursesubdirs createallsubdirs
+Source: {#DataDir}*; DestDir: {app}; Flags: recursesubdirs createallsubdirs
 Source: SplashScreen.bmp; Flags: dontcopy
 Source: vcredist_x86.exe; DestDir: {app}; Flags: deleteafterinstall
 =


Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sun Aug 24 01:32:40 2008
@@ -1,6 +1,8 @@
 -- DO NOT EDIT THIS FILE DIRECTLY, or your changes might be lost when usin=
g the updater.
 -- create a new file config.lua to make individual configurations outside =
version management
 -- you can override individual settings there.
+
+gCurrentRenderer =3D Renderer3D	-- Renderer2D
 =

 kGuiToolTipWait =3D 100
 =

@@ -19,11 +21,7 @@
 -- gUOPath =3D "c:/programme/uo/"  -- example for win
 =

 gShiftDragCombine =3D false
-gDisableContainerItemStackDoubleImage =3D false
 gDebugTerrainGrid =3D false
-
--- Speech support
-gSpeechSupport =3D true
 =

 -- GUI Stuff
 gHideHUDNames =3D false
@@ -32,6 +30,9 @@
 gHideMemoryUsage =3D false				-- includes now also fps
 =

 -- Font settings
+
+gStatsInfoFadeLineColor =3D {0,1,1,1}
+
 gFontDefs  =3D {}
 gFontDefs["Default"] =3D {
 	name =3D "BerlinSans32",
@@ -68,9 +69,6 @@
 =

 -- GUI Styles : sience,iris,ray  (see lua\gui\gui.styles.lua)
 gGuiDefaultStyleSet =3D "sience"
-
--- just for testing the new guistyles
-gNewGuiStyle=3D"naked"
 =

 -- loader types, FullFile is faster, but uses more ram, OnDemand is slower=
, but uses almost no ram
 gGroundBlockLoaderType 				=3D "FullFile"
@@ -106,9 +104,6 @@
 -- Fog of War
 gUseDistanceFog =3D true	-- enable/disable fog
 gFogValue=3D16				-- distance from cam
-gFogcolorred=3D0
-gFogcolorgreen=3D0
-gFogcolorblue=3D0
 =

 -- Sun Light
 gSunLightDirection =3D {x=3D1,y=3D1,z=3D-1}
@@ -116,18 +111,13 @@
 gSunLightSpecular =3D {r=3D1.0,g=3D1.0,b=3D1.0}
 =

 -- Ambient Light
-gAmbientLight =3D {r=3D0.5,g=3D0.5,b=3D0.5}
+gAmbientLight =3D {r=3D0.2,g=3D0.2,b=3D0.2}
 =

 -- Soundeffects & Music
 -- gUseSoundSystem =3D "openal"
 gUseSoundSystem =3D "fmod"
 gUseEffect =3D true
 gUseMusic =3D true
-
-gCurrentRenderer =3D Renderer3D	-- Renderer2D
-
-
-gStatsInfoFadeLineColor =3D {0,1,1,1}
 =

 =

 -- Server Emulator Configuration
@@ -270,7 +260,7 @@
 =

 -- preload all static meshes
 -- WARNING !!! this takes some seconds 25sec. first time and approx. 100MB=
 RAM needed
-gPreloadStaticMesh =3D false
+gPreloadStaticMesh =3D true
 =

 -- incorrect fallbacks can be added to the skiplist using the fallbacktool=
 (f11)
 gEnableFallBackBillboards_Statics =3D false
@@ -453,11 +443,7 @@
 -- ugly, but faster
 gDisableMultiTexTerrainTransitions =3D false
 =

--- for debugging
-gDisableMultiTexWater =3D false
-
--- Fastbatching of Statics/Dynamics (no hueing)
-gFastBatchStatics =3D true
+-- Fastbatching of Dynamics
 gFastBatchDynamics =3D true
 =

 -- the detailed compass is rendered using stencil buffers and seems to cau=
se trouble with shadows

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sun Aug 24 01:32:40 2008
@@ -251,11 +251,11 @@
 		Client_SetSkybox(gMaps[gMapIndex].skybox) =

 =

 		if (gUseDistanceFog) then =

-			gFogcolorred                    =3D gMaps[gMapIndex].fog_r =

-			gFogcolorgreen                  =3D gMaps[gMapIndex].fog_g =

-			gFogcolorblue                   =3D gMaps[gMapIndex].fog_b
+			local fogColorRed			=3D gMaps[gMapIndex].fog_r =

+			local fogColorGreen			=3D gMaps[gMapIndex].fog_g =

+			local fogColorBlue			=3D gMaps[gMapIndex].fog_b
 			local radius =3D cMapBlock_3D_Terrain.iLoadRadius
-			Client_SetFog(3, gFogcolorred/255, gFogcolorgreen/255, gFogcolorblue/25=
5, 1.0, 0, 3*radius, 3*radius+gFogValue) =

+			Client_SetFog(3, fogColorRed/255, fogColorGreen/255, fogColorBlue/255, =
1.0, 0, 3*radius, 3*radius+gFogValue) =

 		end =

 	end
 end
@@ -279,7 +279,7 @@
 		--OgreSetShadowFarDistance(shadowfardist)
 		--OgreShadowTechnique(strShadowTechnique)
 	elseif ((strShadowTechnique =3D=3D "texture_modulative") or (strShadowTec=
hnique =3D=3D "texture_additive")) then
-		OgreSetShadowTextureCount(5)				-- first mention the count (one texture =
for one lightsource)
+		OgreSetShadowTextureCount(8)				-- first mention the count (one texture =
for one lightsource)
 		OgreSetShadowTextureSize(1024)				-- then the texsize
 		OgreSetShadowFarDistance(shadowfardist)
 		OgreSetShadowTextureFadeStart(0.6)

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Sun Aug 24 01:32:40 2008
@@ -141,9 +141,7 @@
 function Load_Speech () =

 	if (gSpeechLoaderType) then
 		LoadingProfile("init SpeechLoader")
-		if (gSpeechSupport) then
-			gSpeechLoader =3D CreateSpeechLoader(gSpeechLoaderType,CorrectPath( Add=
filepath(gSpeechFile) ),true)
-		end
+		gSpeechLoader =3D CreateSpeechLoader(gSpeechLoaderType,CorrectPath( Addf=
ilepath(gSpeechFile) ),true)
 	end
 end
 =


Modified: trunk/lua/lib.mapblock.3d.water.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.water.lua (original)
+++ trunk/lua/lib.mapblock.3d.water.lua Sun Aug 24 01:32:40 2008
@@ -265,7 +265,6 @@
 	end end
 =

 	-- WATER
-	--~ if gEnableMultiTexTerrain and (not gDisableMultiTexWater) then
 	local count =3D Array2DGetElementCount(self.mWaterZMap) -- might be slow
 	=

 	self:Yield()

Modified: trunk/widgets/widget.uocontaineritem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uocontaineritem.lua (original)
+++ trunk/widgets/widget.uocontaineritem.lua Sun Aug 24 01:32:40 2008
@@ -23,7 +23,7 @@
 	=

 	-- create gfx-parts
 	self.gfx_main		=3D self:CreateChild("UOImage",{x=3D0,y=3D0,gump_id=3Dgump=
_id,art_id=3Dart_id,hue=3Ditem.hue})
-	if (item.amount > 1 and (not gDisableContainerItemStackDoubleImage)) then
+	if ( item.amount > 1 ) then
 		self.gfx_stackside	=3D self:CreateChild("UOImage",{x=3D5,y=3D5,gump_id=
=3Dgump_id,art_id=3Dart_id,hue=3Ditem.hue})
 	end
 	=




From no-reply at zwischenwelt.org  Sun Aug 24 02:50:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Aug 2008 00:50:51 -0000
Subject: [Iris-commit] [IRIS] r2403 - in /trunk/lua: lib.loading.lua
	lib.static.lua
Message-ID: <20080824005051.CAD331C1864C@zwischenwelt.org>

Author: hagish
Date: Sun Aug 24 02:50:49 2008
New Revision: 2403

Log:
simple preloading progress bar

Modified:
    trunk/lua/lib.loading.lua
    trunk/lua/lib.static.lua

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Sun Aug 24 02:50:49 2008
@@ -219,35 +219,97 @@
 	end
 end
 =

+-- ------------------------------------------------------------------
+function PreLoadInit	()
+	local vp =3D GetMainViewport()
+	local w =3D vp:GetActualWidth()
+	local h =3D vp:GetActualHeight()
+	local gfxparam_init =3D MakeSpritePanelParam_SingleSprite(GetPlainTexture=
GUIMat("bar07.png"),8, 10,0,0, 0,0,8,10, 8,10)
+	gPreloadBar =3D GetDesktopWidget():CreateChild("Border",{gfxparam_init=3D=
gfxparam_init})
+	gPreloadBar:SetPos(0,h-32)
+	gPreloadBar:SetSize(w,8)
+end
+
+function PreLoadDone	()
+	gPreloadBar:Destroy()
+	gPreloadBar =3D nil
+end
+
+function PreLoadUpdate	(p)
+	local vp =3D GetMainViewport()
+	local w =3D vp:GetActualWidth()
+	local h =3D vp:GetActualHeight()
+	=

+	gPreloadBar:SetSize(p*w,8)
+	=

+	Client_RenderOneFrame()
+	Client_USleep(1)
+end
+-- ------------------------------------------------------------------
 =

 function PreLoad ()
+	PreLoadInit()
+	=

+	PreLoadUpdate(0/100)
 	--DebugCallLogStartIgnore()
 	Load_Font()
+	PreLoadUpdate(2/100)
 	Load_Cliloc()
+	PreLoadUpdate(4/100)
 	Load_Speech()
+	PreLoadUpdate(6/100)
 	Load_TileType()
+	PreLoadUpdate(8/100)
 	Load_TexMap()
+	PreLoadUpdate(10/100)
 	Load_Multi()
+	PreLoadUpdate(12/100)
 	Load_Sound()
+	PreLoadUpdate(14/100)
 	Load_Anim()
+	PreLoadUpdate(16/100)
 	Load_RadarColor()
+	PreLoadUpdate(18/100)
 	Load_EquipConf()
+	PreLoadUpdate(20/100)
 	Load_Stitchin()
+	PreLoadUpdate(22/100)
 	Load_Granny()
+	PreLoadUpdate(24/100)
 	Load_Hue()
+	PreLoadUpdate(26/100)
 	Load_ArtMap()
+	PreLoadUpdate(28/100)
 	Load_Gump()	=

+	PreLoadUpdate(30/100)
+
+	local left =3D 70
+	local to =3D 16085
 =

 	if gPreloadStaticMesh then
 		LoadingProfile("preload static meshes")
-		PreloadAllStaticMesh()
-	end
-	=

+		=

+		for i =3D 0,to do
+			local name =3D GetMeshName(i, true)
+			if name then
+				GetMeshBuffer(name)
+			end
+			=

+			if math.fmod(i,10) =3D=3D 0 then
+				PreLoadUpdate(((100-left)+i/to*left)/100)
+			end
+		end
+	end
+	=

+	PreLoadUpdate(100/100)
+
 	LoadingProfile() -- final call, echo last profile
 	printdebug("loading",sprintf("%5d msec total\n",(Client_GetTicks()-gPreOg=
reTime),"total"))
 	=

 	gLoadingProfileLastTime =3D 0
 	gLoadingProfileLastAction =3D false
+	=

+	PreLoadDone()
 end
 =

 -- don't load new map immediately, several mapchanges might be sent at log=
in quickly

Modified: trunk/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.static.lua (original)
+++ trunk/lua/lib.static.lua Sun Aug 24 02:50:49 2008
@@ -229,11 +229,3 @@
 	if (not w) then return 1,0,0,0 end -- identity
 	return w,x,y,z
 end
-
--- preloads all available meshes for the statics
--- TODO: Wrong !!! hueing must be taken from statics instead of tiledata
-function PreloadAllStaticMesh()
-	for i =3D 0,16085 do
-		GetMeshName(i, true)
-	end
-end



From no-reply at zwischenwelt.org  Sun Aug 24 04:52:36 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Aug 2008 02:52:36 -0000
Subject: [Iris-commit] [IRIS] r2404 - in /trunk/lua: lib.uoam.lua main.lua
Message-ID: <20080824030020.30C2E1C18032@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 24 04:52:30 2008
New Revision: 2404

Log:
uoam protocol implementation, not yet used ingame

Added:
    trunk/lua/lib.uoam.lua
Modified:
    trunk/lua/main.lua

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sun Aug 24 04:52:30 2008
@@ -17,6 +17,8 @@
 =

 gInGameStarted =3D false
 gNet_State =3D false
+
+
 =

 --###############################
 --###     OTHER LUA FILES     ###
@@ -92,6 +94,9 @@
 dofile(libpath .. "filter/filter.art.lua")
 dofile(libpath .. "filter/filter.granny.lua")
 dofile(libpath .. "filter/filter.map.lua")
+
+dofile(libpath .. "lib.uoam.lua")
+
 if (LugreActivateGlobalVarChecking) then LugreActivateGlobalVarChecking() =
end
 =

 --###############################
@@ -276,6 +281,7 @@
 =

 --- main function, when it returns, the program ends
 function Main ()	=

+	TestUOAM()
 	local luaversion =3D string.sub(_VERSION, 5, 7)
 	print("Lua version : "..luaversion)
 	=




From no-reply at zwischenwelt.org  Sun Aug 24 11:57:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Aug 2008 09:57:31 -0000
Subject: [Iris-commit] [IRIS] r2405 - /trunk/lua/config_declarations.lua
Message-ID: <20080824100009.739E61C1862F@zwischenwelt.org>

Author: sience
Date: Sun Aug 24 11:57:31 2008
New Revision: 2405

Log:
-obsolete fastbatchstatic option removed
-preloadallmesh option set to true (for normal users better)

Modified:
    trunk/lua/config_declarations.lua

Modified: trunk/lua/config_declarations.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/config_declarations.lua (original)
+++ trunk/lua/config_declarations.lua Sun Aug 24 11:57:31 2008
@@ -13,7 +13,7 @@
 end)
 gConfig:DeclareBoolean("stupid", "supid", "h=C3=83=C2=A4h?", "nene....", f=
alse)
 gConfig:DeclareEnum("enum", "normal", "h=C3=83=C2=A4h2?", "nene....2", "cu=
be", {"cube","circle","block","donut"})
-]]
+]]--
 =

 gConfig:DeclareFloat("kGuiToolTipWait", "gui", "tooltip timeout", "TODO", =
100)
 gConfig:DeclareString("gClientVersion", "protocol", "client version", 'Cli=
ent Identification String (try other version for example "4.0.11c5")', "6.0=
.1.6")
@@ -276,7 +276,7 @@
 =

 gConfig:DeclareBoolean("gLogPackets", "client", "log packets", 'TODO', fal=
se)
 =

-gConfig:DeclareBoolean("gPreloadStaticMesh", "loader", "preload all static=
 meshes", 'WARNING !!! this takes some seconds 25sec. first time and approx=
. 100MB RAM needed', false)
+gConfig:DeclareBoolean("gPreloadStaticMesh", "loader", "preload all static=
 meshes", 'WARNING !!! this takes some seconds 25sec. first time and approx=
. 100MB RAM needed', true)
 =

 -- incorrect fallbacks can be added to the skiplist using the fallbacktool=
 (f11)
 gConfig:DeclareBoolean("gEnableFallBackBillboards_Statics", "client", "bil=
lboard static fallback", 'TODO', false)
@@ -449,7 +449,7 @@
 -- for debugging
 gConfig:DeclareBoolean("gDisableMultiTexWater", "gfx", "disable multitex w=
ater", 'for debugging', false)
 =

-gConfig:DeclareBoolean("gFastBatchStatics", "gfx", "fastbatch static", 'Fa=
stbatching of Statics/Dynamics (no hueing)', true)
+-- fastbatching (is this option needed anymore?
 gConfig:DeclareBoolean("gFastBatchDynamics", "gfx", "fastbatch dynamic", '=
Fastbatching of Statics/Dynamics (no hueing)', true)
 =

 gConfig:DeclareBoolean("gEnableCompass", "gfx", "compass", 'TODO', true)



From no-reply at zwischenwelt.org  Sun Aug 24 18:14:44 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Aug 2008 16:14:44 -0000
Subject: [Iris-commit] [IRIS] r2406 - /trunk/data/tmp/
Message-ID: <20080824170008.1B6D71C1862F@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 24 18:14:43 2008
New Revision: 2406

Log:
added compass temp pngs to ignore

Modified:
    trunk/data/tmp/   (props changed)



From no-reply at zwischenwelt.org  Tue Aug 26 01:23:23 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 25 Aug 2008 23:23:23 -0000
Subject: [Iris-commit] [IRIS] r2407 - in /trunk: premakelinux.sh
	premakelinux_noclean.sh
Message-ID: <20080825232323.8A6171524030@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Aug 26 01:23:22 2008
New Revision: 2407

Log:
added premake --clean to premakelinux.sh

Added:
    trunk/premakelinux_noclean.sh
      - copied unchanged from r2406, trunk/premakelinux.sh
Modified:
    trunk/premakelinux.sh

Modified: trunk/premakelinux.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/premakelinux.sh (original)
+++ trunk/premakelinux.sh Tue Aug 26 01:23:22 2008
@@ -1,4 +1,5 @@
 #!/bin/bash
+./premake --clean
 ./premake --noassert --target gnu && make CXX=3D"ccache gcc" CONFIG=3DRele=
ase
 #~ ./premake --target gnu && make CONFIG=3DRelease
 # tipp : try "make -j 2" : start 2 jobs in parallel, to avoid wait-for-io =
and use multi-cpu processors efficiently during compile



From no-reply at zwischenwelt.org  Tue Aug 26 01:36:50 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 25 Aug 2008 23:36:50 -0000
Subject: [Iris-commit] [IRIS] r2408 - /trunk/data/shoggoth_patch
Message-ID: <20080825233650.6DF5B1524030@zwischenwelt.org>

Author: hagish
Date: Tue Aug 26 01:36:50 2008
New Revision: 2408

Log:
shoggoth changes

Added:
    trunk/data/shoggoth_patch



From no-reply at zwischenwelt.org  Tue Aug 26 21:58:18 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 26 Aug 2008 19:58:18 -0000
Subject: [Iris-commit] [IRIS] r2409 - in /trunk: lua/ lua/widgets/ widgets/
Message-ID: <20080826195819.2879F1524030@zwischenwelt.org>

Author: sience
Date: Tue Aug 26 21:58:17 2008
New Revision: 2409

Log:
-widgets moved from / to lua/widgets

Added:
    trunk/lua/widgets/
    trunk/lua/widgets/widget.gumpdialog.lua
    trunk/lua/widgets/widget.uobutton.lua
    trunk/lua/widgets/widget.uocheckbox.lua
    trunk/lua/widgets/widget.uocontainer.lua
    trunk/lua/widgets/widget.uocontaineritem.lua
    trunk/lua/widgets/widget.uoedittext.lua
    trunk/lua/widgets/widget.uoimage.lua
    trunk/lua/widgets/widget.uoradiobutton.lua
    trunk/lua/widgets/widget.uotext.lua
Removed:
    trunk/widgets/
Modified:
    trunk/lua/main.lua

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Tue Aug 26 21:58:17 2008
@@ -12,7 +12,7 @@
 gMacroPath 			=3D datapath.."mymacros.lua"
 gMacroPathFallback	=3D datapath.."mymacros.lua.dist"
 gMainPluginDir 		=3D gMainWorkingDir.."plugins/"
-gIrisWidgetDir 		=3D gMainWorkingDir.."widgets/"
+gIrisWidgetDir 		=3D libpath.."widgets/"
 gSecondsSinceLastFrame =3D 0
 =

 gInGameStarted =3D false



From no-reply at zwischenwelt.org  Tue Aug 26 23:45:08 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 26 Aug 2008 21:45:08 -0000
Subject: [Iris-commit] [IRIS] r2410 - in /trunk/lua: gui/gui.gumpparser.lua
 lib.gump.samples.lua widgets/widget.uotext.lua
Message-ID: <20080826220009.81D7D1C1863F@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Aug 26 23:45:08 2008
New Revision: 2410

Log:
gumps:croppedtext : bold off when hue=3D0.  uotext : fixed clipping

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.gump.samples.lua
    trunk/lua/widgets/widget.uotext.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Tue Aug 26 23:45:08 2008
@@ -15,7 +15,7 @@
 	return GumpParser_Old(Gumpdata, Clientsidemode)
 end
 =

-kGumpParser_DebugDump =3D false
+kGumpParser_DebugDump =3D true
 =

 function GumpParserTest ()
 	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size
@@ -41,11 +41,12 @@
 	]]--
 	--~ local testgump,x,y,kDebugName =3D kGumpSample_ChangeLog,400,00."kGump=
Sample_ChangeLog"
 	--~ local testgump,x,y,kDebugName =3D kGumpSample_ChangeLog_Text,400,0,"k=
GumpSample_ChangeLog_Text"
-	--~ local testgump,x,y,kDebugName =3D kGumpSample_RuneBook,0,240,"kGumpSa=
mple_RuneBook"
+	local testgump,x,y,kDebugName =3D kGumpSample_RuneBook,0,240,"kGumpSample=
_RuneBook"
+	--~ local testgump,x,y,kDebugName =3D kGumpSample_RuneBook3,0,240,"kGumpS=
ample_RuneBook"
 	--~ local testgump,x,y,kDebugName =3D kGumpSample_Reward,0,140,"kGumpSamp=
le_Reward"
-	local testgump,x,y,kDebugName =3D kGumpSample_MoongateMenu,0,140,"kGumpSa=
mple_MoongateMenu"
+	--~ local testgump,x,y,kDebugName =3D kGumpSample_MoongateMenu,0,140,"kGu=
mpSample_MoongateMenu"
 	local profiler =3D MakeProfiler("gumpparser")
-	if (1 =3D=3D 2) then
+	if (1 =3D=3D 1) then
 		profiler:StartSection("font:preload")
 		GetUOFont(gUniFontLoaderList[1],true):PreLoad()
 		GetUOFont(gUniFontLoaderList[1],false):PreLoad()
@@ -71,20 +72,22 @@
 		HealthBarSetWarMode()
 	end
 	=

-	local testgump,x,y,kDebugName =3D kGumpSample_PM,0,300,"bla"
-	local d2 =3D GumpParser_New(testgump,false) -- d2:SetPos(x,y) d2.sDebugNa=
me =3D kDebugName
-	=

-	local container =3D {serial=3D1234,gumpid=3D60,content=3D{
-			{serial=3D1001,artid=3D9625,xloc=3D61,yloc=3D104,hue=3D0,amount=3D1,use=
gump=3Dfalse},
-			{serial=3D1002,artid=3D3982,xloc=3D51,yloc=3D65,hue=3D0,amount=3D38,use=
gump=3Dfalse},
-			{serial=3D1003,artid=3D3965,xloc=3D135,yloc=3D87,hue=3D0,amount=3D22,us=
egump=3Dfalse},
-			{serial=3D1004,artid=3D3965,xloc=3D87,yloc=3D75,hue=3D0,amount=3D16,use=
gump=3Dfalse},
-			{serial=3D1005,artid=3D8901,xloc=3D83,yloc=3D102,hue=3D1121,amount=3D1,=
usegump=3Dfalse},
-			{serial=3D1006,artid=3D3983,xloc=3D86,yloc=3D102,hue=3D0,amount=3D38,us=
egump=3Dfalse},
-			{serial=3D1007,artid=3D8787,xloc=3D110,yloc=3D95,hue=3D2406,amount=3D1,=
usegump=3Dfalse},
-		},GetContent=3Dfunction (self) return self.content end}
-
-	local containerdialog =3D CreateUOContainerDialog(container)
+	if (2 =3D=3D 1) then
+		local testgump,x,y,kDebugName =3D kGumpSample_PM,0,300,"bla"
+		local d2 =3D GumpParser_New(testgump,false) -- d2:SetPos(x,y) d2.sDebugN=
ame =3D kDebugName
+		=

+		local container =3D {serial=3D1234,gumpid=3D60,content=3D{
+				{serial=3D1001,artid=3D9625,xloc=3D61,yloc=3D104,hue=3D0,amount=3D1,us=
egump=3Dfalse},
+				{serial=3D1002,artid=3D3982,xloc=3D51,yloc=3D65,hue=3D0,amount=3D38,us=
egump=3Dfalse},
+				{serial=3D1003,artid=3D3965,xloc=3D135,yloc=3D87,hue=3D0,amount=3D22,u=
segump=3Dfalse},
+				{serial=3D1004,artid=3D3965,xloc=3D87,yloc=3D75,hue=3D0,amount=3D16,us=
egump=3Dfalse},
+				{serial=3D1005,artid=3D8901,xloc=3D83,yloc=3D102,hue=3D1121,amount=3D1=
,usegump=3Dfalse},
+				{serial=3D1006,artid=3D3983,xloc=3D86,yloc=3D102,hue=3D0,amount=3D38,u=
segump=3Dfalse},
+				{serial=3D1007,artid=3D8787,xloc=3D110,yloc=3D95,hue=3D2406,amount=3D1=
,usegump=3Dfalse},
+			},GetContent=3Dfunction (self) return self.content end}
+
+		local containerdialog =3D CreateUOContainerDialog(container)
+	end
 	=

 	--~ local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) d=
ialog:SetLeftTop(400,100)
 	--~ GumpParser(kClientSideGump_Paperdoll_Own,true)
@@ -188,7 +191,7 @@
 kGumpParser_CommandTypes["page"]				=3D {paramformat=3D"pagenum"}
 kGumpParser_CommandTypes["xmfhtmlgump"]			=3D {paramformat=3D"x,y,width,he=
ight,cliloc_id,background,scrollbar,[ctrlname]",paramadd=3D{default_black=
=3Dtrue,html=3Dtrue}} =

 kGumpParser_CommandTypes["xmfhtmlgumpcolor"]	=3D {paramformat=3D"x,y,width=
,height,cliloc_id,background,scrollbar,hue,[ctrlname]",paramadd=3D{html=3Dt=
rue}}
-kGumpParser_CommandTypes["croppedtext"]			=3D {paramformat=3D"x,y,width,he=
ight,hue,textline_id,[ctrlname]",paramadd=3D{bold=3Dtrue,crop=3Dtrue}}
+kGumpParser_CommandTypes["croppedtext"]			=3D {paramformat=3D"x,y,width,he=
ight,hue,textline_id,[ctrlname]",paramadd=3D{crop=3Dtrue}}
 kGumpParser_CommandTypes["htmlgump"]			=3D {paramformat=3D"x,y,width,heigh=
t,textline_id,background,scrollbar,[ctrlname]",paramadd=3D{default_black=3D=
true,html=3Dtrue}} =

 kGumpParser_CommandTypes["text"]				=3D {paramformat=3D"x,y,hue,textline_i=
d,[ctrlname]",paramadd=3D{bold=3Dfalse,default_black=3Dtrue}}
 kGumpParser_CommandTypes["tooltip"]				=3D {paramformat=3D"cliloc_id,[ctrl=
name]"}
@@ -302,8 +305,9 @@
 		-- croppedtext <x> <y> <width> <height> <hue> <textline_id>
 		-- Description:  Adds a text field to the gump. This is similar to the t=
ext command,
 		-- but the text is cropped to the defined area.
-		-- text is automatically bold/outlined
+		-- text is automatically bold/outlined  if hue > 0 (runebook)
 		elseif (command =3D=3D "croppedtext") then
+			if (param.hue > 0) then param.bold =3D true end
 			widget =3D parent:CreateChild("UOText",param,Gumpdata.textline_unicode =
or Gumpdata.textline)
 			=

 		--HtmlGump <x> <y> <width> <height> <textline_id> <background> <scrollba=
r>

Modified: trunk/lua/lib.gump.samples.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.gump.samples.lua (original)
+++ trunk/lua/lib.gump.samples.lua Tue Aug 26 23:45:08 2008
@@ -149,6 +149,24 @@
 		[0]=3D{48,},
 		},
 }
+
+
+kGumpSample_RuneBook3 =3D {
+	Data=3D"{ page 0 }{ gumppic 100 10 2201 }{ gumppic 125 50 57 }{ gumppic 1=
45 50 58 }{ gumppic 160 50 58 }{ gumppic 175 50 58 }{ gumppic 190 50 58 }{ =
gumppic 205 50 58 }{ gumppic 220 50 58 }{ gumppic 230 50 59 }{ gumppic 290 =
50 57 }{ gumppic 310 50 58 }{ gumppic 325 50 58 }{ gumppic 340 50 58 }{ gum=
ppic 355 50 58 }{ gumppic 370 50 58 }{ gumppic 385 50 58 }{ gumppic 395 50 =
59 }{ button 130 187 2225 2225 0 2 0 }{ button 165 187 2226 2226 0 3 0 }{ b=
utton 200 187 2227 2227 0 4 0 }{ button 235 187 2228 2228 0 5 0 }{ button 3=
00 187 2229 2229 0 6 0 }{ button 335 187 2230 2230 0 7 0 }{ button 370 187 =
2231 2231 0 8 0 }{ button 405 187 2232 2232 0 9 0 }{ xmfhtmlgump 140 40 80 =
18 1011296 0 0 }{ htmlgump 220 40 30 18 0 0 0 }{ xmfhtmlgump 300 40 100 18 =
1011297 0 0 }{ htmlgump 400 40 30 18 1 0 0 }{ page 1 }{ button 125 15 2472 =
2473 1 0 1 }{ xmfhtmlgump 158 22 100 18 1011299 0 0 }{ button 130 65 2103 2=
104 1 0 2 }{ croppedtext 145 60 115 17 0 2 }{ button 130 80 2103 2104 1 0 8=
 }{ croppedtext 145 75 115 17 0 2 }{ button 130 95 2103 2104 1 0 14 }{ crop=
pedtext 145 90 115 17 0 2 }{ button 130 110 2103 2104 1 0 20 }{ croppedtext=
 145 105 115 17 0 2 }{ button 130 125 2103 2104 1 0 26 }{ croppedtext 145 1=
20 115 17 0 2 }{ button 130 140 2103 2104 1 0 32 }{ croppedtext 145 135 115=
 17 0 2 }{ button 130 155 2103 2104 1 0 38 }{ croppedtext 145 150 115 17 0 =
2 }{ button 130 170 2103 2104 1 0 44 }{ croppedtext 145 165 115 17 0 2 }{ b=
utton 290 65 2103 2104 1 0 50 }{ croppedtext 305 60 115 17 0 2 }{ button 29=
0 80 2103 2104 1 0 56 }{ croppedtext 305 75 115 17 0 2 }{ button 290 95 210=
3 2104 1 0 62 }{ croppedtext 305 90 115 17 0 2 }{ button 290 110 2103 2104 =
1 0 68 }{ croppedtext 305 105 115 17 0 2 }{ button 290 125 2103 2104 1 0 74=
 }{ croppedtext 305 120 115 17 0 2 }{ button 290 140 2103 2104 1 0 80 }{ cr=
oppedtext 305 135 115 17 0 2 }{ button 290 155 2103 2104 1 0 86 }{ croppedt=
ext 305 150 115 17 0 2 }{ button 290 170 2103 2104 1 0 92 }{ croppedtext 30=
5 165 115 17 0 2 }{ button 393 14 2206 2206 0 2 0 }{ page 2 }{ button 125 1=
4 2205 2205 0 1 0 }{ button 393 14 2206 2206 0 3 0 }{ button 130 65 2103 21=
04 1 0 2 }{ croppedtext 145 60 115 17 0 2 }{ button 290 65 2103 2104 1 0 8 =
}{ croppedtext 305 60 115 17 0 2 }{ page 3 }{ button 125 14 2205 2205 0 2 0=
 }{ button 393 14 2206 2206 0 4 0 }{ button 130 65 2103 2104 1 0 14 }{ crop=
pedtext 145 60 115 17 0 2 }{ button 290 65 2103 2104 1 0 20 }{ croppedtext =
305 60 115 17 0 2 }{ page 4 }{ button 125 14 2205 2205 0 3 0 }{ button 393 =
14 2206 2206 0 5 0 }{ button 130 65 2103 2104 1 0 26 }{ croppedtext 145 60 =
115 17 0 2 }{ button 290 65 2103 2104 1 0 32 }{ croppedtext 305 60 115 17 0=
 2 }{ page 5 }{ button 125 14 2205 2205 0 4 0 }{ button 393 14 2206 2206 0 =
6 0 }{ button 130 65 2103 2104 1 0 38 }{ croppedtext 145 60 115 17 0 2 }{ b=
utton 290 65 2103 2104 1 0 44 }{ croppedtext 305 60 115 17 0 2 }{ page 6 }{=
 button 125 14 2205 2205 0 5 0 }{ button 393 14 2206 2206 0 7 0 }{ button 1=
30 65 2103 2104 1 0 50 }{ croppedtext 145 60 115 17 0 2 }{ button 290 65 21=
03 2104 1 0 56 }{ croppedtext 305 60 115 17 0 2 }{ page 7 }{ button 125 14 =
2205 2205 0 6 0 }{ button 393 14 2206 2206 0 8 0 }{ button 130 65 2103 2104=
 1 0 62 }{ croppedtext 145 60 115 17 0 2 }{ button 290 65 2103 2104 1 0 68 =
}{ croppedtext 305 60 115 17 0 2 }{ page 8 }{ button 125 14 2205 2205 0 7 0=
 }{ button 393 14 2206 2206 0 9 0 }{ button 130 65 2103 2104 1 0 74 }{ crop=
pedtext 145 60 115 17 0 2 }{ button 290 65 2103 2104 1 0 80 }{ croppedtext =
305 60 115 17 0 2 }{ page 9 }{ button 125 14 2205 2205 0 8 0 }{ button 130 =
65 2103 2104 1 0 86 }{ croppedtext 145 60 115 17 0 2 }{ button 290 65 2103 =
2104 1 0 92 }{ croppedtext 305 60 115 17 0 2 }",
+
+	textline=3D{
+	[1]=3D"10",
+	[2]=3D"Empty",
+	[0]=3D"0",
+	},
+	textline_unicode=3D{
+	[1]=3D{49,48,},
+	[2]=3D{69,109,112,116,121,},
+	[0]=3D{48,},
+	},
+}
+	=

+	=

 	=

 	=

 kGumpSample_Reward =3D {

Modified: trunk/lua/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/widgets/widget.uotext.lua (original)
+++ trunk/lua/widgets/widget.uotext.lua Tue Aug 26 23:45:08 2008
@@ -35,7 +35,7 @@
 	--~ if (params.width) then local l,t,r,b =3D self:GetRelBounds() self:Set=
Clip(0,0,params.width,params.height) end
 	=

 	local w,h =3D params.width,params.height
-	if (w) then local l,t,r,b =3D self:GetRelBounds() self:SetClip(l-xoff,t-y=
off,l-xoff+w,t-yoff+h) end
+	if (w) then local l,t,r,b =3D self:GetRelBounds() self:SetClip(l,t,l+w,t+=
h) end
 end
 =

 -- TODO : uohtml might be an array of ints for unicode (textline) instead =
of text (no html then)



From no-reply at zwischenwelt.org  Wed Aug 27 01:46:08 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 26 Aug 2008 23:46:08 -0000
Subject: [Iris-commit] [IRIS] r2411 - in /trunk/lua: gui/gui.gumpparser.lua
	net/net.partysystem.lua
Message-ID: <20080827000008.C12A11C1863F@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 27 01:46:08 2008
New Revision: 2411

Log:
added party-chat message to all receiver (no send yet), thanks to surcouf =
=3D)

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/net/net.partysystem.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Wed Aug 27 01:46:08 2008
@@ -15,7 +15,7 @@
 	return GumpParser_Old(Gumpdata, Clientsidemode)
 end
 =

-kGumpParser_DebugDump =3D true
+kGumpParser_DebugDump =3D false
 =

 function GumpParserTest ()
 	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size

Modified: trunk/lua/net/net.partysystem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.partysystem.lua (original)
+++ trunk/lua/net/net.partysystem.lua Wed Aug 27 01:46:08 2008
@@ -88,6 +88,23 @@
 	end
 end
 =

+
+-- thanks to surcouf =3D)
+function   gPartySystemHandler.kPartySubCmd_MessageToAll   (input,size)
+	local speakerID =3D input:PopNetUint32()
+	size =3D size - 4
+	local mobile =3D GetMobile(speakerID)
+	local name =3D mobile and mobile.name or ("unknown"..speakerID)
+	print("partysystem:test message",speakerID,name, input, size)
+	local text =3D ""
+	while size >=3D 2 do
+		local digit =3D input:PopNetUint16()
+		if (digit =3D=3D hex2num("0x0000"))  then break end
+		text =3D text..string.char(digit)
+	end
+	GuiAddChatLine ("["..name.."]: "..text)
+end =

+
 --[[
 	RunUO-1.0.0/Scripts/Engines/Party/Packets.cs		=

 	PartyTextMessage



From no-reply at zwischenwelt.org  Wed Aug 27 01:50:29 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 26 Aug 2008 23:50:29 -0000
Subject: [Iris-commit] [IRIS] r2412 - in /trunk/lua: gui/gui.helper.lua
	net/net.partysystem.lua
Message-ID: <20080827000008.CC6F41C18692@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 27 01:50:28 2008
New Revision: 2412

Log:
added partychat send stub

Modified:
    trunk/lua/gui/gui.helper.lua
    trunk/lua/net/net.partysystem.lua

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Wed Aug 27 01:50:28 2008
@@ -60,6 +60,8 @@
 				print("OK in lua call",cmd,"->",result)
 			end
 		end
+	elseif string.sub(curtext, 1, 1) =3D=3D "/" then
+		Send_PartyChat(string.sub(curtext, 2))
 	else =

 		Send_UnicodeSpeech(curtext) =

 	end

Modified: trunk/lua/net/net.partysystem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.partysystem.lua (original)
+++ trunk/lua/net/net.partysystem.lua Wed Aug 27 01:50:28 2008
@@ -105,6 +105,10 @@
 	GuiAddChatLine ("["..name.."]: "..text)
 end =

 =

+function Send_PartyChat (chatmessage)
+	print("TODO : send party chat:",chatmessage)
+end
+
 --[[
 	RunUO-1.0.0/Scripts/Engines/Party/Packets.cs		=

 	PartyTextMessage



From no-reply at zwischenwelt.org  Wed Aug 27 11:34:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 09:34:20 -0000
Subject: [Iris-commit] [IRIS] r2413 - in /trunk: data/profiles/gfx_high.lua
 data/profiles/gfx_low.lua data/profiles/gfx_med.lua
 data/profiles/gfx_ultrahigh.lua data/profiles/gfx_ultralow.lua
 lua/config_declarations.lua lua/main.lua
Message-ID: <20080827093420.D322E1C18259@zwischenwelt.org>

Author: hagish
Date: Wed Aug 27 11:34:20 2008
New Revision: 2413

Log:
bugfix: config not working correctly. due to default config being med profi=
le there are no shadows.

Modified:
    trunk/data/profiles/gfx_high.lua
    trunk/data/profiles/gfx_low.lua
    trunk/data/profiles/gfx_med.lua
    trunk/data/profiles/gfx_ultrahigh.lua
    trunk/data/profiles/gfx_ultralow.lua
    trunk/lua/config_declarations.lua
    trunk/lua/main.lua

Modified: trunk/data/profiles/gfx_high.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_high.lua (original)
+++ trunk/data/profiles/gfx_high.lua Wed Aug 27 11:34:20 2008
@@ -1,8 +1,8 @@
 -- high gfx-profile has medium settings with fixed function shadow techniq=
ue
 =

-gAtlasRes =3D "med"
+gConfig:Set("gAtlasRes","med")
 =

-gShadowTechnique =3D "texture_additive"
-gStaticsCastShadows =3D true
-gDynamicsCastShadows =3D true
-gMobileCastShadows =3D true
+gConfig:Set("gShadowTechnique","texture_additive")
+gConfig:Set("gStaticsCastShadows",true)
+gConfig:Set("gDynamicsCastShadows",true)
+gConfig:Set("gMobileCastShadows",true)

Modified: trunk/data/profiles/gfx_low.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_low.lua (original)
+++ trunk/data/profiles/gfx_low.lua Wed Aug 27 11:34:20 2008
@@ -1,14 +1,14 @@
-gAtlasRes =3D "low"
+gConfig:Set("gAtlasRes","low")
 =

-gUseDistanceFog =3D false
+gConfig:Set("gUseDistanceFog",false)
 =

-gDisableMultiTexTerrainTransitions =3D true
+gConfig:Set("gDisableMultiTexTerrainTransitions",true)
 =

-gShadowTechnique =3D "none"
-gStaticsCastShadows =3D false
-gDynamicsCastShadows =3D false
-gMobileCastShadows =3D false
+gConfig:Set("gShadowTechnique","none")
+gConfig:Set("gStaticsCastShadows",false)
+gConfig:Set("gDynamicsCastShadows",false)
+gConfig:Set("gMobileCastShadows",false)
 =

-gGroundBlockLoaderType     =3D "OnDemand"
+gConfig:Set("gGroundBlockLoaderType","OnDemand")
 =

-gUseStaticFallbacks =3D false
+gConfig:Set("gUseStaticFallbacks",false)

Modified: trunk/data/profiles/gfx_med.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_med.lua (original)
+++ trunk/data/profiles/gfx_med.lua Wed Aug 27 11:34:20 2008
@@ -1,9 +1,9 @@
 -- medium gfx-profile has always the same settings as config.lua.dist
 =

-gAtlasRes =3D "med"
+gConfig:Set("gAtlasRes","med")
 =

-gShadowTechnique =3D "none"
-gTerrainCastShadows =3D false
-gStaticsCastShadows =3D false
-gDynamicsCastShadows =3D false
-gMobileCastShadows =3D false
+gConfig:Set("gShadowTechnique","none")
+gConfig:Set("gTerrainCastShadows",false)
+gConfig:Set("gStaticsCastShadows",false)
+gConfig:Set("gDynamicsCastShadows",false)
+gConfig:Set("gMobileCastShadows",false)

Modified: trunk/data/profiles/gfx_ultrahigh.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_ultrahigh.lua (original)
+++ trunk/data/profiles/gfx_ultrahigh.lua Wed Aug 27 11:34:20 2008
@@ -1,22 +1,22 @@
 -- ultrahigh gfx-profile uses no textureatlas and has (in future) depthsha=
dowmapping
 =

-gAtlasRes =3D "none"
+gConfig:Set("gAtlasRes","none")
 =

-gShadowTechnique =3D "texture_additive"
-gStaticsCastShadows =3D true
-gDynamicsCastShadows =3D true
-gMobileCastShadows =3D true
+gConfig:Set("gShadowTechnique","texture_additive")
+gConfig:Set("gStaticsCastShadows",true)
+gConfig:Set("gDynamicsCastShadows",true)
+gConfig:Set("gMobileCastShadows",true)
 =

-gUseCaelumSkysystem =3D true
+gConfig:Set("gUseCaelumSkysystem",true)
 =

-gArtMapLoaderType	=3D "FullFile"
+gConfig:Set("gArtMapLoaderType","FullFile")
 =

 -- currently doesn't work
---gUseHumanSkinShader =3D true
+--gUseHumanSkinShader",true
 =

 -- currently doesn't work
---gEnableLowDetailTerrainFarSight =3D true
---gEnableLowDetailTerrainFarSightRangeAdd =3D 2
+--gEnableLowDetailTerrainFarSight",true
+--gEnableLowDetailTerrainFarSightRangeAdd",2
 =

 -- currently doesn't work because of gUseStaticFallbacks
---gPreloadStaticMesh =3D true
+--gPreloadStaticMesh",true

Modified: trunk/data/profiles/gfx_ultralow.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_ultralow.lua (original)
+++ trunk/data/profiles/gfx_ultralow.lua Wed Aug 27 11:34:20 2008
@@ -1,22 +1,22 @@
-gAtlasRes =3D "ultralow"
+gConfig:Set("gAtlasRes","ultralow")
 =

-gDisableWater =3D true
+gConfig:Set("gDisableWater",true)
 =

-gUseDistanceFog =3D false
+gConfig:Set("gUseDistanceFog",false)
 =

-gDisableMultiTexTerrainTransitions =3D true
+gConfig:Set("gDisableMultiTexTerrainTransitions",true)
 =

-gShadowTechnique =3D "none"
-gStaticsCastShadows =3D false
-gDynamicsCastShadows =3D false
-gMobileCastShadows =3D false
+gConfig:Set("gShadowTechnique","none")
+gConfig:Set("gStaticsCastShadows",false)
+gConfig:Set("gDynamicsCastShadows",false)
+gConfig:Set("gMobileCastShadows",false)
 =

-gEnableGrannyMaterials =3D false
+gConfig:Set("gEnableGrannyMaterials",false)
 =

-gParticleEffectSystem =3D false
-gLightsources =3D false
+gConfig:Set("gParticleEffectSystem",false)
+gConfig:Set("gLightsources",false)
 =

-gUseStaticFallbacks =3D false
-gEnableFallBackBillboards_Dynamics =3D false
+gConfig:Set("gUseStaticFallbacks",false)
+gConfig:Set("gEnableFallBackBillboards_Dynamics",false)
 =

-gGroundBlockLoaderType     =3D "OnDemand"
+gConfig:Set("gGroundBlockLoaderType","OnDemand")

Modified: trunk/lua/config_declarations.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/config_declarations.lua (original)
+++ trunk/lua/config_declarations.lua Wed Aug 27 11:34:20 2008
@@ -131,9 +131,6 @@
 gConfig:DeclareEnum("gUseSoundSystem", "sound", "sound system", 'TODO', "f=
mod",{"fmod","openal"})
 gConfig:DeclareBoolean("gUseEffect", "sound", "effects", 'enable/disable s=
ound effects', true)
 gConfig:DeclareBoolean("gUseMusic", "sound", "music", 'enable/disable musi=
c', true)
-
-gCurrentRenderer =3D Renderer3D	-- Renderer2D
-
 =

 gStatsInfoFadeLineColor =3D {0,1,1,1}
 =

@@ -485,17 +482,22 @@
 gConfig:DeclareBoolean("gShowHealthBarOverEveryMobile", "gui", "healthbar =
over mobile", 'TODO', false)
 =

 =

-
-
-
 -- compatibility stuff for old config system via global varibles
 =

 -- import all vars into global scope that they can be accesses as used
 gConfig:ForAllNames(function(n,t,v)
 		_G[n] =3D v
+		--~ ConfigSetGlobal(n,v)
+		--~ print("ForAllNames",n,v)
 	end)
+
+print("shadow",gShadowTechnique,gStaticsCastShadows)
 =

 -- register listener to keep the global scope up to date
 gConfig:RegisterListener(function(n,v)
 		_G[n] =3D v
+		--~ ConfigSetGlobal(n,v)
+		--~ print("RegisterListener",n,v)
 	end)
+
+gCurrentRenderer =3D Renderer3D	-- Renderer2D

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Wed Aug 27 11:34:20 2008
@@ -6,9 +6,9 @@
 datapath 			=3D gMainWorkingDir.."data/"
 libpath 			=3D gMainWorkingDir.."lua/"
 lugreluapath 		=3D gMainWorkingDir..(file_exists(gMainWorkingDir.."mylugre=
") and "mylugre/lua/" or "lugre/lua/")
+--~ gConfigPathFallback	=3D datapath.."config.lua.dist"
+--~ gConfigPathFallback	=3D libpath.."config_declarations.lua"
 gConfigPath 		=3D datapath.."config.lua"
---~ gConfigPathFallback	=3D datapath.."config.lua.dist"
-gConfigPathFallback	=3D libpath.."config_declarations.lua"
 gMacroPath 			=3D datapath.."mymacros.lua"
 gMacroPathFallback	=3D datapath.."mymacros.lua.dist"
 gMainPluginDir 		=3D gMainWorkingDir.."plugins/"
@@ -37,6 +37,7 @@
 =

 -- renderer second
 gRendererList =3D {}
+
 dofile(libpath .. "lib.3d.renderer.lua")
 dofile(libpath .. "lib.2d.renderer.lua")
 =

@@ -97,13 +98,15 @@
 =

 dofile(libpath .. "lib.uoam.lua")
 =

+dofile(libpath .. "config_declarations.lua")
+
 if (LugreActivateGlobalVarChecking) then LugreActivateGlobalVarChecking() =
end
 =

 --###############################
 --###        CONFIG           ###
 --###############################
 =

-dofile(gConfigPathFallback)
+--~ dofile(gConfigPathFallback)
 if (file_exists(gConfigPath)) then
 	-- execute local config
 	dofile(gConfigPath)
@@ -124,7 +127,6 @@
 	fp:close()
 end
 =

-
 --###############################
 --###        MACROS           ###
 --###############################
@@ -150,6 +152,7 @@
 --###      GRAPHIC-CONFIG     ###
 --###############################
 if (gGraphicProfile) then
+	print("gGraphicProfile shadow",gGraphicProfile)
 	local graphicprofile=3Ddatapath.."profiles/gfx_"..gGraphicProfile..".lua"
 	if (file_exists(graphicprofile)) then
 		-- execute local graphicprofile



From no-reply at zwischenwelt.org  Wed Aug 27 12:00:35 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 10:00:35 -0000
Subject: [Iris-commit] [IRIS] r2414 - in /trunk/lua: lib.3d.map.lua
 lib.mapblock.3d.dynamics.lua lib.mapblock.3d.multis.lua
 lib.mapblock.3d.statics.lua
Message-ID: <20080827100036.26BD61C18689@zwischenwelt.org>

Author: hagish
Date: Wed Aug 27 12:00:34 2008
New Revision: 2414

Log:
bugfix: upper floors not correctly blended out if you teleport into a build=
ing

Modified:
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.mapblock.3d.dynamics.lua
    trunk/lua/lib.mapblock.3d.multis.lua
    trunk/lua/lib.mapblock.3d.statics.lua

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Wed Aug 27 12:00:34 2008
@@ -60,21 +60,11 @@
 	end
 end
 =

-function Renderer3D:BlendOutCheckNeeded		()
-	self.mbUpdateBlendOut =3D true
-end
-
 function Renderer3D:MapStep		()
 	local t =3D Client_GetTicks()
 	local xloc,yloc,zloc =3D self:GetCamPos()
 	for k,spawner in pairs(self.map3d_spawners) do spawner:Step(t,xloc,yloc,z=
loc) end
 	self.map3d_scheduler:Step(xloc,yloc,zloc)
-	=

-	-- redo blend out check?
-	if self.mbUpdateBlendOut then
-		self:BlendOutLayersAbovePlayer()
-		self.mbUpdateBlendOut =3D false
-	end
 end
 =

 function Renderer3D:MapClear	()
@@ -184,11 +174,13 @@
 			self.gbBlendOutTerrainVisible =3D bTerrainVisible
 		end
 		=

+		local a,b =3D self:BlendoutGetVisibleRange()
+		=

 		if self.map3d_spawners then
 			for k,v in pairs(self.map3d_spawners) do
 				v:ForAllBlocks(function(block)
 					if block.SetDisplayRange then
-						block:SetDisplayRange(self:BlendoutGetVisibleRange())
+						block:SetDisplayRange(a,b)
 					end
 				end)
 			end

Modified: trunk/lua/lib.mapblock.3d.dynamics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.dynamics.lua (original)
+++ trunk/lua/lib.mapblock.3d.dynamics.lua Wed Aug 27 12:00:34 2008
@@ -125,6 +125,6 @@
 		=

 		--~ print("count",self,countarr(self.lDynamics))
 =

-		gCurrentRenderer:BlendOutCheckNeeded()
+		self:SetDisplayRange(gCurrentRenderer:BlendoutGetVisibleRange())
 	end
 end

Modified: trunk/lua/lib.mapblock.3d.multis.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.multis.lua (original)
+++ trunk/lua/lib.mapblock.3d.multis.lua Wed Aug 27 12:00:34 2008
@@ -87,5 +87,5 @@
 =

 	self.mTileBatch:Build()
 =

-	gCurrentRenderer:BlendOutCheckNeeded()
+	self:SetDisplayRange(gCurrentRenderer:BlendoutGetVisibleRange())
 end

Modified: trunk/lua/lib.mapblock.3d.statics.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.statics.lua (original)
+++ trunk/lua/lib.mapblock.3d.statics.lua Wed Aug 27 12:00:34 2008
@@ -100,5 +100,5 @@
 =

 	self.mTileBatch:Build()
 	=

-	gCurrentRenderer:BlendOutCheckNeeded()
+	self:SetDisplayRange(gCurrentRenderer:BlendoutGetVisibleRange())
 end



From no-reply at zwischenwelt.org  Wed Aug 27 12:16:16 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 10:16:16 -0000
Subject: [Iris-commit] [IRIS] r2415 - in /trunk:
	data/terrain/multitex/parts/ lua/
Message-ID: <20080827101616.A918B1C18689@zwischenwelt.org>

Author: hagish
Date: Wed Aug 27 12:16:15 2008
New Revision: 2415

Log:
new terrain tiles by Matthew Wolfe, thank you :)

Added:
    trunk/data/terrain/multitex/parts/COPYING
    trunk/data/terrain/multitex/parts/terrain1_darksstile.png
    trunk/data/terrain/multitex/parts/terrain1_darksstile2.png
    trunk/data/terrain/multitex/parts/terrain1_darktile1.png
    trunk/data/terrain/multitex/parts/terrain1_darktile2.png
    trunk/data/terrain/multitex/parts/terrain1_darktile3.png
    trunk/data/terrain/multitex/parts/terrain1_darktile4.png
    trunk/data/terrain/multitex/parts/terrain1_farmland.png
    trunk/data/terrain/multitex/parts/terrain1_redpaving.png
    trunk/data/terrain/multitex/parts/terrain1_sandstonepav.png
    trunk/data/terrain/multitex/parts/terrain1_sandstonepav2.png
    trunk/data/terrain/multitex/parts/terrain1_sandstonetile.png
    trunk/data/terrain/multitex/parts/terrain1_sandstonetile2.png
    trunk/data/terrain/multitex/parts/terrain1_slategreentile1.png
    trunk/data/terrain/multitex/parts/terrain1_slategreentile2.png
    trunk/data/terrain/multitex/parts/terrain1_slategreentile3.png
    trunk/data/terrain/multitex/parts/terrain1_slategreentile4.png
    trunk/data/terrain/multitex/parts/terrain1_slatetile1.png
    trunk/data/terrain/multitex/parts/terrain1_slatetile2.png
    trunk/data/terrain/multitex/parts/terrain1_slatetile3.png
    trunk/data/terrain/multitex/parts/terrain1_slatetile4.png
Modified:
    trunk/lua/lib.terrain.multitex.lua

Modified: trunk/lua/lib.terrain.multitex.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.terrain.multitex.lua (original)
+++ trunk/lua/lib.terrain.multitex.lua Wed Aug 27 12:16:15 2008
@@ -39,7 +39,7 @@
 gMultiTextureAtlasList =3D {
 -- normal:terrain_grass.png debug:terrain_grass_num.png
 -- swamp alternate : terrain_green_swampy_stone_ground.png
- {tilespan=3D4,src=3D"terrain_grass.png"			,uoids=3D{3,4,5,6,59,60,61,62,1=
25,126,127,192,193,194,195,216,217,218,219,420,421,422,423,561,562,563,564,=
569,570,571,572,573,574,575,576,577,578,579,879,880,881,882,883,884,885,886=
,891,892,893,894,959,960,961,962,963,964,965,966,971,972,973,974,1401,1402,=
1403,1404,1405,1406,1407,1408,1419,1420,1495,1496,1497,1498,1499,1500,1501,=
1502,1507,1508,1509,1510,1661,1662,1663,1664,1665,1666,1667,1668,1673,1674,=
1675,1676,1685,1686,1687,1688,1689,1690,1691,1692,1697,1698,1699,1700,1717,=
1718,1719,1720,1721,1722,1727,1728,1729,1730,1746,1747,1748,1749,1750,1751,=
1752,1753,1758,1759,1760,1761}}
+ {tilespan=3D4,src=3D"terrain_grass.png"			,uoids=3D{3,4,5,6,59,60,61,62,1=
25,126,127,192,193,194,195,216,217,218,219,420,421,422,423,561,562,563,564,=
569,570,571,572,573,574,575,576,577,578,579,879,880,881,882,883,884,885,886=
,891,892,893,894,959,960,961,962,963,964,965,966,971,972,973,974,1401,1402,=
1403,1404,1405,1406,1407,1408,1419,1420,1495,1496,1497,1498,1499,1500,1501,=
1502,1507,1508,1509,1510,1661,1662,1663,1664,1665,1666,1667,1668,1673,1674,=
1675,1676,1685,1686,1687,1688,1689,1690,1691,1692,1697,1698,1699,1700,1717,=
1718,1719,1720,1721,1722,1727,1728,1729,1730,1746,1747,1748,1749,1750,1751,=
1752,1753,1758,1759,1760,1761,1110,1111,1112,1113,1114,1115,1116,1117,1118,=
1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,=
1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145}}
 ,{tilespan=3D4,src=3D"terrain_dirt.png",default=3Dtrue,uoids=3D{113,114,11=
5,116,117,118,119,120,121,122,123,124,128,129,130,131,132,133,134,135,136,1=
37,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,=
156,157,158,159,160,161,162,163,164,165,166,167,220,221,222,223,224,225,226=
,227,232,233,234,235,321,322,323,324,332,333,334,335,361,362,363,364,365,36=
6,367,368,369,370,371,372,476,477,478,479,480,481,482,483,484,485,486,487,4=
92,493,494,495,626,627,628,629,638,639,640,641,720,721,722,723,724,725,726,=
727,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758=
,759,760,761,762,763,764,765,766,767,771,772,773,774,775,776,777,778,779,78=
0,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,7=
99,812,813,814,815,829,830,831,832,837,838,839,840,841,842,843,844,853,854,=
855,856,871,872,873,874,875,876,877,878,887,888,889,890,909,910,911,912,917=
,918,919,920,921,922,923,924,933,934,935,936,1014,1015,1017,1018,1019,1020,=
1021,1022,1023,1024,1025,1026,1027,1028,1029,1351,1352,1353,1354,1355,1356,=
1357,1358,1363,1364,1365,1366,1431,1432,1433,1434,1435,1436,1437,1438,1571,=
1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,=
1587,1588,1589,1590,1591,1592,1593,1594,1779,1780,1781,1782,1783,1784,1785,=
1786,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,=
1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937}}
 ,{tilespan=3D4,src=3D"terrain_rock.png"				,uoids=3D{228,229,230,231,244,2=
45,246,247,260,261,262,263,272,273,274,275,290,291,292,293,467,468,469,470,=
471,472,473,474,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557=
,558,559,560,565,566,567,568,1741,1742,1743,1744,1745,1754,1755,1756,1757,1=
771,1772,1773,1774,1775,1776,1777,1778,1787,1788,1789,1790,1805,1806,1807,1=
808,1809,1810,1811,1812,1821,1822,1823,1824,1835,1836,1837,1838,1839,1840,1=
841,1842,1851,1852,1853,1854,1865,1866,1867,1868,1869,1870,1871,1872,1881,1=
882,1883,1884}}
 ,{tilespan=3D4,src=3D"terrain_sand.png"				,uoids=3D{22,23,24,25,26,27,28,=
29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,=
54,55,56,57,58,68,69,70,71,72,73,74,75,286,287,288,289,294,295,296,297,298,=
299,300,301,402,424,425,426,427,441,442,443,444,445,446,447,448,449,450,451=
,452,453,454,455,456,457,458,459,460,461,462,463,464,465,642,643,644,645,65=
0,651,652,653,654,655,656,657,821,822,823,824,825,826,827,828,833,834,835,8=
36,845,846,847,848,849,850,851,852,857,858,859,860,951,952,953,954,955,956,=
957,958,967,968,969,970,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1=
457,1458,1611,1612,1613,1614,1615,1616,1617,1618,1623,1624,1625,1626,1635,1=
636,1637,1638,1639,1640,1641,1642,1647,1648,1649,1650}}
@@ -53,14 +53,6 @@
 ,{tilespan=3D4,src=3D"terrain_swamp.png"			,uoids=3D{2112,2108,15850,15851=
,15852}} -- 0x840=3D2112 0x83c=3D2108 ids ??
 ,{tilespan=3D1,src=3D"terrain1_fliese01.png"		,uoids=3D{0x83a}}
 ,{tilespan=3D1,src=3D"terrain1_fliese02.png"		,uoids=3D{0x3fd1}}
-,{tilespan=3D1,src=3D"terrain1_stein01.png"			,uoids=3D{0x442}} -- light b=
rown
-,{tilespan=3D1,src=3D"terrain1_stein02.png"			,uoids=3D{0x443}}
-,{tilespan=3D1,src=3D"terrain1_stein03.png"			,uoids=3D{0x444}}
-,{tilespan=3D1,src=3D"terrain1_stein04.png"			,uoids=3D{0x445}}
-,{tilespan=3D1,src=3D"terrain1_stein05.png"			,uoids=3D{0x436}} -- grey
-,{tilespan=3D1,src=3D"terrain1_stein06.png"			,uoids=3D{0x437}}
-,{tilespan=3D1,src=3D"terrain1_stein07.png"			,uoids=3D{0x438}}
-,{tilespan=3D1,src=3D"terrain1_stein08.png"			,uoids=3D{0x439}}
 ,{tilespan=3D1,src=3D"terrain1_mosa01.png"			,uoids=3D{0x48c}}
 ,{tilespan=3D1,src=3D"terrain1_mosa02.png"			,uoids=3D{0x48b}}
 ,{tilespan=3D1,src=3D"terrain1_mosa03.png"			,uoids=3D{}}
@@ -70,6 +62,26 @@
 ,{tilespan=3D1,src=3D"terrain1_kacleklein02.png"	,uoids=3D{}}
 ,{tilespan=3D1,src=3D"terrain1_kacleklein03.png"	,uoids=3D{}}
 ,{tilespan=3D1,src=3D"terrain1_kacleklein04.png"	,uoids=3D{}}
+,{tilespan=3D2,src=3D"terrain1_redpaving.png"		,uoids=3D{1146,1147,1148,11=
49,1150,1151,1152,1152,1153,1154,1155,1156,1157}}
+,{tilespan=3D2,src=3D"terrain1_farmland.png"		,uoids=3D{9,10,11,12,13,14,1=
5,16,17,18,19,20,21}}
+,{tilespan=3D2,src=3D"terrain1_sandstonepav.png"	,uoids=3D{1094,1095,1096,=
1097}}
+,{tilespan=3D2,src=3D"terrain1_sandstonepav2.png"	,uoids=3D{1098,1099,1100=
,1101}}
+,{tilespan=3D1,src=3D"terrain1_sandstonetile.png"	,uoids=3D{1090}}
+,{tilespan=3D1,src=3D"terrain1_sandstonetile2.png"	,uoids=3D{1091}}
+,{tilespan=3D1,src=3D"terrain1_darksstile.png"		,uoids=3D{1092}}
+,{tilespan=3D1,src=3D"terrain1_darksstile2.png"		,uoids=3D{1093}}
+,{tilespan=3D1,src=3D"terrain1_slatetile1.png"		,uoids=3D{1078}} =

+,{tilespan=3D1,src=3D"terrain1_slatetile2.png"		,uoids=3D{1079}}
+,{tilespan=3D1,src=3D"terrain1_slatetile3.png"		,uoids=3D{1080}}
+,{tilespan=3D1,src=3D"terrain1_slatetile4.png"		,uoids=3D{1081}}
+,{tilespan=3D1,src=3D"terrain1_slategreentile1.png"	,uoids=3D{1082}} =

+,{tilespan=3D1,src=3D"terrain1_slategreentile2.png"	,uoids=3D{1083}}
+,{tilespan=3D1,src=3D"terrain1_slategreentile3.png"	,uoids=3D{1084}}
+,{tilespan=3D1,src=3D"terrain1_slategreentile4.png"	,uoids=3D{1085}}
+,{tilespan=3D1,src=3D"terrain1_darktile1.png"		,uoids=3D{1086}} =

+,{tilespan=3D1,src=3D"terrain1_darktile2.png"		,uoids=3D{1087}}
+,{tilespan=3D1,src=3D"terrain1_darktile3.png"		,uoids=3D{1088}}
+,{tilespan=3D1,src=3D"terrain1_darktile4.png"		,uoids=3D{1089}}
 }
 =

 -- skipped tiles



From no-reply at zwischenwelt.org  Wed Aug 27 13:27:49 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 11:27:49 -0000
Subject: [Iris-commit] [IRIS] r2416 - /trunk/lua/lib.spellbooks.lua
Message-ID: <20080827120004.04AF81C18691@zwischenwelt.org>

Author: hagish
Date: Wed Aug 27 13:27:49 2008
New Revision: 2416

Log:
ninjitsu spellbook (mostly untested)

Modified:
    trunk/lua/lib.spellbooks.lua

Modified: trunk/lua/lib.spellbooks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.spellbooks.lua (original)
+++ trunk/lua/lib.spellbooks.lua Wed Aug 27 13:27:49 2008
@@ -212,16 +212,41 @@
 	ignore_available_flags =3D false
 }
 =

+gSpellBooks[NinjitsuSpellbook]	=3D {
+	name		=3D"Ninjitsu",
+	gumpid		=3Dhex2num("0x2B06"),
+	minigumpid	=3Dhex2num("0x2B08"),
+	iconoffset =3D hex2num("0x5320"),
+	startindex  =3Dhex2num("0x1F4"),
+	circles	=3D{[1]=3D"First Circle",[2]=3D"Second Circle"},
+
+	pages	=3D{ [1]=3D1, [2]=3D1 },
+
+	spells	=3D{
+		[1] =3D { [1] =3D "Focus Attack", [2] =3D "Death Strike", [3] =3D "Anima=
l Form", [4] =3D "Ki Attack"},
+		[2] =3D {	[1] =3D "Suprise Attack", [2] =3D "Backstab", [3] =3D "Shadowj=
ump", [4] =3D "Mirror Image" }
+		},
+
+	reagenz =3D { [1]=3D"Mana Cost: 10", [2]=3D"Mana Cost: 15", [3]=3D"Mana C=
ost: 20", [4]=3D"Mana Cost: 25", [5]=3D"Mana Cost: 30",
+				[6]=3D"Min. Skill: 0", [7]=3D"Min. Skill: 20", [6]=3D"Min. Skill: 30",=
 [9]=3D"Min. Skill: 40", [10]=3D"Min. Skill: 50", =

+				[11]=3D"Min. Skill: 60",[12]=3D"Min. Skill: 80", [13]=3D"Min. Skill: 8=
5" },
+
+	spell_reags =3D {
+		[1]	=3D { [1]=3D{[1]=3D1,[2]=3D6}, [2]=3D{[1]=3D5,[2]=3D13}, [3]=3D{[1]=
=3D1,[2]=3D6}, [4]=3D{[1]=3D4,[2]=3D12}, },
+		[2] =3D {	[1]=3D{[1]=3D3,[2]=3D11}, [2]=3D{[1]=3D5,[2]=3D9}, [3]=3D{[1]=
=3D2,[2]=3D10}, [4]=3D{[1]=3D1,[2]=3D7}, }
+	},
+
+	ignore_available_flags =3D true
+}
+
 --[[
-	ninjitsu =3D {
-		{"Focus Attack",	10,30,"Increases both your damage and the percentage ch=
ance for \"hit\" properties on your weapon for one attack"},
-		{"Death Strike",	30,85,"After receiving a Death Strike, if the opponent =
moves more than five steps or five seconds elapses, they will suffer direct=
 damage determined by the attacker's ninjitsu."},
-		{"Animal Form",		10,0,"Allows you to transform into an animal, gaining s=
pecial bonuses..."},
-		{"Ki Attack",		25,80,"An attack that does greater damage based on how fa=
r you travel to your opponent ..."},
-		{"Suprise Attack",	20,60,"An attack from stealth that inflicts a defence=
 penalty..."},
-		{"Backstab",		30,40,"An attack from stealth with a damage bonus ..."},
-		{"Shadowjump",		15,50,"Allows you to teleport while maintaining stealth.=
.."},
-		{"Mirror Image",	10,20,"Creates a mirror image..."},
-	}
+	{"Focus Attack",	10,30,"Increases both your damage and the percentage cha=
nce for \"hit\" properties on your weapon for one attack"},
+	{"Death Strike",	30,85,"After receiving a Death Strike, if the opponent m=
oves more than five steps or five seconds elapses, they will suffer direct =
damage determined by the attacker's ninjitsu."},
+	{"Animal Form",		10,0,"Allows you to transform into an animal, gaining sp=
ecial bonuses..."},
+	{"Ki Attack",		25,80,"An attack that does greater damage based on how far=
 you travel to your opponent ..."},
 	=

+	{"Suprise Attack",	20,60,"An attack from stealth that inflicts a defence =
penalty..."},
+	{"Backstab",		30,40,"An attack from stealth with a damage bonus ..."},
+	{"Shadowjump",		15,50,"Allows you to teleport while maintaining stealth..=
."},
+	{"Mirror Image",	10,20,"Creates a mirror image..."},
 ]]--



From no-reply at zwischenwelt.org  Wed Aug 27 13:30:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 11:30:47 -0000
Subject: [Iris-commit] [IRIS] r2417 - /trunk/lua/lib.bodygfx.lua
Message-ID: <20080827120004.0E1961C18696@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 27 13:30:46 2008
New Revision: 2417

Log:
grannymodels : removed equipment parts for non-human models

Modified:
    trunk/lua/lib.bodygfx.lua

Modified: trunk/lua/lib.bodygfx.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.bodygfx.lua (original)
+++ trunk/lua/lib.bodygfx.lua Wed Aug 27 13:30:46 2008
@@ -148,6 +148,7 @@
 	 =

 	-- create body parts
 	local bodyid =3D self:GetBodyID()
+	print("gBodyGfxPrototype:Update bodyid=3D",bodyid)
 	self.modelparts =3D {}
 	=

 	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D self:GetModelPar=
tModelIDs()
@@ -216,7 +217,7 @@
 	end
 	=

 	-- equipment, ORDER IS IMPORTANT FOR STITCHIN !!!
-	if (self.equipmentlist) then =

+	if ((not bSingleModel) and self.equipmentlist) then =

 		-- TODO : i assume the paperdoll layerorder is the same as the granny la=
yeroder, check if this is correct
 		for index,layer in pairs(gLayerOrder) do
 			local item =3D self:GetEquipmentAtLayer(layer)



From no-reply at zwischenwelt.org  Wed Aug 27 14:38:10 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 12:38:10 -0000
Subject: [Iris-commit] [IRIS] r2418 - /trunk/lua/net.walk.lua
Message-ID: <20080827123810.C2EE01C18259@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 27 14:38:09 2008
New Revision: 2418

Log:
increased movement speed for ninjitsu forms

Modified:
    trunk/lua/net.walk.lua

Modified: trunk/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.walk.lua (original)
+++ trunk/lua/net.walk.lua Wed Aug 27 14:38:09 2008
@@ -55,6 +55,8 @@
 gWalkTimeout_MountRunningSpeed =3D 95
 gWalkTimeout_DirectionChange =3D 60
 =

+
+gIncreasedMovementSpeedBodyIDs =3D {[220]=3D"lama",[218]=3D"ostard",[25]=
=3D"wolf",[246]=3D"bake"} -- bodyids, ninjitsu (todo : unicorn,kirin, necro=
?)
  =

 function WalkLog (...) =

 	local tdiff =3D gLastLogTime and (gMyTicks-gLastLogTime) or 0
@@ -142,8 +144,14 @@
 	return WalkStep_WalkInDir(iDir,bRunFlag,bTrySides)
 end	=

 =

+function PlayerHasInreasedMovementSpeed ()
+	local playermobile =3D GetPlayerMobile()
+	return playermobile and gIncreasedMovementSpeedBodyIDs[playermobile.artid=
] ~=3D nil
+end
+	=

 function WalkGetInterval (bRunFlag)
-	return	 PlayerHasMount() and	(	bRunFlag and gWalkTimeout_MountRunningSpee=
d	or gWalkTimeout_MountMovingSpeed) or =

+	return	( PlayerHasMount() or PlayerHasInreasedMovementSpeed() )
+								and	(	bRunFlag and gWalkTimeout_MountRunningSpeed	or gWalkTimeout_=
MountMovingSpeed) or =

 									(	bRunFlag and gWalkTimeout_RunningSpeed		or gWalkTimeout_MovingS=
peed)
 end
 =




From no-reply at zwischenwelt.org  Wed Aug 27 16:10:13 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 14:10:13 -0000
Subject: [Iris-commit] [IRIS] r2419 - /trunk/lua/net/net.other.lua
Message-ID: <20080827141013.7FFE51C185EA@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 27 16:10:13 2008
New Revision: 2419

Log:
implemented kPacket_Localized_Text_Plus_String 0xCC : used by npc-skill-tra=
iner for give-me-x-gold-to-train-you-in-skill-y messages

Modified:
    trunk/lua/net/net.other.lua

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Wed Aug 27 16:10:13 2008
@@ -470,6 +470,64 @@
 	-- TODO : text_item ?!?
 end
 =

+-- aka Cliloc Message Affix  : see also http://docs.polserver.com/packets/=
index.php?Packet=3D0xCC
+function gPacketHandler.kPacket_Localized_Text_Plus_String () -- 0xCC
+	local input =3D GetRecvFIFO()
+	local id				=3D input:PopNetUint8()	-- 1
+	local size				=3D input:PopNetUint16()	-- 2
+	local data =3D {}
+	data.speaker_serial		=3D input:PopNetUint32()	-- 4 (0xffff for system mes=
sage)
+	data.speaker_body		=3D input:PopNetUint16()	-- 2 (0xff for system message)
+	data.speaker_align		=3D input:PopNetUint8()	-- 1 type (6 - lower left, 7 =
on player)
+	data.hue				=3D input:PopNetUint16()	-- 2
+	data.font				=3D input:PopNetUint16()	-- 2
+	data.cliloc_id			=3D input:PopNetUint32()	-- 4
+	data.flags				=3D input:PopNetUint8() 	-- 1
+	data.speaker_name		=3D input:PopFilledString(30)	=

+	size =3D size - 49
+	=

+	-- flags : (0x02 is unknown, 0x04 signals the message doesn't move on scr=
een) =

+	=

+	=

+	local affixlen =3D size
+	for i =3D 0,size-1 do if (input:PeekNetUint8(i) =3D=3D 0) then affixlen =
=3D i + 1 break end end -- search zero terminator
+	=

+	data.affixlen		=3D affixlen	=

+	data.text_affix		=3D input:PopFilledString(affixlen) --  null terminated	=

+	size =3D size - affixlen
+	data.paramlen		=3D size	=

+	=

+	--~ BYTE[?]*2] arguments; // _big-endian_ unicode string, tabs ('\t') sep=
erate arguments, see 0xC1 for argument example
+	data.text_params	=3D (size >=3D 2) and input:PopUnicodeString(size / 2) o=
r ""
+	data.text_base 		=3D gClilocLoader and gClilocLoader:Get(data.cliloc_id) =
or ("unknown_cliloc_"..data.cliloc_id)
+	data.plaintext 		=3D ParameterizedClilocText(data.cliloc_id,strsplit("\t"=
,data.text_params))
+	=

+	if (TestBit(data.flags,0x01)) then
+		data.plaintext =3D data.text_affix .. data.plaintext  -- prepend
+	else =

+		data.plaintext =3D data.plaintext .. data.text_affix  -- appended
+	end
+	=

+	-- todo : this is a hack to get unicode somewhat readable, no real unicod=
e support
+	data.plaintext =3D UnicodeFix(data.plaintext)
+	=

+	-- output
+	=

+	local name =3D data.speaker_name
+	local plaintext =3D data.plaintext
+	=

+	if string.len(name) > 0 then =

+		GuiAddChatLine(sprintf("%s: %s",name,plaintext)) -- TODO : color,font,...
+	else
+		GuiAddChatLine(plaintext) -- TODO : color,font,...
+	end
+	JournalAddText(name,plaintext)
+	NotifyListener("Hook_Text",name,plaintext)
+	=

+	--~ print("kPacket_Localized_Text_Plus_String")
+	--~ for k,v in pairs(data) do print("++",k,v) end
+end
+
 -- Predefined Message (localized Message) 0xC1
 function gPacketHandler.kPacket_Localized_Text ()
 	local input =3D GetRecvFIFO()
@@ -486,6 +544,7 @@
 	local text_terminator =3D input:PopNetUint16() -- probably the seperator =
unicode char for text_params, "\t" is hardcoded below, string.char(math.flo=
or(terminator)/256)
 	=

 	local plaintext =3D string.gsub(ParameterizedClilocText(text_messagenum,s=
trsplit("\t",text_params)),"<br>","\n")
+	--~ print("kPacket_Localized_Text",plaintext)
 	=

 	-- TODO : Display as TOOLTIP !
 	plaintext =3D UnicodeFix(plaintext)



From no-reply at zwischenwelt.org  Thu Aug 28 01:14:12 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Aug 2008 23:14:12 -0000
Subject: [Iris-commit] [IRIS] r2420 - /trunk/lua/gui/gui.paperdoll.lua
Message-ID: <20080827231412.E125A1524030@zwischenwelt.org>

Author: sience
Date: Thu Aug 28 01:14:12 2008
New Revision: 2420

Log:
-code cleaned a bit

Modified:
    trunk/lua/gui/gui.paperdoll.lua

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Thu Aug 28 01:14:12 2008
@@ -407,45 +407,39 @@
 	ClosePaperdoll(paperdoll)
 end
 =

--- TODO : Clean
+-- called from kPacket_Open_Paperdoll, TogglePlayerPaperdoll and OpenPaper=
doll
+function HandleOpenPaperdoll (paperdoll)
+	paperdoll.mobileserial	=3D paperdoll.serial
+	paperdoll.Close =3D ClosePaperdoll
+	=

+	-- close old paperdoll
+	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
+	if (oldpaperdoll) then oldpaperdoll:Close() end =

+	=

+	-- register paperdoll
+	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
+	=

+	RebuildPaperdoll(paperdoll)
+end
+
+-- toggles the player paperdoll
 function TogglePlayerPaperdoll ()
-	if (gPlayerBodySerial and gPaperdolls[gPlayerBodySerial]) then
-		gPaperdolls[gPlayerBodySerial]:Close()
-	else
-		-- open player paperdoll
-		local playermobile =3D GetPlayerMobile()
-		=

-		if (playermobile) then =

-			-- Send_DoubleClick(playermobile.serial)
+	local playermobile =3D GetPlayerMobile()
+
+	if (playermobile.serial and gPaperdolls[playermobile.serial]) then
+		gPaperdolls[playermobile.serial]:Close()
+	elseif (playermobile) then
+		local paperdoll =3D {}
+		paperdoll.serial=3D playermobile.serial
+		paperdoll.name	=3D playermobile.name
+		paperdoll.flag	=3D 0
 			=

-			Send_ClientQuery(gRequest_States,playermobile.serial)
-			Send_ClientQuery(gRequest_Skills,playermobile.serial)
-			--[[ response on pol: already implemented look net.objects.lua
-			NET: ProtocolPacketRecvHandler typeid=3D0x11,size=3D66,typename=3DkPack=
et_Mobile_Stats
-			NET (todo): Mobile_Stats id: 17 Size: 66 PlayerID: 1707739 Name: Admin
-			NET: ProtocolPacketRecvHandler typeid=3D0x3a,size=3D349,typename=3DkPac=
ket_Skills
-			(see net/net.skill.lua)
-			]]--
-			=

-			local serial =3D playermobile.serial
-			local p =3D gPaperdolls[serial]
-			=

-			if p then
-				p:Close()
-			else
-				local paperdoll =3D {}
-				paperdoll.serial	=3D serial
-				paperdoll.name		=3D playermobile.name
-				paperdoll.flag		=3D 0
-				=

-				HandleOpenPaperdoll(paperdoll)
-			end
-		end
+		HandleOpenPaperdoll(paperdoll)
 	end
 end
 =

 -- open/reposition the requested paperdoll
-function OpenPaperdoll(x,y,serial)
+function OpenPaperdoll (x,y,serial)
 	local p =3D gPaperdolls[serial]
 			=

 	if p then
@@ -465,39 +459,3 @@
 		p.dialog.rootwidget.gfx:SetPos(x, y)
 	end
 end
-
--- called from kPacket_Open_Paperdoll
-function HandleOpenPaperdoll	(paperdoll)
-	paperdoll.mobileserial	=3D paperdoll.serial
-	paperdoll.Close =3D ClosePaperdoll
-	=

-	-- close old paperdoll
-	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
-	if (oldpaperdoll) then oldpaperdoll:Close() end =

-	=

-	-- register paperdoll
-	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
-	=

-	RebuildPaperdoll(paperdoll)
-end
-
---[[
-
-possibly interesting net-packets : 0x2E 0x78 0x0F
-
-anim gumps (papderdoll) von 0xc350 -> 0xeeff
-erst ab 0xc4e4 gehts mit grafiken los
-
-see also oldiris/src/gui/Paperdoll.cpp
-see also oldiris/src/loaders/PaperdollBuilder.cpp
-see also oldiris/src/loaders/GumpLoader.cpp
-
-iris.csl
-	net_statusrequest(charid);
-	paperdoll_refresh
-	=

-  int layerOrder[0x18] =3D { =

-  };   =

-]]--
-
-



From no-reply at zwischenwelt.org  Thu Aug 28 20:50:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 28 Aug 2008 18:50:42 -0000
Subject: [Iris-commit] [IRIS] r2421 - /trunk/lua/net/net.partysystem.lua
Message-ID: <20080828185044.0A4D61524030@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Aug 28 20:50:38 2008
New Revision: 2421

Log:
Send_PartyChat implemented, thanks to surcouf =3D)

Modified:
    trunk/lua/net/net.partysystem.lua

Modified: trunk/lua/net/net.partysystem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.partysystem.lua (original)
+++ trunk/lua/net/net.partysystem.lua Thu Aug 28 20:50:38 2008
@@ -105,8 +105,21 @@
 	GuiAddChatLine ("["..name.."]: "..text)
 end =

 =

+-- thanks to surcouf =3D)
 function Send_PartyChat (chatmessage)
-	print("TODO : send party chat:",chatmessage)
+	print("partysystem : send party chat to all:",chatmessage)
+	local out =3D GetSendFIFO()
+	local len =3D string.len(chatmessage)
+	out:PushNetUint8(kPacket_Generic_Command)--id
+	out:PushNetUint16(8 +len*2) -- packet size
+	out:PushNetUint16(kPacket_Generic_SubCommand_PartySystem)
+	out:PushNetUint8(kPartySubCmd_MessageToAll)
+	for i=3D1, len do
+		--~       print("TODO : send party chat:",i,string.byte(chatmessage,i))
+		out:PushNetUint16(string.byte(chatmessage,i))
+	end
+	out:PushNetUint16(hex2num("0x0000"))
+	out:SendPacket() =

 end
 =

 --[[



From no-reply at zwischenwelt.org  Fri Aug 29 00:52:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 28 Aug 2008 22:52:31 -0000
Subject: [Iris-commit] [IRIS] r2422 - in /trunk: data/mymacros.lua.dist
 lua/lib.cursor.lua lua/lib.macrolist.lua lua/net/net.cursor.lua
 lua/net/net.partysystem.lua lua/obj/obj.player.lua
Message-ID: <20080828225232.701A21524030@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Aug 29 00:52:25 2008
New Revision: 2422

Log:
added macro/hotkey : alt+l : open party list dialog , added GetPlayerSerial=
() , added lots of listeners for targetting system, see lua/net/net.cursor.=
lua for a list, added send-target-cancel network message (triggered by pres=
sing escape key during target mode), partysystem : added stubs for missing =
send commands, added simple pary list dialog

Modified:
    trunk/data/mymacros.lua.dist
    trunk/lua/lib.cursor.lua
    trunk/lua/lib.macrolist.lua
    trunk/lua/net/net.cursor.lua
    trunk/lua/net/net.partysystem.lua
    trunk/lua/obj/obj.player.lua

Modified: trunk/data/mymacros.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/mymacros.lua.dist (original)
+++ trunk/data/mymacros.lua.dist Fri Aug 29 00:52:25 2008
@@ -28,6 +28,7 @@
 SetMacro("j",		function() MacroCmd_Open("Journal") end)	-- Open Journal
 SetMacro("b",		function() MacroCmd_Open("Backpack") end)	-- Open Backpack
 SetMacro("p",		function() MacroCmd_Open("Paperdoll") end)	-- Open Characte=
r Window
+SetMacro("alt+l",	function() MacroCmd_Open("PartyList") end)	=

 SetMacro("t",		function() MacroCmd_Open("Status") end)	-- Open Status wind=
ow
 SetMacro("k",		function() MacroCmd_Open("Skill") end)	-- Open Skills
 SetMacro("c",		function() MacroCmd_NextCamMode() end)	-- change cam mode

Modified: trunk/lua/lib.cursor.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.cursor.lua (original)
+++ trunk/lua/lib.cursor.lua Fri Aug 29 00:52:25 2008
@@ -96,6 +96,7 @@
 	if (not gTargetModeActive) then return end
 	SetUOCursor(kCursorIndex_Normal)
 	gTargetModeActive =3D false
+	NotifyListener("Hook_TargetMode_End") -- always called, even if aborted b=
y server
 end
 =

 function StartTargetMode ()
@@ -107,12 +108,13 @@
 		CleanupTargetMode()
 		gAutoTargetMobile =3D nil
 	end
-	NotifyListener("Hook_StartTargetMode")
+	NotifyListener("Hook_TargetMode_Start")
 end
 =

 -- client side cancel
 function CancelTargetMode ()
 	GuiAddChatLine("Target Mode canceled")
+	Send_Target_Cancel()
 	CleanupTargetMode()
 end
 =


Modified: trunk/lua/lib.macrolist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.macrolist.lua (original)
+++ trunk/lua/lib.macrolist.lua Fri Aug 29 00:52:25 2008
@@ -16,6 +16,7 @@
 gMacroOpenCommands.Paperdoll		=3D function()	TogglePlayerPaperdoll()		end
 gMacroOpenCommands.Compass			=3D function()	ToggleCompass()				end
 gMacroOpenCommands.Logo				=3D function()	ToggleLogo()				end
+gMacroOpenCommands.PartyList		=3D function()	TogglePartyList()			end
 =

 gMacroItemSlots =3D {}
 gMacroReadMobileStats =3D {}
@@ -60,7 +61,7 @@
 function MacroCmd_TargetLast	(completefun) 		-- repeat the last target	=

 	if (gMacroTargetLastRunning) then return end
 	gMacroTargetLastRunning =3D true
-	RegisterListener("Hook_StartTargetMode",function () =

+	RegisterListener("Hook_TargetMode_Start",function () =

 			if (gMacroLastTargetMemory) then CompleteTargetMode(gMacroLastTargetMem=
ory) end
 			gMacroTargetLastRunning =3D false
 			if (completefun) then completefun() end
@@ -71,7 +72,7 @@
 function MacroCmd_TargetGround	(x,y,z, completefun)
 	if (gMacroWaitForTargetActive) then return end
 	gMacroWaitForTargetActive =3D true
-	RegisterListener("Hook_StartTargetMode",function () =

+	RegisterListener("Hook_TargetMode_Start",function () =

 			print("MacroCmd_TargetGround hook triggered")
 			if x and y and z then =

 				print("#",x,y,z)
@@ -86,7 +87,7 @@
 function MacroCmd_TargetSelf	(completefun) 		-- target self
 	if (gMacroWaitForTargetActive) then return end
 	gMacroWaitForTargetActive =3D true
-	RegisterListener("Hook_StartTargetMode",function () =

+	RegisterListener("Hook_TargetMode_Start",function () =

 			local playermobile =3D GetPlayerMobile()
 			print("MacroCmd_TargetSelf hook triggered")
 			if (playermobile) then =


Modified: trunk/lua/net/net.cursor.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.cursor.lua (original)
+++ trunk/lua/net/net.cursor.lua Fri Aug 29 00:52:25 2008
@@ -1,3 +1,18 @@
+--[[
+iris/lua/lib.cursor.lua:		NotifyListener("Hook_TargetMode_End") -- always =
called, even if aborted by server
+iris/lua/lib.cursor.lua:		NotifyListener("Hook_TargetMode_Start")
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_CancelByServe=
r")
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_StartByServer=
")
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_Send",bIsPos,=
flag,serial,x,y,z,model) -- called on target and cancel, but not if aborted=
 by server
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_CancelByClien=
t")
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_Ground",x,y,z)
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_Static",x,y,z=
,entity)
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_Item",item)
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_Mobile",mobil=
e)
+iris/lua/net/net.cursor.lua		NotifyListener("Hook_TargetMode_Dynamic",dyna=
mic)
+]]--
+
+
 -- Target Cursor [0x6c]
 -- The server sends this packet to bring up a targeting cursor, and the cl=
ient sends it back after targeting
 -- something or pressing the Escape key.
@@ -26,9 +41,11 @@
 --	if (TestBit(flag,hex2num("0x03"))) then
 	if (flag =3D=3D hex2num("0x03")) then
 		--print("Cancel Target Mode")
+		NotifyListener("Hook_TargetMode_CancelByServer")
 		CleanupTargetMode() -- server side cancel
 	else
 		--print("Target Mode")
+		NotifyListener("Hook_TargetMode_StartByServer")
 		StartTargetMode()
 	end
 end
@@ -46,18 +63,43 @@
 	out:PushNetUint16(y or 0)
 	out:PushNetUint16(z or 0)		-- out:PushInt16(z)
 	out:PushNetUint16(model or 0)	-- ArtID, ModelID (granny)
+	=

+	NotifyListener("Hook_TargetMode_Send",bIsPos,flag,serial,x,y,z,model) -- =
called on target and cancel-by-client, but not if aborted by server
 	out:SendPacket()
 end
 =

--- Cancel Target Cursor Mode
-function Send_Target_Cancel () Send_Target(false,0,hex2num("0x00000000"),h=
ex2num("0xFFFF"),hex2num("0xFFFF"),0,0) end
+-- Cancel Target Cursor Mode  by cleint
+function Send_Target_Cancel () =

+	NotifyListener("Hook_TargetMode_CancelByClient")
+	Send_Target(false,0,hex2num("0x00000000"),hex2num("0xFFFF"),hex2num("0xFF=
FF"),0,0)
+end
+
 -- Target Ground Map
-function Send_Target_Ground (x,y,z) Send_Target(true,0,hex2num("0x00000000=
"),x,y,z,0) end
+function Send_Target_Ground (x,y,z) =

+	NotifyListener("Hook_TargetMode_Ground",x,y,z)
+	Send_Target(true,0,hex2num("0x00000000"),x,y,z,0) =

+end
+
 -- Target Statics (TODO: is this correct?; sends entitiy tile zloc instead=
 of click pos; seems to expect the position at the ground
-function Send_Target_Static (x,y,z,entity) Send_Target(true,0,hex2num("0x0=
0000000"),x,y,entity.zloc,entity.iTileTypeID) end
+function Send_Target_Static (x,y,z,entity) =

+	NotifyListener("Hook_TargetMode_Static",x,y,z,entity)
+	Send_Target(true,0,hex2num("0x00000000"),x,y,entity.zloc,entity.iTileType=
ID) =

+end
+
 -- Target Item (Backpack, Paperdoll)
-function Send_Target_Item (item) Send_Target(false,0,item.serial,item.xloc=
,item.yloc,item.zloc or 0,item.artid) end
+function Send_Target_Item (item) =

+	NotifyListener("Hook_TargetMode_Item",item)
+	Send_Target(false,0,item.serial,item.xloc,item.yloc,item.zloc or 0,item.a=
rtid) =

+end
+
 -- Target Mobile (Characters, Monsters)
-function Send_Target_Mobile (mobile) Send_Target_Item(mobile) end -- compa=
tible fieldnames
+function Send_Target_Mobile (mobile) =

+	NotifyListener("Hook_TargetMode_Mobile",mobile)
+	Send_Target_Item(mobile) -- compatible fieldnames
+end
+
 -- Target Dynamics
-function Send_Target_Dynamic (dynamic) Send_Target_Item(dynamic) end -- co=
mpatible fieldnames
+function Send_Target_Dynamic (dynamic)
+	NotifyListener("Hook_TargetMode_Dynamic",dynamic)
+	Send_Target_Item(dynamic) -- compatible fieldnames =

+end

Modified: trunk/lua/net/net.partysystem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.partysystem.lua (original)
+++ trunk/lua/net/net.partysystem.lua Fri Aug 29 00:52:25 2008
@@ -10,7 +10,12 @@
 for k,v in pairs(gPartySystemSubSubCmd) do _G[k] =3D v end
 =

 gPartySystemHandler =3D {}
-
+gPartySystemMemberList =3D {}
+
+function PartySystem_UpdateMemberList (memberlist)
+	gPartySystemMemberList =3D memberlist
+	PartyListDialog_Rebuild()
+end
 function	PartySendAccept () =

 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Generic_Command)
@@ -29,13 +34,29 @@
 	out:SendPacket()
 end
 =

+function 	PartySendInvite(serial)
+	print("TODO : PartySendInvite",serial)
+end
+function 	PartySendKick(serial)
+	print("TODO : PartySendKick",serial)
+end
+function 	PartySendDisband()
+	print("TODO : PartySendDisband")
+end
+function 	PartySendCanLootMe (bState)
+	print("TODO : PartySendCanLootMe",bState)
+end
+function 	PartySendLeave ()
+	print("TODO : PartySendLeave")
+end
+
 function	ClosePartyInvitationDialog	() =

 	if (gInvitationDialog) then gInvitationDialog:Destroy() gInvitationDialog=
 =3D nil end =

 end
 =

 function	gPartySystemHandler.kPartySubCmd_Invite	(input,size)
 	local leaderID =3D input:PopNetUint32()
-	print("partysystem:got invite, accepting (TODO:dialog)")
+	--~ print("partysystem:got invite")
 	=

 	local rows =3D {
 		{ {"party invitation"} },
@@ -61,6 +82,7 @@
 			print("kPartySubCmd_AddMembers warning, underrun",num,i,size)
 		end
 	end
+	PartySystem_UpdateMemberList(memberlist)
 end
 =

 -- used when you are kicked out (removedid=3D=3Dself), when another is rem=
oved, or to when invite times out
@@ -71,21 +93,24 @@
 	local removedid =3D input:PopNetUint32()
 	size =3D size - 11
 	=

+	local memberlist =3D {}
 	if (num =3D=3D 0) then
+		-- list cleared/invitation canceled
 		print("kPartySubCmd_RemoveMembers: list cleared",removedid)
 		ClosePartyInvitationDialog()
-		return
-	end
-	local memberlist =3D {}
-	for i =3D 1,num do
-		if (size >=3D 4) then =

-			local memberid =3D input:PopNetUint32()
-			size =3D size - 4
-			table.insert(memberlist,memberid)
-		else
-			print("kPartySubCmd_RemoveMembers warning, underrun",num,removedid,i,si=
ze)
-		end
-	end
+	else
+		-- list updated
+		for i =3D 1,num do
+			if (size >=3D 4) then =

+				local memberid =3D input:PopNetUint32()
+				size =3D size - 4
+				table.insert(memberlist,memberid)
+			else
+				print("kPartySubCmd_RemoveMembers warning, underrun",num,removedid,i,s=
ize)
+			end
+		end
+	end
+	PartySystem_UpdateMemberList(memberlist)
 end
 =

 =

@@ -98,6 +123,7 @@
 	print("partysystem:test message",speakerID,name, input, size)
 	local text =3D ""
 	while size >=3D 2 do
+		size =3D size - 2
 		local digit =3D input:PopNetUint16()
 		if (digit =3D=3D hex2num("0x0000"))  then break end
 		text =3D text..string.char(digit)
@@ -122,6 +148,71 @@
 	out:SendPacket() =

 end
 =

+RegisterListener("Hook_TargetMode_End",function () gPartyList_InviteNextTa=
rget =3D false end)
+RegisterListener("Hook_TargetMode_Mobile",function (mobile) =

+	if (gPartyList_InviteNextTarget and mobile and mobile.serial) then PartyS=
endInvite(mobile.serial) end
+end)
+
+function PartyListDialog_StartInviteMode () =

+	print("PartyListDialog_StartInviteMode") =

+	-- start targetting mode
+	StartTargetMode()
+	gPartyList_InviteNextTarget =3D true
+end
+
+function PartyListDialog_IsOpen () return gPartyListDialog ~=3D nil end
+function PartyListDialog_Close () gPartyListDialog:Destroy() gPartyListDia=
log =3D nil  end
+function PartyListDialog_Open () =

+	local bIAmLeader =3D gPartySystemMemberList[1] =3D=3D GetPlayerSerial() -=
- leader is on first place
+	local bListEmpty =3D #gPartySystemMemberList =3D=3D 0
+
+	local rows =3D {
+		{ {"party list:"} },
+		}
+	for k,serial in pairs(gPartySystemMemberList) do =

+		local mobile =3D GetMobile(serial)
+		local name =3D mobile and mobile.name or ("unknown"..serial)
+		local row =3D {}
+		if (bIAmLeader) then table.insert(row,{"Kick",function () PartySendKick(=
serial) end}) end
+		table.insert(row,{" #"..k..":"..name})
+		table.insert(rows,row)
+	end
+	=

+	if (bListEmpty) then 	=

+		-- list empty =

+		table.insert(rows,{{"Invite",function () PartyListDialog_StartInviteMode=
() end}}) =

+	else
+		-- list not empty
+		-- can loot me
+		table.insert(rows,{
+			{"Can Loot Me:"},
+			{"On",function () PartySendCanLootMe(true) end},
+			{"Off",function () PartySendCanLootMe(false) end},
+		}) =

+		=

+		-- leave/disband
+		if (bIAmLeader) then
+			table.insert(rows,{{"Disband",function () PartySendDisband() end}}) =

+		else =

+			table.insert(rows,{{"Leave",function () PartySendLeave() end}}) =

+		end
+	end
+	=

+	gPartyListDialog =3D guimaker.MakeTableDlg(rows,100,100,false,true,gGuiDe=
faultStyleSet,"window")
+end
+function PartyListDialog_Rebuild ()
+	if (not PartyListDialog_IsOpen()) then return end
+	PartyListDialog_Close()
+	PartyListDialog_Open()
+end
+function TogglePartyList ()
+	if (PartyListDialog_IsOpen()) then =

+		PartyListDialog_Close()
+	else
+		PartyListDialog_Open()
+	end =

+end
+
 --[[
 	RunUO-1.0.0/Scripts/Engines/Party/Packets.cs		=

 	PartyTextMessage

Modified: trunk/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/obj/obj.player.lua (original)
+++ trunk/lua/obj/obj.player.lua Fri Aug 29 00:52:25 2008
@@ -40,6 +40,7 @@
 function GetPlayerMobile ()
 	return gPlayerBodySerial and GetMobile(gPlayerBodySerial)
 end
+function GetPlayerSerial () return gPlayerBodySerial end
 =

 -- used by secure trade, mobile.name is filled by kPacket_Mobile_Stats
 function GetPlayerName ()



From no-reply at zwischenwelt.org  Fri Aug 29 20:07:38 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 29 Aug 2008 18:07:38 -0000
Subject: [Iris-commit] [IRIS] r2423 - /trunk/lua/lib.mainmenu.lua
Message-ID: <20080829180738.9E8621524030@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Aug 29 20:07:38 2008
New Revision: 2423

Log:
config var for offline mode map index

Modified:
    trunk/lua/lib.mainmenu.lua

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Fri Aug 29 20:07:38 2008
@@ -91,7 +91,9 @@
 local function StartOfflineMode (postxt)
 	-- reset to default maps
 	gMaps =3D {}	ArrayOverwrite(gMaps,gDefaultMaps)
-
+	=

+	if (gOfflineModeMapIndex) then MapChangeRequest(gOfflineModeMapIndex) end
+	=

 	gDialog_IrisLogo:SetVisible(false)
 =

 	gStartGameWithoutNetwork =3D true



From no-reply at zwischenwelt.org  Sat Aug 30 04:02:58 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 30 Aug 2008 02:02:58 -0000
Subject: [Iris-commit] [IRIS] r2424 - /trunk/lua/net/net.partysystem.lua
Message-ID: <20080830020259.64AB21C18678@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 30 04:02:56 2008
New Revision: 2424

Log:
completed messages for party system, thanks to surcouf =3D)

Modified:
    trunk/lua/net/net.partysystem.lua

Modified: trunk/lua/net/net.partysystem.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.partysystem.lua (original)
+++ trunk/lua/net/net.partysystem.lua Sat Aug 30 04:02:56 2008
@@ -22,7 +22,8 @@
 	out:PushNetUint16(6) -- packet size
 	out:PushNetUint16(kPacket_Generic_SubCommand_PartySystem)
 	out:PushNetUint8(kPartySubCmd_AcceptInvite)
-	out:SendPacket()
+   out:SendPacket()
+   PartySendCanLootMe(true)
 end
 =

 function	PartySendDecline () =

@@ -35,19 +36,46 @@
 end
 =

 function 	PartySendInvite(serial)
-	print("TODO : PartySendInvite",serial)
+   print("partysystem:PartySendInvite",serial)
+   local out =3D GetSendFIFO()
+   out:PushNetUint8(kPacket_Generic_Command)--id
+   out:PushNetUint16(10) -- packet size
+   out:PushNetUint16(kPacket_Generic_SubCommand_PartySystem)
+   out:PushNetUint8(kPartySubCmd_AddMembers)
+   out:PushNetUint32(serial)
+   out:SendPacket()   =

 end
 function 	PartySendKick(serial)
-	print("TODO : PartySendKick",serial)
+   print("partysystem:PartySendKick",serial)
+   local out =3D GetSendFIFO()
+   out:PushNetUint8(kPacket_Generic_Command)--id
+   out:PushNetUint16(10) -- packet size
+   out:PushNetUint16(kPacket_Generic_SubCommand_PartySystem)
+   out:PushNetUint8(kPartySubCmd_RemoveMembers)
+   out:PushNetUint32(serial)
+   out:SendPacket()
 end
 function 	PartySendDisband()
 	print("TODO : PartySendDisband")
+	PartySendKick(GetPlayerSerial())
 end
 function 	PartySendCanLootMe (bState)
-	print("TODO : PartySendCanLootMe",bState)
+   print("partysystem:PartySendCanLootMe",bState)
+   local out =3D GetSendFIFO()
+   out:PushNetUint8(kPacket_Generic_Command)--id
+   out:PushNetUint16(7) -- packet size
+   out:PushNetUint16(kPacket_Generic_SubCommand_PartySystem)
+   out:PushNetUint8(kPartySubCmd_CanLoot)
+   if bState =3D=3D true then
+      out:PushNetUint8(1)
+   else
+      out:PushNetUint8(0)
+   end
+   out:SendPacket()   =

 end
 function 	PartySendLeave ()
 	print("TODO : PartySendLeave")
+	PartySendKick(GetPlayerSerial())
 end
 =

 function	ClosePartyInvitationDialog	() =

@@ -192,10 +220,16 @@
 		=

 		-- leave/disband
 		if (bIAmLeader) then
-			table.insert(rows,{{"Disband",function () PartySendDisband() end}}) =

+         table.insert(rows,{
+         {"Disband",function () PartySendDisband() end},
+         -- need to be able to invite new member
+         {"Invite",function () PartyListDialog_StartInviteMode() end},
+         })
+         =

 		else =

 			table.insert(rows,{{"Leave",function () PartySendLeave() end}}) =

-		end
+      end
+      =

 	end
 	=

 	gPartyListDialog =3D guimaker.MakeTableDlg(rows,100,100,false,true,gGuiDe=
faultStyleSet,"window")



From no-reply at zwischenwelt.org  Sat Aug 30 04:56:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 30 Aug 2008 02:56:47 -0000
Subject: [Iris-commit] [IRIS] r2425 - in /trunk/lua: gui/gui.helper.lua
	net/net.other.lua
Message-ID: <20080830025648.03CAC1C1867A@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 30 04:56:47 2008
New Revision: 2425

Log:
runebook rename now possible, implemented packet 0xC2 , server request and =
client answer

Modified:
    trunk/lua/gui/gui.helper.lua
    trunk/lua/net/net.other.lua

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Sat Aug 30 04:56:47 2008
@@ -63,6 +63,11 @@
 	elseif string.sub(curtext, 1, 1) =3D=3D "/" then
 		Send_PartyChat(string.sub(curtext, 2))
 	else =

-		Send_UnicodeSpeech(curtext) =

+	=

+		if (gUnicodeTextEntryRequest) then =

+			Send_Unicode_Text_Entry(curtext) =

+		else
+			Send_UnicodeSpeech(curtext) =

+		end
 	end
 end =


Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Sat Aug 30 04:56:47 2008
@@ -470,7 +470,46 @@
 	-- TODO : text_item ?!?
 end
 =

+
+-- server requests text entry 0xC2, e.g. rename rune
+function gPacketHandler.kPacket_Unicode_Text_Entry ()
+	local input =3D GetRecvFIFO()
+	local id	=3D input:PopNetUint8()	-- 1
+	local size	=3D input:PopNetUint16()	-- 2
+	local data =3D {}
+	data.player_serial		=3D input:PopNetUint32()
+	data.message_id			=3D input:PopNetUint32()
+	gUnicodeTextEntryRequest =3D data
+	size =3D size - 11
+	input:PopRaw(size) -- 10 zero-bytes usually
+	print("kPacket_Unicode_Text_Entry request")
+end
+
+
+-- 0xC2, like the request, see above
+-- TODO : real unicode support
+function Send_Unicode_Text_Entry (text)
+	local out =3D GetSendFIFO()
+	local textlen =3D string.len(text)
+	local unicode_bytelen =3D textlen*2
+	local size =3D 1 + 2 + 4 + 4 + 4 + 3 + unicode_bytelen + 1
+	out:PushNetUint8(kPacket_Unicode_Text_Entry)
+	out:PushNetUint16(size)
+	out:PushNetUint32(gUnicodeTextEntryRequest.player_serial)
+	out:PushNetUint32(gUnicodeTextEntryRequest.message_id)
+	out:PushNetUint32(1)
+	out:PushFilledString(gLanguage or "ENU",3)
+	for i =3D 1 , textlen do
+		out:PushNetUint16(string.byte(text,i))
+	end
+	out:PushNetUint8(0) -- zero termination ??
+	gUnicodeTextEntryRequest =3D nil -- clear request
+	print("Send_Unicode_Text_Entry",text)
+	out:SendPacket()
+end
+
 -- aka Cliloc Message Affix  : see also http://docs.polserver.com/packets/=
index.php?Packet=3D0xCC
+-- e.g. skilltrainer npc says how much gold he wants
 function gPacketHandler.kPacket_Localized_Text_Plus_String () -- 0xCC
 	local input =3D GetRecvFIFO()
 	local id				=3D input:PopNetUint8()	-- 1
@@ -527,6 +566,7 @@
 	--~ print("kPacket_Localized_Text_Plus_String")
 	--~ for k,v in pairs(data) do print("++",k,v) end
 end
+
 =

 -- Predefined Message (localized Message) 0xC1
 function gPacketHandler.kPacket_Localized_Text ()



From no-reply at zwischenwelt.org  Sat Aug 30 04:57:15 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 30 Aug 2008 02:57:15 -0000
Subject: [Iris-commit] [IRIS] r2426 - in /trunk/lua: lib.tilefreewalk.lua
	lib.walking3.lua
Message-ID: <20080830025715.B22181C18679@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 30 04:57:14 2008
New Revision: 2426

Log:
prepare for walk debug

Modified:
    trunk/lua/lib.tilefreewalk.lua
    trunk/lua/lib.walking3.lua

Modified: trunk/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.tilefreewalk.lua (original)
+++ trunk/lua/lib.tilefreewalk.lua Sat Aug 30 04:57:14 2008
@@ -123,6 +123,7 @@
 =

 =

 function gTileFreeWalk:Step	()
+	if (gDisableTileFreeWalk) then return end
 	if (gCurrentRenderer ~=3D Renderer3D) then return end
 	local bWalkInMouseDir	=3D gKeyPressed[key_mouse2] and (not gLastMouseDown=
Widget) and (not gLastRightClickSerial)
 	local bWalkForward		=3D (not gActiveEditText) and gKeyPressed[key_up]		=

@@ -556,6 +557,26 @@
 -- qw,qx,qy,qz =3D gTileFreeWalk:GetOrientation()
 function gTileFreeWalk:GetOrientation ()	return Quaternion.getRotation(0,-=
1,0,self:GetViewDir()) end
 =

+function gTileFreeWalk:UpdateOfflineBody (x,y,z, qw,qx,qy,qz, bMoving,bTur=
ning,bWarMode,bRunFlag)
+	if (not gTileFreeTestBodyGfx) then =

+		local mobile =3D kTileFreeTestMobile
+		gTileFreeTestBodyGfx =3D CreateBodyGfx()
+		gTileFreeTestBodyGfx:MarkForUpdate(mobile.artid,mobile.hue,mobile.conten=
t)
+		gTileFreeTestBodyGfx:Update()
+	end
+	gTileFreeTestBodyGfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
+	gTileFreeTestBodyGfx.modelgfx:SetPosition(x,y,z)
+	gTileFreeTestBodyGfx.modelgfx:SetOrientation(qw,qx,qy,qz)
+	=

+	-- handle offline blend out
+	gCurrentRenderer:BlendOutLayersAbovePlayer()
+	gPlayerXLoc,gPlayerYLoc,gPlayerZLoc =3D Renderer3D:LocalToUOPos(x,y,z * 1=
0)
+	=

+	gPlayerXLoc =3D math.floor(gPlayerXLoc)
+	gPlayerYLoc =3D math.floor(gPlayerYLoc)
+	gPlayerZLoc =3D math.floor(gPlayerZLoc)
+end
+
 -- fRequestedSpeed is the speed requested by the mousepos/keyboard, might =
not be reached, e.g. when walking against a wall
 function gTileFreeWalk:Impl_StepPlayer (fRequestedSpeed,bRunRequested)
 =

@@ -569,24 +590,7 @@
 	=

 	-- apply to body
 	if (gStartGameWithoutNetwork) then -- offline mode, show test model
-		if (not gTileFreeTestBodyGfx) then =

-			local mobile =3D kTileFreeTestMobile
-			gTileFreeTestBodyGfx =3D CreateBodyGfx()
-			gTileFreeTestBodyGfx:MarkForUpdate(mobile.artid,mobile.hue,mobile.conte=
nt)
-			gTileFreeTestBodyGfx:Update()
-		end
-		gTileFreeTestBodyGfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
-		gTileFreeTestBodyGfx.modelgfx:SetPosition(x,y,z)
-		gTileFreeTestBodyGfx.modelgfx:SetOrientation(qw,qx,qy,qz)
-		=

-		-- handle offline blend out
-		gCurrentRenderer:BlendOutLayersAbovePlayer()
-		gPlayerXLoc,gPlayerYLoc,gPlayerZLoc =3D Renderer3D:LocalToUOPos(x,y,z * =
10)
-		=

-		gPlayerXLoc =3D math.floor(gPlayerXLoc)
-		gPlayerYLoc =3D math.floor(gPlayerYLoc)
-		gPlayerZLoc =3D math.floor(gPlayerZLoc)
-		=

+		gTileFreeWalk:UpdateOfflineBody(x,y,z, qw,qx,qy,qz, bMoving,bTurning,bWa=
rMode,bRunFlag)
 	else -- online mode, set mobile pos
 		local mobile =3D GetPlayerMobile()
 		if (mobile) then =


Modified: trunk/lua/lib.walking3.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking3.lua (original)
+++ trunk/lua/lib.walking3.lua Sat Aug 30 04:57:14 2008
@@ -26,6 +26,14 @@
 function GetNearestGroundLevel (xloc,yloc,iStartZ,iDir)
 	if (gUseWalk3) then return GetNearestGroundLevel_W3(xloc,yloc,iStartZ,iDi=
r) end
 	return GetNearestGroundLevel_W2(xloc,yloc,iStartZ,iDir)
+end
+
+RegisterStepper(function () W3_Test_Step() end) =

+
+function W3_Test_Step ()
+	if (not gDisableTileFreeWalk) then return end
+	--~ print("W3_Step")
+	gTileFreeWalk:UpdateOfflineBody(x,y,z, qw,qx,qy,qz, bMoving,bTurning,bWar=
Mode,bRunFlag)
 end
 =

 --[[



From no-reply at zwischenwelt.org  Sat Aug 30 05:20:58 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 30 Aug 2008 03:20:58 -0000
Subject: [Iris-commit] [IRIS] r2427 - in /trunk/lua: lib.3d.renderer.lua
	net/net.mobile.lua
Message-ID: <20080830032059.114EB1C18678@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 30 05:20:57 2008
New Revision: 2427

Log:
death packet used to prevent lich-form blinking of bw-compositor

Modified:
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/net/net.mobile.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sat Aug 30 05:20:57 2008
@@ -101,7 +101,7 @@
 	-- b&w effect on death
 	local playermobile =3D GetPlayerMobile()
 	if playermobile and playermobile.stats and playermobile.stats.curHits then
-		if playermobile.stats.curHits =3D=3D 0 then
+		if playermobile.stats.curHits =3D=3D 0 and gGotDeath then
 			-- dead
 			-- alive
 			if not gBWCompositor then
@@ -110,6 +110,7 @@
 			end
 		else
 			-- alive
+			gGotDeath =3D false
 			if gBWCompositor then
 				OgreRemoveCompositor(GetMainViewport(),"B&W")
 				gBWCompositor =3D false

Modified: trunk/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.mobile.lua (original)
+++ trunk/lua/net/net.mobile.lua Sat Aug 30 05:20:57 2008
@@ -313,7 +313,13 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local action =3D input:PopNetUint8()
-
+	=

+	print("kPacket_Death",action)
+	if (action =3D=3D 0x02) then
+		gGotDeath =3D true
+		print("you are dead")
+	end
+	=

 	-- > BandagePacket ( BandagePacket.cs ) ??????	=

 	--local item_serial =3D input:PopNetUint32()		-- use item on target mobile
 	--local mobile_target =3D input:PopNetUint32()



From no-reply at zwischenwelt.org  Sun Aug 31 15:49:02 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 31 Aug 2008 13:49:02 -0000
Subject: [Iris-commit] [IRIS] r2428 - in /trunk: data/ lua/
Message-ID: <20080831134903.2A1191C18647@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 31 15:49:02 2008
New Revision: 2428

Log:
runuo-walkcode-port now working, several walk-issues resolved with this. te=
rrain blended out when underground (caves), cam not clipped to terrain when=
 underground, redesigned tilefreewalk groundcaching

Removed:
    trunk/lua/lib.walking2.lua
Modified:
    trunk/data/config.lua.dist
    trunk/lua/config_declarations.lua
    trunk/lua/lib.3d.cam.lua
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.bodygfx.lua
    trunk/lua/lib.mapblock.3d.terrain.lua
    trunk/lua/lib.pathfind.lua
    trunk/lua/lib.tilefreewalk.lua
    trunk/lua/lib.uoutils.lua
    trunk/lua/lib.walking3.lua
    trunk/lua/main.lua
    trunk/lua/net.walk.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sun Aug 31 15:49:02 2008
@@ -467,8 +467,6 @@
 =

 gEnableGotoOnClick =3D false
 =

-gUseWalk3 =3D false
-
 gMarkFile =3D "../data/uoam/mark.uoam"
 =

 -- experimental code for faster diagonal movement (tries to avoid stair ef=
fect)
@@ -488,3 +486,5 @@
 gUseWaterShader =3D false
 =

 gShowHealthBarOverEveryMobile =3D false
+gEnableWalkLog =3D false
+gUseWalk3 =3D true

Modified: trunk/lua/config_declarations.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/config_declarations.lua (original)
+++ trunk/lua/config_declarations.lua Sun Aug 31 15:49:02 2008
@@ -463,7 +463,6 @@
 gConfig:DeclareEnum("gGraphicProfile", "gfx", "gfx profile", 'shaderbased =
characterrendering (beta)', "med", {"ultralow", "low", "med", "high", "ultr=
ahigh", "none"})
 =

 gConfig:DeclareBoolean("gEnableGotoOnClick", "input", "goto on click", 'TO=
DO', false)
-gConfig:DeclareBoolean("gUseWalk3", "input", "walk3", 'TODO', false)
 =

 gMarkFile =3D "../data/uoam/mark.uoam"
 =


Modified: trunk/lua/lib.3d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.cam.lua (original)
+++ trunk/lua/lib.3d.cam.lua Sun Aug 31 15:49:02 2008
@@ -266,7 +266,7 @@
 	end
 	=

 	-- keep cam above ground
-	local bKeepCamAboveGround =3D true
+	local bKeepCamAboveGround =3D Renderer3D.gbBlendOutTerrainVisible
 	if (bKeepCamAboveGround and not(gStartInDebugMode) and (self.gCamMode =3D=
=3D self.kCamMode_Third)) then =

 		local x,y,z =3D cam:GetPos()
 		local xloc,yloc =3D Renderer3D:LocalToUOPos(x,y,z)

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Sun Aug 31 15:49:02 2008
@@ -377,8 +377,10 @@
 	-- setup fast access cache for walking
 	if (not multi.cache) then multi.cache =3D {} end
 	local myarr =3D multi.cache[iX..","..iY]
+	--~ print("######## Renderer3D:Multi_AddPartHelper addcache",multi)
 	if (not myarr) then myarr =3D {} multi.cache[iX..","..iY] =3D myarr end
-	table.insert(myarr,{iZ=3DiZ,iTileTypeID=3DiTileTypeID,iHue=3DiHue})
+	table.insert(myarr,{iZ=3DiZ,iTileTypeID=3DiTileTypeID,xloc=3DiX,yloc=3DiY=
,zloc=3DiZ,artid=3DiTileTypeID,iHue=3DiHue}) =

+	-- also used by W3_ForAllMultiPartsAtPos
 end
 =

 -- TODO: Multis & Serversidemultis don't recognize kTileDataFlag_LightSour=
ce yet
@@ -427,6 +429,7 @@
 		print("ERROR: artid missing!!!!\n")
 	elseif item.artid >=3D gMulti_ID then =

 		-- Multis
+		print("######## Renderer3D:CreateDynamicGfx:Multi",item.artid-gMulti_ID,=
item.xloc,item.yloc,item.zloc)
 	=

 		printdebug("multi","-----------------------------")
 		printdebug("multi", sprintf("Multi detected with ARTID",item.artid,vardu=
mp(item)) )
@@ -440,6 +443,7 @@
 			local multi =3D {}
 			multi.lparts =3D {}
 			=

+			print("+serverside",#item.lTile)
 			for k,v in pairs(item.lTile) do
 				-- create part
 				iTileTypeID =3D v.artid
@@ -468,6 +472,7 @@
 			multi.id =3D item.artid - gMulti_ID
 =

 			local parts =3D gMultiLoader:CountMultiParts(multi.id)
+			print("+clientside",parts)
 			multi.lparts =3D {}
 			=

 			-- read out parts

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Sun Aug 31 15:49:02 2008
@@ -172,6 +172,8 @@
 		if (self.gbBlendOutTerrainVisible ~=3D bTerrainVisible) then
 			self:SetMapEnvironment(not bTerrainVisible)
 			self.gbBlendOutTerrainVisible =3D bTerrainVisible
+			=

+			self.map3d_spawners.terrain:ForAllBlocks(function(block) block:UpdateBl=
endOutVisibility() end)
 		end
 		=

 		local a,b =3D self:BlendoutGetVisibleRange()
@@ -207,6 +209,8 @@
 =

 -- NOTE: layerZ is a uo zloc not the layer index in pStaticGeometryLayers
 function Renderer3D:IsZLayerVisible (layerZ)
+	if (not self.giBlendOutCurZ) then return true end
+	if (not layerZ) then return true end
 	return (not self.giBlendOutCurZ) or layerZ <=3D self.giBlendOutCurZ
 end
 =


Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Sun Aug 31 15:49:02 2008
@@ -160,6 +160,7 @@
 	if self.map3d_spawners and self.map3d_spawners.statics then
 		self.map3d_spawners.statics:ForAllBlocks(function(block)
 			block:ForAllEntities(function(entity)
+				if (not entity.zloc) then print("mousepick warning, static entity has =
no zloc",entity.serial,entity.artid) end
 				if (Renderer3D:IsZLayerVisible(entity.zloc)) then -- zloc is in intege=
r tilecoords from uo
 					if (entity.gfx and entity.gfx.billboard) then
 						-- fallback

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sun Aug 31 15:49:02 2008
@@ -88,7 +88,7 @@
 end
 =

 function Renderer3D:SetOfflineStartPos (x,y,z)
-	gTileFreeWalk:SetPos_All(x+0.5,y+0.5,z) -- + for both might be wrong..
+	gTileFreeWalk:SetPos_All(self:LocalToUOPos(x+0.5,y+0.5,z)) -- + for both =
might be wrong..
 end
 =

 function Renderer3D:MainStep	()
@@ -129,7 +129,7 @@
 =

 -- for hotkey
 function Renderer3D:OfflineTeleportToMouse()
-	gTileFreeWalk:SetPos_All(gTileFreeWalk:RoundPos(gTileFreeWalk:MousePickPo=
s()))
+	gTileFreeWalk:SetPos_All(self:LocalToUOPos(gTileFreeWalk:RoundPos(gTileFr=
eeWalk:MousePickPos())))
 end
 =

 -- used by MacroRead_GetPlayerPosition when no playermobile found (yet)

Modified: trunk/lua/lib.bodygfx.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.bodygfx.lua (original)
+++ trunk/lua/lib.bodygfx.lua Sun Aug 31 15:49:02 2008
@@ -148,7 +148,7 @@
 	 =

 	-- create body parts
 	local bodyid =3D self:GetBodyID()
-	print("gBodyGfxPrototype:Update bodyid=3D",bodyid)
+	--~ print("gBodyGfxPrototype:Update bodyid=3D",bodyid)
 	self.modelparts =3D {}
 	=

 	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D self:GetModelPar=
tModelIDs()
@@ -158,7 +158,7 @@
 	local mount =3D self:GetEquipmentAtLayer(kLayer_Mount)
 	if (mount) then
 		local mountbodyid =3D gMountTranslate[mount.artid]
-		print("gBodyGfxPrototype:Update",mount.artid,mountbodyid,mount.hue)
+		--~ print("gBodyGfxPrototype:Update",mount.artid,mountbodyid,mount.hue)
 		if ((not mountbodyid) or mountbodyid =3D=3D 0) then mountbodyid =3D gSta=
ndardHorse end
 		if (mountbodyid and mountbodyid ~=3D 0) then
 			local mountskeleton =3D GetOrCreateSkeleton(mountbodyid) -- skeleton is=
 determined by the bodyid, not possible from the wearables

Modified: trunk/lua/lib.mapblock.3d.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mapblock.3d.terrain.lua (original)
+++ trunk/lua/lib.mapblock.3d.terrain.lua Sun Aug 31 15:49:02 2008
@@ -13,4 +13,10 @@
 	--~ print("cMapBlock_3D_Terrain:WorkStep_LoadDetail",self.bx,self.by)
 	local bs =3D kMultiTexTerrainChunkSize
 	self.gfx_terrain =3D MakeMultiTexTerrainGfx(self.bx * bs,self.by * bs)
+	self:UpdateBlendOutVisibility()
 end
+
+
+function cMapBlock_3D_Terrain:UpdateBlendOutVisibility ()
+	if (self.gfx_terrain) then self.gfx_terrain:SetVisible(Renderer3D.gbBlend=
OutTerrainVisible) end
+end

Modified: trunk/lua/lib.pathfind.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.pathfind.lua (original)
+++ trunk/lua/lib.pathfind.lua Sun Aug 31 15:49:02 2008
@@ -58,8 +58,8 @@
 		-- HACK ignore diagonal movements
 		--if math.abs(dx)+math.abs(dy) =3D=3D 1 then
 		=

-		 	local bIsWalkable,iNewZ	=3D GetNearestGroundLevel(x,y,z * 10,dir)
-		 	if bIsWalkable then
+		 	local iNewZ	=3D GetNearestGroundLevel(x,y,z * 10,dir)
+		 	if iNewZ then
 			 	iNewZ =3D math.floor(iNewZ / 10) =

 				-- add neighbour
 				local dz =3D (z-iNewZ)

Modified: trunk/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.tilefreewalk.lua (original)
+++ trunk/lua/lib.tilefreewalk.lua Sun Aug 31 15:49:02 2008
@@ -82,7 +82,7 @@
 	self.pos_clientside =3D {0,0,0}
 	self.pos_lastconfirmed =3D {0,0,0}
 	self.pos_lastrequested =3D {0,0,0}
-	self:SetPos_All(0,0,0)
+	self:SetPos_All(self:LocalToUOPos(0,0,0))
 	=

 	if (true) then
 		self.sDebugMarkerMeshName_Big	=3D MakeSphereMesh(11,11,0.2,0.2,0.2)
@@ -93,10 +93,10 @@
 function gTileFreeWalk:OnStartInGame ()
 	if (gStartGameWithoutNetwork) then
 		Renderer3D:ChangeCamMode(Renderer3D.kCamMode_Third)
-		--~ self:SetPos_All(-1548.5,326.5,5.0) --  iris online canyons
-		--~ self:SetPos_All(-1489.5,402.5,-7.6)
-		--~ self:SetPos_All(-1482.5,1527.5,2.0)  -- osi-britannia  -- set in sta=
rtofflinemode in lib.mainmenu.lua
-		--~ self:SetPos_All(-1482.5,1527.5,2.0)  -- osi-britannia  -- set in sta=
rtofflinemode in lib.mainmenu.lua
+		--~ self:SetPos_All(self:LocalToUOPos(-1548.5, 326.5, 5.0)) --  iris onl=
ine canyons
+		--~ self:SetPos_All(self:LocalToUOPos(-1489.5, 402.5,-7.6))
+		--~ self:SetPos_All(self:LocalToUOPos(-1482.5,1527.5, 2.0))  -- osi-brit=
annia  -- set in startofflinemode in lib.mainmenu.lua
+		--~ self:SetPos_All(self:LocalToUOPos(-1482.5,1527.5, 2.0))  -- osi-brit=
annia  -- set in startofflinemode in lib.mainmenu.lua
 	end
 	RegisterStepper(function () gTileFreeWalk:Step() end) =

 end
@@ -252,20 +252,22 @@
 				=

 				rx,ry,rz =3D self:RoundPos(x,y,z)
 				self:PathPoint_Push(rx,ry,rz)
-				self:ScanGroundIfNeeded(rx,ry,rz)
+				local xloc,yloc,zloc =3D self:LocalToUOPos(rx,ry,rz)
+				self:ScanGroundIfNeeded(xloc,yloc,zloc,rx,ry,rz)
 				=

 				-- calc correct z here
 				if (self.groundcache) then
-					local l =3D (x <=3D rx) and (rx-1) or rx
-					local t =3D (y <=3D ry) and (ry-1) or ry
-					local fx,fy =3D x-l,y-t
-					local x00,y00 =3D l-rx,t-ry
-					local zSelf =3D self.groundcache["0,0"] or z
-					local z00 =3D self.groundcache[(x00  )..","..(y00  )]
-					local z10 =3D self.groundcache[(x00+1)..","..(y00  )]
-					local z01 =3D self.groundcache[(x00  )..","..(y00+1)]
-					local z11 =3D self.groundcache[(x00+1)..","..(y00+1)]
-					z =3D InterpolateSquare(z00 or zSelf,z10 or zSelf,z01 or zSelf,z11 or=
 zSelf,fx,fy)
+					local fx =3D -x - floor(-x)
+					local fy =3D  y - floor( y)
+					=

+					local z00 =3D self:GroundCacheGetHeightForInterpolation(xloc  ,yloc  )
+					local z10 =3D self:GroundCacheGetHeightForInterpolation(xloc+1,yloc  )
+					local z01 =3D self:GroundCacheGetHeightForInterpolation(xloc  ,yloc+1)
+					local z11 =3D self:GroundCacheGetHeightForInterpolation(xloc+1,yloc+1)
+					local zr =3D z00 or z10 or z01 or z11
+					if (zr) then
+						z =3D InterpolateSquare(z00 or zr,z10 or zr,z01 or zr,z11 or zr,fx,f=
y) * 0.1 + Renderer3D.gZ_Factor
+					end
 				end
 			end
 		end
@@ -310,6 +312,14 @@
 	self:Impl_StepPlayer(fRequestedSpeed,bRunRequested)
 end
 =

+-- ##### ##### ##### ##### ##### groundcache
+
+function gTileFreeWalk:GroundCacheGetHeightForInterpolation (xloc,yloc)
+	return	self.groundcache[(xloc  )..","..(yloc  )] or
+			self.groundcache[(xloc-1)..","..(yloc  )] or
+			self.groundcache[(xloc  )..","..(yloc-1)] or
+			self.groundcache[(xloc-1)..","..(yloc-1)]
+end
 =

 -- ##### ##### ##### ##### ##### collision
 =

@@ -349,18 +359,43 @@
 	return x,y
 end
 =

+
+function gTileFreeWalk:UpdateGroundCache (xloc,yloc,zloc)
+	--~ print("##### gTileFreeWalk:UpdateGroundCache",xloc,yloc,zloc)
+	if (not gGroundBlockLoader) then print("gTileFreeWalk:UpdateGroundCache :=
 warning, no maploader(yet)") return end
+	xloc =3D floor(xloc)
+	yloc =3D floor(yloc)
+	zloc =3D floor(zloc)
+	local groundcache =3D {}
+	for iDir=3D0,7 do =

+		groundcache[(xloc+GetDirX(iDir))..","..(yloc+GetDirY(iDir))] =3D GetNear=
estGroundLevel(xloc,yloc,zloc,iDir)
+	end
+	groundcache[xloc..","..yloc] =3D zloc
+	self.groundcache =3D groundcache
+end
+
 -- scans the ground if clientpos entered a new tile, calculates walls
-function gTileFreeWalk:ScanGroundIfNeeded (rx,ry,rz)
-	if (self.lastscanx ~=3D rx or self.lastscany ~=3D ry) then =

-		self.groundcache =3D self:Impl_ScanGround(rx,ry,rz,self.lastscanx,self.l=
astscany) -- read surrounding height info
-		self.lastscanx =3D rx
-		self.lastscany =3D ry
+function gTileFreeWalk:ScanGroundIfNeeded (xloc,yloc,zloc,rx,ry,rz)
+	if (self.lastscanxloc ~=3D xloc or self.lastscanyloc ~=3D yloc) then
+		self.lastscanxloc =3D xloc
+		self.lastscanyloc =3D yloc
+		-- read surrounding height info
+		if (self.groundcache) then
+			local myzloc =3D self.groundcache[xloc..","..yloc] =

+			if (myzloc) then zloc =3D myzloc self:UpdateGroundCache(xloc,yloc,zloc)=
 end
+			-- new xloc,zloc is not neccessarily valid, for example the rounded edg=
e of a table
+			-- check old groundcache andlisten to teleport/block notify
+		end
+		local groundcache =3D self.groundcache
+		=

 		self.bSkipWalkStep =3D false
 		UpdateDebugTerrainGrid(rx,ry,rz)
 		=

 		self:DebugMarkerGroup_Clear("nearground")
-		function GetGround (x,y) local z =3D self.groundcache[x..","..y] return =
z end --  print("GetGround",x,y,z,rx,ry)
-		self.walls =3D {}
+		function GetGround (dx,dy) return groundcache[(xloc-dx)..","..(yloc+dy)]=
 end --  print("GetGround",x,y,z,rx,ry)
+		local walls =3D {}
+		self.walls =3D walls
+		=

 		for dx =3D -1,1 do =

 		for dy =3D -1,1 do =

 			local x,y,z =3D rx+dx,ry+dy,GetGround(dx,dy)
@@ -378,31 +413,31 @@
 				local b11 =3D true
 		=

 				if (not GetGround(dx,dy+1)) then -- vertical
-					table.insert(self.walls,{	x-e,y,   x-e,y+e	})
-					table.insert(self.walls,{	x+e,y+e, x+e,y		})
+					table.insert(walls,{	x-e,y,   x-e,y+e	})
+					table.insert(walls,{	x+e,y+e, x+e,y		})
 					b01 =3D false b11 =3D false
 				end
 				if (not GetGround(dx,dy-1)) then -- vertical
-					table.insert(self.walls,{	x-e,y-e, x-e,y		})
-					table.insert(self.walls,{	x+e,y,   x+e,y-e	})
+					table.insert(walls,{	x-e,y-e, x-e,y		})
+					table.insert(walls,{	x+e,y,   x+e,y-e	})
 					b00 =3D false b10 =3D false
 				end
 				=

 				if (not GetGround(dx+1,dy)) then -- horizontal
-					table.insert(self.walls,{	x,y+e,   x+e,y+e	})
-					table.insert(self.walls,{	x+e,y-e, x,y-e		})
+					table.insert(walls,{	x,y+e,   x+e,y+e	})
+					table.insert(walls,{	x+e,y-e, x,y-e		})
 					b10 =3D false b11 =3D false
 				end                                                           =

 				if (not GetGround(dx-1,dy)) then -- horizontal       =

-					table.insert(self.walls,{	x-e,y+e, x,y+e		})     =

-					table.insert(self.walls,{	x,y-e,   x-e,y-e	})
+					table.insert(walls,{	x-e,y+e, x,y+e		})     =

+					table.insert(walls,{	x,y-e,   x-e,y-e	})
 					b00 =3D false b01 =3D false
 				end
 				=

-				if (b00) then table.insert(self.walls,{	x,y-e,   x-e,y	}) end
-				if (b01) then table.insert(self.walls,{	x-e,y,   x,y+e	}) end
-				if (b11) then table.insert(self.walls,{	x,y+e,   x+e,y	}) end
-				if (b10) then table.insert(self.walls,{	x+e,y,   x,y-e	}) end
+				if (b00) then table.insert(walls,{	x,y-e,   x-e,y	}) end
+				if (b01) then table.insert(walls,{	x-e,y,   x,y+e	}) end
+				if (b11) then table.insert(walls,{	x,y+e,   x+e,y	}) end
+				if (b10) then table.insert(walls,{	x+e,y,   x,y-e	}) end
 			end
 		end
 		end
@@ -411,14 +446,16 @@
 		-- warning, the rounded position of the player can be blocked, due to di=
agonal movement
 		=

 		-- precalc some vars for the walls
-		local h =3D 0.5
+		local h =3D 1.5
 		for k,wallarr in pairs(self.walls) do
 			local x1,y1,x2,y2 =3D unpack(wallarr)
 			local dx,dy =3D sub2(x2,y2,x1,y1)
 			local nx,ny =3D norm2(-dy,dx)
 			local invsqlen =3D 1.0/sqlen2(dx,dy)
 			self.walls[k] =3D {x1,y1,x2,y2,dx,dy,nx,ny,invsqlen}
-			--self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz, h,=
	1,0,0)
+			if (gShowTileFreeDebugWalls) then
+				self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz, h,	=
1,0,0)
+			end
 		end
 	end
 end
@@ -489,7 +526,7 @@
 =

 function gTileFreeWalk:Impl_SetToPlayerPos (mobile)
 	self.movedirx,self.movediry =3D norm2(GetDirXLocal(gPlayerDir),GetDirYLoc=
al(gPlayerDir))
-	self:SetPos_All(self:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zloc))
+	self:SetPos_All(mobile.xloc,mobile.yloc,mobile.zloc)
 	self:UpdateClientPosMarker()
 end
 =

@@ -546,7 +583,7 @@
 function gTileFreeWalk:StuckFix (lx,ly,lz)
 	print("gTileFreeWalk:StuckFix")
 	self.iLastTimeNotStuck =3D gMyTicks
-	self:SetPos_All(lx,ly,lz)
+	self:SetPos_All(self:LocalToUOPos(lx,ly,lz))
 	self:UpdateClientPosMarker()
 end
 =

@@ -603,50 +640,6 @@
 		end
 	end
 end
-
--- input : rounded
--- read new surrounding height info
-function gTileFreeWalk:Impl_ScanGround (rx,ry,rz,ox,oy)
-	if (not ox) then ox,oy =3D self:GetPos_LastConfirmed() end
-
-	local xloc,yloc,zloc =3D self:LocalToUOPos(rx,ry,rz)
-	=

-	local iSelfZ =3D nil -- zloc
-	local iComingHereDir
-	local groundcache =3D {}
-	function RegisterZ (ldx,ldy,iNewZ)
-		groundcache[ldx..","..ldy] =3D groundcache[ldx..","..ldy] or (iNewZ and =
(iNewZ*0.1 + Renderer3D.gZ_Factor))
-	end
-	function CheckDir (iDir) 	=

-		local ldx,ldy =3D GetDirXLocal(iDir),GetDirYLocal(iDir)
-		if (sign(ldx) =3D=3D sign(rx-ox) and sign(ldy) =3D=3D sign(ry-oy)) then =
iComingHereDir =3D iDir end
-		local xloc2,yloc2 =3D xloc+GetDirX(iDir),yloc+GetDirY(iDir)
-		local iNewZ =3D self:Impl_CalcWalkStep(xloc2,yloc2,zloc,iDir)
-		RegisterZ(ldx,ldy,iNewZ)
-		if (iNewZ) then iSelfZ =3D self:Impl_CalcWalkStep(xloc,yloc,zloc,DirWrap=
(iDir+4)) or iSelfZ end
-		--~ if (iNewZ and (not DirIsDiagonal(iDir))) then =

-			--~ local iDirL,iDirR =3D DirWrap(iDir-2),DirWrap(iDir+2) =

-			--~ RegisterZ(ldx+GetDirXLocal(iDirL),ldy+GetDirYLocal(iDirL),self:Impl=
_CalcWalkStep(xloc2+GetDirX(iDirL),yloc2+GetDirY(iDirL),iNewZ,iDirL))
-			--~ RegisterZ(ldx+GetDirXLocal(iDirR),ldy+GetDirYLocal(iDirR),self:Impl=
_CalcWalkStep(xloc2+GetDirX(iDirR),yloc2+GetDirY(iDirR),iNewZ,iDirR))
-		--~ end
-	end
-	for iDir=3D1,7,2 do CheckDir(iDir) end -- check diagonals first
-	for iDir=3D0,7,2 do CheckDir(iDir) end
-	=

-	iSelfZ =3D iSelfZ or self:Impl_CalcWalkStep(xloc,yloc,zloc,iComingHereDir=
 or 0)
-	RegisterZ(0,0,iSelfZ)
-	--print("0,0",groundcache["0,0"],iComingHereDir)
-	return groundcache
-end
-
-function gTileFreeWalk:Impl_CalcWalkStep (xloc,yloc,zloc,iDir)
-	-- if (xloc =3D=3D 1670 and yloc =3D=3D 283) then return false end
-	local bIsWalkable,iNewZ	=3D GetNearestGroundLevel(xloc,yloc,zloc,iDir)
--- SiENcE
---print(xloc,yloc,zloc,iDir,iNewZ,bIsWalkable)
-	return bIsWalkable and iNewZ
-end
-
 =

 -- returns x,y,z
 function gTileFreeWalk:Impl_MousePickPos ()
@@ -787,12 +780,14 @@
 function gTileFreeWalk:SetPos_LastRequested (x,y,z)		self.pos_lastrequeste=
d =3D {x,y,z} end
 =

 -- used for teleport and init
-function gTileFreeWalk:SetPos_All (x,y,z)		=

+function gTileFreeWalk:SetPos_All (xloc,yloc,zloc)	=

+	local x,y,z =3D self:UOPosToLocal(xloc,yloc,zloc)
 	self:SetPos_ClientSide(		x,y,z)
 	self:SetPos_LastConfirmed(	x,y,z)
 	self:SetPos_LastRequested(	x,y,z)
 	while (self:PathPoint_Count() > 0) do self:PathPoint_Pop() end
 	self.pathpoints =3D {}
+	self:UpdateGroundCache(xloc,yloc,zloc)   =

 end
 =

 =


Modified: trunk/lua/lib.uoutils.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoutils.lua (original)
+++ trunk/lua/lib.uoutils.lua Sun Aug 31 15:49:02 2008
@@ -14,6 +14,10 @@
 	return posx+GetDirX(dir),posy+GetDirY(dir)
 end =

 =

+function Dir2Quaternion (dir)
+	local dx,dy =3D GetDirXLocal(dir),GetDirYLocal(dir)
+	return Quaternion.getRotation(0,-1,0,dx,dy,0)
+end
 =

 function DirWrap (iDir) -- wraps into [0,7], also removes runflag automati=
cally, but a bit expensive for that
 	while (iDir < 0) do iDir =3D iDir + 8 end

Modified: trunk/lua/lib.walking3.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.walking3.lua (original)
+++ trunk/lua/lib.walking3.lua Sun Aug 31 15:49:02 2008
@@ -3,16 +3,7 @@
 -- TODO : season translation
 =

 =

-
-
-kTileFlag =3D {}
-kTileFlag.Wet			=3D kTileDataFlag_Wet
-kTileFlag.Impassable	=3D kTileDataFlag_Impassable
-kTileFlag.Surface		=3D kTileDataFlag_Surface
-kTileFlag.Door			=3D kTileDataFlag_Door
-
-kImpassableSurface =3D kTileFlag.Impassable + kTileFlag.Surface
-
+kImpassableSurface =3D kTileDataFlag_Impassable + kTileDataFlag_Surface
 =

 =

 kPersonHeight				=3D 16
@@ -22,73 +13,108 @@
 =

 gW3ItemTypeFlagsCache =3D {}
 =

--- returns bClientSidePassable,zloc
+-- returns newZ or nil if (bMoveIsOk=3DbClientSidePassable) =

 function GetNearestGroundLevel (xloc,yloc,iStartZ,iDir)
-	if (gUseWalk3) then return GetNearestGroundLevel_W3(xloc,yloc,iStartZ,iDi=
r) end
-	return GetNearestGroundLevel_W2(xloc,yloc,iStartZ,iDir)
-end
-
-RegisterStepper(function () W3_Test_Step() end) =

-
-function W3_Test_Step ()
-	if (not gDisableTileFreeWalk) then return end
-	--~ print("W3_Step")
-	gTileFreeWalk:UpdateOfflineBody(x,y,z, qw,qx,qy,qz, bMoving,bTurning,bWar=
Mode,bRunFlag)
-end
-
---[[
-replaces the old GetNearestGroundLevel, was used like
-
-function WalkStep_CanWalkInDir	(iDir) =

-	iDir =3D DirWrap(iDir)
-	return (GetNearestGroundLevel(gPlayerXLoc + GetDirX(iDir),gPlayerYLoc + G=
etDirY(iDir),gPlayerZLoc,iDir))
-	--(return value was bClientSidePassable,zloc)
-end
-]]--
-
--- returns bMoveIsOk,newZ
-function GetNearestGroundLevel_W3 (xloc,yloc,iStartZ,iDir)
 	local playermobile =3D GetPlayerMobile()
 	local playerbodyid =3D playermobile and playermobile.artid or 400
 	local bIsAlive =3D true
 	if (playermobile and playermobile.bIsGhost) then bIsAlive =3D false end
 	local mobile =3D {zloc=3DiStartZ,CanSwim=3Dfalse,CantWalk=3Dfalse,Alive=
=3DbIsAlive,Body=3D{BodyID=3Dplayerbodyid},IsDeadBondedPet=3Dfalse}
 	local posx,posy,posz,d =3D xloc,yloc,iStartZ,iDir
+	=

 	local bMoveIsOk,newZ =3D W3_CheckMovement( mobile, posx,posy,posz, d)
-	return bMoveIsOk,newZ
-end
-
-
--- old : Movable runuo:ImplFlag.Movable , probably true for dynamic, false=
 for static    (door?)
+	--~ print("GetNearestGroundLevel",posx,posy,posz,"d"..d,bMoveIsOk and "ok=
" or "blocked",newZ)
+	return bMoveIsOk and newZ or nil
+end
+
+
+RegisterListener("Hook_SetPlayerPos",function () W3TestUpdateGfx2() end)
+RegisterListener("Hook_StartInGame"	,function () W3TestInit() end)
+
+function W3TestStepForward ()
+	local xloc,yloc,zloc,dir =3D gW3Test.xloc,gW3Test.yloc,gW3Test.zloc,gW3Te=
st.dir
+	local bIsWalkable,iNewZ =3D GetNearestGroundLevel(xloc,yloc,zloc,dir)
+	print("W3TestStepForward",xloc,yloc,zloc,"d"..dir,bIsWalkable and "ok" or=
 "blocked",iNewZ)
+	if (not bIsWalkable) then return end
+	gW3Test.zloc =3D iNewZ
+	gW3Test.xloc,gW3Test.yloc =3D ApplyDir(dir,xloc,yloc)
+	W3TestUpdateGfx()
+end
+
+function W3TestUpdateGfx2 ()
+	if (not gW3Test) then return end
+	-- get from network pos
+	gW3Test.xloc,gW3Test.yloc,gW3Test.zloc =3D gPlayerXLoc,gPlayerYLoc,gPlaye=
rZLoc
+	--~ print("W3TestUpdateGfx2",gPlayerXLoc,gPlayerYLoc,gPlayerZLoc)
+	W3TestUpdateGfx()
+end
+function W3TestUpdateGfx ()
+	local x,y,z =3D Renderer3D:UOPosToLocal(gW3Test.xloc,gW3Test.yloc,gW3Test=
.zloc*0.1) =

+	local qw,qx,qy,qz =3D Dir2Quaternion(gW3Test.dir)
+	local bMoving,bTurning,bWarMode,bRunFlag =3D false,false,false,false
+	gTileFreeWalk:UpdateOfflineBody(x-0.5,y+0.5,z, qw,qx,qy,qz, bMoving,bTurn=
ing,bWarMode,bRunFlag)
+	gTileFreeWalk:SetPos_ClientSide(x-0.5,y+0.5,z)
+end
+function W3TestInit ()
+	if (not gDisableTileFreeWalk) then return end
+	--~ print("W3TestInit")
+	gW3Test =3D {}
+	local x,y,z =3D unpack(gOfflineModeCamStart)
+	gW3Test.xloc,gW3Test.yloc,gW3Test.zloc =3D Renderer3D:LocalToUOPos(x,y,z =
* 10)
+	gW3Test.zloc =3D round(gW3Test.zloc)
+	print("W3TestInit",gW3Test.xloc,gW3Test.yloc,gW3Test.zloc)
+	gW3Test.dir =3D 4
+	local bOffline =3D false
+	if (bOffline) then
+		W3TestUpdateGfx()
+		SetMacro("left",	function() gW3Test.dir =3D DirWrap(gW3Test.dir - 1) W3T=
estUpdateGfx() end)
+		SetMacro("right",	function() gW3Test.dir =3D DirWrap(gW3Test.dir + 1) W3=
TestUpdateGfx() end)
+		SetMacro("up",		function() W3TestStepForward() end)
+		SetMacro("down",	function() =

+			gW3Test.dir =3D DirWrap(gW3Test.dir + 4) =

+			W3TestStepForward()  =

+			gW3Test.dir =3D DirWrap(gW3Test.dir + 4) =

+			W3TestUpdateGfx()
+			end)
+	else
+		W3TestUpdateGfx2()
+		SetMacro("left",	function() gW3Test.dir =3D DirWrap(gW3Test.dir - 1) Wal=
kStep_TurnToDir(gW3Test.dir) W3TestUpdateGfx2() end)
+		SetMacro("right",	function() gW3Test.dir =3D DirWrap(gW3Test.dir + 1) Wa=
lkStep_TurnToDir(gW3Test.dir) W3TestUpdateGfx2() end)
+		SetMacro("up",		function() =

+			WalkStep_WalkInDir(gW3Test.dir,false,false) =

+			W3TestUpdateGfx2() =

+		end)
+	end
+end
+	=

+
+
+
+
+-- old : Movable runuo:ImplFlag.Movable , probably true for dynamic, false=
 for static    (door? probably for ghosts)
 function W3_ItemIsMovable		(item)		return not item.bIsStatic end
 =

 =

 -- handles clientside and serverside multis (no difference for us, just th=
e way they are loaded)
-function W3_ForAllMultiPartsAtPos	(xloc,yloc,item,fun,param)
-	local multidata =3D item.multi
-	local mycache =3D multi.w3_cache
-	if (not mycache) then
-		mycache =3D {}
-		multi.w3_cache =3D mycache
-		for k,v in pairs(multi.lparts or {}) do
-			local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
-			local n =3D iX..","..iY
-			local myarr =3D mycache[n]
-			if (not myarr) then myarr =3D {} mycache[n] =3D myarr end
-			table.insert(myarr,{zloc=3DiZ,artid=3DiTileTypeID,bIsStatic=3Dtrue})
-		end
-	end
-	for k,item in pairs(mycache[xloc..","..yloc]) do fun(item,param) end
+-- calls fun(item,param)
+-- item : used by filterItemFun, expected : (item.artid item.bIsStatic(gho=
st-doors,set to false/nil), inserts item into table)
+-- item : used by W3_Check etc..  probably needs .xloc .yloc .zloc .artid
+function W3_ForAllMultiPartsAtPos	(xloc,yloc,fun,param)
+	local n =3D xloc..","..yloc
+	for multi,v in pairs(gMultis) do =

+		--~ print("W3_ForAllMultiPartsAtPos",multi,multi.lparts,#multi.lparts,mu=
lti.cache)
+		local cache =3D multi.cache and multi.cache[n] -- see Renderer3D:Multi_A=
ddPartHelper =

+		if (cache) then for k,item in pairs(cache) do fun(item,param) end end
+	end
 end
 =

 -- considers statics, dynamics and multis
 function W3_ForAllItemsAtPos	(xloc,yloc,fun,param)
+	W3_ForAllMultiPartsAtPos(xloc,yloc,fun,param)
 	for k,static in pairs(MapGetStatics(xloc,yloc)) do fun(static,param) end
 	for k,dynamic in pairs(GetDynamicList()) do
 		if (DynamicIsInWorld(dynamic) and dynamic.artid) then
-			if (dynamic.artid >=3D gMulti_ID) then -- multi =

-				W3_ForAllMultiPartsAtPos(xloc,yloc,multi_item,fun,param)
-			elseif (dynamic.xloc =3D=3D xloc and dynamic.yloc =3D=3D yloc) then -- =
normal
+			if (dynamic.xloc =3D=3D xloc and dynamic.yloc =3D=3D yloc and dynamic.a=
rtid < gMulti_ID) then -- non-multi
 				fun(dynamic,param)
 			end
 		end
@@ -137,16 +163,16 @@
 =

 	if ( xForward < 0 or yForward < 0 or xForward >=3D MapGetWInTiles() or yF=
orward >=3D MapGetHInTiles() ) then return false,newZ end
 	=

-	local checkDiagonals =3D DirIsDiagonal(d) -- see lib.protocol.lua:56:
+	local checkDiagonals =3D DirIsDiagonal(d)
 =

 	local ignoreMovableImpassables =3D kIgnoreMovableImpassables -- bool
 	local reqFlags =3D kImpassableSurface -- TileFlag
 =

-	if ( mobile.CanSwim ) then reqFlags =3D BitwiseOR(reqFlags,kTileFlag.Wet)=
 end
+	if ( mobile.CanSwim ) then reqFlags =3D BitwiseOR(reqFlags,kTileDataFlag_=
Wet) end
 =

 	local filterItemFun =3D function (item,param)
 		local flags =3D GetStaticTileTypeFlags(item.artid)
-		if (ignoreMovableImpassables and W3_ItemIsMovable(item) and TestMask(fla=
gs,kTileFlag.Impassable)) then return end
+		if (ignoreMovableImpassables and W3_ItemIsMovable(item) and TestMask(fla=
gs,kTileDataFlag_Impassable)) then return end
 		if (BitwiseAND(flags,reqFlags) =3D=3D 0) then return end
 		if (item.artid < 0x4000) then table.insert(param,item) end
 	end
@@ -158,6 +184,7 @@
 	local startZ,startTop =3D W3_GetStartZ( mobile, posx,posy,posz, itemsStar=
t)
 =

 	moveIsOk,newZ =3D W3_Check( mobile, itemsForward, xForward, yForward, sta=
rtTop, startZ, mobile.CanSwim, mobile.CantWalk)
+	--~ print("W3_CheckMovement startZ,startTop  check_forward=3D",startZ,sta=
rtTop,moveIsOk,newZ)
 =

 	if ( moveIsOk and checkDiagonals ) then
 		local itemsLeft		=3D {} W3_ForAllItemsAtPos(xLeft	,yLeft	,filterItemFun	=
,itemsLeft)
@@ -172,15 +199,22 @@
 end
 =

 =

+function W3_IsOK_Fun (item,param)
+	local itemtype =3D GetStaticTileType(BitwiseAND(item.artid,0x3FFF))
+	if ( TestMask(itemtype.miFlags,kImpassableSurface) ) then -- Impassable o=
r Surface
+		if ( item.zloc + itemtype.iCalcHeight > param.ourZ and param.ourTop > it=
em.zloc ) then param.bFailed =3D true end -- intersection =

+	end
+end
+
 --~ private bool IsOk( bool ignoreDoors, int ourZ, int ourTop, Tile[] tile=
s, ArrayList items )
-function W3_IsOK(  ignoreDoors,  ourZ, ourTop, tiles, items )
-	for i,check in pairs(tiles) do
-		local itemtype =3D GetStaticTileType(BitwiseAND(check.artid,0x3FFF))
-		if ( TestMask(itemtype.miFlags,kImpassableSurface) ) then -- Impassable =
or Surface
-			if ( check.zloc + itemtype.iCalcHeight > ourZ and ourTop > check.zloc )=
 then return false end -- intersection =

-		end
-	end
-
+function W3_IsOK(  ignoreDoors,  ourZ, ourTop, x,y, items )
+	-- statics and multis
+	local param =3D {ourZ=3DourZ,ourTop=3DourTop}
+	for k,item in pairs(MapGetStatics(x,y)) do W3_IsOK_Fun(item,param) end
+	W3_ForAllMultiPartsAtPos(x,y,W3_IsOK_Fun,param)
+	if param.bFailed then return false end
+	=

+	-- items passed in
 	for i,item in pairs(items) do -- Item
 		local iTileTypeID =3D BitwiseAND(item.artid,0x3FFF) -- int
 		local itemtype =3D GetStaticTileType(iTileTypeID) -- ItemData
@@ -188,7 +222,7 @@
 =

 		if (TestMask(flags,kImpassableSurface)) then -- Impassable or Surface
 			if (ignoreDoors and -- doors
-				(	TestMask(flags,kTileFlag.Door) or =

+				(	TestMask(flags,kTileDataFlag_Door) or =

 					iTileTypeID =3D=3D 0x692 or =

 					iTileTypeID =3D=3D 0x846 or =

 					iTileTypeID =3D=3D 0x873 or =

@@ -207,19 +241,61 @@
 	return true
 end
 =

+function W3_Check_Fun(item,param)
+	local itemtype =3D GetStaticTileType(BitwiseAND(item.artid,0x3FFF)) -- It=
emData
+	local flags =3D itemtype.miFlags -- TileFlag
+
+	if ( BitwiseAND(flags,kImpassableSurface) =3D=3D kTileDataFlag_Surface or =

+		(param.canSwim and TestMask(flags , kTileDataFlag_Wet)) ) then -- Surfac=
e and (not Impassable)
+		if (param.cantWalk and BitwiseAND(flags , kTileDataFlag_Wet) =3D=3D 0 ) =
then return end -- continue
+		=

+		local itemZ =3D item.zloc
+		local itemTop =3D itemZ
+		local ourZ =3D itemZ + itemtype.iCalcHeight
+		local ourTop =3D ourZ + kPersonHeight
+		local testTop =3D param.checkTop
+
+		if ( param.moveIsOk ) then
+			local cmp =3D math.abs( ourZ - param.mobilezloc ) - math.abs( param.new=
Z - param.mobilezloc )
+			if ( cmp > 0 or (cmp =3D=3D 0 and ourZ > param.newZ) ) then return end =
-- continue
+		end
+
+		if ( ourZ + kPersonHeight > testTop ) then testTop =3D ourZ + kPersonHei=
ght end
+
+		if ( not itemtype.bBridge ) then itemTop =3D itemTop + itemtype.miHeight=
 end
+
+		if ( param.stepTop >=3D itemTop ) then
+			local landCheck =3D itemZ
+
+			if ( itemtype.miHeight >=3D kStepHeight ) then
+				landCheck =3D landCheck + kStepHeight
+			else
+				landCheck =3D landCheck + itemtype.miHeight
+			end
+
+			if ( param.considerLand and landCheck < param.landCenter and param.land=
Center > ourZ and testTop > param.landZ ) then
+				--continue
+			else
+				if (W3_IsOK( param.ignoreDoors, ourZ, testTop, param.x, param.y, param=
.items ) ) then
+					param.newZ =3D ourZ
+					param.moveIsOk =3D true
+				end
+			end
+		end
+	end
+end
 =

 --~ private bool Check( Map map, Mobile mobile, ArrayList items, int x, in=
t y, int startTop, int startZ, bool canSwim, bool cantWalk, out int newZ )
--- returns bla,newZ
+-- returns moveIsOk,newZ
 function W3_Check(  mobile,  items,  x,  y,  startTop,  startZ,  canSwim, =
 cantWalk )
-	local newZ =3D 0
-
-	local tiles			 =3D MapGetStatics( x, y ) -- Tile[]
+	local param =3D {}
+
 	local landTile		 =3D MapGetGround( x, y ) -- Tile
 	local landTileFlags  =3D landTile.flags
-	local landTileIsWet	 =3D TestMask(landTileFlags,kTileFlag.Wet)
-
-	local landBlocks =3D TestMask(landTileFlags,kTileFlag.Impassable) -- bool
-	local considerLand =3D not landTile.bIgnoredByWalk -- bool
+	local landTileIsWet	 =3D TestMask(landTileFlags,kTileDataFlag_Wet)
+
+	local landBlocks =3D TestMask(landTileFlags,kTileDataFlag_Impassable) -- =
bool
+	param.considerLand =3D not landTile.bIgnoredByWalk -- bool
 =

 	if ( landBlocks and canSwim and landTileIsWet ) then
 		landBlocks =3D false
@@ -227,233 +303,119 @@
 		landBlocks =3D true
 	end
 =

-	local landZ =3D 0
-	local landCenter =3D 0
-	local landTop =3D 0
-
-	local landZ,landCenter,landTop =3D W3_GetAverageZ(x, y)
-
-	local moveIsOk =3D false
-
-	local stepTop =3D startTop + kStepHeight
-	local checkTop =3D startZ + kPersonHeight
-
-	local ignoreDoors =3D ( kAlwaysIgnoreDoors or (not mobile.Alive) or mobil=
e.Body.BodyID =3D=3D 0x3DB or mobile.IsDeadBondedPet )
-
-	for i,tile in pairs(tiles) do -- Tile
-		local itemtype =3D GetStaticTileType(BitwiseAND(tile.artid,0x3FFF)) -- I=
temData
-		local flags =3D itemtype.miFlags -- TileFlag
-
-		if ( BitwiseAND(flags,kImpassableSurface) =3D=3D kTileFlag.Surface or (c=
anSwim and TestMask(flags , kTileFlag.Wet)) ) then -- Surface and (not Impa=
ssable)
-			if ( cantWalk and BitwiseAND(flags , kTileFlag.Wet) =3D=3D 0 ) then
-				--continue
-			else
-
-				local itemZ =3D tile.zloc
-				local itemTop =3D itemZ
-				local ourZ =3D itemZ + itemtype.iCalcHeight
-				local ourTop =3D ourZ + kPersonHeight
-				local testTop =3D checkTop
-
-				local bMyContinue =3D false
-				if ( moveIsOk ) then
-					local cmp =3D math.abs( ourZ - mobile.zloc ) - math.abs( newZ - mobil=
e.zloc )
-
-					if ( cmp > 0 or (cmp =3D=3D 0 and ourZ > newZ) ) then bMyContinue =3D=
 true end
-				end
-
-				if (not bMyContinue) then
-					if ( ourZ + kPersonHeight > testTop ) then testTop =3D ourZ + kPerson=
Height end
-
-					if ( not itemtype.bBridge ) then itemTop =3D itemTop + itemtype.miHei=
ght end
-
-					if ( stepTop >=3D itemTop ) then
-						local landCheck =3D itemZ
-
-						if ( itemtype.miHeight >=3D kStepHeight ) then
-							landCheck =3D landCheck + kStepHeight
-						else
-							landCheck =3D landCheck + itemtype.miHeight
-						end
-
-						if ( considerLand and landCheck < landCenter and landCenter > ourZ a=
nd testTop > landZ ) then
-							--continue
-						else
-							if ( W3_IsOK( ignoreDoors, ourZ, testTop, tiles, items ) ) then
-								newZ =3D ourZ
-								moveIsOk =3D true
-							end
-						end
-					end
-				end
-			end
-		end
-	end
-
-	for i,item in pairs(items) do  -- Item
-		local itemtype =3D GetStaticTileType(item.artid) --GetStaticTileType(Bit=
wiseAND(item.artid , 0x3FFF)) ItemData
-		local flags =3D GetStaticTileTypeFlags(item.artid)  -- itemtype.miFlags =
 TileFlag
-
-		if ( BitwiseAND(flags , kImpassableSurface) =3D=3D kTileFlag.Surface or =
(mobile.CanSwim and TestMask(flags , kTileFlag.Wet)) ) then -- Surface and =
(not Impassable)
-			if ( cantWalk and BitwiseAND(flags , kTileFlag.Wet) =3D=3D 0 ) then
-				--~ continue
-			else
-
-				local itemZ =3D item.zloc
-				local itemTop =3D itemZ
-				local ourZ =3D itemZ + itemtype.iCalcHeight
-				local ourTop =3D ourZ + kPersonHeight
-				local testTop =3D checkTop
-
-				local bMyContinue =3D false
-				=

-				if ( moveIsOk ) then
-					local cmp =3D math.abs( ourZ - mobile.zloc ) - math.abs( newZ - mobil=
e.zloc )
-
-					if ( cmp > 0 or (cmp =3D=3D 0 and ourZ > newZ) ) then bMyContinue =3D=
 true end
-				end
-
-				if (not bMyContinue) then
-					if ( ourZ + kPersonHeight > testTop ) then testTop =3D ourZ + kPerson=
Height end
-
-					if ( not itemtype.bBridge ) then itemTop =3D itemTop + itemtype.miHei=
ght end
-
-					if ( stepTop >=3D itemTop ) then
-						local landCheck =3D itemZ
-
-						if ( itemtype.miHeight >=3D kStepHeight ) then
-							landCheck =3D landCheck + kStepHeight
-						else
-							landCheck =3D landCheck + itemtype.miHeight
-						end
-
-						if ( considerLand and landCheck < landCenter and landCenter > ourZ a=
nd testTop > landZ ) then
-							--continue
-						else
-							if ( W3_IsOK( ignoreDoors, ourZ, testTop, tiles, items ) ) then
-								newZ =3D ourZ
-								moveIsOk =3D true
-							end
-						end
-					end
-				end
-			end
-		end
-	end
-
-	if ( considerLand and (not landBlocks) and stepTop >=3D landZ ) then
-		local ourZ =3D landCenter
+	param.items =3D items
+	param.x =3D x
+	param.y =3D y
+	param.newZ =3D 0
+	param.landZ,param.landCenter,param.landTop =3D W3_GetAverageZ(x, y)
+	param.moveIsOk =3D false
+	param.stepTop =3D startTop + kStepHeight
+	param.checkTop =3D startZ + kPersonHeight
+	param.ignoreDoors =3D ( kAlwaysIgnoreDoors or (not mobile.Alive) or mobil=
e.Body.BodyID =3D=3D 0x3DB or mobile.IsDeadBondedPet )
+
+	param.mobilezloc =3D mobile.zloc =

+	param.canSwim =3D canSwim =

+	param.cantWalk =3D cantWalk
+	=

+	-- statics,multis and the items passed in
+	for k,item in pairs(MapGetStatics(x,y)) do W3_Check_Fun(item,param) end
+	W3_ForAllMultiPartsAtPos(x,y,W3_Check_Fun,param)
+	for i,item in pairs(items) do W3_Check_Fun(item,param) end
+	=

+	if ( param.considerLand and (not landBlocks) and param.stepTop >=3D param=
.landZ ) then
+		local ourZ =3D param.landCenter
 		local ourTop =3D ourZ + kPersonHeight
-		local testTop =3D checkTop
+		local testTop =3D param.checkTop
 =

 		if ( ourZ + kPersonHeight > testTop ) then testTop =3D ourZ + kPersonHei=
ght end
 =

 		local shouldCheck =3D true
 =

 		if ( moveIsOk ) then
-			local cmp =3D math.abs( ourZ - mobile.zloc ) - math.abs( newZ - mobile.=
zloc ) -- int
-			if ( cmp > 0 or (cmp =3D=3D 0 and ourZ > newZ) ) then shouldCheck =3D f=
alse end
-		end
-
-		if ( shouldCheck and W3_IsOK( ignoreDoors, ourZ, testTop, tiles, items )=
 ) then
-			newZ =3D ourZ
-			moveIsOk =3D true
-		end
-	end
-
-	return moveIsOk,newZ
+			local cmp =3D math.abs( ourZ - param.mobilezloc ) - math.abs( param.new=
Z - param.mobilezloc ) -- int
+			if ( cmp > 0 or (cmp =3D=3D 0 and ourZ > param.newZ) ) then shouldCheck=
 =3D false end
+		end
+
+		if ( shouldCheck and W3_IsOK( param.ignoreDoors, ourZ, testTop, x,y, ite=
ms ) ) then
+			param.newZ =3D ourZ
+			param.moveIsOk =3D true
+		end
+	end
+
+	return param.moveIsOk,param.newZ
+end
+
+function W3_GetStartZ_Fun	(item,param)
+	local itemtype =3D GetStaticTileType(BitwiseAND(item.artid , 0x3FFF)) -- =
ItemData
+	local calcTop =3D item.zloc + itemtype.iCalcHeight
+	local flags =3D itemtype.miFlags
+
+	if (	((not param.isSet) or calcTop >=3D param.zCenter) and =

+			(	TestMask(flags , kTileDataFlag_Surface) or =

+				( param.CanSwim and TestMask(flags,kTileDataFlag_Wet) ) ) and =

+			param.posz >=3D calcTop )
+	then
+		if ( param.CantWalk and BitwiseAND(flags , kTileDataFlag_Wet) =3D=3D 0 )=
 then
+			--continue
+		else =

+			param.zLow =3D item.zloc
+			param.zCenter =3D calcTop
+
+			local top =3D item.zloc + itemtype.miHeight
+
+			if ( (not param.isSet) or top > param.zTop ) then param.zTop =3D top end
+
+			param.isSet =3D true
+		end
+	end
 end
 =

 --~ private void GetStartZ( Mobile mobile, Map map, Point3D loc, ArrayList=
 itemList, out int zLow, out int zTop )
 -- returns zLow,zTop
 function W3_GetStartZ(  mobile,  posx,posy,posz,  itemList )
-	local zLow,zTop =3D 0,0
-
-	local landZ 		=3D 0
-	local landCenter	=3D 0
-	local landTop		=3D 0
 	local landTile 		=3D MapGetGround( posx, posy ) -- Tile
 	local landTileFlags	=3D landTile.flags
-	local landBlocks	=3D TestMask(landTileFlags, kTileFlag.Impassable)
-
-	if ( landBlocks and mobile.CanSwim and TestMask(landTileFlags , kTileFlag=
.Wet) ) then
+	local landBlocks	=3D TestMask(landTileFlags, kTileDataFlag_Impassable)
+	local bWet			=3D TestMask(landTileFlags, kTileDataFlag_Wet)
+
+	if ( landBlocks and mobile.CanSwim and bWet ) then
 		landBlocks =3D false
-	elseif ( mobile.CantWalk and BitwiseAND(landTileFlags , kTileFlag.Wet) =
=3D=3D 0 ) then
+	elseif ( mobile.CantWalk and (not bWet) ) then
 		landBlocks =3D true
 	end
 =

-	landZ,landCenter,landTop =3D W3_GetAverageZ( posx, posy)
+	local landZ,landCenter,landTop =3D W3_GetAverageZ(posx, posy)
 =

 	local considerLand =3D not landTile.bIgnoredByWalk
 =

-	local zCenter =3D 0
-	local isSet =3D false
+	local param =3D {}
+	param.posz =3D posz
+	param.zCenter =3D 0
+	param.zLow =3D 0
+	param.zTop =3D 0
+	param.isSet =3D false
+	param.CanSwim =3D mobile.CanSwim
+	param.CantWalk =3D mobile.CantWalk
 =

 	if ( considerLand and (not landBlocks) and posz >=3D landCenter ) then
-		zLow =3D landZ
-		zCenter =3D landCenter
-		if ( (not isSet) or landTop > zTop ) then zTop =3D landTop end
-		isSet =3D true
-	end
-
-	local staticTiles =3D MapGetStatics( posx, posy ) -- Tile[]
-
-	for i,tile in pairs(staticTiles) do -- Tile
-		local itemtype =3D GetStaticTileType(BitwiseAND(tile.artid , 0x3FFF)) --=
 ItemData
-
-		local calcTop =3D (tile.zloc + itemtype.iCalcHeight)
-
-		if	(((not isSet) or calcTop >=3D zCenter) and =

-			 (TestMask(itemtype.miFlags , kTileFlag.Surface) or (mobile.CanSwim and=
 TestMask(itemtype.miFlags,kTileFlag.Wet))) and =

-			 posz >=3D calcTop =

-			) then
-			if ( mobile.CantWalk and BitwiseAND(itemtype.miFlags , kTileFlag.Wet) =
=3D=3D 0 ) then
-				--continue
-			else
-				zLow =3D tile.zloc
-				zCenter =3D calcTop
-
-				local top =3D tile.zloc + itemtype.miHeight
-
-				if ( (not isSet) or top > zTop ) then zTop =3D top end
-
-				isSet =3D true
-			end
-		end
-	end
-
-	for i,item in pairs(itemList) do -- Item
-		local itemtype =3D GetStaticTileType(item.artid) -- ItemData
-
-		local calcTop =3D item.zloc + itemtype.iCalcHeight
-
-		if (	((not isSet) or calcTop >=3D zCenter) and =

-				(	TestMask(itemtype.miFlags , kTileFlag.Surface) or =

-					( mobile.CanSwim and TestMask(itemtype.miFlags,kTileFlag.Wet) ) ) and =

-				posz >=3D calcTop )
-		then
-			if ( mobile.CantWalk and BitwiseAND(itemtype.miFlags , kTileFlag.Wet) =
=3D=3D 0 ) then
-				--continue
-			else =

-				zLow =3D item.zloc
-				zCenter =3D calcTop
-
-				local top =3D item.zloc + itemtype.miHeight
-
-				if ( (not isSet) or top > zTop ) then zTop =3D top end
-
-				isSet =3D true
-			end
-		end
-	end
-
-	if ( not isSet ) then
-		zLow =3D posz
-		zTop =3D posz
-	elseif ( posz > zTop ) then
-		zTop =3D posz
-	end
-	=

-	return zLow,zTop
-end
-
+		param.zLow =3D landZ
+		param.zCenter =3D landCenter
+		if ( (not param.isSet) or landTop > zTop ) then param.zTop =3D landTop e=
nd
+		param.isSet =3D true
+	end
+	=

+	-- statics, multis, and the items
+	for k,item in pairs(MapGetStatics(posx,posy)) do W3_GetStartZ_Fun(item,pa=
ram) end
+	W3_ForAllMultiPartsAtPos(posx,posy,W3_GetStartZ_Fun,param)
+	for k,item in pairs(itemList) do W3_GetStartZ_Fun(item,param) end
+	=

+	if ( not param.isSet ) then
+		param.zLow =3D posz
+		param.zTop =3D posz
+	elseif ( posz > param.zTop ) then
+		param.zTop =3D posz
+	end
+	=

+	return param.zLow,param.zTop
+end
+

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sun Aug 31 15:49:02 2008
@@ -56,7 +56,6 @@
 dofile(libpath .. "lib.artatlas.lua")
 dofile(libpath .. "lib.cliloc.lua")
 dofile(libpath .. "lib.macrolist.lua")
-dofile(libpath .. "lib.walking2.lua")
 dofile(libpath .. "lib.walking3.lua")
 dofile(libpath .. "lib.spellbooks.lua")
 dofile(libpath .. "lib.speech.lua")
@@ -291,7 +290,6 @@
 	HandleCommandLine()
 	=

 	if (gCommandLineSwitches["-profile"]) then StartGlobalProfiler() end
-	if (gCommandLineSwitches["-walk3"]) then gUseWalk3 =3D true end
 	if (gCommandLineSwitches["-2d"]) then gCurrentRenderer =3D Renderer2D end
 	if (gCommandLineSwitches["-3d"]) then gCurrentRenderer =3D Renderer3D end
 	=


Modified: trunk/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.walk.lua (original)
+++ trunk/lua/net.walk.lua Sun Aug 31 15:49:02 2008
@@ -59,6 +59,7 @@
 gIncreasedMovementSpeedBodyIDs =3D {[220]=3D"lama",[218]=3D"ostard",[25]=
=3D"wolf",[246]=3D"bake"} -- bodyids, ninjitsu (todo : unicorn,kirin, necro=
?)
  =

 function WalkLog (...) =

+	if (not gEnableWalkLog) then return end
 	local tdiff =3D gLastLogTime and (gMyTicks-gLastLogTime) or 0
 	local prefix =3D sprintf("WalkLog t=3D%5d k=3D%2d r=3D%2d",tdiff,FastWalk=
_CountKeys(),countarr(gWalkRequests))
 	print(prefix,unpack(arg)) =

@@ -97,6 +98,8 @@
 	gPlayerYLoc =3D yloc
 	gPlayerZLoc =3D zloc
 	=

+	NotifyListener("Hook_SetPlayerPos")
+	=

 	local mobile =3D GetPlayerMobile()
 	if (not mobile) then return end
 	=

@@ -122,7 +125,7 @@
 -- clientside collision check, returns true if passable
 function WalkStep_CanWalkInDir	(iDir) =

 	iDir =3D DirWrap(iDir)
-	return (GetNearestGroundLevel(gPlayerXLoc + GetDirX(iDir),gPlayerYLoc + G=
etDirY(iDir),gPlayerZLoc,iDir))
+	return GetNearestGroundLevel(gPlayerXLoc,gPlayerYLoc,gPlayerZLoc,iDir) ~=
=3D nil
 end
 =

 -- does collision detection, tries neighboring dirs if direct walk is bloc=
ked
@@ -174,12 +177,11 @@
 	local iWaitTime =3D gWalkTimeout_DirectionChange -- just turn without wal=
king is quick
 	if (iDir =3D=3D gPlayerDir) then -- walk forward
 		iWaitTime =3D WalkGetInterval(bRunFlag)
+		zloc =3D GetNearestGroundLevel(xloc,yloc,zloc,gPlayerDir)
+		assert(zloc)
+		=

 		xloc =3D xloc + GetDirX(gPlayerDir)
 		yloc =3D yloc + GetDirY(gPlayerDir)
-		=

-		local bClientSidePassable
-		bClientSidePassable,zloc =3D GetNearestGroundLevel(xloc,yloc,zloc,gPlaye=
rDir)
-		assert(bClientSidePassable)
 	end
 	=

 	-- set next request time



From no-reply at zwischenwelt.org  Sun Aug 31 16:25:45 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 31 Aug 2008 14:25:45 -0000
Subject: [Iris-commit] [IRIS] r2429 - /trunk/lua/net.walk.lua
Message-ID: <20080831150003.E5BE01C1863F@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 31 16:25:44 2008
New Revision: 2429

Log:
netwalk fix : wait when no fastwalk keys left

Modified:
    trunk/lua/net.walk.lua

Modified: trunk/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.walk.lua (original)
+++ trunk/lua/net.walk.lua Sun Aug 31 16:25:44 2008
@@ -42,6 +42,7 @@
 gPlayerXLoc =3D nil
 gPlayerYLoc =3D nil
 gPlayerZLoc =3D nil
+gFastWalkKeysUsed =3D false
 =

 gNextWalkRequestTime =3D 0
 gNextWalkSequenceNumber =3D 0
@@ -72,14 +73,16 @@
 	WalkLog("FastWalk_Init start") =

 	gFastwalkStack =3D {} =

 	for k,key in pairs(keyarr) do FastWalk_PushKey(key) end =

+	gFastWalkKeysUsed =3D true
 	WalkLog("FastWalk_Init end") =

 end
-function FastWalk_PushKey	(key)		WalkLog("FastWalk_PushKey",key) table.ins=
ert(gFastwalkStack,key) end
+function FastWalk_PushKey	(key)		WalkLog("FastWalk_PushKey",key) table.ins=
ert(gFastwalkStack,key) gFastWalkKeysUsed =3D true end
 function FastWalk_PopKey	()
 	local res =3D FastWalk_HasKey() and table.remove(gFastwalkStack) or 0
 	--WalkLog("FastWalk_PopKey",res)
 	return res =

 end =

+function FastWalk_Ok	()			return FastWalk_HasKey() or (not gFastWalkKeysUs=
ed) end =

 function FastWalk_HasKey	()			return notempty(gFastwalkStack) end =

 function FastWalk_CountKeys	()			return table.getn(gFastwalkStack) end
 =

@@ -161,6 +164,7 @@
 -- internal, don't call directly, no check for walkable, only checks for t=
ime
 function ExecWalkRequestIfPossible	(iDir,bRunFlag)
 	if (not Walk_RequestTimeOk()) then return end
+	if (not FastWalk_Ok()) then return end
 	iDir =3D DirWrap(iDir)
 	local iFullDir =3D BitwiseOR(iDir,bRunFlag and kWalkFlag_Run or 0) -- inc=
ludes runflag
 	=




