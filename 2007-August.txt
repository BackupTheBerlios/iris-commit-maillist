From no-reply at zwischenwelt.org  Wed Aug  1 21:12:00 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 19:12:00 -0000
Subject: [Iris-commit] [IRIS] r1315 - in /branches/knut/include:
 ColourClipTextOverlay.h builder.h data.h gfx3D.h grannyparser.h meshshape.h
 net.h ogrewrapper.h prefix.h spritemanager.h
Message-ID: <20070801191200.CDCC4B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 21:11:59 2007
New Revision: 1315

Log:
ported changes from trunk to knut/include branch, r 1031:1313

Modified:
    branches/knut/include/ColourClipTextOverlay.h
    branches/knut/include/builder.h
    branches/knut/include/data.h
    branches/knut/include/gfx3D.h
    branches/knut/include/grannyparser.h
    branches/knut/include/meshshape.h
    branches/knut/include/net.h
    branches/knut/include/ogrewrapper.h
    branches/knut/include/prefix.h
    branches/knut/include/spritemanager.h

Modified: branches/knut/include/ColourClipTextOverlay.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/ColourClipTextOverlay.h (original)
+++ branches/knut/include/ColourClipTextOverlay.h Wed Aug  1 21:11:59 2007
@@ -3,7 +3,8 @@
 #include "ColourClipPaneOverlay.h"
 #include "robrenderable.h"
 #include <OgrePrerequisites.h>
-#include <OgreFont.h>
+#include <OgreFont.h>
+#include <OgreUTFString.h>
 =

 // temporary name
 // see also OgrePanelOverlayElement.cpp
@@ -23,44 +24,44 @@
 	Ogre::ColourValue 	mColourBottom;
 	Ogre::ColourValue 	mColourTop;
 	Ogre::GuiHorizontalAlignment mAlignment;
-
+
 	cColourClipTextOverlay(const Ogre::String& name);
 	virtual ~cColourClipTextOverlay();
-	=

+
 	/// should be called once at programmstart after initialising ogre::root
 	static void	RegisterFactory ();
-	=

+
 	/** See OverlayElement. */
 	virtual const Ogre::String& getTypeName(void) const;
 =

 	/// internal method for setting up geometry, called by OverlayElement::up=
date
 	virtual void updatePositionGeometry(void);
-	=

+
 	void	UpdateVars		();
     void	SetAutoWrap		(Ogre::Real fMaxW);
-	=

+
 	void	GetTextBounds	(Ogre::Real& w,Ogre::Real& h); ///< returns width,heig=
ht
 	int		GetGlyphAtPos	(const size_t x,const size_t y); ///< -1 if not found,=
 index in caption otherwise
 	void	GetGlyphBounds	(const size_t iIndex,Ogre::Real& l,Ogre::Real& t,Ogre=
::Real& r,Ogre::Real& b); ///< returns left,top,right,bottom
-	=

+
 	inline void setAlignment (const Ogre::GuiHorizontalAlignment align)  { mA=
lignment =3D align; mGeomPositionsOutOfDate =3D true;  }
-		=

+
 	// stuff from OgreTextArea...
     void						setCharHeight	(Ogre::Real height );
     void						setSpaceWidth	(Ogre::Real width  );
-    void						setCaption		(const Ogre::UTFString& caption );
+    void						setCaption		(const Ogre::UTFString& caption );
     void						setFontName		(const Ogre::String& font );
 	void						setColour		(const Ogre::ColourValue& col);
 	void						setColourBottom	(const Ogre::ColourValue& col);
 	void						setColourTop	(const Ogre::ColourValue& col);
-	=

+
 	Ogre::Real					getCharHeight	() const;
-	Ogre::Real					getSpaceWidth	() const;
-    const Ogre::UTFString& 		getCaption		() const;
+	Ogre::Real					getSpaceWidth	() const;
+    const Ogre::UTFString& 		getCaption		() const;
     const Ogre::String&			getFontName		() const;
 	const Ogre::ColourValue& 	getColour		() const;
 	const Ogre::ColourValue& 	getColourBottom	() const;
 	const Ogre::ColourValue& 	getColourTop	() const;
 };
-	=

+
 #endif

Modified: branches/knut/include/builder.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/builder.h (original)
+++ branches/knut/include/builder.h Wed Aug  1 21:11:59 2007
@@ -50,7 +50,11 @@
 /// free_rgba is the color of the visible pixels in the letter
 /// border_rgba color from the border
 /// free_rgba color of the rest
+/// code_first first unicode letter included
+/// code_last last unicode letter included
+
 Ogre::FontPtr	GenerateUniFont	(cUniFontFileLoader& oUniFontFileLoader, con=
st char *szName, =

+	const int code_first, const int code_last,
 	const float letter_r =3D 1.0f, const float letter_g =3D 1.0f, const float=
 letter_b =3D 1.0f, const float letter_a =3D 1.0f,
 	const float border_r =3D 0.0f, const float border_g =3D 0.0f, const float=
 border_b =3D 0.0f, const float border_a =3D 1.0f,
 	const float free_r =3D 0.0f, const float free_g =3D 0.0f, const float fre=
e_b =3D 0.0f, const float free_a =3D 0.0f);

Modified: branches/knut/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/data.h (original)
+++ branches/knut/include/data.h Wed Aug  1 21:11:59 2007
@@ -33,7 +33,6 @@
 // GCC packed attribute
 #define STRUCT_PACKED	__attribute__ ((packed))
 #endif
- =

 class FileNotFoundException : public std::runtime_error { public:
 	FileNotFoundException(const std::string& sFilePath) : std::runtime_error(=
"FileNotFoundException : "+sFilePath) { }
 };
@@ -215,6 +214,10 @@
 	/// loads a complete uo unifont, =

 	class cUniFontFileLoader : public cFullFileLoader, public cSmartPointable=
 { public :
 		cUniFontFileLoader				(const char* szFile);
+		// returns the number of letters in the file
+		const int GetLetterNumbers();
+		// persentage [0-1] of really different letters
+		const float GetLetterUsage();
 		// returns the header of the given letter code or 0 on error
 		RawUniFontFileLetterHeader*		GetLetterHeader	(const unsigned int iCode);
 		// returns the pointer to the beginning of the given letter data or 0 on=
 error
@@ -233,8 +236,6 @@
 		/// @see IsPixelVisible
 		/// returns true if the pixel is a border pixel (has visible non border =
neightbours, a normal visible pixel is no border)
 		static const int				IsPixelBorder(const char *data, const int w, const i=
nt h, const int x, const int y);
-		=

-		static const unsigned char kLetterNumbers =3D 255;
 	};
 	=

 // ***** ***** ***** ***** ***** cMapInfo
@@ -454,6 +455,7 @@
 	class cHueLoader : public cSmartPointable, public cFullFileLoader { publi=
c :
 		cHue		mLastHue;
 		cHueLoader		(const char* szDataFile);
+		int		GetMaxHueID		();
 		cHue*	GetHue	(const int iID); ///< result of Get is only valid until nex=
t Get call
 	};
 	=

@@ -550,12 +552,12 @@
 	class cSetHighBitFilter { public : inline short operator () (short value,=
 short* ColorTable) { return value | 0x8000; } }; =

 =

 	class cHueFilter { public : inline short operator () (short value, short*=
 ColorTable) {
-		return ColorTable[(value >> 10) & 0x1F] | 0x8000; =

+		return ColorTable[mymax(0,mymin(31,(value >> 10) & 0x1F))] | 0x8000; =

 	} };
 =

 	class cPartialHueFilter { public : inline short operator () (short value,=
 short* ColorTable) { =

 		if ((value >> 10) & 0x1F =3D=3D (value >> 5) & 0x1F && (value >> 10) & 0=
x1F =3D=3D value & 0x1F) {
-			return ColorTable[(value >> 10) & 0x1F] | 0x8000;
+			return ColorTable[mymax(0,mymin(31,(value >> 10) & 0x1F))] | 0x8000;
 		} else {
 			return value | 0x8000;
 		}

Modified: branches/knut/include/gfx3D.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/gfx3D.h (original)
+++ branches/knut/include/gfx3D.h Wed Aug  1 21:11:59 2007
@@ -84,6 +84,7 @@
 	void	SetPrepareFrameStep	(const bool bOn);
 	=

 	void	SetParticleSystem	(const char* szTemplateName);
+	const unsigned int	GetNumParticles	();
 	void	SetMesh				(const char* szMeshName);
 	void	SetAnim				(const char* szAnimName,const bool bLoop);
 	Real	GetAnimLength		(const char* szAnimName);

Modified: branches/knut/include/grannyparser.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/grannyparser.h (original)
+++ branches/knut/include/grannyparser.h Wed Aug  1 21:11:59 2007
@@ -198,8 +198,9 @@
 =

 /// buffers a granny file, can be traversed using a custom cGrannyVisitor =
for the ParseGranny method
 class cGranny : public cSmartPointable { public:
-	char*	mpBuf;
-	int 	miBufSize;
+	char*		mpBuf;
+	int 		miBufSize;
+	std::string	msFilePath;
 	static	std::map<int,std::string> mlTypeNames;
 	=

 	/// constructor throws GrannyLoadException if file not found

Modified: branches/knut/include/meshshape.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/meshshape.h (original)
+++ branches/knut/include/meshshape.h Wed Aug  1 21:11:59 2007
@@ -4,6 +4,8 @@
 #include <vector>
 #include <Ogre.h>
 #include <OgreVector3.h>
+
+void	UnloadMeshShape		(const char* szMeshName);
 =

 /// used for polygon exact ray-intersection
 class MeshShape	{ public :

Modified: branches/knut/include/net.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/net.h (original)
+++ branches/knut/include/net.h Wed Aug  1 21:11:59 2007
@@ -61,6 +61,8 @@
 =

 	cNet	();
 	~cNet	();
+
+	static unsigned int GetHostByName	(const char *szHost);
 };
 =

 =


Modified: branches/knut/include/ogrewrapper.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/ogrewrapper.h (original)
+++ branches/knut/include/ogrewrapper.h Wed Aug  1 21:11:59 2007
@@ -39,6 +39,16 @@
     Ogre::SceneNode*		mpCamPosSceneNode;		// only has cam pos, absolute or=
ientation
     Ogre::SceneNode*		mpCamHolderSceneNode;	// has cam pos and orientation
 	=

+	// stores some render stats
+	float	mfLastFPS;
+	float 	mfAvgFPS;
+	float 	mfBestFPS;
+	float 	mfWorstFPS;
+	unsigned long 	miBestFrameTime;
+	unsigned long 	miWorstFrameTime;
+	size_t 	miTriangleCount;
+	size_t 	miBatchCount;
+
 	//OIS Input devices
 	OIS::InputManager* 	mInputManager;
 	OIS::Mouse*    		mMouse;

Modified: branches/knut/include/prefix.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/prefix.h (original)
+++ branches/knut/include/prefix.h Wed Aug  1 21:11:59 2007
@@ -12,20 +12,22 @@
 =

 =

 #ifdef WIN32
-#ifndef snprintf
+#ifndef snprintf
+#ifndef MINGW
 	int snprintf (char *str, int n, char *fmt, ...);
 	#define DEFINE_SNPRINTF
+#endif
 #endif
 #endif
-
+
 =

 #ifdef WIN32
-	typedef unsigned long	uint32; =

-	typedef unsigned short	uint16; =

-	typedef unsigned char	uint8; =

-	typedef long				int32; =

-	typedef short			int16; =

-	typedef char				int8; =

+	typedef unsigned long	uint32;
+	typedef unsigned short	uint16;
+	typedef unsigned char	uint8;
+	typedef long				int32;
+	typedef short			int16;
+	typedef char				int8;
 #else
 	#include <stdint.h>
 	typedef uint32_t	uint32;

Modified: branches/knut/include/spritemanager.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/spritemanager.h (original)
+++ branches/knut/include/spritemanager.h Wed Aug  1 21:11:59 2007
@@ -4,38 +4,38 @@
 #include "smartptr.h"
 #include "robrenderable.h"
 =

-#include <Ogre.h>
+#include <Ogre.h>
 #include <OgreRenderQueueListener.h>
 #include <OgreFontManager.h>
 =

-#include <string>
-#include <list>
-
-class cSpriteManager;
-class cSpriteQueue;
-class lua_State;
-
-struct Normal {
-	double x, y, z;
-};
-
-class cBaseSprite : public cSmartPointable {
+#include <string>
+#include <list>
+
+class cSpriteManager;
+class cSpriteQueue;
+class lua_State;
+
+struct Normal {
+	double x, y, z;
+};
+
+class cBaseSprite : public cSmartPointable {
 	protected :
-		cSpriteQueue* mSpriteQueue;
+		cSpriteQueue* mSpriteQueue;
 		int mPrio[6];
-		int mPos;
-	public :
-		cBaseSprite( cSpriteQueue* SpriteQueue ) {
-			mSpriteQueue =3D SpriteQueue;
-
+		int mPos;
+	public :
+		cBaseSprite( cSpriteQueue* SpriteQueue ) {
+			mSpriteQueue =3D SpriteQueue;
+
 			for (int i=3D0; i < 6; i++)
 				mPrio[i] =3D 0;
-			mPos =3D 0;
-		}
-		virtual ~cBaseSprite() {};
-
-		void SetPrio( int i, int Prio );
-
+			mPos =3D 0;
+		}
+		virtual ~cBaseSprite() {};
+
+		void SetPrio( int i, int Prio );
+
 		inline int GetPrio( int i ) {
 			return i < 6 ? mPrio[i] : 0;
 		}
@@ -46,12 +46,12 @@
 =

 		inline void SetPosition( int Pos ) {
 			mPos =3D Pos;
-		}
-
-		inline int GetQueueId();
-
-		virtual void Execute( double ViewPortWidthHalf, double ViewPortHeightHal=
f, double xOffset, double yOffset );
-};
+		}
+
+		inline int GetQueueId();
+
+		virtual void Execute( double ViewPortWidthHalf, double ViewPortHeightHal=
f, double xOffset, double yOffset );
+};
 =

 class cSprite : public cBaseSprite {
 	private :		=

@@ -308,8 +308,8 @@
 		cSpriteQueue( cSpriteManager* SpriteManager, int QueueId );
 		virtual ~cSpriteQueue();
 =

-		inline void SetSortList() {
-			mListSorted =3D false;
+		inline void SetSortList() {
+			mListSorted =3D false;
 		}
 =

 		inline bool GetResorted() {
@@ -344,11 +344,11 @@
 		bool mUseWorldCam;
 =

 		void prepareForRender();
-		void renderBuffer();		=

+		void renderBuffer();		=

 =

 		Ogre::SceneManager* mSceneMan;
 		Ogre::Camera* mCam;
-		Ogre::uint8 mTargetQueue;
+		Ogre::uint8 mTargetQueue;
 		bool mAfterQueue;
 		bool mLightningEnabled;
 =

@@ -388,10 +388,10 @@
 			return mCam;
 		}
 =

-		/// Called by Ogre, for being a render queue listener
-		virtual void renderQueueStarted( =

-			Ogre::uint8 queueGroupId, const Ogre::String &invocation, bool &skipThi=
sInvocation);
-		/// Called by Ogre, for being a render queue listener
+		/// Called by Ogre, for being a render queue listener
+		virtual void renderQueueStarted( =

+			Ogre::uint8 queueGroupId, const Ogre::String &invocation, bool &skipThi=
sInvocation);
+		/// Called by Ogre, for being a render queue listener
 		virtual void renderQueueEnded(
 			Ogre::uint8 queueGroupId, const Ogre::String &invocation, bool &repeatT=
hisInvocation);
 =




From no-reply at zwischenwelt.org  Wed Aug  1 21:16:05 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 19:16:05 -0000
Subject: [Iris-commit] [IRIS] r1316 - in /trunk: data/lua/main.lua
 include/ColourClipTextOverlay.h include/fifo.h src/sound_fmod.cpp
Message-ID: <20070801191607.30740B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 21:16:05 2007
New Revision: 1316

Log:
saving uncommitted changes unrelated to the merge

Modified:
    trunk/data/lua/main.lua
    trunk/include/ColourClipTextOverlay.h
    trunk/include/fifo.h
    trunk/src/sound_fmod.cpp

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Wed Aug  1 21:16:05 2007
@@ -92,10 +92,11 @@
 	-- execute local config
 	dofile(gConfigPath)
 else
-	-- no local config file, create empty
+	-- no local config file, copy dist config
 	local fp =3D io.open(gConfigPath,"w")
-	fp:write("# this is your local config file, here you can override the opt=
ions from "..gConfigPathFallback.."\n")
+	fp:write("# this is your local config file, here you can override the def=
ault options\n")
 	fp:write("-- gUOPath =3D \"C:\\\\stuff\\\\iris\\\\uo\\\\\" -- enter the p=
ath to your uo data dir here\n")
+	for line in io.lines(gConfigPathFallback) do fp:write(line) end
 	fp:close()
 end
 =


Modified: trunk/include/ColourClipTextOverlay.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/ColourClipTextOverlay.h (original)
+++ trunk/include/ColourClipTextOverlay.h Wed Aug  1 21:16:05 2007
@@ -3,8 +3,7 @@
 #include "ColourClipPaneOverlay.h"
 #include "robrenderable.h"
 #include <OgrePrerequisites.h>
-#include <OgreFont.h>
-#include <OgreUTFString.h>
+#include <OgreFont.h>
 =

 // temporary name
 // see also OgrePanelOverlayElement.cpp
@@ -24,7 +23,7 @@
 	Ogre::ColourValue 	mColourBottom;
 	Ogre::ColourValue 	mColourTop;
 	Ogre::GuiHorizontalAlignment mAlignment;
-
+
 	cColourClipTextOverlay(const Ogre::String& name);
 	virtual ~cColourClipTextOverlay();
 =

@@ -49,15 +48,15 @@
 	// stuff from OgreTextArea...
     void						setCharHeight	(Ogre::Real height );
     void						setSpaceWidth	(Ogre::Real width  );
-    void						setCaption		(const Ogre::UTFString& caption );
+    void						setCaption		(const Ogre::UTFString& caption );
     void						setFontName		(const Ogre::String& font );
 	void						setColour		(const Ogre::ColourValue& col);
 	void						setColourBottom	(const Ogre::ColourValue& col);
 	void						setColourTop	(const Ogre::ColourValue& col);
 =

 	Ogre::Real					getCharHeight	() const;
-	Ogre::Real					getSpaceWidth	() const;
-    const Ogre::UTFString& 		getCaption		() const;
+	Ogre::Real					getSpaceWidth	() const;
+    const Ogre::UTFString& 		getCaption		() const;
     const Ogre::String&			getFontName		() const;
 	const Ogre::ColourValue& 	getColour		() const;
 	const Ogre::ColourValue& 	getColourBottom	() const;

Modified: trunk/include/fifo.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/fifo.h (original)
+++ trunk/include/fifo.h Wed Aug  1 21:16:05 2007
@@ -230,7 +230,7 @@
 	=

 	inline	void	PeekNetUint8	(uint8& 		a,const uint32 offset=3D-1) { PeekRawE=
ndian((char*)&a,sizeof(uint8),		offset); }
 	inline	void	PeekNetUint16	(uint16& 		a,const uint32 offset=3D-1) { PeekRa=
wEndian((char*)&a,sizeof(uint16),		offset); a =3D ntohs(a); }
-	inline	void	PeekNetUint32	(uint32& 		a,const uint32 offset=3D-1) { PeekRa=
wEndian((char*)&a,sizeof(uint32),		offset); a =3D ntohs(a); }
+	inline	void	PeekNetUint32	(uint32& 		a,const uint32 offset=3D-1) { PeekRa=
wEndian((char*)&a,sizeof(uint32),		offset); a =3D ntohl(a); }
 =

 	// peek cluster with return values
 	inline	int		PeekI	(const uint32 offset=3D-1) { int		x; Peek(x,offset);	re=
turn x; }
@@ -393,132 +393,6 @@
 =

 =

 =

-/// sfz-style network message system, not used by iris2
-class cMessageWriter { public:
-			 cMessageWriter	()							: mpFIFO(0), mbOpen(false) {  }
-			 cMessageWriter	(cFIFO* fifo,uint32 type)	: mpFIFO(0), mbOpen(false) { =
Open(fifo,type); }
-	virtual ~cMessageWriter ()							{ assert(!mbOpen && "not closed"); }
-	=

-	inline	void	Open	(cFIFO* fifo,uint32 type) { =

-		assert(!mbOpen && "already open");
-		mbOpen =3D true;
-		mpFIFO =3D fifo;
-		mpFIFO->PushU(type);	miMsgSizeOffset =3D mpFIFO->size();
-		mpFIFO->PushU(0);		miMsgDataOffset =3D mpFIFO->size();
-	}
-	/// call close after all pushing is complete, before any pop operations
-	inline	void	Close	() { =

-		if (!mbOpen) return;
-		assert(mbOpen && "not open");
-		mbOpen =3D false;
-		//printf("close cMessageWriter : fifo-size=3D%d dataoff=3D%d datalen=3D%=
d\n",mpFIFO->size(),miMsgDataOffset,mpFIFO->size()-miMsgDataOffset);
-		mpFIFO->HackSetU(miMsgSizeOffset,mpFIFO->size()-miMsgDataOffset);
-	}
-	inline	void	Next	(uint32 type) { if (mbOpen) Close(); Open(mpFIFO,type); }
-	=

-	=

-	inline	void	Push	(const int					a) { assert(mbOpen); mpFIFO->Push(a);	 }
-	inline	void	PushU	(const uint32				a) { assert(mbOpen); mpFIFO->PushU(a);=
 }
-	inline	void	PushF	(const Ogre::Real			a) { assert(mbOpen); mpFIFO->PushF(=
a); }
-	inline	void	Push	(const Ogre::Vector3&		a) { assert(mbOpen); mpFIFO->Push=
(a);	 }
-	inline	void	Push	(const Ogre::Quaternion&	a) { assert(mbOpen); mpFIFO->Pu=
sh(a);  }
-	inline	void	Push	(const std::string& 		a) { assert(mbOpen); mpFIFO->Push(=
a);  }
-	inline	void	Push	(cFIFO&						a) { assert(mbOpen); mpFIFO->Push(a);  }
-	=

-	inline	void	PushUint32	(const uint32				a) { assert(mbOpen); mpFIFO->Push=
Uint32(a); }
-	inline	void	PushUint16	(const uint16				a) { assert(mbOpen); mpFIFO->Push=
Uint16(a); }
-	inline	void	PushUint8	(const uint8				a) { assert(mbOpen); mpFIFO->PushUi=
nt8(a); }
-	=

-	inline	void	PushInt32	(const int32				a) { assert(mbOpen); mpFIFO->PushIn=
t32(a); }
-	inline	void	PushInt16	(const int16				a) { assert(mbOpen); mpFIFO->PushIn=
t16(a); }
-	inline	void	PushInt8	(const int8				a) { assert(mbOpen); mpFIFO->PushInt8=
(a); }
-	=

-	private :
-	bool	mbOpen;
-	cFIFO*	mpFIFO;
-	uint32	miMsgSizeOffset;
-	uint32	miMsgDataOffset;
-};
-
-
-/// sfz-style network message system, not used by iris2
-class cMessageReader { public:
-	uint32 miType;	/// read only
-	uint32 miLen;	/// read only
-			 cMessageReader	()				: mpFIFO(0), mbOpen(false) { }
-			 cMessageReader	(cFIFO* fifo)	: mpFIFO(fifo), mbOpen(false) { }
-	virtual ~cMessageReader ()				{ assert(!mbOpen && "not closed"); }
-	=

-	=

-	inline	void	Open	(cFIFO* fifo) { =

-		assert(!mbOpen && "already open");
-		assert(fifo);
-		mbOpen =3D true;
-		mpFIFO =3D fifo;
-		assert(mpFIFO->HasMsg() && "message incomplete");
-		// warning ! check if the buffer contains a complete message in advance !
-		miType =3D mpFIFO->PopU();
-		miLen =3D mpFIFO->PopU();
-		miDataAfterMsg =3D mpFIFO->size() - miLen;
-	}
-	/// call close after all popping is complete, before any pop operations, =
ensures that the message was completely popped out of the buffer
-	inline	void	Close		() {
-		if (!mbOpen) return;
-		assert(mbOpen && "not open");
-		mbOpen =3D false;
-		CheckSize();
-		if (GetRemainingDataLength() > 0) {
-			printf("cMessageReader: popped too few, Drop(%d)\n",GetRemainingDataLen=
gth());
-			assert(0 && "message not completely popped, dropping rest");
-			DropRest(); // should not happen, drop rest
-		}
-	}
-	inline	bool	HasNext		() { if (mbOpen) Close(); return mpFIFO->HasMsg(); }
-	inline	bool	Next		(cFIFO*	fifo=3D0) { =

-		if (mbOpen) Close(); =

-		if (fifo) mpFIFO =3D fifo;
-		if (!mpFIFO->HasMsg()) return false; =

-		Open(mpFIFO); =

-		return true; =

-	}
-	=

-	=

-	inline	uint32	GetRemainingDataLength	()	{ return mpFIFO->size() - miDataA=
fterMsg; }
-	inline	void	DropRest				()	{ mpFIFO->PopRaw(GetRemainingDataLength()); }
-	inline	void	DropRestAndClose		()	{ DropRest(); Close(); }
-	=

-	/// checks if too much was popped, and even attempts to restore lost data=
, should not happen though...
-	inline	void	CheckSize		() { =

-		if (mpFIFO->size() < miDataAfterMsg) {
-			printf("cMessageReader: popped too much, HackRestore(%d)\n",miDataAfter=
Msg - mpFIFO->size());
-			assert(0 && "message popped too much, attempting to restore...");
-			mpFIFO->HackRestore(miDataAfterMsg - mpFIFO->size()); // should not hap=
pen, try to unpop/undo/restore
-		}
-	}
-	=

-	// pop cluster with byref arguments
-	inline	void	Pop		(int& 				a) { assert(mbOpen); mpFIFO->Pop(a);	CheckSize=
(); }
-	inline	void	PopU	(uint32& 			a) { assert(mbOpen); mpFIFO->PopU(a);	CheckS=
ize(); }
-	inline	void	PopF	(Ogre::Real& 		a) { assert(mbOpen); mpFIFO->PopF(a);	Che=
ckSize(); }
-	inline	void	Pop		(Ogre::Vector3& 	a) { assert(mbOpen); mpFIFO->Pop(a);	Ch=
eckSize(); }
-	inline	void	Pop		(Ogre::Quaternion&	a) { assert(mbOpen); mpFIFO->Pop(a);	=
CheckSize(); }
-	inline	void	Pop		(std::string& 	 	a) { assert(mbOpen); mpFIFO->Pop(a);	Ch=
eckSize(); }
-	inline	void	Pop		(cFIFO&		 	 	a) { assert(mbOpen); mpFIFO->Pop(a);	CheckS=
ize(); }
-	=

-	// pop cluster with return values
-	inline	int					PopI	() { int				x; Pop(x);	return x; }
-	inline	uint32				PopU	() { uint32				x; PopU(x);	return x; }
-	inline	Ogre::Real			PopF	() { Ogre::Real			x; PopF(x);	return x; }
-	inline	Ogre::Vector3		PopV	() { Ogre::Vector3		x; Pop(x);	return x; }
-	inline	Ogre::Quaternion	PopQ	() { Ogre::Quaternion	x; Pop(x);	return x; }
-	inline	std::string			PopS	() { std::string		x; Pop(x);	return x; }
-	=

-	private :
-	bool	mbOpen;
-	cFIFO*	mpFIFO;
-	uint32	miDataAfterMsg;
-};
-
 class 	lua_State;
 void	LuaRegisterFIFO 	(lua_State *L);
 =


Modified: trunk/src/sound_fmod.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/sound_fmod.cpp (original)
+++ trunk/src/sound_fmod.cpp Wed Aug  1 21:16:05 2007
@@ -8,7 +8,7 @@
 =

 void ERRCHECK(FMOD_RESULT result){
 	if (result !=3D FMOD_OK){
-		printf("FMOD error! (%d) %s\n", result, FMOD_ErrorString(result));
+		printf("FMOD error! (%d) %s\n",(int)result, FMOD_ErrorString(result));
 	}
 }
 // #################################################



From no-reply at zwischenwelt.org  Wed Aug  1 21:17:14 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 19:17:14 -0000
Subject: [Iris-commit] [IRIS] r1317 - in /branches/knut/include:
 ColourClipTextOverlay.h data.h fifo.h
Message-ID: <20070801191714.6E658B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 21:17:12 2007
New Revision: 1317

Log:
small fixes to minimize diff

Modified:
    branches/knut/include/ColourClipTextOverlay.h
    branches/knut/include/data.h
    branches/knut/include/fifo.h

Modified: branches/knut/include/ColourClipTextOverlay.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/ColourClipTextOverlay.h (original)
+++ branches/knut/include/ColourClipTextOverlay.h Wed Aug  1 21:17:12 2007
@@ -3,8 +3,7 @@
 #include "ColourClipPaneOverlay.h"
 #include "robrenderable.h"
 #include <OgrePrerequisites.h>
-#include <OgreFont.h>
-#include <OgreUTFString.h>
+#include <OgreFont.h>
 =

 // temporary name
 // see also OgrePanelOverlayElement.cpp
@@ -24,7 +23,7 @@
 	Ogre::ColourValue 	mColourBottom;
 	Ogre::ColourValue 	mColourTop;
 	Ogre::GuiHorizontalAlignment mAlignment;
-
+
 	cColourClipTextOverlay(const Ogre::String& name);
 	virtual ~cColourClipTextOverlay();
 =

@@ -49,15 +48,15 @@
 	// stuff from OgreTextArea...
     void						setCharHeight	(Ogre::Real height );
     void						setSpaceWidth	(Ogre::Real width  );
-    void						setCaption		(const Ogre::UTFString& caption );
+    void						setCaption		(const Ogre::UTFString& caption );
     void						setFontName		(const Ogre::String& font );
 	void						setColour		(const Ogre::ColourValue& col);
 	void						setColourBottom	(const Ogre::ColourValue& col);
 	void						setColourTop	(const Ogre::ColourValue& col);
 =

 	Ogre::Real					getCharHeight	() const;
-	Ogre::Real					getSpaceWidth	() const;
-    const Ogre::UTFString& 		getCaption		() const;
+	Ogre::Real					getSpaceWidth	() const;
+    const Ogre::UTFString& 		getCaption		() const;
     const Ogre::String&			getFontName		() const;
 	const Ogre::ColourValue& 	getColour		() const;
 	const Ogre::ColourValue& 	getColourBottom	() const;

Modified: branches/knut/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/data.h (original)
+++ branches/knut/include/data.h Wed Aug  1 21:17:12 2007
@@ -33,6 +33,7 @@
 // GCC packed attribute
 #define STRUCT_PACKED	__attribute__ ((packed))
 #endif
+
 class FileNotFoundException : public std::runtime_error { public:
 	FileNotFoundException(const std::string& sFilePath) : std::runtime_error(=
"FileNotFoundException : "+sFilePath) { }
 };

Modified: branches/knut/include/fifo.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/include/fifo.h (original)
+++ branches/knut/include/fifo.h Wed Aug  1 21:17:12 2007
@@ -230,7 +230,7 @@
 	=

 	inline	void	PeekNetUint8	(uint8& 		a,const uint32 offset=3D-1) { PeekRawE=
ndian((char*)&a,sizeof(uint8),		offset); }
 	inline	void	PeekNetUint16	(uint16& 		a,const uint32 offset=3D-1) { PeekRa=
wEndian((char*)&a,sizeof(uint16),		offset); a =3D ntohs(a); }
-	inline	void	PeekNetUint32	(uint32& 		a,const uint32 offset=3D-1) { PeekRa=
wEndian((char*)&a,sizeof(uint32),		offset); a =3D ntohs(a); }
+	inline	void	PeekNetUint32	(uint32& 		a,const uint32 offset=3D-1) { PeekRa=
wEndian((char*)&a,sizeof(uint32),		offset); a =3D ntohl(a); }
 =

 	// peek cluster with return values
 	inline	int		PeekI	(const uint32 offset=3D-1) { int		x; Peek(x,offset);	re=
turn x; }
@@ -393,132 +393,6 @@
 =

 =

 =

-/// sfz-style network message system, not used by iris2
-class cMessageWriter { public:
-			 cMessageWriter	()							: mpFIFO(0), mbOpen(false) {  }
-			 cMessageWriter	(cFIFO* fifo,uint32 type)	: mpFIFO(0), mbOpen(false) { =
Open(fifo,type); }
-	virtual ~cMessageWriter ()							{ assert(!mbOpen && "not closed"); }
-	=

-	inline	void	Open	(cFIFO* fifo,uint32 type) { =

-		assert(!mbOpen && "already open");
-		mbOpen =3D true;
-		mpFIFO =3D fifo;
-		mpFIFO->PushU(type);	miMsgSizeOffset =3D mpFIFO->size();
-		mpFIFO->PushU(0);		miMsgDataOffset =3D mpFIFO->size();
-	}
-	/// call close after all pushing is complete, before any pop operations
-	inline	void	Close	() { =

-		if (!mbOpen) return;
-		assert(mbOpen && "not open");
-		mbOpen =3D false;
-		//printf("close cMessageWriter : fifo-size=3D%d dataoff=3D%d datalen=3D%=
d\n",mpFIFO->size(),miMsgDataOffset,mpFIFO->size()-miMsgDataOffset);
-		mpFIFO->HackSetU(miMsgSizeOffset,mpFIFO->size()-miMsgDataOffset);
-	}
-	inline	void	Next	(uint32 type) { if (mbOpen) Close(); Open(mpFIFO,type); }
-	=

-	=

-	inline	void	Push	(const int					a) { assert(mbOpen); mpFIFO->Push(a);	 }
-	inline	void	PushU	(const uint32				a) { assert(mbOpen); mpFIFO->PushU(a);=
 }
-	inline	void	PushF	(const Ogre::Real			a) { assert(mbOpen); mpFIFO->PushF(=
a); }
-	inline	void	Push	(const Ogre::Vector3&		a) { assert(mbOpen); mpFIFO->Push=
(a);	 }
-	inline	void	Push	(const Ogre::Quaternion&	a) { assert(mbOpen); mpFIFO->Pu=
sh(a);  }
-	inline	void	Push	(const std::string& 		a) { assert(mbOpen); mpFIFO->Push(=
a);  }
-	inline	void	Push	(cFIFO&						a) { assert(mbOpen); mpFIFO->Push(a);  }
-	=

-	inline	void	PushUint32	(const uint32				a) { assert(mbOpen); mpFIFO->Push=
Uint32(a); }
-	inline	void	PushUint16	(const uint16				a) { assert(mbOpen); mpFIFO->Push=
Uint16(a); }
-	inline	void	PushUint8	(const uint8				a) { assert(mbOpen); mpFIFO->PushUi=
nt8(a); }
-	=

-	inline	void	PushInt32	(const int32				a) { assert(mbOpen); mpFIFO->PushIn=
t32(a); }
-	inline	void	PushInt16	(const int16				a) { assert(mbOpen); mpFIFO->PushIn=
t16(a); }
-	inline	void	PushInt8	(const int8				a) { assert(mbOpen); mpFIFO->PushInt8=
(a); }
-	=

-	private :
-	bool	mbOpen;
-	cFIFO*	mpFIFO;
-	uint32	miMsgSizeOffset;
-	uint32	miMsgDataOffset;
-};
-
-
-/// sfz-style network message system, not used by iris2
-class cMessageReader { public:
-	uint32 miType;	/// read only
-	uint32 miLen;	/// read only
-			 cMessageReader	()				: mpFIFO(0), mbOpen(false) { }
-			 cMessageReader	(cFIFO* fifo)	: mpFIFO(fifo), mbOpen(false) { }
-	virtual ~cMessageReader ()				{ assert(!mbOpen && "not closed"); }
-	=

-	=

-	inline	void	Open	(cFIFO* fifo) { =

-		assert(!mbOpen && "already open");
-		assert(fifo);
-		mbOpen =3D true;
-		mpFIFO =3D fifo;
-		assert(mpFIFO->HasMsg() && "message incomplete");
-		// warning ! check if the buffer contains a complete message in advance !
-		miType =3D mpFIFO->PopU();
-		miLen =3D mpFIFO->PopU();
-		miDataAfterMsg =3D mpFIFO->size() - miLen;
-	}
-	/// call close after all popping is complete, before any pop operations, =
ensures that the message was completely popped out of the buffer
-	inline	void	Close		() {
-		if (!mbOpen) return;
-		assert(mbOpen && "not open");
-		mbOpen =3D false;
-		CheckSize();
-		if (GetRemainingDataLength() > 0) {
-			printf("cMessageReader: popped too few, Drop(%d)\n",GetRemainingDataLen=
gth());
-			assert(0 && "message not completely popped, dropping rest");
-			DropRest(); // should not happen, drop rest
-		}
-	}
-	inline	bool	HasNext		() { if (mbOpen) Close(); return mpFIFO->HasMsg(); }
-	inline	bool	Next		(cFIFO*	fifo=3D0) { =

-		if (mbOpen) Close(); =

-		if (fifo) mpFIFO =3D fifo;
-		if (!mpFIFO->HasMsg()) return false; =

-		Open(mpFIFO); =

-		return true; =

-	}
-	=

-	=

-	inline	uint32	GetRemainingDataLength	()	{ return mpFIFO->size() - miDataA=
fterMsg; }
-	inline	void	DropRest				()	{ mpFIFO->PopRaw(GetRemainingDataLength()); }
-	inline	void	DropRestAndClose		()	{ DropRest(); Close(); }
-	=

-	/// checks if too much was popped, and even attempts to restore lost data=
, should not happen though...
-	inline	void	CheckSize		() { =

-		if (mpFIFO->size() < miDataAfterMsg) {
-			printf("cMessageReader: popped too much, HackRestore(%d)\n",miDataAfter=
Msg - mpFIFO->size());
-			assert(0 && "message popped too much, attempting to restore...");
-			mpFIFO->HackRestore(miDataAfterMsg - mpFIFO->size()); // should not hap=
pen, try to unpop/undo/restore
-		}
-	}
-	=

-	// pop cluster with byref arguments
-	inline	void	Pop		(int& 				a) { assert(mbOpen); mpFIFO->Pop(a);	CheckSize=
(); }
-	inline	void	PopU	(uint32& 			a) { assert(mbOpen); mpFIFO->PopU(a);	CheckS=
ize(); }
-	inline	void	PopF	(Ogre::Real& 		a) { assert(mbOpen); mpFIFO->PopF(a);	Che=
ckSize(); }
-	inline	void	Pop		(Ogre::Vector3& 	a) { assert(mbOpen); mpFIFO->Pop(a);	Ch=
eckSize(); }
-	inline	void	Pop		(Ogre::Quaternion&	a) { assert(mbOpen); mpFIFO->Pop(a);	=
CheckSize(); }
-	inline	void	Pop		(std::string& 	 	a) { assert(mbOpen); mpFIFO->Pop(a);	Ch=
eckSize(); }
-	inline	void	Pop		(cFIFO&		 	 	a) { assert(mbOpen); mpFIFO->Pop(a);	CheckS=
ize(); }
-	=

-	// pop cluster with return values
-	inline	int					PopI	() { int				x; Pop(x);	return x; }
-	inline	uint32				PopU	() { uint32				x; PopU(x);	return x; }
-	inline	Ogre::Real			PopF	() { Ogre::Real			x; PopF(x);	return x; }
-	inline	Ogre::Vector3		PopV	() { Ogre::Vector3		x; Pop(x);	return x; }
-	inline	Ogre::Quaternion	PopQ	() { Ogre::Quaternion	x; Pop(x);	return x; }
-	inline	std::string			PopS	() { std::string		x; Pop(x);	return x; }
-	=

-	private :
-	bool	mbOpen;
-	cFIFO*	mpFIFO;
-	uint32	miDataAfterMsg;
-};
-
 class 	lua_State;
 void	LuaRegisterFIFO 	(lua_State *L);
 =




From no-reply at zwischenwelt.org  Wed Aug  1 21:29:31 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 19:29:31 -0000
Subject: [Iris-commit] [IRIS] r1318 - in /branches/knut/src: profile.cpp
	sound_fmod.cpp
Message-ID: <20070801192931.8D855B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 21:29:30 2007
New Revision: 1318

Log:
committing minor changes

Modified:
    branches/knut/src/profile.cpp
    branches/knut/src/sound_fmod.cpp

Modified: branches/knut/src/profile.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/profile.cpp (original)
+++ branches/knut/src/profile.cpp Wed Aug  1 21:29:30 2007
@@ -56,26 +56,26 @@
 			gHistory.reserve(1024*1024*32);
 		#endif
 		gDoInit =3D false;
-	}
-	gCallStack.push_back((unsigned int)sFile);
-	gCallStack.push_back((unsigned int)iLine);
-	gCallStack.push_back((unsigned int)sFunc);
-	#ifdef PROFILE_CALLTIME
-		gCallStack.push_back(GET_TIMESTAMP);
+	}
+	gCallStack.push_back((unsigned int)sFile);
+	gCallStack.push_back((unsigned int)iLine);
+	gCallStack.push_back((unsigned int)sFunc);
+	#ifdef PROFILE_CALLTIME
+		gCallStack.push_back(GET_TIMESTAMP);
 	#endif
 	#ifdef MEGALOGPATH
 		FILE* fp =3D fopen(MEGALOGPATH,"a");
 		int i =3D gCallStack.size()-CALLSTACK_ELEM_SIZE;
 		for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) fprintf(fp," ");
-		fprintf(fp,"START %s:%d:%s\n",(const char*) gCallStack[i],
-								(unsigned int)gCallStack[i+1],
+		fprintf(fp,"START %s:%d:%s\n",(const char*) gCallStack[i],
+								(unsigned int)gCallStack[i+1],
 								(const char*) gCallStack[i+2]);
 		fclose(fp);
 	#endif
 	#ifdef PROFILE_CALLCOUNT
 		++gmCallCountProfileMap[cCallCountProfileIndex(sFile,iLine,sFunc)];
-	#endif
-	gCallStackCopy.assign(gCallStack.begin(),gCallStack.end()); // TODO : kil=
lme, dirty hack
+	#endif
+	//gCallStackCopy.assign(gCallStack.begin(),gCallStack.end()); // TODO : k=
illme, dirty hack
 }
 =

 cProfiler::~cProfiler() {
@@ -83,44 +83,47 @@
 		FILE* fp =3D fopen(MEGALOGPATH,"a");
 		int i =3D gCallStack.size()-CALLSTACK_ELEM_SIZE;
 		for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) fprintf(fp," ");
-		fprintf(fp,"END   %s:%d:%s\n",(const char*) gCallStack[i],
-									(unsigned int)gCallStack[i+1],
+		fprintf(fp,"END   %s:%d:%s\n",(const char*) gCallStack[i],
+									(unsigned int)gCallStack[i+1],
 									(const char*) gCallStack[i+2]);
 		fclose(fp);
 	#endif
-	#ifdef KEEP_HISTORY =

-		gHistory.push_back(gCallStack[0+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
-		gHistory.push_back(gCallStack[1+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
+	#ifdef KEEP_HISTORY =

+		gHistory.push_back(gCallStack[0+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
+		gHistory.push_back(gCallStack[1+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
 		gHistory.push_back(gCallStack[2+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
 		#ifdef PROFILE_CALLTIME
-			gHistory.push_back(GET_TIMESTAMP - gCallStack.back());
-		#endif
-	#endif
-	gCallStack.pop_back();
-	gCallStack.pop_back();
-	gCallStack.pop_back();
-	#ifdef PROFILE_CALLTIME
-		gCallStack.pop_back();
+			gHistory.push_back(GET_TIMESTAMP - gCallStack.back());
+		#endif
+	#endif
+	gCallStack.pop_back();
+	gCallStack.pop_back();
+	gCallStack.pop_back();
+	#ifdef PROFILE_CALLTIME
+		gCallStack.pop_back();
 	#endif
 }
 =

+#define PRINTEDSTACK gCallStack
+//#define PRINTEDSTACK gCallStackCopy
+
 void		cProfiler::PrintStackTrace	() {
-	for (int i=3D0;i<gCallStackCopy.size();i+=3DCALLSTACK_ELEM_SIZE) {
+	for (int i=3D0;i<PRINTEDSTACK.size();i+=3DCALLSTACK_ELEM_SIZE) {
 		for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) printf(" ");
-		printf("%s:%d:%s\n",(const char*) gCallStackCopy[i],
-							(unsigned int)gCallStackCopy[i+1],
-							(const char*) gCallStackCopy[i+2]);
+		printf("%s:%d:%s\n",(const char*) PRINTEDSTACK[i],
+							(unsigned int)PRINTEDSTACK[i+1],
+							(const char*) PRINTEDSTACK[i+2]);
 	}
 }
 =

 void		cProfiler::PrintStackTrace	(const char *filename) {
 	FILE *f =3D fopen(filename,"a");
 	if(f){
-		for (int i=3D0;i<gCallStackCopy.size();i+=3DCALLSTACK_ELEM_SIZE) {
+		for (int i=3D0;i<PRINTEDSTACK.size();i+=3DCALLSTACK_ELEM_SIZE) {
 			for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) fprintf(f," ");
-			fprintf(f,"%s:%d:%s\n",(const char*) gCallStackCopy[i],
-								(unsigned int)gCallStackCopy[i+1],
-								(const char*) gCallStackCopy[i+2]);
+			fprintf(f,"%s:%d:%s\n",(const char*) PRINTEDSTACK[i],
+								(unsigned int)PRINTEDSTACK[i+1],
+								(const char*) PRINTEDSTACK[i+2]);
 		}
 		fclose(f);
 	}

Modified: branches/knut/src/sound_fmod.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/sound_fmod.cpp (original)
+++ branches/knut/src/sound_fmod.cpp Wed Aug  1 21:29:30 2007
@@ -8,7 +8,7 @@
 =

 void ERRCHECK(FMOD_RESULT result){
 	if (result !=3D FMOD_OK){
-		printf("FMOD error! (%d) %s\n", result, FMOD_ErrorString(result));
+		printf("FMOD error! (%d) %s\n",(int)result, FMOD_ErrorString(result));
 	}
 }
 // #################################################



From no-reply at zwischenwelt.org  Wed Aug  1 22:35:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 20:35:16 -0000
Subject: [Iris-commit] [IRIS] r1320 - in /trunk/data/lua: gui.container.lua
 gui/ gui/gui.paperdoll.lua net.container.lua net.mobile.lua net.objects.lua
 net.paperdoll.lua net.player.lua net/ net/net.object.lua obj.mobile.lua
 obj/ obj/obj.player.lua
Message-ID: <20070801203517.636EDB140B4@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 22:35:15 2007
New Revision: 1320

Log:
adapting file structure of knut

Added:
    trunk/data/lua/gui/
    trunk/data/lua/gui.container.lua
      - copied unchanged from r1313, trunk/data/lua/net.container.lua
    trunk/data/lua/gui/gui.paperdoll.lua
      - copied unchanged from r1313, trunk/data/lua/net.paperdoll.lua
    trunk/data/lua/net/
    trunk/data/lua/net/net.object.lua
      - copied unchanged from r1313, trunk/data/lua/net.objects.lua
    trunk/data/lua/obj/
    trunk/data/lua/obj.mobile.lua
      - copied unchanged from r1313, trunk/data/lua/net.mobile.lua
    trunk/data/lua/obj/obj.player.lua
      - copied unchanged from r1313, trunk/data/lua/net.player.lua
Removed:
    trunk/data/lua/net.container.lua
    trunk/data/lua/net.mobile.lua
    trunk/data/lua/net.objects.lua
    trunk/data/lua/net.paperdoll.lua
    trunk/data/lua/net.player.lua



From no-reply at zwischenwelt.org  Wed Aug  1 22:43:14 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 20:43:14 -0000
Subject: [Iris-commit] [IRIS] r1321 - in /trunk/data/lua: gui.container.lua
 gui/gui.container.lua gui/gui.main.lua lib.protocol.lua main.lua
 net/net.main.lua obj.mobile.lua obj/obj.main.lua obj/obj.mobile.lua
Message-ID: <20070801204314.A4234B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 22:43:13 2007
New Revision: 1321

Log:
adapting file/dir structure of knut

Added:
    trunk/data/lua/gui/gui.container.lua
      - copied unchanged from r1320, trunk/data/lua/gui.container.lua
    trunk/data/lua/gui/gui.main.lua
    trunk/data/lua/net/net.main.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua
      - copied unchanged from r1320, trunk/data/lua/obj.mobile.lua
Removed:
    trunk/data/lua/gui.container.lua
    trunk/data/lua/obj.mobile.lua
Modified:
    trunk/data/lua/lib.protocol.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.protocol.lua (original)
+++ trunk/data/lua/lib.protocol.lua Wed Aug  1 22:43:13 2007
@@ -33,14 +33,9 @@
 	=

 -- register packet handlers
 	gPacketHandler =3D {}
-	dofile(libpath .. "net.container.lua")
 	dofile(libpath .. "net.cursor.lua")
 	dofile(libpath .. "net.login.lua")
-	dofile(libpath .. "net.mobile.lua")
-	dofile(libpath .. "net.objects.lua")
 	dofile(libpath .. "net.other.lua")
-	dofile(libpath .. "net.paperdoll.lua")
-	dofile(libpath .. "net.player.lua")
 	dofile(libpath .. "net.popup.lua")
 	dofile(libpath .. "net.skill.lua")
 	dofile(libpath .. "net.sound.lua")

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Wed Aug  1 22:43:13 2007
@@ -78,6 +78,9 @@
 dofile(libpath .. "lib.devtool.lua")
 dofile(libpath .. "lib.3d.mobileanim.lua")
 dofile(libpath .. "lib.mount.lua")
+dofile(libpath .. "gui/gui.main.lua")
+dofile(libpath .. "obj/obj.main.lua")
+dofile(libpath .. "net/net.main.lua")
 dofile(libpath .. "lib.corpse.lua")
 =

 dofile(libpath .. "filter.art.lua")



From no-reply at zwischenwelt.org  Thu Aug  2 00:05:47 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 22:05:47 -0000
Subject: [Iris-commit] [IRIS] r1322 - in /trunk/data/lua: ./ gui/ net/ obj/
Message-ID: <20070801220554.818A41058006@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 00:05:30 2007
New Revision: 1322

Log:
moving code and files around in preperation for merge

Added:
    trunk/data/lua/net/net.dynamic.lua
    trunk/data/lua/net/net.effect.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/net/net.multi.lua
      - copied unchanged from r1313, trunk/data/lua/net.customhouse.lua
    trunk/data/lua/net/net.packethandlers.lua
    trunk/data/lua/net/net.uodragdrop.lua
    trunk/data/lua/obj/obj.dynamic.lua
Removed:
    trunk/data/lua/net.customhouse.lua
Modified:
    trunk/data/lua/gui/gui.container.lua
    trunk/data/lua/gui/gui.paperdoll.lua
    trunk/data/lua/lib.packet.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net.uodragdrop.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.main.lua
    trunk/data/lua/net/net.object.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua

Modified: trunk/data/lua/gui/gui.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.container.lua (original)
+++ trunk/data/lua/gui/gui.container.lua Thu Aug  2 00:05:30 2007
@@ -37,80 +37,6 @@
 		container.dialog =3D nil
 	end
 	gContainer[serial] =3D nil
-end
-
--- create and/or show graphical representation of container
-function gPacketHandler.kPacket_Open_Container() -- 0x24
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local container_serial =3D input:PopNetUint32()
-	local container_gumpid =3D input:PopNetUint16()
-	=

-	print("# kPacket_Open_Container",container_serial,container_gumpid)
-	=

-	local container =3D GetOrCreateContainer(container_serial)
-	container.gumpid =3D container_gumpid
-
-	--Ignore Shop container - created somewhere else
-	if (container.gumpid =3D=3D kGumpIDShopContainer) then
-		AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",container_serial))
-	--Old_Spellbook Container (Pol,Sphere,Lonewolf,RunUO1 etc.)
-	elseif ((container.gumpid =3D=3D kGumpIDSpellbookContainer) and not(conta=
iner.dialog)) then
-		local spellbook =3D {}
-		spellbook.old=3Dtrue
-		spellbook.serial =3D container_serial
-		spellbook.itemid =3D container_gumpid
-		spellbook.scrolloffset =3D 0
-		spellbook.matrix =3D {}
-		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
-		-- container with spell is already created (invisible)
-		Open_Spellbook(spellbook)
-		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)
-	else
-		-- 0x003c =3D backpack
-		-- 0x0030 =3D shopcontainer
-		--AddFadeLines(sprintf("Open_Container gumpid=3D%d",container.gumpid))
-		if (not container.dialog) then
-			-- create dialog from scratch
-			local dialog =3D guimaker.MakeSortedDialog()
-			container.dialog =3D dialog
-			dialog.uoContainer =3D container
-			dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
-			dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gump=
id,0,0)
-			dialog.backpane.mbIgnoreMouseOver =3D false
-			dialog.backpane.onMouseDown =3D function (widget,mousebutton)
-											if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoC=
ontainer.serial) end
-											if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui=
.StartMoveDialog(widget.dialog.rootwidget) end
-										  end
-		end
-		RefreshContainerItemWidgets(container)
-	end
-	SecureTradeRebuildContainerHook(container)
-end
-
--- pol sends this after kPacket_Open_Container, runuo before, see also kPa=
cket_Object_to_Object
-function gPacketHandler.kPacket_Container_Contents() -- 0x3c
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local size =3D input:PopNetUint16()
-	local itemcount =3D input:PopNetUint16()
-	for i=3D1,itemcount do
-		local item =3D {}
-		item.serial =3D input:PopNetUint32()
-		item.artid =3D input:PopNetUint16()
-		item.artid_addstack =3D input:PopNetUint8()	--unknown1 (alyways 0x00) !?
-		item.amount =3D input:PopNetUint16()
-		item.xloc =3D input:PopNetInt16()
-		item.yloc =3D input:PopNetInt16()
-		--print("kPacket_Container_Contents",item.xloc,item.yloc)
-		item.iContainerSerial =3D input:PopNetUint32()
-		item.hue =3D input:PopNetUint16()
-
-		ApplyArtidStackManipulation(item)
-		RefreshContainerItem(item)
-		--printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_s=
tack=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,=
item.artid_addstack,item.amount)
-		--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticT=
ileTypeName(item.artid)))
-	end
 end
 =

 -- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
@@ -155,27 +81,6 @@
 =

 	-- just for testing, remove me
 	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
-end
-
--- This is sent by the server to add/update a single item to a container. =
(response to player dragdrop)
-function gPacketHandler.kPacket_Object_to_Object() -- 0x25
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local item =3D {}
-	item.serial =3D input:PopNetUint32()
-	item.artid =3D input:PopNetUint16()
-	item.artid_addstack =3D input:PopNetUint8()
-	item.amount =3D input:PopNetUint16()
-	item.xloc =3D input:PopNetInt16()
-	item.yloc =3D input:PopNetInt16()
-	--print("kPacket_Object_to_Object",item.xloc,item.yloc)
-	item.iContainerSerial =3D input:PopNetUint32()
-	item.hue =3D input:PopNetUint16()
-	printdebug("net",sprintf("NET : kPacket_Object_to_Object : container=3D0x=
%08x item=3D0x%08x artid=3D0x%04x amount=3D%d\n",
-				item.iContainerSerial,item.serial,item.artid,item.amount))
-
-	ApplyArtidStackManipulation(item)
-	RefreshContainerItem(item)
 end
 =

 -- creates if necessary

Modified: trunk/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.paperdoll.lua (original)
+++ trunk/data/lua/gui/gui.paperdoll.lua Thu Aug  2 00:05:30 2007
@@ -279,27 +279,6 @@
 	end
 end
 =

-function gPacketHandler.kPacket_Open_Paperdoll() -- 0x88
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local paperdoll =3D {}
-	paperdoll.mobileserial =3D input:PopNetUint32()
-	paperdoll.name =3D input:PopFilledString(60)
-	paperdoll.flag =3D input:PopNetUint8()
-	paperdoll.Close =3D ClosePaperdoll
-	=

-	-- close old paperdoll
-	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
-	if (oldpaperdoll) then oldpaperdoll:Close() end =

-	=

-	-- register paperdoll
-	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
-	=

-	--AddFadeLines("Open Paperdoll for ["..(paperdoll.mobileserial).."] "..(p=
aperdoll.name or ""))
-	=

-	RebuildPaperdoll(paperdoll)
-end
-
 --Send Quest, Guild Button req. to Server -> Server returns a Serverside G=
ump
 function Send_AOSCommand(subcmd,player_serial)
 	print("NET: Send_AOSCommand: "..subcmd.." Player_Serial=3D"..player_seria=
l)

Modified: trunk/data/lua/lib.packet.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.packet.lua (original)
+++ trunk/data/lua/lib.packet.lua Thu Aug  2 00:05:30 2007
@@ -118,7 +118,7 @@
 =

 gPacketType.kPacket_Effect											=3D { id=3Dhex2num("0x70") }
 gPacketType.kPacket_Bulletin_Board									=3D { id=3Dhex2num("0x71") }
-gPacketType.kPacket_Combat											=3D { id=3Dhex2num("0x72") }
+gPacketType.kPacket_SetPlayerWarmode								=3D { id=3Dhex2num("0x72") }
 gPacketType.kPacket_Ping											=3D { id=3Dhex2num("0x73") }
 gPacketType.kPacket_Shop_Data										=3D { id=3Dhex2num("0x74") }
 gPacketType.kPacket_Rename_MOB										=3D { id=3Dhex2num("0x75") }
@@ -170,7 +170,7 @@
 gPacketType.kPacket_Server_Select									=3D { id=3Dhex2num("0xA0") }
 gPacketType.kPacket_HP_Health										=3D { id=3Dhex2num("0xA1") }
 gPacketType.kPacket_Mana_Health										=3D { id=3Dhex2num("0xA2") }
-gPacketType.kPacket_Fat_Health										=3D { id=3Dhex2num("0xA3") }
+gPacketType.kPacket_Stamina											=3D { id=3Dhex2num("0xA3") }
 gPacketType.kPacket_Hardware_Info									=3D { id=3Dhex2num("0xA4") }
 gPacketType.kPacket_Web_Browser										=3D { id=3Dhex2num("0xA5") }
 gPacketType.kPacket_Message											=3D { id=3Dhex2num("0xA6") }	--Tips/=
Notice window

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Thu Aug  2 00:05:30 2007
@@ -610,30 +610,10 @@
 	out:SendPacket()
 end
 =

--- Request WarMode Change/Send War Mode Status
-function gPacketHandler.kPacket_Combat()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local flag =3D input:PopNetUint8()
-	local unknown1 =3D input:PopNetUint8()
-	local unknown2 =3D input:PopNetUint16()
-	if (flag =3D=3D gWarmode_Normal) then
-		gActWarmode=3DgWarmode_Normal
-		AddFadeLines("Be the peace with you!")
-		--printf("NET: kPacket_Combat id: 0x%02x gWarmode: normal\n",id)
-	end
-	if (flag =3D=3D gWarmode_Combat) then
-		gActWarmode=3DgWarmode_Combat
-		AddFadeLines("You go into War!")
-		--printf("NET: kPacket_Combat id: 0x%02x gWarmode: combat\n",id)
-	end
-	gui.SetWarmode(gActWarmode)
-end
-
--- send combat request to server, triggers kPacket_Combat
+-- send combat request to server, triggers kPacket_SetPlayerWarmode
 function Send_CombatMode(iWarMode)
 	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Combat)
+	out:PushNetUint8(kPacket_SetPlayerWarmode)
 	out:PushNetUint8(iWarMode)
 	out:PushNetUint16(hex2num("0x0032"))
 	out:PushNetUint8(hex2num("0x00"))

Modified: trunk/data/lua/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.uodragdrop.lua (original)
+++ trunk/data/lua/net.uodragdrop.lua Thu Aug  2 00:05:30 2007
@@ -54,82 +54,6 @@
 gDragStartDist =3D 5 -- in pixels
 gSquareDragStartDist =3D gDragStartDist * gDragStartDist
 =

-
--- Equip Item Request   (answer is 0x2E, see also 0x78). 0x13
-function Send_Equip_Item_Request(serial,layer,player_serial)
-	print("NET: Send_Equip_Item_Request:",sprintf("0x%08x",serial),layer,play=
er_serial)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Equip_Item_Request)
-	out:PushNetUint32(serial)
-	out:PushNetUint8(layer)
-	out:PushNetUint32(player_serial)
-	out:SendPacket()
-end
-
--- This is sent by the client when the player picks up an item. 0x07
-function Send_Take_Object(serial,amount)
-	print("NET: Send_Take_Object:",sprintf("0x%08x",serial),serial,amount)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Take_Object)
-	out:PushNetUint32(serial)
-	out:PushNetUint16(amount or 1)
-	out:SendPacket()
-end
-
--- This is sent by the client when the player drops an item. 0x08
--- containerid =3D 0xFFFFFFFF  when the container is the ground
-function Send_Drop_Object(serial,x,y,z,containerid)
-	print("NET: Send_Drop_Object:",sprintf("0x%08x",serial),x,y,z,containerid)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Drop_Object)
-	out:PushNetUint32(serial)
-	out:PushNetUint16(x)
-	out:PushNetUint16(y)
-	out:PushInt8(z) -- SIGNED !!
-	out:PushNetUint32(containerid)
-	out:SendPacket()
-end
- =

--- This is sent to deny the player's request to get an item. (servers resp=
onse to 0x07)
-function gPacketHandler.kPacket_Get_Item_Failed() -- 0x27
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local reason =3D input:PopNetUint8()
-	local reasontxt =3D "unknown_Get_Item_Failed"
-	if (reason =3D=3D hex2num("0x00")) then reasontxt =3D "You cannot pick th=
at up." end
-	if (reason =3D=3D hex2num("0x01")) then reasontxt =3D "That is too far aw=
ay." end
-	if (reason =3D=3D hex2num("0x02")) then reasontxt =3D "That is out of sig=
ht." end
-	if (reason =3D=3D hex2num("0x03")) then reasontxt =3D "That item does not=
 belong to you. You will have to steal it." end
-	if (reason =3D=3D hex2num("0x04")) then reasontxt =3D "You are already ho=
lding an item." end
-	if (reason =3D=3D hex2num("0x05")) then =

-		reasontxt =3D "The item was destroyed."  -- TODO : no message ??
-		-- TODO : Destroy the item.
-	end
-	if (reason =3D=3D hex2num("0x06")) then -- No message.
-		reasontxt =3D false
-	end
-	print("NET : Get_Item_Failed",reasontxt)
-	CleanUpUODragDrop() -- server side cancel
-end
-
--- Clear Square or Drop Failed ? (servers response to 0x08 ?)
-function gPacketHandler.kPacket_Drop_Item_Failed() -- 0x28
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local xloc =3D input:PopNetUint16()
-	local yloc =3D input:PopNetUint16()
-	-- TODO ?
-	print("NET : Drop_Item_Failed")
-end
-
--- Drop Item OK ? Paperdoll Clothing Added ? (servers response to 0x08 ?)
-function gPacketHandler.kPacket_Drop_Item_OK() -- 0x29
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	-- TODO ?
-	print("NET : Drop_Item_OK")
-end
- =

 gDragDrop =3D false
 =

 function PrepareDragPaperdollItem (item) =


Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Thu Aug  2 00:05:30 2007
@@ -615,69 +615,6 @@
 	out:SendPacket()
 end
 =

--- 0x20 Teleport packet (also known as ProtocolRecv_Draw_Player)
--- Note: Only used with the character being played by the client. =

--- TODO : center cam on player etc. , check z_location on the ground
-function gPacketHandler.kPacket_Teleport()
-	gLastResyncRequest =3D nil
-	--ResetWalkQueue()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local player_id =3D input:PopNetUint32()
-	local player_bodytype =3D input:PopNetUint16()
-	local unknown1 =3D input:PopNetUint8()
-	local player_skin_hue =3D input:PopNetUint16()
-	local player_status =3D input:PopNetUint8()
-	local player_xloc =3D input:PopNetUint16()
-	local player_yloc =3D input:PopNetUint16()
-	local unknown2 =3D input:PopNetUint16()
-	local player_dir =3D input:PopNetUint8()
-	local player_zloc =3D input:PopInt8()
-	=

-	local bPlayerRunning =3D BitwiseAND(player_dir,kWalkFlag_Run) ~=3D 0
-	local fullplayerdir =3D player_dir
-	player_dir =3D BitwiseAND(player_dir,hex2num("0x07"))
-	=

-	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
-
-	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XLoc: =
%i YLoc: %i ZLoc: %i Dir: [%s]\n",
-			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gPlaye=
rDir or 0] or ""))
-	=

-	-- TODO : (Check if char is in Boat!)
-
-	printdebug("login",sprintf("NET: Draw_Player: id: %i player_id: %i body: =
%i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
-			id, player_id, player_bodytype, player_xloc, player_yloc, player_zloc, =
fullplayerdir, gDirection[player_dir] or ""))
-
-	-- Check if Player is already on Teleported Pos
-	if (gPlayerXLoc ~=3D player_xloc or gPlayerYLoc ~=3D player_yloc or
-		gPlayerZLoc ~=3D player_zloc or gPlayerDir ~=3D player_dir) then
-		SetPlayerPos(player_xloc,player_yloc,player_zloc,fullplayerdir)
-		print("Player is teleported.")
-	else
-		print("Player not teleported, because already on the same pos+dir!")
-	end
-
-	UpdatePlayerBodySerial(player_id)
-	local playerMobile=3DGetPlayerMobile()
-	if (playerMobile) then
-		if (playerMobile.artid ~=3D player_bodytype) then
-			print("Change PC Bodytype=3D"..player_bodytype)
-			playerMobile.artid=3Dplayer_bodytype
-
-			-- currently only for human (not elfs)
-			if ( (playerMobile.artid=3D=3D402) or (playerMobile.artid=3D=3D403) or
-				 (playerMobile.artid=3D=3D607) or (playerMobile.artid=3D=3D608) or
-				 (playerMobile.artid=3D=3D970)) then
-				print("TODO : pc character is now ghost. new bodymodel=3D"..player_bod=
ytype)
-			end
-
-			gCurrentRenderer:UpdateMobile( playerMobile )
-		end
-	end
-
-	ResetWalkQueue() -- todo : (here or only if setplayerpos is done?)
-end
-
 -- Moves Player to Direction
 -- This packet works with the latest clients, but is never used by the ser=
ver.
 -- TODO : Move Player
@@ -736,7 +673,7 @@
 MaxZClimb =3D 20;
 MaxZFall =3D 20;
 =

-received lots of kPacket_Fat_Health 0xA3 : update stamina
+received lots of kPacket_Stamina 0xA3 : update stamina
 BYTE cmd
 BYTE[4] playerID
 BYTE[2] maxStamina

Modified: trunk/data/lua/net/net.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.main.lua (original)
+++ trunk/data/lua/net/net.main.lua Thu Aug  2 00:05:30 2007
@@ -1,6 +1,9 @@
---~ dofile(libpath .. "net/net.mobile.lua")
---~ dofile(libpath .. "net/net.dynamic.lua")
+dofile(libpath .. "net/net.mobile.lua")
+dofile(libpath .. "net/net.dynamic.lua")
 dofile(libpath .. "net/net.object.lua")
---~ dofile(libpath .. "net/net.effect.lua")
---~ dofile(libpath .. "net/net.multi.lua")
---~ dofile(libpath .. "net/net.uodragdrop.lua")
+dofile(libpath .. "net/net.effect.lua")
+dofile(libpath .. "net/net.multi.lua")
+dofile(libpath .. "net/net.uodragdrop.lua")
+
+-- only things that have at least 2 packets get its own file, everything e=
lse is handled here:
+dofile(libpath .. "net/net.packethandlers.lua")

Modified: trunk/data/lua/net/net.object.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.object.lua (original)
+++ trunk/data/lua/net/net.object.lua Thu Aug  2 00:05:30 2007
@@ -76,148 +76,3 @@
 	-- TODO : gCurrentRenderer:DestroyMousePickItemBySerial(serial)
 	-- TODO : DestroyDragDropItemBySerial ?? done by CancelUODragDrop
 end
-
--- Dynamics/Object Information (Variable # of bytes)
--- (recieved when item first appears on char visualrange on the ground)
---			// 14 base length
---			// +2 - Amount
---			// +2 - Hue
---			// +1 - Flags
--- TODO : here Tooltip request   0x1A  (old iris:PCK_Put)
---[[
-Packet [1a], Length: 17, Type: Server
-1a 00 11 c0 02 9d aa 00 00 00 01 15 44 44 88 9c =

-80
-]]--
-function gPacketHandler.kPacket_Show_Item()
-	local newitem =3D {}
-	local input =3D GetRecvFIFO()
-	local popped_start =3D input:GetTotalPopped()
-	local id =3D input:PopNetUint8()
-	=

-	local iPacketSize =3D input:PopNetUint16()
-	newitem.serial =3D input:PopNetUint32() -- id =3D serial . Include the fl=
ag 0x80000000 if the item's amount is greater than one.
-	newitem.artid =3D input:PopNetUint16() -- model =3D artwork . Include the=
 flag 0x8000 if the item's stackid is greater than zero.	=

-	=

-	-- newitem.amount  (or model # for corpses)
-	if ( BitwiseAND(newitem.serial,hex2num("0x80000000")) ~=3D 0) then =

-			newitem.amount =3D input:PopNetUint16() =

-	else 	newitem.amount =3D 1 end
-	=

-	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
-	=

-	-- newitem.artid_addstack : The number to add to the item's artwork when =
Amount > 1.
-	if ( BitwiseAND(newitem.artid,hex2num("0x8000")) ~=3D 0) then =

-			newitem.artid_addstack =3D input:PopNetUint8() =

-	else	newitem.artid_addstack =3D 0 end
-
-	newitem.xloc =3D input:PopNetUint16() --only use lowest significant 15 bi=
ts)
-	newitem.yloc =3D input:PopNetUint16()
-
-	if ( BitwiseAND(newitem.xloc,hex2num("0x8000")) ~=3D 0) then
-			newitem.dir =3D input:PopNetUint8()
-	else	newitem.dir =3D 0 end
-
-	newitem.zloc =3D input:PopInt8()
-
-	newitem.hue =3D 0
-	newitem.flag =3D 0
-	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then newitem.hue =
=3D input:PopNetUint16() end
-	end
-	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then newitem.flag=
 =3D input:PopNetUint8() end
-	end
-	-- item_flag : some kind of status or flags, usage unknown
-	=

-	newitem.serial	=3D BitwiseAND(newitem.serial,hex2num("0x7fffffff"))
-	newitem.artid	=3D BitwiseAND(newitem.artid,hex2num("0x7fff"))
-	newitem.xloc	=3D BitwiseAND(newitem.xloc,hex2num("0x7fff"))
-	newitem.yloc	=3D BitwiseAND(newitem.yloc,hex2num("0x3fff"))
-	if (newitem.amount > 1) then newitem.artid =3D newitem.artid + newitem.ar=
tid_addstack end
-	=

-	=

-	-- TODO : corpse is spawned
-	if (newitem.artid =3D=3D hex2num("0x2006")) then
-		print("TODO: char died. sethue,setdirection,setascorpse")
-	end
-
-	-- TODO : if (newitem.artid >=3D gMulti_ID +100) .. model is multi
-	-- gMulti_ID =3D hex2num("0x4000")
-	-- TODO : check newitem.artid for boat
-	=

-	if (gTileTypeLoader) then
-		local miFlags,miWeight,miQuality,miUnknown,miUnknown1,miQuantity,miAnimI=
D,miUnknown2,miHue,miUnknown3,miHeight,msName =3D gTileTypeLoader:GetStatic=
TileType(newitem.artid+32*512) -- add 0x00004000
-		newitem.z_typename =3D msName
-	end
-	=

-	printdebug("mobile","ShowItem "..vardump(newitem))
-	=

-	newitem.isdynamic =3D true -- needed to identify the dynamic in 2d render=
er
-	=

-	local bCreateNew =3D true
-	=

-	local olditem =3D gDynamics[newitem.serial]
-	if (olditem) then
-		-- if only the position changed we can just update the old one
-		if (	newitem.artid =3D=3D olditem.artid and =

-				newitem.amount =3D=3D olditem.amount and =

-				newitem.flag =3D=3D olditem.flag and =

-				newitem.hue =3D=3D olditem.hue and =

-				newitem.dir =3D=3D olditem.dir and =

-				newitem.artid_addstack =3D=3D olditem.artid_addstack ) then
-			-- update old item
-			bCreateNew =3D false
-			olditem.xloc =3D newitem.xloc
-			olditem.yloc =3D newitem.yloc
-			olditem.zloc =3D newitem.zloc
-			newitem =3D olditem
-		else
-			gCurrentRenderer:RemoveDynamicItem( olditem )
-		end
-	end
-	=

-	if (bCreateNew) then gCurrentRenderer:AddDynamicItem( newitem ) end
-	=

-	gCurrentRenderer:UpdateDynamicItemPos(newitem)
-	gDynamics[newitem.serial] =3D newitem	=

-end
-
--- Graphical Effect (Hued Art-Gfx / see Tiledata for Animation) - Billboar=
d or 3d Statics?
--- TODO : organize HUED_FX
-function gPacketHandler.kPacket_Hued_FX()	--0xC0
-	local effect =3D {}
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	effect.effect_type =3D input:PopNetUint8()
-	effect.sourceserial =3D input:PopNetUint32()
-	effect.targetserial =3D input:PopNetUint32()
-	effect.itemid =3D input:PopNetUint16()
-	=

-	effect.source_locx =3D input:PopNetUint16()
-	effect.source_locy =3D input:PopNetUint16()
-	effect.source_locz =3D input:PopNetUint8()
-	=

-	effect.target_locx =3D input:PopNetUint16()
-	effect.target_locy =3D input:PopNetUint16()
-	effect.target_locz =3D input:PopNetUint8()
-
-	effect.current_locx =3D effect.source_locx
-	effect.current_locy =3D effect.source_locy
-	effect.current_locz =3D effect.source_locz
-
-	effect.speed =3D input:PopNetUint8()
-	effect.duration =3D input:PopNetUint8()
-	effect.unkown =3D input:PopNetUint16()
-	effect.fixeddirection =3D input:PopNetUint8()
-	effect.explodes =3D input:PopNetUint8()
-	effect.hue =3D input:PopNetUint32()
-	effect.rendermode =3D input:PopNetUint32()
-	effect.iseffect =3D true
-	=

-	printf("NET: Hued_FX: artid=3D0x%04x locx=3D%i locy=3D%i locz=3D%i target=
x=3D%i targety=3D%i targetz=3D%i effect_type=3D%s\n",
-			effect.itemid, effect.source_locx, effect.source_locy, effect.source_lo=
cz,
-			effect.target_locx, effect.target_locy, effect.target_locz, gEffectType=
s[effect.effect_type] or "")
-	=

-	if (gParticleEffectSystem) then gCurrentRenderer:AddEffect( effect ) end
-end

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Thu Aug  2 00:05:30 2007
@@ -1,3 +1,3 @@
 dofile(libpath .. "obj/obj.mobile.lua")
---dofile(libpath .. "obj/obj.dynamic.lua")
+dofile(libpath .. "obj/obj.dynamic.lua")
 dofile(libpath .. "obj/obj.player.lua")

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Thu Aug  2 00:05:30 2007
@@ -122,377 +122,6 @@
 	gCurrentRenderer:UpdateMobile( mobile )
 end
 =

--- Character Animation
-function gPacketHandler.kPacket_Animation ()	-- [0x6e] 14 Bytes
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local anim =3D {}
-	anim.mobileserial	=3D input:PopNetUint32()	=

-	anim.m_animation		=3D input:PopNetUint16()
-	anim.m_framecount	=3D input:PopNetUint16()
-	anim.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D twic=
e / 0 =3D repeat forever)
-	anim.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3Dback=
wards)
-	anim.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repeat)
-	anim.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - Too =
slow to watch)
-	printdebug("animation","Animation "..vardump2(anim))
-	gCurrentRenderer:MobileStartServerSideAnim(anim)
-end
-
--- simple mobile, no equipment, fixed size packet 0x77
-function gPacketHandler.kPacket_Naked_MOB ()
-	local mobile =3D {}
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	mobile.serial =3D input:PopNetUint32()
-	=

-	local oldmobile =3D gMobiles[mobile.serial]
-	if (oldmobile) then mobile =3D oldmobile end -- update	=

-	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer
-	=

-	mobile.artid =3D input:PopNetUint16()
-	mobile.xloc =3D input:PopNetUint16()
-	mobile.yloc =3D input:PopNetUint16()
-	mobile.zloc =3D input:PopInt8()
-	mobile.dir =3D input:PopNetUint8()
-	mobile.hue =3D input:PopNetUint16() -- hue/skin color
-	mobile.flag =3D input:PopNetUint8()
-	mobile.notoriety =3D input:PopNetUint8()
-	=

-	--AddFadeLines("nakedmob ["..(mobile.serial).."]")
-	--print("\t\tNaked_MOB "..vardump(mobile))
-	=

-	gMobiles[mobile.serial] =3D mobile
-	=

-	-- request basic stats info
-	Send_ClientQuery(gRequest_States,mobile.serial)
-	=

-	UpdateMobile(mobile)
-end
-
--- Equipped_MOB packet (0x78)
--- TODO : rest of the packet
--- TODO : Tooltip request
-function gPacketHandler.kPacket_Equipped_MOB() -- ProtocolRecv_AddMobile
-	local mobile =3D {}
-	local input =3D GetRecvFIFO()
-	local fifolen_start =3D input:Size()
-	local id =3D input:PopNetUint8()
-	local iPacketSize =3D input:PopNetUint16()
-	mobile.serial =3D input:PopNetUint32()
-	=

-	local oldmobile =3D gMobiles[mobile.serial]
-	if (oldmobile) then mobile =3D oldmobile end -- update
-	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer
-	=

-	mobile.artid =3D input:PopNetUint16()
-
-	if (BitwiseAND(mobile.serial,hex2num("0x80000000")) ~=3D 0) then
-			mobile.amount =3D input:PopNetUint16()
-			print("tag corpse")
-	else 	mobile.amount =3D 1 end -- amount/Corpse Model Num
-	=

-	mobile.xloc =3D input:PopNetUint16()
-	mobile.yloc =3D input:PopNetUint16()
-	=

-	-- TOOD : check if this 2nd dir actually is used, or just a copy/paste er=
ror in the packet guide ?!?
-	if (BitwiseAND(mobile.xloc,hex2num("0x8000")) ~=3D 0) then
-			mobile.dir2 =3D input:PopNetUint16()
-			print("tag dir2")
-	else 	mobile.dir2 =3D -1 end -- why 2 directions ?!?
-
-	mobile.zloc =3D input:PopInt8()
-	mobile.dir =3D input:PopNetUint8()
-	mobile.hue =3D input:PopNetUint16()  -- dye/skin color
-	mobile.flag =3D input:PopNetUint8()
-	mobile.notoriety =3D input:PopNetUint8() -- TODO : (2's complement signed)
-	mobile.equipment =3D {}
-
-	local equipcount =3D 0
-	local loopalive =3D true
-
-	while loopalive do =

-		local item =3D {}
-		if ( iPacketSize >=3D (fifolen_start - input:Size()+4) ) then
-			item.serial =3D input:PopNetUint32()
-			if (item.serial =3D=3D 0) then
-				loopalive =3D false
-			else
-				item.mobile =3D mobile
-				item.mobile_serial =3D mobile.serial
-				=

-				if ( iPacketSize >=3D (fifolen_start - input:Size()+3) ) then
-					item.artid =3D input:PopNetUint16()
-					item.layer =3D input:PopNetUint8()
-					if ((BitwiseAND(item.artid,hex2num("0x8000")) ~=3D 0) and ( iPacketSi=
ze >=3D (fifolen_start - input:Size()+2) )) then
-							item.hue =3D input:PopNetUint16()
-					else	item.hue =3D 0 -- TODO : default value ?
-					end
-					item.artid =3D BitwiseAND(item.artid,hex2num("0x7fff"))
-					if (mobile.equipment[item.layer]) then print("Equipped_MOB : layer co=
ntains more than one item",item.layer) end
-					mobile.equipment[item.layer] =3D item
-					gMobileItemsBySerial[item.serial] =3D item
-					--print("Equipped_MOB add item",mobile.serial,sprintf("0x%02x",item.l=
ayer),item.artid)
-					equipcount =3D equipcount + 1
-				else
-					loopalive =3D false
-				end
-			end
-		else
-			loopalive =3D false
-		end
-	end
-	=

-	if (equipcount > 2) then gMobileWithPaperdoll =3D mobile end
-	=

-	mobile.serial	=3D BitwiseAND(mobile.serial,hex2num("0x7fffffff"))
-	mobile.xloc		=3D BitwiseAND(mobile.xloc,hex2num("0x7fff"))
-
-	--AddFadeLines("equippedmob ["..(mobile.serial).."]")
-	--print("\t\tEquipped_MOB "..vardump(mobile))
-	gMobiles[mobile.serial] =3D mobile
-	=

-	-- request basic stats info
-	Send_ClientQuery(gRequest_States,mobile.serial)
-
-	UpdateMobile(mobile)	=

-	=

-	UpdateMobileEquipment(mobile)
-end
-
-
--- 0x2E  Equip Item  (single item update version of 0x78 : equipped mobile)
--- This is sent by the server to equip a single item on a character.
---Packet [2e], Length: 15, Type: Server
---2e 40 02 21 9b 20 3b 00 0b 00 00 00 03 04 5e =

-function gPacketHandler.kPacket_Equip_Item() -- ProtocolRecv_AddMobile
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local item =3D {}
-	item.serial  =3D input:PopNetUint32() -- (always starts 0x40 in my data)
-	item.artid =3D input:PopNetUint16() -- also known as model
-	item.unknown1 =3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then prin=
t("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
-	item.layer =3D input:PopNetUint8()
-	item.mobile_serial  =3D input:PopNetUint32() -- "container" for item
-	item.hue =3D input:PopNetUint16()
-	=

-	--print("NET : Equip_Item",vardump(item))
-	=

-	local mobile =3D gMobiles[item.mobile_serial]
-	if (mobile) then
-		item.mobile =3D mobile
-		if (mobile.equipment[item.layer]) then
-			DestroyMobileItem(mobile.equipment[item.layer])
-		end
-		mobile.equipment[item.layer] =3D item
-		gMobileItemsBySerial[item.serial] =3D item
-		--printf("NET : kPacket_Equip_Item mobile=3D0x%08x item=3D0x%08x\n",item=
.mobile_serial,item.serial)
-		UpdateMobileEquipment(mobile)
-	else =

-		print("WARNING ! mobile update for unknown mobile received, update lost =
!")
-
-		-- don't crash on UOX3, Lonewolf (this servers sends unknown Equip messa=
ges)
-		if ((gServerType[gServerEmulator] ~=3D "Lonewolf") and (gServerType[gSer=
verEmulator] ~=3D "SpherePolUox3")) then
-			print("Crash Client here!"..gServerType[gServerEmulator])
-			Crash()
-		end
-
-		-- the client state would loose sync with server, this is fatal, =

-		-- but should never happen for correct server implementation ? (there ar=
e strange servers however...)
-		-- an alternative would be to create the mobile if unknown , something l=
ike GetOrCreateMobile like in net.container.lua
-	end
-end
-
--- Note: For characters other than the player, currentHitpoints and maxHit=
points are not the actual values.
--- MaxHitpoints is a fixed value, and currentHitpoints works like a percen=
tage.
--- triggered by Send_ClientQuery(gRequest_States,playermobile.serial)
--- TODO : Set also HP,Stamina,Mana here
-function gPacketHandler.kPacket_Mobile_Stats() -- 0x11
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local iPacketSize =3D input:PopNetUint16()
-	=

-	local stats =3D {}
-	mobile_id	=3D input:PopNetUint32()
-	local mobilename =3D input:PopFilledString(30)
-	=

-	--printf("NET : kPacket_Mobile_Stats mobile=3D0x%08x name=3D%s\n",mobile_=
id,mobilename)
-	=

-	local mobile =3D gMobiles[mobile_id]
-	local oldhp =3D 0
-	if (mobile) then
-		if (mobile.stats) then =

-			oldhp =3D mobile.stats.currentHitpoints	-- save old HitPoints for notif=
ication (see below)
-			stats =3D mobile.stats					-- is stats, use old stats and update it
-		else
-			print("mobile has no stats yet")
-		end
-	end
-
-	stats.currentHitpoints		=3D input:PopNetUint16()
-	stats.maxHitpoints 			=3D input:PopNetUint16()
-	stats.flagChangeNameFlag	=3D input:PopNetUint8()		--(0x1 =3D allowed, 0 =
=3D not allowed)
-	stats.bCanChangeName =3D stats.flagChangeNameFlag ~=3D 0
-	local flag =3D input:PopNetUint8()
-	stats.flag =3D flag
-	=

-	-- more data following
-	if ((flag =3D=3D 1) or (flag =3D=3D 3) or (flag =3D=3D 4) or (flag =3D=3D=
 5)) then -- stats
-		stats.char_sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Fe=
male
-		stats.char_str		=3D input:PopNetUint16()
-		stats.char_dex		=3D input:PopNetUint16()
-		stats.char_int		=3D input:PopNetUint16()
-		stats.char_curSta	=3D input:PopNetUint16()
-		stats.char_maxSta	=3D input:PopNetUint16()
-		stats.char_curMana	=3D input:PopNetUint16()
-		stats.char_maxMana	=3D input:PopNetUint16()
-		stats.char_gold		=3D input:PopNetUint32()
-		stats.char_armorC	=3D input:PopNetUint16() -- resistPhysical (old client=
s: AC).
-		stats.char_curWeight=3D input:PopNetUint16()
-
-		if (flag =3D=3D 5) then
-			stats.char_maxWeight =3D input:PopNetUint16()
-			stats.char_race		 =3D input:PopNetUint8()
-		end
-
-		if ((flag =3D=3D 3) or (flag =3D=3D 4) or (flag =3D=3D 5)) then -- Follo=
wers (pets)
-			stats.char_statcap	=3D input:PopNetUint16()		-- The character's total a=
llowable sum of Strength, Intelligence, and Dexterity
-			stats.char_curPet	=3D input:PopNetUint8()			=

-			stats.char_maxPet	=3D input:PopNetUint8()
-			=

-			if ((flag =3D=3D 4) or (flag =3D=3D 5)) then -- Resistances
-				stats.char_fireresist	=3D input:PopNetUint16()			=

-				stats.char_coldresist	=3D input:PopNetUint16()			=

-				stats.char_poisonresist	=3D input:PopNetUint16()			=

-				stats.char_energyresist	=3D input:PopNetUint16()			=

-				stats.char_luck			=3D input:PopNetUint16()			=

-				stats.char_minDamage	=3D input:PopNetUint16()			=

-				stats.char_maxDamage	=3D input:PopNetUint16()			=

-				stats.char_tithing		=3D input:PopNetUint32()			=

-			end
-		end
-	end
-
-	-- Update Mobile
-	if (mobile) then
-		mobile.name=3Dmobilename
-		mobile.stats =3D stats
-		-- not needed due to normal damage packet
-		-- TODO is this ok for every server?
-		-- gCurrentRenderer:NotifyHPChange(mobile_id, oldhp, mobile.stats.curren=
tHitpoints)
-		UpdateMobile(mobile)
-	end
-	=

-	TradeUpdatePlayerGold()
-end
-
---[[
-Mobile Stats    0x11  	=

-Show Mobile .. 0xD3
-Rename MOB  0x75  	=

-MOB Name	0x98  	=

-kPacket_Naked_MOB    	0x77  	=

-kPacket_Update_Mobile	0xD2  (extended 0x20)  similar to the Naked MOB pack=
et.   pos..
-
-0xD2 : kPacket_Update_Mobile : "Extended 0x20"  25 Byte length
-    * BYTE cmd
-    * Preamble: Exactly like 0x20
-    * BYTE[2] unknown 1
-    * BYTE[2] unknown 2
-    * BYTE[2] unknown 3
-
-Note: currently unknown's don't seem to do anything.
-That packet has never been sighted on OSI servers as well.
-We probably have to wait till OSI activates it/finishes implementation., t=
o see what it does.
-
-]]--
-
-
---[[
-Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
-0x00 - None
-0x02 - Female
-0x04 - Poisoned
-0x08 - YellowHits // healthbar gets yellow
-0x10 - FactionShip // unsure why client needs to know
-0x20 - Movable if normally not
-0x40 - War mode
-0x80 - Hidden =

-]]--
-
-
---# Update Current Health [0xA1]
--- TODO : not only player gets update packets here - also the defender of =
a combat
-function gPacketHandler.kPacket_HP_Health()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobile_id,curval,maxval))
-	=

-	local mobile =3D gMobiles[mobile_id]
-	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
-	if (mobile and (maxval ~=3D 1000) and mobile.stats) then
-		if mobile.stats.currentHitpoints then
-			-- if there was a change, plop a text
-			local old =3D mobile.stats.currentHitpoints
-			gCurrentRenderer:NotifyHPChange(mobile_id, old, curval)
-		end
-		-- update values
-		mobile.stats.currentHitpoints =3D curval
-		mobile.stats.maxHitpoints =3D maxval
-
-		UpdateMobile(mobile)
-	end
-end
-
---# Update Current Mana [0xA2]
--- TODO : not only player gets update packets here
-function gPacketHandler.kPacket_Mana_Health()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobile_id,curval,maxval))
-	=

-	local mobile =3D gMobiles[mobile_id]
-	if mobile and mobile.stats then
-		-- update values
-		mobile.stats.char_curMana =3D curval
-		mobile.stats.char_maxMana =3D maxval
-
-		if (mobile_id =3D=3D gPlayerBodySerial) then
-			gui.SetMana(curval/maxval)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
-end
-
---# Update Current Stamina [0xA3]
--- TODO : not only player gets update packets here
-function gPacketHandler.kPacket_Fat_Health()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curval,maxval))
-
-	local mobile =3D gMobiles[mobile_id]
-	if mobile and mobile.stats then
-		-- update values
-		mobile.stats.char_curSta =3D curval
-		mobile.stats.char_maxSta =3D maxval
-
-		if (mobile_id =3D=3D gPlayerBodySerial) then
-			gui.SetStamina(curval/maxval)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
-end
 =

 -- Fighting - Swing [0x2F] 10bytes
 -- TODO : handle animation
@@ -503,22 +132,6 @@
 	local attacker_serial =3D input:PopNetUint32()
 	local defender_serial =3D input:PopNetUint32()
 	printf("NET: Swing Attack Animation, attacker=3D0x%08x defender=3D0x%08x\=
n",attacker_serial,defender_serial)
-end
-
-function gPacketHandler.kPacket_Damage()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local mobile_serial =3D input:PopNetUint32()
-	local damage_amount =3D input:PopNetUint16()
-	=

-	printf("NET: (new) Damage: mobile-serial: 0x%08x Damage_Amount: %i\n",mob=
ile_serial,damage_amount)
-	if (mobile_serial =3D=3D gPlayerBodySerial) then
-		AddFadeLines(sprintf("%s",damage_amount).." Damage received")
-	else
-		AddFadeLines(sprintf("%s",damage_amount).." Damage done")
-	end
-
-	gCurrentRenderer:NotifyHPChange(mobile_serial,damage_amount,0)
 end
 =

 -- TODO : what is the result of this packet?



From no-reply at zwischenwelt.org  Thu Aug  2 00:23:37 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 22:23:37 -0000
Subject: [Iris-commit] [IRIS] r1323 - in /trunk/data/lua: lib.protocol.lua
	main.lua
Message-ID: <20070801222337.2E493B140B5@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 00:23:36 2007
New Revision: 1323

Log:
fixed forgotten path and config-copying

Modified:
    trunk/data/lua/lib.protocol.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.protocol.lua (original)
+++ trunk/data/lua/lib.protocol.lua Thu Aug  2 00:23:36 2007
@@ -44,7 +44,6 @@
 	dofile(libpath .. "net.uodragdrop.lua")
 	dofile(libpath .. "net.walk.lua")
 	dofile(libpath .. "net.world.lua")
-	dofile(libpath .. "net.customhouse.lua")
 	dofile(libpath .. "net.corpse.lua")
 =

 	=


Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Thu Aug  2 00:23:36 2007
@@ -97,9 +97,13 @@
 else
 	-- no local config file, copy dist config
 	local fp =3D io.open(gConfigPath,"w")
-	fp:write("# this is your local config file, here you can override the def=
ault options\n")
+	fp:write("-- this is your local config file, here you can override the de=
fault options\n")
 	fp:write("-- gUOPath =3D \"C:\\\\stuff\\\\iris\\\\uo\\\\\" -- enter the p=
ath to your uo data dir here\n")
-	for line in io.lines(gConfigPathFallback) do fp:write(line) end
+	for line in io.lines(gConfigPathFallback) do =

+		if (not string.find(line,"DO NOT EDIT THIS FILE DIRECTLY")) then =

+			fp:write(line.."\n") =

+		end =

+	end
 	fp:close()
 end
 =




From no-reply at zwischenwelt.org  Thu Aug  2 02:08:09 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 00:08:09 -0000
Subject: [Iris-commit] [IRIS] r1324 - in /branches/knut/data/lua:
 net.customhouse.lua net.walk.lua net/net.mobile.lua net/net.multi.lua
Message-ID: <20070802000810.16AB1B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 02:08:08 2007
New Revision: 1324

Log:
fixed stamina/fathealth naming, new multicode from trunk

Removed:
    branches/knut/data/lua/net.customhouse.lua
Modified:
    branches/knut/data/lua/net.walk.lua
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/net/net.multi.lua

Modified: branches/knut/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.walk.lua (original)
+++ branches/knut/data/lua/net.walk.lua Thu Aug  2 02:08:08 2007
@@ -657,7 +657,7 @@
 MaxZClimb =3D 20;
 MaxZFall =3D 20;
 =

-received lots of kPacket_Fat_Health 0xA3 : update stamina
+received lots of kPacket_Stamina 0xA3 : update stamina
 BYTE cmd
 BYTE[4] playerID
 BYTE[2] maxStamina

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Thu Aug  2 02:08:08 2007
@@ -224,7 +224,7 @@
 end
 =

 -- Update Current Stamina [0xA3]
-function gPacketHandler.Stamina()
+function gPacketHandler.kPacket_Stamina()
 	local input =3D GetRecvFIFO()
 	local packetid =3D input:PopNetUint8()
 	local serial =3D input:PopNetUint32()
@@ -245,7 +245,8 @@
 	=

 	gCurrentRenderer:NotifyHPChange( serial, damage, 0 )
 end
-
+
+-- see also Send_ClientQuery in net.login.lua
 function Send_QueryStatus( mobile )
 	local out =3D GetSendFIFO()
 	out:PushNetUint8( kPacket_Client_Query )

Modified: branches/knut/data/lua/net/net.multi.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.multi.lua (original)
+++ branches/knut/data/lua/net/net.multi.lua Thu Aug  2 02:08:08 2007
@@ -1,5 +1,309 @@
+
+-- Give Boat/House Placement
+--
+function gPacketHandler.kPacket_Target_Multi()	-- 0x99
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local request =3D input:PopNetUint8()
+	local deedID =3D input:PopNetUint32()
+		local unknown1 =3D input:PopNetUint32()	--(all 0)
+		local unknown2 =3D input:PopNetUint32()	--(all 0)
+		local unknown3 =3D input:PopNetUint32()		--(all 0)
+	local multiID =3D input:PopNetUint16()			--(item model - 0x4000)
+		local unknown4 =3D input:PopNetUint32()	--(all 0)
+		local unknown5 =3D input:PopNetUint16()	--(all 0)
+	=

+	if (request =3D=3D hex2num("0x01")) then
+		StartTargetMode()
+	end
+end
+
+--Send CustomHouseSerial to Upadte the CustomHouseCLientCache for this Hou=
se, Server sends CustomHouse in response
+function Send_CustomHouseRevision(customhouseserial)
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Generic_Command)
+	out:PushNetUint16(hex2num("0x0009"))
+	out:PushNetUint16(kPacket_Generic_SubCommand_HouseSerial)	--SubID
+	out:PushNetUint32(customhouseserial)
+	out:SendPacket()
+end
+
+
+-- this checks if the given numbers a possible custom house values
+-- retuns true if they are ok
+function CustomHouseCheckSizeValidity(w,h)
+	if w < 7 or h < 7 then return false end
+	if w - math.floor(w) > 0 then return false end
+	if h - math.floor(h) > 0 then return false end
+	-- if w >=3D 7 and w <=3D 15	and h >=3D 7 and h <=3D 18 then return true =
end
+	return true
+end
+
+-- Custom Multis - aka - Serverside Multis
+--X/Y of this packet is probably wrong. May be 2 Byte portions instead of =
1. Information was submitted and as of yet untested.
+-- TODO : this packet handling is so stupid... ea/osi please think before =
you are writing sourcecode !!
+-- this code is based on the packet format runuo uses
+function gPacketHandler.kPacket_Custom_House()	--0xD8
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local iPacketSize =3D input:PopNetUint16()
+	local compresstype =3D input:PopNetUint8()	-- (0=3Dnothing, 3=3Dzlib)
+	local unknown1 =3D input:PopNetUint8()
+	local customhouseserial =3D input:PopNetUint32()
+	local customhouserevision =3D input:PopNetUint32()
+	local tilecount =3D input:PopNetUint16()	--components.size()
+	local bufferlen =3D input:PopNetUint16()	--components.size() * 5		(item l=
ist, compressed?)
+	local planecount =3D input:PopNetUint8()
+
+	=

+	printdebug("net",sprintf("NET: Custom_House: iPacketSize=3D%d compresstyp=
e=3D0x%02x unknown1=3D0x%02x customhouseserial=3D%d customhouserevision=3D0=
x%08x tilecount=3D%d bufferlen=3D%d planecount=3D%d\n",
+			iPacketSize, compresstype, unknown1, customhouseserial, customhouserevi=
sion, tilecount, bufferlen, planecount))
+
+	local s0,s1
+	=

+	local lTile =3D {}
+	=

+	--------------- if compressed ----------------------
+	if (compresstype =3D=3D hex2num("0x03")) then
+		local lPlaneLayer =3D {}
+		=

+		for i =3D 0, planecount - 1 do
+			local planeid =3D input:PopNetUint8()
+			local planetype =3D BitwiseAND(planeid,hex2num("0x20"))
+			=

+			-- calculate planeid
+			if planetype =3D=3D hex2num("0x20") then planeid =3D BitwiseXOR(planeid=
,hex2num("0x20")) =

+			else planeid =3D planeid - 9 end
+						=

+			local uncompressedsize =3D input:PopNetUint8()
+
+			local compressedsize =3D input:PopNetUint8()
+			local bothsizes =3D input:PopNetUint8()		--? Write( (byte)(((size >> 4)=
 & 0xF0) | ((deflatedLength >> 8) & 0xF)) );
+			=

+			uncompressedsize =3D uncompressedsize + BitwiseSHL(BitwiseAND(bothsizes=
,hex2num("0xF0")),4)
+			compressedsize =3D compressedsize + BitwiseSHL(BitwiseAND(bothsizes,hex=
2num("0xF")),8)
+		=

+			printdebug("net",sprintf("NET: Custom_House2: planeid=3D%d planetype=3D=
0x%02x uncompressedsize=3D0x%02x compressedsize=3D0x%02x bothsizes=3D0x%02x=
\n",
+					planeid,planetype,uncompressedsize,compressedsize,bothsizes))
+		=

+			-- switch between stair and plane buffers
+			if planetype =3D=3D hex2num("0x20") then
+				-- -------------------------------------------------------------------=
-------
+				-- planelayers
+				-- -------------------------------------------------------------------=
-------
+				=

+				-- store first 2 sizes to calculate w,h
+				if ( i =3D=3D 0 ) then s0 =3D uncompressedsize / 2 end
+				if ( i =3D=3D 1 ) then s1 =3D uncompressedsize / 2 end
+				=

+				-- decompress for later parsing
+				lPlaneLayer[planeid] =3D CreateFIFO()
+				input:PeekDecompressIntoFifo(compressedsize,uncompressedsize,lPlaneLay=
er[planeid])
+			else
+				local lStairLayer =3D CreateFIFO()
+				input:PeekDecompressIntoFifo(compressedsize,uncompressedsize,lStairLay=
er)
+
+				-- -------------------------------------------------------------------=
-------
+				-- stairlayer
+				-- -------------------------------------------------------------------=
-------
+
+				-- Stairplane Tilenumber - save for later use
+				local tilenum =3D uncompressedsize / 5
+				=

+				--print("tilenum for stairlayer=3D"..tilenum)
+
+				-- layer position correction
+				local staircorr =3D 0	--0.5
+
+				for i =3D 1, tilenum do
+					local tile =3D {}
+					tile.artid =3D lStairLayer:PopNetUint16()
+					tile.x =3D lStairLayer:PopNetInt8() - staircorr
+					tile.y =3D lStairLayer:PopNetInt8()
+					tile.z =3D lStairLayer:PopNetInt8()
+	=

+					if (tile.artid > 0) then
+						printdebug("net",sprintf("NET: Custom_House Stairs: artid=3D0x%04x x=
=3D%i y=3D%i z=3D%i\n",
+								tile.artid, tile.x, tile.y, tile.z))
+						table.insert(lTile,tile)
+					end
+				end
+
+				lStairLayer:Destroy()
+			end
+			=

+			input:PopRaw(compressedsize)
+		end
+
+		-- calculate w,h from sizes
+		local a =3D -1
+		local b =3D s0 + 2 - s1
+		local c =3D -2 * s0
+		=

+		local h1 =3D (-b+math.sqrt(b*b-4*a*c))/(2*a)
+		local h2 =3D (-b-math.sqrt(b*b-4*a*c))/(2*a)
+		=

+		local w1 =3D s0 / h1
+		local w2 =3D s0 / h2
+
+		printf("w1=3D%.1f h1=3D%.1f  |  w2=3D%.1f h2=3D%.1f\n",w1,h1,w2,h2)
+
+		local width =3D 0
+		local height =3D 0
+		=

+		if CustomHouseCheckSizeValidity(w1,h1) then width =3D w1 height =3D h1
+		elseif CustomHouseCheckSizeValidity(w2,h2) then width =3D w2 height =3D =
h2
+		else =

+			printf("ERROR custom house with invalid size candidates:\n")
+			printf("w1=3D%.1f h1=3D%.1f  |  w2=3D%.1f h2=3D%.1f\n",w1,h1,w2,h2)
+		end
+
+		printdebug("net",sprintf("NET: Custom_House Width&Height: w=3D%d h=3D%d\=
n",
+				width,height))
+
+		-- ---------------------------------------------------------------------=
-----
+		-- Parse remaining unparsed planelayers -----------------
+		-- ---------------------------------------------------------------------=
-----
+		for i =3D 0, 9 - 1 do
+			local fifo =3D lPlaneLayer[i]
+			-- is valid plane layer?
+			if fifo then
+				-- parse decompressed buffer
+
+				local x =3D 0
+				local y =3D 0
+				local z =3D 0
+
+				local xcorrection =3D 0
+				local ycorrection =3D 0
+				if (math.mod(width,2) =3D=3D 0) then xcorrection=3D1 else xcorrection=
=3D0.5 end
+				if (math.mod(height,2) =3D=3D 0) then ycorrection=3D1 else ycorrection=
=3D1.5 end
+
+				-- layer position correction
+				local dx =3D -width/2	+xcorrection
+				local dy =3D -height/2 +ycorrection
+				local dz =3D 0
+				=

+				-- layersize
+				local w =3D 0
+				local h =3D 0
+
+				if (i =3D=3D 0) then
+					w =3D width + 1
+					h =3D height
+				elseif (i < 5) then
+					w =3D width - 1
+					h =3D height - 2
+					dx =3D dx + 1
+					dy =3D dy + 1
+				else
+					w =3D width
+					h =3D height -1
+				end
+				=

+				printdebug("net",sprintf("NET: Custom_House LAYER: %d w=3D%d h=3D%d\n",
+						i,w,h))
+
+				if (i > 0) then z =3D math.mod(i-1,4) * 20 + 7 end
+				=

+				while fifo:Size() > 0 do
+					local tile =3D {}
+					=

+					tile.artid =3D fifo:PopNetUint16()
+					tile.x =3D x + dx
+					tile.y =3D y + dy
+					tile.z =3D z + dz
+					=

+					if (tile.artid > 0) then =

+						printdebug("net",sprintf("NET: Custom_House Plane: artid=3D0x%04x x=
=3D%i y=3D%i z=3D%i\n",
+								tile.artid, tile.x, tile.y, tile.z))
+						table.insert(lTile,tile)
+					end	=

+					=

+					y =3D y + 1
+					if (math.mod(y, h) =3D=3D 0) then y =3D 0 x =3D x + 1 end
+				end			=

+				fifo:Destroy()
+			end
+		end
+	--------------- if uncompressed ----------------------
+	elseif (compresstype =3D=3D hex2num("0x00")) then
+		for i=3D1, i <=3D tilecount do
+			local tile =3D {}
+			tile.artid =3D decompressed:PopNetUint16()
+			tile.x =3D decompressed:PopNetInt8()
+			tile.y =3D decompressed:PopNetInt8()
+			tile.z =3D decompressed:PopNetInt8()
+
+			if (tile.artid > 0) then =

+				if (tile.x < 0) then
+					tile.x =3D hex2num("0xFF") + (tile.x + 1);
+				end
+				if(tile.y < 0) then
+					tile.y =3D hex2num("0xFF") + (tile.y + 1);
+				end
+				if(tile.z < 0) then
+					tile.z =3D hex2num("0xFF") + (tile.z + 1);
+				end
+
+				printdebug("net",sprintf("NET: Custom_House Plane: artid=3D0x%04x x=3D=
%i y=3D%i z=3D%i\n",
+						tile.artid, tile.x, tile.y, tile.z))
+				table.insert(lTile,tile)
+			else
+				printf("NET: TileID too low -> Custom_House Plane: artid=3D0x%04x x=3D=
%i y=3D%i z=3D%i\n", tile.artid, tile.x, tile.y, tile.z)
+			end
+		end
+	else
+		-- skip an uncompessed CustomHouse packet
+		input:PopRaw(bufferlen-1)
+	end
+
+	-- print("Custom House Tiles",vardump(lTile))
+
+	local dyn =3D gDynamics[customhouseserial]
+	local update_or_create_house =3D false
+
+	-- if dynamic-customhouse-multi alreay exists
+	if (dyn) then
+		--print("CH: Old custom house found")
+		-- check if customhousemulti already exists
+		if (dyn.customhouserevision) then
+			if (customhouserevision~=3Ddyn.customhouserevision) then
+				--print("CH: Houserevision not equal -> reset")
+				-- update revision
+				dyn.customhouserevision=3Dcustomhouserevision
+				--create a new house
+
+				-- just a Temp. Fix until 2D Renderer supports CreateDynamicGfx Server=
side Multis
+				if (gCurrentRenderer=3D=3DRenderer3D) then
+					gCurrentRenderer:RemoveDynamicItem( dyn )
+					dyn.lTile=3DlTile
+					gCurrentRenderer:CreateDynamicGfx( dyn )
+				end
+			end
+			-- else already in serversidemulti cache and load form here.
+		else
+			--print("CH: No Houserevision found (only Clientside Stairs found)) -> =
new")
+			--if not add revision to dynamic-multi
+			dyn.customhouserevision=3Dcustomhouserevision
+			-- create a new house
+
+			-- just a Temp. Fix until 2D Renderer supports CreateDynamicGfx Servers=
ide Multis
+			if (gCurrentRenderer=3D=3DRenderer3D) then
+				gCurrentRenderer:RemoveDynamicItem( dyn )
+				dyn.lTile=3DlTile
+				gCurrentRenderer:CreateDynamicGfx( dyn )
+			end
+		end
+	end
+end
+
+
+
 -- Custom Multis - aka - Serverside Multis
---X/Y of this packet is probably wrong. May be 2 Byte portions instead of =
1. Information was submitted and as of yet untested.
+--X/Y of this packet is probably wrong. May be 2 Byte portions instead of =
1. Information was submitted and as of yet untested.
+-- OLD version from knut.. above is new version from trunk
+--[[
 function gPacketHandler.kPacket_Custom_House()	--0xD8
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
@@ -22,4 +326,5 @@
 		newitem.zloc =3D input:PopNetUint8()
 		printdebug("NET", "Custom_House: artid=3D0x%04x locx=3D%i locy=3D%i locz=
=3D%i\n", newitem.artid, newitem.xloc, newitem.yloc, newitem.zloc)
 	end
-end
+end
+]]--



From no-reply at zwischenwelt.org  Thu Aug  2 03:19:20 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 01:19:20 -0000
Subject: [Iris-commit] [IRIS] r1327 - in /branches/knut/data/lua:
 lib.charcreate.lua lib.input.lua lib.loading.lua lib.stitchin.lua main.lua
 net.other.lua net.uodragdrop.lua net/net.uodragdrop.lua
Message-ID: <20070802011921.5BEB0B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 03:19:19 2007
New Revision: 1327

Log:
started merging...

Modified:
    branches/knut/data/lua/lib.charcreate.lua
    branches/knut/data/lua/lib.input.lua
    branches/knut/data/lua/lib.loading.lua
    branches/knut/data/lua/lib.stitchin.lua
    branches/knut/data/lua/main.lua
    branches/knut/data/lua/net.other.lua
    branches/knut/data/lua/net.uodragdrop.lua
    branches/knut/data/lua/net/net.uodragdrop.lua

Modified: branches/knut/data/lua/lib.charcreate.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.charcreate.lua (original)
+++ branches/knut/data/lua/lib.charcreate.lua Thu Aug  2 03:19:19 2007
@@ -7,6 +7,7 @@
 -- kPacket_Delete_Character_Failed ?
 -- kPacket_All_Characters ?
 -- kPacket_Move_Character ?
+-- ?? kPacket_Character_Profile ?
 -- kPacket_Character_Transfer_Log ?
 =

 -- template is one element from the array of GetCharCreationTemplates

Modified: branches/knut/data/lua/lib.input.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.input.lua (original)
+++ branches/knut/data/lua/lib.input.lua Thu Aug  2 03:19:19 2007
@@ -315,5 +315,4 @@
 		--Bind("f10",		function (state) if (not gActiveEditText) then if (state =
> 0) then Send_Speech(commandchar.."props") end end end)
 		--Bind("f11",		function (state) if (not gActiveEditText) then if (state =
> 0) then Send_Speech(commandchar.."add") end end end)
 	end
-
-end
+end

Modified: branches/knut/data/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.loading.lua (original)
+++ branches/knut/data/lua/lib.loading.lua Thu Aug  2 03:19:19 2007
@@ -101,7 +101,7 @@
 =

 -- load bigger data chunks while menu is visible
 function PreLoad ()
-	DebugCallLogStartIgnore()
+	--DebugCallLogStartIgnore()
 	LoadingProfile("init unifonts")
 	if (gUniFontLoaderType) then
 		CreateUniFont(CorrectPath(gUOPath.."unifont.mul"),"font_unifont0")
@@ -210,7 +210,7 @@
 	gLoadingProfileLastTime =3D 0
 	gLoadingProfileLastAction =3D false
 	=

-	DebugCallLogStopIgnore()
+	--DebugCallLogStopIgnore()
 	--MeshExporter()
 	--Crash()
 end

Modified: branches/knut/data/lua/lib.stitchin.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.stitchin.lua (original)
+++ branches/knut/data/lua/lib.stitchin.lua Thu Aug  2 03:19:19 2007
@@ -73,6 +73,7 @@
 			end
 		end
 	end
+
 	--print(" pushups   ",table.concat(stitchininfo.pushups,",")) -- 1924,360=
4,1925,3605
 	return stitchininfo
 end

Modified: branches/knut/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/main.lua (original)
+++ branches/knut/data/lua/main.lua Thu Aug  2 03:19:19 2007
@@ -98,10 +98,15 @@
 	-- execute local config
 	dofile(gConfigPath)
 else
-	-- no local config file, create empty
+	-- no local config file, copy dist config
 	local fp =3D io.open(gConfigPath,"w")
-	fp:write("# this is your local config file, here you can override the opt=
ions from "..gConfigPathFallback.."\n")
+	fp:write("-- this is your local config file, here you can override the de=
fault options\n")
 	fp:write("-- gUOPath =3D \"C:\\\\stuff\\\\iris\\\\uo\\\\\" -- enter the p=
ath to your uo data dir here\n")
+	for line in io.lines(gConfigPathFallback) do =

+		if (not string.find(line,"DO NOT EDIT THIS FILE DIRECTLY")) then =

+			fp:write(line.."\n") =

+		end =

+	end
 	fp:close()
 end
 =


Modified: branches/knut/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.other.lua (original)
+++ branches/knut/data/lua/net.other.lua Thu Aug  2 03:19:19 2007
@@ -610,10 +610,10 @@
 	out:SendPacket()
 end
 =

--- send combat request to server, triggers kPacket_Combat
+-- send combat request to server, triggers kPacket_SetPlayerWarmode
 function Send_CombatMode(iWarMode)
 	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Combat)
+	out:PushNetUint8(kPacket_SetPlayerWarmode)
 	out:PushNetUint8(iWarMode)
 	out:PushNetUint16(hex2num("0x0032"))
 	out:PushNetUint8(hex2num("0x00"))

Modified: branches/knut/data/lua/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.uodragdrop.lua (original)
+++ branches/knut/data/lua/net.uodragdrop.lua Thu Aug  2 03:19:19 2007
@@ -53,82 +53,6 @@
 =

 gDragStartDist =3D 5 -- in pixels
 gSquareDragStartDist =3D gDragStartDist * gDragStartDist
-
-
--- Equip Item Request   (answer is 0x2E, see also 0x78). 0x13
-function Send_Equip_Item_Request(serial,layer,player_serial)
-	print("NET: Send_Equip_Item_Request:",sprintf("0x%08x",serial),layer,play=
er_serial)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Equip_Item_Request)
-	out:PushNetUint32(serial)
-	out:PushNetUint8(layer)
-	out:PushNetUint32(player_serial)
-	out:SendPacket()
-end
-
--- This is sent by the client when the player picks up an item. 0x07
-function Send_Take_Object(serial,amount)
-	print("NET: Send_Take_Object:",sprintf("0x%08x",serial),serial,amount)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Take_Object)
-	out:PushNetUint32(serial)
-	out:PushNetUint16(amount or 1)
-	out:SendPacket()
-end
-
--- This is sent by the client when the player drops an item. 0x08
--- containerid =3D 0xFFFFFFFF  when the container is the ground
-function Send_Drop_Object(serial,x,y,z,containerid)
-	print("NET: Send_Drop_Object:",sprintf("0x%08x",serial),x,y,z,containerid)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Drop_Object)
-	out:PushNetUint32(serial)
-	out:PushNetUint16(x)
-	out:PushNetUint16(y)
-	out:PushInt8(z) -- SIGNED !!
-	out:PushNetUint32(containerid)
-	out:SendPacket()
-end
- =

--- This is sent to deny the player's request to get an item. (servers resp=
onse to 0x07)
-function gPacketHandler.kPacket_Get_Item_Failed() -- 0x27
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local reason =3D input:PopNetUint8()
-	local reasontxt =3D "unknown_Get_Item_Failed"
-	if (reason =3D=3D hex2num("0x00")) then reasontxt =3D "You cannot pick th=
at up." end
-	if (reason =3D=3D hex2num("0x01")) then reasontxt =3D "That is too far aw=
ay." end
-	if (reason =3D=3D hex2num("0x02")) then reasontxt =3D "That is out of sig=
ht." end
-	if (reason =3D=3D hex2num("0x03")) then reasontxt =3D "That item does not=
 belong to you. You will have to steal it." end
-	if (reason =3D=3D hex2num("0x04")) then reasontxt =3D "You are already ho=
lding an item." end
-	if (reason =3D=3D hex2num("0x05")) then =

-		reasontxt =3D "The item was destroyed."  -- TODO : no message ??
-		-- TODO : Destroy the item.
-	end
-	if (reason =3D=3D hex2num("0x06")) then -- No message.
-		reasontxt =3D false
-	end
-	print("NET : Get_Item_Failed",reasontxt)
-	CleanUpUODragDrop() -- server side cancel
-end
-
--- Clear Square or Drop Failed ? (servers response to 0x08 ?)
-function gPacketHandler.kPacket_Drop_Item_Failed() -- 0x28
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local xloc =3D input:PopNetUint16()
-	local yloc =3D input:PopNetUint16()
-	-- TODO ?
-	print("NET : Drop_Item_Failed")
-end
-
--- Drop Item OK ? Paperdoll Clothing Added ? (servers response to 0x08 ?)
-function gPacketHandler.kPacket_Drop_Item_OK() -- 0x29
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	-- TODO ?
-	print("NET : Drop_Item_OK")
-end
  =

 gDragDrop =3D false
 =


Modified: branches/knut/data/lua/net/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.uodragdrop.lua (original)
+++ branches/knut/data/lua/net/net.uodragdrop.lua Thu Aug  2 03:19:19 2007
@@ -11,7 +11,7 @@
 =

 -- This is sent by the client when the player picks up an item. 0x07
 function Send_Take_Object(serial,amount)
-	printdebug("NET","NET: Send_Take_Object:",sprintf("0x%08x",serial),serial=
,amount)
+	print("NET: Send_Take_Object:",sprintf("0x%08x",serial),serial,amount)
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Take_Object)
 	out:PushNetUint32(serial)
@@ -28,7 +28,7 @@
 	out:PushNetUint32(serial)
 	out:PushNetUint16(x)
 	out:PushNetUint16(y)
-	out:PushInt8(z)
+	out:PushInt8(z) -- SIGNED !!
 	out:PushNetUint32(containerid)
 	out:SendPacket()
 end
@@ -70,3 +70,4 @@
 	local id =3D input:PopNetUint8()
 	printdebug("NET","NET : Drop_Item_OK --> nothing todo?")
 end
+



From no-reply at zwischenwelt.org  Thu Aug  2 03:19:57 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 01:19:57 -0000
Subject: [Iris-commit] [IRIS] r1328 - in /trunk/data/lua: gui/gui.main.lua
 gui/gui.status.lua lib.charcreate.lua lib.debug.lua lib.guimaker.lua
 lib.listener.lua lib.loading.lua lib.skill.lua lib.test.lua lib.util.lua
 net/net.multi.lua net/net.uodragdrop.lua
Message-ID: <20070802011958.2CEB0B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 03:19:56 2007
New Revision: 1328

Log:
started merging ...

Added:
    trunk/data/lua/gui/gui.status.lua
    trunk/data/lua/lib.debug.lua
    trunk/data/lua/lib.listener.lua
Modified:
    trunk/data/lua/gui/gui.main.lua
    trunk/data/lua/lib.charcreate.lua
    trunk/data/lua/lib.guimaker.lua
    trunk/data/lua/lib.loading.lua
    trunk/data/lua/lib.skill.lua
    trunk/data/lua/lib.test.lua
    trunk/data/lua/lib.util.lua
    trunk/data/lua/net/net.multi.lua
    trunk/data/lua/net/net.uodragdrop.lua

Modified: trunk/data/lua/gui/gui.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.main.lua (original)
+++ trunk/data/lua/gui/gui.main.lua Thu Aug  2 03:19:56 2007
@@ -4,4 +4,4 @@
 dofile(libpath .. "gui/gui.paperdoll.lua")
 --~ dofile(libpath .. "gui/gui.journal.lua")
 --~ dofile(libpath .. "gui/gui.quit.lua")
---~ dofile(libpath .. "gui/gui.status.lua")
+dofile(libpath .. "gui/gui.status.lua")

Modified: trunk/data/lua/lib.charcreate.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.charcreate.lua (original)
+++ trunk/data/lua/lib.charcreate.lua Thu Aug  2 03:19:56 2007
@@ -7,7 +7,7 @@
 -- kPacket_Delete_Character_Failed ?
 -- kPacket_All_Characters ?
 -- kPacket_Move_Character ?
--- kPacket_Character_Profile ?
+-- ?? kPacket_Character_Profile ?
 -- kPacket_Character_Transfer_Log ?
 =

 -- template is one element from the array of GetCharCreationTemplates

Modified: trunk/data/lua/lib.guimaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.guimaker.lua (original)
+++ trunk/data/lua/lib.guimaker.lua Thu Aug  2 03:19:56 2007
@@ -55,10 +55,10 @@
 end
 =

 -- sorted overlay container (keeps zorder from beeing optimized away by re=
nder-state sorting)
-function guimaker.MakeSOC (parent)
+function guimaker.MakeSOC (parent,x,y)
 	local widget =3D parent:CreateChild()
 	widget.gfx:InitSOC()
-	widget.gfx:SetPos(0,0)
+	widget.gfx:SetPos(x or 0,y or 0)
 	widget.gfx:SetRankFactor(2) -- z order interval between childs, should be=
 a tiny bit greater than 1
 	widget.mbClipChildsHitTest =3D false
 	widget.mbIgnoreMouseOver =3D true

Modified: trunk/data/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.loading.lua (original)
+++ trunk/data/lua/lib.loading.lua Thu Aug  2 03:19:56 2007
@@ -101,9 +101,11 @@
 =

 -- load bigger data chunks while menu is visible
 function PreLoad ()
+	--DebugCallLogStartIgnore()
 	LoadingProfile("init unifonts")
 	if (gUniFontLoaderType) then
-		for i=3D1,1 do
+		CreateUniFont(CorrectPath(gUOPath.."unifont.mul"),"font_unifont0")
+		for i=3D1,2 do
 			gUniFontName[i] =3D "font_unifont"..i
 			gUniFontHeight[i] =3D CreateUniFont(CorrectPath(gUOPath.."unifont"..i..=
".mul"),gUniFontName[i])
 		end
@@ -207,6 +209,10 @@
 	=

 	gLoadingProfileLastTime =3D 0
 	gLoadingProfileLastAction =3D false
+	=

+	--DebugCallLogStopIgnore()
+	--MeshExporter()
+	--Crash()
 end
 =

 -- don't load new map immediately, several mapchanges might be sent at log=
in quickly

Modified: trunk/data/lua/lib.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.skill.lua (original)
+++ trunk/data/lua/lib.skill.lua Thu Aug  2 03:19:56 2007
@@ -323,134 +323,6 @@
 	end
 end
 =

--- update the aos stats display
-function UpdateStatusAos ()
-	if gStatusAosDialog then
-		gStatusAosDialog:UpdateStats()
-	end
-end
-
-
-		=

--- toggles the display of the extended aos stats
-gStatusAosDialog_LastPositionX =3D nil
-gStatusAosDialog_LastPositionY =3D nil
-function ToggleStatusAos ()
-	if (gStatusAosDialog) then
-		-- store current positoin
-		gStatusAosDialog_LastPositionX, gStatusAosDialog_LastPositionY =3D gStat=
usAosDialog.rootwidget.gfx:GetPos()
-		-- and close
-		gStatusAosDialog:Close()
-	else
-		-- request stats update of player body
-		if gPlayerBodySerial then Send_ClientQuery(gRequest_States,gPlayerBodySe=
rial) end
-	=

-		gStatusAosDialog =3D CreateGumpDlgFromGfm(datapath.."gfm/status_aos.gfm")
-
-		-- restore last positoin if available
-		if gStatusAosDialog_LastPositionX and gStatusAosDialog_LastPositionY the=
n gStatusAosDialog.rootwidget.gfx:SetPos(gStatusAosDialog_LastPositionX, gS=
tatusAosDialog_LastPositionY) end
-		=

-		-- init StatusAos dialog
-		local dialog =3D gStatusAosDialog
-		dialog.Close =3D function (dialog)
-			gStatusAosDialog:Destroy()
-			gStatusAosDialog =3D nil
-		end
-		dialog.onMouseDown =3D function (widget,mousebutton)
-			if (mousebutton =3D=3D 2) then widget.dialog:Close() end
-			if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.StartMo=
veDialog(widget.dialog.rootwidget) end
-		end
-	=

-		--[[
-		stats.char_sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Fe=
male
-		stats.char_gold		=3D input:PopNetUint32()
-		stats.char_armorC	=3D input:PopNetUint16() -- resistPhysical (old client=
s: AC).
-		stats.char_curWeight=3D input:PopNetUint16()
-		stats.char_maxWeight =3D input:PopNetUint16()
-		stats.char_race		 =3D input:PopNetUint8()
-		stats.char_statcap	=3D input:PopNetUint16()		-- The character's total al=
lowable sum of Strength, Intelligence, and Dexterity
-		stats.char_curPet	=3D input:PopNetUint8()			=

-		stats.char_maxPet	=3D input:PopNetUint8()
-		stats.char_fireresist	=3D input:PopNetUint16()			=

-		stats.char_coldresist	=3D input:PopNetUint16()			=

-		stats.char_poisonresist	=3D input:PopNetUint16()			=

-		stats.char_energyresist	=3D input:PopNetUint16()			=

-		stats.char_minDamage	=3D input:PopNetUint16()			=

-		stats.char_maxDamage	=3D input:PopNetUint16()			=

-		stats.char_tithing		=3D input:PopNetUint32()		=

-		]]--		=

-
-				-- stats update function
-		dialog.UpdateStats =3D function (dialog)
-			if gPlayerBodySerial and gMobiles then
-				local m =3D gMobiles[gPlayerBodySerial]
-				if m and m.stats then
-					local s =3D m.stats
-					=

-					local l =3D {	char_str =3D "status_str", char_dex =3D "status_dex", c=
har_int =3D "status_int",
-								currentHitpoints =3D "status_hits", maxHitpoints =3D "status_maxhi=
ts",
-								char_curMana =3D "status_mana", char_maxMana =3D "status_maxmana",
-								char_curSta =3D "status_stamina", char_maxSta =3D "status_maxstami=
na",
-								char_luck =3D "status_luck", char_gold =3D "status_gold",
-								char_armorC =3D "status_armor", char_statcap =3D "status_statcap",=
 char_fireresist =3D "status_fireres",
-								char_coldresist =3D "status_coldres", char_poisonresist =3D "statu=
s_poisres",
-								char_energyresist =3D "status_energres" }
-					=

-					-- set all textfields (single)
-					for k,v in pairs(l) do
-						if s[k] then dialog.controls[v].gfx:SetText(s[k])
-						else dialog.controls[v].gfx:SetText("?") end =

-					end
-
-					local r,g,b =3D GetNotorietyColor(m.notoriety)
-			=

-					-- set name
-					if m.name then dialog.controls["status_name"].gfx:SetCharHeight(16) d=
ialog.controls["status_name"].gfx:SetColour({r,g,b,1.0}) dialog.controls["s=
tatus_name"].gfx:SetText(m.name)
-					else dialog.controls["status_name"].gfx:SetText("?") end
-
-					-- multi part textfields, like "10 / 20"
-					-- pets
-					if s["char_curPet"] and s["char_maxPet"] then =

-						dialog.controls["status_pets"].gfx:SetText(s["char_curPet"].."/"..s[=
"char_maxPet"]) =

-					else dialog.controls["status_pets"].gfx:SetText("?") end =

-					-- damage
-					if s["char_minDamage"] and s["char_maxDamage"] then =

-						dialog.controls["status_minmaxdamage"].gfx:SetText(s["char_minDamage=
"].."-"..s["char_maxDamage"]) =

-					else dialog.controls["status_minmaxdamage"].gfx:SetText("?") end =

-					-- weight
-					if s["char_curWeight"] then =

-						if s["char_maxWeight"] then =

-							-- max weight given
-							dialog.controls["status_weight"].gfx:SetText(s["char_curWeight"])
-							dialog.controls["status_maxweight"].gfx:SetText(s["char_maxWeight"])
-						else =

-							-- no maxweight present
-							dialog.controls["status_weight"].gfx:SetText(s["char_curWeight"]) =

-							-- hardcoded fallback: 40 + floor(str*35/10)
-							dialog.controls["status_maxweight"].gfx:SetText(""..
-								(40 + math.floor(s["char_str"]*35/10)))
-						end
-					else dialog.controls["status_weight"].gfx:SetText("?") end =

-				end
-			end
-		end
-		=

-		-- handle mouse events
-		for k,v in pairs(dialog.childs) do v.mbIgnoreMouseOver =3D false end
-
--- SiENcE: ??? for what ??? commented out
---		local curparent =3D dialog.rootwidget
---		local x,y =3D 40,80
-		=

-		-- set stats
-		dialog:UpdateStats()
-		=

-		dialog.lStatusAos =3D {}
-	end
-end
-
-
-
 glQuickCastDialog =3D {}
 -- creates a quickcast button at the given position
 function CreateQuickCastButton (x,y,name,fun)

Modified: trunk/data/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.test.lua (original)
+++ trunk/data/lua/lib.test.lua Thu Aug  2 03:19:56 2007
@@ -1,4 +1,30 @@
 -- contains all sorts of tests for checking the runtime environment and de=
bugging
+
+-- april 2007
+function TestGuiSystem2_Init ()
+	--local dialog =3D gui.CreateDialog(300,100)
+	--local w1 =3D dialog:CreateImage("checker",0,0,100,100)
+	--local w2 =3D dialog:CreateText("blub",10,10)
+	--w1.mytext =3D "myimage"
+	--w2.mytext =3D "mytext"
+end
+function TestGuiSystem2_Step ()
+	local widget =3D gui.GetWidgetUnderMouse()
+	Client_SetBottomLine("TestGuiSystem2 WidgetUnderMouse : "..(widget and (w=
idget.mytext or "unknown") or "NONE"))
+end
+
+function TestGuiSystem3_Init()
+	--[[local gump =3D gGumpmanager.CreateGump( 40, 40 )
+	gump:addImage( 0, 0, 1, 0, 0 ) =

+	gump:addTiledImage( 0, 0, 150, 150, hex2num("0x588"), 0, 0 )
+	gump:addButton( 10, 10, hex2num("0x1589"), hex2num("0x158B"), hex2num("0x=
1589"), 1, 0, 0 )
+	gump:addText( 10, 30, "Bla blub", 1, 0, 0 )
+	gump:addBackground( 150, 100, 200, 25, hex2num("0xBB8"), 0, 0 )
+	gump:addImage( 60, 175, hex2num("0xD5"), 0, 0 )
+        gump:addTiledImage( 73, 175, 74, 14, hex2num("0xD6"), 0, 0 )
+        gump:addImage( 147, 175, hex2num("0xD7"), 0, 0 )
+        gump:addScrollbar( 60, 175, true, 100, hex2num("0xD8"), hex2num("0=
xD8"), 1, 0 )]]--
+end
 =

 function TestZLib()
 	local c =3D CreateFIFO()

Modified: trunk/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.util.lua (original)
+++ trunk/data/lua/lib.util.lua Thu Aug  2 03:19:56 2007
@@ -12,6 +12,12 @@
 	if (string.sub(line, -1) =3D=3D "\n" or string.sub(line, -1) =3D=3D "\r")=
 then line =3D string.sub(line,1,string.len(line)-1) end
 	return line
 end
+
+-- adds all fields from second to first, but does not overwrite fields tha=
t are already set
+function ArrayMergeToFirst (first,second) for k,v in pairs(second) do if (=
first[k] =3D=3D nil) then first[k] =3D v end end end
+
+-- shallow copy
+function CopyArray (arr) res =3D {} for k,v in pairs(arr) do res[k] =3D v =
end return res end
 =

 function countarr(arr) local c =3D 0 for k,v in pairs(arr) do c =3D c + 1 =
end return c end
 function isempty(arr) return not (next(arr)) end

Modified: trunk/data/lua/net/net.multi.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.multi.lua (original)
+++ trunk/data/lua/net/net.multi.lua Thu Aug  2 03:19:56 2007
@@ -297,3 +297,34 @@
 		end
 	end
 end
+
+
+
+-- Custom Multis - aka - Serverside Multis
+--X/Y of this packet is probably wrong. May be 2 Byte portions instead of =
1. Information was submitted and as of yet untested.
+-- OLD version from knut.. above is new version from trunk
+--[[
+function gPacketHandler.kPacket_Custom_House()	--0xD8
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local iPacketSize =3D input:PopNetUint16()
+	local compresstype =3D input:PopNetUint8()	-- (0=3Dnothing, 3=3Dzlib)
+	local unknown1 =3D input:PopNetUint8()
+	local multiserial =3D input:PopNetUint32()
+	local revision =3D input:PopNetUint32()
+	local itemcount =3D input:PopNetUint16()
+	local bufferlen =3D input:PopNetUint16()			-- item list (Number of tiles =
* 5), compressed
+
+	printf("NET: Custom_House: iPacketSize=3D0x%04x compresstype=3D%i unknown=
1=3D0x%02x multiserial=3D0x%08x revision=3D0x%08x itemcount=3D%i buffer=3D%=
i\n",
+			iPacketSize, compresstype, unknown1, multiserial, revision, itemcount, =
buffer)
+	=

+	for i =3D 1, tilenum do
+		local newitem =3D {}
+		newitem.artid =3D input:PopNetUint16()
+		newitem.xloc =3D input:PopNetUint8()
+		newitem.yloc =3D input:PopNetUint8()
+		newitem.zloc =3D input:PopNetUint8()
+		printdebug("NET", "Custom_House: artid=3D0x%04x locx=3D%i locy=3D%i locz=
=3D%i\n", newitem.artid, newitem.xloc, newitem.yloc, newitem.zloc)
+	end
+end
+]]--

Modified: trunk/data/lua/net/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.uodragdrop.lua (original)
+++ trunk/data/lua/net/net.uodragdrop.lua Thu Aug  2 03:19:56 2007
@@ -1,6 +1,6 @@
 -- Equip Item Request   (answer is 0x2E, see also 0x78). 0x13
 function Send_Equip_Item_Request(serial,layer,player_serial)
-	print("NET: Send_Equip_Item_Request:",sprintf("0x%08x",serial),layer,play=
er_serial)
+	printdebug("NET","NET: Send_Equip_Item_Request:",sprintf("0x%08x",serial)=
,layer,player_serial)
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Equip_Item_Request)
 	out:PushNetUint32(serial)
@@ -22,7 +22,7 @@
 -- This is sent by the client when the player drops an item. 0x08
 -- containerid =3D 0xFFFFFFFF  when the container is the ground
 function Send_Drop_Object(serial,x,y,z,containerid)
-	print("NET: Send_Drop_Object:",sprintf("0x%08x",serial),x,y,z,containerid)
+	printdebug("NET","NET: Send_Drop_Object:",sprintf("0x%08x",serial),x,y,z,=
containerid)
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Drop_Object)
 	out:PushNetUint32(serial)
@@ -45,14 +45,13 @@
 	if (reason =3D=3D hex2num("0x03")) then reasontxt =3D "That item does not=
 belong to you. You will have to steal it." end
 	if (reason =3D=3D hex2num("0x04")) then reasontxt =3D "You are already ho=
lding an item." end
 	if (reason =3D=3D hex2num("0x05")) then =

-		reasontxt =3D "The item was destroyed."  -- TODO : no message ??
-		-- TODO : Destroy the item.
+		reasontxt =3D "The item was destroyed."
 	end
 	if (reason =3D=3D hex2num("0x06")) then -- No message.
 		reasontxt =3D false
 	end
-	print("NET : Get_Item_Failed",reasontxt)
-	CleanUpUODragDrop() -- server side cancel
+	printdebug("NET","NET : Get_Item_Failed",reasontxt)
+	CancelUODragDrop() -- server side cancel
 end
 =

 -- Clear Square or Drop Failed ? (servers response to 0x08 ?)
@@ -62,14 +61,13 @@
 	local xloc =3D input:PopNetUint16()
 	local yloc =3D input:PopNetUint16()
 	-- TODO ?
-	print("NET : Drop_Item_Failed")
+	printdebug("NET","NET : Drop_Item_Failed --> nothing todo?")
 end
 =

 -- Drop Item OK ? Paperdoll Clothing Added ? (servers response to 0x08 ?)
 function gPacketHandler.kPacket_Drop_Item_OK() -- 0x29
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	-- TODO ?
-	print("NET : Drop_Item_OK")
+	printdebug("NET","NET : Drop_Item_OK --> nothing todo?")
 end
  =




From no-reply at zwischenwelt.org  Wed Aug  1 20:57:15 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 18:57:15 -0000
Subject: [Iris-commit] [IRIS] r1314 - in /branches/knut/src: Makefile.am
 builder.cpp builder_L.cpp data.cpp data_L.cpp gfx3D.cpp gfx3D_L.cpp
 grannyogreloader.cpp grannyparser.cpp meshshape.cpp net.cpp net_L.cpp
 ogrewrapper.cpp scripting.cpp sound_fmod.cpp
Message-ID: <20070801185716.967ADB140B5@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 20:57:14 2007
New Revision: 1314

Log:
ported changes from trunk to knut/src branch, r 1031:1313

Modified:
    branches/knut/src/Makefile.am
    branches/knut/src/builder.cpp
    branches/knut/src/builder_L.cpp
    branches/knut/src/data.cpp
    branches/knut/src/data_L.cpp
    branches/knut/src/gfx3D.cpp
    branches/knut/src/gfx3D_L.cpp
    branches/knut/src/grannyogreloader.cpp
    branches/knut/src/grannyparser.cpp
    branches/knut/src/meshshape.cpp
    branches/knut/src/net.cpp
    branches/knut/src/net_L.cpp
    branches/knut/src/ogrewrapper.cpp
    branches/knut/src/scripting.cpp
    branches/knut/src/sound_fmod.cpp

Modified: branches/knut/src/Makefile.am
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/Makefile.am (original)
+++ branches/knut/src/Makefile.am Wed Aug  1 20:57:14 2007
@@ -1,6 +1,6 @@
-INCLUDES =3D -I/usr/include -I/opt/fmod/api/inc @OGRE_CFLAGS@ @lua50_CFLAG=
S@ @lualib50_CFLAGS@ @openal_CFLAGS@ @vorbisfile_CFLAGS@ $(OIS_CFLAGS)
+INCLUDES =3D -I/usr/include -I/usr/local/include/fmodex @OGRE_CFLAGS@ @lua=
50_CFLAGS@ @lualib50_CFLAGS@ @openal_CFLAGS@ @vorbisfile_CFLAGS@ $(OIS_CFLA=
GS)
 =

-irisogre_LDFLAGS=3D -L/opt/fmod/api -lfmod-3.75 -lSDL @OGRE_LIBS@ @lua50_L=
IBS@ @lualib50_LIBS@ @openal_LIBS@ @alut_LIBS@ @vorbisfile_LIBS@ $(OIS_LIBS)
+irisogre_LDFLAGS=3D -L/usr/local/lib -lfmodex -lSDL @OGRE_LIBS@ @lua50_LIB=
S@ @lualib50_LIBS@ @openal_LIBS@ @alut_LIBS@ @vorbisfile_LIBS@ $(OIS_LIBS)
 =

 noinst_PROGRAMS=3Dirisogre
 =


Modified: branches/knut/src/builder.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/builder.cpp (original)
+++ branches/knut/src/builder.cpp Wed Aug  1 20:57:14 2007
@@ -275,7 +275,7 @@
 =

 =

 /// WARNING ! changes size to 2^n where n >=3D 4
-bool	GenerateGumpMaterial	(cGumpLoader& oGumpLoader,const char* szMatName,=
const int iID,const bool bHasAlpha,cHueLoader* pHueLoader,short iHue) { PRO=
FILE
+bool	GenerateGumpMaterial	(cGumpLoader& oGumpLoader,const char* szMatName,=
const int iID,const bool bHasAlpha,cHueLoader* pHueLoader,const short iHue)=
 { PROFILE
 	cGump *gump =3D oGumpLoader.GetGump(iID);
 	if (gump =3D=3D 0) return false;
 	int iImgW =3D gump->GetWidth();
@@ -287,7 +287,6 @@
 		while (iTexW < iImgW) iTexW <<=3D 1;
 		while (iTexH < iImgH) iTexH <<=3D 1;
 	}
-
 	short *pImgRaw =3D new short[iTexW*iTexH] ;
 	memset(pImgRaw,0,2*iTexW*iTexH);
 	if( iHue && pHueLoader ) {
@@ -547,24 +546,41 @@
 }*/
 =

 Ogre::FontPtr	GenerateUniFont	(cUniFontFileLoader& oUniFontFileLoader, con=
st char *szName, =

+	const int code_first, const int code_last,
 	const float letter_r, const float letter_g, const float letter_b, const f=
loat letter_a,
 	const float border_r, const float border_g, const float border_b, const f=
loat border_a,
 	const float free_r, const float free_g, const float free_b, const float f=
ree_a){ PROFILE
+
+	int first =3D code_first,last =3D code_last;
+
+	// borders
+	if(first < 0)first =3D 0;
+	if(last >=3D oUniFontFileLoader.GetLetterNumbers())last =3D oUniFontFileL=
oader.GetLetterNumbers() - 1;
+	if(last < first)last =3D first;
+	=

+	// number of letters to load
+	unsigned int letters =3D last - first + 1;
+
+	std::map<int,Ogre::Rectangle> lCache;
+
 	// max letter size (without border space)
 	unsigned int maxw =3D oUniFontFileLoader.GetMaxWidth();
 	unsigned int maxh =3D oUniFontFileLoader.GetMaxHeight();
 	// size + border (fontborder and freepixel)
-	unsigned int letw =3D maxw + 6 + 2;
-	unsigned int leth =3D maxh + 6 + 2;
+	// 6 + 2
+	unsigned int letw =3D maxw + 4;
+	unsigned int leth =3D maxh + 4;
 	// offset to the start of maxletter size
 	unsigned int letx =3D 4;
 	unsigned int lety =3D 4;
 	// size of the texture that stores all letter images (2^n)
 	unsigned int texw =3D 1;
 	unsigned int texh =3D 1;
-	// 16*16 is enough space to store all 255 letters
-	texw =3D Ogre::Bitwise::firstPO2From(letw * 16);
-	texh =3D Ogre::Bitwise::firstPO2From(leth * 16);
+	// OBSOLETE 16*16 is enough space to store all 255 letters
+	//int size =3D sqrt(float(oUniFontFileLoader.GetLetterNumbers())*oUniFont=
FileLoader.GetLetterUsage());
+	int size =3D mymax(letw,leth) * sqrt(float(letters));
+	texw =3D Ogre::Bitwise::firstPO2From(size);
+	texh =3D Ogre::Bitwise::firstPO2From(size);
 	=

 	// imagebuffer
 	unsigned int buffersize =3D Ogre::PixelUtil::getMemorySize(texw,texh,1,Og=
re::PF_A4R4G4B4);
@@ -587,58 +603,81 @@
 	const RawUniFontFileLetterHeader *hd;
 	const char *data;
 =

-	for(int i =3D 0;i < cUniFontFileLoader::kLetterNumbers; ++i){
-		//printf("posx=3D%d posy=3D%d texw=3D%d texh=3D%d\n",posx,posy,texw,texh=
);
+	for(int i =3D first;i <=3D last; ++i){
+		//if(i % 10 =3D=3D 0 || i =3D=3D first || i =3D=3D last)printf("[%05.1f%=
%] code=3D%d posx=3D%d posy=3D%d texw=3D%d texh=3D%d\n",100.0*float(i - cod=
e_first)/float(letters),i,posx,posy,texw,texh);
 =

 		// get letter data
 		hd =3D oUniFontFileLoader.GetLetterHeader(i);
 		data =3D oUniFontFileLoader.GetLetterData(i);
 =

-		// iterator over all pixels (letw,leth)
-		for(int x =3D 0;x < letw; ++x)
-		for(int y =3D 0;y < leth; ++y){
-			// calculate letter space to letter data buffer space
-			int dx =3D x - letx - hd->miXOffset;
-			int dy =3D y - lety - hd->miYOffset;
-			// calc position of the pixel in the image buffer
-			int ix =3D posx + x;
-			int iy =3D posy + y;
-			// read out pixel
-			float r,g,b,a;
+		//printf("check letter %i at %x\n",i,data);
+
+		// skip if invalid offset
+		if(data =3D=3D 0)continue;
+
+		// letter already rendered?
+		if(lCache.find(int(data)) =3D=3D lCache.end()){
+			// decode letter and store in image
+
+			// iterator over all pixels (letw,leth)
+			for(int x =3D 0;x < letw; ++x)
+			for(int y =3D 0;y < leth; ++y){
+				// calculate letter space to letter data buffer space
+				int dx =3D x - letx - hd->miXOffset;
+				int dy =3D y - lety - hd->miYOffset;
+				// calc position of the pixel in the image buffer
+				int ix =3D posx + x;
+				int iy =3D posy + y;
+				// read out pixel
+				float r,g,b,a;
+				=

+				if(cUniFontFileLoader::IsPixelBorder(data,hd->miWidth,hd->miHeight,dx,=
dy)){
+					r =3D border_r; g =3D border_g; b =3D border_b; a =3D border_a;
+				} else if(cUniFontFileLoader::IsPixelVisible(data,hd->miWidth,hd->miHe=
ight,dx,dy)){
+					r =3D letter_r; g =3D letter_g; b =3D letter_b; a =3D letter_a;
+				} else {
+					r =3D free_r; g =3D free_g; b =3D free_b; a =3D free_a;
+				}
+				=

+				// store color in image
+				Ogre::PixelUtil::packColour(r,g,b,a,Ogre::PF_A4R4G4B4,&p[ix + iy*texw]=
);			=

+			}
 			=

-			if(cUniFontFileLoader::IsPixelBorder(data,hd->miWidth,hd->miHeight,dx,d=
y)){
-				r =3D border_r; g =3D border_g; b =3D border_b; a =3D border_a;
-			} else if(cUniFontFileLoader::IsPixelVisible(data,hd->miWidth,hd->miHei=
ght,dx,dy)){
-				r =3D letter_r; g =3D letter_g; b =3D letter_b; a =3D letter_a;
-			} else {
-				r =3D free_r; g =3D free_g; b =3D free_b; a =3D free_a;
-			}
+			// left and right borders of the letter in pixels
+			int l =3D posx + letx + hd->miXOffset - 1;
+			int r =3D posx + letx + hd->miXOffset + hd->miWidth + 1;
 			=

-			// store color in image
-			Ogre::PixelUtil::packColour(r,g,b,a,Ogre::PF_A4R4G4B4,&p[ix + iy*texw])=
;			=

-		}
-		=

-		// left and right borders of the letter in pixels
-		int l =3D posx + letx + hd->miXOffset - 2;
-		int r =3D posx + letx + hd->miXOffset + hd->miWidth + 2;
-		=

-		// set glyphe text coords
-		float u1 =3D float(l)/float(texw);
-		float v1 =3D float(posy + lety - 2)/float(texh);
-		float u2 =3D float(r)/float(texw);
-		float v2 =3D float(posy + lety + maxh + 2)/float(texh);
-		font->setGlyphTexCoords(i,u1,v1,u2,v2,float(texw)/float(texh));  =

-		=

-		//printf("%c: u1=3D%f v1=3D%f u2=3D%f v2=3D%f\n",i,u1,v1,u2,v2);
-		//printf("   u1=3D%f v1=3D%f u2=3D%f v2=3D%f\n",u1*float(texw),v1*float(=
texh),u2*float(texw),v2*float(texh));
-		//printf("   h=3D%d\n",int((v2-v1)*float(texh)));
-		=

-		// move window in texture to next free space
-		posx +=3D letw;
-		if(posx + letw >=3D texw){
-			// oki one line is full, so move the window to the next
-			posx =3D 0;
-			posy +=3D leth;
+			// set glyphe text coords
+			float u1 =3D float(l)/float(texw);
+			float v1 =3D float(posy + lety - 1)/float(texh);
+			float u2 =3D float(r)/float(texw);
+			float v2 =3D float(posy + lety + maxh + 1)/float(texh);
+			font->setGlyphTexCoords(i,u1,v1,u2,v2,float(texw)/float(texh));  =

+			=

+			//printf("%c: u1=3D%f v1=3D%f u2=3D%f v2=3D%f\n",i,u1,v1,u2,v2);
+			//printf("   u1=3D%f v1=3D%f u2=3D%f v2=3D%f\n",u1*float(texw),v1*float=
(texh),u2*float(texw),v2*float(texh));
+			//printf("   h=3D%d\n",int((v2-v1)*float(texh)));
+			=

+			// move window in texture to next free space
+			posx +=3D letw;
+			if(posx + letw >=3D texw){
+				// oki one line is full, so move the window to the next
+				posx =3D 0;
+				posy +=3D leth;
+			}
+
+			// store generated rect under data pointer in cache
+			{
+				Ogre::Rectangle r;
+				r.left =3D u1;r.right =3D u2;
+				r.top =3D v1;r.bottom =3D v2;
+				lCache[int(data)] =3D r;
+			}
+		} else {
+			// use already written part if the image
+			Ogre::Rectangle r(lCache.find(int(data))->second);
+			// set glyphe text coords
+			font->setGlyphTexCoords(i,r.left,r.top,r.right,r.bottom,float(texw)/flo=
at(texh));
 		}
 	}
 =

@@ -648,10 +687,13 @@
 	=

 	//img.resize(texw*2,texh*2,Ogre::Image::FILTER_NEAREST);
 	=

-	=

 	// save on disk
-	//std::string filename =3D std::string(szName) + std::string(".png");
-	//img.save(filename);
+	/*
+	printf("save image...\n");
+	std::string filename =3D std::string(szName) + std::string(".png");
+	img.save(filename);
+	printf("done\n");
+	*/
 	=

 	// generate texture name from the fontname
 	std::string sTexName =3D std::string(szName) + std::string("_tex");

Modified: branches/knut/src/builder_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/builder_L.cpp (original)
+++ branches/knut/src/builder_L.cpp Wed Aug  1 20:57:14 2007
@@ -141,6 +141,7 @@
 			REGISTER_METHOD(Build);
 			REGISTER_METHOD(AddEntity);
 			REGISTER_METHOD(SetVisible);
+			REGISTER_METHOD(SetCastShadows);
 			#undef REGISTER_METHOD
 		}
 =

@@ -153,6 +154,14 @@
 		=

 	// object methods exported to lua
 =

+		=

+		/// void		SetCastShadows		(bool shadow)
+		static int		SetCastShadows		(lua_State *L) { PROFILE
+			Ogre::StaticGeometry* pOgreStaticGeom =3D checkudata_alive(L)->mpOgreSt=
aticGeom;
+			if (pOgreStaticGeom) pOgreStaticGeom->setCastShadows(lua_toboolean(L,2)=
);
+			return 0;
+		}
+		=

 		static int	Destroy		(lua_State *L) { PROFILE delete checkudata_alive(L);=
 return 0; }
 		static int	Build		(lua_State *L) { PROFILE checkudata_alive(L)->Build();=
 return 0; }
 		=


Modified: branches/knut/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/data.cpp (original)
+++ branches/knut/src/data.cpp Wed Aug  1 20:57:14 2007
@@ -592,7 +592,15 @@
 =

 cHueLoader	::cHueLoader	(const char* szDataFile) : cFullFileLoader(szDataF=
ile) {}
 	=

+int		cHueLoader::GetMaxHueID		() { =

+	// miFullFileSize =3D 265500
+	int eightblocks =3D (miFullFileSize - 4) / 708; // (265500 - 4) / 708 =3D=
 374.99...
+	int singles =3D ((miFullFileSize - 4) - 708*eightblocks) / 88;// ((265500=
 - 4) - 708*374)/ 88 =3D 704 / 88 =3D 8
+	return eightblocks*8 + singles; // 374*8 + 8 =3D 3000
+}
+
 cHue*	cHueLoader	::GetHue	(const int iID){
+	if (iID < 0 || iID >=3D GetMaxHueID()) return GetHue(0); // illegal hue a=
sked
 	mLastHue.miID =3D iID;
 	mLastHue.mpRawData =3D mpFullFileBuffer+((((8*88)+4)*(iID/8)) + 4 + (88*(=
iID%8)));
 	return &mLastHue;
@@ -819,6 +827,19 @@
 	*/
 }
 =

+const int cUniFontFileLoader::GetLetterNumbers(){return 0xFFFF;}
+const float cUniFontFileLoader::GetLetterUsage(){
+	std::map<int,int> lCache;
+	for(int i=3D0;i<GetLetterNumbers();++i){
+		int data =3D int(GetLetterData(i));
+		if(lCache.find(data) =3D=3D lCache.end())lCache[data] =3D 1;
+		else lCache[data] =3D lCache[data] + 1;
+	}
+	float usage =3D float(lCache.size()) / float(GetLetterNumbers());
+	printf("usage=3D%f.2\n",usage);
+	return usage;
+}
+
 RawUniFontFileLetterHeader* cUniFontFileLoader::GetLetterHeader	(const uns=
igned int iCode){ PROFILE
 	// read out offset of letter header
 	int32 offset =3D ((int32 *)(mpFullFileBuffer))[iCode];
@@ -830,10 +851,8 @@
 }
 =

 const char* cUniFontFileLoader::GetLetterData	(const unsigned int iCode){ =
PROFILE
-	// read out offset of letter header
-	uint32 offset =3D *((uint32 *)(mpFullFileBuffer + iCode*4));
-	// valid?
-	if(offset + sizeof(RawUniFontFileLetterHeader) < miFullFileSize)return mp=
FullFileBuffer + offset + sizeof(RawUniFontFileLetterHeader);
+	char *p =3D (char *)GetLetterHeader(iCode);
+	if(p)return p + sizeof(RawUniFontFileLetterHeader);
 	else return 0;
 }
 =

@@ -844,7 +863,7 @@
 char cUniFontFileLoader::GetMaxWidth(){ PROFILE
 	char m =3D 0;
 	const RawUniFontFileLetterHeader *h;
-	for(unsigned char i =3D 0;i < kLetterNumbers; ++i){
+	for(unsigned int i =3D 0;i < GetLetterNumbers(); ++i){
 		h =3D GetLetterHeader(i);
 		if(h){
 			// size
@@ -861,7 +880,7 @@
 char cUniFontFileLoader::GetMaxHeight(){ PROFILE
 	char m =3D 0;
 	const RawUniFontFileLetterHeader *h;
-	for(unsigned char i =3D 0;i < kLetterNumbers; ++i){
+	for(unsigned int i =3D 0;i < GetLetterNumbers(); ++i){
 		h =3D GetLetterHeader(i);
 		if(h){
 			// size

Modified: branches/knut/src/data_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/data_L.cpp (original)
+++ branches/knut/src/data_L.cpp Wed Aug  1 20:57:14 2007
@@ -134,6 +134,7 @@
 			REGISTER_METHOD(GetMaxWidth);
 			REGISTER_METHOD(GetMaxHeight);
 			REGISTER_METHOD(CountLetters);
+			REGISTER_METHOD(GetDefaultHeight);
 			REGISTER_METHOD(CreateOgreFont);
 			#undef REGISTER_METHOD
 		}
@@ -152,7 +153,8 @@
 		static int	Destroy				(lua_State *L) { PROFILE delete checkudata_alive(L=
); return 0; }
 		static int	GetMaxWidth			(lua_State *L) { PROFILE lua_pushnumber(L,check=
udata_alive(L)->GetMaxWidth()); return 1; }
 		static int	GetMaxHeight		(lua_State *L) { PROFILE lua_pushnumber(L,check=
udata_alive(L)->GetMaxHeight()); return 1; }	=

-		static int	CountLetters		(lua_State *L) { PROFILE lua_pushnumber(L,cUniF=
ontFileLoader::kLetterNumbers); return 1; }	=

+		static int	GetDefaultHeight	(lua_State *L) { PROFILE lua_pushnumber(L,ch=
eckudata_alive(L)->GetMaxHeight()+2); return 1; }	=

+		static int	CountLetters		(lua_State *L) { PROFILE lua_pushnumber(L,check=
udata_alive(L)->GetLetterNumbers()); return 1; }	=

 		=

 		/// for lua  xoffset,yoffset,w,h		GetLetterHeader		(code)
 		static int	GetLetterHeader				(lua_State *L) { PROFILE =

@@ -160,6 +162,7 @@
 			if (!target) return 0;
 			=

 			RawUniFontFileLetterHeader *h =3D target->GetLetterHeader(luaL_checkint=
(L,2));
+			if (!h) return 0;
 =

 			lua_pushnumber(L,h->miXOffset);
 			lua_pushnumber(L,h->miYOffset);
@@ -173,9 +176,10 @@
 			cUniFontFileLoader* target =3D checkudata_alive(L);
 			if (!target) return 0;
 			=

-			const char *szFontName =3D luaL_checkstring(L,2);
-			=

-			GenerateUniFont(*target,szFontName);
+			std::string sFontName =3D luaL_checkstring(L,2);
+			=

+			// load only ascii atm
+			GenerateUniFont(*target,sFontName.c_str(),0,255);
 			=

 			return 0; =

 		}	=

@@ -654,7 +658,7 @@
 		static int	GetStatic		(lua_State *L) { PROFILE =

 			cStaticBlock* pLastBlock =3D mLastBlock[checkudata_alive(L)];
 			int i =3D luaL_checkint(L,2);
-			if (!pLastBlock || i < 0 || i > pLastBlock->Count()) return 0;
+			if (!pLastBlock || i < 0 || i >=3D pLastBlock->Count()) return 0;
 			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miTileID); =

 			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miX); =

 			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miY); =


Modified: branches/knut/src/gfx3D.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/gfx3D.cpp (original)
+++ branches/knut/src/gfx3D.cpp Wed Aug  1 20:57:14 2007
@@ -394,6 +394,13 @@
 	if (mpParticleSystem) Clear();
 	mpParticleSystem =3D cOgreWrapper::GetSingleton().mSceneMgr->createPartic=
leSystem(cOgreWrapper::GetSingleton().GetUniqueName(),szTemplateName);
 	AttachObject(mpParticleSystem);
+}
+
+const unsigned int	cGfx3D::GetNumParticles	()	{ PROFILE
+	if (!mpSceneNode) return 0;
+	if (!mpParticleSystem) return 0;
+	=

+	return mpParticleSystem->getNumParticles();
 }
 =

 =


Modified: branches/knut/src/gfx3D_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/gfx3D_L.cpp (original)
+++ branches/knut/src/gfx3D_L.cpp Wed Aug  1 20:57:14 2007
@@ -76,6 +76,7 @@
 			REGISTER_METHOD(RenderableVertex);
 			REGISTER_METHOD(RenderableIndex);
 			REGISTER_METHOD(RenderableIndex3);
+			REGISTER_METHOD(RenderableIndex2);
 			REGISTER_METHOD(RenderableEnd);
 			REGISTER_METHOD(RenderableSkipVertices);
 			REGISTER_METHOD(RenderableSkipIndices);
@@ -84,9 +85,11 @@
 			REGISTER_METHOD(SetCastShadows);
 			=

 			REGISTER_METHOD(SetParticleSystem);
+			REGISTER_METHOD(SetParticleSystem);
 			REGISTER_METHOD(ParticleSystem_FastForward);
 			REGISTER_METHOD(ParticleSystem_SetNonVisibleUpdateTimeout);
 			REGISTER_METHOD(ParticleSystem_SetSpeedFactor);
+			REGISTER_METHOD(ParticleSystem_GetNumParticles);
 			=

 			REGISTER_METHOD(SetForcePosCam);
 			REGISTER_METHOD(SetForceRotCam);
@@ -390,6 +393,12 @@
 			Ogre::ParticleSystem* target =3D checkudata_alive(L)->mpParticleSystem;
 			if (target) target->setSpeedFactor(luaL_checknumber(L, 2));
 			return 0;
+		}
+		=

+		/// int			ParticleSystem_GetNumParticles			()
+		static int		ParticleSystem_GetNumParticles			(lua_State *L) { PROFILE
+			lua_pushnumber(L,checkudata_alive(L)->GetNumParticles());
+			return 1;
 		}
 		=

 		/// void		SetMesh			(udata_obj obj, string meshname=3D"razor.mesh")
@@ -513,12 +522,20 @@
 			return 0;
 		}
 =

-		/// must be called between RenderableBegin and RenderableEnd
+		/// must be called between RenderableBegin and RenderableEnd, useful for=
 triangles
 		/// void		RenderableIndex3		(iIndex,iIndex,iIndex)
 		static int		RenderableIndex3		(lua_State *L) { PROFILE
 			checkudata_alive(L)->mpSimpleRenderable->Index(luaL_checkint(L,2));
 			checkudata_alive(L)->mpSimpleRenderable->Index(luaL_checkint(L,3));
 			checkudata_alive(L)->mpSimpleRenderable->Index(luaL_checkint(L,4));
+			return 0;
+		}
+
+		/// must be called between RenderableBegin and RenderableEnd, useful for=
 lines
+		/// void		RenderableIndex2		(iIndex,iIndex)
+		static int		RenderableIndex2		(lua_State *L) { PROFILE
+			checkudata_alive(L)->mpSimpleRenderable->Index(luaL_checkint(L,2));
+			checkudata_alive(L)->mpSimpleRenderable->Index(luaL_checkint(L,3));
 			return 0;
 		}
 		=


Modified: branches/knut/src/grannyogreloader.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/grannyogreloader.cpp (original)
+++ branches/knut/src/grannyogreloader.cpp Wed Aug  1 20:57:14 2007
@@ -52,14 +52,16 @@
 =

 =

 class cSubMeshConstructor { public:
+	int					miCurrentSubMesh;
+	int					miTargetSubMesh;
 	cGrannyLoader_i2*	mpGrannyLoader;
 	Ogre::MeshPtr&		mpMesh;
 	Ogre::SkeletonPtr&	mpSkeleton;
 	std::string			msMatName;
 	std::map<int,int>	mWeightBoneIndexMap; ///< caches WeightBoneIndex2OgreBo=
neHandle results
 			=

-	cSubMeshConstructor	(cGrannyLoader_i2* pGrannyLoader,Ogre::MeshPtr& mpMes=
h,Ogre::SkeletonPtr& mpSkeleton,const char* szMatName)
-		: mpGrannyLoader(pGrannyLoader), mpMesh(mpMesh), mpSkeleton(mpSkeleton),=
 msMatName(szMatName) {}
+	cSubMeshConstructor	(cGrannyLoader_i2* pGrannyLoader,Ogre::MeshPtr& mpMes=
h,Ogre::SkeletonPtr& mpSkeleton,const char* szMatName,const int miTargetSub=
Mesh)
+		: mpGrannyLoader(pGrannyLoader), mpMesh(mpMesh), mpSkeleton(mpSkeleton),=
 msMatName(szMatName), miCurrentSubMesh(0), miTargetSubMesh(miTargetSubMesh=
) {}
 	=

 	/// translate weightindex to bone index using info from 0xCA5E0c0a (only =
in models, not in anims)
 	inline int		WeightBoneIndex2GrannyBoneID	(int iWeightBoneIndex) { PROFILE
@@ -110,6 +112,10 @@
 		// detect empty submesh
 		if (pLoaderSubMesh.mPolygons.second =3D=3D 0) return;
 			=

+		=

+		++miCurrentSubMesh;
+		if (miCurrentSubMesh - 1 !=3D miTargetSubMesh) return; // multiple subme=
shes not yet supported
+		=

 		/// if there was only one set of texcoord-or-color data, then it must ha=
ve been texcoords
 		if (!pLoaderSubMesh.mTexCoords.first && pLoaderSubMesh.mColors.first) {
 			pLoaderSubMesh.mTexCoords =3D pLoaderSubMesh.mColors;
@@ -126,7 +132,7 @@
 		printf("mColors =3D %#08x %d\n",(int)pLoaderSubMesh.mColors.first,pLoade=
rSubMesh.mColors.second);
 		printf("mTexCoords =3D %#08x %d\n",(int)pLoaderSubMesh.mTexCoords.first,=
pLoaderSubMesh.mTexCoords.second);
 		printf("mPolygons =3D %#08x %d\n",(int)pLoaderSubMesh.mPolygons.first,pL=
oaderSubMesh.mPolygons.second);
-		*/
+		//*/
 		=

 		=

 		// TODO : collect combos for single indices
@@ -351,6 +357,8 @@
 		if (pGrannyLoader->mSubMeshes[i].mPolygons.second > 0) bIsEmptyMesh =3D =
false;
 	}
 	=

+	//printf("LoadGrannyAsOgreMesh %s, submesh=3D%d\n",pGrannyLoader->mGranny=
.msFilePath.c_str(),pGrannyLoader->mSubMeshes.size());
+	=

 	// don't construct empty meshes
 	if (bIsEmptyMesh) return false;
 		=

@@ -375,7 +383,7 @@
 	}
 		=

 	//printf("cGrannyVisitor_OgreLoader::ConstructSubMeshes %d submeshes foun=
d\n",pGrannyLoader->mSubMeshes.size());
-	std::for_each(pGrannyLoader->mSubMeshes.begin(),pGrannyLoader->mSubMeshes=
.end(),cSubMeshConstructor(pGrannyLoader,pMesh,pSkeleton,szMatName));
+	std::for_each(pGrannyLoader->mSubMeshes.begin(),pGrannyLoader->mSubMeshes=
.end(),cSubMeshConstructor(pGrannyLoader,pMesh,pSkeleton,szMatName,0));
 	=

 			=

 	//Pose * 	Mesh::createPose (ushort target, const String &name=3DStringUti=
l::BLANK)
@@ -400,13 +408,14 @@
 =

 /// constructs the animation and the bones used by it
 class cAnimationConstructor { public:
+	int					miCurrentSubMesh;
 	std::vector<cGrannyLoader_i2*>& mlBodySamples;
 	cGrannyLoader_i2*	mpGrannyLoader;
 	Ogre::SkeletonPtr&	mpSkeleton;
 	Ogre::Animation* 	mpAnim;
 	int					miAnimDataCounter;
 	cAnimationConstructor	(cGrannyLoader_i2* pGrannyLoader,Ogre::SkeletonPtr&=
 mpSkeleton,Ogre::Animation* mpAnim,std::vector<cGrannyLoader_i2*> &mlBodyS=
amples)
-		: mpGrannyLoader(pGrannyLoader), mpSkeleton(mpSkeleton), mpAnim(mpAnim),=
 mlBodySamples(mlBodySamples), miAnimDataCounter(0) {}
+		: mpGrannyLoader(pGrannyLoader), mpSkeleton(mpSkeleton), mpAnim(mpAnim),=
 mlBodySamples(mlBodySamples), miAnimDataCounter(0), miCurrentSubMesh(0) {}
 	=

 	/// param must be lowercased
 	const GrannyBone* GetSampleBone	(const std::string& sBoneName) {
@@ -505,6 +514,10 @@
 	=

 	/// constructs the animation
 	void	operator ()	(cGrannyLoader_i2::cAnim& pAnim) {
+		=

+		//printf("cAnimationConstructor::miCurrentSubMesh =3D %d\n",miCurrentSub=
Mesh);
+		++miCurrentSubMesh;
+		=

 		int iCurAnimDataNum =3D miAnimDataCounter++;
 		int iCurBoneNum =3D mpGrannyLoader->FindBone(mpGrannyLoader->GetBoneName=
2(pAnim.mpAnim->iID-1));
 		Ogre::Bone* pBone =3D GetOrCreateBone(iCurBoneNum);
@@ -678,6 +691,9 @@
 };
 =

 void	LoadGrannyAsOgreAnim	(cGrannyLoader_i2* pGrannyLoader, const char* sz=
SkeletonName,const char* szAnimName,std::vector<cGrannyLoader_i2*> &lBodySa=
mples) {
+	=

+	//printf("LoadGrannyAsOgreAnim %s\n",pGrannyLoader->mGranny.msFilePath.c_=
str());
+	=

 	Ogre::SkeletonPtr pSkeleton =3D Ogre::SkeletonManager::getSingleton().loa=
d(szSkeletonName,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
 	if (pSkeleton.isNull()) return;
 	=


Modified: branches/knut/src/grannyparser.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/grannyparser.cpp (original)
+++ branches/knut/src/grannyparser.cpp Wed Aug  1 20:57:14 2007
@@ -230,7 +230,7 @@
 	return mlTypeNames[iType].c_str();
 }
 =

-cGranny::cGranny	(const char* szFilePath) {
+cGranny::cGranny	(const char* szFilePath) : msFilePath(szFilePath) {
 	//printf("cGranny(%s)\n",szFilePath);
 	std::ifstream myFileStream(szFilePath,std::ios_base::binary);
 	if (!myFileStream) throw GrannyLoadException(strprintf("cGranny::cGranny =
file not found : '%s'",szFilePath));

Modified: branches/knut/src/meshshape.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/meshshape.cpp (original)
+++ branches/knut/src/meshshape.cpp Wed Aug  1 20:57:14 2007
@@ -7,6 +7,11 @@
 using namespace Ogre;
 =

 std::map<std::string,MeshShape*>	gMeshShapeCache;
+
+void	UnloadMeshShape		(const char* szMeshName) {
+	MeshShape*& pShape =3D gMeshShapeCache[szMeshName];
+	if (pShape) { delete pShape; pShape =3D 0; }
+}
 =

 MeshShape*	MeshShape::GetMeshShape				(Ogre::Entity* pEntity) {
 	if (!pEntity) return 0;

Modified: branches/knut/src/net.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/net.cpp (original)
+++ branches/knut/src/net.cpp Wed Aug  1 20:57:14 2007
@@ -108,6 +108,21 @@
 =

 const bool	cConnection::IsConnected(){
 	return miSocket !=3D INVALID_SOCKET;
+}
+
+
+// resolves hostname to nummeric ip, 0 on error
+unsigned int cNet::GetHostByName	(const char *szHost) { PROFILE
+	// gethostbyname
+	hostent*		h;
+	h =3D gethostbyname(szHost);
+	if(h){
+		return *((uint32 *)h->h_addr);
+	} else if(inet_addr(szHost) !=3D INADDR_NONE){
+		return inet_addr(szHost);
+	} else {
+		return 0;
+	}
 }
 =

 /// outgoing connection

Modified: branches/knut/src/net_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/net_L.cpp (original)
+++ branches/knut/src/net_L.cpp Wed Aug  1 20:57:14 2007
@@ -17,7 +17,8 @@
 		virtual void RegisterMethods	(lua_State *L) { PROFILE
 			lua_register(L,"NetConnect",		&cConnection_L::NetConnect);
 			lua_register(L,"NetReadAndWrite",	&cConnection_L::NetReadAndWrite);
-			lua_register(L,"NtoA",				&cConnection_L::NtoA);
+			lua_register(L,"NtoA",			&cConnection_L::NtoA);
+			lua_register(L,"GetHostByName",		&cConnection_L::GetHostByName);
 			=

 			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cConnection_L::methodname));
 			REGISTER_METHOD(Destroy);
@@ -51,6 +52,24 @@
 			snprintf(buffer,16,"%i.%i.%i.%i",(int)h[3],(int)h[2],(int)h[1],(int)h[0=
]);
 			lua_pushstring(L,buffer);
 			return 1;
+		}
+
+		/// converts a hostname to a ip as string or nil on error
+		/// for lua : int 	GetHostByName	(string hostname)
+		static int				GetHostByName	(lua_State *L) { PROFILE
+			unsigned int ip =3D cNet::GetHostByName(luaL_checkstring(L,1));
+			if(ip){
+				// TODO this could be system dependant, due to endianess
+				// probably use inet_ntop() ?
+				=

+				static char buffer[32];
+				unsigned char *h =3D (unsigned char *)&ip;
+				snprintf(buffer,16,"%i.%i.%i.%i",(int)h[0],(int)h[1],(int)h[2],(int)h[=
3]);
+				lua_pushstring(L,buffer);
+				return 1;
+			} else {
+				return 0;
+			}
 		}
 =

 	// object methods exported to lua

Modified: branches/knut/src/ogrewrapper.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/ogrewrapper.cpp (original)
+++ branches/knut/src/ogrewrapper.cpp Wed Aug  1 20:57:14 2007
@@ -1,753 +1,770 @@
-#include "prefix.h"
-#include "ogrewrapper.h"
-#include "input.h"
-#include "robstring1.2.h"
-#include <Ogre.h>
-/*
-#include <OgreInput.h>
-#include <OgreInputEvent.h>
-#include <OgreEventListeners.h>
-#include <OgreKeyEvent.h>
-#include <OgreOverlay.h>
-#include <OgreOverlayManager.h>
-#include <OgrePanelOverlayElement.h>
-#include <OgreTextAreaOverlayElement.h>
-#include <OgreWireBoundingBox.h>
-#include <SDL/SDL.h>
-*/
-#include <OIS/OIS.h>
-#include <map>
-#include "shell.h"
-#include "timer.h"
-#include "ColourClipPaneOverlay.h"
-#include "ColourClipTextOverlay.h"
-#include "BorderColourClipPaneOverlay.h"
-#include "SortedOverlayContainer.h"
-#include "RobRenderableOverlay.h"
-#include "widget.h"
-#include "meshshape.h"
-#include "game.h"
-
-#include "CompassOverlay.h"
-
-using namespace OIS;
-using namespace Ogre;
-Ogre::LogManager* gLogMan =3D 0;
-
-
-void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
-
-cOgreUserObjectWrapper::cOgreUserObjectWrapper() : mpEntity(0), miType(0) =
{}
-cOgreUserObjectWrapper::~cOgreUserObjectWrapper() {}
-long cOgreUserObjectWrapper::getTypeID(void) const { return 23; }
-const Ogre::String& cOgreUserObjectWrapper::getTypeName(void) const { stat=
ic Ogre::String eris("shiva"); return eris; }
-
-	=

-cOgreWrapper::cOgreWrapper() : mRoot(0) {PROFILE
-    mCamera =3D 0;
-    mViewport =3D 0;
-    mSceneMgr =3D 0;
-    mWindow =3D 0;
-	mInputManager =3D 0;
-	mMouse =3D 0;
-	mKeyboard =3D 0;
-	mJoy =3D 0;
-}
-
-int gLastWinLeft =3D 0;
-int gLastWinTop =3D 0;
-
-/// warning, evil hack, since this is not really supported by ogre
-void	OgreForceCloseFullscreen () {
-	// found no other way to hide the window, setVisible and mWindow->destroy=
() didn't work
-	// arg, even mRoot->shutdown() didn't work
-	delete cOgreWrapper::GetSingleton().mRoot;
-    cOgreWrapper::GetSingleton().mCamera =3D 0;
-    cOgreWrapper::GetSingleton().mViewport =3D 0;
-    cOgreWrapper::GetSingleton().mSceneMgr =3D 0;
-    cOgreWrapper::GetSingleton().mWindow =3D 0;
-	cOgreWrapper::GetSingleton().mInputManager =3D 0;
-	cOgreWrapper::GetSingleton().mMouse =3D 0;
-	cOgreWrapper::GetSingleton().mKeyboard =3D 0;
-	cOgreWrapper::GetSingleton().mJoy =3D 0;
-	=

-	char* szPluginCfgPath =3D "plugins.cfg";
-	#ifdef WIN32
-	#else
-	szPluginCfgPath =3D "plugins_linux.cfg";
-	#endif
-	printf("ogre deinit ok, reinit...\n");
-	cOgreWrapper::GetSingleton().mRoot =3D new Root(szPluginCfgPath);
-}
-
-/// only call this once at startup
-bool	cOgreWrapper::Init			() {PROFILE
-	static bool bInitialised =3D false;
-	if (bInitialised) return false;
-	bInitialised =3D true;
-	=

-	// create custom logmanager so ogre doesn't dump all that junk onto the c=
onsole
-	gLogMan =3D new LogManager();
-	bool suppressFileOutput =3D false;
-	gLogMan->createLog("Ogre.log", true, false,suppressFileOutput);
-	//gLogMan->createLog(logFileName, true, true);
-
-	char* szPluginCfgPath =3D "plugins.cfg";
-	#ifdef WIN32
-	#else
-	szPluginCfgPath =3D "plugins_linux.cfg";
-	#endif
-	mRoot =3D new Root(szPluginCfgPath);
-	=

-	=

-	=

-	//setupResources();
-	{
-        // Load resource paths from config file
-        ConfigFile cf;
-        cf.load("resources.cfg");
-
-        // Go through all sections & settings in the file
-        ConfigFile::SectionIterator seci =3D cf.getSectionIterator();
-
-        String secName, typeName, archName;
-        while (seci.hasMoreElements())
-        {
-            secName =3D seci.peekNextKey();
-            ConfigFile::SettingsMultiMap *settings =3D seci.getNext();
-            ConfigFile::SettingsMultiMap::iterator i;
-            for (i =3D settings->begin(); i !=3D settings->end(); ++i)
-            {
-                typeName =3D i->first;
-                archName =3D i->second;
-                ResourceGroupManager::getSingleton().addResourceLocation(
-                    archName, typeName, secName);
-            }
-        }
-	}
-	=

-	bool bWinDebug =3D false;
-	//bool carryOn =3D configure();
-	//if (!carryOn) return false;
-	if (!mRoot->restoreConfig() && !mRoot->showConfigDialog()) return false;
-//	mRoot->getRenderSystem()->setConfigOption("RTT Preferred Mode","Copy");=
 // todo : set via lua ?
-	if (bWinDebug) printf("windebug safepoint -2\n"); =

-	mRoot->getRenderSystem()->setWaitForVerticalBlank(false);
-	mWindow =3D mRoot->initialise(true,"Iris2");
-	if (bWinDebug) printf("windebug safepoint -1\n"); =

-	=

-	//printf("\n\n Ogre Root-Init Successful\n\n");
-	=

-	if (1) {
-		bool bufferedKeys =3D true;
-		bool bufferedMouse =3D true;
-		bool bufferedJoy =3D true;
-		ParamList pl;
-		size_t windowHnd =3D 0;
-		std::ostringstream windowHndStr;
-
-		mWindow->getCustomAttribute("WINDOW", &windowHnd);
-		windowHndStr << windowHnd;
-		pl.insert(std::make_pair(std::string("WINDOW"), windowHndStr.str()));
-		#if defined OIS_WIN32_PLATFORM
-		//Default mode is foreground exclusive..but, we want to show mouse - so =
nonexclusive
-		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_FO=
REGROUND" )));
-		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_NO=
NEXCLUSIVE")));
-		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_FOREGROUND")));
-		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_NONEXCLUSIVE")));
-		/*
-		temp["DISCL_BACKGROUND"]	=3D DISCL_BACKGROUND;
-		temp["DISCL_EXCLUSIVE"]		=3D DISCL_EXCLUSIVE;
-		temp["DISCL_FOREGROUND"]	=3D DISCL_FOREGROUND;
-		temp["DISCL_NONEXCLUSIVE"]	=3D DISCL_NONEXCLUSIVE;
-		temp["DISCL_NOWINKEY"]		=3D DISCL_NOWINKEY;
-		*/
-		#elif defined OIS_LINUX_PLATFORM
-		//For this demo, show mouse and do not grab (confine to window)
-		pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("fal=
se")));
-		pl.insert(std::make_pair(std::string("x11_mouse_hide"), std::string("fal=
se")));
-		pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("=
false")));
-		pl.insert(std::make_pair(std::string("XAutoRepeatOn"), std::string("true=
")));
-		#endif
-
-		mInputManager =3D InputManager::createInputSystem( pl );
-
-		//Create all devices (We only catch joystick exceptions here, as, most p=
eople have Key/Mouse)
-		mKeyboard =3D static_cast<Keyboard*>(mInputManager->createInputObject( O=
ISKeyboard, bufferedKeys ));
-		// init tranlation mode (Unicode or Ascii)
-		if (mKeyboard) {
-			OIS::Keyboard::TextTranslationMode myTextTranslationMode =3D OIS::Keybo=
ard::Ascii;
-			mKeyboard->setTextTranslation(myTextTranslationMode);
-			if (mKeyboard->getTextTranslation() !=3D myTextTranslationMode) {
-				DisplayErrorMessage(strprintf("failed initialising OIS TextTranslation=
Mode : %s\n",(myTextTranslationMode=3D=3DOIS::Keyboard::Ascii)?"asci":"unic=
ode").c_str());
-				exit(12);
-			}
-		}
-		mMouse =3D static_cast<Mouse*>(mInputManager->createInputObject( OISMous=
e, bufferedMouse ));
-		/*
-		try {
-			mJoy =3D static_cast<JoyStick*>(mInputManager->createInputObject( OISJo=
yStick, bufferedJoy ));
-		}
-		catch(...) {
-			mJoy =3D 0;
-		}
-		*/
-		=

-		class cMyOISListener : public KeyListener, public MouseListener { public:
-			cInput& input;
-			cMyOISListener() : input(cInput::GetSingleton()) {}
-				=

-			bool keyPressed( const KeyEvent &arg ) {
-				if (0) std::cout << "\nKeyPressed {" << arg.key
-					<< ", " << ((Keyboard*)(arg.device))->getAsString(arg.key)
-					<< "} || Character (" << (char)arg.text << ")" << std::endl;
-					=

-				input.KeyDown(input.KeyConvertOIS(arg.key),(char)arg.text);
-				=

-					=

-				return true;
-			}
-			bool keyReleased( const KeyEvent &arg ) {
-				input.KeyUp( input.KeyConvertOIS(arg.key));
-				return true;
-			}
-			bool mouseMoved( const MouseEvent &arg ) {
-				const OIS::MouseState& s =3D arg.state;
-				if (0) std::cout << "\nMouseMoved: Abs("
-						  << s.X.abs << ", " << s.Y.abs << ", " << s.Z.abs << ") Abs2("
-						  << (s.X.abs-gLastWinLeft) << ", " << (s.Y.abs-gLastWinTop) << ", "=
 << s.Z.abs << ") Rel("
-						  << s.X.rel << ", " << s.Y.rel << ", " << s.Z.rel << ")";
-				=

-				cInput::iMouse[0] =3D s.X.abs; //-gLastWinLeft;
-				cInput::iMouse[1] =3D s.Y.abs; //-gLastWinTop;
-				if (s.Z.rel < 0) { input.KeyDown(cInput::kkey_wheelup); input.KeyUp(cI=
nput::kkey_wheelup); }
-				if (s.Z.rel > 0) { input.KeyDown(cInput::kkey_wheeldown); input.KeyUp(=
cInput::kkey_wheeldown); }
-				return true;
-			}
-			bool mousePressed( const MouseEvent &arg, MouseButtonID id ) {
-				if (0) std::cout << "\nMousePressed: " << id;
-				=

-				switch (id) {
-					case MB_Left: input.KeyDown(cInput::kkey_mouse1); break;
-					case MB_Right: input.KeyDown(cInput::kkey_mouse2); break;
-					case MB_Middle: input.KeyDown(cInput::kkey_mouse3); break;
-				}
-				=

-				return true;
-			}
-			bool mouseReleased( const MouseEvent &arg, MouseButtonID id ) {
-				if (0) std::cout << "\nMouseReleased: " << id;
-					=

-				switch (id) {
-					case MB_Left: input.KeyUp(cInput::kkey_mouse1); break;
-					case MB_Right: input.KeyUp(cInput::kkey_mouse2); break;
-					case MB_Middle: input.KeyUp(cInput::kkey_mouse3); break;
-				}
-				=

-				return true;
-			}
-		};
-		cMyOISListener* pMyOISListener =3D new cMyOISListener();
-
-		mKeyboard->setEventCallback(pMyOISListener);
-		mMouse->setEventCallback(pMyOISListener);
-
-		class cMyWindowListener : public Ogre::WindowEventListener { public:
-			virtual void windowMoved(RenderWindow* rw) {
-				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
-				unsigned int width, height, depth;
-				int left, top;
-				rw->getMetrics(width, height, depth, left, top);
-				gLastWinLeft =3D left;
-				gLastWinTop =3D top;
-				//printf("windowMoved, l,t=3D%d,%d\n",left,top); commented out by spam=
filter...
-			}
-			=

-			//Adjust mouse clipping area
-			virtual void windowResized(RenderWindow* rw)
-			{
-				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
-				unsigned int width, height, depth;
-				int left, top;
-				rw->getMetrics(width, height, depth, left, top);
-
-				const OIS::MouseState &ms =3D cOgreWrapper::GetSingleton().mMouse->get=
MouseState();
-				ms.width =3D width;
-				ms.height =3D height;
-				=

-				// notify game that window was resized
-				cGame::GetSingleton().NotifyMainWindowResized(width,height);
-			}
-			=

-			//Unattach OIS before window shutdown (very important under Linux)
-			virtual void windowClosed(RenderWindow* rw)
-			{
-				//Only close for window that created OIS (the main window in these dem=
os)
-				if( rw =3D=3D cOgreWrapper::GetSingleton().mWindow )
-				{
-					cShell::mbAlive =3D false;
-					if( cOgreWrapper::GetSingleton().mInputManager )
-					{
-						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mMouse );
-						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mKeyboard );
-						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mJoy );
-						cOgreWrapper::GetSingleton().mMouse =3D 0;
-						cOgreWrapper::GetSingleton().mKeyboard =3D 0;
-						cOgreWrapper::GetSingleton().mJoy =3D 0;
-
-						OIS::InputManager::destroyInputSystem(cOgreWrapper::GetSingleton().m=
InputManager);
-						cOgreWrapper::GetSingleton().mInputManager =3D 0;
-					}
-				}
-			}
-		};
-		cMyWindowListener* pMyWindowListener =3D new cMyWindowListener();
-
-		//Set initial mouse clipping size
-		pMyWindowListener->windowResized(mWindow);
-		=

-		//Register as a Window listener
-		// ogrenew/OgreMain/include/OgreWindowEventUtilities.h
-		// static void Ogre::WindowEventUtilities::addWindowEventListener(Ogre::=
RenderWindow*, Ogre::WindowEventListener*)
-		WindowEventUtilities::addWindowEventListener(mWindow, pMyWindowListener);
-	}
-		=

-	=

-	//printf("\n\n Ogre Event-Init Successful\n\n");
-	=

-	//chooseSceneManager();
-	//for ogre 1.0
-	//mSceneMgr =3D mRoot->getSceneManager(ST_GENERIC);
-	//for ogre 1.2
-	if (bWinDebug) printf("windebug safepoint 0\n"); =

-	mSceneMgr =3D mRoot->createSceneManager(ST_GENERIC,"main");
-	if (!mSceneMgr) { printf("COULDN'T CREATE SCENEMANAGER\n"); exit(3); }
-	if (bWinDebug) printf("windebug safepoint 1\n"); =

-	=

-
-	mpCamHolderSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneN=
ode("CamHolder");
-	mpCamPosSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneNode=
("CamPos");
-	=

-	//printf("\n\n Ogre SceneManager-Init Successful\n\n");
-	=

-	//createCamera();
-	{
-		// Create the camera
-		mCamera =3D mSceneMgr->createCamera("PlayerCam");
-
-		// Position it at 500 in Z direction
-		mCamera->setPosition(Vector3(0,0,40));
-		// Look back along -Z
-		//mCamera->lookAt(Vector3(0,0,0));
-		mCamera->setNearClipDistance(1);
-		//mCamera->setPolygonMode(PM_WIREFRAME);
-	}
-	if (bWinDebug) printf("windebug safepoint 2\n"); =

-	=

-	//printf("\n\n Ogre Camera-Init Successful\n\n");
-	=

-	// TODO : redesign this for lua cam handling
-	mpCamHolderSceneNode->attachObject(mCamera);
-	// Create one viewport, entire window
-	mViewport =3D mWindow->addViewport(mCamera);
-	mViewport->setBackgroundColour(ColourValue(0,0,0));
-	=

-	if (bWinDebug) printf("windebug safepoint 3\n"); =

-	// Alter the camera aspect ratio to match the viewport
-	mCamera->setAspectRatio(Real(mViewport->getActualWidth()) / Real(mViewpor=
t->getActualHeight()));
-	=

-	=

-	if (bWinDebug) printf("windebug safepoint 4\n"); =

-	//printf("\n\n Ogre Viewport-Init Successful\n\n");
-	=

-	=

-	if (0) { // mbRttHack
-		// render to texture hack, required for hagish's weird gfx-setup only =
=3D)
-		RenderTexture* rttTex =3D mRoot->getRenderSystem()->createRenderTexture(=
 "RttTex", 512, 512, TEX_TYPE_2D, PF_R8G8B8 );
-		Viewport* vp =3D rttTex->addViewport( mCamera );
-		vp->setOverlaysEnabled( false );
-		vp->setClearEveryFrame( true );
-		vp->setBackgroundColour( ColourValue::Black );
-		=

-		//printf("\n\n Ogre RTT-HACK-Init Successful\n\n");
-	}
-	=

-	if (bWinDebug) printf("windebug safepoint 5\n"); =

-	// Set default mipmap level (NB some APIs ignore this)
-	TextureManager::getSingleton().setDefaultNumMipmaps(5);
-	Animation::setDefaultInterpolationMode(Animation::IM_SPLINE);
-
-	/*
-	mFiltering =3D TFO_TRILINEAR; mAniso =3D 1;
-	mFiltering =3D TFO_ANISOTROPIC; mAniso =3D 8;
-	mFiltering =3D TFO_BILINEAR; mAniso =3D 1;
-	MaterialManager::getSingleton().setDefaultTextureFiltering(mFiltering);
-	MaterialManager::getSingleton().setDefaultAnisotropy(mAniso);
-	*/
-	=

-	// TODO : Create any resource listeners (for loading screens)
-	=

-	// Load resources
-	// loadResources();
-	// Initialise, parse scripts etc
-	if (bWinDebug) printf("windebug safepoint 6\n"); =

-	ResourceGroupManager::getSingleton().initialiseAllResourceGroups();
-
-	if (bWinDebug) printf("windebug safepoint 7\n"); =

-	=

-	cCompassOverlay::RegisterFactory();
-	cRobRenderableOverlay::RegisterFactory();
-	cColourClipPaneOverlay::RegisterFactory();
-	cColourClipTextOverlay::RegisterFactory();
-	cBorderColourClipPaneOverlay::RegisterFactory();
-	cSortedOverlayContainer::RegisterFactory();
-	=

-	// sfzgui
-	if (1) {
-		class cSFZGUIEventPump : public cListener { public:
-			cDialogManager* mpDialogMan;
-			cSFZGUIEventPump() {
-				mpDialogMan =3D &cDialogManager::GetSingleton();
-			}
-			=

-			enum {
-				kEventBinding_InputEvent,
-				kEventBinding_EveryFrame,
-			};
-			virtual	void	Listener_Notify (cListenable* pTarget,const size_t eventco=
de =3D 0,const size_t param =3D 0,const size_t userdata =3D 0) {
-				size_t key,c;
-				switch (userdata) {
-					case kEventBinding_EveryFrame:	// time,mousemovement
-						cDialogManager::GetSingleton().OnEnterFrame(cTimer::miCurFrameNum,cI=
nput::iMouse[0],cInput::iMouse[1]);
-					break;
-					case kEventBinding_InputEvent:
-						key =3D (size_t)(param & 255);
-						c =3D (size_t)((param >> 8) & 255);
-						switch (eventcode) {
-							case cInput::kListenerEvent_KeyPress:
-								mpDialogMan->InjectKey(key,c,true);
-							break;
-							case cInput::kListenerEvent_KeyRelease:
-								mpDialogMan->InjectKey(key,c,false);
-							break;
-						}
-					break;
-				}
-			}
-		};
-		cSFZGUIEventPump* pump =3D new cSFZGUIEventPump();
-		cInput::GetSingleton().RegisterListener(pump,(int)cSFZGUIEventPump::kEve=
ntBinding_InputEvent);
-		cTimer::GetSingletonPtr()->RegisterFrameIntervalListener(pump,0,(int)cSF=
ZGUIEventPump::kEventBinding_EveryFrame);
-	}
-	=

-	if (bWinDebug) printf("windebug safepoint 12\n"); =

-	=

-	return true;
-}
-
-void	cOgreWrapper::RenderOneFrame	() {PROFILE
-	if (!mRoot) return;
-		=

-	// draw one frame
-	mRoot->renderOneFrame();
-	=

-	// update input
-	Ogre::WindowEventUtilities::messagePump();
-	if (mKeyboard) mKeyboard->capture();
-	if (mMouse) mMouse->capture();
-	=

-	=

-	if (0) {
-		// terminate the application after a few seconds, useful for experimenti=
ng with input
-		static int iDeadTime =3D 0;
-		if (iDeadTime =3D=3D 0) iDeadTime =3D cShell::GetTicks() + 1000*20;
-		if (iDeadTime < cShell::GetTicks()) cShell::mbAlive =3D false;
-	}
-}
-
-void	cOgreWrapper::DeInit		() {PROFILE
-	if (mRoot) delete mRoot; mRoot =3D 0;
-}
-
-void	cOgreWrapper::SetSkybox	(const char* szMatName,const bool bFlip) { PR=
OFILE
-	// setSkyBox (bool enable, const String &materialName, Real distance=3D50=
00, bool drawFirst=3Dtrue, const Quaternion &orientation=3DQuaternion::IDEN=
TITY, const String &groupName=3DResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME)
- 	if (szMatName) {
-		if (bFlip)
-				mSceneMgr->setSkyBox(true,szMatName,1000,true,Quaternion(Degree(90),Ve=
ctor3(1,0,0)));
-		else	mSceneMgr->setSkyBox(true,szMatName);
-	} else {
-		mSceneMgr->setSkyBox(false,"");
-	}
-}
-
-Ogre::SceneManager*	cOgreWrapper::GetSceneManager	(const char* szSceneMgrN=
ame) {
-	return mRoot->getSceneManager(szSceneMgrName);
-}
-
-void	cOgreWrapper::AttachCamera	(SceneNode* pSceneNode) {PROFILE
-	if (pSceneNode) =

-			pSceneNode->attachObject(mCamera);
-	else	mSceneMgr->getRootSceneNode()->attachObject(mCamera);
-}
-
-void	cOgreWrapper::SetCameraPos		(const Vector3 vPos) {PROFILE
-	mCamera->setPosition(vPos);
-}
-
-void	cOgreWrapper::SetCameraRot		(const Quaternion qRot) {PROFILE
-	mCamera->setOrientation(qRot);
-}
-
-void	cOgreWrapper::CameraLookAt		(const Vector3 vPos) { PROFILE
-	mCamera->lookAt(vPos);  =

-}
-
-/// highres screenshot from wiki
-/// http://www.ogre3d.org/wiki/index.php/High_resolution_screenshots
-void cOgreWrapper::TakeGridScreenshot(/*Ogre::RenderWindow* mWindow, Ogre:=
:Camera* mCamera, */const int& pGridSize, const Ogre::String& pFileName, co=
nst Ogre::String& pFileExtention, const bool& pStitchGridImages)
-{
-  /* Parameters:
-   *  mWindow:    Pointer to the render window.  This could be "mWindow" f=
rom the ExampleApplication,
-   *              the window automatically created obtained when calling
-   *              Ogre::Root::getSingletonPtr()->initialise(false) and ret=
rieved by calling
-   *              "Ogre::Root::getSingletonPtr()->getAutoCreatedWindow()",=
 or the manually created
-   *              window from calling "mRoot->createRenderWindow()".
-   *  mCamera:      Pointer to the camera "looking at" the scene of intere=
st
-   *  pGridSize:      The magnification factor.  A 2 will create a 2x2 gri=
d, doubling the size of the
-                screenshot.  A 3 will create a 3x3 grid, tripling the size=
 of the screenshot.
-   *  pFileName:      The filename to generate, without an extention.  To =
generate "MyScreenshot.png" this
-   *              parameter would contain the value "MyScreenshot".
-   *  pFileExtention:    The extention of the screenshot file name, hence =
the type of graphics file to generate.
-   *              To generate "MyScreenshot.pnh" this parameter would cont=
ain ".png".
-   *  pStitchGridImages:  Determines whether the grid screenshots are (tru=
e) automatically stitched into a single
-   *              image (and discarded) or whether they should (false) rem=
ain in their unstitched
-   *              form.  In that case they are sequentially numbered from =
0 to
-   *              pGridSize * pGridSize - 1 (if pGridSize is 3 then from 0=
 to 8).
-   *              =

-  */
-	bool overlaysEnabled =3D mViewport->getOverlaysEnabled();
-	mViewport->setOverlaysEnabled(false);	=

-	=

-  Ogre::String gridFilename;
-
-  if(pGridSize <=3D 1)
-  {
-    // Simple case where the contents of the screen are taken directly
-    // Also used when an invalid value is passed within pGridSize (zero or=
 negative grid size)
-    gridFilename =3D pFileName + pFileExtention;
-
-    mWindow->writeContentsToFile(gridFilename);
-  }
-  else
-  {
-    // Generate a grid of screenshots
-    mCamera->setCustomProjectionMatrix(false); // reset projection matrix
-    Ogre::Matrix4 standard =3D mCamera->getProjectionMatrix();
-    double nearDist =3D mCamera->getNearClipDistance();
-    double nearWidth =3D (mCamera->getWorldSpaceCorners()[0] - mCamera->ge=
tWorldSpaceCorners()[1]).length();
-    double nearHeight =3D (mCamera->getWorldSpaceCorners()[1] - mCamera->g=
etWorldSpaceCorners()[2]).length();
-    Ogre::Image sourceImage;
-    Ogre::uchar* stitchedImageData;
-
-    // Process each grid
-    for (int nbScreenshots =3D 0; nbScreenshots < pGridSize * pGridSize; n=
bScreenshots++) =

-    { =

-      // Use asymmetrical perspective projection. For more explanations ch=
eck out:
-      // http://www.cs.kuleuven.ac.be/cwis/research/graphics/INFOTEC/viewi=
ng-in-3d/node8.html =

-      int y =3D nbScreenshots / pGridSize; =

-      int x =3D nbScreenshots - y * pGridSize; =

-      Ogre::Matrix4 shearing( =

-        1, 0,(x - (pGridSize - 1) * 0.5) * nearWidth / nearDist, 0, =

-        0, 1, -(y - (pGridSize - 1) * 0.5) * nearHeight / nearDist, 0, =

-        0, 0, 1, 0, =

-        0, 0, 0, 1); =

-      Ogre::Matrix4 scale( =

-        pGridSize, 0, 0, 0, =

-        0, pGridSize, 0, 0, =

-        0, 0, 1, 0, =

-        0, 0, 0, 1); =

-      mCamera->setCustomProjectionMatrix(true, standard * shearing * scale=
);
-      Ogre::Root::getSingletonPtr()->renderOneFrame();
-      gridFilename =3D pFileName + Ogre::StringConverter::toString(nbScree=
nshots) + pFileExtention;
-
-
-      // Screenshot of the current grid
-      mWindow->writeContentsToFile(gridFilename);
-
-      if(pStitchGridImages)
-      {
-        // Automatically stitch the grid screenshots
-        sourceImage.load(gridFilename, "General"); // Assumes that the cur=
rent directory is within the "General" resource group
-        int sourceWidth =3D (int) sourceImage.getWidth();
-        int sourceHeight =3D (int) sourceImage.getHeight();
-        Ogre::ColourValue colourValue;
-        int stitchedX, stitchedY, stitchedIndex;
-
-        // Allocate memory for the stitched image when processing the scre=
enshot of the first grid
-        if(nbScreenshots =3D=3D 0)
-          stitchedImageData =3D new Ogre::uchar[(sourceImage.getWidth() * =
pGridSize) * (sourceImage.getHeight() * pGridSize) * 3]; // 3 colors per pi=
xel
-
-        // Copy each pixel within the grid screenshot to the proper positi=
on within the stitched image
-        for(int rawY =3D 0; rawY < sourceHeight; rawY++)
-        {
-          for(int rawX =3D 0; rawX < sourceWidth; rawX++)
-          {
-            colourValue =3D sourceImage.getColourAt(rawX, rawY, 0);
-            stitchedX =3D x * sourceWidth + rawX;
-            stitchedY =3D y * sourceHeight + rawY;
-            stitchedIndex =3D stitchedY * sourceWidth * pGridSize + stitch=
edX;
-            Ogre::PixelUtil::packColour(colourValue,
-                          Ogre::PF_R8G8B8,
-                          (void*) &stitchedImageData[stitchedIndex * 3]);
-          }
-        }
-        // The screenshot of the grid is no longer needed
-        remove(gridFilename.c_str());
-      }
-    } =

-    mCamera->setCustomProjectionMatrix(false); // reset projection matrix =

-
-    if(pStitchGridImages)
-    {
-      // Save the stitched image to a file
-      Ogre::Image targetImage;
-      targetImage.loadDynamicImage(stitchedImageData,
-                    sourceImage.getWidth() * pGridSize,
-                    sourceImage.getHeight() * pGridSize,
-                    1, // depth
-                    Ogre::PF_R8G8B8,
-                    false);
-      targetImage.save(pFileName + pFileExtention);
-      delete[] stitchedImageData;
-    }
-  }
-	mViewport->setOverlaysEnabled(overlaysEnabled);	=

-} =

-
-void	cOgreWrapper::TakeScreenshot	(const char* szDirPath) {PROFILE
-	mWindow->writeContentsToFile( strprintf( "%s%d.jpg", szDirPath, cShell::G=
etTicks() ) );
-}
-
-std::string		cOgreWrapper::GetUniqueName () {PROFILE
-	static int iLastName =3D 0;
-	return strprintf("n%04d",++iLastName);
-}
-
-/// avoid using OverlayManager::getSingleton().GetViewportHeight() as it i=
s one frame late
-int		cOgreWrapper::GetViewportHeight	() { return mViewport->getActualHeigh=
t(); }
-int		cOgreWrapper::GetViewportWidth	() { return mViewport->getActualWidth(=
); }
-
-bool	cOgreWrapper::RayAABBQuery	(const Ogre::Vector3& vRayPos,const Ogre::=
Vector3& vRayDir,const Ogre::AxisAlignedBox &aabb,float* pfHitDist) { PROFI=
LE
-	static Ogre::Vector3 mlVertices[8];
-	static Ogre::Vector3 d,p000,p111,p100,p010,p001,p011,p101,p110;
-	p000 =3D aabb.getMinimum();
-	p111 =3D aabb.getMaximum();
-	d =3D p111-p000;
-	p100 =3D p000 + Ogre::Vector3(d.x,0,0);
-	p010 =3D p000 + Ogre::Vector3(0,d.y,0);
-	p001 =3D p000 + Ogre::Vector3(0,0,d.z);
-	p011 =3D p000 + Ogre::Vector3(0,d.y,d.z);
-	p101 =3D p000 + Ogre::Vector3(d.x,0,d.z);
-	p110 =3D p000 + Ogre::Vector3(d.x,d.y,0);
-	=

-	static int mlIndices[] =3D {
-		0,1,2, 3,1,2,	4,5,6, 7,5,6, // front, back
-		0,1,4, 5,1,4,	2,3,6, 7,3,6, // top, bottom
-		0,2,4, 6,2,4,	1,3,5, 7,3,5, // left, right
-		};
-	mlVertices[0] =3D p000;	mlVertices[1] =3D p100; // front
-	mlVertices[2] =3D p010;	mlVertices[3] =3D p110;	=

-	=

-	mlVertices[4] =3D p001;	mlVertices[5] =3D p101; // back
-	mlVertices[6] =3D p011;	mlVertices[7] =3D p111;
-	=

-	bool bHit =3D false;
-	float myHitDist;
-	=

-	for (int i=3D0;i<6*6;i+=3D3) {
-		if (IntersectRayTriangle(vRayPos,vRayDir,
-			mlVertices[mlIndices[i+0]],
-			mlVertices[mlIndices[i+1]],
-			mlVertices[mlIndices[i+2]],&myHitDist)) {
-			if (!bHit || myHitDist < *pfHitDist) *pfHitDist =3D myHitDist;
-			bHit =3D true;
-		}
-	}
-	return bHit;
-}
-
-/// returns true if the ray intersects the entities triangles
-/// the resulting distance in the case of a hit is stored into pfHitDist
-/// see also OgreOpCode for more complex collision/intersection detection
-bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,const Ogre::Vector3& vPos,const Og=
re::Quaternion& qRot,const Ogre::Vector3& vScale,float* pfHitDist) { PROFILE
-	if (!pEntity) return false;
-	if (!pEntity->isVisible()) return false;
-		=

-	// get origin & dir in coordinates local to the entity
-	MeshShape* myshape =3D MeshShape::GetMeshShape(pEntity);
-	if (!myshape) return false;
-	Ogre::Quaternion invrot =3D qRot.Inverse();
-	return myshape->RayIntersect((invrot*(vRayPos - vPos))/vScale,(invrot * v=
RayDir)/ vScale,pfHitDist);
-}
-
-/// extracs pos & rot from scenenode, DOESNT WORK FOR entities in static g=
eometry (no scenenode)
-bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,float* pfHitDist) { PROFILE
-	SceneNode* scenenode =3D pEntity ? pEntity->getParentSceneNode() : 0;
-	if (!scenenode) return false; // TODO : tagpoint (like knife in hand) att=
achment currently not supported...
-	return RayEntityQuery(vRayPos,vRayDir,pEntity,scenenode->_getDerivedPosit=
ion(),scenenode->_getDerivedOrientation(),scenenode->_getDerivedScale(),pfH=
itDist);
-}
-
-/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
-/// and fills cx,cy with projected size on screen in [0;1]
-// cam->getProjectionMatrix() is cached inside ogre
-bool	cOgreWrapper::ProjectPos	(const Ogre::Vector3& pos,Ogre::Real& x,Ogre=
::Real& y) { PROFILE
-	Camera* cam =3D mCamera;
-	Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
-	// z < 0 means in front of cam
-	if (eyeSpacePos.z < 0) {
-		Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePos;
-		x =3D screenSpacePos.x;
-		y =3D screenSpacePos.y;
-		bool bIsOnSreen =3D true;
-		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
-		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
-		return bIsOnSreen;
-	} else {
-		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
-		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
-		return false;
-	}
-}
-
-/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
-/// and fills cx,cy with projected size on screen in [0;1]
-// cam->getProjectionMatrix() is cached inside ogre
-bool	cOgreWrapper::ProjectSizeAndPos	(const Ogre::Vector3& pos,Ogre::Real&=
 x,Ogre::Real& y,const Ogre::Real rad,Ogre::Real& cx,Ogre::Real& cy) { PROF=
ILE
-	Camera* cam =3D mCamera;
-	Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
-	// z < 0 means in front of cam
-	if (eyeSpacePos.z < 0) {
-		Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePos;
-		x =3D screenSpacePos.x;
-		y =3D screenSpacePos.y;
-		bool bIsOnSreen =3D true;
-		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
-		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
-		if (bIsOnSreen) {
-			Vector3 spheresize(rad, rad, eyeSpacePos.z);
-			spheresize =3D cam->getProjectionMatrix() * spheresize;
-			cx =3D spheresize.x;
-			cy =3D spheresize.y;
-		} else {
-			cx =3D 0;
-			cy =3D 0;
-		}
-		return bIsOnSreen;
-	} else {
-		cx =3D 0;
-		cy =3D 0;
-		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
-		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
-		return false;
-	}
-}
+#include "prefix.h"
+#include "ogrewrapper.h"
+#include "input.h"
+#include "robstring1.2.h"
+#include <Ogre.h>
+/*
+#include <OgreInput.h>
+#include <OgreInputEvent.h>
+#include <OgreEventListeners.h>
+#include <OgreKeyEvent.h>
+#include <OgreOverlay.h>
+#include <OgreOverlayManager.h>
+#include <OgrePanelOverlayElement.h>
+#include <OgreTextAreaOverlayElement.h>
+#include <OgreWireBoundingBox.h>
+#include <SDL/SDL.h>
+*/
+#include <OIS/OIS.h>
+#include <map>
+#include "shell.h"
+#include "timer.h"
+#include "ColourClipPaneOverlay.h"
+#include "ColourClipTextOverlay.h"
+#include "BorderColourClipPaneOverlay.h"
+#include "SortedOverlayContainer.h"
+#include "RobRenderableOverlay.h"
+#include "widget.h"
+#include "meshshape.h"
+#include "game.h"
+
+#include "CompassOverlay.h"
+
+using namespace OIS;
+using namespace Ogre;
+Ogre::LogManager* gLogMan =3D 0;
+
+
+void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
+
+cOgreUserObjectWrapper::cOgreUserObjectWrapper() : mpEntity(0), miType(0) =
{}
+cOgreUserObjectWrapper::~cOgreUserObjectWrapper() {}
+long cOgreUserObjectWrapper::getTypeID(void) const { return 23; }
+const Ogre::String& cOgreUserObjectWrapper::getTypeName(void) const { stat=
ic Ogre::String eris("shiva"); return eris; }
+
+
+cOgreWrapper::cOgreWrapper() : mRoot(0) {PROFILE
+    mCamera =3D 0;
+    mViewport =3D 0;
+    mSceneMgr =3D 0;
+    mWindow =3D 0;
+	mInputManager =3D 0;
+	mMouse =3D 0;
+	mKeyboard =3D 0;
+	mJoy =3D 0;
+}
+
+int gLastWinLeft =3D 0;
+int gLastWinTop =3D 0;
+
+/// warning, evil hack, since this is not really supported by ogre
+void	OgreForceCloseFullscreen () {
+	// found no other way to hide the window, setVisible and mWindow->destroy=
() didn't work
+	// arg, even mRoot->shutdown() didn't work
+	delete cOgreWrapper::GetSingleton().mRoot;
+    cOgreWrapper::GetSingleton().mCamera =3D 0;
+    cOgreWrapper::GetSingleton().mViewport =3D 0;
+    cOgreWrapper::GetSingleton().mSceneMgr =3D 0;
+    cOgreWrapper::GetSingleton().mWindow =3D 0;
+	cOgreWrapper::GetSingleton().mInputManager =3D 0;
+	cOgreWrapper::GetSingleton().mMouse =3D 0;
+	cOgreWrapper::GetSingleton().mKeyboard =3D 0;
+	cOgreWrapper::GetSingleton().mJoy =3D 0;
+
+	char* szPluginCfgPath =3D "plugins.cfg";
+	#ifdef WIN32
+	#else
+	szPluginCfgPath =3D "plugins_linux.cfg";
+	#endif
+	printf("ogre deinit ok, reinit...\n");
+	cOgreWrapper::GetSingleton().mRoot =3D new Root(szPluginCfgPath);
+}
+
+/// only call this once at startup
+bool	cOgreWrapper::Init			() {PROFILE
+	static bool bInitialised =3D false;
+	if (bInitialised) return false;
+	bInitialised =3D true;
+
+	// create custom logmanager so ogre doesn't dump all that junk onto the c=
onsole
+	gLogMan =3D new LogManager();
+	bool suppressFileOutput =3D false;
+	gLogMan->createLog("Ogre.log", true, false,suppressFileOutput);
+	//gLogMan->createLog(logFileName, true, true);
+
+	char* szPluginCfgPath =3D "plugins.cfg";
+	#ifdef WIN32
+	#else
+	szPluginCfgPath =3D "plugins_linux.cfg";
+	#endif
+	mRoot =3D new Root(szPluginCfgPath);
+
+
+
+	//setupResources();
+	{
+        // Load resource paths from config file
+        ConfigFile cf;
+        cf.load("resources.cfg");
+
+        // Go through all sections & settings in the file
+        ConfigFile::SectionIterator seci =3D cf.getSectionIterator();
+
+        String secName, typeName, archName;
+        while (seci.hasMoreElements())
+        {
+            secName =3D seci.peekNextKey();
+            ConfigFile::SettingsMultiMap *settings =3D seci.getNext();
+            ConfigFile::SettingsMultiMap::iterator i;
+            for (i =3D settings->begin(); i !=3D settings->end(); ++i)
+            {
+                typeName =3D i->first;
+                archName =3D i->second;
+                ResourceGroupManager::getSingleton().addResourceLocation(
+                    archName, typeName, secName);
+            }
+        }
+	}
+
+	bool bWinDebug =3D false;
+	//bool carryOn =3D configure();
+	//if (!carryOn) return false;
+	if (!mRoot->restoreConfig() && !mRoot->showConfigDialog()) return false;
+//	mRoot->getRenderSystem()->setConfigOption("RTT Preferred Mode","Copy");=
 // todo : set via lua ?
+	if (bWinDebug) printf("windebug safepoint -2\n");
+	mRoot->getRenderSystem()->setWaitForVerticalBlank(false);
+	mWindow =3D mRoot->initialise(true,"Iris2");
+	if (bWinDebug) printf("windebug safepoint -1\n");
+
+	//printf("\n\n Ogre Root-Init Successful\n\n");
+
+	if (1) {
+		bool bufferedKeys =3D true;
+		bool bufferedMouse =3D true;
+		bool bufferedJoy =3D true;
+		ParamList pl;
+		size_t windowHnd =3D 0;
+		std::ostringstream windowHndStr;
+
+		mWindow->getCustomAttribute("WINDOW", &windowHnd);
+		windowHndStr << windowHnd;
+		pl.insert(std::make_pair(std::string("WINDOW"), windowHndStr.str()));
+		#if defined OIS_WIN32_PLATFORM
+		//Default mode is foreground exclusive..but, we want to show mouse - so =
nonexclusive
+		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_FO=
REGROUND" )));
+		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_NO=
NEXCLUSIVE")));
+		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_FOREGROUND")));
+		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_NONEXCLUSIVE")));
+		/*
+		temp["DISCL_BACKGROUND"]	=3D DISCL_BACKGROUND;
+		temp["DISCL_EXCLUSIVE"]		=3D DISCL_EXCLUSIVE;
+		temp["DISCL_FOREGROUND"]	=3D DISCL_FOREGROUND;
+		temp["DISCL_NONEXCLUSIVE"]	=3D DISCL_NONEXCLUSIVE;
+		temp["DISCL_NOWINKEY"]		=3D DISCL_NOWINKEY;
+		*/
+		#elif defined OIS_LINUX_PLATFORM
+		//For this demo, show mouse and do not grab (confine to window)
+		pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("fal=
se")));
+		pl.insert(std::make_pair(std::string("x11_mouse_hide"), std::string("fal=
se")));
+		pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("=
false")));
+		pl.insert(std::make_pair(std::string("XAutoRepeatOn"), std::string("true=
")));
+		#endif
+
+		mInputManager =3D InputManager::createInputSystem( pl );
+
+		//Create all devices (We only catch joystick exceptions here, as, most p=
eople have Key/Mouse)
+		mKeyboard =3D static_cast<Keyboard*>(mInputManager->createInputObject( O=
ISKeyboard, bufferedKeys ));
+		// init tranlation mode (Unicode or Ascii)
+		if (mKeyboard) {
+			OIS::Keyboard::TextTranslationMode myTextTranslationMode =3D OIS::Keybo=
ard::Ascii;
+			mKeyboard->setTextTranslation(myTextTranslationMode);
+			if (mKeyboard->getTextTranslation() !=3D myTextTranslationMode) {
+				DisplayErrorMessage(strprintf("failed initialising OIS TextTranslation=
Mode : %s\n",(myTextTranslationMode=3D=3DOIS::Keyboard::Ascii)?"asci":"unic=
ode").c_str());
+				exit(12);
+			}
+		}
+		mMouse =3D static_cast<Mouse*>(mInputManager->createInputObject( OISMous=
e, bufferedMouse ));
+		/*
+		try {
+			mJoy =3D static_cast<JoyStick*>(mInputManager->createInputObject( OISJo=
yStick, bufferedJoy ));
+		}
+		catch(...) {
+			mJoy =3D 0;
+		}
+		*/
+
+		class cMyOISListener : public KeyListener, public MouseListener { public:
+			cInput& input;
+			cMyOISListener() : input(cInput::GetSingleton()) {}
+
+			bool keyPressed( const KeyEvent &arg ) {
+				if (0) std::cout << "\nKeyPressed {" << arg.key
+					<< ", " << ((Keyboard*)(arg.device))->getAsString(arg.key)
+					<< "} || Character (" << (char)arg.text << ")" << std::endl;
+
+				input.KeyDown(input.KeyConvertOIS(arg.key),(char)arg.text);
+
+
+				return true;
+			}
+			bool keyReleased( const KeyEvent &arg ) {
+				input.KeyUp( input.KeyConvertOIS(arg.key));
+				return true;
+			}
+			bool mouseMoved( const MouseEvent &arg ) {
+				const OIS::MouseState& s =3D arg.state;
+				if (0) std::cout << "\nMouseMoved: Abs("
+						  << s.X.abs << ", " << s.Y.abs << ", " << s.Z.abs << ") Abs2("
+						  << (s.X.abs-gLastWinLeft) << ", " << (s.Y.abs-gLastWinTop) << ", "=
 << s.Z.abs << ") Rel("
+						  << s.X.rel << ", " << s.Y.rel << ", " << s.Z.rel << ")";
+
+				cInput::iMouse[0] =3D s.X.abs; //-gLastWinLeft;
+				cInput::iMouse[1] =3D s.Y.abs; //-gLastWinTop;
+				if (s.Z.rel < 0) { input.KeyDown(cInput::kkey_wheelup); input.KeyUp(cI=
nput::kkey_wheelup); }
+				if (s.Z.rel > 0) { input.KeyDown(cInput::kkey_wheeldown); input.KeyUp(=
cInput::kkey_wheeldown); }
+				return true;
+			}
+			bool mousePressed( const MouseEvent &arg, MouseButtonID id ) {
+				if (0) std::cout << "\nMousePressed: " << id;
+
+				switch (id) {
+					case MB_Left: input.KeyDown(cInput::kkey_mouse1); break;
+					case MB_Right: input.KeyDown(cInput::kkey_mouse2); break;
+					case MB_Middle: input.KeyDown(cInput::kkey_mouse3); break;
+				}
+
+				return true;
+			}
+			bool mouseReleased( const MouseEvent &arg, MouseButtonID id ) {
+				if (0) std::cout << "\nMouseReleased: " << id;
+
+				switch (id) {
+					case MB_Left: input.KeyUp(cInput::kkey_mouse1); break;
+					case MB_Right: input.KeyUp(cInput::kkey_mouse2); break;
+					case MB_Middle: input.KeyUp(cInput::kkey_mouse3); break;
+				}
+
+				return true;
+			}
+		};
+		cMyOISListener* pMyOISListener =3D new cMyOISListener();
+
+		mKeyboard->setEventCallback(pMyOISListener);
+		mMouse->setEventCallback(pMyOISListener);
+
+		class cMyWindowListener : public Ogre::WindowEventListener { public:
+			virtual void windowMoved(RenderWindow* rw) {
+				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
+				unsigned int width, height, depth;
+				int left, top;
+				rw->getMetrics(width, height, depth, left, top);
+				gLastWinLeft =3D left;
+				gLastWinTop =3D top;
+				//printf("windowMoved, l,t=3D%d,%d\n",left,top); commented out by spam=
filter...
+			}
+
+			//Adjust mouse clipping area
+			virtual void windowResized(RenderWindow* rw)
+			{
+				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
+				unsigned int width, height, depth;
+				int left, top;
+				rw->getMetrics(width, height, depth, left, top);
+
+				const OIS::MouseState &ms =3D cOgreWrapper::GetSingleton().mMouse->get=
MouseState();
+				ms.width =3D width;
+				ms.height =3D height;
+
+				// notify game that window was resized
+				cGame::GetSingleton().NotifyMainWindowResized(width,height);
+			}
+
+			//Unattach OIS before window shutdown (very important under Linux)
+			virtual void windowClosed(RenderWindow* rw)
+			{
+				//Only close for window that created OIS (the main window in these dem=
os)
+				if( rw =3D=3D cOgreWrapper::GetSingleton().mWindow )
+				{
+					cShell::mbAlive =3D false;
+					if( cOgreWrapper::GetSingleton().mInputManager )
+					{
+						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mMouse );
+						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mKeyboard );
+						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mJoy );
+						cOgreWrapper::GetSingleton().mMouse =3D 0;
+						cOgreWrapper::GetSingleton().mKeyboard =3D 0;
+						cOgreWrapper::GetSingleton().mJoy =3D 0;
+
+						OIS::InputManager::destroyInputSystem(cOgreWrapper::GetSingleton().m=
InputManager);
+						cOgreWrapper::GetSingleton().mInputManager =3D 0;
+					}
+				}
+			}
+		};
+		cMyWindowListener* pMyWindowListener =3D new cMyWindowListener();
+
+		//Set initial mouse clipping size
+		pMyWindowListener->windowResized(mWindow);
+
+		//Register as a Window listener
+		// ogrenew/OgreMain/include/OgreWindowEventUtilities.h
+		// static void Ogre::WindowEventUtilities::addWindowEventListener(Ogre::=
RenderWindow*, Ogre::WindowEventListener*)
+		WindowEventUtilities::addWindowEventListener(mWindow, pMyWindowListener);
+	}
+
+
+	//printf("\n\n Ogre Event-Init Successful\n\n");
+
+	//chooseSceneManager();
+	//for ogre 1.0
+	//mSceneMgr =3D mRoot->getSceneManager(ST_GENERIC);
+	//for ogre 1.2
+	if (bWinDebug) printf("windebug safepoint 0\n");
+	mSceneMgr =3D mRoot->createSceneManager(ST_GENERIC,"main");
+	if (!mSceneMgr) { printf("COULDN'T CREATE SCENEMANAGER\n"); exit(3); }
+	if (bWinDebug) printf("windebug safepoint 1\n");
+
+
+	mpCamHolderSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneN=
ode("CamHolder");
+	mpCamPosSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneNode=
("CamPos");
+
+	//printf("\n\n Ogre SceneManager-Init Successful\n\n");
+
+	//createCamera();
+	{
+		// Create the camera
+		mCamera =3D mSceneMgr->createCamera("PlayerCam");
+
+		// Position it at 500 in Z direction
+		mCamera->setPosition(Ogre::Vector3(0,0,40));
+		// Look back along -Z
+		//mCamera->lookAt(Vector3(0,0,0));
+		mCamera->setNearClipDistance(1);
+		//mCamera->setPolygonMode(PM_WIREFRAME);
+	}
+	if (bWinDebug) printf("windebug safepoint 2\n");
+
+	//printf("\n\n Ogre Camera-Init Successful\n\n");
+
+	// TODO : redesign this for lua cam handling
+	mpCamHolderSceneNode->attachObject(mCamera);
+	// Create one viewport, entire window
+	mViewport =3D mWindow->addViewport(mCamera);
+	mViewport->setBackgroundColour(ColourValue(0,0,0));
+
+	if (bWinDebug) printf("windebug safepoint 3\n");
+	// Alter the camera aspect ratio to match the viewport
+	mCamera->setAspectRatio(Real(mViewport->getActualWidth()) / Real(mViewpor=
t->getActualHeight()));
+
+
+	if (bWinDebug) printf("windebug safepoint 4\n");
+	//printf("\n\n Ogre Viewport-Init Successful\n\n");
+
+
+	if (0) { // mbRttHack
+		// render to texture hack, required for hagish's weird gfx-setup only =
=3D)
+		RenderTexture* rttTex =3D mRoot->getRenderSystem()->createRenderTexture(=
 "RttTex", 512, 512, TEX_TYPE_2D, PF_R8G8B8 );
+		Viewport* vp =3D rttTex->addViewport( mCamera );
+		vp->setOverlaysEnabled( false );
+		vp->setClearEveryFrame( true );
+		vp->setBackgroundColour( ColourValue::Black );
+
+		//printf("\n\n Ogre RTT-HACK-Init Successful\n\n");
+	}
+
+	if (bWinDebug) printf("windebug safepoint 5\n");
+	// Set default mipmap level (NB some APIs ignore this)
+	TextureManager::getSingleton().setDefaultNumMipmaps(5);
+	Animation::setDefaultInterpolationMode(Animation::IM_SPLINE);
+
+	/*
+	mFiltering =3D TFO_TRILINEAR; mAniso =3D 1;
+	mFiltering =3D TFO_ANISOTROPIC; mAniso =3D 8;
+	mFiltering =3D TFO_BILINEAR; mAniso =3D 1;
+	MaterialManager::getSingleton().setDefaultTextureFiltering(mFiltering);
+	MaterialManager::getSingleton().setDefaultAnisotropy(mAniso);
+	*/
+
+	// TODO : Create any resource listeners (for loading screens)
+
+	// Load resources
+	// loadResources();
+	// Initialise, parse scripts etc
+	if (bWinDebug) printf("windebug safepoint 6\n");
+	ResourceGroupManager::getSingleton().initialiseAllResourceGroups();
+
+	if (bWinDebug) printf("windebug safepoint 7\n");
+
+	cCompassOverlay::RegisterFactory();
+	cRobRenderableOverlay::RegisterFactory();
+	cColourClipPaneOverlay::RegisterFactory();
+	cColourClipTextOverlay::RegisterFactory();
+	cBorderColourClipPaneOverlay::RegisterFactory();
+	cSortedOverlayContainer::RegisterFactory();
+
+	// sfzgui
+	if (1) {
+		class cSFZGUIEventPump : public cListener { public:
+			cDialogManager* mpDialogMan;
+			cSFZGUIEventPump() {
+				mpDialogMan =3D &cDialogManager::GetSingleton();
+			}
+
+			enum {
+				kEventBinding_InputEvent,
+				kEventBinding_EveryFrame,
+			};
+			virtual	void	Listener_Notify (cListenable* pTarget,const size_t eventco=
de =3D 0,const size_t param =3D 0,const size_t userdata =3D 0) {
+				size_t key,c;
+				switch (userdata) {
+					case kEventBinding_EveryFrame:	// time,mousemovement
+						cDialogManager::GetSingleton().OnEnterFrame(cTimer::miCurFrameNum,cI=
nput::iMouse[0],cInput::iMouse[1]);
+					break;
+					case kEventBinding_InputEvent:
+						key =3D (size_t)(param & 255);
+						c =3D (size_t)((param >> 8) & 255);
+						switch (eventcode) {
+							case cInput::kListenerEvent_KeyPress:
+								mpDialogMan->InjectKey(key,c,true);
+							break;
+							case cInput::kListenerEvent_KeyRelease:
+								mpDialogMan->InjectKey(key,c,false);
+							break;
+						}
+					break;
+				}
+			}
+		};
+		cSFZGUIEventPump* pump =3D new cSFZGUIEventPump();
+		cInput::GetSingleton().RegisterListener(pump,(int)cSFZGUIEventPump::kEve=
ntBinding_InputEvent);
+		cTimer::GetSingletonPtr()->RegisterFrameIntervalListener(pump,0,(int)cSF=
ZGUIEventPump::kEventBinding_EveryFrame);
+	}
+
+	if (bWinDebug) printf("windebug safepoint 12\n");
+
+	return true;
+}
+
+void	cOgreWrapper::RenderOneFrame	() {PROFILE
+	if (!mRoot) return;
+
+	// draw one frame
+	mRoot->renderOneFrame();
+
+	// update input
+	Ogre::WindowEventUtilities::messagePump();
+	if (mKeyboard) mKeyboard->capture();
+	if (mMouse) mMouse->capture();
+
+
+	if (0) {
+		// terminate the application after a few seconds, useful for experimenti=
ng with input
+		static int iDeadTime =3D 0;
+		if (iDeadTime =3D=3D 0) iDeadTime =3D cShell::GetTicks() + 1000*20;
+		if (iDeadTime < cShell::GetTicks()) cShell::mbAlive =3D false;
+	}
+
+	if(1) {
+		// read out some statistics
+		const RenderTarget::FrameStats& stats =3D mWindow->getStatistics();
+		mfLastFPS =3D stats.lastFPS;
+		mfAvgFPS =3D stats.avgFPS;
+		mfBestFPS =3D stats.bestFPS;
+		mfWorstFPS =3D stats.worstFPS;
+		miBestFrameTime =3D stats.bestFrameTime;
+		miWorstFrameTime =3D stats.worstFrameTime;
+		miTriangleCount =3D stats.triangleCount;
+		miBatchCount =3D stats.batchCount;
+	}
+}
+
+void	cOgreWrapper::DeInit		() {PROFILE
+	if (mRoot) delete mRoot; mRoot =3D 0;
+}
+
+void	cOgreWrapper::SetSkybox	(const char* szMatName,const bool bFlip) { PR=
OFILE
+	// setSkyBox (bool enable, const String &materialName, Real distance=3D50=
00, bool drawFirst=3Dtrue, const Quaternion &orientation=3DQuaternion::IDEN=
TITY, const String &groupName=3DResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME)
+ 	if (szMatName) {
+		if (bFlip)
+				mSceneMgr->setSkyBox(true,szMatName,1000,true,Quaternion(Degree(90),Og=
re::Vector3(1,0,0)));
+		else	mSceneMgr->setSkyBox(true,szMatName);
+	} else {
+		mSceneMgr->setSkyBox(false,"");
+	}
+}
+
+Ogre::SceneManager*	cOgreWrapper::GetSceneManager	(const char* szSceneMgrN=
ame) {
+	return mRoot->getSceneManager(szSceneMgrName);
+}
+
+void	cOgreWrapper::AttachCamera	(SceneNode* pSceneNode) {PROFILE
+	if (pSceneNode)
+			pSceneNode->attachObject(mCamera);
+	else	mSceneMgr->getRootSceneNode()->attachObject(mCamera);
+}
+
+void	cOgreWrapper::SetCameraPos		(const Ogre::Vector3 vPos) {PROFILE
+	mCamera->setPosition(vPos);
+}
+
+void	cOgreWrapper::SetCameraRot		(const Quaternion qRot) {PROFILE
+	mCamera->setOrientation(qRot);
+}
+
+void	cOgreWrapper::CameraLookAt		(const Ogre::Vector3 vPos) { PROFILE
+	mCamera->lookAt(vPos);
+}
+
+/// highres screenshot from wiki
+/// http://www.ogre3d.org/wiki/index.php/High_resolution_screenshots
+void cOgreWrapper::TakeGridScreenshot(/*Ogre::RenderWindow* mWindow, Ogre:=
:Camera* mCamera, */const int& pGridSize, const Ogre::String& pFileName, co=
nst Ogre::String& pFileExtention, const bool& pStitchGridImages)
+{
+  /* Parameters:
+   *  mWindow:    Pointer to the render window.  This could be "mWindow" f=
rom the ExampleApplication,
+   *              the window automatically created obtained when calling
+   *              Ogre::Root::getSingletonPtr()->initialise(false) and ret=
rieved by calling
+   *              "Ogre::Root::getSingletonPtr()->getAutoCreatedWindow()",=
 or the manually created
+   *              window from calling "mRoot->createRenderWindow()".
+   *  mCamera:      Pointer to the camera "looking at" the scene of intere=
st
+   *  pGridSize:      The magnification factor.  A 2 will create a 2x2 gri=
d, doubling the size of the
+                screenshot.  A 3 will create a 3x3 grid, tripling the size=
 of the screenshot.
+   *  pFileName:      The filename to generate, without an extention.  To =
generate "MyScreenshot.png" this
+   *              parameter would contain the value "MyScreenshot".
+   *  pFileExtention:    The extention of the screenshot file name, hence =
the type of graphics file to generate.
+   *              To generate "MyScreenshot.pnh" this parameter would cont=
ain ".png".
+   *  pStitchGridImages:  Determines whether the grid screenshots are (tru=
e) automatically stitched into a single
+   *              image (and discarded) or whether they should (false) rem=
ain in their unstitched
+   *              form.  In that case they are sequentially numbered from =
0 to
+   *              pGridSize * pGridSize - 1 (if pGridSize is 3 then from 0=
 to 8).
+   *
+  */
+	bool overlaysEnabled =3D mViewport->getOverlaysEnabled();
+	mViewport->setOverlaysEnabled(false);
+
+  Ogre::String gridFilename;
+
+  if(pGridSize <=3D 1)
+  {
+    // Simple case where the contents of the screen are taken directly
+    // Also used when an invalid value is passed within pGridSize (zero or=
 negative grid size)
+    gridFilename =3D pFileName + pFileExtention;
+
+    mWindow->writeContentsToFile(gridFilename);
+  }
+  else
+  {
+    // Generate a grid of screenshots
+    mCamera->setCustomProjectionMatrix(false); // reset projection matrix
+    Ogre::Matrix4 standard =3D mCamera->getProjectionMatrix();
+    double nearDist =3D mCamera->getNearClipDistance();
+    double nearWidth =3D (mCamera->getWorldSpaceCorners()[0] - mCamera->ge=
tWorldSpaceCorners()[1]).length();
+    double nearHeight =3D (mCamera->getWorldSpaceCorners()[1] - mCamera->g=
etWorldSpaceCorners()[2]).length();
+    Ogre::Image sourceImage;
+    Ogre::uchar* stitchedImageData;
+
+    // Process each grid
+    for (int nbScreenshots =3D 0; nbScreenshots < pGridSize * pGridSize; n=
bScreenshots++)
+    {
+      // Use asymmetrical perspective projection. For more explanations ch=
eck out:
+      // http://www.cs.kuleuven.ac.be/cwis/research/graphics/INFOTEC/viewi=
ng-in-3d/node8.html
+      int y =3D nbScreenshots / pGridSize;
+      int x =3D nbScreenshots - y * pGridSize;
+      Ogre::Matrix4 shearing(
+        1, 0,(x - (pGridSize - 1) * 0.5) * nearWidth / nearDist, 0,
+        0, 1, -(y - (pGridSize - 1) * 0.5) * nearHeight / nearDist, 0,
+        0, 0, 1, 0,
+        0, 0, 0, 1);
+      Ogre::Matrix4 scale(
+        pGridSize, 0, 0, 0,
+        0, pGridSize, 0, 0,
+        0, 0, 1, 0,
+        0, 0, 0, 1);
+      mCamera->setCustomProjectionMatrix(true, standard * shearing * scale=
);
+      Ogre::Root::getSingletonPtr()->renderOneFrame();
+      gridFilename =3D pFileName + Ogre::StringConverter::toString(nbScree=
nshots) + pFileExtention;
+
+
+      // Screenshot of the current grid
+      mWindow->writeContentsToFile(gridFilename);
+
+      if(pStitchGridImages)
+      {
+        // Automatically stitch the grid screenshots
+        sourceImage.load(gridFilename, "General"); // Assumes that the cur=
rent directory is within the "General" resource group
+        int sourceWidth =3D (int) sourceImage.getWidth();
+        int sourceHeight =3D (int) sourceImage.getHeight();
+        Ogre::ColourValue colourValue;
+        int stitchedX, stitchedY, stitchedIndex;
+
+        // Allocate memory for the stitched image when processing the scre=
enshot of the first grid
+        if(nbScreenshots =3D=3D 0)
+          stitchedImageData =3D new Ogre::uchar[(sourceImage.getWidth() * =
pGridSize) * (sourceImage.getHeight() * pGridSize) * 3]; // 3 colors per pi=
xel
+
+        // Copy each pixel within the grid screenshot to the proper positi=
on within the stitched image
+        for(int rawY =3D 0; rawY < sourceHeight; rawY++)
+        {
+          for(int rawX =3D 0; rawX < sourceWidth; rawX++)
+          {
+            colourValue =3D sourceImage.getColourAt(rawX, rawY, 0);
+            stitchedX =3D x * sourceWidth + rawX;
+            stitchedY =3D y * sourceHeight + rawY;
+            stitchedIndex =3D stitchedY * sourceWidth * pGridSize + stitch=
edX;
+            Ogre::PixelUtil::packColour(colourValue,
+                          Ogre::PF_R8G8B8,
+                          (void*) &stitchedImageData[stitchedIndex * 3]);
+          }
+        }
+        // The screenshot of the grid is no longer needed
+        remove(gridFilename.c_str());
+      }
+    }
+    mCamera->setCustomProjectionMatrix(false); // reset projection matrix
+
+    if(pStitchGridImages)
+    {
+      // Save the stitched image to a file
+      Ogre::Image targetImage;
+      targetImage.loadDynamicImage(stitchedImageData,
+                    sourceImage.getWidth() * pGridSize,
+                    sourceImage.getHeight() * pGridSize,
+                    1, // depth
+                    Ogre::PF_R8G8B8,
+                    false);
+      targetImage.save(pFileName + pFileExtention);
+      delete[] stitchedImageData;
+    }
+  }
+	mViewport->setOverlaysEnabled(overlaysEnabled);
+}
+
+void cOgreWrapper::TakeScreenshot (const char* szDirPath) {PROFILE
+ char mybuf[256];
+ time_t mytime;
+ time(&mytime);
+ strftime(mybuf,255,"%Y%m%d%H%M%S",localtime(&mytime));
+ mWindow->writeContentsToFile( strprintf( "%siris_%s_%03d.png", szDirPath,=
mybuf,cShell::GetTicks() % 1000 ) );
+} =

+
+std::string		cOgreWrapper::GetUniqueName () {PROFILE
+	static int iLastName =3D 0;
+	return strprintf("n%04d",++iLastName);
+}
+
+/// avoid using OverlayManager::getSingleton().GetViewportHeight() as it i=
s one frame late
+int		cOgreWrapper::GetViewportHeight	() { return mViewport->getActualHeigh=
t(); }
+int		cOgreWrapper::GetViewportWidth	() { return mViewport->getActualWidth(=
); }
+
+bool	cOgreWrapper::RayAABBQuery	(const Ogre::Vector3& vRayPos,const Ogre::=
Vector3& vRayDir,const Ogre::AxisAlignedBox &aabb,float* pfHitDist) { PROFI=
LE
+	static Ogre::Vector3 mlVertices[8];
+	static Ogre::Vector3 d,p000,p111,p100,p010,p001,p011,p101,p110;
+	p000 =3D aabb.getMinimum();
+	p111 =3D aabb.getMaximum();
+	d =3D p111-p000;
+	p100 =3D p000 + Ogre::Vector3(d.x,0,0);
+	p010 =3D p000 + Ogre::Vector3(0,d.y,0);
+	p001 =3D p000 + Ogre::Vector3(0,0,d.z);
+	p011 =3D p000 + Ogre::Vector3(0,d.y,d.z);
+	p101 =3D p000 + Ogre::Vector3(d.x,0,d.z);
+	p110 =3D p000 + Ogre::Vector3(d.x,d.y,0);
+
+	static int mlIndices[] =3D {
+		0,1,2, 3,1,2,	4,5,6, 7,5,6, // front, back
+		0,1,4, 5,1,4,	2,3,6, 7,3,6, // top, bottom
+		0,2,4, 6,2,4,	1,3,5, 7,3,5, // left, right
+		};
+	mlVertices[0] =3D p000;	mlVertices[1] =3D p100; // front
+	mlVertices[2] =3D p010;	mlVertices[3] =3D p110;
+
+	mlVertices[4] =3D p001;	mlVertices[5] =3D p101; // back
+	mlVertices[6] =3D p011;	mlVertices[7] =3D p111;
+
+	bool bHit =3D false;
+	float myHitDist;
+
+	for (int i=3D0;i<6*6;i+=3D3) {
+		if (IntersectRayTriangle(vRayPos,vRayDir,
+			mlVertices[mlIndices[i+0]],
+			mlVertices[mlIndices[i+1]],
+			mlVertices[mlIndices[i+2]],&myHitDist)) {
+			if (!bHit || myHitDist < *pfHitDist) *pfHitDist =3D myHitDist;
+			bHit =3D true;
+		}
+	}
+	return bHit;
+}
+
+/// returns true if the ray intersects the entities triangles
+/// the resulting distance in the case of a hit is stored into pfHitDist
+/// see also OgreOpCode for more complex collision/intersection detection
+bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,const Ogre::Vector3& vPos,const Og=
re::Quaternion& qRot,const Ogre::Vector3& vScale,float* pfHitDist) { PROFILE
+	if (!pEntity) return false;
+	if (!pEntity->isVisible()) return false;
+
+	// get origin & dir in coordinates local to the entity
+	MeshShape* myshape =3D MeshShape::GetMeshShape(pEntity);
+	if (!myshape) return false;
+	Ogre::Quaternion invrot =3D qRot.Inverse();
+	return myshape->RayIntersect((invrot*(vRayPos - vPos))/vScale,(invrot * v=
RayDir)/ vScale,pfHitDist);
+}
+
+/// extracs pos & rot from scenenode, DOESNT WORK FOR entities in static g=
eometry (no scenenode)
+bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,float* pfHitDist) { PROFILE
+	SceneNode* scenenode =3D pEntity ? pEntity->getParentSceneNode() : 0;
+	if (!scenenode) return false; // TODO : tagpoint (like knife in hand) att=
achment currently not supported...
+	return RayEntityQuery(vRayPos,vRayDir,pEntity,scenenode->_getDerivedPosit=
ion(),scenenode->_getDerivedOrientation(),scenenode->_getDerivedScale(),pfH=
itDist);
+}
+
+/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
+/// and fills cx,cy with projected size on screen in [0;1]
+// cam->getProjectionMatrix() is cached inside ogre
+bool	cOgreWrapper::ProjectPos	(const Ogre::Vector3& pos,Ogre::Real& x,Ogre=
::Real& y) { PROFILE
+	Camera* cam =3D mCamera;
+	Ogre::Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
+	// z < 0 means in front of cam
+	if (eyeSpacePos.z < 0) {
+		Ogre::Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePo=
s;
+		x =3D screenSpacePos.x;
+		y =3D screenSpacePos.y;
+		bool bIsOnSreen =3D true;
+		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
+		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
+		return bIsOnSreen;
+	} else {
+		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
+		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
+		return false;
+	}
+}
+
+/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
+/// and fills cx,cy with projected size on screen in [0;1]
+// cam->getProjectionMatrix() is cached inside ogre
+bool	cOgreWrapper::ProjectSizeAndPos	(const Ogre::Vector3& pos,Ogre::Real&=
 x,Ogre::Real& y,const Ogre::Real rad,Ogre::Real& cx,Ogre::Real& cy) { PROF=
ILE
+	Camera* cam =3D mCamera;
+	Ogre::Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
+	// z < 0 means in front of cam
+	if (eyeSpacePos.z < 0) {
+		Ogre::Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePo=
s;
+		x =3D screenSpacePos.x;
+		y =3D screenSpacePos.y;
+		bool bIsOnSreen =3D true;
+		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
+		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
+		if (bIsOnSreen) {
+			Ogre::Vector3 spheresize(rad, rad, eyeSpacePos.z);
+			spheresize =3D cam->getProjectionMatrix() * spheresize;
+			cx =3D spheresize.x;
+			cy =3D spheresize.y;
+		} else {
+			cx =3D 0;
+			cy =3D 0;
+		}
+		return bIsOnSreen;
+	} else {
+		cx =3D 0;
+		cy =3D 0;
+		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
+		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
+		return false;
+	}
+}

Modified: branches/knut/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/scripting.cpp (original)
+++ branches/knut/src/scripting.cpp Wed Aug  1 20:57:14 2007
@@ -24,7 +24,8 @@
 #include "camera.h"
 #include "viewport.h"
 #include "rendertexture.h"
-#include "sound.h"
+#include "sound.h"
+#include "meshshape.h"
 #include "terrain.h"
 #include "radar.h"
 #include <Ogre.h>
@@ -41,8 +42,8 @@
 #ifdef PROFILE_LUACALLCOUNT
 std::map<const char*,int> gPROFILE_LUACALLCOUNT;
 struct cPROFILE_LUACALLCOUNTSetCmp {
-  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const { =

-	return x.second > y.second; =

+  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const {
+	return x.second > y.second;
   }
 };
 #endif
@@ -59,7 +60,7 @@
 	#include "lualib.h"
 }
 =

-void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
+void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
 void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
 void	Material_LuaRegister	(void *L);
 void	Granny_LuaRegister		(void *L);
@@ -82,7 +83,7 @@
 		std::string sMyStackTrace;
 		cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
 		fprintf(f,"%s\n",sMyStackTrace.c_str());
-		=

+
 		fclose(f);
 	}
 }
@@ -109,15 +110,15 @@
 /// called from lua : string keyname
 static int l_GetNamedKey (lua_State *L) { PROFILE
 	const char *keyname =3D luaL_checkstring(L, 1);
-	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult =

-	return 1;  // number of results =

+	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult
+	return 1;  // number of results
 }
 =

 /// called from lua : int keycode
 static int l_GetKeyName (lua_State *L) { PROFILE
 	int keycode =3D luaL_checkint(L, 1);
-	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult =

-	return 1;  // number of results =

+	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult
+	return 1;  // number of results
 }
 =

 /// terminates the application
@@ -142,7 +143,7 @@
 	lua_pushboolean(L,cShell::mbAlive);
 	return 1;
 }
-	=

+
 /// called from lua : no params, returns mousex,mousey,4xmousewheel info...
 static int l_PollInput (lua_State *L) { PROFILE
 	lua_pushnumber(L,cInput::iMouse[0]);
@@ -157,14 +158,14 @@
 =

 static int l_ProfileDumpCallCount (lua_State *L) { PROFILE
 	ProfileDumpCallCount();
-	=

+
 	#ifdef PROFILE_LUACALLCOUNT
 	printf("LuaCallCounts:\n\n");
-	=

+
 	std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSetCmp> myC=
allCountProfileSet;
 	typedef std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSet=
Cmp>::iterator tLuaCallCountProfileSetItor;
 	{ for (std::map<const char*,int>::iterator itor=3DgPROFILE_LUACALLCOUNT.b=
egin();itor !=3D gPROFILE_LUACALLCOUNT.end();++itor)
-		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
)); =

+		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
));
 	}
 	int i=3D0;
 	for (tLuaCallCountProfileSetItor itor=3DmyCallCountProfileSet.begin();ito=
r !=3D myCallCountProfileSet.end();++itor) {
@@ -210,7 +211,7 @@
 	if (ar.currentline > 0)
 	  lua_pushfstring(L, "%d:", ar.currentline);
 	switch (*ar.namewhat) {
-	  case 'g':  /* global */ =

+	  case 'g':  /* global */
 	  case 'l':  /* local */
 	  case 'f':  /* field */
 	  case 'm':  /* method */
@@ -252,16 +253,35 @@
 =

 /// void OgreAddCompositor(compositor script name)
 static int l_OgreAddCompositor (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	Ogre::CompositorManager::getSingleton().addCompositor(cOgreWrapper::GetSi=
ngleton().mViewport, name);
-	return 0;
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+//	printf("pViewport=3D%08x\n",pViewport);
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().addCompositor(pViewport, name);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, true);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
 }
 =

 /// void OgreRemoveCompositor(compositor script name)
 static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	Ogre::CompositorManager::getSingleton().removeCompositor(cOgreWrapper::Ge=
tSingleton().mViewport, name);
-	return 0;
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, false);
+		Ogre::CompositorManager::getSingleton().removeCompositor(pViewport, name=
);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
 }
 =

 /// int =3D OgreMemoryUsage(part)
@@ -270,7 +290,7 @@
 static int l_OgreMemoryUsage (lua_State *L) { PROFILE
 	std::string part(luaL_checkstring(L,1));
 	size_t mem =3D 0;
-	=

+
 #ifdef OGRE_VERSION_SUFFIX
 	if(part.find("compositor") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::CompositorManager::getSingleton().getM=
emoryUsage();
 	if(part.find("font") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::FontManager::getSingleton().getMemoryUsage();
@@ -281,7 +301,7 @@
 	if(part.find("skeleton") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::SkeletonManager::getSingleton().getMemoryU=
sage();
 	if(part.find("texture") !=3D std::string::npos || part.find("all") !=3D s=
td::string::npos)mem +=3D Ogre::TextureManager::getSingleton().getMemoryUsa=
ge();
 #endif
-	=

+
 	lua_pushnumber(L, mem);
 	return 1;
 }
@@ -290,14 +310,14 @@
 static int l_OgreMeshAvailable (lua_State *L) { PROFILE
 	const char *name =3D luaL_checkstring(L,1);
 	bool ret;
-	=

+
 	try {
 		Ogre::MeshManager::getSingleton().load(name,Ogre::ResourceGroupManager::=
DEFAULT_RESOURCE_GROUP_NAME);
 		ret =3D true;
 	} catch (...) {
 			ret =3D false;
 	}
-	=

+
 	lua_pushboolean(L, ret);
 	return 1;
 }
@@ -317,20 +337,34 @@
 	return 1;
 }
 =

+/// see also OgreMaterialAvailable below
+/// bool =3D OgreMaterialNameKnown(ressourcename)
+/// returns false if name is empty string or nil
+static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE
+	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
+	if (sMatName.size() > 0) {
+		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
+		lua_pushboolean(L,!pMaterial.isNull());
+	} else {
+		lua_pushboolean(L,false);
+	}
+	return 1;
+}
+
 /// bool =3D OgreMaterialAvailable(ressourcename)
 static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
 	assert(0 && "DON'T USE ME, ALWAYS RETURNS TRUE"); =

 	// TODO, this code does not work, use l_OgreMaterialNameKnown  above
 	const char *name =3D luaL_checkstring(L,1);
 	bool ret;
-	=

+
 	try {
 		Ogre::MaterialManager::getSingleton().load(name,Ogre::ResourceGroupManag=
er::DEFAULT_RESOURCE_GROUP_NAME);
 		ret =3D true;
 	} catch (...) {
 			ret =3D false;
 	}
-	=

+
 	lua_pushboolean(L, ret);
 	return 1;
 }
@@ -339,14 +373,14 @@
 static int l_OgreTextureAvailable (lua_State *L) { PROFILE
 	const char *name =3D luaL_checkstring(L,1);
 	bool ret;
-	=

+
 	try {
 		Ogre::TextureManager::getSingleton().load(name,Ogre::ResourceGroupManage=
r::DEFAULT_RESOURCE_GROUP_NAME);
 		ret =3D true;
 	} catch (...) {
 			ret =3D false;
 	}
-	=

+
 	lua_pushboolean(L, ret);
 	return 1;
 }
@@ -354,104 +388,109 @@
 /// r,g,b =3D Uo16Color2Rgb(color)
 static int l_Uo16Color2Rgb (lua_State *L) { PROFILE
 	unsigned short color =3D luaL_checkint(L,1);
-	=

+
 	float r =3D float((color >> 10) & 0x1F)/float(0x1f);
 	float g =3D float((color >>  5) & 0x1F)/float(0x1f);
 	float b =3D float((color >>  0) & 0x1F)/float(0x1f);
-				=

+
 	lua_pushnumber(L, r);
 	lua_pushnumber(L, g);
 	lua_pushnumber(L, b);
 	return 3;
 }
-
-/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
-static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
-	std::string sTexturePath	=3D luaL_checkstring(L,1);
-	std::string sMaskPath		=3D luaL_checkstring(L,2);
-	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
-	int iHue					=3D luaL_checkint(L,4);
-	=

-	if (iHue =3D=3D 0 || !hueLoader) {
-		lua_pushstring(L,sTexturePath.c_str());
-		return 1;
-	}
-	=

-	// load image
-	Ogre::Image myImage;
-	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
-	=

-	// get image infos
-	Ogre::PixelFormat myFormat =3D myImage.getFormat();
-	unsigned int size =3D myImage.getSize();
-	unsigned int w =3D myImage.getWidth();
-	unsigned int h =3D myImage.getHeight();
-	unsigned int rowspan =3D myImage.getRowSpan();
-	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
-	//Ogre::uchar* dst =3D new Ogre::uchar[size];
-	Ogre::uchar* src =3D myImage.getData();
-	//Ogre::uchar* dst_start =3D dst;
-	Ogre::uchar* src_start =3D src;
-	uint8 cr,cg,cb,ca1,ca2;
-	short col;
-	=

-	// debug info
-	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
-	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
-	=

-	// hue filter
-	cHueFilter Filter;
-	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
-	=

-	// colorize the pixels
-	for(unsigned int y =3D 0; y < h; y++){
+
+/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
+static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
+	std::string sTexturePath	=3D luaL_checkstring(L,1);
+	std::string sMaskPath		=3D luaL_checkstring(L,2);
+	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
+	int iHue					=3D luaL_checkint(L,4);
+
+	if (iHue =3D=3D 0 || !hueLoader) {
+		lua_pushstring(L,sTexturePath.c_str());
+		return 1;
+	}
+
+	// load image
+	Ogre::Image myImage;
+	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
+
+	// get image infos
+	Ogre::PixelFormat myFormat =3D myImage.getFormat();
+	unsigned int size =3D myImage.getSize();
+	unsigned int w =3D myImage.getWidth();
+	unsigned int h =3D myImage.getHeight();
+	unsigned int rowspan =3D myImage.getRowSpan();
+	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
+	//Ogre::uchar* dst =3D new Ogre::uchar[size];
+	Ogre::uchar* src =3D myImage.getData();
+	//Ogre::uchar* dst_start =3D dst;
+	Ogre::uchar* src_start =3D src;
+	uint8 cr,cg,cb,ca1,ca2;
+	short col;
+
+	// debug info
+	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
+	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
+
+	// hue filter
+	cHueFilter Filter;
+	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
+
+	// colorize the pixels
+	for(unsigned int y =3D 0; y < h; y++){
 		for(unsigned int x =3D 0; x < w; x++) {
-			// read out pixel in src graphic
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
-			// and hue the pixel
-			col =3D Filter( col, ColorTable );
-			// TODO ! respect mask instead of hueing the complete texture
-			// and store it in destination (ignoring the new alpha)
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
-			src +=3D pixelsize;
-			//dst +=3D pixelsize;
-		}
-		src +=3D rowspan - w*pixelsize;
-	}
-	=

-	// and make a texture
-	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
-	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
-	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
-	=

-	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
-		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
-	=

-	// free memory
-	//delete [] dst_start;
-
-	lua_pushstring(L,newtextname.c_str());
-	return 1;
-}
-	=

+			// read out pixel in src graphic
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
+			// and hue the pixel
+			col =3D Filter( col, ColorTable );
+			// TODO ! respect mask instead of hueing the complete texture
+			// and store it in destination (ignoring the new alpha)
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
+			src +=3D pixelsize;
+			//dst +=3D pixelsize;
+		}
+		src +=3D rowspan - w*pixelsize;
+	}
+
+	// and make a texture
+	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
+	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
+	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
+
+	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
+		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
+
+	// free memory
+	//delete [] dst_start;
+
+	lua_pushstring(L,newtextname.c_str());
+	return 1;
+}
+
 /// void HueMesh(meshname, hueloader, hue)
 static int l_HueMesh (lua_State *L) { PROFILE
-	const char *meshname =3D luaL_checkstring(L,1);
+	std::string sMeshName =3D luaL_checkstring(L,1);
+	const char *meshname =3D sMeshName.c_str();
 	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
 	int hue =3D luaL_checkint(L,3);
 =

 	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
 	if(hueLoader && hue && meshname){
 		try	{
-			cHueFilter Filter;
-			short* ColorTable =3D hueLoader->GetHue( hue-1 )->GetColors();
-		=

+			cHueFilter Filter;
+			cHue* pMyHue =3D hueLoader->GetHue( hue-1 );
+			if (!pMyHue) return 0;
+			short* ColorTable =3D pMyHue->GetColors();
+			if (!ColorTable) return 0;
+
 			// data seem ok, so read out the mesh
 			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-			=

+			if (mesh.isNull()) return 0;
+
 			//printf("mesh=3D%s\n",mesh->getName().c_str());
 =

 			// and iterate over all submeshes
@@ -459,12 +498,13 @@
 			while(sit.hasMoreElements()){
 				Ogre::SubMesh *submesh =3D sit.getNext();
 				//printf("submesh=3D%i\n",submesh);
-				=

+
+				if(!submesh) continue;
 				if(!submesh->isMatInitialised())continue;
-				=

+
 				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
 =

-				// create hued texture in the current material and update the current =

+				// create hued texture in the current material and update the current
 				Ogre::MaterialPtr mat =3D Ogre::MaterialManager::getSingleton().load(s=
ubmesh->getMaterialName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME);
 				if(mat.isNull()){
 					printf("ERROR HueMesh: material %s is null\n",submesh->getMaterialNam=
e().c_str());
@@ -475,6 +515,7 @@
 				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
 				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
 				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
+				if (mat_hue.isNull()) return 0;
 				mat->copyDetailsTo(mat_hue);
 =

 				// iterate over all techniques
@@ -482,46 +523,52 @@
 				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
 				while(tit.hasMoreElements()){
 					Ogre::Technique *tech =3D tit.getNext();
-					Ogre::Technique *tech_hue =3D tit_hue.getNext();
-					=

+					Ogre::Technique *tech_hue =3D tit_hue.getNext();
+					if (!tech || !tech_hue) continue;
+
 					// iterate over all passes
 					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
 					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
 					while(pit.hasMoreElements()){
 						Ogre::Pass *pass =3D pit.getNext();
-						Ogre::Pass *pass_hue =3D pit_hue.getNext();
-						=

+						Ogre::Pass *pass_hue =3D pit_hue.getNext();
+						if (!pass || !pass_hue) continue;
+
 						// iterate over all tex units
 						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
 						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
 						while(uit.hasMoreElements()){
 							Ogre::TextureUnitState *unit =3D uit.getNext();
-							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
+							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
+							if (!unit || !unit_hue) continue;
 =

 							// current texture
 							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
+							if (tex.isNull()) continue;
 =

 							// lock and read access buffer
-							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
+							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
+							if (b.isNull()) continue;
 							// calc size of complete texture
 							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
 							// and lock (ro)
 							const Ogre::PixelBox box =3D b->lock(area,Ogre::HardwareBuffer::HBL=
_READ_ONLY);
-							=

+
 							// size of one pixel in bytes
 							unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(box.for=
mat);
 							// texture size in bytes
 							unsigned int size =3D box.getConsecutiveSize();
-							=

-							char *dst =3D new char[size];
+
+							char *dst =3D new char[size+1024*32]; // add a little security over=
size
 							char *src =3D static_cast<char *>(box.data);
 =

 							char *dst_start =3D dst;
 							char *src_start =3D src;
 =

 							uint8 cr,cg,cb,ca1,ca2;
-							short col;
-							=

+							short col;
+							int dummy =3D 0;
+
 							// colorize the pixels
 							for(unsigned int y =3D 0; y < box.getHeight(); y++){
 								for(unsigned int x =3D 0; x < box.getWidth(); x++){
@@ -545,22 +592,23 @@
 							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
 							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
 								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-							=

+							assert(!tex_hue.isNull() && "HueMesh bug");
 							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
-							=

+
 							// release the lock
 							b->unlock();
 =

-							// free memory
+							// set the texture
+							unit_hue->setTextureName(tex_hue->getName());
+
+							// free memory
 							delete [] dst_start;
-		=

-							// set the texture
-							unit_hue->setTextureName(tex_hue->getName());
 						}
 					}
 				}
 =

-				// set new material
+				// set new material
+				if (mat_hue.isNull()) continue;
 				submesh->setMaterialName(mat_hue->getName());
 			}
 		} catch (Ogre::FileNotFoundException e){
@@ -576,15 +624,15 @@
 static int l_CreateLookupTableFromFile (lua_State *L) { PROFILE
 	const char *filename =3D luaL_checkstring(L, 1);
 	lua_newtable(L);
-	=

+
 	cFullFileLoader f(filename);
-	=

+
 	const uint32 *buffer =3D (const uint32 *)f.mpFullFileBuffer;
-	=

+
 	for(int i =3D 0;i < f.miFullFileSize / 4; ++i){
 		lua_pushnumber(L,i); lua_rawseti(L,-2,buffer[i]);
 	}
-	=

+
 	return 1;
 }
 =

@@ -606,7 +654,7 @@
 	Ogre::Real linearStart 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_che=
cknumber(L, ++i) : 0.0;
 	Ogre::Real linearEnd 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_check=
number(L, ++i) : 1.0;
 	/*
-	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White, =

+	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White,
 					Real expDensity=3D0.001, Real linearStart=3D0.0, Real linearEnd=3D1.0)
     0=3DFOG_NONE 	No fog. Duh.
     1=3DFOG_EXP 	Fog density increases exponentially from the camera (fog =
=3D 1/e^(distance * density)).
@@ -664,23 +712,36 @@
 =

 static int l_Client_AddPointLight (lua_State *L) { PROFILE
 	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) {
-		Ogre::Light* pLight =3D pSceneMgr->createLight( cOgreWrapper::GetSinglet=
on().GetUniqueName() );
-		pLight->setType( Ogre::Light::LT_POINT );
-		pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_che=
cknumber(L,3));
-	}
-	return 0;
-}
-
-static int l_Client_AddDirectionalLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) {
-		Ogre::Light* pLight =3D pSceneMgr->createLight( cOgreWrapper::GetSinglet=
on().GetUniqueName() );
-		pLight->setType( Ogre::Light::LT_DIRECTIONAL );
-		pLight->setDirection(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_ch=
ecknumber(L,3));
-	}
-	return 0;
-}
+	if (!pSceneMgr) return 0;
+	std::string sName =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	Ogre::Light* pLight =3D pSceneMgr->createLight( sName );
+	pLight->setType( Ogre::Light::LT_POINT );
+	pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_chec=
knumber(L,3));
+	pLight->setDiffuseColour(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
+	pLight->setSpecularColour(luaL_checknumber(L,7),luaL_checknumber(L,8),lua=
L_checknumber(L,9));
+	pLight->setAttenuation(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL=
_checknumber(L,12),luaL_checknumber(L,13));
+	pLight->setCastShadows(false);
+	lua_pushstring(L,sName.c_str());
+	return 1;
+}
+
+static int l_Client_AddDirectionalLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (!pSceneMgr) return 0;
+	std::string sName =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	Ogre::Light* pLight =3D pSceneMgr->createLight( sName );
+	pLight->setType( Ogre::Light::LT_DIRECTIONAL );
+	pLight->setDirection(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_che=
cknumber(L,3));
+	lua_pushstring(L,sName.c_str());
+	return 1;
+}
+
+static int l_Client_DeleteLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) pSceneMgr->destroyLight(luaL_checkstring(L,1));
+	return 0;
+}
+
 =

 static int l_Client_GetPhysStepTime (lua_State *L) { PROFILE
 	lua_pushnumber(L,cTimer::mfPhysStepTime);
@@ -694,29 +755,29 @@
 	cOgreWrapper::GetSingleton().TakeGridScreenshot(3,filename,ext,true);
 	return 0;
 }
-
-/// saved in main directory
-static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().TakeScreenshot();
-	return 0;
-}
-
-void	OgreForceCloseFullscreen ();
-
-/// shows ogre config dialog
-static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
-	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
-	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
-	bIsFullscreen =3D true; // detection fails in linux ?
-	if (bIsFullscreen) {
-		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
-		OgreForceCloseFullscreen();
-	}
-	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
-	if (bIsFullscreen) cShell::mbAlive =3D false;
-	// the application shoudl terminate after this
-	// terminates the game if changes were made
-	return 1;
+
+/// saved in main directory
+static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().TakeScreenshot();
+	return 0;
+}
+
+void	OgreForceCloseFullscreen ();
+
+/// shows ogre config dialog
+static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
+	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
+	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
+	bIsFullscreen =3D true; // detection fails in linux ?
+	if (bIsFullscreen) {
+		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
+		OgreForceCloseFullscreen();
+	}
+	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
+	if (bIsFullscreen) cShell::mbAlive =3D false;
+	// the application shoudl terminate after this
+	// terminates the game if changes were made
+	return 1;
 }
 =

 static int l_BuildTerrainEntity_Simple (lua_State *L) { PROFILE
@@ -744,18 +805,18 @@
 	lua_pushstring(L,meshname.c_str());
 	return 1;
 }
-
+
 /// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
 /// for lua : TerrainRayPick(GroundBlockLoader,blockx,blocky,vBlockPosX,vB=
lockPosY,vBlockPosZ,rx,ry,rz,rvx,rvy,rvz)  -- mainly for mousepicking
 static int l_TerrainRayPick (lua_State *L) { PROFILE
 	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
 	if (!pGroundBlockLoader) return 0;
-	=

+
 	// don't use ++i or something here, the compiler might mix the order
 	Ogre::Vector3 	vBlockPos(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
 	Ogre::Vector3	vRayPos(luaL_checknumber(L,7),luaL_checknumber(L,8),luaL_ch=
ecknumber(L,9));
 	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
-	=

+
 	// feedback via lua callback TerrainRayIntersect_Hit()
 	TerrainRayIntersect(pGroundBlockLoader,luaL_checkint(L,2),luaL_checkint(L=
,3),vRayPos-vBlockPos,vRayDir);
 	return 0;
@@ -768,7 +829,7 @@
 	float			fSphereRad =3D luaL_checknumber(L,4);
 	Ogre::Vector3	vRayPos(	luaL_checknumber(L,5),luaL_checknumber(L,6),luaL_c=
hecknumber(L,7));
 	Ogre::Vector3	vRayDir(	luaL_checknumber(L,8),luaL_checknumber(L,9),luaL_c=
hecknumber(L,10));
-	=

+
 	std::pair<bool, Real> hit =3D Ogre::Ray(vRayPos,vRayDir).intersects(Ogre:=
:Sphere(vSpherePos,fSphereRad));
 	if (!hit.first) return 0;
 	lua_pushnumber(L,hit.second);
@@ -776,8 +837,13 @@
 }
 =

 =

-static int l_UnloadMeshName (lua_State *L) { PROFILE
-	Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
+static int l_UnloadMeshName (lua_State *L) { PROFILE
+	const char* szMeshName =3D luaL_checkstring(L,1);
+	Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(szMeshName,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+	if (mesh.isNull()) return 0;
+	mesh->unload();
+	UnloadMeshShape(szMeshName);
+	//Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
 	return 0;
 }
 =

@@ -830,12 +896,12 @@
 static int l_GetRandomHexString 	(lua_State *L) { PROFILE lua_pushstring( =
L, strprintf("0x%08x",rand()).c_str()); return 1; }
 =

 /// converts "0x1234" to a number
-static int l_Hex2Num 	(lua_State *L) { PROFILE =

+static int l_Hex2Num 	(lua_State *L) { PROFILE
 	std::string hexcode =3D luaL_checkstring(L,1);
 	uint32 res =3D 0;
 	sscanf(hexcode.c_str(),"0x%x",&res);
-	lua_pushnumber(L, res); =

-	return 1; =

+	lua_pushnumber(L, res);
+	return 1;
 }
 =

 // bitwise operations, used for networking, packet manipulation etc
@@ -844,9 +910,9 @@
 	double g =3D luaL_checknumber(L,1);
 	double h =3D luaL_checknumber(L,2);
 	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);	=

+	uint32 b =3D uint32(h);
 	uint32 c =3D a & b;
-	lua_pushnumber( L, c); =

+	lua_pushnumber( L, c);
 	return 1;
 }
 static int l_BitwiseOR 		(lua_State *L) { PROFILE
@@ -854,9 +920,9 @@
 	double g =3D luaL_checknumber(L,1);
 	double h =3D luaL_checknumber(L,2);
 	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);	=

+	uint32 b =3D uint32(h);
 	uint32 c =3D a | b;
-	lua_pushnumber( L, c); =

+	lua_pushnumber( L, c);
 	return 1;
 }
 =

@@ -866,74 +932,74 @@
 	double g =3D luaL_checknumber(L,1);
 	double h =3D luaL_checknumber(L,2);
 	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);	=

+	uint32 b =3D uint32(h);
 	uint32 c =3D a ^ b;
-	lua_pushnumber( L, c); =

-	return 1;
-}
-
-// bitwise operations, used for networking, packet manipulation etc =

-static int l_BitwiseSHL 	(lua_State *L) { PROFILE =

-	// keep this spread out like this to avoid strange, 32 bi =

-	double g =3D luaL_checknumber(L,1); =

-	double h =3D luaL_checknumber(L,2); =

-	uint32 a =3D uint32(g); =

-	uint32 b =3D uint32(h);	 =

-	uint32 c =3D a << b; =

-	lua_pushnumber( L, c);  =

-	return 1; =

-} =

-// bitwise operations, used for networking, packet manipulation etc =

-static int l_BitwiseSHR 	(lua_State *L) { PROFILE =

-	// keep this spread out like this to avoid strange, 32 bi =

-	double g =3D luaL_checknumber(L,1); =

-	double h =3D luaL_checknumber(L,2); =

-	uint32 a =3D uint32(g); =

-	uint32 b =3D uint32(h);	 =

-	uint32 c =3D a >> b; =

-	lua_pushnumber( L, c);  =

-	return 1; =

+	lua_pushnumber( L, c);
+	return 1;
+}
+
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseSHL 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a << b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseSHR 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a >> b;
+	lua_pushnumber( L, c);
+	return 1;
 }
 =

 =

 static int l_TestBit 		(lua_State *L) { PROFILE lua_pushboolean(L,(uint32(=
luaL_checknumber(L,1)) & (uint32(1) << luaL_checkint(L,2))) !=3D 0); return=
 1; }
 static int l_SetBit 		(lua_State *L) { PROFILE lua_pushnumber( L,(uint32(l=
uaL_checknumber(L,1)) | (uint32(1) << luaL_checkint(L,2)))); return 1; }
-static int l_ClearBit 		(lua_State *L) { PROFILE =

+static int l_ClearBit 		(lua_State *L) { PROFILE
 	uint32 input =3D uint32(luaL_checknumber(L,1));
 	uint32 mask =3D 1L << uint32(luaL_checknumber(L,2));
 	lua_pushnumber(L,(input & mask)?(input ^ mask):(input));  // XOR =3D ^ =
=3D toggle bit... toggle only if set (&) to clear
-	return 1; =

-}
-
-
-static int l_Exit		 		(lua_State *L) { PROFILE =

-	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0); =

-	return 0; =

+	return 1;
+}
+
+
+static int l_Exit		 		(lua_State *L) { PROFILE
+	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0);
+	return 0;
 }
 =

 void MyCrash		(const char* szMessage); // see main.cpp
 =

-static int l_Crash		 		(lua_State *L) { PROFILE =

+static int l_Crash		 		(lua_State *L) { PROFILE
 	MyCrash("CRASH triggered from script, see console for info (start with co=
mmandline option -c)"); // does not return...
 	exit(88);  =

-	return 0; =

+	return 0; =

 }
 =

 /// triggers a segfault, for testing our segfault handlers lua stacktrace
-static int l_CrashSegFault		 		(lua_State *L) { PROFILE =

+static int l_CrashSegFault		 		(lua_State *L) { PROFILE
 	DisplayErrorMessage("testing segfault handler...");
 	*((char*)0) =3D 0; // trigger segfault
-	return 0; =

-}
-
-
-static int l_DisplayNotice	(lua_State *L) { PROFILE =

+	return 0;
+}
+
+
+static int l_DisplayNotice	(lua_State *L) { PROFILE
 	DisplayNotice(luaL_checkstring(L,1));
 	return 0;
 }
 =

 =

-static int l_FatalErrorMessage	(lua_State *L) { PROFILE =

+static int l_FatalErrorMessage	(lua_State *L) { PROFILE
 	DisplayErrorMessage(luaL_checkstring(L,1));
 	exit(77);
 	return 0;
@@ -941,19 +1007,19 @@
 =

 =

 /// for lua :   void  ExportMesh  (meshname,filename)
-static int l_ExportMesh		(lua_State *L) { PROFILE =

+static int l_ExportMesh		(lua_State *L) { PROFILE
 	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
 					// autodetect group location
 					//Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME );
 					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
 	Ogre::MeshSerializer myExporter;
 	//Ogre::Mesh* pMesh =3D pEntity->getMesh().get();
-	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2)); =

+	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2));
 	return 0;
 }
 =

 /// for lua :   x,y,z,vx,vy,vz  GetMouseRay  ()
-static int l_GetMouseRay		(lua_State *L) { PROFILE =

+static int l_GetMouseRay		(lua_State *L) { PROFILE
 	cOgreWrapper& ogrewrapper =3D cOgreWrapper::GetSingleton();
 	Ogre::Ray myray(	ogrewrapper.mCamera->getCameraToViewportRay(
 				Ogre::Real(cInput::iMouse[0]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualWidth()),
@@ -968,14 +1034,14 @@
 }
 =

 /// for lua :   z  GetMaxZ  ()
-static int 		l_GetMaxZ		(lua_State *L) { PROFILE =

+static int 		l_GetMaxZ		(lua_State *L) { PROFILE
 	lua_pushnumber(L,Ogre::Root::getSingleton().getRenderSystem()->getMaximum=
DepthInputValue());
 	return 1;
 }
 =

 =

 /// for lua :   bIsInFront,px,py  ProjectPos  (x,y,z)
-static int l_ProjectPos		(lua_State *L) { PROFILE =

+static int l_ProjectPos		(lua_State *L) { PROFILE
 	bool 		bIsInFront;
 	Ogre::Real	fX,fY;
 	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectPos(
@@ -987,7 +1053,7 @@
 }
 =

 /// for lua :   bIsInFront,px,py,cx,cy  ProjectSizeAndPos  (x,y,z,r)
-static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE =

+static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE
 	bool 		bIsInFront;
 	Ogre::Real	fX,fY,fCX,fCY;
 	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectSizeAndPos(
@@ -1012,9 +1078,9 @@
 static int l_OgreMeshTextures	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
 	Ogre::MeshSerializer* meshSerializer =3D new Ogre::MeshSerializer();
 	const char *szMeshName =3D luaL_checkstring(L,1);
-	=

+
 	lua_newtable(L);
-		=

+
 	//printf("open file: %s\n",szMeshName);
 	// model file
 	std::ifstream ifs;
@@ -1024,13 +1090,13 @@
 	if(ifs.is_open()){
 		//printf("create tmp mesh\n");
 		// create tmp mesh import resource
-		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion", =

+		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion",
 			Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
 =

 		//printf("import\n");
 		// import
 		meshSerializer->importMesh(stream, mesh.getPointer());
-		=

+
 		if(!mesh.isNull()){
 			// iterator over submeshes
 			Ogre::Mesh::SubMeshIterator it =3D mesh->getSubMeshIterator();
@@ -1043,51 +1109,161 @@
 				++i;
 			}
 		}
-		=

+
 		// remove all stuff
 		Ogre::MeshManager::getSingleton().remove("l_OgreMeshTextureMissing_conve=
rsion");
-		=

+
 		ifs.close();
 	} else {
 		printf("ERROR can't open file: %s\n",szMeshName);
 	}
 =

 	delete meshSerializer;
-		=

-	return 1;
+
+	return 1;
+}
+
+
+/// for lua :   void OgreShadowTechnique  (string techique)
+static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
+	const char *tech =3D luaL_checkstring(L,1);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+
+	if(p){
+		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
+		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
+		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
+		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
+		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
+		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
+		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
+	}
+    return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureSize  (int size)
+static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
+	return 0;
 }
 =

+
+
+/// for lua :   void	  OgreSetShadowFarDistance	(float x)
+static int 				l_OgreSetShadowFarDistance	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowFarDistance(luaL_checknu=
mber(L,1));
+	return 0;
+}
 =

-/// for lua :   void OgreShadowTechnique  (string techique)
-static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
-	const char *tech =3D luaL_checkstring(L,1);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	=

-	if(p){
-		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
-		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
-		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
-		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
-		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
-		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
-		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
-	}
-		=

+/// for lua :   void	  OgreSetShadowDirLightTextureOffset	(float x)
+static int 				l_OgreSetShadowDirLightTextureOffset	(lua_State *L) { PROFI=
LE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowDirLightTextureOffset(lu=
aL_checknumber(L,1));
 	return 0;
 }
 =

+/// for lua :   void	  OgreSetShadowTextureFadeStart	(float x)
+static int 				l_OgreSetShadowTextureFadeStart	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureFadeStart(luaL_ch=
ecknumber(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureFadeEnd	(float x)
+static int 				l_OgreSetShadowTextureFadeEnd	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureFadeEnd(luaL_chec=
knumber(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTexturePixelFormat	()
+static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE
+	Ogre::PixelFormat pf =3D (lua_gettop(L) >=3D 2 && !lua_isnil(L,1)) ? ((Og=
re::PixelFormat)luaL_checkint(L,1)) : Ogre::PF_FLOAT16_R;
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(pf);
+	return 0;
+}
+
+
+/// for lua :   table	  OgrePixelFormatList  ()
+static int 				l_OgrePixelFormatList	(lua_State *L) { PROFILE
+	lua_newtable(L);
+	#define OgrePixelFormatList_REGISTER(pf) lua_pushstring(L,#pf); lua_rawse=
ti(L,-2,(int)Ogre::pf);
+	OgrePixelFormatList_REGISTER(PF_UNKNOWN)		// 	Unknown pixel format.
+	OgrePixelFormatList_REGISTER(PF_L8)				// 		8-bit pixel format, all bits =
luminace.
+	OgrePixelFormatList_REGISTER(PF_BYTE_L)			//
+	OgrePixelFormatList_REGISTER(PF_L16)			// 		16-bit pixel format, all bits=
 luminace.
+	OgrePixelFormatList_REGISTER(PF_SHORT_L)		//
+	OgrePixelFormatList_REGISTER(PF_A8)				// 		8-bit pixel format, all bits =
alpha.
+	OgrePixelFormatList_REGISTER(PF_BYTE_A)			//
+	OgrePixelFormatList_REGISTER(PF_A4L4)			// 	8-bit pixel format, 4 bits al=
pha, 4 bits luminace.
+	OgrePixelFormatList_REGISTER(PF_BYTE_LA)		// 	2 byte pixel format, 1 byte=
 luminance, 1 byte alpha
+	OgrePixelFormatList_REGISTER(PF_R5G6B5)			// 	16-bit pixel format, 5 bits=
 red, 6 bits green, 5 bits blue.
+	OgrePixelFormatList_REGISTER(PF_B5G6R5)			// 	16-bit pixel format, 5 bits=
 red, 6 bits green, 5 bits blue.
+	OgrePixelFormatList_REGISTER(PF_R3G3B2)			// 	8-bit pixel format, 2 bits =
blue, 3 bits green, 3 bits red.
+	OgrePixelFormatList_REGISTER(PF_A4R4G4B4)		// 	16-bit pixel format, 4 bit=
s for alpha, red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_A1R5G5B5)		// 	16-bit pixel format, 5 bit=
s for blue, green, red and 1 for alpha.
+	OgrePixelFormatList_REGISTER(PF_R8G8B8)			// 	24-bit pixel format, 8 bits=
 for red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_B8G8R8)			// 	24-bit pixel format, 8 bits=
 for blue, green and red.
+	OgrePixelFormatList_REGISTER(PF_A8R8G8B8)		// 	32-bit pixel format, 8 bit=
s for alpha, red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_A8B8G8R8)		// 	32-bit pixel format, 8 bit=
s for blue, green, red and alpha.
+	OgrePixelFormatList_REGISTER(PF_B8G8R8A8)		// 	32-bit pixel format, 8 bit=
s for blue, green, red and alpha.
+	OgrePixelFormatList_REGISTER(PF_R8G8B8A8)		// 	32-bit pixel format, 8 bit=
s for red, green, blue and alpha.
+	OgrePixelFormatList_REGISTER(PF_X8R8G8B8)		// 	32-bit pixel format, 8 bit=
s for red, 8 bits for green, 8 bits for blue like PF_A8R8G8B8, but alpha wi=
ll get discarded
+	OgrePixelFormatList_REGISTER(PF_X8B8G8R8)		// 	32-bit pixel format, 8 bit=
s for blue, 8 bits for green, 8 bits for red like PF_A8B8G8R8, but alpha wi=
ll get discarded
+	OgrePixelFormatList_REGISTER(PF_BYTE_RGB)		// 	3 byte pixel format, 1 byt=
e for red, 1 byte for green, 1 byte for blue
+	OgrePixelFormatList_REGISTER(PF_BYTE_BGR)		// 	3 byte pixel format, 1 byt=
e for blue, 1 byte for green, 1 byte for red
+	OgrePixelFormatList_REGISTER(PF_BYTE_BGRA)		// 	4 byte pixel format, 1 by=
te for blue, 1 byte for green, 1 byte for red and one byte for alpha
+	OgrePixelFormatList_REGISTER(PF_BYTE_RGBA)		// 	4 byte pixel format, 1 by=
te for red, 1 byte for green, 1 byte for blue, and one byte for alpha
+	OgrePixelFormatList_REGISTER(PF_A2R10G10B10)	// 	32-bit pixel format, 2 b=
its for alpha, 10 bits for red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_A2B10G10R10)	// 	32-bit pixel format, 10 =
bits for blue, green and red, 2 bits for alpha.
+	OgrePixelFormatList_REGISTER(PF_DXT1)			// 	DDS (DirectDraw Surface) DXT1=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT2)			// 	DDS (DirectDraw Surface) DXT2=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT3)			// 	DDS (DirectDraw Surface) DXT3=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT4)			// 	DDS (DirectDraw Surface) DXT4=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT5)			// 	DDS (DirectDraw Surface) DXT5=
 format.
+	OgrePixelFormatList_REGISTER(PF_FLOAT16_R)		//
+	OgrePixelFormatList_REGISTER(PF_FLOAT16_RGB)	//
+	OgrePixelFormatList_REGISTER(PF_FLOAT16_RGBA)	//
+	OgrePixelFormatList_REGISTER(PF_FLOAT32_R)		//
+	OgrePixelFormatList_REGISTER(PF_FLOAT32_RGB)	//
+	OgrePixelFormatList_REGISTER(PF_FLOAT32_RGBA)	//
+	OgrePixelFormatList_REGISTER(PF_FLOAT16_GR)		//
+	OgrePixelFormatList_REGISTER(PF_FLOAT32_GR)		//
+	OgrePixelFormatList_REGISTER(PF_DEPTH)			//
+	OgrePixelFormatList_REGISTER(PF_SHORT_RGBA)		//
+	OgrePixelFormatList_REGISTER(PF_SHORT_GR)		//
+	OgrePixelFormatList_REGISTER(PF_SHORT_RGB)		//
+	OgrePixelFormatList_REGISTER(PF_COUNT)			//
+	return 1;
+}
+
+
+/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
+static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
+	return 0;
+}
+
+/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
+	return 0;
+}
 =

 /// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
 static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
-	float r =3D luaL_checknumber(L,1);
-	float g =3D luaL_checknumber(L,2);
-	float b =3D luaL_checknumber(L,3);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	=

-	if(p){
-		p->setAmbientLight( ColourValue( r, g, b ) );
-	}
-	=

+	float r =3D luaL_checknumber(L,1);
+	float g =3D luaL_checknumber(L,2);
+	float b =3D luaL_checknumber(L,3);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+
+	if(p){
+		p->setAmbientLight( ColourValue( r, g, b ) );
+	}
+
 	return 0;
 }
 =

@@ -1098,6 +1274,23 @@
 	return 1;
 }
 =

+
+/// for lua :   number OgreLastFPS  ()
+static int l_OgreLastFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfLastFPS);return 1; }
+/// for lua :   number OgreAvgFPS  ()
+static int l_OgreAvgFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWra=
pper::GetSingleton().mfAvgFPS);return 1; }
+/// for lua :   number OgreBestFPS  ()
+static int l_OgreBestFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfBestFPS);return 1; }
+/// for lua :   number OgreWorstFPS  ()
+static int l_OgreWorstFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreW=
rapper::GetSingleton().mfWorstFPS);return 1; }
+/// for lua :   number OgreBestFrameTime  ()
+static int l_OgreBestFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miBestFrameTime);return 1; }
+/// for lua :   number OgreWorstFrameTime  ()
+static int l_OgreWorstFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,=
cOgreWrapper::GetSingleton().miWorstFrameTime);return 1; }
+/// for lua :   number OgreTriangleCount  ()
+static int l_OgreTriangleCount	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miTriangleCount);return 1; }
+/// for lua :   number OgreBatchCount  ()
+static int l_OgreBatchCount	(lua_State *L) { PROFILE lua_pushnumber(L,cOgr=
eWrapper::GetSingleton().miBatchCount);return 1; }
 =

 /*
 static int l_Client_SetMouseSensitivity (lua_State *L) { PROFILE
@@ -1166,44 +1359,44 @@
 /// don't use directly, used by LuaCall
 int 	PCallWithErrFuncWrapper (lua_State *L,int narg, int nret) { PROFILE
 	int status;
-	int base =3D lua_gettop(L) - narg;  // function index =

+	int base =3D lua_gettop(L) - narg;  // function index
 	lua_pushliteral(L, "_TRACEBACK");
-	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function =

-	lua_insert(L, base);  // put it under chunk and args =

+	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function
+	lua_insert(L, base);  // put it under chunk and args
 	// signal(SIGINT, laction); // copyed from example, no idea what this is =
good for =3D(
 	status =3D lua_pcall(L, narg, (nret=3D=3D-1) ? LUA_MULTRET : nret, base);
-	=

+
 	//printf("pcall end, cleaning up....\n");
-	=

+
 	// signal(SIGINT, SIG_DFL); // copyed from example, no idea what this is =
good for =3D(
-	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state =

-	=

+	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state
+
 	//printf("pcall end\n");
-	=

+
 	return status;
 }
-
-
-void MyCrash				(const char* szMessage);
+
+
+void MyCrash				(const char* szMessage);
 =

 void LuaErrorHandler (lua_State *L, const char *fmt, ...) { PROFILE
 	printf("LuaErrorHandler start\n");
-	=

+
 	va_list argp;
-	va_start(argp, fmt);
-	gRobStringBuffer[0] =3D 0;
-	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
+	va_start(argp, fmt);
+	gRobStringBuffer[0] =3D 0;
+	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
 	std::string s(gRobStringBuffer);
-	va_end(argp);
-	=

-	std::string mystr("LuaError\n");
+	va_end(argp);
+
+	std::string mystr("LuaError\n");
 	mystr +=3D s;
-	=

+
 	printf("\nLuaErrorHandler end\n");
-	=

+
 	//lua_close(L);
 	MyCrash(mystr.c_str());
-	// todo : attempt recovery in case of protected function call ?
+	// todo : attempt recovery in case of protected function call ?
 	// todo : deinit ogre to free mouse here
 }
 =

@@ -1300,7 +1493,7 @@
 	//if (lua_pcall(L, narg, nres, 0) !=3D 0)  { // old
 		/* do the call */
 		LuaErrorHandler(L, "error running function `%s': %s",func, lua_tostring(=
L, -1));
-		=

+
 		/*
 		doku for lua_pcall last argument (errorfunc)
 		if 0 ... else that argument should be the index in the stack where the e=
rror handler function is located. Notice that, in such cases, the handler m=
ust be pushed in the stack before the function to be called and its argumen=
ts.
@@ -1346,7 +1539,7 @@
 			}
 			nres++;
 		}
-		// pop stack    =

+		// pop stack
 		lua_pop(L, popamount);
 	}
 	va_end(vl);
@@ -1362,7 +1555,7 @@
 		DisplayErrorMessage("ERROR : lua-precision wrong");
 		exit(43);
 	}
-	=

+
 	L =3D lua_open();
 	assert(L);
 	luaopen_base(L);
@@ -1371,7 +1564,7 @@
 	luaopen_string(L);
 	luaopen_math(L);
 	luaopen_debug(L);
-	=

+
 	lua_register(L,"GetNamedKey",		l_GetNamedKey);
 	lua_register(L,"GetKeyName",		l_GetKeyName);
 	lua_register(L,"PollInput",			l_PollInput);
@@ -1384,7 +1577,7 @@
 	//lua_register(L,"SoundPlayAmbient",				l_SoundPlayAmbient);
 	//lua_register(L,"Server_SetMaxResyncsPerSecond",	l_Server_SetMaxResyncsP=
erSecond);
 	//lua_register(L,"Server_GetMaxResyncsPerSecond",	l_Server_GetMaxResyncsP=
erSecond);
-	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
+	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
 	lua_register(L,"Client_TakeScreenshot",			l_Client_TakeScreenshot);
 	lua_register(L,"Client_TakeGridScreenshot",			l_Client_TakeGridScreenshot=
);
 	//lua_register(L,"Client_SetCamera",				l_Client_SetCamera);
@@ -1407,7 +1600,8 @@
 	lua_register(L,"Client_SetAmbientLight",		l_Client_SetAmbientLight);
 	lua_register(L,"Client_ClearLights",			l_Client_ClearLights);
 	lua_register(L,"Client_AddPointLight",			l_Client_AddPointLight);
-	lua_register(L,"Client_AddDirectionalLight",	l_Client_AddDirectionalLight=
);
+	lua_register(L,"Client_AddDirectionalLight",	l_Client_AddDirectionalLight=
);
+	lua_register(L,"Client_DeleteLight",			l_Client_DeleteLight);
 	lua_register(L,"Client_GetPhysStepTime",		l_Client_GetPhysStepTime);
 	lua_register(L,"BuildTerrainEntity_Simple",		l_BuildTerrainEntity_Simple);
 	lua_register(L,"BuildTerrainEntity_Shaded",		l_BuildTerrainEntity_Shaded);
@@ -1431,7 +1625,7 @@
 	lua_register(L,"ClearBit",						l_ClearBit);
 	lua_register(L,"Exit",							l_Exit);
 	lua_register(L,"Crash",							l_Crash);
-	lua_register(L,"CrashSegFault",					l_CrashSegFault);
+	lua_register(L,"CrashSegFault",					l_CrashSegFault);
 	lua_register(L,"DisplayNotice",					l_DisplayNotice);
 	lua_register(L,"FatalErrorMessage",				l_FatalErrorMessage);
 	lua_register(L,"ExportMesh",					l_ExportMesh);
@@ -1444,20 +1638,40 @@
 	lua_register(L,"_TRACEBACK",					l_TRACEBACK);
 	lua_register(L,"ProfileDumpCallCount",			l_ProfileDumpCallCount);
 	lua_register(L,"OgreMemoryUsage",				l_OgreMemoryUsage);
-	lua_register(L,"OgreMeshAvailable",				l_OgreMeshAvailable);
+	lua_register(L,"OgreMeshAvailable",				l_OgreMeshAvailable);
 	lua_register(L,"OgreMaterialNameKnown",			l_OgreMaterialNameKnown);
 	lua_register(L,"OgreMaterialAvailable",			l_OgreMaterialAvailable);
 	lua_register(L,"OgreTextureAvailable",			l_OgreTextureAvailable);
 	lua_register(L,"OgreMeshTextures",				l_OgreMeshTextures);
-	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
+	// some statistic stuff
+	lua_register(L,"OgreLastFPS",				l_OgreLastFPS);
+	lua_register(L,"OgreAvgFPS",				l_OgreAvgFPS);
+	lua_register(L,"OgreBestFPS",				l_OgreBestFPS);
+	lua_register(L,"OgreWorstFPS",				l_OgreWorstFPS);
+	lua_register(L,"OgreBestFrameTime",			l_OgreBestFrameTime);
+	lua_register(L,"OgreWorstFrameTime",			l_OgreWorstFrameTime);
+	lua_register(L,"OgreTriangleCount",			l_OgreTriangleCount);
+	lua_register(L,"OgreBatchCount",			l_OgreBatchCount);
+
+	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
 	lua_register(L,"HueMesh",						l_HueMesh);
 	lua_register(L,"OgreAddCompositor",						l_OgreAddCompositor);
 	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
 	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
 	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
-	// shadow stuff
-	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
-	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
+	// shadow stuff
+	lua_register(L,"OgreSetShadowTextureFadeStart",						l_OgreSetShadowTextu=
reFadeStart);
+	lua_register(L,"OgreSetShadowTextureFadeEnd",						l_OgreSetShadowTexture=
FadeEnd);
+	lua_register(L,"OgreSetShadowDirLightTextureOffset",				l_OgreSetShadowDi=
rLightTextureOffset);
+	lua_register(L,"OgreSetShadowFarDistance",							l_OgreSetShadowFarDistan=
ce);
+	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
+	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
+	lua_register(L,"OgrePixelFormatList",								l_OgrePixelFormatList);
+	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
+	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
+	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
+	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
+	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
 =

 	// file paths for init
 	const char* szLuaUDataPath =3D "../data/lua/udata.lua";
@@ -1471,13 +1685,13 @@
 		exit(34);
 	}
 	myFileStream.close();
-	=

+
 	// load utils
 	int res;
 	res	=3D lua_dofile(L,szLuaUDataPath); // loads function used for register=
ing udatatypes
-	if (res) { =

-		MyCrash("error in udata script-initialisation\n"); =

-		exit(44); =

+	if (res) {
+		MyCrash("error in udata script-initialisation\n");
+		exit(44);
 	}
 =

 	RegisterLuaXML(L);
@@ -1502,11 +1716,11 @@
 	LuaRegisterRadar(L);
 =

 	cInput::GetSingleton().RegisterListener(this,kListenerBinding_Keys);
-
-	res =3D lua_dofile(L,szLuaMainPath);
-	if (res) {
-		MyCrash("error in main script-initialisation\n"); =

-		exit(-1); =

+
+	res =3D lua_dofile(L,szLuaMainPath);
+	if (res) {
+		MyCrash("error in main script-initialisation\n");
+		exit(-1);
 	}
 }
 =


Modified: branches/knut/src/sound_fmod.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/sound_fmod.cpp (original)
+++ branches/knut/src/sound_fmod.cpp Wed Aug  1 20:57:14 2007
@@ -1,8 +1,17 @@
 #include "sound.h"
-#include "data.h"
 =

 #include <fmod.h>
 #include <fmod_errors.h>
+
+// ################## global stuff #######################
+FMOD_RESULT result;
+
+void ERRCHECK(FMOD_RESULT result){
+	if (result !=3D FMOD_OK){
+		printf("FMOD error! (%d) %s\n", result, FMOD_ErrorString(result));
+	}
+}
+// #################################################
 =

 class cSoundSourceFmod;
 =

@@ -25,112 +34,99 @@
 	virtual cSoundSource *CreateSoundSource3D(const float x, const float y, c=
onst float z, const char *buffer, const int size, const int channels, const=
 int bitrate, const int frequency);
 	virtual void Step();
 =

-private:	=

+private:
+	/// stores current coordinates info fmod
+	void UpdatePositionAndVelocity();
+
 	/// number of max channels?
 	int miMaxChannels;
 	/// distance factor
 	float mfDistanceFactor;
 	/// listener position and velocity (extern distance WITH mfDistanceFactor=
 factor applied
-	float mlPos[3];
-	float mlVel[3];
+	FMOD_VECTOR mlPos;
+	FMOD_VECTOR mlVel;
+	=

+	/// fmod sound system
+	FMOD_SYSTEM *mpSystem;
 };
 =

 /// a sound source (no 3d, just omi) playing something
 class cSoundSourceFmod : public cSoundSource {
 public:
-	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const char *filename) : m=
SoundSystem(soundsystem), miChannel(-1), mb3D(false), mpStream(0), mpSample=
(0) {
-		mpStream =3D FSOUND_Stream_Open(filename,FSOUND_2D | FSOUND_LOOP_OFF,0,0=
);
+	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const char *filename) : m=
SoundSystem(soundsystem), mpChannel(0), mb3D(false), mpSound(0), mfMinDista=
nce(100.0f), mfMaxDistance(100000.0f) {
+		if(mSoundSystem && mSoundSystem->mpSystem){
+			result =3D FMOD_System_CreateStream(mSoundSystem->mpSystem,filename, (F=
MOD_MODE)(FMOD_SOFTWARE | FMOD_2D), 0, &mpSound);
+			ERRCHECK(result);
+			=

+			SetPosition(0.0f,0.0f,0.0f);
+			SetVelocity(0.0f,0.0f,0.0f);
+		}
+	}
+	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const char *buffer, const=
 int size, const int channels, const int bitrate, const int frequency) : mS=
oundSystem(soundsystem), mpChannel(0), mb3D(false), mpSound(0), mfMinDistan=
ce(100.0f), mfMaxDistance(100000.0f) {
+		if(mSoundSystem && mSoundSystem->mpSystem){
+			FMOD_CREATESOUNDEXINFO exinfo;
+			=

+			memset(&exinfo, 0, sizeof(FMOD_CREATESOUNDEXINFO));
+			exinfo.cbsize =3D sizeof(FMOD_CREATESOUNDEXINFO);
+			exinfo.length =3D size;
+			exinfo.numchannels =3D channels;
+			exinfo.defaultfrequency =3D frequency;
+			=

+			switch(bitrate){
+				case 8:exinfo.format =3D FMOD_SOUND_FORMAT_PCM8;break;
+				case 16:exinfo.format =3D FMOD_SOUND_FORMAT_PCM16;break;
+				case 24:exinfo.format =3D FMOD_SOUND_FORMAT_PCM24;break;
+				case 32:exinfo.format =3D FMOD_SOUND_FORMAT_PCM32;break;
+			}
+			=

+			result =3D FMOD_System_CreateStream(mSoundSystem->mpSystem, buffer, (FM=
OD_MODE)(FMOD_OPENRAW | FMOD_OPENMEMORY | FMOD_SOFTWARE | FMOD_2D), &exinfo=
, &mpSound);
+			ERRCHECK(result);
+		}
+		=

 		SetPosition(0.0f,0.0f,0.0f);
 		SetVelocity(0.0f,0.0f,0.0f);
 	}
-	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const char *buffer, const=
 int size, const int channels, const int bitrate, const int frequency) : mS=
oundSystem(soundsystem), miChannel(-1), mb3D(false), mpStream(0), mpSample(=
0) {
-		// calc mode flags and sample size
-		unsigned int mode =3D FSOUND_2D | FSOUND_SIGNED | FSOUND_LOOP_OFF;
-		int samplesize =3D 1;
-		=

-		if(channels =3D=3D 1){
-			mode |=3D FSOUND_MONO;
-		} else {
-			samplesize *=3D 2;
-			mode |=3D FSOUND_STEREO;
-		}
-		=

-		if(bitrate =3D=3D 8){
-			mode |=3D FSOUND_8BITS;
-		} else {
-			mode |=3D FSOUND_16BITS;
-			samplesize *=3D 2;
-		}
-		=

-		// create userbuffer fmod sample
-		mpSample =3D FSOUND_Sample_Alloc(FSOUND_FREE,size / samplesize,mode,freq=
uency,255,128,128);
-		if(mpSample){
-			// fill sample buffer
-			void *p1,*p2;
-			unsigned int l1,l2;
-			if(FSOUND_Sample_Lock(mpSample,0,size,&p1,&p2,&l1,&l2)){
-				memcpy(p1,buffer,mymin(l1,size));
-				FSOUND_Sample_Unlock(mpSample,p1,p2,l1,l2);
+
+	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const float x, const floa=
t y, const float z, const char *filename) : mSoundSystem(soundsystem), mpCh=
annel(0), mb3D(true), mpSound(0), mfMinDistance(100.0f), mfMaxDistance(1000=
00.0f) {
+		if(mSoundSystem && mSoundSystem->mpSystem){
+			result =3D FMOD_System_CreateStream(mSoundSystem->mpSystem, filename, (=
FMOD_MODE)(FMOD_SOFTWARE | FMOD_3D), 0, &mpSound);
+			ERRCHECK(result);
+			=

+			SetPosition(x,y,z);
+			SetVelocity(0,0,0);
+		}
+	}
+
+	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const float x, const floa=
t y, const float z, const char *buffer, const int size, const int channels,=
 const int bitrate, const int frequency) : mSoundSystem(soundsystem), mpCha=
nnel(0), mb3D(true), mpSound(0), mfMinDistance(100.0f), mfMaxDistance(10000=
0.0f) {
+		if(mSoundSystem && mSoundSystem->mpSystem){
+			FMOD_CREATESOUNDEXINFO exinfo;
+			=

+			memset(&exinfo, 0, sizeof(FMOD_CREATESOUNDEXINFO));
+			exinfo.cbsize =3D sizeof(FMOD_CREATESOUNDEXINFO);
+			exinfo.length =3D size;
+			exinfo.numchannels =3D channels;
+			exinfo.defaultfrequency =3D frequency;
+			=

+			switch(bitrate){
+				case 8:exinfo.format =3D FMOD_SOUND_FORMAT_PCM8;break;
+				case 16:exinfo.format =3D FMOD_SOUND_FORMAT_PCM16;break;
+				case 24:exinfo.format =3D FMOD_SOUND_FORMAT_PCM24;break;
+				case 32:exinfo.format =3D FMOD_SOUND_FORMAT_PCM32;break;
 			}
-		}
-		SetPosition(0.0f,0.0f,0.0f);
-		SetVelocity(0.0f,0.0f,0.0f);
-	}
-
-	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const float x, const floa=
t y, const float z, const char *filename) : mSoundSystem(soundsystem), miCh=
annel(-1), mb3D(true), mpStream(0), mpSample(0) {
-		mpStream =3D FSOUND_Stream_Open(filename,FSOUND_LOOP_OFF | FSOUND_HW3D,0=
,0);
-		SetPosition(x,y,z);
-		SetVelocity(0,0,0);
-	}
-
-	cSoundSourceFmod(cSoundSystemFmod *soundsystem, const float x, const floa=
t y, const float z, const char *buffer, const int size, const int channels,=
 const int bitrate, const int frequency) : mSoundSystem(soundsystem), miCha=
nnel(-1), mb3D(true), mpStream(0), mpSample(0) {
-		// calc mode flags and sample size
-		printdebug("sound","cSoundSourceFmod(%f,%f,%f,%i,%i,%i,%i%,%i);\n",x,y,z=
,buffer,size,channels,bitrate,frequency);
-		unsigned int mode =3D FSOUND_SIGNED | FSOUND_LOOP_OFF | FSOUND_HW3D;
-
-		int samplesize =3D 1;
-		=

-		if(channels =3D=3D 1){
-			mode |=3D FSOUND_MONO;
-		} else {
-			samplesize *=3D 2;
-			mode |=3D FSOUND_STEREO;
-		}
-		=

-		if(bitrate =3D=3D 8){
-			mode |=3D FSOUND_8BITS;
-		} else {
-			mode |=3D FSOUND_16BITS;
-			samplesize *=3D 2;
-		}
-
-		//printf("samplesize =3D %i samples =3D %i\n",samplesize,size / samplesi=
ze);
-		=

-		// create userbuffer fmod sample
-		mpSample =3D FSOUND_Sample_Alloc(FSOUND_FREE,size / samplesize,mode,freq=
uency,255,128,128);
-		if(mpSample){
-			// fill sample buffer
-			void *p1,*p2;
-			unsigned int l1,l2;
-			if(FSOUND_Sample_Lock(mpSample,0,size,&p1,&p2,&l1,&l2)){
-				memcpy(p1,buffer,mymin(l1,size));
-				FSOUND_Sample_Unlock(mpSample,p1,p2,l1,l2);
-			}
-		}
+			=

+			result =3D FMOD_System_CreateStream(mSoundSystem->mpSystem, buffer, (FM=
OD_MODE)(FMOD_OPENRAW | FMOD_OPENMEMORY | FMOD_SOFTWARE | FMOD_3D), &exinfo=
, &mpSound);
+			ERRCHECK(result);
+		}
+		=

 		SetPosition(x,y,z);
 		SetVelocity(0.0f,0.0f,0.0f);
 	}
 =

 	virtual ~cSoundSourceFmod(){
-		if(mpSample){
-			// free usergenerated buffer
-			FSOUND_Sample_Free(mpSample);
-			mpSample =3D 0;
-		}
-		if(mpStream){
-			// free usergenerated buffer
-			FSOUND_Stream_Close(mpStream);
-			mpStream =3D 0;
+		if(mpSound){
+			// free buffer
+			FMOD_Sound_Release(mpSound);
+			mpSound =3D 0;
 		}
 	}
 =

@@ -138,19 +134,34 @@
 	virtual const bool Play(){
 		if(IsPlaying())return true;
 		if(IsPaused()){
-			// unhause sound
-			return FSOUND_SetPaused(miChannel,false);
+			// unpause sound
+			if(mpChannel){
+				result =3D FMOD_Channel_SetPaused(mpChannel,false);
+				ERRCHECK(result);
+			}
 		} else {
 			// start playing
-			miChannel =3D -1;
+			mpChannel =3D 0;
 			// alloc channel
-			if(mpStream)miChannel =3D FSOUND_Stream_Play(FSOUND_FREE,mpStream);
-			else if(mpSample)miChannel =3D FSOUND_PlaySound(FSOUND_FREE,mpSample);
-			// channel free?
-			//printf("PLAY @ %i\n",miChannel);
-			if(miChannel !=3D -1){
-				// set 3d position and velocity data
-				if(!FSOUND_3D_SetAttributes(miChannel,mlPos,mlVel))printf("ERROR set 3=
d data failed: %s\n", FMOD_ErrorString(FSOUND_GetError()));
+			if(mpSound && mSoundSystem && mSoundSystem->mpSystem){
+				result =3D FMOD_System_PlaySound(mSoundSystem->mpSystem, FMOD_CHANNEL_=
FREE, mpSound, true, &mpChannel);
+				ERRCHECK(result);
+			}
+			=

+			// channel free and working?
+			if(mpChannel){
+				=

+				if(mb3D){
+					// set 3d position and velocity data
+					result =3D FMOD_Channel_Set3DAttributes(mpChannel, &mlPos, &mlVel);
+					ERRCHECK(result);
+					// set currently set minmax distances
+					SetMinMaxDistance(mfMinDistance,mfMaxDistance);
+				} =

+				=

+				result =3D FMOD_Channel_SetPaused(mpChannel,false);
+				ERRCHECK(result);
+				=

 				return true;
 			} else return false;
 		}
@@ -159,50 +170,79 @@
 =

 	/// is this source playing at the moment? (paused is playing, isplaying=
=3Dfalse =3D> sound completly played or unplayable)
 	virtual const bool IsPlaying(){
-		if(miChannel =3D=3D -1)return false;
-		return FSOUND_IsPlaying(miChannel);
+		FMOD_BOOL b;
+		if(mpChannel =3D=3D 0)return false;
+		else {
+			FMOD_Channel_IsPlaying(mpChannel,&b);
+			if(b)return true;
+			else return false;
+		}
 	}
 	/// is the sound currently paused
 	virtual const bool IsPaused(){
-		if(miChannel =3D=3D -1)return false;
-		return FSOUND_GetPaused(miChannel);
+		FMOD_BOOL b;
+		if(mpChannel =3D=3D 0)return false;
+		else {
+			FMOD_Channel_GetPaused(mpChannel,&b);
+			if(b)return true;
+			else return false;
+		}
 	}
 	=

 	/// stops playing, play will start at the beginning of the sound =

 	virtual void Stop(){
-		if(miChannel =3D=3D -1)return;
-		FSOUND_StopSound(miChannel);
-		miChannel =3D -1;
+		if(mpChannel =3D=3D 0)return;
+		=

+		result =3D FMOD_Channel_Stop(mpChannel);
+		ERRCHECK(result);
 	}
 =

 	/// pause playing, =

 	virtual void Pause(){
-		if(miChannel =3D=3D -1)return;
-		FSOUND_SetPaused(miChannel,true);
+		if(mpChannel =3D=3D 0)return;
+		=

+		result =3D FMOD_Channel_SetPaused(mpChannel, true);
+		ERRCHECK(result);
 	}
 =

 	/// sets/gets the source volume, from 0.0 (silent) to 1.0 (max)
 	virtual void SetVolume(const float volume){
-		if(miChannel =3D=3D -1)return;
-		FSOUND_SetVolume(miChannel,char(volume * 255));
+		if(mpChannel =3D=3D 0)return;
+		=

+		result =3D FMOD_Channel_SetVolume(mpChannel, volume);
+		ERRCHECK(result);
 	}
 	=

 	virtual const float GetVolume(){
-		if(miChannel =3D=3D -1)return 0;
-		else return float(FSOUND_GetVolume(miChannel)) / 255.0f;
+		float b;
+		if(mpChannel =3D=3D 0)return 0.0f;
+		else {
+			FMOD_Channel_GetVolume(mpChannel, &b);
+			return b;
+		}
 	}
 =

 	/// sets/gets the source min/max distance
 	virtual void SetMinMaxDistance(const float min, const float max){
-		if(miChannel =3D=3D -1 || !Is3D())return;
-		FSOUND_3D_SetMinMaxDistance(miChannel,min * mSoundSystem->mfDistanceFact=
or,max * mSoundSystem->mfDistanceFactor);
+		mfMinDistance =3D min;
+		mfMaxDistance =3D max;
+
+		if(mpChannel =3D=3D 0 || !Is3D())return;
+		=

+		result =3D FMOD_Channel_Set3DMinMaxDistance(mpChannel, min * mSoundSyste=
m->mfDistanceFactor,max * mSoundSystem->mfDistanceFactor);
+		ERRCHECK(result);
 	}
 	=

 	virtual void GetMinMaxDistance(float &min, float &max){
-		if(miChannel =3D=3D -1 || !Is3D())return;
-		FSOUND_3D_GetMinMaxDistance(miChannel,&min,&max);
-		min /=3D mSoundSystem->mfDistanceFactor;
-		max /=3D mSoundSystem->mfDistanceFactor;
+		if(mpChannel =3D=3D 0 || !Is3D())return;
+		//result =3D FMOD_Channel_Get3DMinMaxDistance(mpChannel, &min,&max);
+		//ERRCHECK(result);
+			=

+		min =3D mfMinDistance;
+		max =3D mfMaxDistance;
+			=

+		//min /=3D mSoundSystem->mfDistanceFactor;
+		//max /=3D mSoundSystem->mfDistanceFactor;
 	}
 =

 	=

@@ -214,102 +254,136 @@
 	/// sets position of the soundsource
 	virtual void SetPosition(const float x, const float y, const float z){
 		if(!Is3D())return;
-		mlPos[0] =3D x * mSoundSystem->mfDistanceFactor;
-		mlPos[1] =3D y * mSoundSystem->mfDistanceFactor;
-		mlPos[2] =3D z * mSoundSystem->mfDistanceFactor;
-		if(miChannel =3D=3D -1)return;
-		if(!FSOUND_3D_SetAttributes(miChannel,mlPos,0))printf("ERROR SetAttribut=
es: %s\n", FMOD_ErrorString(FSOUND_GetError()));
+		mlPos.x =3D x * mSoundSystem->mfDistanceFactor;
+		mlPos.y =3D y * mSoundSystem->mfDistanceFactor;
+		mlPos.z =3D z * mSoundSystem->mfDistanceFactor;
+		if(mpChannel =3D=3D 0)return;
+		=

+		result =3D FMOD_Channel_Set3DAttributes(mpChannel, &mlPos, &mlVel);
+		ERRCHECK(result);
 	}
 =

 	/// sets velocity of the soundsource
 	virtual void SetVelocity(const float x, const float y, const float z){
 		if(!Is3D())return;
-		mlVel[0] =3D x * mSoundSystem->mfDistanceFactor;
-		mlVel[1] =3D y * mSoundSystem->mfDistanceFactor;
-		mlVel[2] =3D z * mSoundSystem->mfDistanceFactor;
-		if(miChannel =3D=3D -1)return;
-		if(!FSOUND_3D_SetAttributes(miChannel,mlVel,0))printf("ERROR SetAttribut=
es: %s\n", FMOD_ErrorString(FSOUND_GetError()));
+		mlVel.x =3D x * mSoundSystem->mfDistanceFactor;
+		mlVel.y =3D y * mSoundSystem->mfDistanceFactor;
+		mlVel.z =3D z * mSoundSystem->mfDistanceFactor;
+		if(mpChannel =3D=3D 0)return;
+
+		result =3D FMOD_Channel_Set3DAttributes(mpChannel, &mlPos, &mlVel);
+		ERRCHECK(result);
 	}
 =

 	/// gets position of the soundsource
 	virtual void GetPosition(float &x, float &y, float &z){
 		if(!Is3D())return;
-		x =3D mlPos[0] / mSoundSystem->mfDistanceFactor;
-		y =3D mlPos[1] / mSoundSystem->mfDistanceFactor;
-		z =3D mlPos[2] / mSoundSystem->mfDistanceFactor;
+		x =3D mlPos.x / mSoundSystem->mfDistanceFactor;
+		y =3D mlPos.y / mSoundSystem->mfDistanceFactor;
+		z =3D mlPos.z / mSoundSystem->mfDistanceFactor;
 	}
 	=

 	/// gets velocity of the soundsource
 	virtual void GetVelocity(float &x, float &y, float &z){
 		if(!Is3D())return;
-		x =3D mlVel[0] / mSoundSystem->mfDistanceFactor;
-		y =3D mlVel[1] / mSoundSystem->mfDistanceFactor;
-		z =3D mlVel[2] / mSoundSystem->mfDistanceFactor;
-	}
-
-	/// channel used for playback, -1 is no channel
-	int miChannel;
-	/// sample storing the sound stuff
-	FSOUND_SAMPLE *mpSample;
-	/// stream used in this source, use either sample or stream, but never bo=
th
-	FSOUND_STREAM *mpStream;
+		x =3D mlVel.x / mSoundSystem->mfDistanceFactor;
+		y =3D mlVel.y / mSoundSystem->mfDistanceFactor;
+		z =3D mlVel.z / mSoundSystem->mfDistanceFactor;
+	}
+
+private:
+	FMOD_SOUND     *mpSound;
+	FMOD_CHANNEL   *mpChannel;
+	=

 	/// sound system this source belongs to
 	cSoundSystemFmod *mSoundSystem;
 	/// is 3d?
 	bool mb3D;
 	=

+	/// min,max distance for 3d sound (unchanged as given from the user)
+	float mfMinDistance,mfMaxDistance;
+	=

 	/// sound position and velocity
-	float mlPos[3];
-	float mlVel[3];
+	FMOD_VECTOR mlPos;
+	FMOD_VECTOR mlVel;
 };
 =

 // -----------------------------------------------------------------------=
-------------------
 // -----------------------------------------------------------------------=
-------------------
 =

-cSoundSystemFmod::cSoundSystemFmod(const int frequency, const int maxchann=
els) : miMaxChannels(maxchannels), mfDistanceFactor(1.0f) {
-	FSOUND_SetMixer(FSOUND_MIXER_AUTODETECT);
-	FSOUND_SetMinHardwareChannels(maxchannels);
-	FSOUND_Init(frequency,maxchannels,0);
+cSoundSystemFmod::cSoundSystemFmod(const int frequency, const int maxchann=
els) : mpSystem(0), miMaxChannels(maxchannels), mfDistanceFactor(1.0f) {
+	result =3D FMOD_System_Create(&mpSystem);
+	ERRCHECK(result);
+
+	if(mpSystem){
+		unsigned int version;
+		result =3D FMOD_System_GetVersion(mpSystem, &version);
+		ERRCHECK(result);
+
+		if (version < FMOD_VERSION){
+			printf("Error!  You are using an old version of FMOD %08x.  This progra=
m requires %08x\n", version, FMOD_VERSION);
+		}
+
+		//result =3D FMOD_System_SetDriver(mpSystem,0);
+		//ERRCHECK(result);
+		result =3D FMOD_System_Init(mpSystem, miMaxChannels, FMOD_INIT_NORMAL, 0=
);
+		ERRCHECK(result);
+	}
+
 	SetListenerPosition(0.0f,0.0f,0.0f);
 	SetListenerVelocity(0.0f,0.0f,0.0f);
 }
 =

 cSoundSystemFmod::~cSoundSystemFmod(){
-	FSOUND_Close();
-}
+	if(mpSystem){
+		result =3D FMOD_System_Close(mpSystem);
+		ERRCHECK(result);
+		result =3D FMOD_System_Release(mpSystem);
+		ERRCHECK(result);
+	}
+}
+
+
+void cSoundSystemFmod::UpdatePositionAndVelocity(){
+	if(mpSystem){
+		result =3D FMOD_System_Set3DListenerAttributes(mpSystem, 0, &mlPos, &mlV=
el, 0, 0);//&forward, &up);
+		ERRCHECK(result);
+	}
+}
+
 =

 /// sets position of the listener
 void cSoundSystemFmod::SetListenerPosition(const float x, const float y, c=
onst float z){
-	mlPos[0] =3D x * mfDistanceFactor;
-	mlPos[1] =3D y * mfDistanceFactor;
-	mlPos[2] =3D z * mfDistanceFactor;
-	FSOUND_3D_Listener_SetAttributes(mlPos,mlVel,1.0f,0,0,1.0f,0,0);
+	mlPos.x =3D x * mfDistanceFactor;
+	mlPos.y =3D y * mfDistanceFactor;
+	mlPos.z =3D z * mfDistanceFactor;
+
+	UpdatePositionAndVelocity();
 }
 =

 /// sets velocity of the listener
 void cSoundSystemFmod::SetListenerVelocity(const float x, const float y, c=
onst float z){
-	mlVel[0] =3D x * mfDistanceFactor;
-	mlVel[1] =3D y * mfDistanceFactor;
-	mlVel[2] =3D z * mfDistanceFactor;
-	FSOUND_3D_Listener_SetAttributes(mlPos,mlVel,1.0f,0,0,1.0f,0,0);
+	mlVel.x =3D x * mfDistanceFactor;
+	mlVel.y =3D y * mfDistanceFactor;
+	mlVel.z =3D z * mfDistanceFactor;
+
+	UpdatePositionAndVelocity();
 }
 =

 /// gets position of the listener
 void cSoundSystemFmod::GetListenerPosition(float &x, float &y, float &z){
 	//float v[3];
-	//FSOUND_3D_Listener_GetAttributes(v,0,0,0,0,0,0,0);
-	x =3D mlPos[0] / mfDistanceFactor;
-	y =3D mlPos[1] / mfDistanceFactor;
-	z =3D mlPos[2] / mfDistanceFactor;
+	x =3D mlPos.x / mfDistanceFactor;
+	y =3D mlPos.y / mfDistanceFactor;
+	z =3D mlPos.z / mfDistanceFactor;
 }
 =

 /// gets velocity of the listener
 void cSoundSystemFmod::GetListenerVelocity(float &x, float &y, float &z){
 	//float v[3];
-	//FSOUND_3D_Listener_GetAttributes(0,v,0,0,0,0,0,0);
-	x =3D mlVel[0] / mfDistanceFactor;
-	y =3D mlVel[1] / mfDistanceFactor;
-	z =3D mlVel[2] / mfDistanceFactor;
+	x =3D mlVel.x / mfDistanceFactor;
+	y =3D mlVel.y / mfDistanceFactor;
+	z =3D mlVel.z / mfDistanceFactor;
 }
 =

 /// sets/gets the sound system volume, from 0.0 (silent) to 1.0 (max)
@@ -317,7 +391,20 @@
 const float cSoundSystemFmod::GetVolume(){return 1.0f;}
 =

 /// factor to multiply every coordinate with to adjust local space to musi=
c space
-void cSoundSystemFmod::SetDistanceFactor(const float s){mfDistanceFactor =
=3D s;}
+/// IMPORTANT call this prior to sound creation !!!!!!!
+void cSoundSystemFmod::SetDistanceFactor(const float s){
+	// adjust the current coordinates
+	for(int i =3D 0;i < 3;++i){
+		mlPos.x =3D mlPos.x / mfDistanceFactor * s;
+		mlPos.y =3D mlPos.y / mfDistanceFactor * s;
+		mlPos.z =3D mlPos.z / mfDistanceFactor * s;
+		mlVel.x =3D mlVel.x / mfDistanceFactor * s;
+		mlVel.y =3D mlVel.y / mfDistanceFactor * s;
+		mlVel.z =3D mlVel.z / mfDistanceFactor * s;
+	}
+
+	mfDistanceFactor =3D s;	=

+}
 const float cSoundSystemFmod::GetDistanceFactor(){return mfDistanceFactor;}
 =

 /// creates 2d sound from file or null on error
@@ -339,13 +426,13 @@
 }
 =

 /// stepper, if the underlying sound system needs this
-void cSoundSystemFmod::Step(){FSOUND_Update();}
+void cSoundSystemFmod::Step(){if(mpSystem)FMOD_System_Update(mpSystem);}
 =

 // -----------------------------------------------------------------------=
-------------------
 // -----------------------------------------------------------------------=
-------------------
 	=

 cSoundSystem *CreateSoundSystemFmod(const int frequency){
 	// TODO dont need frequency????
-	int channels =3D 16;
+	int channels =3D 64;
 	return new cSoundSystemFmod(frequency,channels);
 }



From no-reply at zwischenwelt.org  Wed Aug  1 22:26:18 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 01 Aug 2007 20:26:18 -0000
Subject: [Iris-commit] [IRIS] r1319 - /branches/knut/data/lua/
Message-ID: <20070801202619.EFCF6B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Wed Aug  1 22:26:16 2007
New Revision: 1319

Log:
ported changes from trunk to knut/data/lua branch, r 1031:1313

Added:
    branches/knut/data/lua/filter.art.lua
      - copied unchanged from r1313, trunk/data/lua/filter.art.lua
    branches/knut/data/lua/filter.granny.lua
      - copied unchanged from r1313, trunk/data/lua/filter.granny.lua
    branches/knut/data/lua/filter.map.lua
      - copied unchanged from r1313, trunk/data/lua/filter.map.lua
    branches/knut/data/lua/net.corpse.lua
      - copied unchanged from r1313, trunk/data/lua/net.corpse.lua
    branches/knut/data/lua/net.customhouse.lua
      - copied unchanged from r1313, trunk/data/lua/net.customhouse.lua
Modified:
    branches/knut/data/lua/lib.3d.map.lua
    branches/knut/data/lua/lib.3d.mobileanim.lua
    branches/knut/data/lua/lib.3d.mousepick.lua
    branches/knut/data/lua/lib.3d.renderer.lua
    branches/knut/data/lua/lib.charcreate.lua
    branches/knut/data/lua/lib.compass.lua
    branches/knut/data/lua/lib.corpse.lua
    branches/knut/data/lua/lib.data.lua
    branches/knut/data/lua/lib.debugmenu.lua
    branches/knut/data/lua/lib.devtool.lua
    branches/knut/data/lua/lib.fallback.lua
    branches/knut/data/lua/lib.gui.lua
    branches/knut/data/lua/lib.guimaker.lua
    branches/knut/data/lua/lib.gumpparser.lua
    branches/knut/data/lua/lib.input.lua
    branches/knut/data/lua/lib.loading.lua
    branches/knut/data/lua/lib.mainmenu.lua
    branches/knut/data/lua/lib.meshexporter.lua
    branches/knut/data/lua/lib.modelanim.lua
    branches/knut/data/lua/lib.models.lua
    branches/knut/data/lua/lib.mount.lua
    branches/knut/data/lua/lib.net.lua
    branches/knut/data/lua/lib.packet.lua
    branches/knut/data/lua/lib.protocol.lua
    branches/knut/data/lua/lib.skill.lua
    branches/knut/data/lua/lib.sound.lua
    branches/knut/data/lua/lib.spellbooks.lua
    branches/knut/data/lua/lib.static.lua
    branches/knut/data/lua/lib.terrain.lua
    branches/knut/data/lua/lib.test.lua
    branches/knut/data/lua/lib.time.lua
    branches/knut/data/lua/lib.uoids.lua
    branches/knut/data/lua/lib.util.lua
    branches/knut/data/lua/lib.walking2.lua
    branches/knut/data/lua/main.lua
    branches/knut/data/lua/net.login.lua
    branches/knut/data/lua/net.other.lua
    branches/knut/data/lua/net.securetrade.lua
    branches/knut/data/lua/net.sound.lua
    branches/knut/data/lua/net.uodragdrop.lua

Modified: branches/knut/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.map.lua (original)
+++ branches/knut/data/lua/lib.3d.map.lua Wed Aug  1 22:26:16 2007
@@ -139,6 +139,7 @@
 				chunk.terraingfx =3D CreateRootGfx3D()
 				chunk.terraingfx:SetMesh(meshname)
 				chunk.terraingfx:SetPosition(x,y,0)
+				chunk.terraingfx:SetCastShadows(gTerrainCastShadows)
 				chunk.terraingfx:SetVisible(self.gbBlendOutTerrainVisible)
 			end
 		end
@@ -158,16 +159,22 @@
 				for i =3D 0,iStaticCount-1 do
 					iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- oper=
ates on the block that was last loaded using :Load()
 					local entity =3D {}
-					entity.xloc =3D (iBlockUO_X+x)*8 + iX
-					entity.yloc =3D (iBlockUO_Y+y)*8 + iY
-					entity.zloc =3D iZ -- in tilecoords from uo
+
+					-- FILTER: correction
+					entity.xadd =3D FilterPositionX(iTileTypeID) or 0
+					entity.yadd =3D FilterPositionY(iTileTypeID) or 0
+					entity.zadd =3D FilterPositionZ(iTileTypeID) or 0
+
+					entity.xloc =3D (iBlockUO_X+x)*8 + iX + entity.xadd
+					entity.yloc =3D (iBlockUO_Y+y)*8 + iY + entity.yadd
+					entity.zloc =3D iZ + entity.zadd -- in tilecoords from uo
+
 					entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc,entity.y=
loc,entity.zloc*0.1)
 					entity.iBlockX =3D iBlockUO_X+x
 					entity.iBlockY =3D iBlockUO_Y+y
 					entity.id =3D i
 					entity.iTileTypeID =3D iTileTypeID
 					entity.iHue =3D iHue
-					=

 					=

 					meshname =3D (not gForceFallBackBillboards_Statics) and GetStaticMesh=
Name(iTileTypeID,iHue)
 					if (meshname and meshname ~=3D "" and (not MeshIsPseudoBillBoard(iTil=
eTypeID))) then
@@ -181,22 +188,32 @@
 						entity.sx =3D sx
 						entity.sy =3D sy
 						entity.sz =3D sz
-						=

-						-- ApplyStaticEntityHue(entity,iHue)		=

-						=

+
+						-- lights don't cast shadows
+						if (gLightsources) then
+							local arrtiletype =3D {}
+							arrtiletype =3D GetStaticTileType(iTileTypeID)
+							if( BitwiseAND(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) =
~=3D 0 ) then
+								local x,y,z =3D Renderer3D:UOPosToLocal(entity.x,entity.y,entity.z=
 * 0.1)
+								Client_AddPointLight(entity.x-0.5,entity.y-0.5,entity.z+arrtiletyp=
e.miHeight, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
+							end
+						end
+
 						local myLayer =3D iZ
 						local myLayerStaticGeom =3D chunk.pStaticGeometryLayers[myLayer]
 						if (not myLayerStaticGeom) then
 							myLayerStaticGeom =3D CreateStaticGeometry()
 							chunk.pStaticGeometryLayers[myLayer] =3D myLayerStaticGeom
 						end
+
 						-- apply x mirror
 						myLayerStaticGeom:AddEntity(entity.staticentity,entity.x,entity.y,en=
tity.z,qw,qx,qy,qz,sx,sy,sz)
 						table.insert(chunk.lStaticEntities,entity)
+
 					elseif (gEnableFallBackBillboards_Statics) then
-						-- fallback to billboard with original art or =

-						=

+						-- fallback to billboard with original art or						=

 						local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID + 16=
384, gSeasonSetting)
+
 						if (not IsArtBillboardFallBackSkipped(iTileTypeID)) then
 							entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc+0.5,en=
tity.yloc+0.5,entity.zloc*0.1 + 0.5)
 							entity.gfx =3D CreateRootGfx3D()
@@ -215,8 +232,9 @@
 	-- TODO : fish in water ? other gimiks ?
 	=

 	for layerZ,layerStaticGeom in pairs(chunk.pStaticGeometryLayers) do =

-		layerStaticGeom:Build() =

+		--layerStaticGeom:SetCastShadows(true)
 		layerStaticGeom:SetVisible(self:IsZLayerVisible(layerZ))
+		layerStaticGeom:Build()
 	end
 	return chunk
 end
@@ -253,6 +271,7 @@
 	self:MobileSetVisible(mobile,self:IsZLayerVisible(mobile.z))
 end
 =

+-- TODO: blend out mounts
 function Renderer3D:BlendOutLayersAbovePlayer ()
 	local x,y,z =3D GetPlayerPos()
 	if (not z or not gStaticBlockLoader) then return end
@@ -275,6 +294,8 @@
 			local iStaticCount =3D gStaticBlockLoader:Count() -- operates on the bl=
ock that was last loaded using :Load()
 			local iPX =3D x - 8 * math.floor(x/8)
 			local iPY =3D y - 8 * math.floor(y/8)
+
+			local iTileTypeID,iX,iY,iZ,iHue
 			for i =3D 0,iStaticCount-1 do
 				iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- opera=
tes on the block that was last loaded using :Load()
 				if (iX =3D=3D iPX and iY =3D=3D iPY and iZ > playerheadpos) then playe=
rIsInside =3D true end
@@ -285,12 +306,11 @@
 			end
 		end
 		=

-		-- check dynamics for multis to detect house roofs and stuff like this
-		=

+		-- check dynamics for multis to detect house roofs and stuff like this		=

 		for k,object in pairs(gObjectList) do =

 			if (object.isdynamic) then
 				local dynamic =3D object
-				if dynamic.lMultiChildGfx then
+				if (dynamic.lMultiChildGfx) then
 					for k,child in pairs(dynamic.lMultiChildGfx) do
 						if (x =3D=3D dynamic.x+child.xloc and y =3D=3D dynamic.y+child.yloc =
and dynamic.z+child.zloc > playerheadpos) then
 							playerIsInside =3D true =

@@ -299,7 +319,7 @@
 				end
 			end
 		end
-		=

+
 		-- blend out layers above player head if inside
 		if (playerIsInside) then myLayer =3D playerheadpos end
 	end

Modified: branches/knut/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.mobileanim.lua (original)
+++ branches/knut/data/lua/lib.3d.mobileanim.lua Wed Aug  1 22:26:16 2007
@@ -53,6 +53,7 @@
 =

 -- calling this interrupts any playing serverside anim
 function Renderer3D:MobileStartClientSideAnim (mobile)
+	if (not mobile.equipment) then return end
 	mobile.animinit =3D true
 	local bodyid =3D MobileArtId2BodyId(mobile.body)
 	=


Modified: branches/knut/data/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.mousepick.lua (original)
+++ branches/knut/data/lua/lib.3d.mousepick.lua Wed Aug  1 22:26:16 2007
@@ -278,6 +278,7 @@
 				self.gMousePickBBox:SetPosition(entity.x,entity.y,entity.z)
 				self.gMousePickBBox:SetOrientation(entity.qw,entity.qx,entity.qy,entit=
y.qz)
 				self.gMousePickBBox:SetScale(entity.sx,entity.sy,entity.sz)
+				self.gMousePickBBox:SetNormaliseNormals(true)
 			end
 		end
 	elseif (o.hittype =3D=3D kMousePickHitType_Terrain) then -- terrain tile
@@ -310,7 +311,8 @@
 			--local qw,qx,qy,qz =3D Quaternion.identity()
 			local qw,qx,qy,qz =3D GetStaticMeshOrientation(dynamic.artid) -- TODO :=
 WRONG FOR ROTATED DYNAMICS (dir) !!!
 			self.gMousePickBBox:SetOrientation(qw,qx,qy,qz)
-			self.gMousePickBBox:SetScale(-1,1,1)
+			self.gMousePickBBox:SetScale(-1,1,1)		-- (-1) thats because xmirror bug=
 and wrong mirrored mashes
+			self.gMousePickBBox:SetNormaliseNormals(true)
 			self.gMousePickBBox:SetVisible(true)
 		end
 	elseif (o.hittype =3D=3D kMousePickHitType_Mobile) then

Modified: branches/knut/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.renderer.lua (original)
+++ branches/knut/data/lua/lib.3d.renderer.lua Wed Aug  1 22:26:16 2007
@@ -79,7 +79,6 @@
 	Client_ClearLights()
 	Client_AddDirectionalLight(1,1,-1)
 	Client_SetAmbientLight(0.4, 0.4, 0.4, 1)
-	-- GetMainViewport():SetBackCol(ColourValue(0.5,0.5,1));
 	=

 	self.gbActive =3D true
 	self:SetMapEnvironment()
@@ -109,37 +108,58 @@
 --###############################
 =

 StandardEffect =3D 0
-Fireball	=3D hex2num("0x36d4")
-MagicArrow	=3D hex2num("0x36e4")
-PField		=3D hex2num("0x376a")
-PoisonWall	=3D hex2num("0x3914")
-Teleport	=3D hex2num("0x3728")
-Healing		=3D hex2num("0x376A")
-FlameStrike =3D hex2num("0x3709")
-Explosion	=3D hex2num("0x36bd")
+Fireball			=3D hex2num("0x36d4")
+MagicArrow			=3D hex2num("0x36e4")
+PoisonField			=3D hex2num("0x3914")
+Teleport			=3D hex2num("0x3728")
+Healing				=3D hex2num("0x376A")
+FlameStrike			=3D hex2num("0x3709")
+Explosion			=3D hex2num("0x36bd")
+ConsecrateWeapon1	=3D hex2num("0x3779")
+MindRot				=3D hex2num("0x373A")
+PainSpike			=3D hex2num("0x37C4")	-- needs rework
+PoisonStrike		=3D hex2num("0x36B0")
+StranglePart1		=3D hex2num("0x36CB")
+StranglePart2		=3D hex2num("0x374A")
+Wither				=3D hex2num("0x37CC")
+
+ParalyzeField		=3D hex2num("0x0001")	-- ??
+FireField			=3D hex2num("0x0002") -- ???
+ConsecrateWeapon2=3D 9501	--???
 --Fizzels		=3D hex2num("0x3735")
+
+-- effects can have a ttl (time-to-live, effect.ttl in milliseconds, defau=
lt is gParticleEffectDefaultTTL in ms)
+gParticleEffectDefaultTTL =3D 10 * 1000
+gParticleEffectDefaultSpeed =3D 0.1
 gParticleEffects =3D {}
 gParticleEffects[StandardEffect]=3D { etype=3D0, name=3D"bluering", relx=
=3D0.5, rely=3D0.5, relz=3D0.1, scalex=3D1, scaley=3D1, scalez=3D1 }
 gParticleEffects[Fireball]		=3D { etype=3D0, name=3D"Large Fireball", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
 gParticleEffects[MagicArrow]	=3D { etype=3D2, name=3D"Magic Arrow", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
-gParticleEffects[PField]		=3D { etype=3D2, name=3D"ParalizeWall", relx=3D0=
.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
-gParticleEffects[PoisonWall]	=3D { etype=3D2, name=3D"PoisonWall", relx=3D=
0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[ParalyzeField]	=3D { etype=3D2, name=3D"ParalyzeField", r=
elx=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[PoisonField]	=3D { etype=3D2, name=3D"PoisonField", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[FireField]		=3D { etype=3D2, name=3D"FireField", relx=3D0=
.5, rely=3D0.5, relz=3D0.5, scalex=3D0.4, scaley=3D0.4, scalez=3D0.1}
 gParticleEffects[Teleport]		=3D { etype=3D2, name=3D"Teleport", relx=3D0.5=
, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
 gParticleEffects[Healing]		=3D { etype=3D3, name=3D"Healing", relx=3D0.5, =
rely=3D0.5, relz=3D0.1, scalex=3D1, scaley=3D1, scalez=3D1}
 gParticleEffects[FlameStrike]	=3D { etype=3D3, name=3D"Magic Arrow", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
-gParticleEffects[Explosion]		=3D { etype=3D0, name=3D"Explosion (Iris)", r=
elx=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[Explosion]		=3D { etype=3D0, name=3D"Explosion", relx=3D0=
.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[ConsecrateWeapon1]=3D { etype=3D3, name=3D"ConsecrateWeap=
on1", relx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D0.2, scaley=3D0.2, scalez=
=3D0.1}
+gParticleEffects[ConsecrateWeapon2]=3D { etype=3D0, name=3D"ConsecrateWeap=
on2", relx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D0.2, scaley=3D0.2, scalez=
=3D0.1}
+gParticleEffects[MindRot]		=3D { etype=3D3, name=3D"MindRot", relx=3D0.5, =
rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[PainSpike]		=3D { etype=3D3, name=3D"PainSpike", relx=3D0=
.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[PoisonStrike]	=3D { etype=3D3, name=3D"PoisonStrike", rel=
x=3D0.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[StranglePart1]	=3D { etype=3D3, name=3D"StranglePart1", r=
elx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[StranglePart2]	=3D { etype=3D3, name=3D"StranglePart2", r=
elx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[Wither]		=3D { etype=3D3, name=3D"Wither", relx=3D0.5, re=
ly=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
 =

 -- TODO: manage particle effects, esp. huedfx, decide between effecttypes
 function Renderer3D:AddEffect( effect )
-	if (gParticleEffects[effect.itemid]) then
-		Renderer3D:AddParticleEffect( effect, gParticleEffects[effect.itemid].na=
me,
-								gParticleEffects[effect.itemid].relx, gParticleEffects[effect.item=
id].rely, gParticleEffects[effect.itemid].relz,
-								gParticleEffects[effect.itemid].scalex, gParticleEffects[effect.it=
emid].scaley, gParticleEffects[effect.itemid].scalez)
-	else
-		Renderer3D:AddParticleEffect( effect, gParticleEffects[StandardEffect].n=
ame,
-								gParticleEffects[StandardEffect].relx, gParticleEffects[StandardEf=
fect].rely, gParticleEffects[StandardEffect].relz,
-								gParticleEffects[StandardEffect].scalex, gParticleEffects[Standard=
Effect].scaley, gParticleEffects[StandardEffect].scalez)
-	end
+	local id =3D StandardEffect
+	=

+	if (gParticleEffects[effect.itemid]) then id =3D effect.itemid end
+	=

+	Renderer3D:AddParticleEffect( effect, gParticleEffects[id].name,
+							gParticleEffects[id].relx, gParticleEffects[id].rely, gParticleEffe=
cts[id].relz,
+							gParticleEffects[id].scalex, gParticleEffects[id].scaley, gParticle=
Effects[id].scalez)
 end
 =

 --gHued_FX =3D {}
@@ -156,14 +176,14 @@
 	end
 ]]--
 function Renderer3D:AddHuedEffect( effect, relx, rely, relz )
-	local meshname =3D GetStaticMeshName(effect.itemid+32*512*0,effect.hue)
+	local meshname =3D GetStaticMeshName(effect.itemid,effect.hue)
 	if (meshname) then
 		effect.gfx =3D CreateRootGfx3D()
 		effect.gfx:SetMesh(meshname)
 		effect.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
-		effect.gfx:SetPosition(self:UOPosToLocal(effect.source_locx + relx,effec=
t.source_locy + rely,effect.source_locz * 0.1 + relz))
+		effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,effe=
ct.current_locy + rely,effect.current_locz * 0.1 + relz))
 	else
-		printf("Hued Paricle effect failed Mesh=3D0x%04x not found.\n",effect.it=
emid+32*512*0)
+		printf("Hued Paricle effect failed Mesh=3D0x%04x not found.\n",effect.it=
emid)
 	end
 end
 =

@@ -176,10 +196,101 @@
 =

 -- TODO : check particle before
 function Renderer3D:AddParticleEffect( effect, particlename, relx, rely, r=
elz, scalex, scaley, scalez)
+	printdebug("effect","AddParticleEffect")
 	effect.gfx=3DCreateRootGfx3D()
 	effect.gfx:SetParticleSystem(particlename)
-	effect.gfx:SetPosition(self:UOPosToLocal(effect.source_locx + relx,effect=
.source_locy + rely,effect.source_locz * 0.1 + relz))
+	effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,effec=
t.current_locy + rely,effect.current_locz * 0.1 + relz))
 	effect.gfx:SetScale( scalex or 1, scaley or 1, scalez or 1)
+--	effect.gfx:SetNormaliseNormals(true)
+
+	--RegisterListener("Hook_MainStep",function(ticks) =

+	InvokeLater(effect.ttl or gParticleEffectDefaultTTL, function ()
+		-- destroy effect after timeout
+		printdebug("effect","destroy effect")
+		if effect and effect.gfx:IsAlive() then
+			effect.gfx:Destroy()
+			effect =3D nil
+		end
+	end)
+	=

+	-- effect.speed =3D input:PopNetUint8()
+	-- effect.duration =3D input:PopNetUint8()
+	=

+	--~ print("DEBUG",effect.speed,effect.duration)
+	--~ print("##################################")
+	printdebug("effect",vardump(effect))
+	--~ print("##################################")
+	--~ print("DEBUG current",effect.current_locx,effect.current_locy,effect.=
current_locz)
+	--~ print("DEBUG source",effect.source_locx,effect.source_locy,effect.sou=
rce_locz)
+	--~ print("DEBUG target",effect.target_locx,effect.target_locy,effect.tar=
get_locz)
+	--~ print("##################################")
+
+	if =

+		effect.current_locx ~=3D effect.target_locx or
+		effect.current_locy ~=3D effect.target_locy or
+		effect.current_locz ~=3D effect.target_locz
+	then
+		-- add stepper to handle effect movement
+		RegisterStepper(function()
+			if not effect or not effect.gfx:IsAlive() then
+				-- i am dead so stop this
+				return true
+			end
+			=

+			if =

+				-- distance from current position to target lower then 0.1
+				math.abs(effect.current_locx - effect.target_locx) < 0.1 and
+				math.abs(effect.current_locy - effect.target_locy) < 0.1 and
+				math.abs(effect.current_locz - effect.target_locz) < 0.1
+			then
+				-- stop moving
+				printdebug("effect","DEBUG STOP")
+				effect.gfx:Destroy()
+				effect =3D nil
+				return true
+			else
+				-- move
+				=

+				-- current -> target
+				local dx =3D effect.target_locx - effect.current_locx
+				local dy =3D effect.target_locy - effect.current_locy
+				local dz =3D effect.target_locz - effect.current_locz
+				-- to target
+				local len =3D math.sqrt(dx*dx + dy*dy + dz*dz)
+				=

+				local speed =3D effect.speed or gParticleEffectDefaultSpeed
+				=

+				local fps_factor =3D 1 / OgreAvgFPS()
+				local uo_speed_factor =3D 5
+				=

+				-- adjust movement vector
+				dx =3D dx / len * speed * fps_factor * uo_speed_factor
+				dy =3D dy / len * speed * fps_factor * uo_speed_factor
+				dz =3D dz / len * speed * fps_factor * uo_speed_factor
+				-- new motified len
+				local len2 =3D math.sqrt(dx*dx + dy*dy + dz*dz)
+			=

+				if ( len2 > len ) then
+					-- reached the end or "missed"
+					effect.current_locx =3D effect.target_locx
+					effect.current_locy =3D effect.target_locy
+					effect.current_locz =3D effect.target_locz
+				else 			=

+					-- move
+					effect.current_locx =3D effect.current_locx + dx =

+					effect.current_locy =3D effect.current_locy + dy
+					effect.current_locz =3D effect.current_locz + dz
+				end
+				=

+				--~ print("=3D=3D=3D=3D=3D DEBUG =3D=3D=3D=3D=3D")
+				--~ print("DEBUG dx,dy,dz",dx,dy,dz)
+				--~ print("DEBUG len,speed,fps",len,speed,fps_factor)
+				--~ print("DEBUG current",effect.current_locx,effect.current_locy,effe=
ct.current_locz)
+				=

+				effect.gfx:SetPosition(self:UOPosToLocal(effect.current_locx + relx,ef=
fect.current_locy + rely,effect.current_locz * 0.1 + relz))
+			end
+		end)
+	end
 end
 =

 --###############################
@@ -310,7 +421,6 @@
 		local r,g,b =3D 0.0, 1.0, 0.0
 		local a =3D 0.3
 		local e =3D 1.0
-
 		mobile.selection =3D CreateRootGfx3D()
 		mobile.selection:SetSimpleRenderable()
 		mobile.selection:SetMaterial("aura_base")
@@ -463,8 +573,8 @@
 			-- display the text
 			mobile.chattext.mLastText =3D mobile.mlastChatText
 			mobile.chattext.gfx:SetColour(r,g,b,a)
-			mobile.chattext.gfx:SetFont(gUniFontLoaderType and "font_unifont1" or "=
TrebuchetMSBold")
-			mobile.chattext.gfx:SetCharHeight(22)
+			mobile.chattext.gfx:SetFont(gUniFontLoaderType and gUniFontName[gChatTe=
xt_UniFontNumber] or "TrebuchetMSBold")
+			mobile.chattext.gfx:SetCharHeight(gUniFontHeight[gChatText_UniFontNumbe=
r])
 			mobile.chattext.gfx:SetText(mobile.mlastChatText)
 			local w,h =3D mobile.chattext.gfx:GetTextBounds()
 			mobile.chattext.gfx:SetPos(0, 0 - h)
@@ -570,9 +680,11 @@
 --###      DYNAMIC ITEMS      ###
 --###############################
 =

+--[[
 function Renderer3D:DynamicSetVisible (dynamic,bVisible)
 	if (dynamic.gfx) then dynamic.gfx:SetVisible(bVisible) end
 end
+]]--
 =

 function Renderer3D:UpdateDynamicItemPos ( dynamic )
 	if (dynamic.gfx) then
@@ -585,12 +697,49 @@
 end
 =

 function Renderer3D:CreateDynamicGfx( item )
-	item.xadd =3D 0
-	item.yadd =3D 0
-	item.zadd =3D 0
+
+	assert(not item.gfx)
+
+	-- FILTER: get correction
+	item.xadd =3D FilterPositionX(item.artid) or 0
+	item.yadd =3D FilterPositionY(item.artid) or 0
+	item.zadd =3D FilterPositionZ(item.artid) or 0
+
+	-- Detect Multis
 	if item.artid >=3D gMulti_ID then
-		-- multi detected
-		if gMultiLoader then
+		-- Check if Serverside Multi (Custom Multi)
+		print("-----------------------------")
+		print("ARTID",item.artid,vardump(item))
+		if (item.lTile) then
+			printdebug("multi","Serverside Multi detected")
+			local rootgfx =3D CreateRootGfx3D()
+			item.lMultiChildGfx =3D {}
+			for k,v in pairs(item.lTile) do
+				-- create model part
+				local child =3D rootgfx:CreateChild()
+				local meshname =3D GetStaticMeshName(v.artid)
+				if meshname then =

+					child:SetMesh(meshname)
+					child:SetRenderingDistance(gCurrentRenderer.gDynamicMaxRenderDist)
+					child:SetPosition(-v.x,v.y,v.z*0.1)
+					child:SetScale(-1,1,1)		-- (-1) thats because xmirror bug and wrong m=
irrored mashes
+					child:SetNormaliseNormals(true)
+					child.xloc =3D -v.x
+					child.yloc =3D v.y
+					child.zloc =3D v.z
+					child.artid =3D v.artid
+					table.insert(item.lMultiChildGfx, child)
+				end
+			end
+			item.gfx =3D rootgfx
+
+			-- FILTER: correction : TODO needed??
+			for k,v in pairs(item.lMultiChildGfx) do item.gfx:SetOrientation(GetSta=
ticMeshOrientation(v.artid)) end
+
+			self:UpdateDynamicItemPos(item)
+		-- otherwise ist a Clientside Multi
+		elseif gMultiLoader then
+			printdebug("multi","Clientside Multi detected")
 			local rootgfx =3D CreateRootGfx3D()
 			local id =3D item.artid - gMulti_ID
 			=

@@ -603,7 +752,7 @@
 				local blocknum,xloc,yloc,zloc,flags
 				blocknum,xloc,yloc,zloc,flags =3D gMultiLoader:GetMultiParts(id,p)
 				=

-				-- print("  part",p,":",blocknum,x,y,z,flags)
+				--printdebug("multi","part",p,":",blocknum,xloc,yloc,zloc,flags)
 				=

 				-- skip invisible parts
 				if flags =3D=3D 1 then
@@ -613,7 +762,10 @@
 					if meshname then =

 						child:SetMesh(meshname)
 						child:SetRenderingDistance(self.gDynamicMaxRenderDist)
-						child:SetPosition(-xloc,yloc,zloc*0.1)
+						local x,y,z =3D Renderer3D:UOPosToLocal(xloc,yloc,zloc * 0.1)
+						child:SetPosition(x,y,z)
+						child:SetScale(-1,1,1)			-- (-1) thats because xmirror bug and wrong=
 mirrored mashes
+						child:SetNormaliseNormals(true)
 						child.xloc =3D xloc
 						child.yloc =3D yloc
 						child.zloc =3D zloc
@@ -624,43 +776,75 @@
 					end
 				end
 			end
-			=

-			item.mbIsMulti =3D true
-			=

+			--item.mbIsMulti =3D true
 			item.gfx =3D rootgfx
+
+			-- FILTER: correction : TODO needed??
+			for k,v in pairs(item.lMultiChildGfx) do item.gfx:SetOrientation(GetSta=
ticMeshOrientation(v.artid)) end
+
 			self:UpdateDynamicItemPos(item)
-			-- item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
+
+			print("+++++++++++++++++++++++++")
+			print("ITEM",vardump(item))
 		else =

 			--printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed loa=
ding mesh for dynamic (multi): artid=3D%i z_typename=3D%s\n",item.artid or =
-1,item.z_typename or ""))
 		end
-	else =

+	else
 		-- normal 1 part object
 		item.gfx =3D CreateRootGfx3D()
 		meshname =3D (not gForceFallBackBillboards_Dynamics) and GetStaticMeshNa=
me(item.artid + 0*16384,item.hue)
 		if (meshname and meshname ~=3D "") then
 			item.gfx:SetMesh(meshname)
-			item.gfx:SetScale(-1,1,1)
-			if (CountMeshTriangles(meshname) <=3D 4) then item.zadd =3D self.gDynam=
icZAdd end
+			item.gfx:SetScale(-1,1,1)		-- (-1) thats because xmirror bug and wrong =
mirrored mashes
+			item.gfx:SetNormaliseNormals(true)
+
+			--kTileDataFlag_LightSource
+			if (gLightsources) then
+			local arrtiletype =3D {}
+			arrtiletype =3D GetStaticTileType(item.artid)
+			if( BitwiseAND(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ~=3D=
 0 ) then
+				local x,y,z =3D Renderer3D:UOPosToLocal(item.xloc,item.yloc,(item.zloc=
+arrtiletype.miHeight) * 0.1)
+				Client_AddPointLight(x,y,z, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
+			end
+			end
+
+			-- --------------------------------------------------------------------=
-----
+			-- todo: HACK here (zadd because dynamic street-tiles dont look good fl=
ying)
+			if (CountMeshTriangles(meshname) <=3D 4) then =

+				item.gfx:SetCastShadows(false)	-- groundtiles and item billboards shou=
ldn't cast shadows
+				if (gTileTypeLoader) then
+					if not(isSurface( GetStaticTileTypeFlags(item.artid) or 0 )) then
+						item.zadd =3D self.gDynamicZAdd
+						--print("Surface unter 4 triangles nicht zadd=3D"..item.artid)
+					end
+				end
+			end
+			-- --------------------------------------------------------------------=
-----
+
 		elseif (gEnableFallBackBillboards_Dynamics) then
 			local iTranslatedTileTypeID =3D TranslateTileTypeID(item.artid + 16384,=
 gSeasonSetting)
+
 			--print("######DYNAMIC MESH NOT FOUND : ",item.artid,iTranslatedTileTyp=
eID)
 			--print("######",vardump(GetStaticTileType(item.artid)))
 			-- fallback to billboard with original art or =

 			if (not IsArtBillboardFallBackSkipped(item.artid)) then
 				item.gfx.billboard =3D item.gfx:CreateChild()
-				item.xadd =3D 0.5
-				item.yadd =3D 0.5
-				item.zadd =3D 0.5
+				item.xadd =3D item.xadd + 0.5
+				item.yadd =3D item.yadd + 0.5
+				item.zadd =3D item.zadd + 0.5
 				self:CreateArtBillBoard(item.gfx.billboard,iTranslatedTileTypeID,item.=
hue)
 				--printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed lo=
ading mesh for dynamic: artid=3D%i z_typename=3D%s\n",item.artid or -1,item=
.z_typename or ""))
 			end
 		end
 		item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
+
+		-- FILTER: correction
+		item.gfx:SetOrientation(GetStaticMeshOrientation(item.artid))
+
 		self:UpdateDynamicItemPos(item)
 	end
 	self:UpdateDynamicVisibility(item)
 end
-
 =

 function Renderer3D:CreateArtBillBoard( gfx,iTranslatedTileTypeID, iHue )
 	local matname =3D GetArtBillBoardMat(iTranslatedTileTypeID,iHue)
@@ -686,8 +870,14 @@
 	self:DestroyDynamicGfx(item)
 end
 =

+-- handle child destroy of Multis
 function Renderer3D:DestroyDynamicGfx (dynamic)
+	-- print("DEBUG","destroy",vardump(dynamic))
 	if (dynamic.gfx) then
+		if (dynamic.lMultiChildGfx) then
+			for k,child in pairs(dynamic.lMultiChildGfx) do child:Destroy() end
+			dynamic.lMultiChildGfx=3Dnil
+		end
 		dynamic.gfx:Destroy()
 		dynamic.gfx =3D nil
 	end

Modified: branches/knut/data/lua/lib.charcreate.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.charcreate.lua (original)
+++ branches/knut/data/lua/lib.charcreate.lua Wed Aug  1 22:26:16 2007
@@ -124,9 +124,9 @@
 	chardata.skill2value 	=3D hex2num("0x32")
 	chardata.skill3 		=3D hex2num("0x2B")
 	chardata.skill3value 	=3D hex2num("0x00")
-	chardata.skinColor		=3D hex2num("0x00BF")
-	chardata.hairStyle		=3D hex2num("0x2FC1")
-	chardata.hairColor		=3D hex2num("0x0034")
+	chardata.skinColor		=3D hex2num("0x03EA") -- 0x03EA(human) 0x00BF(elf)
+	chardata.hairStyle		=3D hex2num("0x203B") -- 0x2fcc 0x2044 0x2fbf 0x203B(=
human) 0x2FC1  =

+	chardata.hairColor		=3D hex2num("0x044E") -- 0x044E(human) 0x0034(elf)
 	chardata.facialHair		=3D hex2num("0x0000")
 	chardata.facialHairColor=3D hex2num("0x0000")
 	chardata.location		=3D hex2num("0x0003")
@@ -148,6 +148,60 @@
 	]]--
 	return chardata
 end
+
+--[[
+btbn tipps : wolfpack source
+haircolor human : return ( ( color >=3D 0x44E ) && ( color <=3D 0x47D ) ) =
? true : false;
+haircolor elf : if ( ( color >=3D 0x34 ) && ( color <=3D 0x39 ) )
+
+ skin color human : return ( ( color >=3D 0x3EA ) && ( color <=3D 0x422 ) =
) ? true : false;
+
+inline bool isHairsByRace( quint16 model, bool race )
+{
+    if (!race)    // Human's Hairs
+    {
+        return    ( ( ( model >=3D 0x203B ) && ( model <=3D 0x203D ) ) || =
( ( model >=3D 0x2044 ) && ( model <=3D 0x204A ) ) ) ? true : false;
+    }
+    else        // Elf's Hairs
+    {
+        return  ( ( ( model >=3D 0x2fbf ) && ( model <=3D 0x2fc2 ) ) || ( =
( model >=3D 0x2fcc ) && ( model <=3D 0x2fd1 ) ) ) ? true : false;
+    }
+}
+
+inline bool isHairsByRaceColor( quint16 color, bool race )
+{
+    if (!race)    // Human's Hairs
+    {
+        return ( ( color >=3D 0x44E ) && ( color <=3D 0x47D ) ) ? true : f=
alse;
+    }
+    else        // Elf's Hairs
+    {
+        // Line 1 of Colors
+        if ( ( color >=3D 0x34 ) && ( color <=3D 0x39 ) )
+            return true;
+        // Line 2 of Colors
+        else if ( ( color =3D=3D 0x101 ) || ( color =3D=3D 0x6b8 ) || ( co=
lor =3D=3D 0x207 ) || ( color =3D=3D 0x211 ) || ( color =3D=3D 0x26c ) || (=
 color =3D=3D 0x2c3 ) )
+            return true;
+        // Line 3 of Colors
+        else if ( ( color =3D=3D 0x2c9 ) || ( color =3D=3D 0x1e4 ) || ( co=
lor =3D=3D 0x239 ) || ( color =3D=3D 0x369 ) || ( color =3D=3D 0x59d ) || (=
 color =3D=3D 0x853 ) )
+            return true;
+        // Line 4 of Colors
+        else if ( ( ( color >=3D 0x8e ) && ( color <=3D 0x92 ) ) || ( colo=
r =3D=3D 0x159 ) )
+            return true;
+        // Line 5 of Colors
+        else if ( ( ( color >=3D 0x15a ) && ( color <=3D 0x15e ) ) || ( co=
lor =3D=3D 0x1bd ) )
+            return true;
+        // Line 6 of Colors
+        else if ( ( color =3D=3D 0x725 ) || ( color =3D=3D 0x58 ) || ( col=
or =3D=3D 0x128 ) || ( color =3D=3D 0x12f ) || ( color =3D=3D 0x1f3 ) || ( =
color =3D=3D 0x251 ) )
+            return true;
+        // Last Lines
+        else if ( ( ( color >=3D 0x31d ) && ( color <=3D 0x322 ) ) || ( ( =
color >=3D 0x323 ) && ( color <=3D 0x326 ) ) || ( ( color >=3D 0x386 ) && (=
 color <=3D 0x38a ) ) )
+            return true;
+        else
+            return false;
+    }
+}
+]]--
 	=

 --[[
 Note: Client Message

Modified: branches/knut/data/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.compass.lua (original)
+++ branches/knut/data/lua/lib.compass.lua Wed Aug  1 22:26:16 2007
@@ -16,7 +16,7 @@
 		gIrisCompassDialog.mapdot 				=3D gIrisCompassDialog.rootwidget:CreateCh=
ild()
 		gIrisCompassDialog.compassframe_static	=3D gIrisCompassDialog.rootwidget=
:CreateChild()
 		gIrisCompassDialog.compassframe_rot		=3D gIrisCompassDialog.rootwidget:C=
reateChild()
-		if (gGroundBlockLoader and gStaticBlockLoader) then
+		if (gGroundBlockLoader and gStaticBlockLoader and gRadarColorLoader) then
 			gIrisCompassDialog.radar			=3D CreateRadar( gGroundBlockLoader, gStatic=
BlockLoader, gRadarColorLoader )
 		end
 		=

@@ -100,7 +100,7 @@
 	gCompassMapH =3D gGroundBlockLoader and gGroundBlockLoader:GetMapH() or 1
 	ZoomCompass(1.0)
 	=

-	if (gGroundBlockLoader and gStaticBlockLoader) then
+	if (gGroundBlockLoader and gStaticBlockLoader and gRadarColorLoader) then
 		gIrisCompassDialog.radar:Destroy()
 		gIrisCompassDialog.radar =3D CreateRadar( gGroundBlockLoader, gStaticBlo=
ckLoader, gRadarColorLoader )
 	end

Modified: branches/knut/data/lua/lib.corpse.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.corpse.lua (original)
+++ branches/knut/data/lua/lib.corpse.lua Wed Aug  1 22:26:16 2007
@@ -24,4 +24,30 @@
 or change bodyid to ghost ?
 	   =

 unused ? kPacket_Corpse_Equipment	=3D { id=3Dhex2num("0x89") }
+
+this part of 0x89 can be sent more than once, i.e. it's a sequence of item=
 uids and layers...
+BYTE[1] itemLayer =

+BYTE[4] itemID
 ]]--
+
+--[[
+function Update_CorpseContainer(container_serial)
+	local container =3D GetOrCreateContainer(container_serial)
+	container.gumpid =3D hex2num("0x09") --hier muss ne gumpid rein
+	=

+	if (not container.dialog) then
+		-- create dialog from scratch
+		local dialog =3D guimaker.MakeSortedDialog()
+		container.dialog =3D dialog
+		dialog.uoContainer =3D container
+		dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
+		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
+		dialog.backpane.mbIgnoreMouseOver =3D false
+		dialog.backpane.onMouseDown =3D function (widget,mousebutton)
+				if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoContaine=
r.serial) end
+				if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.StartM=
oveDialog(widget.dialog.rootwidget) end
+			end
+	end
+	RefreshContainerItemWidgets(container)
+end
+]]--

Modified: branches/knut/data/lua/lib.data.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.data.lua (original)
+++ branches/knut/data/lua/lib.data.lua Wed Aug  1 22:26:16 2007
@@ -45,7 +45,7 @@
 -- art material loader with caching
 gArtMatCache =3D {}
 function GetArtMat (iArtID,hueid)
-	if (not(hueid)) then hueid=3D0 end
+	if (not(hueid) or (tonumber(hueid) > gMaxHueValue)) then hueid=3D0 end
 	local res =3D gArtMatCache[iArtID.."_"..hueid]
 	if (not res and gArtMapLoader) then
 		res =3D {}
@@ -75,7 +75,7 @@
 -- art material loader with caching
 gArtBillBoardMatCache =3D {}
 function GetArtBillBoardMat (iArtID,hueid)
-	if (not(hueid)) then hueid=3D0 end
+	if (not(hueid) or (hueid > gMaxHueValue)) then hueid=3D0 end
 	local res =3D gArtBillBoardMatCache[iArtID.."_"..hueid]
 	if (res) then return res end
 	-- bPixelExact,bInvertY,bInvertX,bHasAlpha,bEnableLighting,bEnableDepthWr=
ite,HueLoader,iHue
@@ -114,7 +114,7 @@
 -- gump material loader with caching
 gGumpMatCache =3D {}
 function GetGumpMat (iGumpID,hueid)
-	if (not(hueid)) then hueid=3D0 end
+	if (not(hueid) or (hueid > gMaxHueValue)) then hueid=3D0 end
 	local res =3D gGumpMatCache[iGumpID.."_"..hueid]
 	if (not res and gGumpLoader) then
 		res =3D gGumpLoader:CreateMaterial(iGumpID,true,gHueLoader,hueid)

Modified: branches/knut/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.debugmenu.lua (original)
+++ branches/knut/data/lua/lib.debugmenu.lua Wed Aug  1 22:26:16 2007
@@ -14,6 +14,7 @@
 gDebugMenuAnimIndex =3D -1 -- (-1) shows rest pos
 gDebugMenuAnimIndex =3D 0
 gDebugMenuModelIndex =3D 1
+gDebugMenuMainGfxPos =3D {-0.5,0.5,-0.15}
 =

 function RepairEquipIndex (arr) =

 	local res =3D {}
@@ -26,6 +27,14 @@
 end
 =

 gDebugTestMobiles =3D {
+	{artid=3D 292 , equipment=3D{}}, --broken llamas_llama_pack (crash) -> ma=
pped to id: 220
+
+	{artid=3D hex2num("0xA9") , equipment=3D{}}, --169 broken horse
+	{artid=3D hex2num("0x317"), equipment=3D{}}, --791 broken horse
+	{artid=3D	hex2num("0x76") , equipment=3D{}}, --horse ok
+	{artid=3D	hex2num("0x78") , equipment=3D{}}, --horse ok
+
+	{artid=3D hex2num("0x123") , equipment=3D{}}, =

 	{artid=3D hex2num("0xD5") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xF1") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xF3") , equipment=3D{}}, =

@@ -44,14 +53,12 @@
 	{artid=3D	hex2num("0x72") , equipment=3D{}}, -- 114 broken =

 	{artid=3D	hex2num("0x73") , equipment=3D{}},  -- 115 broken
 	{artid=3D	hex2num("0xC8") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x78") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x79") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x77") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x90") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x74") , equipment=3D{}},  -- 116 broken
 	{artid=3D	hex2num("0xB2") , equipment=3D{}},  -- 178 broken
 	{artid=3D	hex2num("0x84") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x76") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xB3") , equipment=3D{}},  -- 179 broken
 	{artid=3D	hex2num("0xBB") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xBC") , equipment=3D{}}, =

@@ -147,6 +154,7 @@
 	gDebugRootGfx2 =3D CreateRootGfx3D()
 	gDebugModelParts =3D {}
 	=

+	local xadd,yadd,zadd =3D 0,0,0
 	=

 	-- granny =

 	if (gCurDebugMode =3D=3D kDebugMode_Granny) then
@@ -161,6 +169,7 @@
 		CreateMobileModelPartsFromModelIDArray(mobile.body,gDebugRootGfx,gDebugM=
odelParts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
 		if (gDebugMenuAnimIndex >=3D 0) then MobileStartAnim(mobile,gDebugModelP=
arts,animid,bDoLoop) end
 	end
+	=

 	=

 	-- static =

 	if (gCurDebugMode =3D=3D kDebugMode_Static) then
@@ -170,34 +179,50 @@
 		local meshname =3D GetStaticMeshName(iTileType,iHue)
 		local tricount =3D meshname and CountMeshTriangles(meshname) or 0
 		AddFadeLines(sprintf("static %04x(=3D%d) hue=3D%d tricount=3D%d %s",iTil=
eType,iTileType,iHue,tricount,GetStaticTileTypeName(iTileType) or ""))
-		if (meshname) then gDebugRootGfx:SetMesh(meshname) end
+		if (meshname) then
+			gDebugRootGfx:SetMesh(meshname)
+			gDebugRootGfx:SetOrientation(GetStaticMeshOrientation(iTileType))
+			gDebugRootGfx:SetScale(-1,1,1)			-- (-1) thats because xmirror bug and =
wrong mirrored mashes
+			gDebugRootGfx:SetNormaliseNormals(true)
+			-- position adjustment for statics and dynamics
+			xadd =3D FilterPositionX(iTileType) or 0
+			yadd =3D FilterPositionY(iTileType) or 0
+			zadd =3D FilterPositionZ(iTileType) or 0
+		end
 		Renderer3D:CreateArtBillBoard(gDebugRootGfx2,iTileType+16384,iHue)
 	end
 	=

 	--gDebugModelParts[1]:SetDisplaySkeleton(true)
 	gDebugRootGfx:SetVisible(true)
-	gDebugRootGfx:SetPosition(-0.5,0.5,-0.15)
+	local x,y,z =3D unpack(gDebugMenuMainGfxPos)
+	gDebugRootGfx:SetPosition(x + xadd,y + yadd,z + zadd)
 	gDebugRootGfx2:SetVisible(true)
 	gDebugRootGfx2:SetPosition(3,0.5,-0.15)
 end
 =

+function DebugMenuSetParam1	(value) =

+	gDebugMenuModelIndex =3D value
+	DebugMenuShowModel()
+end
+
 function DebugMenuChangeParam1	(delta) =

+	local newval =3D gDebugMenuModelIndex
 	if ((gbShiftDown) and gCurDebugMode =3D=3D kDebugMode_Static) then
 		for i=3D1,math.abs(delta) do
 			local tries =3D 400
 			local add =3D (delta > 0) and 1 or -1
-			gDebugMenuModelIndex =3D gDebugMenuModelIndex + add
-			local meshname =3D GetStaticMeshName(gDebugMenuModelIndex,0)
+			newval =3D newval + add
+			local meshname =3D GetStaticMeshName(newval,0)
 			while (tries > 0 and ((not meshname) or (CountMeshTriangles(meshname) >=
 6))) do
-				gDebugMenuModelIndex =3D gDebugMenuModelIndex + add
-				meshname =3D GetStaticMeshName(gDebugMenuModelIndex,0)
+				newval =3D newval + add
+				meshname =3D GetStaticMeshName(newval,0)
 				tries =3D tries - 1
 			end =

 		end
 	else
-		gDebugMenuModelIndex =3D gDebugMenuModelIndex + delta
-	end
-	DebugMenuShowModel()
+		newval =3D newval + delta
+	end
+	DebugMenuSetParam1(newval)
 end
 =

 function StartDebugMenu ()
@@ -211,7 +236,7 @@
 	Client_SetSkybox("skybox") -- cube skybox sunset darksun =

 	Renderer3D:ChangeCamMode(Renderer3D.kCamMode_Third)
 	Renderer3D.gfCamAngV =3D 0.0
-	=

+
 	local cam =3D GetMainCam()
 	--cam:SetFOVy(gfDeg2Rad*45)
 	cam:SetNearClipDistance(0.01) -- old : 1
@@ -222,9 +247,44 @@
 	gPlayerZLoc =3D 0
 	Renderer3D.gThirdPersonDist =3D 4
 	=

+	-- grid
+	if (true) then
+		gDebugGridGfx =3D CreateRootGfx3D()
+		local x,y,z =3D unpack(gDebugMenuMainGfxPos)
+		gDebugGridGfx:SetPosition(x,y,z)
+		local mygfx =3D gDebugGridGfx
+		mygfx:SetSimpleRenderable()
+		mygfx:SetMaterial("debug_grid_3D")
+		mygfx:RenderableBegin(2 + 4*9,2 + 4*9,false,false,OT_LINE_LIST)
+		local x,y,z =3D -1,1,2
+		local g =3D 8
+		mygfx:RenderableVertex(0,0,0)
+		mygfx:RenderableVertex(0,0,z)
+		mygfx:RenderableIndex2(0,1)
+		for j=3D0,8 do =

+			local i =3D j-4
+			mygfx:RenderableVertex(i,-g,0)
+			mygfx:RenderableVertex(i, g,0)
+			mygfx:RenderableVertex(-g,i,0)
+			mygfx:RenderableVertex( g,i,0)
+			mygfx:RenderableIndex2(2 + 4*j + 0,2 + 4*j + 1)
+			mygfx:RenderableIndex2(2 + 4*j + 2,2 + 4*j + 3)
+		end
+		mygfx:RenderableEnd()
+	end
+	=

 	DebugMenuShowModel()
 	=

-	UnBindArr({"f","g","j","k","h","f1","f2","f3","f4","f5","t","b"})
+	UnbindAll()
+
+	Bind("wheelup",		function (state) if (not gActiveEditText) then if (state=
 > 0) then gCurrentRenderer:CamChangeZoom( 0.3) end end end)
+	Bind("wheeldown",	function (state) if (not gActiveEditText) then if (stat=
e > 0) then gCurrentRenderer:CamChangeZoom(-0.3) end end end)
+	Bind("c",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:ChangeCamMode() end end end)
+
+	Bind("a", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

+		gDebugMenuAnimIndex =3D 0 gDebugMenuModelIndex =3D 1 DebugMenuShowModel()
+		end end end)
+
 	Bind("f", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		DebugMenuChangeParam1(-1)
 		end end end)
@@ -238,10 +298,6 @@
 		end end end)
 	Bind("k", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		gDebugMenuAnimIndex =3D gDebugMenuAnimIndex + 1  DebugMenuShowModel()
-		end end end)
-		=

-	Bind("h", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

-		gDebugMenuAnimIndex =3D 0 gDebugMenuModelIndex =3D 1 DebugMenuShowModel()
 		end end end)
 		=

 	Bind("f1", function (state) if (not gActiveEditText) then if (state > 0) =
then =

@@ -264,7 +320,10 @@
 	Bind("f5", function (state) if (not gActiveEditText) then if (state > 0) =
then =

 		DebugMenuChangeParam1( 4096)
 		end end end)
-		=

+	Bind("f6", function (state) if (not gActiveEditText) then if (state > 0) =
then =

+		ShowDebugMenuArtList(0)
+		end end end)
+--[[	=

 	Bind("t", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		if (gCurDebugMode =3D=3D kDebugMode_Static) then
 			if (gEnableSVNRemoveInStaticDebug) then -- BE CAREFUL WITH THAT !!!!  g=
EnableSVNRemoveInStaticDebug
@@ -274,7 +333,7 @@
 			end	=

 		end	=

 		end end end)
-		=

+]]--	=

 	Bind("b", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		if (gCurDebugMode =3D=3D kDebugMode_Static) then
 			local i =3D gDebugMenuModelIndex
@@ -299,3 +358,55 @@
 	giDebugMenuLastAnimStepTime =3D gMyTicks
 	if (gDebugModelParts and gDebugMenuAnimIndex >=3D 0) then for k,v in pair=
s(gDebugModelParts) do v:AnimAddTime(iTimeSinceLastStepInSeconds) end end
 end
+
+
+function DebugMenuJumpToArtID (iArtID) =

+	gCurDebugMode =3D kDebugMode_Static
+	DebugMenuSetParam1(iArtID)
+end
+
+function ShowDebugMenuArtList (iStart)
+	local rows =3D { =

+		{ {type=3D"Label",		text=3D"ArtList"}, },
+	}
+	=

+	iStart =3D iStart or 0
+	local iMax =3D gArtMapLoader:GetCount()
+	local w,h =3D 12,6
+	=

+	local pagerow =3D {}
+	local iNext1 =3D math.max(0,math.min(iMax,iStart + w*h))
+	local iPrev1 =3D math.max(0,math.min(iMax,iStart - w*h))
+	local iNext2 =3D math.max(0,math.min(iMax,iStart + w*h*10))
+	local iPrev2 =3D math.max(0,math.min(iMax,iStart - w*h*10))
+	local myblank =3D {type=3D"Label",		text=3D""}
+	table.insert(pagerow,{type=3D"Button",text=3D" <<< ",iNewStart=3DiPrev2,o=
nMouseDown=3Dfunction(widget) widget.dialog:Destroy() ShowDebugMenuArtList(=
widget.iNewStart) end})
+	table.insert(pagerow,{type=3D"Button",text=3D"  << ",iNewStart=3DiPrev1,o=
nMouseDown=3Dfunction(widget) widget.dialog:Destroy() ShowDebugMenuArtList(=
widget.iNewStart) end})
+	table.insert(pagerow,{type=3D"Button",text=3D"  >> ",iNewStart=3DiNext1,o=
nMouseDown=3Dfunction(widget) widget.dialog:Destroy() ShowDebugMenuArtList(=
widget.iNewStart) end})
+	table.insert(pagerow,{type=3D"Button",text=3D" >>> ",iNewStart=3DiNext2,o=
nMouseDown=3Dfunction(widget) widget.dialog:Destroy() ShowDebugMenuArtList(=
widget.iNewStart) end})
+	for x =3D 5,w-1 do table.insert(pagerow,myblank) end
+	table.insert(pagerow,{type=3D"Button",text=3D"close",onMouseDown=3Dfuncti=
on(widget) widget.dialog:Destroy() end})
+	table.insert(rows,pagerow)
+	=

+	=

+	for y =3D 0,h-1 do
+		local row1 =3D {}
+		local row2 =3D {}
+		for x =3D 0,w-1 do =

+			local i =3D iStart + y*w + x
+			if (i < iMax) then
+				table.insert(row1	,MakeUOArtImageForDialog(i,0,48,32))
+				local name =3D GetStaticTileTypeName(i) or "unknown"
+				local label =3D sprintf("%s\n0x%04x",string.sub(name,1,6),i)
+				table.insert(row2	,{type=3D"Button",iArtID=3Di,text=3Dlabel,onMouseDow=
n=3Dfunction(widget) =

+					DebugMenuJumpToArtID(widget.iArtID) end})
+			end
+		end
+		table.insert(rows,row1)
+		table.insert(rows,row2)
+	end
+	=

+	=

+	=

+	guimaker.MakeTableDlg(rows,10,10,true)
+end

Modified: branches/knut/data/lua/lib.devtool.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.devtool.lua (original)
+++ branches/knut/data/lua/lib.devtool.lua Wed Aug  1 22:26:16 2007
@@ -161,7 +161,7 @@
 		local meshpath =3D GetModelPath(i)
 		local texlist =3D meshpath and OgreMeshTextures(meshpath)
 		local texlist =3D texlist and strjoin("\n",texlist) or ""
-		table.insert(rows[2]	,MakeUOArtImageForDialog(i))
+		table.insert(rows[2]	,MakeUOArtImageForDialog(i,0,48,48))
 		table.insert(rows[3]	,{type=3D"Label",	text=3Dsprintf("%s\n0x%04x(=3D%d)=
\n%s",GetStaticTileTypeName(i) or "unknown",i,i,texlist)})
 	end
 	=

@@ -172,7 +172,7 @@
 		local meshpath =3D GetModelPath(i)
 		local texlist =3D meshpath and OgreMeshTextures(meshpath)
 		local texlist =3D texlist and strjoin("\n",texlist) or ""
-		table.insert(rows[4]	,MakeUOArtImageForDialog(i))
+		table.insert(rows[4]	,MakeUOArtImageForDialog(i,0,48,48))
 		table.insert(rows[5]	,{type=3D"Label",	text=3Dsprintf("%s\n0x%04x(=3D%d)=
\n%s",GetStaticTileTypeName(i) or "unknown",i,i,texlist)})
 	end
 	=

@@ -188,12 +188,14 @@
 	local rx =3D math.floor(math.random()*w)
 	local ry =3D math.floor(math.random()*h)
 	=

+	local iTileTypeID,iX,iY,iZ,iHue
 	for x =3D 0,w do
 		for y =3D 0,h do
 			local bx =3D math.mod(x+rx,w)
 			local by =3D math.mod(y+ry,h)
 			gStaticBlockLoader:Load(bx,by) -- params =3D mapblock-pos
 			local iStaticCount =3D gStaticBlockLoader:Count() -- operates on the bl=
ock that was last loaded using :Load()
+
 			for i =3D 0,iStaticCount-1 do
 				iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- opera=
tes on the block that was last loaded using :Load()
 				if (iTileTypeID =3D=3D iSearchTileTypeID) then
@@ -227,13 +229,14 @@
 		local yminblock =3D math.floor( ( y - radius ) / 8 )
 		local ymaxblock =3D math.ceil( ( y + radius ) / 8 )
 		=

+		local iTileTypeID,iX,iY,iZ,iHue
 		for by=3Dyminblock, ymaxblock do
 			for bx=3Dxminblock, xmaxblock do
 				gStaticBlockLoader:Load( bx, by )
 				local iStaticCount =3D gStaticBlockLoader:Count()
-				=

+
 				for i =3D 0,iStaticCount-1 do
-					iTileTypeID, iX, iY, iZ, iHue =3D gStaticBlockLoader:GetStatic( i )
+					iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic( i )
 					local d =3D dist2(x,y,bx*8+iX,by*8+iY)
 					if (d <=3D radius) then
 						local entity =3D {}
@@ -245,7 +248,6 @@
 						entity.id =3D i
 						entity.iTileTypeID =3D iTileTypeID
 						entity.iHue =3D iHue
-					=

 						table.insert( res, entity )
 					end =

 				end

Modified: branches/knut/data/lua/lib.fallback.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.fallback.lua (original)
+++ branches/knut/data/lua/lib.fallback.lua Wed Aug  1 22:26:16 2007
@@ -79,7 +79,7 @@
 			}, imgrow, labelrow, buttonrow
 	}
 	for k,v in pairs(statictypes) do =

-		table.insert(imgrow		,MakeUOArtImageForDialog(k))
+		table.insert(imgrow		,MakeUOArtImageForDialog(k,0,48,48))
 		table.insert(labelrow	,{type=3D"Label",	text=3Dsprintf("%s\n0x%04x(=3D%d=
)",GetStaticTileTypeName(k) or "unknown",k,k)})
 		table.insert(buttonrow	,{type=3D"Button",onMouseDown=3Dfunction(widget) =
AddSkippedArtBillboardFallBack(widget.iTileTypeID) end,iTileTypeID=3Dk,text=
=3D"hide"})
 	end
@@ -88,7 +88,8 @@
 	gLastFallBackToolDialog =3D guimaker.MakeTableDlg(rows,100,10,true)
 end
 =

-function MakeUOArtImageForDialog (iTileTypeID,iHue) =

+-- iMaxW,iMaxH : can be nil for unlimited size
+function MakeUOArtImageForDialog (iTileTypeID,iHue,iMaxW,iMaxH) =

 	iHue =3D iHue or 0
 	local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID + 16384, =
gSeasonSetting)
 	local matname =3D GetArtMat(iTranslatedTileTypeID,iHue)
@@ -96,7 +97,14 @@
 	local w,h =3D GetArtSize(iTranslatedTileTypeID)
 	if (not w or w =3D=3D 0) then w =3D isotilew end
 	if (not h or h =3D=3D 0) then h =3D isotilew end
-	return {type=3D"Img2",	w=3Dw,h=3Dh,matname=3Dmatname}
+	local tw,th =3D texsize(w),texsize(h)
+	local fw,fh =3D w,h
+	if (iMaxW) then w =3D math.min(iMaxW,w) end
+	if (iMaxH) then h =3D math.min(iMaxH,h) end
+	local offx,offy =3D (fw-w)*0.5,(fh-h)*0.5  -- this is 0,0 if the art is f=
ully visible, centers art if not
+	local u1,v1,u2,v2 =3D offx/tw,offy/th,(offx+w)/tw,(offy+h)/th
+	matname =3D (string.len(matname) > 0) and matname or "BaseWhiteNoLighting"
+	return {type=3D"Img2",	w=3Dw,h=3Dh,matname=3Dmatname, u1=3Du1,v1=3Dv1,u2=
=3Du2,v2=3Dv2}
 end
 =

 =


Modified: branches/knut/data/lua/lib.gui.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.gui.lua (original)
+++ branches/knut/data/lua/lib.gui.lua Wed Aug  1 22:26:16 2007
@@ -43,25 +43,6 @@
 	else =

 		gBottomLine.text.gfx:SetText(text)
 	end
-end
-
-function DisplayFPS (fps)
-	if (gHideFPS) then return end
-	local text =3D sprintf("%0.0f",fps)
-	if (not gFPSField) then
-		local vw,vh =3D GetViewportSize()
-		local w,h =3D 0,12
-		local x,y =3D vw-w,0
-		local col_back =3D {0,0,0,0}
-		local col_text =3D {1,0,0,1}
-		gFPSField =3D guimaker.MyCreateDialog()
-		gFPSField.panel	=3D guimaker.MakeBorderPanel(gFPSField,x,y,w,h,col_back)
-		gFPSField.text	=3D guimaker.MakeText(gFPSField.panel,0,0,text,16,col_tex=
t)
-	else
-		gFPSField.text.gfx:SetText(text)
-	end
-	local tw,th =3D gFPSField.text.gfx:GetTextBounds()
-	gFPSField.text.gfx:SetPos(-tw,0)
 end
 =

 function DisplayMemoryUsage (memoryusage)

Modified: branches/knut/data/lua/lib.guimaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.guimaker.lua (original)
+++ branches/knut/data/lua/lib.guimaker.lua Wed Aug  1 22:26:16 2007
@@ -290,8 +290,7 @@
 		widget =3D guimaker.MakeText(parent,0,0,arr.text,12,{0,0,0,1.0})
 	elseif (arr.type =3D=3D "Img2") then -- texcoords corrected for 2^n
 		widget =3D guimaker.MakePlane(parent,arr.matname,0,0,arr.w,arr.h)
-		local tw,th =3D texsize(arr.w),texsize(arr.h)
-		widget.gfx:SetUV(0,0,arr.w/tw,arr.h/th)
+		widget.gfx:SetUV(arr.u1,arr.v1,arr.u2,arr.v2)
 		widget.mbIgnoreMouseOver =3D true
 	else
 		print("guimaker.MakeWidgetFromArr : unknown type : ",arr.type)

Modified: branches/knut/data/lua/lib.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.gumpparser.lua (original)
+++ branches/knut/data/lua/lib.gumpparser.lua Wed Aug  1 22:26:16 2007
@@ -21,12 +21,14 @@
 	params.texts =3D {}
 	local dialog =3D gServerSideGump[dialogId]
 	=

-	for k,widget in pairs(dialog.uo_radio) do if (widget.state =3D=3D 1) then=
 table.insert(params.switches,widget.returnmsg) end end
-	for k,widget in pairs(dialog.uo_check) do if (widget.state =3D=3D 1) then=
 table.insert(params.switches,widget.returnmsg) end end
-	for k,widget in pairs(dialog.uo_text) do =

-		table.insert(params.texts,{id=3Dwidget.returnmsg,text=3Dwidget.plaintext=
 or  ""})
+	if (dialog) then
+		for k,widget in pairs(dialog.uo_radio) do if (widget.state =3D=3D 1) the=
n table.insert(params.switches,widget.returnmsg) end end
+		for k,widget in pairs(dialog.uo_check) do if (widget.state =3D=3D 1) the=
n table.insert(params.switches,widget.returnmsg) end end
+		for k,widget in pairs(dialog.uo_text) do =

+			table.insert(params.texts,{id=3Dwidget.returnmsg,text=3Dwidget.plaintex=
t or  ""})
+		end
 	end
-	=

+
 	return params
 end
 =

@@ -169,7 +171,7 @@
 				-- TODO : width, height, background, scrollbar
 				elseif ((command =3D=3D "xmfhtmlgump") and (table.getn(bToken)>=3D 8))=
 then
 					local msg =3D HtmlParser( gClilocLoader:Get(bToken[6]) )
-					print("Cliloc Msg ("..bToken[6].."): "..msg.text)
+--					print("Cliloc Msg ("..bToken[6].."): "..msg.text)
 					local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2=
], bToken[3]+gHorizontal_Textcorrection, bToken[4], bToken[5], msg.text, ms=
g.charh, {1.0,1.0,1.0,1.0}, msg.center, msg.div)
 				--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc-nr> <background> <=
scrollbar> <color>
 				--Description:	<background> and <scrollbar> can be 0 or 1 and define w=
hether the background is transparent and
@@ -177,18 +179,17 @@
 				-- TODO : background, scrollbar, HUE-color
 				elseif ((command =3D=3D "xmfhtmlgumpcolor") and (table.getn(bToken)>=
=3D 9)) then
 					local msg =3D HtmlParser( gClilocLoader:Get(bToken[6]) )
-					print("Cliloc Msg ("..bToken[6].."): "..msg.text)
+--					print("Cliloc Msg ("..bToken[6].."): "..msg.text)
 					local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2=
], bToken[3]+gHorizontal_Textcorrection, bToken[4], bToken[5], msg.text, ms=
g.charh, {1.0,1.0,1.0,1.0}, msg.center, msg.div)
 				--gumppic <x> <y> <gumpid> [hue=3D353]
 				--Description:  Adds a graphic to the gump, where <id> ist the graphic=
 id of an item.
 				--				Optionaly there is a color parameter. =

 				-- TODO : HUE
 				elseif ((command =3D=3D "gumppic") and (table.getn(bToken)>=3D 4)) then
-					local widget =3D MakeBorderGumpPart(curparent,bToken[4],bToken[2],bTo=
ken[3])
+					local huenumber=3DbToken[6] or 0
+					local widget =3D MakeBorderGumpPart( curparent, bToken[4], bToken[2],=
 bToken[3], 0, 0, 0, tonumber(huenumber) )
 					widget.mbIgnoreMouseOver =3D false
-					if (bToken[5]=3D=3D"hue" and bToken[6]) then
-						print("gumppic hue: "..tonumber(bToken[6]))
-					end
+					if (bToken[8]) then print("gumppic class=3D"..bToken[8]) end
 				--gumppictiled <x> <y> <width> <height> <gumpid>
 				--Description:  Similar to GumpPic, but the gumppic is tiled to the gi=
ven <height> and <width>.
 				elseif ((command =3D=3D "gumppictiled") and (table.getn(bToken)>=3D 6)=
) then

Modified: branches/knut/data/lua/lib.input.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.input.lua (original)
+++ branches/knut/data/lua/lib.input.lua Wed Aug  1 22:26:16 2007
@@ -175,82 +175,145 @@
 	if bind then bind[1](bind[2]) end
 end
 =

-UnbindAll()
-gLastCursor =3D 0
-
--- soemthing
-Bind("return",	function (state) if (state > 0) then gui.ToggleChatLineActi=
ve() end end)
-Bind("n",		function (state) if (not gActiveEditText) then ToggleCompass(st=
ate > 0) end end)
-Bind("komma",	function (state) if (not gActiveEditText) then if (state > 0=
) then ZoomCompass(gCompassZoomFactor) end end end)
-Bind("point",	function (state) if (not gActiveEditText) then if (state > 0=
) then ZoomCompass(1.0/gCompassZoomFactor) end end end)
-Bind("z",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ActivateNextRenderer() end end end)
-Bind("l",		function (state) if (not gActiveEditText) then gDialog_IrisLogo=
:SetVisible(state > 0) end end)
-Bind("escape",	function (state) =

-	if (state > 0) then =

-	if (not gActiveEditText) then =

-		if gTargetModeActive then CancelTargetMode() else Terminate() end =

-	else
-		DeactivateCurEditText()
-	end =

-	end =

-end)
-Bind("v",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen Client_TakeScreenshot() end end end)
-Bind("f12",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Client_TakeGridScreenshot() end end end)
-
--- additional movement key handling in WalkStep() (for pressed keys)
-Bind("right",   function (state) if (not gActiveEditText) then if (state >=
 0) then CancelAutoWalk() end end end) =

-Bind("left",    function (state) if (not gActiveEditText) then if (state >=
 0) then CancelAutoWalk() end end end) =

-Bind("down",    function (state) if (not gActiveEditText) then if (state >=
 0) then CancelAutoWalk() end else if (state > 0) then gui.HistoryUpDown(-1=
) end end end) =

-Bind("up",              function (state) if (not gActiveEditText) then if =
(state > 0) then CancelAutoWalk() end else if (state > 0) then gui.HistoryU=
pDown(1) end end end) =

-Bind("u",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen SetAutoWalkTarget() end end end)
-
--- toggel gumps
-Bind("t",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ToggleStatusAos() end end end)
-Bind("k",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ToggleSkill() end end end)
-Bind("j",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ToggleJournal() end end end)
-Bind("b",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen TogglePlayerBackpack() end end end)
-Bind("p",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen TogglePlayerPaperdoll() end end end)
-
--- camera controlling
-Bind("c",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gCurrentRenderer:ChangeCamMode() end end end)
-Bind("x",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gCurrentRenderer:CamChangeZoom( 1) end end end)
-Bind("y",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gCurrentRenderer:CamChangeZoom(-1) end end end)
-Bind("wheelup",		function (state) if (not gActiveEditText) then if (state =
> 0) then gCurrentRenderer:CamChangeZoom( 0.3) end end end)
-Bind("wheeldown",	function (state) if (not gActiveEditText) then if (state=
 > 0) then gCurrentRenderer:CamChangeZoom(-0.3) end end end)
-
--- repeat last command
-Bind("g",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gui.RepeatLastChatLine() end end end)
-Bind("h",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen RepeatLastDoubleClick() end end end)
-
--- select commands
-Bind("q",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen SelectNearestMobile() end end end)
-Bind("e",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen SelectNextMobile() end end end)
-Bind("space",	function (state) if (not gActiveEditText) then if (state > 0=
) then AttackSelectedMobile() end end end)
-
---
-Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0) =
then DebugPrintCallCount() end end end)
-Bind("f10",		function (state) if (not gActiveEditText) then if (state > 0)=
 then ShowDevTool() end end end)
-Bind("f11",		function (state) if (not gActiveEditText) then if (state > 0)=
 then ShowFallBackTool() end end end)
-Bind("tab",		function (state) if (state > 0) then if (gActWarmode=3D=3DgWa=
rmode_Normal) then Send_CombatMode(gWarmode_Combat) else Send_CombatMode(gW=
armode_Normal) end end end)
-Bind("m",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen MobileDisplayTextOverHead(gPlayerBodySerial,"bla bla bla") end end end)
-
-if (false) then
-	local commandchar =3D "["
-	-- runuo macros useful for testing
-	Bind("f1",		function (state) if (not gActiveEditText) then if (state > 0)=
 then =

-		--Send_Speech("[set Hits 12000 self") =

-		Send_Speech(commandchar.."self set Hits 12000") =

-		--local playermobile =3D GetPlayerMobile()
-		--if (playermobile) then  gAutoTargetMobile =3D playermobile  end =

+function BindInGameKeys()
+	UnbindAll()
+	gLastCursor =3D 0
+	=

+	-- soemthing
+	Bind("return",	function (state) if (state > 0) then gui.ToggleChatLineAct=
ive() end end)
+	Bind("n",		function (state) if (not gActiveEditText) then ToggleCompass(s=
tate > 0) end end)
+	Bind("komma",	function (state) if (not gActiveEditText) then if (state > =
0) then ZoomCompass(gCompassZoomFactor) end end end)
+	Bind("point",	function (state) if (not gActiveEditText) then if (state > =
0) then ZoomCompass(1.0/gCompassZoomFactor) end end end)
+	Bind("z",		function (state) if (not gActiveEditText) then if (state > 0) =
then ActivateNextRenderer() end end end)
+	Bind("l",		function (state) if (not gActiveEditText) then gDialog_IrisLog=
o:SetVisible(state > 0) end end)
+	Bind("escape",	function (state) =

+		if (state > 0) then =

+		if (not gActiveEditText) then =

+			if gTargetModeActive then CancelTargetMode() else Terminate() end =

+		else
+			DeactivateCurEditText()
+		end =

+		end =

+	end)
+	Bind("v",		function (state) if (not gActiveEditText) then if (state > 0) =
then Client_TakeScreenshot() end end end)
+	Bind("f12",		function (state) if (not gActiveEditText) then if (state > 0=
) then Client_TakeGridScreenshot() end end end)
+	=

+	Bind("f2",		function (state) if (not gActiveEditText) then if (state > 0)=
 then =

+		local mobile =3D GetPlayerMobile()
+		if mobile then
+			local effect =3D {}
+			effect.source_locx =3D mobile.xloc
+			effect.source_locy =3D mobile.yloc
+			effect.source_locz =3D mobile.zloc
+
+			effect.current_locx =3D mobile.xloc
+			effect.current_locy =3D mobile.yloc
+			effect.current_locz =3D mobile.zloc
+
+			effect.target_locx =3D mobile.xloc + 10
+			effect.target_locy =3D mobile.yloc + 1
+			effect.target_locz =3D mobile.zloc + 2
+			=

+			effect.speed =3D 5
+			effect.duration =3D 0
+			=

+			effect.itemid =3D hex2num("0x376A")
+			gCurrentRenderer:AddEffect(effect)
+		end
 	end end end)
-	Bind("f2",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."self resurrect") end end end)
-	Bind("f3",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."add wallofstoneeast") end end end)
-	Bind("f4",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."remove") end end end)
-	Bind("f5",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."tele") end end end)
-	Bind("f6",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."set Hits 12000") end end end)
-	Bind("f7",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."resurrect") end end end)
-	Bind("f8",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."kill") end end end)
-	Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."admin") end end end)
-	--Bind("f10",		function (state) if (not gActiveEditText) then if (state >=
 0) then Send_Speech(commandchar.."props") end end end)
-	--Bind("f11",		function (state) if (not gActiveEditText) then if (state >=
 0) then Send_Speech(commandchar.."add") end end end)
-end
+	=

+	-- additional movement key handling in WalkStep() (for pressed keys)
+	Bind("right",   function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end end end) =

+	Bind("left",    function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end end end) =

+	Bind("down",    function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end else if (state > 0) then gui.HistoryUpDown(-=
1) end end end) =

+	Bind("up",              function (state) if (not gActiveEditText) then if=
 (state > 0) then CancelAutoWalk() end else if (state > 0) then gui.History=
UpDown(1) end end end) =

+	Bind("u",		function (state) if (not gActiveEditText) then if (state > 0) =
then SetAutoWalkTarget() end end end)
+	=

+	-- toggel gumps
+	Bind("t",		function (state) if (not gActiveEditText) then if (state > 0) =
then ToggleStatusAos() end end end)
+	Bind("k",		function (state) if (not gActiveEditText) then if (state > 0) =
then ToggleSkill() end end end)
+	Bind("j",		function (state) if (not gActiveEditText) then if (state > 0) =
then ToggleJournal() end end end)
+	Bind("b",		function (state) if (not gActiveEditText) then if (state > 0) =
then TogglePlayerBackpack() end end end)
+	Bind("p",		function (state) if (not gActiveEditText) then if (state > 0) =
then TogglePlayerPaperdoll() end end end)
+	=

+	-- camera controlling
+	Bind("c",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:ChangeCamMode() end end end)
+	Bind("x",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:CamChangeZoom( 1) end end end)
+	Bind("y",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:CamChangeZoom(-1) end end end)
+	Bind("wheelup",		function (state) if (not gActiveEditText) then if (state=
 > 0) then gCurrentRenderer:CamChangeZoom( 0.3) end end end)
+	Bind("wheeldown",	function (state) if (not gActiveEditText) then if (stat=
e > 0) then gCurrentRenderer:CamChangeZoom(-0.3) end end end)
+	=

+	-- repeat last command
+	Bind("g",		function (state) if (not gActiveEditText) then if (state > 0) =
then gui.RepeatLastChatLine() end end end)
+	Bind("h",		function (state) if (not gActiveEditText) then if (state > 0) =
then RepeatLastDoubleClick() end end end)
+	=

+	-- select commands
+	Bind("q",		function (state) if (not gActiveEditText) then if (state > 0) =
then SelectNearestMobile() end end end)
+	Bind("e",		function (state) if (not gActiveEditText) then if (state > 0) =
then SelectNextMobile() end end end)
+	Bind("space",	function (state) if (not gActiveEditText) then if (state > =
0) then AttackSelectedMobile() end end end)
+	=

+	--
+	Bind("f10",		function (state) if (not gActiveEditText) then if (state > 0=
) then ShowDevTool() end end end)
+	Bind("f11",		function (state) if (not gActiveEditText) then if ((state > =
0) and (gCurrentRenderer =3D=3D Renderer3D)) then ShowFallBackTool() end en=
d end)
+	Bind("tab",		function (state) if (state > 0) then if (gActWarmode=3D=3DgW=
armode_Normal) then Send_CombatMode(gWarmode_Combat) else Send_CombatMode(g=
Warmode_Normal) end end end)
+	Bind("m",		function (state) if (not gActiveEditText) then if (state > 0) =
then MobileDisplayTextOverHead(gPlayerBodySerial,"bla bla bla") end end end)
+
+	Bind("f7",		function (state) if (not gActiveEditText) then if (state > 0)=
 then
+		if (gAmbientColor.r < 1.0) then
+			gAmbientColor.r=3DgAmbientColor.r+0.1
+			gAmbientColor.g=3DgAmbientColor.g+0.1
+			gAmbientColor.b=3DgAmbientColor.b+0.1
+		else
+			gAmbientColor.r=3D1.0
+			gAmbientColor.g=3D1.0
+			gAmbientColor.b=3D1.0
+		end
+		print("gAmbientColor.r=3D"..gAmbientColor.r)
+		Client_SetAmbientLight(gAmbientColor.r, gAmbientColor.g, gAmbientColor.b=
, 1)
+ 	end end end)
+		Bind("f8",		function (state) if (not gActiveEditText) then if (state > 0=
) then
+		if (gAmbientColor.r > 0.1) then
+			gAmbientColor.r=3DgAmbientColor.r-0.1
+			gAmbientColor.g=3DgAmbientColor.g-0.1
+			gAmbientColor.b=3DgAmbientColor.b-0.1
+		else
+			gAmbientColor.r=3D0.0
+			gAmbientColor.g=3D0.0
+			gAmbientColor.b=3D0.0
+		end
+		print("gAmbientColor.r=3D"..gAmbientColor.r)
+		Client_SetAmbientLight(gAmbientColor.r, gAmbientColor.g, gAmbientColor.b=
, 1)
+ 	end end end)
+
+	--[[
+	Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0)=
 then =

+		print("rebuild all securetrades")
+		for k,mysectrade in pairs(gSecureTrades) do =

+			print("rebuild sectrade",mysectrade.id)
+			SecureTradeRebuildContainers(mysectrade)
+		end
+	 end end end)
+	]]--
+
+	if (false) then
+		local commandchar =3D "["
+		-- runuo macros useful for testing
+		Bind("f1",		function (state) if (not gActiveEditText) then if (state > 0=
) then =

+			--Send_Speech("[set Hits 12000 self") =

+			Send_Speech(commandchar.."self set Hits 12000") =

+			--local playermobile =3D GetPlayerMobile()
+			--if (playermobile) then  gAutoTargetMobile =3D playermobile  end =

+		end end end)
+		Bind("f2",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."self resurrect") end end end)
+		Bind("f3",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."add wallofstoneeast") end end end)
+		Bind("f4",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."remove") end end end)
+		Bind("f5",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."tele") end end end)
+		Bind("f6",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."set Hits 12000") end end end)
+		Bind("f7",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."resurrect") end end end)
+		Bind("f8",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."kill") end end end)
+		Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."admin") end end end)
+		--Bind("f10",		function (state) if (not gActiveEditText) then if (state =
> 0) then Send_Speech(commandchar.."props") end end end)
+		--Bind("f11",		function (state) if (not gActiveEditText) then if (state =
> 0) then Send_Speech(commandchar.."add") end end end)
+	end
+
+end

Modified: branches/knut/data/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.loading.lua (original)
+++ branches/knut/data/lua/lib.loading.lua Wed Aug  1 22:26:16 2007
@@ -8,6 +8,12 @@
 =

 -- loader for uo-art materials
 gManualArtMaterialLoader =3D nil
+
+-- store global uni font infos
+gUniFontHeight =3D {}
+gUniFontName =3D {}
+-- which uni font chat should be used in chat over the head
+gChatText_UniFontNumber =3D 1
 =

 -- profiles the time took by the different loading phases, and displays a =
text about what is currently being loaded
 function LoadingProfile	(sCurAction,bIsPreOgre)
@@ -86,8 +92,11 @@
 	if file_exists(filename) then
 		local l =3D CreateUniFontLoader(filename)
 		l:CreateOgreFont(name)
+		local h =3D l:GetDefaultHeight()
 		l:Destroy()
-	end
+		return h
+	end
+	return 0
 end
 =

 -- load bigger data chunks while menu is visible
@@ -97,7 +106,8 @@
 	if (gUniFontLoaderType) then
 		CreateUniFont(CorrectPath(gUOPath.."unifont.mul"),"font_unifont0")
 		for i=3D1,2 do
-			CreateUniFont(CorrectPath(gUOPath.."unifont"..i..".mul"),"font_unifont"=
..i)
+			gUniFontName[i] =3D "font_unifont"..i
+			gUniFontHeight[i] =3D CreateUniFont(CorrectPath(gUOPath.."unifont"..i..=
".mul"),gUniFontName[i])
 		end
 	end
 	=

@@ -169,25 +179,7 @@
 		modelspath =3D datapath.."models.uim"
 		if (file_exists(modelspath)) then
 			gLegacyModelAndTextureLoader =3D CreateLegacyModelAndTextureLoader(gLeg=
acyModelAndTextureLoaderType,modelspath)
-			=

-			--[[
-			local i =3D 0
-			-- for exporting models from models.uim
-			for i=3D0,20000 do
-				local meshname =3D gLegacyModelAndTextureLoader:CreateMesh(i)
-				if meshname ~=3D nil then
-					local flags,weight,quality,unkn1,unkn2,quantity,animid,unkn3,hue,unkn=
4,height,name =3D gTileTypeLoader:GetStaticTileType(i+32*512)
-					if name =3D=3D nil then name =3D "unknown" end
-					print("name",name)
-					name =3D string.lower(name)
-					name =3D string.gsub(name,"%%[^%%]+%%","")
-					name =3D string.gsub(name,"[^a-z0-9]","_")
-					ExportMesh(meshname,GetModelPath(i))
-				end
-			end
-			Crash()
-			]]--
-			=

+			--MeshExporter()
 		else
 			--print("WARNING ! "..modelspath.." not found, please copy from old iri=
s1 binary distribution on berlios.de")
 			--print(" statics, such as houses, trees, etc will not be displayed...")
@@ -255,6 +247,34 @@
 	if (gStaticBlockLoader) then gStaticBlockLoader:Destroy() gStaticBlockLoa=
der =3D nil end
 end
 =

+--todo: Maps_pre6.xml
+function Check_Map (index, mapsfile)
+	local xml_maps =3D xmlchild(LuaXML_ParseFile(datapath..mapsfile),"MAPS")
+	local xml_map =3D nil
+	=

+	-- search for MAP node with matching ID
+	for k,child in ipairs(xml_maps) do
+		if tonumber(xmlvalue(child,"ID")) =3D=3D tonumber(index) then
+			-- map found
+			xml_map =3D child
+		end
+	end
+	=

+	-- crash on "map not found"
+	if not xml_map then
+		print("FATAL map " .. index .. " not found in "..mapsfile)
+		Crash()
+	end
+
+	local mapfilename =3D	xmlchild(xml_map,"MAPFILENAME")[1]
+
+	if not(file_exists(CorrectPath(gUOPath..mapfilename))) then
+	end
+
+	-- map found, assign it to the global map info
+	return xml_map
+end
+
 function LoadMap (index)
 	gMapLoaded =3D true
 	gMapIndex =3D index
@@ -263,28 +283,17 @@
 	gMapImagePath_Small	=3D datapath.."base/tempmap_"..gMapIndex.."_small_s.t=
ga"
 =

 	if (not gInitialMapLoaded) then LoadingProfile("load MapInfo") end
-	=

-	local xml_maps =3D xmlchild(LuaXML_ParseFile(datapath.."xml/Maps.xml"),"M=
APS")
-	local xml_map =3D nil
-	=

-	-- search for MAP node with matching ID
-	for k,child in ipairs(xml_maps) do
-		if tonumber(xmlvalue(child,"ID")) =3D=3D tonumber(index) then
-			-- map found
-			xml_map =3D child
-		end
-	end
-	=

-	-- crash on "map not found"
-	if not xml_map then
-		print("FATAL map " .. index .. " not found in Maps.xml")
-		Crash()
-	end
-	=

-	-- map found, assign it to the global map info
-	gMapInfo =3D xml_map	-- xmlchild(xml_maps,"MAP",gMapIndex)
-	=

+
+	-- map found, assign map-array to the global map info
+	gMapInfo =3D Check_Map(index,"xml/Maps.xml")
 	local mapfilename =3D	xmlchild(gMapInfo,"MAPFILENAME")[1]
+
+	-- if Mapfile (for example map1.mul) don't exists then load
+	if not( file_exists(CorrectPath(gUOPath..mapfilename)) ) then
+		gMapInfo =3D Check_Map(index,"xml/Maps_pre6.xml")
+		mapfilename =3D xmlchild(gMapInfo,"MAPFILENAME")[1]
+	end
+	=

 	local mapheight =3D		xmlchild(gMapInfo,"HEIGHT")[1]
 	local staidxfilename =3D	xmlchild(gMapInfo,"STAIDXFILENAME")[1]
 	local staticfilename =3D	xmlchild(gMapInfo,"STATICFILENAME")[1]

Modified: branches/knut/data/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.mainmenu.lua (original)
+++ branches/knut/data/lua/lib.mainmenu.lua Wed Aug  1 22:26:16 2007
@@ -54,17 +54,17 @@
 		return
 	end
 	=

-	ProtocolSend_Account_Login_Request(gLoginname,gPassword,gServerSeed) -- 0=
x80 kPacket_Account_Login_Request
+	ProtocolSend_Account_Login_Request(gLoginname,gPassword) -- 0x80 kPacket_=
Account_Login_Request
 	-- answered by 0xA8 kPacket_Server_List which calls MainMenuShowServerList
 end
 =

 --gameserverlist selection
 function MainMenuShowServerList (serverlist)
-	if (gPolServer) then gGameServerSlot=3DgGameServerSlot+1 end -- TODO : ob=
solete ??? --pol uses gameserverslot+1
-	=

 	local MySelectServer =3D function(server) =

 		AddFadeLines(sprintf("connecting to server %s[%d]",server.name or "???",=
server.index or 0))
-		printdebug("login","NET: select gameserver",server.name,server.index,gGa=
meServerSlot)
+		=

+--		ProtocolSend_SystemSpecs()
+		=

 		ProtocolSend_GameServer_Select(server.index or 0) -- 0xA0 kPacket_Server=
_Select =

 		-- answered by kPacket_Server_Redirect 0x8C, =

 		-- which calls ProtocolSend_GameServer_PostLogin kPacket_Post_Login 0x91 =

@@ -103,7 +103,7 @@
 	--check first, if the choose slot is available!
 	=

 	local MySelectChar =3D function(widget) =

-		ProtocolSend_Character_Select(widget.iCharNum + gCharacterSlotAdd,gGameS=
erverAccount)
+		ProtocolSend_Character_Select(widget.iCharNum,gGameServerAccount)
 		widget.dialog:Destroy()
 	end
 	local MyCreateCharTemplatePicker =3D function(widget) =

@@ -225,11 +225,20 @@
 function StartOfflineMode ()
 	gStartGameWithoutNetwork =3D true
 	InitPlainGUI()
+
+	-- Binds key and Inits all InGame-Data
 	StartInGame() -- otherwise handled by the serverpacket (kPacket_Login_Com=
plete)
+
+	-- Unbind some keys only for offline mode (rest is the same as InGame)
+	UnBindArr({"u","q","e","tab","r","c","t","k","j","b","p","g","h","y"})
+
 	gCurrentRenderer:InitLocalCam()
 end
 =

 function StartMainMenu ()
+	-- start menu sound
+	SoundPlayMusicById(8)
+
 	local rows =3D {
 		{ {type=3D"Label",	text=3D"Login:"} }
 	}
@@ -252,6 +261,8 @@
 	table.insert(rows,{ {type=3D"Button",text=3D"#exit",onLeftClick=3Dfunctio=
n () Terminate() end } })
 	=

 --	gMainMenuDialog =3D guimaker.MakeTableDlg(rows,10,10)
+
+	MainMenuSetBackground_Sky()
 =

 	if (not(gMainMenuDialog)) then
 		gMainMenuDialog=3Dguimaker.MakeSortedDialog()				--CreateGumpDlgFromGfm(=
datapath.."gfm/main_menu.gfm")
@@ -318,19 +329,14 @@
 	end
 end
 =

---[[
 function MainMenuSetBackground_Sky ()
 	local cam =3D GetMainCam()
 	cam:SetFOVy(gfDeg2Rad*45)
 	cam:SetNearClipDistance(0.5) -- old : 1
 	cam:SetFarClipDistance(2000) -- ogre defaul : 100000
 	cam:SetProjectionType(0) -- perspective
-	Client_ClearLights()
-	Client_AddDirectionalLight(1,1,-1)
-	Client_SetAmbientLight(0.4, 0.4, 0.4, 1)
-	Client_SetSkybox("cube") -- cube skybox sunset darksun =

-	=

-	SetMainMenuCam(0,(90 + 10) * gfDeg2Rad)
+	Client_SetSkybox("sunset") -- cleansky skybox sunset darksun =

+	SetMainMenuCam(0,gfDeg2Rad)
 end
 =

 function SetMainMenuCam (roth,rotv)
@@ -342,4 +348,3 @@
 	local w,x,y,z =3D Quaternion.Mul(w4,x4,y4,z4, w3,x3,y3,z3)
 	GetMainCam():SetRot(w,x,y,z)	=

 end
-]]--

Modified: branches/knut/data/lua/lib.meshexporter.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.meshexporter.lua (original)
+++ branches/knut/data/lua/lib.meshexporter.lua Wed Aug  1 22:26:16 2007
@@ -1,22 +1,22 @@
 --ModelExporter
 =

 --just a small function to export all static models from models.uim file
---Exportformat: stone_wall_0x0001.mesh (tiledataname+"_"tileid+".mesh")
---.....................................spaces exchanged to "_" and tileid =
into hex
 -- TODO : write material
 -- TODO : export textures too
 function MeshExporter()
-	for i =3D 0, 20000 do
-		--if (i=3D=3Dhex2num("0x0b59")) then
-		--	local testid =3D i
-			local meshname =3D GetStaticMeshName(i)
-			print("Export Model: ",i,meshname)
-			if (meshname) then
-				--local t =3D GetStaticTileType(testid)
-				--local staticname =3D string.gsub(t.msName,"%s","_")
-				--local filename =3D staticname.."_"..sprintf("0x%04x",(testid))..".me=
sh"
-				ExportMesh(meshname,datapath.."models_uim/models/mesh/iris_model_"..i.=
.".mesh")
-			end
-		--end
+	local i =3D 0
+	-- for exporting models from models.uim
+	for i=3D0,20000 do
+		local meshname =3D gLegacyModelAndTextureLoader:CreateMesh(i)
+		if meshname ~=3D nil then
+			local flags,weight,quality,unkn1,unkn2,quantity,animid,unkn3,hue,unkn4,=
height,name =3D gTileTypeLoader:GetStaticTileType(i+32*512)
+			if name =3D=3D nil then name =3D "unknown" end
+			print("name",name)
+			name =3D string.lower(name)
+			name =3D string.gsub(name,"%%[^%%]+%%","")
+			name =3D string.gsub(name,"[^a-z0-9]","_")
+			ExportMesh(meshname,GetModelPath(i))
+		end
 	end
+	Crash()
 end

Modified: branches/knut/data/lua/lib.modelanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.modelanim.lua (original)
+++ branches/knut/data/lua/lib.modelanim.lua Wed Aug  1 22:26:16 2007
@@ -73,7 +73,9 @@
 	--if (bodyid =3D=3D 400) then bodyid =3D 401 end
 	--if (bodyid =3D=3D 401) then bodyid =3D 400 end
 	local modelinfo =3D GetGrannyModelInfo(bodyid)
+
 	assert(modelinfo,"ERROR bodyinfo for skeleton not found "..tostring(bodyi=
d))
+
 	while (modelinfo.animid ~=3D 0) do modelinfo =3D GetGrannyModelInfo(model=
info.animid) end
 	local skeletonname =3D modelinfo.modelname -- example: "deer_stag"
 	local skeleton =3D gSkeletons[skeletonname]
@@ -129,6 +131,7 @@
 function GetAnimPath (mobileartid,animid) =

 	local bodyid =3D MobileArtId2BodyId(mobileartid)
 	local modelinfo =3D GetGrannyModelInfo(bodyid)
+	if (not modelinfo) then return nil end
 	while (modelinfo.animid ~=3D 0) do modelinfo =3D GetGrannyModelInfo(model=
info.animid) end
 	local animname =3D GetAnimName(bodyid,animid)
 	if (not animname) then return nil end
@@ -144,7 +147,7 @@
 	local bodyid =3D MobileArtId2BodyId(mobileartid)
 	local modelinfo =3D GetGrannyModelInfo(bodyid)
 	while (modelinfo and modelinfo.animid ~=3D 0) do modelinfo =3D GetGrannyM=
odelInfo(modelinfo.animid) end
-	return modelinfo and gAnimInfoLists[modelinfo.typeid] and gAnimInfoLists[=
modelinfo.typeid][animid]
+	return modelinfo and gAnimInfoLists and gAnimInfoLists[modelinfo.typeid] =
and gAnimInfoLists[modelinfo.typeid][animid]
 end
 =

 -- loads an anim info file, like Monster.lst

Modified: branches/knut/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.models.lua (original)
+++ branches/knut/data/lua/lib.models.lua Wed Aug  1 22:26:16 2007
@@ -62,7 +62,7 @@
 -- and a mysterious ./Others/H_Female_Face_V2_lod2.grn
 -- todo : between female head and face
 =

-gGrannyScaleFactor =3D 0.5
+gGrannyScaleFactor =3D 0.65 --0.5
 =

 -- returns true if female
 function IsBodyIDFemale (bodyid) =

@@ -183,7 +183,9 @@
 =

 -- some tests if the granny model format is as expected (for models, not f=
or anims)
 function CheckGrannyModel	(granny) =

-	if (granny:GetSubMeshCount() ~=3D 1) then print("WARNING ! unexpected sum=
eshcount ",granny:GetSubMeshCount()) end
+	if (granny:GetSubMeshCount() ~=3D 1) then
+		printdebug("granny","WARNING ! unexpected sumeshcount ",granny:GetSubMes=
hCount())
+	end
 	assert(granny:GetSubMeshCount() >=3D 1,"GetSubMeshCount=3D=3D"..tostring(=
granny:GetSubMeshCount()))
 	assert(granny:GetTextureIDCount() >=3D 1,"GetTextureIDCount=3D=3D"..tostr=
ing(granny:GetTextureIDCount()))
 	if (granny:GetTextureIDCount() > 1) then
@@ -297,15 +299,6 @@
 	return loader
 end
 =

-
-function MobileArtId2BodyId (mobileartid)
-	if (mobileartid =3D=3D  987) then return 400 end --   male admin robe
-	if (mobileartid =3D=3D 1987) then return 401 end -- female admin robe
-	=

-	if (mobileartid =3D=3D 778) then print("TODO : Mobile 778 doesn't work ->=
 mapping to modelid 16") return 16 end
-	return mobileartid
-end
-
 -- returns array with granny-model ids for bodyparts and clothing
 function GetMobileModelPartModelIDs (mobile) =

 	local iPrimaryHandItem =3D nil
@@ -347,7 +340,15 @@
 						modelid =3D modelid + kGrannyEquipmentFemaleAdd =

 					end
 					local hue =3D item.hue or 0
-					table.insert(modelidarr,{hue=3Dhue,modelid=3Dmodelid}) =

+					table.insert(modelidarr,{hue=3Dhue,modelid=3Dmodelid})
+					=

+					--local bShieldHand=3Dfalse
+					-- check for shields (if wearable -> take quality as layer) (stupid)
+					--if (BitwiseAND(tiledata.miFlags,kTileDataFlag_Wearable)~=3D0) then
+						--print("QualityLayer=3D"..tiledata.miQuality.." "..tiledata.msName)
+					--	bShieldHand=3Dtrue
+					--end
+					=

 					local bDoubleHanded =3D (layer =3D=3D kLayer_TwoHanded) and (BitwiseA=
ND(tiledata.miFlags,kTileDataFlag_Weapon) ~=3D 0)
 					if (layer =3D=3D kLayer_OneHanded or bDoubleHanded) then =

 						iPrimaryHandItem =3D {hue=3Dhue,modelid=3Dmodelid}
@@ -375,6 +376,7 @@
 -- creates childnodes of parentgfx and adds inserts them into the partsarr=
 table
 function CreateMobileModelPartsFromModelIDArray (mobileartid,parentgfx,par=
tsarr,modelidarr,iPrimaryHandItem,iSecondaryHandItem) =

 	local bodyid =3D MobileArtId2BodyId(mobileartid)
+
 	local skeleton =3D GetOrCreateSkeleton(bodyid) -- skeleton is determined =
by the bodyid, not possible from the wearables
 	printdebug("granny","CreateMobileModelParts...",mobileartid,bodyid,skelet=
on.name)
 	local leftHandEntity1
@@ -483,6 +485,10 @@
 function UpdateMobileModel (mobile)
 	if (not gAnimInfoLists) then return end
 	--if (mobile.body ~=3D 400 and mobile.body ~=3D 401) then return end
+
+	-- TODO: Debug and check why RunUO sends kPacket_Equipped_MOB with artid =
=3D=3D Zero
+	if (mobile.artid =3D=3D 0) then return end
+	if (not mobile.equipment) then return end -- happens when being teleported
 	=

 	local mount =3D mobile:getequipment(kLayer_Mount)
 	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelPa=
rtModelIDs(mobile)
@@ -532,7 +538,9 @@
 			--print("equip",item.artid,tiledata and tiledata.miAnimID or 0)
 			--local mountbodyid =3D tiledata and tiledata.miAnimID  -- this fails, =
animid is often zero, seems to be hardcoded
 			local mountbodyid =3D gMountTranslate[mount.artid]
-			print("MOUNT",mountbodyid,mount.artid)
+
+			printdebug("granny","MOUNT ",mountbodyid,mount.artid)
+
 			if ((not mountbodyid) or mountbodyid =3D=3D 0) then mountbodyid =3D gSt=
andardHorse end
 			--print("mountbodyid",mountbodyid,mount.artid)
 			--print("mount",mountbodyid,vardump2(mount),tiledata and vardump2(tiled=
ata))
@@ -542,7 +550,7 @@
 				=

 				-- fallback to standard horse mount
 				if (not meshname) then
-					print("warning, broken mountid, falling back to horse",mountbodyid)
+					printdebug("granny","warning, broken mountid, falling back to horse "=
,mountbodyid)
 					mountbodyid =3D gStandardHorse
 					mountskeleton =3D GetOrCreateSkeleton(mountbodyid) -- skeleton is det=
ermined by the bodyid, not possible from the wearables
 					meshname =3D GetGrannyMeshName(mountbodyid,mountskeleton.name,mount.h=
ue)					=


Modified: branches/knut/data/lua/lib.mount.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.mount.lua (original)
+++ branches/knut/data/lua/lib.mount.lua Wed Aug  1 22:26:16 2007
@@ -68,3 +68,48 @@
 gMountGrannyOverride[hex2num("0x31F")] =3D gStandardHorse
 gMountGrannyOverride[hex2num("0x11C")] =3D gStandardHorse
 for k,v in pairs(gMountTranslate) do if (gMountGrannyOverride[v]) then gMo=
untTranslate[k] =3D gMountGrannyOverride[v] end end
+
+--[[
+(tipp from btbn from uox3 code)
+skeletalmount=3D0x3EBB
+darksteed=3D0x3EA9
+etherealhorse=3D0x3EAA
+nightmare=3D0x3EB5
+silversteed=3D0x3EA8
+britwarhorse=3D0x3EB2
+comwarhorse=3D0x3EB1
+minaxwarhorse=3D0x3EAF
+slwarhorse=3D0x3EB0
+unicorn=3D0x3EB4
+kirin=3D0x3EAD
+seahorse=3D0x3EB3
+giantfirebeetle=3D0x3E95
+ethereal_llama=3D0x3EAB
+etherealostard=3D0x3EAC
+nightmare2=3D0x3EA7
+nightmare3=3D0x3EA9
+tdnightmare=3D0x3EB7
+ridgeback=3D0x3EB8
+firesteed=3D0x3E9E
+etherealkirin=3D0x3E9C
+horse1=3D0x3EA2
+etherealunicorn=3D0x3EB4
+etherealridgeback=3D0x3E9A
+etherealswampdragon=3D0x3E98
+etherealbeetle=3D0x3E97
+horse2=3D0x3E9F
+desertostard=3D0x3EA3
+frenziedostard=3D0x3EA4
+forestostard=3D0x3EA5
+llama=3D0x3EA6
+horse3=3D0x3EA0
+horse4=3D0x3EA1
+hiryu=3D0x3E94
+chimera=3D0x3E90  -- also known as reptalon/raptalon ?
+cusidhe=3D0x3E91
+mondainsteed=3D0x3E92
+giantbeetle=3D0x3EBC
+swampdragon=3D0x3EBD
+armorswampdragon=3D0x3EBE
+kirin=3D0x3EAD
+]]--

Modified: branches/knut/data/lua/lib.net.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.net.lua (original)
+++ branches/knut/data/lua/lib.net.lua Wed Aug  1 22:26:16 2007
@@ -30,8 +30,10 @@
 	NetDisconnect()							-- close old connection
 	gMainConnection =3D NetConnect(host,port)
 	if (not gMainConnection) then return false end
-	gSendFifo:PushUint32(key)				--norm. IP from Client, only required for os=
i servers (uncompressed/unencrypted)
 	NetTrafficStep()
+	local out =3D GetSendFIFO()
+	out:PushNetUint32(key)		--IP from Client/or GameAccount, only required fo=
r osi servers (uncompressed/unencrypted)
+	out:SendPacket()
 	return true
 end
 =


Modified: branches/knut/data/lua/lib.packet.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.packet.lua (original)
+++ branches/knut/data/lua/lib.packet.lua Wed Aug  1 22:26:16 2007
@@ -9,7 +9,6 @@
 gPacketType.kPacket_Drop_Object										=3D { id=3Dhex2num("0x08") }
 gPacketType.kPacket_Single_Click									=3D { id=3Dhex2num("0x09") }
 gPacketType.kPacket_Edit											=3D { id=3Dhex2num("0x0A") }
---gPacketType.kPacket_Edit_Area										=3D { id=3Dhex2num("0x0B") } -- o=
ld client packet, not used anymore since 4.0.7a
 gPacketType.kPacket_Damage											=3D { id=3Dhex2num("0x0B") }
 gPacketType.kPacket_Tile_Data										=3D { id=3Dhex2num("0x0C") }
 gPacketType.kPacket_NPC_Data										=3D { id=3Dhex2num("0x0D") }
@@ -232,16 +231,14 @@
 gPacketType.kPacket_Mahjong											=3D { id=3Dhex2num("0xDA") }
 gPacketType.kPacket_Character_Transfer_Log							=3D { id=3Dhex2num("0xDB"=
) }
 gPacketType.kPacket_AOSObjProp										=3D { id=3Dhex2num("0xDC") } -- si=
ze was not in necro list
-
 -- dd df (compressed gump und buff system)
 gPacketType.kPacket_Compressed_Gump									=3D { id=3Dhex2num("0xDD") }
+-- unknown yet
+gPacketType.kPacket_unknownDEpacket									=3D { id=3Dhex2num("0xDE") }
+-- buff/debuff packet
+gPacketType.kPacket_BuffDebuff_System								=3D { id=3Dhex2num("0xDF") }
 =

 --[[
-
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xDD") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xDE") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xDF") }
-
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xE0") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xE1") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xE2") }
@@ -275,5 +272,4 @@
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xFD") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xFE") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xFF") }
-
 ]]--

Modified: branches/knut/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.protocol.lua (original)
+++ branches/knut/data/lua/lib.protocol.lua Wed Aug  1 22:26:16 2007
@@ -6,9 +6,9 @@
 -- changed NecroPacketData - (0x0B oldsize=3D"0x010A" , damage packet)
 -- packet sizes from necrotoolz.sourceforge.net/kairpacketguide/index.html=
 (0 means dynamic) contains all sizes from 0x00 to 0xDB
 gNecroPacketData_ID 	=3D {  "0x00",  "0x01",  "0x02",  "0x03",  "0x04",  "=
0x05",  "0x06",  "0x07",  "0x08",  "0x09",  "0x0A",  "0x0B",  "0x0C",  "0x0=
D",  "0x0E",  "0x0F",  "0x10",  "0x11",  "0x12",  "0x13",  "0x14",  "0x15",=
  "0x16",  "0x17",  "0x18",  "0x19",  "0x1A",  "0x1B",  "0x1C",  "0x1D",  "=
0x1E",  "0x1F",  "0x20",  "0x21",  "0x22",  "0x23",  "0x24",  "0x25",  "0x2=
6",  "0x27",  "0x28",  "0x29",  "0x2A",  "0x2B",  "0x2C",  "0x2D",  "0x2E",=
  "0x2F",  "0x30",  "0x31",  "0x32",  "0x33",  "0x34",  "0x35",  "0x36",  "=
0x37",  "0x38",  "0x39",  "0x3A",  "0x3B",  "0x3C",  "0x3D",  "0x3E",  "0x3=
F",  "0x40",  "0x41",  "0x42",  "0x43",  "0x44",  "0x45",  "0x46",  "0x47",=
  "0x48",  "0x49",  "0x4A",  "0x4B",  "0x4C",  "0x4D",  "0x4E",  "0x4F",  "=
0x50",  "0x51",  "0x52",  "0x53",  "0x54",  "0x55",  "0x56",  "0x57",  "0x5=
8",  "0x59",  "0x5A",  "0x5B",  "0x5C",  "0x5D",  "0x5E",  "0x5F",  "0x60",=
  "0x61",  "0x62",  "0x63",  "0x64",  "0x65",  "0x66",  "0x67",  "0x68",  "=
0x69",  "0x6A",  "0x6B",  "0x6C",  "0x6D",  "0x6E",  "0x6F",  "0x70",  "0x7=
1",  "0x72",  "0x73",  "0x74",  "0x75",  "0x76",  "0x77",  "0x78",  "0x79",=
  "0x7A",  "0x7B",  "0x7C",  "0x7D",  "0x7E",  "0x7F",  "0x80",  "0x81",  "=
0x82",  "0x83",  "0x84",  "0x85",  "0x86",  "0x87",  "0x88",  "0x89",  "0x8=
A",  "0x8B",  "0x8C",  "0x8D",  "0x8E",  "0x8F",  "0x90",  "0x91",  "0x92",=
  "0x93",  "0x94",  "0x95",  "0x96",  "0x97",  "0x98",  "0x99",  "0x9A",  "=
0x9B",  "0x9C",  "0x9D",  "0x9E",  "0x9F",  "0xA0",  "0xA1",  "0xA2",  "0xA=
3",  "0xA4",  "0xA5",  "0xA6",  "0xA7",  "0xA8",  "0xA9",  "0xAA",  "0xAB",=
  "0xAC",  "0xAD",  "0xAE",  "0xAF",  "0xB0",  "0xB1",  "0xB2",  "0xB3",  "=
0xB4",  "0xB5",  "0xB6",  "0xB7",  "0xB8",  "0xB9",  "0xBA",  "0xBB",  "0xB=
C",  "0xBD",  "0xBE",  "0xBF",  "0xC0",  "0xC1",  "0xC2",  "0xC3",  "0xC4",=
  "0xC5",  "0xC6",  "0xC7",  "0xC8",  "0xC9",  "0xCA",  "0xCB",  "0xCC",  "=
0xCD",  "0xCE",  "0xCF",  "0xD0",  "0xD1",  "0xD2",  "0xD3",  "0xD4",  "0xD=
5",  "0xD6",  "0xD7",  "0xD8",  "0xD9",  "0xDA",  "0xDB",  "0xDC",
-"0xDD"}
+"0xDD", "0xDE", "0xDF"}
 gNecroPacketData_Size 	=3D {"0x0068","0x0005","0x0007",     "0","0x0002","=
0x0005","0x0005","0x0007","0x000E","0x0005","0x000B","0x0007",     "0","0x0=
003",     "0","0x003D","0x00D7",     "0",     "0","0x000A","0x0006","0x0009=
","0x0001",     "0",     "0",     "0",     "0","0x0025",     "0","0x0005","=
0x0004","0x0008","0x0013","0x0008","0x0003","0x001A","0x0007","0x0014","0x0=
005","0x0002","0x0005","0x0001","0x0005","0x0002","0x0002","0x0011","0x000F=
","0x000A","0x0005","0x0001","0x0002","0x0002","0x000A","0x028D",     "0","=
0x0008","0x0007","0x0009",     "0",     "0",     "0","0x0002","0x0025",    =
 "0","0x00C9",     "0",     "0","0x0229","0x02C9","0x0005",     "0","0x000B=
","0x0049","0x005D","0x0005","0x0009",     "0",     "0","0x0006","0x0002", =
    "0",     "0",     "0","0x0002","0x000C","0x0001","0x000B","0x006E","0x0=
06A",     "0",     "0","0x0004","0x0002","0x0049",     "0","0x0031","0x0005=
","0x0009","0x000F","0x000D","0x0001","0x0004",     "0","0x0015",     "0", =
    "0","0x0003","0x0009","0x0013","0x0003","0x000E",     "0","0x001C",    =
 "0","0x0005","0x0002",     "0","0x0023","0x0010","0x0011",     "0","0x0009=
",     "0","0x0002",     "0","0x000D","0x0002",     "0","0x003E",     "0","=
0x0002","0x0027","0x0045","0x0002",     "0",     "0","0x0042",     "0",    =
 "0",     "0","0x000B",     "0",     "0",     "0","0x0013","0x0041",     "0=
","0x0063",     "0","0x0009",     "0","0x0002",     "0","0x001A",     "0","=
0x0102","0x0135","0x0033",     "0",     "0","0x0003","0x0009","0x0009","0x0=
009","0x0095",     "0",     "0","0x0004",     "0",     "0","0x0005",     "0=
",     "0",     "0",     "0","0x000D",     "0",     "0",     "0",     "0", =
    "0","0x0040","0x0009",     "0",     "0","0x0003","0x0006","0x0009","0x0=
003",     "0",     "0",     "0","0x0024",     "0",     "0",     "0","0x0006=
","0x00CB","0x0001","0x0031","0x0002","0x0006","0x0006","0x0007",     "0","=
0x0001",     "0","0x004E",     "0","0x0002","0x0019",     "0",     "0",    =
 "0",     "0",     "0",     "0","0x010C",     "0",     "0","0x0009",
-"0"}
+"0", "0", "0"}
 gNecroPacketSize =3D {}
 for i =3D 1,table.getn(gNecroPacketData_ID) do =

 	gNecroPacketSize[hex2num(gNecroPacketData_ID[i])] =3D hex2num(gNecroPacke=
tData_Size[i]) =

@@ -43,6 +43,8 @@
 	dofile(libpath .. "net.securetrade.lua")
 	dofile(libpath .. "net.walk.lua")
 	dofile(libpath .. "net.world.lua")
+	dofile(libpath .. "net.customhouse.lua")
+	dofile(libpath .. "net.corpse.lua")
 =

 	=

 	--OldIrisPacketLenTest()
@@ -238,3 +240,4 @@
 	out:PushNetUint32(serial)
 	out:SendPacket()
 end
+

Modified: branches/knut/data/lua/lib.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.skill.lua (original)
+++ branches/knut/data/lua/lib.skill.lua Wed Aug  1 22:26:16 2007
@@ -262,7 +262,7 @@
 				skill.index =3D listindex	-- index in the skilllist
 				listindex =3D listindex + 1
 				=

-				vardump(skill)
+				printdebug("skill","Skill "..vardump(skill))
 				table.insert(dialog.lSkill,skill)
 			end
 		end

Modified: branches/knut/data/lua/lib.sound.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.sound.lua (original)
+++ branches/knut/data/lua/lib.sound.lua Wed Aug  1 22:26:16 2007
@@ -1,38 +1,41 @@
-glSound =3D {}
+glSoundEffect =3D {}
 gSoundSystem =3D nil
 gSoundMusic =3D nil
 gSoundMusicLoop =3D true
 gSoundMusicCurrent =3D nil
 =

 function SoundInit(name,frequency)
-	SoundDone()
-	gSoundSystem =3D CreateSoundSystem(name,frequency)
-	if gSoundSystem then gSoundSystem:SetDistanceFactor(1) end
+	printdebug("sound",sprintf("SoundInit(%s,%f)\n",name,frequency))
+	if gSoundSystem then SoundDone() end
+	gSoundSystem =3D CreateSoundSystem(name,frequency)
+	if gSoundSystem then
+		SoundStep()
+		gSoundSystem:SetDistanceFactor(1)
+	end
 end
 =

 function SoundDone()
+	printdebug("sound",sprintf("SoundDone()\n"))
 	if gSoundSystem then gSoundSystem:Destroy() end
 end
 =

 function SoundSetListenerPosition(x,y,z)
 	if gSoundSystem then
 		printdebug("sound",sprintf("SoundSetListenerPosition(%f,%f,%f)\n",x,y,z))
-		-- TODO fmod sound position seems not wo work =

-		-- gSoundSystem:SetListenerPosition(x,y,z)
-		gSoundSystem:SetListenerPosition(0,0,0)
+		gSoundSystem:SetListenerPosition(x,y,z)
 	end
 end
 =

 -- just adds a sound effect to the global effect list
 function AddSound(effect)
-	table.insert(glSound, effect)
+	table.insert(glSoundEffect, effect)
 end
 =

--- removes all not playing sounds from glSound
+-- removes all not playing sounds from glSoundEffect
 function FlushSoundEffects()
-	for k,o in pairs(glSound) do =

+	for k,o in pairs(glSoundEffect) do =

 		if not o:IsPlaying() then
-			table.remove(glSound, k)
+			table.remove(glSoundEffect, k)
 			o:Destroy()
 		end
 	end
@@ -40,7 +43,7 @@
 =

 function IsSoundEffectPlaying()
 	local playing =3D 0
-	for k,o in pairs(glSound) do =

+	for k,o in pairs(glSoundEffect) do =

 		if o:IsPlaying() then playing =3D playing + 1 end
 	end
 	=

@@ -73,92 +76,100 @@
 =

 function SoundPlayMusic(file)
 	if gSoundSystem then
-		if gSoundMusic then
-			gSoundMusic:Stop()
-			gSoundMusic =3D nil
-		end
-		=

+		SoundStopMusic()
 		gSoundMusic =3D gSoundSystem:CreateSoundSourceFromFile(file)
 		gSoundMusic:Play()
 	end
 end
 =

+function SoundStopMusic()
+	if gSoundSystem then
+		if gSoundMusic then
+			gSoundMusic:Stop()
+			gSoundMusic =3D nil
+		end
+	end
+end
+
 function SoundPlayEffect(x,y,z,effect)
-	if gSoundSystem then
-		printdebug("sound",sprintf("SoundPlayEffect(%f,%f,%f,%i)\n",x,y,z,effect=
))
-		FlushSoundEffects()
-		-- TODO fmod sound position seems not wo work =

-		-- local e =3D gSoundSystem:CreateSoundSource3DFromEffect(gSoundLoader,x=
,y,z,effect)
-		local e =3D gSoundSystem:CreateSoundSource3DFromEffect(gSoundLoader,0,0,=
0,effect)
-		if e then
-			e:SetMinMaxDistance(5,1000)
-			-- glSound:SetReferenceDistance(100)
-			e:Play()
-			printdebug("sound","volume")
-			printdebug("sound",e:GetVolume())
-			printdebug("sound","position")
-			printdebug("sound",e:GetPosition())
-			printdebug("sound","listener")
-			printdebug("sound",gSoundSystem:GetListenerPosition())
-			AddSound(e)
+	if gSoundLoader then
+		if gSoundSystem then
+			printdebug("sound",sprintf("SoundPlayEffect(%f,%f,%f,%i)\n",x,y,z,effec=
t))
+			FlushSoundEffects()
+			local e =3D gSoundSystem:CreateSoundSource3DFromEffect(gSoundLoader,x,y=
,z,effect)
+			if e then
+				e:SetMinMaxDistance(50,100000)
+				-- glSoundEffect:SetReferenceDistance(100)
+				e:Play()
+				printdebug("sound","volume")
+				printdebug("sound",e:GetVolume())
+				printdebug("sound","position")
+				printdebug("sound",e:GetPosition())
+				printdebug("sound","listener")
+				printdebug("sound",gSoundSystem:GetListenerPosition())
+				AddSound(e)
+			end
 		end
 	end
 end
 =

 function SoundPlayMusicById(musicid)
-	printdebug("sound",sprintf("SoundPlayMusicById(%s)\n",musicid))
-	local config =3D CorrectPath(gUOPath.."Music/Digital/Config.txt")
-	local mp3 =3D nil
-	local loop =3D nil
-	local file =3D nil
-	=

-	-- TODO : not Config.txt not available if midi only, see ticket #32
-	if ((not config) or config =3D=3D "" or (not file_exists(config))) then r=
eturn end
-	=

-	-- parse uo sound config file
-	for line in io.lines(config) do
-		local id,loop,name
-		local poss =3D string.find(line," ")
-		local posc =3D string.find(line,",")
+	if gUseMusic then
+		printdebug("sound",sprintf("SoundPlayMusicById(%s)\n",musicid))
+		local config =3D CorrectPath(gUOPath.."Music/Digital/Config.txt")
+		local mp3 =3D nil
+		local loop =3D nil
+		local file =3D nil
 		=

-		if poss then
-			if posc =3D=3D nil then
-				-- no loop specified
-				loop =3D 0
-				id =3D string.sub(line,0,poss-1)
-				name =3D string.sub(line,poss+1)
-			else
-				loop =3D 1
-				id =3D string.sub(line,0,poss-1)
-				name =3D string.sub(line,poss+1,posc-1)
-			end
+		-- TODO : not Config.txt not available if midi only, see ticket #32
+		if ((not config) or config =3D=3D "" or (not file_exists(config))) then =
return end
+		=

+		-- parse uo sound config file
+		for line in io.lines(config) do
+			local id,loop,name
+			local poss =3D string.find(line," ")
+			local posc =3D string.find(line,",")
 			=

-			if tonumber(id) =3D=3D musicid then
-				printdebug("sound","id=3D",id," name=3D",name," loop=3D",loop," file=
=3D",file)
-				if (string.find(string.lower(name),".mp3") =3D=3D nil) then
-					-- add mp3 suffix
-					file =3D CorrectPath(gUOPath.."Music/Digital/"..name..".mp3")
+			if poss then
+				if posc =3D=3D nil then
+					-- no loop specified
+					loop =3D 0
+					id =3D trim(string.sub(line,0,poss-1))
+					name =3D trim(string.sub(line,poss+1))
 				else
-					-- mp3 suffix aready present
-					file =3D CorrectPath(gUOPath.."Music/Digital/"..name)
+					loop =3D 1
+					id =3D trim(string.sub(line,0,poss-1))
+					name =3D trim(string.sub(line,poss+1,posc-1))
 				end
 				=

-				if loop =3D=3D 1 then
-					gSoundMusicLoop =3D true
-				else =

-					gSoundMusicLoop =3D false
+				if tonumber(id) =3D=3D musicid then
+					if (string.find(string.lower(name),".mp3") =3D=3D nil) then
+						-- add mp3 suffix
+						file =3D CorrectPath(gUOPath.."Music/Digital/"..name..".mp3")
+					else
+						-- mp3 suffix aready present
+						file =3D CorrectPath(gUOPath.."Music/Digital/"..name)
+					end
+					=

+					printdebug("sound",sprintf("load sound id=3D%d name=3D%s loop=3D%d fi=
le=3D%s\n",id,name,loop,file))
+					=

+					if loop =3D=3D 1 then
+						gSoundMusicLoop =3D true
+					else =

+						gSoundMusicLoop =3D false
+					end
 				end
 			end
 		end
-	end
-	=

-	if file and (not gSoundMusicCurrent or gSoundMusicCurrent ~=3D file) then
-		-- play it :) only if new or other sound
-		if file_exists(file) then
-			SoundPlayMusic(file)
-			gSoundMusicCurrent =3D file
-		else =

-			print("ERROR sound file not found: "..file)
+		=

+		if file and (not gSoundMusicCurrent or gSoundMusicCurrent ~=3D file) then
+			-- play it :) only if new or other sound
+			if file_exists(file) then
+				SoundPlayMusic(file)
+				gSoundMusicCurrent =3D file
+			else =

+				print("ERROR sound file not found: "..file)
+			end
 		end
 	end
 end

Modified: branches/knut/data/lua/lib.spellbooks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.spellbooks.lua (original)
+++ branches/knut/data/lua/lib.spellbooks.lua Wed Aug  1 22:26:16 2007
@@ -1,6 +1,23 @@
 -- Spellbook definitions
 -- TODO: update definition needed
 =

+--RunUO1 old_spellbook Items
+--[[
+NET: Old_Spellbook: serial=3D0x41b72b8a itemId=3D0xffff offset=3D0x0000
+container=3D0x41b72b8a item.serial=3D0x7fffffff artid=3D0x0000 artid_stack=
=3D0 item.amount=3D1
+container=3D0x41b72b8a item.serial=3D0x7ffffffc artid=3D0x0000 artid_stack=
=3D0 item.amount=3D4
+container=3D0x41b72b8a item.serial=3D0x7ffffffb artid=3D0x0000 artid_stack=
=3D0 item.amount=3D5
+container=3D0x41b72b8a item.serial=3D0x7ffffffa artid=3D0x0000 artid_stack=
=3D0 item.amount=3D6
+container=3D0x41b72b8a item.serial=3D0x7ffffff5 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D11
+container=3D0x41b72b8a item.serial=3D0x7ffffff4 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D12
+container=3D0x41b72b8a item.serial=3D0x7ffffff0 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D16
+container=3D0x41b72b8a item.serial=3D0x7fffffee artid=3D0x0000 artid_stack=
=3D0 item.amount=3D18
+container=3D0x41b72b8a item.serial=3D0x7fffffec artid=3D0x0000 artid_stack=
=3D0 item.amount=3D20
+container=3D0x41b72b8a item.serial=3D0x7fffffea artid=3D0x0000 artid_stack=
=3D0 item.amount=3D22
+container=3D0x41b72b8a item.serial=3D0x7fffffe4 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D28
+container=3D0x41b72b8a item.serial=3D0x7fffffe3 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D29
+container=3D0x41b72b8a item.serial=3D0x7fffffe2 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D30
+]]--
 function Convert_Spellbookcontainer(matrix,container)
 	if (container.items) then
 		for k,v in pairs(container.items) do
@@ -34,18 +51,23 @@
 gAvailSpellbooks =3D {}
 function Open_Spellbook(spellbook)
 	local dialog =3D gAvailSpellbooks[spellbook.serial]
-	if (dialog) then printf("Spellbook found serial=3D0x%08x\n",spellbook.ser=
ial) end
+	if (dialog and not(spellbook.old)) then
+		printf("Spellbook Container already exists. Delete this Container. seria=
l=3D0x%08x\n",spellbook.serial)
+		dialog:SetVisible(false)
+		gAvailSpellbooks[dialog.spellbookserial]=3Dnil
+		dialog =3D nil
+	end
 	if (not(dialog)) then
 		dialog =3D guimaker.MakeSortedDialog()
 		dialog.Close =3D function (dialog)
-	        -- TODO : close this properly, destroy widgets etc... =

-	        dialog:SetVisible(false)
+			-- TODO : close this properly, destroy widgets etc... =

+			dialog:SetVisible(false)
 			gAvailSpellbooks[dialog.spellbookserial]=3Dnil
 			dialog =3D nil
 		end
 =

 		--Mapping for Old_Spellbook package
-		if ( gServerType[gServerEmulator]~=3D"RunUO" ) then
+		if (spellbook.old) then
 			if (spellbook.itemid =3D=3D hex2num("0xffff")) then
 				-- check and get invisible spellbook container with spellbook items (s=
crolls)
 				local container =3D GetOrCreateContainer(spellbook.serial)

Modified: branches/knut/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.static.lua (original)
+++ branches/knut/data/lua/lib.static.lua Wed Aug  1 22:26:16 2007
@@ -8,10 +8,19 @@
 end
 =

 -- returns path to the model file, for importing
--- TODO handle custom stuff?
-function GetModelPath(id)
+gCustomModelCache =3D {}
+function GetModelPath(id) =

+	local cached =3D gCustomModelCache[id]
+	if (cached) then return cached end
+
 	local base =3D id - math.mod(id,1000) + 1000
-	return sprintf(datapath.."models/models/to_%06d/mdl_%06d.mesh",base,id)
+	local relpath  =3D sprintf("models/to_%06d/mdl_%06d.mesh",base,id)
+	local custompath =3D datapath.."custom/"..relpath
+	if file_exists(custompath) then gCustomModelCache[id] =3D custompath  ret=
urn custompath end
+
+	local meshpath =3D datapath.."models/"..relpath
+	gCustomModelCache[id] =3D meshpath  =

+	return meshpath
 end
 =

 gHasModelOnlyOneUoArtCache =3D {}
@@ -54,22 +63,31 @@
 	end
 end
 =

--- generates or retrieves mehsname for static model
+-- generates or retrieves meshname for static model
 -- TODO : not flexible enough, what if model should be skipped, or multipl=
e models set ? or model depending on surrounding ?
 gLegacyModelCache =3D {}
 function GetStaticMeshName (iTileTypeID,iHue)
+	--1st: Seasonal Translation
+	local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeasonS=
etting)
+
+	-- FILTER: map Mesh to other Mesh
+	iTranslatedTileTypeID =3D FilterMesh(iTranslatedTileTypeID)
+
+	-- FILTER: static water
+	iTranslatedTileTypeID =3D FilterStaticWater(iTranslatedTileTypeID)
+	=

 	-- hue default value is 0
 	iHue =3D iHue or 0
-	=

-	local meshname =3D gLegacyModelCache[iTileTypeID.."_"..iHue]
+
+	local meshname =3D gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue]
 	if (meshname =3D=3D nil) then
-		=

-		--Seasonal Translation
-		local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeason=
Setting)
-		=

 		-- try to load the new models
 		if gUseNewModelLoader then
-			meshname =3D GetModelName(iTranslatedTileTypeID) -- "mdl_"..iTileTypeID=
..".mesh"
+
+			if (not meshname) then
+				meshname =3D GetModelName(iTranslatedTileTypeID) -- "mdl_"..iTileTypeI=
D..".mesh"
+			end
+
 			-- mesh available?
 			printdebug("static","query model",meshname)
 			if not OgreMeshAvailable(meshname) then =

@@ -88,8 +106,14 @@
 						gManualArtMaterialLoader:CreateMatchingIfUnavailable(v)
 					end
 				end
-				=

-				HueMesh(meshname,gHueLoader,iHue)
+				-- Hue this Model | TODO : Partitial Hue
+				if (gHueLoader) then
+					if( BitwiseAND(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTi=
leDataFlag_Partial_Hue) ~=3D 0 ) then
+						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
+					else
+						HueMesh(meshname,gHueLoader,iHue)
+					end
+				end
 			end
 		end
 		=

@@ -97,16 +121,16 @@
 			meshname =3D gLegacyModelAndTextureLoader:CreateMesh(iTranslatedTileTyp=
eID)
 			printdebug("static","used OLD model loader:",iTranslatedTileTypeID,iHue=
,meshname)
 		end
-		=

-		if (meshname =3D=3D "") then meshname =3D false end
-		gLegacyModelCache[iTileTypeID.."_"..iHue] =3D meshname
+
+		if (meshname =3D=3D "") then meshname =3D nil end
+		gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue] =3D meshname
 	end
 	return meshname
 end
 =

 -- called by the c methods of LegacyModelAndTextureLoader, has to return a=
 material name, used for statics
 gLegacyModelMaterialCache =3D {}
-function LegacyModelLoader_GetMaterial (iModelID,iTextureID) =

+function LegacyModelLoader_GetMaterial (iModelID,iTextureID)
 	local matname =3D gLegacyModelMaterialCache[iTextureID]
 	if ((not matname)) then =

 		if (iTextureID >=3D 0) then =

@@ -126,13 +150,10 @@
 end
 =

 function GetStaticMeshOrientation (iTileTypeID)
-	local w,x,y,z =3D Quaternion.identity()
-
-	-- custom Ogre Mesh Test
-	--if (iTileTypeID =3D=3D hex2num("0x0cd3")) then
-	--	w,x,y,z =3D Quaternion.fromAngleAxis (gfDeg2Rad * 90.0,1,0,0)  -- ang,=
x,y,z
-	--end
-
+	local w,x,y,z =3D FilterOrientation(iTileTypeID)
+	if (not w or not x or not y or not z) then
+		w,x,y,z =3D Quaternion.identity()
+	end
 	return w,x,y,z
 end
 =


Modified: branches/knut/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.terrain.lua (original)
+++ branches/knut/data/lua/lib.terrain.lua Wed Aug  1 22:26:16 2007
@@ -7,7 +7,6 @@
 	if (translator) then return translator[iTileTypeID] or iTileTypeID else r=
eturn iTileTypeID end
 end
 =

-
 -- called by the c function BuildTerrainEntity_Shaded, has to return a mat=
erial name for a tiletypeid, used for terrain
 function BuildTerrainEntity_Shaded_GetMaterial (iTileTypeID) return GetTer=
rainMaterial(iTileTypeID,true) end
 =

@@ -15,15 +14,21 @@
 function BuildTerrainEntity_Simple_GetMaterial (iTileTypeID) return GetTer=
rainMaterial(iTileTypeID,false) end
 =

 =

-
 gTerrainMaterialCache =3D {}
 function GetTerrainMaterial (iTileTypeID,bLighting)
+	--Seasonal Translation
+	local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSet=
ting)
+
+	-- FILTER: Special Filters
+	iTranslatedTileTypeID =3D FilterMap(iTranslatedTileTypeID)
+
+	--temporary for testing material/shader use for tiles (mystiqq)
+	if (gTerrainShader and OgreMaterialNameKnown("tileid_" .. iTranslatedTile=
TypeID)) then  =

+		return "tileid_" .. iTranslatedTileTypeID
+	end
+
 	local matname =3D gTerrainMaterialCache[iTileTypeID]
 	if ((not matname) and gTexMapLoader) then
-	=

-		--Seasonal Translation
-		local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSe=
tting)
-		=

 		local miFlags,miTexID,msName =3D gTileTypeLoader:GetGroundTileType(iTran=
slatedTileTypeID)
 		-- only if miTexID is !=3D 0 take tiledata value for iTranslatedTileType=
ID
 		if (miTexID ~=3D 0) then

Modified: branches/knut/data/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.test.lua (original)
+++ branches/knut/data/lua/lib.test.lua Wed Aug  1 22:26:16 2007
@@ -54,21 +54,12 @@
 	--SoundSetListenerPosition(100,500,0)
 	SoundSetListenerPosition(100,100,0)
 	=

-	SoundPlayEffect(100,100,0,150)
-	--SoundPlayEffect(100,0,0,1)
+	--SoundPlayEffect(100,100,0,150)
+	SoundPlayEffect(50,100,0,20)
 	=

 	while IsSoundEffectPlaying() do =

 		SoundStep()
 	end
-	=

-	--[[
-	SoundPlayEffect(500,0,0,197)
-	SoundPlayEffect(-500,0,0,197)
-	=

-	while IsSoundEffectPlaying() do =

-		SoundStep()
-	end
-	]]--
 	=

 	SoundDone()
 	Crash()

Modified: branches/knut/data/lua/lib.time.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.time.lua (original)
+++ branches/knut/data/lua/lib.time.lua Wed Aug  1 22:26:16 2007
@@ -2,20 +2,27 @@
 gTimerEveryFrame_New =3D {}
 gMyTicks =3D 0
 =

-gFPS_NextCalc =3D 0
-gFPS_Counter =3D 0
-gFPS =3D 0
-
+gStats_NextUpdate =3D 0
 -- called from main.lua
-function UpdateFPS (ticks)
-	-- calc fps
-	gFPS_Counter =3D gFPS_Counter + 1
-	if (gFPS_NextCalc < ticks) then =

-		DisplayFPS(gFPS_Counter)
-		gFPS_NextCalc =3D ticks + 1000
-		gFPS_Counter =3D 0
-		gFPS =3D gFPS_Counter
-		=

+function UpdateStats (ticks)
+	if (gHideFPS) then return end
+	if (ticks > gStats_NextUpdate) then
+		gStats_NextUpdate =3D ticks + 1000
+		local text =3D sprintf("%5.1f fps %5d bat %10d tri",OgreAvgFPS(),OgreBat=
chCount(),OgreTriangleCount())
+		if (not gStatsField) then
+			local vw,vh =3D GetViewportSize()
+			local w,h =3D 0,12
+			local x,y =3D vw-w,0
+			local col_back =3D {0,0,0,0}
+			local col_text =3D {1,0,0,1}
+			gStatsField =3D guimaker.MyCreateDialog()
+			gStatsField.panel	=3D guimaker.MakeBorderPanel(gStatsField,x,y,w,h,col_=
back)
+			gStatsField.text	=3D guimaker.MakeText(gStatsField.panel,0,0,text,16,co=
l_text)
+		else
+			gStatsField.text.gfx:SetText(text)
+		end
+		local tw,th =3D gStatsField.text.gfx:GetTextBounds()
+		gStatsField.text.gfx:SetPos(-tw,0)
 		-- also update memory usage
 		DisplayMemoryUsage(OgreMemoryUsage("all"))
 	end
@@ -46,3 +53,13 @@
 function RegisterStepper (fun,param) =

 	table.insert(gTimerEveryFrame_New,{fun,param})
 end
+
+-- calls the function fun after timout ms
+function InvokeLater	(timeout, fun)
+	RegisterStepper(function(starttime)
+		if starttime + timeout < gMyTicks then
+			fun()
+			return true
+		end
+	end, gMyTicks)
+end

Modified: branches/knut/data/lua/lib.uoids.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.uoids.lua (original)
+++ branches/knut/data/lua/lib.uoids.lua Wed Aug  1 22:26:16 2007
@@ -6,6 +6,7 @@
 gGender =3D { [0] =3D "Male", [1] =3D "Female" } =

 gRace =3D { [1] =3D "Human", [2] =3D "Elf" }
 =

+gMaxHueValue =3D 2999 -- hues.mul has only 2999 values
 =

 -- the meaning of mobile.flag
 kMobileFlag_Unknown1		=3D hex2num("0x01")
@@ -268,5 +269,5 @@
 	[52]	=3D 0,
 	[53]	=3D 0,
 	[54]	=3D 0,
-	[55]	=3D 0	-- ? correct?
+	[55]	=3D 0
 }

Modified: branches/knut/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.util.lua (original)
+++ branches/knut/data/lua/lib.util.lua Wed Aug  1 22:26:16 2007
@@ -325,6 +325,24 @@
 				aw * bz + az * bw + ax * by - ay * bx
 	end
 	=

+	-- returns qw,qx,qy,qz  , input comma seperated list "x:90,y:90,z:30" =

+	function QuaternionFromString (txt) =

+		local qw,qx,qy,qz =3D Quaternion.identity()
+		local arr =3D strsplit(",",txt)
+		for k,axis_ang in pairs(arr) do
+			local axis,ang =3D unpack(strsplit(":",axis_ang))
+			local x,y,z =3D 0,0,0
+				if (axis =3D=3D "x") then x =3D 1 =

+			elseif (axis =3D=3D "y") then y =3D 1 =

+			elseif (axis =3D=3D "z") then z =3D 1 =

+			else assert(false,"illegal axis"..tostring(axis))
+			end
+			local ow,ox,oy,oz =3D Quaternion.fromAngleAxis(tonumber(ang)*gfDeg2Rad,=
x,y,z)
+			qw,qx,qy,qz =3D Quaternion.Mul(ow,ox,oy,oz,qw,qx,qy,qz) =

+		end
+		return qw,qx,qy,qz
+	end
+	=

 	function Quaternion.lookAt (x,y,z) =

 		return Quaternion.getRotation(0,0,1,x,y,z)
 	end

Modified: branches/knut/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.walking2.lua (original)
+++ branches/knut/data/lua/lib.walking2.lua Wed Aug  1 22:26:16 2007
@@ -1,10 +1,10 @@
 -- Walking Implementation for PC
 -- thx for helping to Arahil
 =

-gDebugWalkingDetailed =3D true =

+gDebugWalkingDetailed =3D true =

 =

 function printwalkdebug (...) if (gDebugWalkingDetailed) then printdebug("=
walking",unpack(arg)) end end =

-
+
 -- returns tiletype,zloc
 function GetAbsTile (xloc,yloc) =

 	return gGroundBlockLoader:GetTile(	math.floor(xloc/8), =

@@ -82,7 +82,7 @@
 			end
 			=

 			flaglist[zloc].bSurface =3D flaglist[zloc].bSurface or isSurface(t.miFl=
ags)
-			flaglist[zloc].bBridge =3D flaglist[zloc].bBridge or isBridge (t.miFlag=
s)
+			flaglist[zloc].bBridge =3D flaglist[zloc].bBridge or isBridge (t.miFlag=
s)
 			=

 			if (iHeight > 0) then
 				flaglist[zloc].bImpassable =3D flaglist[zloc].bImpassable or isImpassa=
ble(t.miFlags)
@@ -91,14 +91,14 @@
 						flaglist[zloc + j] =3D { }
 					end
 					flaglist[zloc + j].bImpassable =3D flaglist[zloc + j].bImpassable or =
isImpassable(t.miFlags)
-					flaglist[zloc + j].bSurface =3D flaglist[zloc + j].bSurface or isSurf=
ace(t.miFlags)
+					flaglist[zloc + j].bSurface =3D flaglist[zloc + j].bSurface or isSurf=
ace(t.miFlags)
 					flaglist[zloc + j].bBridge =3D flaglist[zloc + j].bBridge or isBridge=
 (t.miFlags) =

 				end
 				=

 				if (flaglist[zloc + iHeight] =3D=3D nil) then
 					flaglist[zloc + iHeight] =3D { }
 				end
-				flaglist[zloc + iHeight].bSurface =3D flaglist[zloc + iHeight].bSurfac=
e or isSurface(t.miFlags)
+				flaglist[zloc + iHeight].bSurface =3D flaglist[zloc + iHeight].bSurfac=
e or isSurface(t.miFlags)
 				flaglist[zloc + iHeight].bBridge =3D flaglist[zloc + iHeight].bBridge =
or isBridge(t.miFlags) =

 			end
 			=

@@ -109,7 +109,7 @@
 =

 -- returns an array of flags (impassable, surface, maptile)
 -- array might contain empty entries (meaning on the specific z level is n=
either something blocking nor a surface/maptile)
-function GetWalkingBlockFlags(bx, by, tx, ty)
+function GetWalkingBlockFlags(bx, by, tx, ty)
 	printwalkdebug("--GetWalkingBlockFlags() for bx=3D"..bx.."  by=3D"..by.."=
  tx=3D"..tx.."  ty=3D"..ty.."  ("..(bx*8 + tx).."/"..(by*8+ty)..")") =

 	=

 	if ( not(gTileTypeLoader) ) then return {} end
@@ -146,8 +146,10 @@
 		iStaticCount =3D 0
 	end
 	-- TODO : maybe include Seasonal translation also here!?
+	=

+	local iTileTypeID,iX,iY,iZ,iHue
 	for i =3D 0,iStaticCount-1 do
-		local iTileTypeID,iX,iY,iZ =3D gStaticBlockLoader:GetStatic(i)
+		iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
 		if (iX =3D=3D tx and iY =3D=3D ty) then
 			printwalkdebug("----new Static ID=3D" .. iTileTypeID)
 			GetWalkingBlockFlagsHelper(iZ,iTileTypeID,flaglist)
@@ -157,37 +159,50 @@
 	-- dynamics
 	printwalkdebug("---Dynamics")
 	=

-	local xloc=3Dbx*8+tx
+	local xloc=3Dbx*8+tx
 	local yloc=3Dby*8+ty
 	for k,object in pairs(gObjectList) do =

 		if (object.isdynamic) then
-			local dynamic =3D object
-			-- is this a multi?
-			if(dynamic.artid < gMulti_ID + 100) then
-				-- no mulit just a normal tile
-				if (dynamic.x =3D=3D xloc and dynamic.y =3D=3D yloc) then
-					printwalkdebug("----new dynamic ID=3D" .. dynamic.artid)
-					GetWalkingBlockFlagsHelper(dynamic.z,dynamic.artid,flaglist)
-				end
-			else
-				-- multi found, special collision handling
-				local id =3D dynamic.artid - gMulti_ID
-				local parts =3D gMultiLoader:CountMultiParts(id)
-				printwalkdebug("---Dynamics multi id=3D" .. id .. " parts=3D" .. parts)
-				for p =3D 0, parts-1 do
-					local blocknum,x,y,z,flags
-					blocknum,x,y,z,flags =3D gMultiLoader:GetMultiParts(id,p)
-					=

-					local pxloc,pyloc,pzloc
-					pxloc =3D dynamic.x + x
-					pyloc =3D dynamic.y + y
-					pzloc =3D dynamic.z + z
-					=

-					if (flags =3D=3D 1 and pxloc =3D=3D xloc and pyloc =3D=3D yloc) then
-						printwalkdebug("----new dynamic ID=3D" .. blocknum)
-						GetWalkingBlockFlagsHelper(pzloc,blocknum,flaglist)
-					end						=

-				end
+			local dynamic =3D object
+
+			-- is this a normal statictile or multi?
+			if (dynamic.artid >=3D gMulti_ID) then -- gMulti_ID + 100
+				if (dynamic.lTile) then
+					for k,v in pairs(dynamic.lTile) do
+						if ((dynamic.x+v.x) =3D=3D xloc and (dynamic.y+v.y) =3D=3D yloc) then
+							printwalkdebug("----new serverside multi tile ID=3D" .. v.artid)
+							GetWalkingBlockFlagsHelper(v.z,v.artid,flaglist)	-- todo flaglist
+				end
+					end
+				elseif gMultiLoader then
+				-- multi found, special collision handling
+				local id =3D dynamic.artid - gMulti_ID
+				local parts =3D gMultiLoader:CountMultiParts(id)
+				printwalkdebug("---Dynamics multi id=3D" .. id .. " parts=3D" .. parts)
+				for p =3D 0, parts-1 do
+					local blocknum,x,y,z,flags
+					blocknum,x,y,z,flags =3D gMultiLoader:GetMultiParts(id,p)
+					=

+					local pxloc,pyloc,pzloc
+						pxloc =3D dynamic.x + x
+						pyloc =3D dynamic.y + y
+						pzloc =3D dynamic.z + z
+					=

+					if (flags =3D=3D 1 and pxloc =3D=3D xloc and pyloc =3D=3D yloc) then
+						printwalkdebug("----new dynamic ID=3D" .. blocknum)
+						GetWalkingBlockFlagsHelper(pzloc,blocknum,flaglist)
+					end						=

+				end
+				else
+					printwalkdebug("no Multi found")
+				end
+			else
+				--elseif(dynamic.artid < gMulti_ID + 100) then
+				-- no mulit just a normal tile
+				if (dynamic.x =3D=3D xloc and dynamic.y =3D=3D yloc) then
+					printwalkdebug("----new dynamic ID=3D" .. dynamic.artid)
+					GetWalkingBlockFlagsHelper(dynamic.z,dynamic.artid,flaglist)
+				end
 			end
 		end
 	end
@@ -197,112 +212,112 @@
 end
 =

 =

--- check for free space (!impassable), char is 15 zlevels tall
+-- check for free space (!impassable), char is 15 zlevels tall
 -- if diagonalCheck is true land tiles above zloc+gMaxZ_Climb (resp. +5 fo=
r maptiles) are blocking, underneath they are ignored
--- returns true or false
-function CheckZSpace(flaglist, zloc, diagonalCheck, height)  =

+-- returns true or false
+function CheckZSpace(flaglist, zloc, diagonalCheck, height)  =

 	diagonalCheck =3D diagonalCheck or false =

 	height =3D height or 15
 	for i=3D1, height, 1 do
-		if (flaglist[zloc+i] ~=3D nil) then
-			if (diagonalCheck) then
-				if (flaglist[zloc+i].bImpassable
-					or (flaglist[zloc+i].bMaptile and (i > gMaxZ_Climb + 5)) =

-					or (flaglist[zloc+i].bSurface and (i > gMaxZ_Climb))
-				) then
-					return false =

-				end
-			elseif (flaglist[zloc+i].bImpassable or flaglist[zloc+i].bSurface) then =

-				return false
+		if (flaglist[zloc+i] ~=3D nil) then
+			if (diagonalCheck) then
+				if (flaglist[zloc+i].bImpassable
+					or (flaglist[zloc+i].bMaptile and (i > gMaxZ_Climb + 5)) =

+					or (flaglist[zloc+i].bSurface and (i > gMaxZ_Climb))
+				) then
+					return false =

+				end
+			elseif (flaglist[zloc+i].bImpassable or flaglist[zloc+i].bSurface) then =

+				return false
 			end
 		end
 	end
 	=

 	return true
 end
-
-
--- check adjacent coordinates when walking diagonally
--- OSI is not looking for a surface on those tiles, it only checks that th=
ere is nothing blocking
--- OSI takes the current z level to check for that, not the z level of the=
 target tile
--- returns true or false
-function CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
-	local bDiagonal
-	local diagonalFlagList1, diagonalFlagList2
-	printwalkdebug("------direction: "..iDir)
-	if (iDir =3D=3D 1) then --northeast (right)
-		bDiagonal =3D true
-		if (tx =3D=3D 0) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
-		end
-		=

-		if (ty =3D=3D 7) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
-		end
-							=

-	elseif (iDir =3D=3D 3) then --southeast (down)
-		bDiagonal =3D true
-		if (tx =3D=3D 0) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
-		end
-		=

-		if (ty =3D=3D 0) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
-		end
-		=

-	elseif (iDir =3D=3D 5) then --southwest (left)
-		bDiagonal =3D true
-		if (tx =3D=3D 7) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
-		end
-		=

-		if (ty =3D=3D 0) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
-		end
-		=

-	elseif (iDir =3D=3D 7) then --northwest (up)
-		bDiagonal =3D true
-		if (tx =3D=3D 7) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
-		end
-		=

-		if (ty =3D=3D 7) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
-		end
-	end
-			=

-	if (bDiagonal) then
-		printwalkdebug("------walking diagonally")
-				=

-		if (CheckZSpace(diagonalFlagList1, iStartZ, true) and CheckZSpace(diagon=
alFlagList2, iStartZ, true)) then
-			printwalkdebug("-------no obstacles on adjacent coordinates")
-			return true
-		else
-			printwalkdebug("-------adjacent tiles are not free to walk, blocking")
-			return false
-		end
-	else
-		return true
-	end
-end
-
-
+
+
+-- check adjacent coordinates when walking diagonally
+-- OSI is not looking for a surface on those tiles, it only checks that th=
ere is nothing blocking
+-- OSI takes the current z level to check for that, not the z level of the=
 target tile
+-- returns true or false
+function CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+	local bDiagonal
+	local diagonalFlagList1, diagonalFlagList2
+	printwalkdebug("------direction: "..iDir)
+	if (iDir =3D=3D 1) then --northeast (right)
+		bDiagonal =3D true
+		if (tx =3D=3D 0) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
+		end
+		=

+		if (ty =3D=3D 7) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
+		end
+							=

+	elseif (iDir =3D=3D 3) then --southeast (down)
+		bDiagonal =3D true
+		if (tx =3D=3D 0) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
+		end
+		=

+		if (ty =3D=3D 0) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
+		end
+		=

+	elseif (iDir =3D=3D 5) then --southwest (left)
+		bDiagonal =3D true
+		if (tx =3D=3D 7) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
+		end
+		=

+		if (ty =3D=3D 0) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
+		end
+		=

+	elseif (iDir =3D=3D 7) then --northwest (up)
+		bDiagonal =3D true
+		if (tx =3D=3D 7) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
+		end
+		=

+		if (ty =3D=3D 7) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
+		end
+	end
+			=

+	if (bDiagonal) then
+		printwalkdebug("------walking diagonally")
+				=

+		if (CheckZSpace(diagonalFlagList1, iStartZ, true) and CheckZSpace(diagon=
alFlagList2, iStartZ, true)) then
+			printwalkdebug("-------no obstacles on adjacent coordinates")
+			return true
+		else
+			printwalkdebug("-------adjacent tiles are not free to walk, blocking")
+			return false
+		end
+	else
+		return true
+	end
+end
+
+
 =

 -- Can walk the tile, the tile's height and if the tile's a stair
 -- (about 30 in int, or 3.0 in float (*0.1) is the height of a door)
@@ -339,20 +354,20 @@
 			printwalkdebug("-----iCur=3D" .. iCur)
 			if (i < gMaxZ_Climb or (i < (gMaxZ_Climb + 5) and (flaglist[iCur].bMapt=
ile or flaglist[iCur].bBridge))) then
 				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
-					printwalkdebug("------found Surface");
-					if (CheckZSpace(flaglist, iCur)) then
+					printwalkdebug("------found Surface");
+					if (CheckZSpace(flaglist, iCur)) then
 						printwalkdebug("------checkSpace successful")
-						=

-						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+						=

+						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
 						=

 						printwalkdebug("End GetNearestGroundLevel()")
 						printwalkdebug("----------------------------")
 						printwalkdebug()
-						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
-						if (bAdjacent) then
-							return true, iCur
-						else
-							return false, 255
+						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
+						if (bAdjacent) then
+							return true, iCur
+						else
+							return false, 255
 						end
 					end
 				end
@@ -367,18 +382,18 @@
 				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
 					printwalkdebug("------found Surface");
 					if (CheckZSpace(flaglist, iCur)) then
-						printwalkdebug("------ checkSpace successful")
-						=

-						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+						printwalkdebug("------ checkSpace successful")
+						=

+						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
 						=

 						printwalkdebug("End GetNearestGroundLevel()")
 						printwalkdebug("----------------------------")
 						printwalkdebug()
-						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
-						if (bAdjacent) then
-							return true, iCur
-						else
-							return false, 255
+						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
+						if (bAdjacent) then
+							return true, iCur
+						else
+							return false, 255
 						end
 					end
 				end

Modified: branches/knut/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/main.lua (original)
+++ branches/knut/data/lua/main.lua Wed Aug  1 22:26:16 2007
@@ -84,8 +84,13 @@
 dofile(libpath .. "gui/gui.main.lua")
 dofile(libpath .. "obj/obj.main.lua")
 dofile(libpath .. "net/net.main.lua")
-
---can be removed with gamerelease
+dofile(libpath .. "lib.corpse.lua")
+
+dofile(libpath .. "filter.art.lua")
+dofile(libpath .. "filter.granny.lua")
+dofile(libpath .. "filter.map.lua")
+
+--can be removed from release
 dofile(libpath .. "lib.meshexporter.lua")
 =

 dofile(gConfigPathFallback)
@@ -134,12 +139,13 @@
 =

 --- main function, when it returns, the program ends
 function Main ()
-	HandleCommandLine()
-	=

-	CheckUODir()
-	=

 	local luaversion =3D string.sub(_VERSION, 5, 7)
 	print("Lua version : "..luaversion)
+	=

+	HandleCommandLine()
+	=

+	CheckUODir()
+	=

 	-- if (gHuffmanCompression) then LuaHuffmanTest() end
 	-- if (false) then MyGrannyTest_PreOgre() end	-- TODO : just a test, see =
lib.models.lua
 	-- if (false) then LuaBitwiseTest() end
@@ -148,10 +154,18 @@
 	-- if (false) then ExpressionTest() end
 	-- if (false) then TestSound() end
 	-- if (false) then TestMultiLoader() end
-	-- if (false) then MeshExporter() end
-	-- TestZLib()
+	-- if (false) then TestZLib() end
+	-- if (false) then TestUniFontLoader() end
+	-- if (false) then TestUOP() end
+	=

 	=

 	gMyTicks =3D Client_GetTicks()
+	=

+	-- register pixel format constants, like PF_FLOAT16_R
+	if (OgrePixelFormatList) then
+		local mylist =3D OgrePixelFormatList()
+		for id,name in pairs(mylist) do _G[name] =3D id end
+	end
 	=

 	LoadingProfile("initializing Ogre",true)
 	gPreOgreTime =3D gLoadingProfileLastTime
@@ -159,12 +173,15 @@
 =

 	-- set global shadow settings
 	if (gEnableShadows) then
+		--OgreSetShadowTexturePixelFormat(PF_FLOAT32_R) --??
+		--OgreSetShadowTextureSize(512)
+		--OgreSetShadowTextureCasterMaterial
+		--OgreSetShadowTextureReceiverMaterial
+		--OgreSetShadowTextureSelfShadow(false)
 		OgreShadowTechnique(gShadowTechnique)
-		OgreAmbientLight(gAmbientColor.r, gAmbientColor.g, gAmbientColor.b)
-	end
-
-	-- if (true) then TestUniFontLoader() end
-	=

+		--OgreSetShadowFarDistance(100.0)
+	end
+
 	-- maybe we should check here if in offline or online mode!?
 	InitNet()
 =

@@ -178,10 +195,15 @@
 	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size
 =

 	PreLoad()
+
 	gCurrentRenderer:PreInit()
 =

 	MainMenuFinishedPreLoading()
+
+	gCurrentRenderer:Init()
+
 	StartMainMenu()
+
 	if (gStartInDebugMode) then StopMainMenu() StartDebugMenu() end
 =

 	TestGuiSystem2_Init()
@@ -201,10 +223,16 @@
 	print("##################################")
 	=

 	ExecuteMapChangeIfNeeded()
-	gCurrentRenderer:Init()
+
 	gCurrentRenderer:BlendOutLayersAbovePlayer()
-	=

+
+	-- Binds all InGame-Keys
+	BindInGameKeys()
+
 	print("Welcome to Iris")
+
+	-- stop menu music
+	SoundStopMusic()
 =

 	gInGameStarted =3D true
 end
@@ -212,11 +240,12 @@
 -- called every frame, after all timer-steppers, see Step() in lib.time.lua
 function MainStep (curticks)
 	gMyTicks =3D curticks
-	UpdateFPS(curticks)
+	UpdateStats(curticks)
 	StepTimer(curticks)
 	--TestGuiSystem2_Step()
 	=

 	NetStep()
+
 	if (gInGameStarted) then
 		gCurrentRenderer:UpdateMap()
 		gCurrentRenderer:MousePickStep()
@@ -229,6 +258,7 @@
 	else
 		StepMainMenu()
 	end
+
 	StepDebugMenu()
 	gui.Step()
 	=


Modified: branches/knut/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.login.lua (original)
+++ branches/knut/data/lua/net.login.lua Wed Aug  1 22:26:16 2007
@@ -34,6 +34,44 @@
 	MainMenuShowServerList(serverlist)
 end
 =

+-- len: 0x10C
+function ProtocolSend_SystemSpecs()
+	print("NET: Send_SystemSpecs:")
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Metrics)
+	out:PushNetUint8(hex2num("0x02"))
+	out:PushNetUint32(hex2num("0x442C637A"))
+	out:PushNetUint32(hex2num("0x00000005"))
+	out:PushNetUint32(hex2num("0x00000001"))
+	out:PushNetUint32(hex2num("0x00000A28"))
+	out:PushNetUint8(hex2num("0x02"))
+	out:PushNetUint32(hex2num("0x00000006"))
+	out:PushNetUint32(hex2num("0x0000000F"))
+	out:PushNetUint32(hex2num("0x0000095A"))
+	out:PushNetUint8(hex2num("0x02"))
+	out:PushNetUint32(hex2num("0x00000600"))
+	out:PushNetUint32(hex2num("0x00000500"))
+	out:PushNetUint32(hex2num("0x00000400"))
+	out:PushNetUint16(hex2num("0x0000"))
+	out:PushNetUint16(hex2num("0x0020")) -- 48
+	for i=3D1, 76 do
+		out:PushNetUint8(0)
+	end	-- 124
+	out:PushNetUint32(hex2num("0x10020000"))
+	out:PushNetUint32(hex2num("0x71C20000"))
+	out:PushNetUint32(hex2num("0x01080002"))
+	out:PushNetUint8(hex2num("0x06"))
+	out:PushNetUint8(hex2num("0x10"))
+	out:PushNetUint8(hex2num("0x64"))
+	out:PushNetUint8(hex2num("0x00"))
+	out:PushNetUint8(hex2num("0x65"))
+	out:PushNetUint32(hex2num("0x00750000")) -- 145
+	for i=3D1, 123 do
+		out:PushNetUint8(0)
+	end
+	out:SendPacket()
+end
+
 -- Recieve Serverredirect from LoginServer (0x8c)
 function gPacketHandler.kPacket_Server_Redirect ()
 	local input =3D GetRecvFIFO()
@@ -41,17 +79,18 @@
 	gGameServerIP =3D input:PopNetUint32()
 	gGameServerPort =3D input:PopNetUint16()
 	gGameServerAccount =3D input:PopNetUint32()
-	printdebug("login",sprintf("NET: server redirect: id=3D%i ip=3D%x port=3D=
%i AccountNr.:%x\n",
+	printdebug("login",sprintf("NET: server redirect: id=3D%i ip=3D%x port=3D=
%i AccountNr.:0x%08x\n",
 			id,gGameServerIP,gGameServerPort,gGameServerAccount))
-			=

-	--wait redirect is received
-	if ( gServerType[gServerEmulator]~=3D"RunUO" ) then
+	printdebug("login",sprintf("DEBUG IP STRINGS %s <> %s\n",NtoA(gGameServer=
IP),GetHostByName(gLoginServerIP)))
+
+	-- login & gameserver are not the same: redirect is received
+	if ((NtoA(gGameServerIP) ~=3D GetHostByName(gLoginServerIP)) or (gGameSer=
verPort ~=3D gLoginServerPort)) then
 		--disconnect from Loginserver
 		printdebug("login","NET: disconnect from loginserver")
 		NetDisconnect()
 		--connect to gameserver
 		printdebug("login","NET: connect to gameserver")
-		local res =3D NetConnectWithKey(NtoA(gGameServerIP),gGameServerPort,gSer=
verSeed)
+		local res =3D NetConnectWithKey(NtoA(gGameServerIP),gGameServerPort,gGam=
eServerAccount)
 		if (not res) then
 			FatalErrorMessage("kPacket_Server_Redirect : login server redirect fail=
ed")
 		end
@@ -110,12 +149,12 @@
 	for i =3D 0,charlist.citynumber-1 do
 		gCities[i] =3D {}
 		gCities[i].index=3Dinput:PopNetUint8()
-		gCities[i].cityname=3Dinput:PopFilledString(30)
+		gCities[i].name=3Dinput:PopFilledString(30)
 		gCities[i].terminator1=3Dinput:PopNetUint8()
 		gCities[i].tavern=3Dinput:PopFilledString(30)
 		gCities[i].terminator2=3Dinput:PopNetUint8()
 =

-		printdebug("login",sprintf("NET: Index: %i City: %s Tavern: %s\n",gCitie=
s[i].index,gCities[i].cityname,gCities[i].tavern))
+		printdebug("login",sprintf("NET: Index: %i City: %s Tavern: %s\n",gCitie=
s[i].index,gCities[i].name,gCities[i].tavern))
 	end
 	charlist.cities =3D gCities
 =

@@ -223,6 +262,79 @@
 	end
 end
 =

+-- Server requests Clientversion (NEW?)
+function gPacketHandler.kPacket_Client_Version()
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local value =3D input:PopNetUint16()
+	printdebug("login",sprintf("NET: Request Clientversion =3D %i\n",value))
+
+	--Send Client ident string
+	Send_ClientVersion(gClientVersion or "4.0.11c5 3D")
+end
+
+-- Send Packets -----------------------------------------------------------
+
+-- send login server request 0x80
+-- answered by 0xA8 kPacket_Server_List which calls MainMenuShowServerList
+function ProtocolSend_Account_Login_Request	(sName,sPassword)
+	printdebug("login",sprintf("NET: Account_Login_Request: Name: %s Password=
: %s\n",sName,sPassword))
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Account_Login_Request)
+	out:PushFilledString(sName,30)
+	out:PushFilledString(sPassword,30)
+	out:PushNetUint8(hex2num("0x5D"))
+	out:SendPacket()
+end
+
+-- send gameserverselect to loginserver : kPacket_Server_Select 0xA0
+-- answered by kPacket_Server_Redirect 0x8C
+-- which calls ProtocolSend_GameServer_PostLogin kPacket_Post_Login 0x91 =

+function ProtocolSend_GameServer_Select(iGameServerID)
+	printdebug("login",sprintf("NET: GameServer_Select: %i\n",iGameServerID))
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Server_Select)
+	out:PushNetUint16(iGameServerID)
+	out:SendPacket()
+end
+
+-- send postlogin to gameserver  kPacket_Post_Login 0x91
+-- something is wrong...runuo & wolfpack detects invalid client
+-- answered by kPacket_Features 0xB9 (gClientFeatures)  and  kPacket_Chara=
cter_List 0xA9
+function ProtocolSend_GameServer_PostLogin(sName,sPassword,iAccount)
+	printdebug("login",sprintf("NET: GameServer_PostLogin: Name: %s Password:=
 %s AccountNr.: 0x%08x\n",sName,sPassword,iAccount))
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Post_Login)
+	out:PushNetUint32(iAccount)
+	out:PushFilledString(sName,30)
+	out:PushFilledString(sPassword,30)
+	out:SendPacket()
+end
+
+-- send characterselect to gameserver
+function ProtocolSend_Character_Select(iCharacterID,iAccount)
+	printdebug("login",sprintf("NET: Character_Select: %i Name: %s Password: =
%s AccountNr.:%x\n",
+			iCharacterID,gCharacterList[iCharacterID].name,gCharacterList[iCharacte=
rID].pw,iAccount))
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Pre_Login)
+	out:PushNetUint32(hex2num("0xedededed"))
+	out:PushFilledString(gCharacterList[iCharacterID].name,30)
+	out:PushFilledString(gCharacterList[iCharacterID].pw,30)
+	out:PushNetUint32(iCharacterID)
+	out:PushNetUint32(hex2num("0xC0A83016"))	--out:PushNetUint32(gGameServerI=
P)		--TODO: check: iAccount or gGameServerIP
+	out:SendPacket()
+end
+
+-- client identification
+function Send_ClientQuery(iMode,iCharacterID)
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Client_Query)
+	out:PushNetUint32(hex2num("0xedededed"))
+	out:PushNetUint8(iMode)
+	out:PushNetUint32(iCharacterID)
+	out:SendPacket()
+end
+
 -- Submits ClientVersion to Server
 function Send_ClientVersion(sClientVersion)
 	printdebug("login",sprintf("NET: Client_Version: Client identified as %s.=
\n", sClientVersion))

Modified: branches/knut/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.other.lua (original)
+++ branches/knut/data/lua/net.other.lua Wed Aug  1 22:26:16 2007
@@ -23,7 +23,8 @@
 kPacket_Generic_SubCommand_ExtendedStats2		=3D hex2num("0x1A")
 kPacket_Generic_SubCommand_NewSpellbook			=3D hex2num("0x1B")	-- Create Ne=
w Spellbook
 kPacket_Generic_SubCommand_SpellSelected		=3D hex2num("0x1C")	-- Client ->=
 Server packet ! Doppelclick auf Spell
-kPacket_Generic_SubCommand_HouseRevisionState	=3D hex2num("0x1D")
+kPacket_Generic_SubCommand_RevisionCustomHouse	=3D hex2num("0x1D")	-- Send=
s a house Revision number for handling client multi cache.
+																	-- If revision is newer than what client has it asks for =
the new multi packets to cache it.
 kPacket_Generic_SubCommand_HouseSerial			=3D hex2num("0x1E")
 kPacket_Generic_SubCommand_Ability_Icon			=3D hex2num("0x21")	-- nodata ju=
st (bf 00 05 21)
 kPacket_Generic_SubCommand_OldDamage			=3D hex2num("0x22")	-- Done!
@@ -225,6 +226,39 @@
 		DisplayPopupMenu(popupmenu) -- see net.popup.lua
 	end
 =

+	-- enable diff files for felucca,trammel,ilshenar,malas
+	if (subcmd =3D=3D kPacket_Generic_SubCommand_EnableMapDiff) then -- 0x18
+		local mapnumbers =3D input:PopNetUint32()
+		local myEnableDiff =3D {}
+		for i =3D 0, mapnumbers-1 do
+			myEnableDiff[i] =3D {}
+			myEnableDiff[i].iNumPatchesMap 		=3D input:PopNetUint32() -- Number of =
map patches in this map
+			myEnableDiff[i].iNumPatchesStatic	=3D input:PopNetUint32() -- Number of=
 static patches in this map
+		end
+		EnableDiff(myEnableDiff) -- see lib.diff.lua
+	end
+	=

+	-- States LockInfo	-- bonded status
+	if (subcmd =3D=3D kPacket_Generic_SubCommand_ExtendedStats) then -- 0x19
+		local party_cmd =3D input:PopNetUint8()
+		if (party_cmd =3D=3D hex2num("0x00")) then
+			local party_serial =3D input:PopNetUint32()
+			local party_value  =3D input:PopNetUint8()
+			--printf("NET: States LockInfo party_cmd: 0x%02x party_serial: 0x%08x p=
arty_value: 0x%02x\n",party_cmd,party_serial,party_value)
+		end
+		if (party_cmd =3D=3D hex2num("0x02")) then
+			local party_serial =3D input:PopNetUint32()
+			local party_value  =3D input:PopNetUint8()
+			local party_lockflags  =3D input:PopNetUint8()
+			--printf("NET: States LockInfo party_cmd: 0x%02x party_serial: 0x%08x p=
arty_value: 0x%02x party_lockflags: 0x%02x\n",party_cmd,party_serial,party_=
value,party_lockflags)
+		end
+		if (party_cmd =3D=3D hex2num("0x1a")) then
+			local party_stattype  =3D input:PopNetUint8()
+			local party_lockvalue  =3D input:PopNetUint8()
+			--printf("NET: States LockInfo party_cmd: 0x%02x party_stattype: 0x%02x=
 party_lockvalue: 0x%02x\n",party_cmd,party_stattype,party_lockvalue)
+		end
+	end
+
 	-- first bit of first byte =3D spell #1, second bit of first byte =3D spe=
ll #2, first bit of second byte =3D spell #8, etc
 	-- Create Spellbook Container
 	-- matix 0xff030000
@@ -247,36 +281,24 @@
 		Open_Spellbook(spellbook)
 	end
 =

-	-- enable diff files for felucca,trammel,ilshenar,malas
-	if (subcmd =3D=3D kPacket_Generic_SubCommand_EnableMapDiff) then -- 0x18
-		local mapnumbers =3D input:PopNetUint32()
-		local myEnableDiff =3D {}
-		for i =3D 0, mapnumbers-1 do
-			myEnableDiff[i] =3D {}
-			myEnableDiff[i].iNumPatchesMap 		=3D input:PopNetUint32() -- Number of =
map patches in this map
-			myEnableDiff[i].iNumPatchesStatic	=3D input:PopNetUint32() -- Number of=
 static patches in this map
-		end
-		EnableDiff(myEnableDiff) -- see lib.diff.lua
-	end
-	=

-	-- States LockInfo	-- bonded status
-	if (subcmd =3D=3D kPacket_Generic_SubCommand_ExtendedStats) then -- 0x19
-		local party_cmd =3D input:PopNetUint8()
-		if (party_cmd =3D=3D hex2num("0x00")) then
-			local party_serial =3D input:PopNetUint32()
-			local party_value  =3D input:PopNetUint8()
-			--printf("NET: States LockInfo party_cmd: 0x%02x party_serial: 0x%08x p=
arty_value: 0x%02x\n",party_cmd,party_serial,party_value)
-		end
-		if (party_cmd =3D=3D hex2num("0x02")) then
-			local party_serial =3D input:PopNetUint32()
-			local party_value  =3D input:PopNetUint8()
-			local party_lockflags  =3D input:PopNetUint8()
-			--printf("NET: States LockInfo party_cmd: 0x%02x party_serial: 0x%08x p=
arty_value: 0x%02x party_lockflags: 0x%02x\n",party_cmd,party_serial,party_=
value,party_lockflags)
-		end
-		if (party_cmd =3D=3D hex2num("0x1a")) then
-			local party_stattype  =3D input:PopNetUint8()
-			local party_lockvalue  =3D input:PopNetUint8()
-			--printf("NET: States LockInfo party_cmd: 0x%02x party_stattype: 0x%02x=
 party_lockvalue: 0x%02x\n",party_cmd,party_stattype,party_lockvalue)
+	-- Receives a CustomHouse Serial & Revision Hash Number
+	if (subcmd =3D=3D kPacket_Generic_SubCommand_RevisionCustomHouse) then	--=
 0x1D
+		local customhouseserial =3D input:PopNetUint32()
+		local customhouserevision =3D input:PopNetUint32()
+
+		local dyn =3D gDynamics[customhouseserial]
+		-- check if houserevision exists
+		if (dyn) then
+			if (dyn.customhouserevision) then
+				-- compare new_houserevisiont with old_houserevision, if different cha=
nge to new
+				if (customhouserevision~=3Ddyn.customhouserevision) then
+					Send_CustomHouseRevision(customhouseserial)
+					print("CH: Old Custom House Revision request New")
+				end
+			else
+				Send_CustomHouseRevision(customhouseserial)
+				print("CH: Old Custom House Revision request New")
+			end
 		end
 	end
 =

@@ -542,7 +564,7 @@
 BYTE[4]	-Beheld Serial (Only if (Gump ID =3D 461 && Button ID =3D 1 && Swi=
tches Count > 0))
 ]]--
 --TODO : readout checkboxes,radiobuttons and edit text fields
-function GumpReturnMsg(playerserial, gumpserial, ret_value, params)	-- len=
 0x17
+function GumpReturnMsg(playerserial, gumpserial, ret_value, params, switch=
count, textcount)	-- len 0x17
 	local packetlen =3D 1 + 2 + 4*5 -- size for empty params
 	if (params) then
 		packetlen =3D packetlen + 4 * table.getn(params.switches)
@@ -561,13 +583,13 @@
 	=

 	=

 	if (params) then
-		out:PushNetUint32(table.getn(params.switches))	--switchcount =

+		out:PushNetUint32(table.getn(params.switches))	--switchcount
 		for k,v in pairs(params.switches) do =

 			out:PushNetUint32(v) =

 			--print("GumpReturnMsg switch:",v) =

 		end
 		=

-		out:PushNetUint32(table.getn(params.texts))	--textcount =

+		out:PushNetUint32(table.getn(params.texts))	--textcount
 		for k,v in pairs(params.texts) do =

 			local len =3D string.len(v.text)
 			out:PushNetUint16(v.id) =

@@ -576,10 +598,25 @@
 			--print("GumpReturnMsg text:",v.id,len,v.text)
 		end
 	else
-		out:PushNetUint32(0)	--switchcount =

-		out:PushNetUint32(0)	--textcount
-	end
-
+		if (switchcount and textcount) then
+			out:PushNetUint32(switchcount)	--switchcount
+			out:PushNetUint32(textcount)	--textcount
+		else
+			out:PushNetUint32(0)	--switchcount
+			out:PushNetUint32(0)	--textcount
+		end
+	end
+
+	out:SendPacket()
+end
+
+-- send combat request to server, triggers kPacket_Combat
+function Send_CombatMode(iWarMode)
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Combat)
+	out:PushNetUint8(iWarMode)
+	out:PushNetUint16(hex2num("0x0032"))
+	out:PushNetUint8(hex2num("0x00"))
 	out:SendPacket()
 end
 =

@@ -664,27 +701,47 @@
 end
 =

 -- compressed Gump
+--[[
+			EnsureCapacity( 28 + (int) m_Layout.Length + (int) m_Strings.Length );
+			m_Stream.Write( (int) m_Gump.Serial );
+			m_Stream.Write( (int) m_Gump.TypeID );
+			m_Stream.Write( (int) m_Gump.X );
+			m_Stream.Write( (int) m_Gump.Y );
+			// Note: layout seems to be null terminated on OSI, but it works either=
 ways
+			WritePacked( m_Layout );
+			m_Stream.Write( (int) m_StringCount );
+			WritePacked( m_Strings );
+			--
+		private void WritePacked( PacketWriter src )
+			m_Stream.Write( (int) ( 4 + packLength ) );
+			m_Stream.Write( (int) length );
+			m_Stream.Write( m_PackBuffer, 0, packLength );
+
+]]--
 function gPacketHandler.kPacket_Compressed_Gump ()	--0xDD
 	local input =3D GetRecvFIFO()
+	local popped_start =3D input:GetTotalPopped()
 	local id =3D input:PopNetUint8()
 	local size =3D input:PopNetUint16()
 	local newgump =3D {}
+
 	newgump.playerid =3D input:PopNetUint32()
 	newgump.dialogId =3D input:PopNetUint32()
 	newgump.x =3D input:PopNetUint32()
 	newgump.y =3D input:PopNetUint32()
-	=

+
 	newgump.Length_CompressedData =3D input:PopNetUint32() - 4
 	newgump.Length_Data =3D input:PopNetUint32()
-	=

-	print("DEBUG data",newgump.Length_CompressedData,newgump.Length_Data)
-	=

-	if (1 + 2 + 4*4 + 2*4 + newgump.Length_CompressedData > size) then =

-		printf("NET: broken kPacket_Compressed_Gump packet, compressed gumplen =
=3D 0x%08x\n",newgump.Length_CompressedData)
+
+	printdebug("net",sprintf("NET: Length_CompressedData=3D%d Length_Uncompre=
ssedData=3D%d\n",newgump.Length_CompressedData,newgump.Length_Data))
+
+	if (28 + newgump.Length_CompressedData > size) then =

+		printf("NET: BROKEN - kPacket_Compressed_Gump packet, compressed gumplen=
 =3D 0x%08x\n",newgump.Length_CompressedData)
+		print("Error: Server Sends bad COmpressed Gumpdata ! Please report.")
 		Crash()
 	end
-	=

-	-- data part
+
+	--- Data Part ---
 	local decompressed =3D CreateFIFO()
 	-- pop and decompress data into decompress fifo
 	input:PeekDecompressIntoFifo(newgump.Length_CompressedData,newgump.Length=
_Data,decompressed)
@@ -695,32 +752,39 @@
 	decompressed:Clear()
 	=

 	-- WARNING  strange -4 on compression ahead (see runuo2 source)
-	=

-	-- textlines part
+	--- Textlines Part ---
 	newgump.numTextLines =3D input:PopNetUint32()
-	newgump.Length_CompressedTextLines =3D input:PopNetUint32() - 4
-	newgump.Length_TextLines =3D input:PopNetUint32()
-	print("DEBUG text",newgump.numTextLines,newgump.Length_CompressedTextLine=
s,newgump.Length_TextLines)
-	-- pop and decompress data into decompress fifo
-	input:PeekDecompressIntoFifo(newgump.Length_CompressedTextLines,newgump.L=
ength_TextLines,decompressed)
-	-- skip compressed part (peeked)
-	input:PopRaw(newgump.Length_CompressedTextLines)
-	=

-	for k,v in pairs(newgump) do printdebug("gump",sprintf("newgump.%s =3D ",=
k),v) end
-	=

-	local totaltext =3D ""
-	newgump.textline =3D {}
-	--Index 0 because Serverside Gump Commands use this Index as textline ref=
erences
-	for i =3D 0,newgump.numTextLines-1 do
-		local textlen =3D decompressed:PopNetUint16()
-		printdebug("gump","reading text line ",i," with length ",textlen)
-		newgump.textline[i] =3D decompressed:PopUnicodeString(textlen) -- warnin=
g, data is sent as unicode, we only interpret the asci part at the moment
-		-- TODO : maybe textlen / 2 ?
-		printdebug("gump",sprintf("newgump.textline[%d](len=3D%d)=3D\n",i,textle=
n),newgump.textline[i])
-		totaltext =3D totaltext .. "\n" .. newgump.textline[i]
+
+	if (newgump.numTextLines ~=3D 0) then
+		newgump.Length_CompressedTextLines =3D input:PopNetUint32() - 4
+		newgump.Length_TextLines =3D input:PopNetUint32()
+	=

+		-- pop and decompress data into decompress fifo
+		input:PeekDecompressIntoFifo(newgump.Length_CompressedTextLines,newgump.=
Length_TextLines,decompressed)
+		-- skip compressed part (peeked)
+		input:PopRaw(newgump.Length_CompressedTextLines)
+		=

+		-- print gumpdata
+		for k,v in pairs(newgump) do printdebug("gump",sprintf("newgump.%s =3D "=
,k),v) end
+		=

+		local totaltext =3D ""
+		newgump.textline =3D {}
+		--Index 0 because Serverside Gump Commands use this Index as textline re=
ferences
+		for i =3D 0,newgump.numTextLines-1 do
+			local textlen =3D decompressed:PopNetUint16()
+			printdebug("gump","reading text line ",i," with length ",textlen)
+			newgump.textline[i] =3D decompressed:PopUnicodeString(textlen) -- warni=
ng, data is sent as unicode, we only interpret the asci part at the moment
+			-- TODO : maybe textlen / 2 ?
+			printdebug("gump",sprintf("newgump.textline[%d](len=3D%d)=3D\n",i,textl=
en),newgump.textline[i])
+			totaltext =3D totaltext .. "\n" .. newgump.textline[i]
+		end
 	end
 =

 	decompressed:Destroy()
+
+	if ( (input:Size() >=3D 4) and (input:GetTotalPopped()-popped_start < siz=
e) ) then
+		local unknownterminator=3Dinput:PopNetUint32()
+	end
 =

 	GumpParser(newgump)
 end
@@ -731,12 +795,6 @@
 dword	Serial ( if Has Spellbook )
 byte	Expansions Flag
 byte	Spell ID (if Spell ID =3D 0, this means last spell)
------
-17:26:03.933 Client -> Server: 0xBF (NewCommand::Unknown), frequ: 1, len: =
0x06
-0000: BF 06 00 00 24 83                               ->....$.
-
-17:26:06.714 Client -> Server: 0xBF (NewCommand::Unknown), frequ: 2, len: =
0x09
-0000: BF 09 00 00 1C 00 02 00 65                      ->........e
 ]]--
 --BYTE[2] unknown, always 2
 --BYTE[2] selected spell(0-indexed)+scroll offset from sub 0x1b
@@ -772,6 +830,7 @@
 		out:PushNetUint16(spellid)
 		out:SendPacket()
 	end
+-- unused new packet
 --[[
 	else
 		local out =3D GetSendFIFO()
@@ -902,6 +961,7 @@
 	end
 end =

 =

+
 --[[
 Packet ID: 0xAD
 Packet Name: Unicode/Ascii speech request

Modified: branches/knut/data/lua/net.securetrade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.securetrade.lua (original)
+++ branches/knut/data/lua/net.securetrade.lua Wed Aug  1 22:26:16 2007
@@ -105,16 +105,6 @@
 	end
 end
 =

---[[
-Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0) =
then =

-	print("rebuild all securetrades")
-	for k,mysectrade in pairs(gSecureTrades) do =

-		print("rebuild sectrade",mysectrade.id)
-		SecureTradeRebuildContainers(mysectrade)
-	end
- end end end)
-]]--	=

-
 function SecureTradeRebuildContainers (mysectrade)
 	local container_my =3D gContainer[mysectrade.myContainerID]
 	if (container_my) then SecureTradeRebuildContainerWidgets(mysectrade,cont=
ainer_my,true) end

Modified: branches/knut/data/lua/net.sound.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.sound.lua (original)
+++ branches/knut/data/lua/net.sound.lua Wed Aug  1 22:26:16 2007
@@ -9,14 +9,8 @@
 	local x =3D input:PopNetUint16()
 	local y =3D input:PopNetUint16()
 	local z =3D input:PopNetUint16()
-	=

 	printdebug("sound",sprintf("NET: kPacket_Sound: effect: %i singular: %i x=
: %i y: %i z: %i\n",effect,singular,x,y,z))
-	=

-	if (gUseSoundeffects) then
-		if (gSoundLoader) then
-			SoundPlayEffect(x,y,z * 0.1,effect)
-		end
-	end
+	SoundPlayEffect(x,y,z * 0.1,effect)
 end
 =

 -- ProtocolRecv_Play_Midi
@@ -25,9 +19,6 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local music_id =3D input:PopNetUint16()
-	printf("NET: Music id: %i music_id: %i\n",id,music_id)
-	=

-	if (gUseMusic) then
-		SoundPlayMusicById(music_id)
-	end
+	printdebug("sound",sprintf("NET: kPacket_Music: music_id: %i\n",music_id))
+	SoundPlayMusicById(music_id)
 end

Modified: branches/knut/data/lua/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.uodragdrop.lua (original)
+++ branches/knut/data/lua/net.uodragdrop.lua Wed Aug  1 22:26:16 2007
@@ -165,17 +165,21 @@
 	PrepareUODragDrop(item,widget,mat,w,h,offx,offy)
 end
 =

-function PrepareDragDynamic (dynamic) =

-	local iArtID =3D dynamic.artid + hex2num("0x4000")
-	local matname =3D GetArtMat(iArtID,dynamic.hue)
-	local w,h =3D GetArtSize(iArtID)
-	local offx,offy =3D -w/2,-h/2 =

-	-- TODO : correct offy would be : bottom of bitmask visible boundbox (NOT=
 -h !), but center looks good enough for most items for now
-	=

-	-- used fields of gDragDrop.item : 	.artid .serial .amount =

-	-- set fields of dynamic : 			.artid .serial .amount .flag  =

-	-- local t =3D GetStaticTileType(dynamic.artid)
-	PrepareUODragDrop(dynamic,nil,matname,w,h,offx,offy)
+-- SiENcE: just skip Multis here
+-- Todo: Multi support
+function PrepareDragDynamic (dynamic)
+	if dynamic.artid < gMulti_ID then
+		local iArtID =3D dynamic.artid + hex2num("0x4000")
+		local matname =3D GetArtMat(iArtID,dynamic.hue)
+		local w,h =3D GetArtSize(iArtID)
+		local offx,offy =3D -w/2,-h/2 =

+		-- TODO : correct offy would be : bottom of bitmask visible boundbox (NO=
T -h !), but center looks good enough for most items for now
+		=

+		-- used fields of gDragDrop.item : 	.artid .serial .amount =

+		-- set fields of dynamic : 			.artid .serial .amount .flag  =

+		-- local t =3D GetStaticTileType(dynamic.artid)
+		PrepareUODragDrop(dynamic,nil,matname,w,h,offx,offy)
+	end
 end
 =

 function PrepareUODragDrop (item,widget,matname,w,h,offx,offy)



From no-reply at zwischenwelt.org  Thu Aug  2 02:27:18 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 00:27:18 -0000
Subject: [Iris-commit] [IRIS] r1325 - in /trunk:
 include/SortedOverlayContainer.h include/builder.h include/luabind.h
 src/SortedOverlayContainer.cpp src/builder.cpp src/data.cpp src/gfx2D_L.cpp
 src/profile.cpp src/scripting.cpp src/spritemanager.cpp
Message-ID: <20070802002721.1A1301058006@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 02:27:17 2007
New Revision: 1325

Log:
cpp and header files from knut merged

Modified:
    trunk/include/SortedOverlayContainer.h
    trunk/include/builder.h
    trunk/include/luabind.h
    trunk/src/SortedOverlayContainer.cpp
    trunk/src/builder.cpp
    trunk/src/data.cpp
    trunk/src/gfx2D_L.cpp
    trunk/src/profile.cpp
    trunk/src/scripting.cpp
    trunk/src/spritemanager.cpp

Modified: trunk/include/SortedOverlayContainer.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/SortedOverlayContainer.h (original)
+++ trunk/include/SortedOverlayContainer.h Thu Aug  2 02:27:17 2007
@@ -25,6 +25,10 @@
 	=

 	void	SetRankFactor		(const int iRankFactor);
 	int		GetChildRank		(Ogre::OverlayElement* elem);
+	void	ChildBringToFront	(Ogre::OverlayElement* child);
+	void	ChildSendToBack		(Ogre::OverlayElement* child);
+	void	ChildInsertAfter	(Ogre::OverlayElement* child,Ogre::OverlayElement* =
other);
+	void	ChildInsertBefore	(Ogre::OverlayElement* child,Ogre::OverlayElement*=
 other);
 	=

 	/** Adds another OverlayElement to this container. */
 	virtual void addChildImpl(Ogre::OverlayElement* elem);

Modified: trunk/include/builder.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/builder.h (original)
+++ trunk/include/builder.h Thu Aug  2 02:27:17 2007
@@ -64,7 +64,7 @@
 bool	GenerateMapMaterial					(cGroundBlockLoader& oGroundBlockLoader,cRada=
rColorLoader& radarColors,const char* szMatName,const bool bBig);
 bool	GenerateArtMaterial					(cArtMapLoader&	oArtMapLoader	,const char* sz=
MatName,const int iID,const bool bPixelExact,const bool bInvertY,const bool=
 bInvertX,const bool bHasAlpha,const bool bEnableLighting,const bool bEnabl=
eDepthWrite,cHueLoader* bHueLoader,const short bHue);
 bool	GenerateTexMapMaterial				(cTexMapLoader& oTexMapLoader	,const char* =
szMatName,const int iID,const bool bHasAlpha,const bool bEnableLighting,con=
st bool bEnableDepthWrite,const bool bPixelExact,cHueLoader* bHueLoader,con=
st short bHue);
-bool	GenerateGumpMaterial				(cGumpLoader& 	oGumpLoader		,const char* szMa=
tName,const int iID,const bool bHasAlpha,cHueLoader* bHueLoader,const short=
 bHue);
+bool	GenerateGumpMaterial				(cGumpLoader& 	oGumpLoader		,const char* szMa=
tName,const int iID,const bool bHasAlpha,cHueLoader* bHueLoader,short bHue);
 bool	GenerateAnimMaterial				(cAnimLoader& oAnimLoader		,const char* szMat=
Name,const int iID,const int iAnimID,const int iFrame, int& iWidth, int& iH=
eight, int& iCenterX, int& iCenterY, int& iFrames, cHueLoader* pHueLoader, =
short iHue);
 bool	GenerateUnicodeText					(const Ogre::UTFString& sText, const Ogre::UT=
FString& sFont, Ogre::RenderOperation& RenderOp, const uint8 bRed, const ui=
nt8 bGreen, const uint8 bBlue, const uint8 bAlpha, const int iMaxWidth);
 =


Modified: trunk/include/luabind.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/luabind.h (original)
+++ trunk/include/luabind.h Thu Aug  2 02:27:17 2007
@@ -515,7 +515,7 @@
 }
 =

 // increments index : +1 if table, +4 if 4 floats
-inline Ogre::ColourValue luaSFZ_checkColour4 (lua_State *L,size_t& index) =
{ PROFILE
+inline Ogre::ColourValue luaSFZ_checkColour4 (lua_State *L,const int index=
) { PROFILE
 	if (lua_istable(L,index)) {
 		/*	void lua_rawgeti (lua_State *L, int index, int n);
 			Pushes onto the stack the value t[n], where t is the value at the given=
 valid index index.
@@ -527,11 +527,11 @@
 		lua_rawgeti(L,index,1);
 		Ogre::ColourValue res(luaL_checknumber(L,-1),luaL_checknumber(L,-2),luaL=
_checknumber(L,-3),luaL_checknumber(L,-4));
 		lua_pop(L,4); // clean stack
-		index +=3D 1;
+		//index +=3D 1;  old... should not be used anymore
 		return res;
 	} else {
 		Ogre::ColourValue res(luaL_checknumber(L,index),luaL_checknumber(L,index=
+1),luaL_checknumber(L,index+2),luaL_checknumber(L,index+3));
-		index +=3D 4;
+		//index +=3D 4;  old... should not be used anymore
 		return res;
 	}
 }

Modified: trunk/src/SortedOverlayContainer.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/SortedOverlayContainer.cpp (original)
+++ trunk/src/SortedOverlayContainer.cpp Thu Aug  2 02:27:17 2007
@@ -2,6 +2,7 @@
 #include <OgreOverlayElementFactory.h>
 #include <OgreOverlayManager.h>
 #include <OgrePrerequisites.h>
+#include <algorithm>
 =

 =

 using namespace Ogre;
@@ -44,6 +45,36 @@
 =

 void	cSortedOverlayContainer::SetRankFactor		(const int iRankFactor) {
 	miRankFactor =3D iRankFactor;
+	_notifyZOrder(mZOrder);
+}
+
+void	cSortedOverlayContainer::ChildBringToFront	(Ogre::OverlayElement* chi=
ld) {
+	mlSortedList.remove(child);
+	mlSortedList.push_back(child);
+	_notifyZOrder(mZOrder);
+}
+
+void	cSortedOverlayContainer::ChildSendToBack	(Ogre::OverlayElement* child=
) {
+	mlSortedList.remove(child);
+	mlSortedList.push_front(child);
+	_notifyZOrder(mZOrder);
+}
+
+void	cSortedOverlayContainer::ChildInsertAfter	(Ogre::OverlayElement* chil=
d,Ogre::OverlayElement* other) {
+	mlSortedList.remove(child);
+	std::list<OverlayElement*>::iterator itor =3D find(mlSortedList.begin(),m=
lSortedList.end(),other);
+	if (itor !=3D mlSortedList.end()) =

+			mlSortedList.insert(++itor,child); =

+	else	mlSortedList.push_back(child);
+	_notifyZOrder(mZOrder);
+}
+
+void	cSortedOverlayContainer::ChildInsertBefore	(Ogre::OverlayElement* chi=
ld,Ogre::OverlayElement* other) {
+	mlSortedList.remove(child);
+	std::list<OverlayElement*>::iterator itor =3D find(mlSortedList.begin(),m=
lSortedList.end(),other);
+	if (itor !=3D mlSortedList.end()) =

+			mlSortedList.insert(itor,child); =

+	else	mlSortedList.push_front(child);
 	_notifyZOrder(mZOrder);
 }
 =


Modified: trunk/src/builder.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/builder.cpp (original)
+++ trunk/src/builder.cpp Thu Aug  2 02:27:17 2007
@@ -275,7 +275,7 @@
 =

 =

 /// WARNING ! changes size to 2^n where n >=3D 4
-bool	GenerateGumpMaterial	(cGumpLoader& oGumpLoader,const char* szMatName,=
const int iID,const bool bHasAlpha,cHueLoader* pHueLoader,const short iHue)=
 { PROFILE
+bool	GenerateGumpMaterial	(cGumpLoader& oGumpLoader,const char* szMatName,=
const int iID,const bool bHasAlpha,cHueLoader* pHueLoader,short iHue) { PRO=
FILE
 	cGump *gump =3D oGumpLoader.GetGump(iID);
 	if (gump =3D=3D 0) return false;
 	int iImgW =3D gump->GetWidth();
@@ -290,9 +290,17 @@
 	short *pImgRaw =3D new short[iTexW*iTexH] ;
 	memset(pImgRaw,0,2*iTexW*iTexH);
 	if( iHue && pHueLoader ) {
-		cHueFilter Filter;
+		bool PartialHue =3D (iHue & 0x8000);
+		iHue =3D iHue & 0x7FFF;
 		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
-		gump->Decode(pImgRaw,iTexW*2,Filter,ColorTable);
+
+		if (PartialHue) {
+			cPartialHueFilter Filter;
+			gump->Decode(pImgRaw,iTexW*2,Filter,ColorTable);
+		} else {
+			cHueFilter Filter;
+			gump->Decode(pImgRaw,iTexW*2,Filter,ColorTable);
+		}
 	} else {
 		cSetHighBitFilter Filter;
 		gump->Decode(pImgRaw,iTexW*2,Filter,0);
@@ -368,8 +376,7 @@
 		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
 =

 		if (PartialHue) {
-			//cPartialHueFilter Filter;
-			cHueFilter Filter;
+			cPartialHueFilter Filter;
 			if (!anim->Decode( pImgRaw, iFrame, Filter, ColorTable )) {
 				return false;
 			}

Modified: trunk/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data.cpp (original)
+++ trunk/src/data.cpp Thu Aug  2 02:27:17 2007
@@ -844,6 +844,7 @@
 	// read out offset of letter header
 	int32 offset =3D ((int32 *)(mpFullFileBuffer))[iCode];
 	if(offset =3D=3D -1)return 0;
+	if (offset < 0)return 0;
 	// valid?
 	if(offset + sizeof(RawUniFontFileLetterHeader) < miFullFileSize)return (R=
awUniFontFileLetterHeader *)(mpFullFileBuffer + offset);
 	else return 0;

Modified: trunk/src/gfx2D_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/gfx2D_L.cpp (original)
+++ trunk/src/gfx2D_L.cpp Thu Aug  2 02:27:17 2007
@@ -38,6 +38,7 @@
 			REGISTER_METHOD(InitRROC);
 			REGISTER_METHOD(InitText);
 			REGISTER_METHOD(SetPrepareFrameStep);
+			REGISTER_METHOD(SetTransparent);
 			REGISTER_METHOD(SetVisible);
 			REGISTER_METHOD(GetVisible);
 			REGISTER_METHOD(SetMaterial);
@@ -88,6 +89,11 @@
 			REGISTER_METHOD(RenderableSkipVertices);
 			REGISTER_METHOD(RenderableSkipIndices);
 			=

+			REGISTER_METHOD(SOC_ChildBringToFront);
+			REGISTER_METHOD(SOC_ChildSendToBack);
+			REGISTER_METHOD(SOC_ChildInsertAfter);
+			REGISTER_METHOD(SOC_ChildInsertBefore);
+			=

 			// synced with include/gfx2D.h
 			cScripting* scripting =3D cScripting::GetSingletonPtr();
 			#define RegisterClassConstant(name) scripting->SetGlobal(#name,cGfx2D::=
name)
@@ -173,6 +179,13 @@
 			checkudata_alive(L)->SetVisible(lua_isboolean(L,2) ? lua_toboolean(L,2)=
 : luaL_checkint(L,2));
 			return 0;
 		}
+
+		/// for overlays
+		static int	SetTransparent		(lua_State *L) { PROFILE /*(const bool bVisib=
le); */
+			cColourClipPaneOverlay* pCCPO =3D checkudata_alive(L)->mpCCPO; =

+			if (pCCPO) pCCPO->setTransparent(lua_isboolean(L,2) ? lua_toboolean(L,2=
) : luaL_checkint(L,2));
+			return 0;
+		}
 		static int	GetVisible		(lua_State *L) { PROFILE /*(const bool bVisible);=
 */
 			lua_pushboolean(L,checkudata_alive(L)->GetVisible());
 			return 1;
@@ -248,18 +261,21 @@
 			return 0;
 		}
 		static int	SetColour		(lua_State *L) { PROFILE =

-			size_t index =3D 2;
-			checkudata_alive(L)->SetColour(luaSFZ_checkColour4(L, index));
-			return 0;
-		}
+			checkudata_alive(L)->SetColour(luaSFZ_checkColour4(L, 2));
+			return 0;
+		}
+
+		/// lt:left top , rb:right bottom
+		/// for lua :	void	SetColours	((lt:)r,g,b,a, (rt:)r,g,b,a, (lb:)r,g,b,a,=
 (rb:)r,g,b,a)
 		static int	SetColours		(lua_State *L) { PROFILE =

-			size_t index =3D 2;
-			checkudata_alive(L)->SetColours(luaSFZ_checkColour4(L,index),luaSFZ_che=
ckColour4(L,index),luaSFZ_checkColour4(L,index),luaSFZ_checkColour4(L,index=
));
-			return 0;
-		}
+			checkudata_alive(L)->SetColours(luaSFZ_checkColour4(L,2),luaSFZ_checkCo=
lour4(L,6),luaSFZ_checkColour4(L,10),luaSFZ_checkColour4(L,14));
+			return 0;
+		}
+
+		/// lt:left top , rb:right bottom
+		/// for lua :	void	SetPartColours	(partid, (lt:)r,g,b,a, (rt:)r,g,b,a, (=
lb:)r,g,b,a, (rb:)r,g,b,a)
 		static int	SetPartColours		(lua_State *L) { PROFILE =

-			size_t index =3D 3;
-			checkudata_alive(L)->SetPartColours(luaL_checkint(L, 2),luaSFZ_checkCol=
our4(L,index),luaSFZ_checkColour4(L,index),luaSFZ_checkColour4(L,index),lua=
SFZ_checkColour4(L,index));
+			checkudata_alive(L)->SetPartColours(luaL_checkint(L, 2),luaSFZ_checkCol=
our4(L,3),luaSFZ_checkColour4(L,7),luaSFZ_checkColour4(L,11),luaSFZ_checkCo=
lour4(L,15));
 			return 0;
 		}
 		static int	SetRotate			(lua_State *L) { PROFILE /*(const Ogre::Real radi=
ans); */
@@ -409,6 +425,42 @@
 		}
 		=

 		=

+		/// ***** ***** ***** ***** ***** SortedOverlayContainer
+		=

+		/// void		SOC_ChildBringToFront		(child)
+		static int		SOC_ChildBringToFront		(lua_State *L) { PROFILE
+			cSortedOverlayContainer*	pSOC =3D checkudata_alive(L)->mpSOC;
+			Ogre::OverlayElement*		pChild =3D checkudata_alive(L,2)->mpOverlayEleme=
nt;
+			if (pSOC && pChild) pSOC->ChildBringToFront(pChild);
+			return 0;
+		}
+		/// void		SOC_ChildSendToBack		(child)
+		static int		SOC_ChildSendToBack		(lua_State *L) { PROFILE
+			cSortedOverlayContainer*	pSOC =3D checkudata_alive(L)->mpSOC;
+			Ogre::OverlayElement*		pChild =3D checkudata_alive(L,2)->mpOverlayEleme=
nt;
+			if (pSOC && pChild) pSOC->ChildSendToBack(pChild);
+			return 0;
+		}
+		/// void		SOC_ChildInsertAfter		(child,other)
+		static int		SOC_ChildInsertAfter		(lua_State *L) { PROFILE
+			cSortedOverlayContainer*	pSOC =3D checkudata_alive(L)->mpSOC;
+			Ogre::OverlayElement*		pChild =3D checkudata_alive(L,2)->mpOverlayEleme=
nt;
+			Ogre::OverlayElement*		pOther =3D checkudata_alive(L,3)->mpOverlayEleme=
nt;
+			if (pSOC && pChild && pOther) pSOC->ChildInsertAfter(pChild,pOther);
+			return 0;
+		}
+		/// void		SOC_ChildInsertBefore		(child,other)
+		static int		SOC_ChildInsertBefore		(lua_State *L) { PROFILE
+			cSortedOverlayContainer*	pSOC =3D checkudata_alive(L)->mpSOC;
+			Ogre::OverlayElement*		pChild =3D checkudata_alive(L,2)->mpOverlayEleme=
nt;
+			Ogre::OverlayElement*		pOther =3D checkudata_alive(L,3)->mpOverlayEleme=
nt;
+			if (pSOC && pChild && pOther) pSOC->ChildInsertBefore(pChild,pOther);
+			return 0;
+		}
+		=

+		=

+		/// ***** ***** ***** ***** ***** rest
+		=

 		/// only for cCompassOverlay
 		static int	SetUVMid		(lua_State *L) { PROFILE
 			cCompassOverlay* pCompass =3D checkudata_alive(L)->mpCompass;

Modified: trunk/src/profile.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/profile.cpp (original)
+++ trunk/src/profile.cpp Thu Aug  2 02:27:17 2007
@@ -5,6 +5,7 @@
 #include <map>
 #include <set>
 =

+std::vector<unsigned int> gCallStackCopy;
 std::vector<unsigned int> gCallStack;
 std::vector<unsigned int> gHistory;
 bool gDoInit =3D true;
@@ -55,25 +56,26 @@
 			gHistory.reserve(1024*1024*32);
 		#endif
 		gDoInit =3D false;
-	}
-	gCallStack.push_back((unsigned int)sFile);
-	gCallStack.push_back((unsigned int)iLine);
-	gCallStack.push_back((unsigned int)sFunc);
-	#ifdef PROFILE_CALLTIME
-		gCallStack.push_back(GET_TIMESTAMP);
+	}
+	gCallStack.push_back((unsigned int)sFile);
+	gCallStack.push_back((unsigned int)iLine);
+	gCallStack.push_back((unsigned int)sFunc);
+	#ifdef PROFILE_CALLTIME
+		gCallStack.push_back(GET_TIMESTAMP);
 	#endif
 	#ifdef MEGALOGPATH
 		FILE* fp =3D fopen(MEGALOGPATH,"a");
 		int i =3D gCallStack.size()-CALLSTACK_ELEM_SIZE;
 		for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) fprintf(fp," ");
-		fprintf(fp,"START %s:%d:%s\n",(const char*) gCallStack[i],
-								(unsigned int)gCallStack[i+1],
+		fprintf(fp,"START %s:%d:%s\n",(const char*) gCallStack[i],
+								(unsigned int)gCallStack[i+1],
 								(const char*) gCallStack[i+2]);
 		fclose(fp);
 	#endif
 	#ifdef PROFILE_CALLCOUNT
 		++gmCallCountProfileMap[cCallCountProfileIndex(sFile,iLine,sFunc)];
 	#endif
+	//gCallStackCopy.assign(gCallStack.begin(),gCallStack.end()); // TODO : k=
illme, dirty hack
 }
 =

 cProfiler::~cProfiler() {
@@ -81,44 +83,47 @@
 		FILE* fp =3D fopen(MEGALOGPATH,"a");
 		int i =3D gCallStack.size()-CALLSTACK_ELEM_SIZE;
 		for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) fprintf(fp," ");
-		fprintf(fp,"END   %s:%d:%s\n",(const char*) gCallStack[i],
-									(unsigned int)gCallStack[i+1],
+		fprintf(fp,"END   %s:%d:%s\n",(const char*) gCallStack[i],
+									(unsigned int)gCallStack[i+1],
 									(const char*) gCallStack[i+2]);
 		fclose(fp);
 	#endif
-	#ifdef KEEP_HISTORY =

-		gHistory.push_back(gCallStack[0+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
-		gHistory.push_back(gCallStack[1+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
+	#ifdef KEEP_HISTORY =

+		gHistory.push_back(gCallStack[0+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
+		gHistory.push_back(gCallStack[1+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
 		gHistory.push_back(gCallStack[2+gCallStack.size()-CALLSTACK_ELEM_SIZE]);
 		#ifdef PROFILE_CALLTIME
-			gHistory.push_back(GET_TIMESTAMP - gCallStack.back());
-		#endif
-	#endif
-	gCallStack.pop_back();
-	gCallStack.pop_back();
-	gCallStack.pop_back();
-	#ifdef PROFILE_CALLTIME
-		gCallStack.pop_back();
+			gHistory.push_back(GET_TIMESTAMP - gCallStack.back());
+		#endif
+	#endif
+	gCallStack.pop_back();
+	gCallStack.pop_back();
+	gCallStack.pop_back();
+	#ifdef PROFILE_CALLTIME
+		gCallStack.pop_back();
 	#endif
 }
 =

+#define PRINTEDSTACK gCallStack
+//#define PRINTEDSTACK gCallStackCopy
+
 void		cProfiler::PrintStackTrace	() {
-	for (int i=3D0;i<gCallStack.size();i+=3DCALLSTACK_ELEM_SIZE) {
+	for (int i=3D0;i<PRINTEDSTACK.size();i+=3DCALLSTACK_ELEM_SIZE) {
 		for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) printf(" ");
-		printf("%s:%d:%s\n",(const char*) gCallStack[i],
-							(unsigned int)gCallStack[i+1],
-							(const char*) gCallStack[i+2]);
+		printf("%s:%d:%s\n",(const char*) PRINTEDSTACK[i],
+							(unsigned int)PRINTEDSTACK[i+1],
+							(const char*) PRINTEDSTACK[i+2]);
 	}
 }
 =

 void		cProfiler::PrintStackTrace	(const char *filename) {
 	FILE *f =3D fopen(filename,"a");
 	if(f){
-		for (int i=3D0;i<gCallStack.size();i+=3DCALLSTACK_ELEM_SIZE) {
+		for (int i=3D0;i<PRINTEDSTACK.size();i+=3DCALLSTACK_ELEM_SIZE) {
 			for (int j=3D0;j<i/CALLSTACK_ELEM_SIZE;++j) fprintf(f," ");
-			fprintf(f,"%s:%d:%s\n",(const char*) gCallStack[i],
-								(unsigned int)gCallStack[i+1],
-								(const char*) gCallStack[i+2]);
+			fprintf(f,"%s:%d:%s\n",(const char*) PRINTEDSTACK[i],
+								(unsigned int)PRINTEDSTACK[i+1],
+								(const char*) PRINTEDSTACK[i+2]);
 		}
 		fclose(f);
 	}

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Thu Aug  2 02:27:17 2007
@@ -1,713 +1,716 @@
-#include "prefix.h"
-#include <assert.h>
-#include <stdarg.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include "net.h"
-#include "fifo.h"
-#include "game.h"
-#include "listener.h"
-#include "scripting.h"
-#include "input.h"
-#include "robstring1.2.h"
-#include "gfx3D.h"
-#include "gfx2D.h"
-#include "widget.h"
-#include "luabind.h"
-#include "data.h"
-#include "builder.h"
-#include "shell.h"
-#include "timer.h"
-#include "ogrewrapper.h"
-#include "pathsearch.h"
-#include "bitmask.h"
-#include "camera.h"
-#include "viewport.h"
-#include "rendertexture.h"
+#include "prefix.h"
+#include <assert.h>
+#include <stdarg.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include "net.h"
+#include "fifo.h"
+#include "game.h"
+#include "listener.h"
+#include "scripting.h"
+#include "input.h"
+#include "robstring1.2.h"
+#include "gfx3D.h"
+#include "gfx2D.h"
+#include "widget.h"
+#include "luabind.h"
+#include "data.h"
+#include "builder.h"
+#include "shell.h"
+#include "timer.h"
+#include "ogrewrapper.h"
+#include "pathsearch.h"
+#include "bitmask.h"
+#include "camera.h"
+#include "viewport.h"
+#include "rendertexture.h"
 #include "sound.h"
-#include "meshshape.h"
-#include "terrain.h"
-#include "radar.h"
-#include <Ogre.h>
-#include <OgreResourceManager.h>
-#include <OgreFontManager.h>
-#include <OgreTextAreaOverlayElement.h>
-#include <OgreMeshSerializer.h>
-#include <OgreCompositorManager.h>
-#include "luaxml.h"
-#include "spritemanager.h"
-#include "ogremanualloader.h"
-
-//#define PROFILE_LUACALLCOUNT
-#ifdef PROFILE_LUACALLCOUNT
-std::map<const char*,int> gPROFILE_LUACALLCOUNT;
-struct cPROFILE_LUACALLCOUNTSetCmp {
-  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const {
-	return x.second > y.second;
-  }
-};
-#endif
-
-#ifdef WIN32
-#include <windows.h>
-#else
-#include <unistd.h>
-#endif
-
-extern "C" {
-	#include "lua.h"
-	#include "lauxlib.h"
-	#include "lualib.h"
-}
-
-void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
-void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
-void	Material_LuaRegister	(void *L);
-void	Granny_LuaRegister		(void *L);
-void	PrintLuaStackTrace		();
-void	ProfileDumpCallCount	(); ///< defined in profile.cpp, only does somet=
hing if PROFILE_CALLCOUNT is enabled
-
-void	PrintLuaStackTrace		() { PROFILE
-	printf("PrintLuaStackTrace:\n");
-	// see l_TRACEBACK() : leaves a string containing the stacktrace at the t=
op of the stack
-	std::string sMyStackTrace;
-	cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
-	printf("%s\n",sMyStackTrace.c_str());
-}
-
-void	PrintLuaStackTrace		(const char *filename) { PROFILE
-	FILE *f =3D fopen(filename,"a");
-	if(f){
-		fprintf(f,"PrintLuaStackTrace:\n");
-		// see l_TRACEBACK() : leaves a string containing the stacktrace at the =
top of the stack
-		std::string sMyStackTrace;
-		cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
-		fprintf(f,"%s\n",sMyStackTrace.c_str());
-
-		fclose(f);
-	}
-}
-
-void	printdebug	(const char *szCategory, const char *szFormat, ...) { PROF=
ILE
-	va_list ap;
-	va_start(ap,szFormat);
-	gRobStringBuffer[0] =3D 0;
-	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,szFormat,ap);
-	cScripting::GetSingletonPtr()->LuaCall("printdebug","ss",szCategory,gRobS=
tringBuffer);
-	va_end(ap);
-}
-
-// ***** ***** global functionals exported to lua ***** *****
-
-
-cScripting*	cScripting::GetSingletonPtr	(cScripting* p) {
-	static cScripting* pSingleton =3D 0;
-	if (p) pSingleton =3D p;
-	return pSingleton;
-}
-
-
-/// called from lua : string keyname
-static int l_GetNamedKey (lua_State *L) { PROFILE
-	const char *keyname =3D luaL_checkstring(L, 1);
-	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult
-	return 1;  // number of results
-}
-
-/// called from lua : int keycode
-static int l_GetKeyName (lua_State *L) { PROFILE
-	int keycode =3D luaL_checkint(L, 1);
-	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult
-	return 1;  // number of results
-}
-
-/// terminates the application
-static int l_Terminate (lua_State *L) { PROFILE
-	cShell::mbAlive =3D false;
-	return 0;
-}
-
-/// only call this once at startup
-static int l_InitOgre (lua_State *L) { PROFILE
-	lua_pushboolean(L,cOgreWrapper::GetSingleton().Init());
-	return 1;
-}
-
-static int l_GetPointerSize (lua_State *L) { PROFILE
-	lua_pushnumber(L,sizeof(void*));
-	return 1;
-}
-
-/// only call this once at startup
-static int l_Client_IsAlive (lua_State *L) { PROFILE
-	lua_pushboolean(L,cShell::mbAlive);
-	return 1;
-}
-
-/// called from lua : no params, returns mousex,mousey,4xmousewheel info...
-static int l_PollInput (lua_State *L) { PROFILE
-	lua_pushnumber(L,cInput::iMouse[0]);
-	lua_pushnumber(L,cInput::iMouse[1]);
-	lua_pushnumber(L,cInput::iMouseWheel);
-	lua_pushnumber(L,cInput::iMouseWheel_pressed);
-	lua_pushnumber(L,cInput::iMouseWheel_all_since_last_step);
-	lua_pushnumber(L,cInput::iMouseWheel_pressed_since_last_step);
-	return 6;
-}
-
-
-static int l_ProfileDumpCallCount (lua_State *L) { PROFILE
-	ProfileDumpCallCount();
-
-	#ifdef PROFILE_LUACALLCOUNT
-	printf("LuaCallCounts:\n\n");
-
-	std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSetCmp> myC=
allCountProfileSet;
-	typedef std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSet=
Cmp>::iterator tLuaCallCountProfileSetItor;
-	{ for (std::map<const char*,int>::iterator itor=3DgPROFILE_LUACALLCOUNT.b=
egin();itor !=3D gPROFILE_LUACALLCOUNT.end();++itor)
-		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
));
-	}
-	int i=3D0;
-	for (tLuaCallCountProfileSetItor itor=3DmyCallCountProfileSet.begin();ito=
r !=3D myCallCountProfileSet.end();++itor) {
-		//if (++i > 10) break;
-		printf("LuaCallCallCount %16d %s\n",(*itor).second,(*itor).first);
-	}
-	#endif
-
-	return 0;
-}
-
-/// used as errfunc for lua_pcall, adds a callstack/backtrace/list_of_call=
ed_functions to the errormessage
-/// code from errorfb from /usr/src/lua-5.0.2/src/lua/ldblib.c
-/// "_TRACEBACK" is defined as errorfb
-/// leaves a string containing the stacktrace at the top of the stack
-#define LEVELS1	12	/* size of the first part of the stack */
-#define LEVELS2	10	/* size of the second part of the stack */
-static int l_TRACEBACK (lua_State *L) { PROFILE
-  int level =3D 1;  /* skip level 0 (it's this function) */
-  int firstpart =3D 1;  /* still before eventual `...' */
-  lua_Debug ar;
-  if (lua_gettop(L) =3D=3D 0)
-	lua_pushliteral(L, "");
-  else if (!lua_isstring(L, 1)) return 1;  /* no string message */
-  else lua_pushliteral(L, "\n");
-  lua_pushliteral(L, "LuaStackTrace:\n");
-  while (lua_getstack(L, level++, &ar)) {
-	if (level > LEVELS1 && firstpart) {
-	  /* no more than `LEVELS2' more levels? */
-	  if (!lua_getstack(L, level+LEVELS2, &ar))
-		level--;  /* keep going */
-	  else {
-		lua_pushliteral(L, "\n\t...");  /* too many levels */
-		while (lua_getstack(L, level+LEVELS2, &ar))  /* find last levels */
-		  level++;
-	  }
-	  firstpart =3D 0;
-	  continue;
-	}
-	lua_pushliteral(L, "\n\t");
-	lua_getinfo(L, "Snl", &ar);
-	lua_pushfstring(L, "%s:", ar.short_src);
-	if (ar.currentline > 0)
-	  lua_pushfstring(L, "%d:", ar.currentline);
-	switch (*ar.namewhat) {
-	  case 'g':  /* global */
-	  case 'l':  /* local */
-	  case 'f':  /* field */
-	  case 'm':  /* method */
-		lua_pushfstring(L, " in function `%s'", ar.name);
-		break;
-	  default: {
-		if (*ar.what =3D=3D 'm')  /* main? */
-		  lua_pushfstring(L, " in main chunk");
-		else if (*ar.what =3D=3D 'C' || *ar.what =3D=3D 't')
-		  lua_pushliteral(L, " ?");  /* C function or tail call */
-		else
-		  lua_pushfstring(L, " in function <%s:%d>",
-							 ar.short_src, ar.linedefined);
-	  }
-	}
-	lua_concat(L, lua_gettop(L));
-  }
-  lua_concat(L, lua_gettop(L));
-  return 1;
-}
-
-
-
-static int l_Client_GetCurFPS (lua_State *L) { PROFILE
-	lua_pushnumber(L, (cTimer::miTimeSinceLastFrame > 0) ? (float(1000.0) / f=
loat(cTimer::miTimeSinceLastFrame)) : 0.0 );
-	return 1;
-}
-
-static int l_Client_GetFrameNum (lua_State *L) { PROFILE
-	lua_pushnumber(L, cTimer::miCurFrameNum );
-	return 1;
-}
-
-static int l_Client_GetTicks (lua_State *L) { PROFILE
-	lua_pushnumber(L, cShell::GetTicks());
-	return 1;
-}
-
-
-/// void OgreAddCompositor(compositor script name)
-static int l_OgreAddCompositor (lua_State *L) { PROFILE
-	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
-//	printf("pViewport=3D%08x\n",pViewport);
-	if (pViewport)
-	{
-		const char *name =3D luaL_checkstring(L,2);
-		Ogre::CompositorManager::getSingleton().addCompositor(pViewport, name);
-		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, true);
-	}
-	else
-	{
-		return false;
-	}
-	return true;
-}
-
-/// void OgreRemoveCompositor(compositor script name)
-static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
-	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
-	if (pViewport)
-	{
-		const char *name =3D luaL_checkstring(L,2);
-		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, false);
-		Ogre::CompositorManager::getSingleton().removeCompositor(pViewport, name=
);
-	}
-	else
-	{
-		return false;
-	}
-	return true;
-}
-
-/// int =3D OgreMemoryUsage(part)
-/// part in {compositor,font,gpuprogram,highlevelgpuprogram,material,mesh,=
skeleton,texture,all}
-/// returns memory usage in byte
-static int l_OgreMemoryUsage (lua_State *L) { PROFILE
-	std::string part(luaL_checkstring(L,1));
-	size_t mem =3D 0;
-
-#ifdef OGRE_VERSION_SUFFIX
-	if(part.find("compositor") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::CompositorManager::getSingleton().getM=
emoryUsage();
-	if(part.find("font") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::FontManager::getSingleton().getMemoryUsage();
-	if(part.find("gpuprogram") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::GpuProgramManager::getSingleton().getM=
emoryUsage();
-	if(part.find("highlevelgpuprogram") !=3D std::string::npos || part.find("=
all") !=3D std::string::npos)mem +=3D Ogre::HighLevelGpuProgramManager::get=
Singleton().getMemoryUsage();
-	if(part.find("material") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::MaterialManager::getSingleton().getMemoryU=
sage();
-	if(part.find("mesh") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::MeshManager::getSingleton().getMemoryUsage();
-	if(part.find("skeleton") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::SkeletonManager::getSingleton().getMemoryU=
sage();
-	if(part.find("texture") !=3D std::string::npos || part.find("all") !=3D s=
td::string::npos)mem +=3D Ogre::TextureManager::getSingleton().getMemoryUsa=
ge();
-#endif
-
-	lua_pushnumber(L, mem);
-	return 1;
-}
-
-/// bool =3D OgreMeshAvailable(ressourcename)
-static int l_OgreMeshAvailable (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-
-	try {
-		Ogre::MeshManager::getSingleton().load(name,Ogre::ResourceGroupManager::=
DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-
-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// see also OgreMaterialAvailable below
-/// bool =3D OgreMaterialNameKnown(ressourcename)
-/// returns false if name is empty string or nil
-static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE
-	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
-	if (sMatName.size() > 0) {
-		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
-		lua_pushboolean(L,!pMaterial.isNull());
-	} else {
-		lua_pushboolean(L,false);
-	}
-	return 1;
-}
-
-/// bool =3D OgreMaterialAvailable(ressourcename)
-static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
-	assert(0 && "DON'T USE ME, ALWAYS RETURNS TRUE");
-	// TODO, this code does not work, use l_OgreMaterialNameKnown  above
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-
-	try {
-		Ogre::MaterialManager::getSingleton().load(name,Ogre::ResourceGroupManag=
er::DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-
-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// bool =3D OgreTextureAvailable(ressourcename)
-static int l_OgreTextureAvailable (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-
-	try {
-		Ogre::TextureManager::getSingleton().load(name,Ogre::ResourceGroupManage=
r::DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-
-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// r,g,b =3D Uo16Color2Rgb(color)
-static int l_Uo16Color2Rgb (lua_State *L) { PROFILE
-	unsigned short color =3D luaL_checkint(L,1);
-
-	float r =3D float((color >> 10) & 0x1F)/float(0x1f);
-	float g =3D float((color >>  5) & 0x1F)/float(0x1f);
-	float b =3D float((color >>  0) & 0x1F)/float(0x1f);
-
-	lua_pushnumber(L, r);
-	lua_pushnumber(L, g);
-	lua_pushnumber(L, b);
-	return 3;
-}
-
-/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
-static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
-	std::string sTexturePath	=3D luaL_checkstring(L,1);
-	std::string sMaskPath		=3D luaL_checkstring(L,2);
-	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
-	int iHue					=3D luaL_checkint(L,4);
-
-	if (iHue =3D=3D 0 || !hueLoader) {
-		lua_pushstring(L,sTexturePath.c_str());
-		return 1;
-	}
-
-	// load image
-	Ogre::Image myImage;
-	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
-
-	// get image infos
-	Ogre::PixelFormat myFormat =3D myImage.getFormat();
-	unsigned int size =3D myImage.getSize();
-	unsigned int w =3D myImage.getWidth();
-	unsigned int h =3D myImage.getHeight();
-	unsigned int rowspan =3D myImage.getRowSpan();
-	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
-	//Ogre::uchar* dst =3D new Ogre::uchar[size];
-	Ogre::uchar* src =3D myImage.getData();
-	//Ogre::uchar* dst_start =3D dst;
-	Ogre::uchar* src_start =3D src;
-	uint8 cr,cg,cb,ca1,ca2;
-	short col;
-
-	// debug info
-	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
-	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
-
-	// hue filter
-	cHueFilter Filter;
-	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
-
-	// colorize the pixels
-	for(unsigned int y =3D 0; y < h; y++){
-		for(unsigned int x =3D 0; x < w; x++) {
-			// read out pixel in src graphic
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
-			// and hue the pixel
-			col =3D Filter( col, ColorTable );
-			// TODO ! respect mask instead of hueing the complete texture
-			// and store it in destination (ignoring the new alpha)
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
-			src +=3D pixelsize;
-			//dst +=3D pixelsize;
-		}
-		src +=3D rowspan - w*pixelsize;
-	}
-
-	// and make a texture
-	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
-	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
-	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
-
-	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
-		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
-
-	// free memory
-	//delete [] dst_start;
-
-	lua_pushstring(L,newtextname.c_str());
-	return 1;
-}
-
-/// void HueMesh(meshname, hueloader, hue)
-static int l_HueMesh (lua_State *L) { PROFILE
+#include "meshshape.h"
+#include "terrain.h"
+#include "radar.h"
+#include <Ogre.h>
+#include <OgreResourceManager.h>
+#include <OgreFontManager.h>
+#include <OgreTextAreaOverlayElement.h>
+#include <OgreMeshSerializer.h>
+#include <OgreCompositorManager.h>
+#include "luaxml.h"
+#include "spritemanager.h"
+#include "ogremanualloader.h"
+
+//#define PROFILE_LUACALLCOUNT
+#ifdef PROFILE_LUACALLCOUNT
+std::map<const char*,int> gPROFILE_LUACALLCOUNT;
+struct cPROFILE_LUACALLCOUNTSetCmp {
+  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const {
+	return x.second > y.second;
+  }
+};
+#endif
+
+#ifdef WIN32
+#include <windows.h>
+#else
+#include <unistd.h>
+#endif
+
+extern "C" {
+	#include "lua.h"
+	#include "lauxlib.h"
+	#include "lualib.h"
+}
+
+void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
+void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
+void	Material_LuaRegister	(void *L);
+void	Granny_LuaRegister		(void *L);
+void	PrintLuaStackTrace		();
+void	ProfileDumpCallCount	(); ///< defined in profile.cpp, only does somet=
hing if PROFILE_CALLCOUNT is enabled
+
+void	PrintLuaStackTrace		() { PROFILE
+	printf("PrintLuaStackTrace:\n");
+	// see l_TRACEBACK() : leaves a string containing the stacktrace at the t=
op of the stack
+	std::string sMyStackTrace;
+	cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
+	printf("%s\n",sMyStackTrace.c_str());
+}
+
+void	PrintLuaStackTrace		(const char *filename) { PROFILE
+	FILE *f =3D fopen(filename,"a");
+	if(f){
+		fprintf(f,"PrintLuaStackTrace:\n");
+		// see l_TRACEBACK() : leaves a string containing the stacktrace at the =
top of the stack
+		std::string sMyStackTrace;
+		cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
+		fprintf(f,"%s\n",sMyStackTrace.c_str());
+
+		fclose(f);
+	}
+}
+
+void	printdebug	(const char *szCategory, const char *szFormat, ...) { PROF=
ILE
+	va_list ap;
+	va_start(ap,szFormat);
+	gRobStringBuffer[0] =3D 0;
+	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,szFormat,ap);
+	cScripting::GetSingletonPtr()->LuaCall("printdebug","ss",szCategory,gRobS=
tringBuffer);
+	va_end(ap);
+}
+
+// ***** ***** global functionals exported to lua ***** *****
+
+
+cScripting*	cScripting::GetSingletonPtr	(cScripting* p) {
+	static cScripting* pSingleton =3D 0;
+	if (p) pSingleton =3D p;
+	return pSingleton;
+}
+
+
+/// called from lua : string keyname
+static int l_GetNamedKey (lua_State *L) { PROFILE
+	const char *keyname =3D luaL_checkstring(L, 1);
+	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult
+	return 1;  // number of results
+}
+
+/// called from lua : int keycode
+static int l_GetKeyName (lua_State *L) { PROFILE
+	int keycode =3D luaL_checkint(L, 1);
+	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult
+	return 1;  // number of results
+}
+
+/// terminates the application
+static int l_Terminate (lua_State *L) { PROFILE
+	cShell::mbAlive =3D false;
+	return 0;
+}
+
+/// only call this once at startup
+static int l_InitOgre (lua_State *L) { PROFILE
+	lua_pushboolean(L,cOgreWrapper::GetSingleton().Init());
+	return 1;
+}
+
+static int l_GetPointerSize (lua_State *L) { PROFILE
+	lua_pushnumber(L,sizeof(void*));
+	return 1;
+}
+
+/// only call this once at startup
+static int l_Client_IsAlive (lua_State *L) { PROFILE
+	lua_pushboolean(L,cShell::mbAlive);
+	return 1;
+}
+
+/// called from lua : no params, returns mousex,mousey,4xmousewheel info...
+static int l_PollInput (lua_State *L) { PROFILE
+	lua_pushnumber(L,cInput::iMouse[0]);
+	lua_pushnumber(L,cInput::iMouse[1]);
+	lua_pushnumber(L,cInput::iMouseWheel);
+	lua_pushnumber(L,cInput::iMouseWheel_pressed);
+	lua_pushnumber(L,cInput::iMouseWheel_all_since_last_step);
+	lua_pushnumber(L,cInput::iMouseWheel_pressed_since_last_step);
+	return 6;
+}
+
+
+static int l_ProfileDumpCallCount (lua_State *L) { PROFILE
+	ProfileDumpCallCount();
+
+	#ifdef PROFILE_LUACALLCOUNT
+	printf("LuaCallCounts:\n\n");
+
+	std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSetCmp> myC=
allCountProfileSet;
+	typedef std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSet=
Cmp>::iterator tLuaCallCountProfileSetItor;
+	{ for (std::map<const char*,int>::iterator itor=3DgPROFILE_LUACALLCOUNT.b=
egin();itor !=3D gPROFILE_LUACALLCOUNT.end();++itor)
+		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
));
+	}
+	int i=3D0;
+	for (tLuaCallCountProfileSetItor itor=3DmyCallCountProfileSet.begin();ito=
r !=3D myCallCountProfileSet.end();++itor) {
+		//if (++i > 10) break;
+		printf("LuaCallCallCount %16d %s\n",(*itor).second,(*itor).first);
+	}
+	#endif
+
+	return 0;
+}
+
+/// used as errfunc for lua_pcall, adds a callstack/backtrace/list_of_call=
ed_functions to the errormessage
+/// code from errorfb from /usr/src/lua-5.0.2/src/lua/ldblib.c
+/// "_TRACEBACK" is defined as errorfb
+/// leaves a string containing the stacktrace at the top of the stack
+#define LEVELS1	12	/* size of the first part of the stack */
+#define LEVELS2	10	/* size of the second part of the stack */
+static int l_TRACEBACK (lua_State *L) { PROFILE
+  int level =3D 1;  /* skip level 0 (it's this function) */
+  int firstpart =3D 1;  /* still before eventual `...' */
+  lua_Debug ar;
+  if (lua_gettop(L) =3D=3D 0)
+	lua_pushliteral(L, "");
+  else if (!lua_isstring(L, 1)) return 1;  /* no string message */
+  else lua_pushliteral(L, "\n");
+  lua_pushliteral(L, "LuaStackTrace:\n");
+  while (lua_getstack(L, level++, &ar)) {
+	if (level > LEVELS1 && firstpart) {
+	  /* no more than `LEVELS2' more levels? */
+	  if (!lua_getstack(L, level+LEVELS2, &ar))
+		level--;  /* keep going */
+	  else {
+		lua_pushliteral(L, "\n\t...");  /* too many levels */
+		while (lua_getstack(L, level+LEVELS2, &ar))  /* find last levels */
+		  level++;
+	  }
+	  firstpart =3D 0;
+	  continue;
+	}
+	lua_pushliteral(L, "\n\t");
+	lua_getinfo(L, "Snl", &ar);
+	lua_pushfstring(L, "%s:", ar.short_src);
+	if (ar.currentline > 0)
+	  lua_pushfstring(L, "%d:", ar.currentline);
+	switch (*ar.namewhat) {
+	  case 'g':  /* global */
+	  case 'l':  /* local */
+	  case 'f':  /* field */
+	  case 'm':  /* method */
+		lua_pushfstring(L, " in function `%s'", ar.name);
+		break;
+	  default: {
+		if (*ar.what =3D=3D 'm')  /* main? */
+		  lua_pushfstring(L, " in main chunk");
+		else if (*ar.what =3D=3D 'C' || *ar.what =3D=3D 't')
+		  lua_pushliteral(L, " ?");  /* C function or tail call */
+		else
+		  lua_pushfstring(L, " in function <%s:%d>",
+							 ar.short_src, ar.linedefined);
+	  }
+	}
+	lua_concat(L, lua_gettop(L));
+  }
+  lua_concat(L, lua_gettop(L));
+  return 1;
+}
+
+
+
+static int l_Client_GetCurFPS (lua_State *L) { PROFILE
+	lua_pushnumber(L, (cTimer::miTimeSinceLastFrame > 0) ? (float(1000.0) / f=
loat(cTimer::miTimeSinceLastFrame)) : 0.0 );
+	return 1;
+}
+
+static int l_Client_GetFrameNum (lua_State *L) { PROFILE
+	lua_pushnumber(L, cTimer::miCurFrameNum );
+	return 1;
+}
+
+static int l_Client_GetTicks (lua_State *L) { PROFILE
+	lua_pushnumber(L, cShell::GetTicks());
+	return 1;
+}
+
+
+/// void OgreAddCompositor(compositor script name)
+static int l_OgreAddCompositor (lua_State *L) { PROFILE
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+//	printf("pViewport=3D%08x\n",pViewport);
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().addCompositor(pViewport, name);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, true);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
+}
+
+/// void OgreRemoveCompositor(compositor script name)
+static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, false);
+		Ogre::CompositorManager::getSingleton().removeCompositor(pViewport, name=
);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
+}
+
+/// int =3D OgreMemoryUsage(part)
+/// part in {compositor,font,gpuprogram,highlevelgpuprogram,material,mesh,=
skeleton,texture,all}
+/// returns memory usage in byte
+static int l_OgreMemoryUsage (lua_State *L) { PROFILE
+	std::string part(luaL_checkstring(L,1));
+	size_t mem =3D 0;
+
+#ifdef OGRE_VERSION_SUFFIX
+	if(part.find("compositor") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::CompositorManager::getSingleton().getM=
emoryUsage();
+	if(part.find("font") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::FontManager::getSingleton().getMemoryUsage();
+	if(part.find("gpuprogram") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::GpuProgramManager::getSingleton().getM=
emoryUsage();
+	if(part.find("highlevelgpuprogram") !=3D std::string::npos || part.find("=
all") !=3D std::string::npos)mem +=3D Ogre::HighLevelGpuProgramManager::get=
Singleton().getMemoryUsage();
+	if(part.find("material") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::MaterialManager::getSingleton().getMemoryU=
sage();
+	if(part.find("mesh") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::MeshManager::getSingleton().getMemoryUsage();
+	if(part.find("skeleton") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::SkeletonManager::getSingleton().getMemoryU=
sage();
+	if(part.find("texture") !=3D std::string::npos || part.find("all") !=3D s=
td::string::npos)mem +=3D Ogre::TextureManager::getSingleton().getMemoryUsa=
ge();
+#endif
+
+	lua_pushnumber(L, mem);
+	return 1;
+}
+
+/// bool =3D OgreMeshAvailable(ressourcename)
+static int l_OgreMeshAvailable (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+
+	try {
+		Ogre::MeshManager::getSingleton().load(name,Ogre::ResourceGroupManager::=
DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+
+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+
+
+/// see also OgreMaterialAvailable below
+/// bool =3D OgreMaterialNameKnown(ressourcename)
+/// returns false if name is empty string or nil
+static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE
+	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
+	if (sMatName.size() > 0) {
+		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
+		lua_pushboolean(L,!pMaterial.isNull());
+	} else {
+		lua_pushboolean(L,false);
+	}
+	return 1;
+}
+
+
+/// bool =3D OgreMaterialAvailable(ressourcename)
+static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
+	assert(0 && "DON'T USE ME, ALWAYS RETURNS TRUE");
+	// TODO, this code does not work, use l_OgreMaterialNameKnown  above
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+
+	try {
+		Ogre::MaterialManager::getSingleton().load(name,Ogre::ResourceGroupManag=
er::DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+
+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+/// bool =3D OgreTextureAvailable(ressourcename)
+static int l_OgreTextureAvailable (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+
+	try {
+		Ogre::TextureManager::getSingleton().load(name,Ogre::ResourceGroupManage=
r::DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+
+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+/// r,g,b =3D Uo16Color2Rgb(color)
+static int l_Uo16Color2Rgb (lua_State *L) { PROFILE
+	unsigned short color =3D luaL_checkint(L,1);
+
+	float r =3D float((color >> 10) & 0x1F)/float(0x1f);
+	float g =3D float((color >>  5) & 0x1F)/float(0x1f);
+	float b =3D float((color >>  0) & 0x1F)/float(0x1f);
+
+	lua_pushnumber(L, r);
+	lua_pushnumber(L, g);
+	lua_pushnumber(L, b);
+	return 3;
+}
+
+/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
+static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
+	std::string sTexturePath	=3D luaL_checkstring(L,1);
+	std::string sMaskPath		=3D luaL_checkstring(L,2);
+	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
+	int iHue					=3D luaL_checkint(L,4);
+
+	if (iHue =3D=3D 0 || !hueLoader) {
+		lua_pushstring(L,sTexturePath.c_str());
+		return 1;
+	}
+
+	// load image
+	Ogre::Image myImage;
+	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
+
+	// get image infos
+	Ogre::PixelFormat myFormat =3D myImage.getFormat();
+	unsigned int size =3D myImage.getSize();
+	unsigned int w =3D myImage.getWidth();
+	unsigned int h =3D myImage.getHeight();
+	unsigned int rowspan =3D myImage.getRowSpan();
+	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
+	//Ogre::uchar* dst =3D new Ogre::uchar[size];
+	Ogre::uchar* src =3D myImage.getData();
+	//Ogre::uchar* dst_start =3D dst;
+	Ogre::uchar* src_start =3D src;
+	uint8 cr,cg,cb,ca1,ca2;
+	short col;
+
+	// debug info
+	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
+	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
+
+	// hue filter
+	cHueFilter Filter;
+	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
+
+	// colorize the pixels
+	for(unsigned int y =3D 0; y < h; y++){
+		for(unsigned int x =3D 0; x < w; x++) {
+			// read out pixel in src graphic
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
+			// and hue the pixel
+			col =3D Filter( col, ColorTable );
+			// TODO ! respect mask instead of hueing the complete texture
+			// and store it in destination (ignoring the new alpha)
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
+			src +=3D pixelsize;
+			//dst +=3D pixelsize;
+		}
+		src +=3D rowspan - w*pixelsize;
+	}
+
+	// and make a texture
+	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
+	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
+	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
+
+	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
+		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
+
+	// free memory
+	//delete [] dst_start;
+
+	lua_pushstring(L,newtextname.c_str());
+	return 1;
+}
+
+/// void HueMesh(meshname, hueloader, hue)
+static int l_HueMesh (lua_State *L) { PROFILE
 	std::string sMeshName =3D luaL_checkstring(L,1);
-	const char *meshname =3D sMeshName.c_str();
-	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
-	int hue =3D luaL_checkint(L,3);
-
-	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
-	if(hueLoader && hue && meshname){
-		try	{
+	const char *meshname =3D sMeshName.c_str();
+	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
+	int hue =3D luaL_checkint(L,3);
+
+	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
+	if(hueLoader && hue && meshname){
+		try	{
 			cHueFilter Filter;
 			cHue* pMyHue =3D hueLoader->GetHue( hue-1 );
-			if (!pMyHue) return 0;
-			short* ColorTable =3D pMyHue->GetColors();
+			if (!pMyHue) return 0;
+			short* ColorTable =3D pMyHue->GetColors();
 			if (!ColorTable) return 0;
-
-			// data seem ok, so read out the mesh
-			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+
+			// data seem ok, so read out the mesh
+			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
 			if (mesh.isNull()) return 0;
-
-			//printf("mesh=3D%s\n",mesh->getName().c_str());
-
-			// and iterate over all submeshes
-			Ogre::Mesh::SubMeshIterator sit =3D mesh->getSubMeshIterator();
-			while(sit.hasMoreElements()){
-				Ogre::SubMesh *submesh =3D sit.getNext();
-				//printf("submesh=3D%i\n",submesh);
-
+
+			//printf("mesh=3D%s\n",mesh->getName().c_str());
+
+			// and iterate over all submeshes
+			Ogre::Mesh::SubMeshIterator sit =3D mesh->getSubMeshIterator();
+			while(sit.hasMoreElements()){
+				Ogre::SubMesh *submesh =3D sit.getNext();
+				//printf("submesh=3D%i\n",submesh);
+
 				if(!submesh) continue;
-				if(!submesh->isMatInitialised())continue;
-
-				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
-
-				// create hued texture in the current material and update the current
-				Ogre::MaterialPtr mat =3D Ogre::MaterialManager::getSingleton().load(s=
ubmesh->getMaterialName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME);
-				if(mat.isNull()){
-					printf("ERROR HueMesh: material %s is null\n",submesh->getMaterialNam=
e().c_str());
-					continue;
-				}
-
-				// clone current material for hueing
-				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
-				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
-				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
+				if(!submesh->isMatInitialised())continue;
+
+				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
+
+				// create hued texture in the current material and update the current
+				Ogre::MaterialPtr mat =3D Ogre::MaterialManager::getSingleton().load(s=
ubmesh->getMaterialName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME);
+				if(mat.isNull()){
+					printf("ERROR HueMesh: material %s is null\n",submesh->getMaterialNam=
e().c_str());
+					continue;
+				}
+
+				// clone current material for hueing
+				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
+				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
+				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
 				if (mat_hue.isNull()) return 0;
-				mat->copyDetailsTo(mat_hue);
-
-				// iterate over all techniques
-				Ogre::Material::TechniqueIterator tit =3D mat->getTechniqueIterator();
-				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
-				while(tit.hasMoreElements()){
-					Ogre::Technique *tech =3D tit.getNext();
+				mat->copyDetailsTo(mat_hue);
+
+				// iterate over all techniques
+				Ogre::Material::TechniqueIterator tit =3D mat->getTechniqueIterator();
+				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
+				while(tit.hasMoreElements()){
+					Ogre::Technique *tech =3D tit.getNext();
 					Ogre::Technique *tech_hue =3D tit_hue.getNext();
-					if (!tech || !tech_hue) continue;
-
-					// iterate over all passes
-					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
-					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
-					while(pit.hasMoreElements()){
-						Ogre::Pass *pass =3D pit.getNext();
+					if (!tech || !tech_hue) continue;
+
+					// iterate over all passes
+					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
+					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
+					while(pit.hasMoreElements()){
+						Ogre::Pass *pass =3D pit.getNext();
 						Ogre::Pass *pass_hue =3D pit_hue.getNext();
-						if (!pass || !pass_hue) continue;
-
-						// iterate over all tex units
-						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
-						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
-						while(uit.hasMoreElements()){
-							Ogre::TextureUnitState *unit =3D uit.getNext();
+						if (!pass || !pass_hue) continue;
+
+						// iterate over all tex units
+						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
+						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
+						while(uit.hasMoreElements()){
+							Ogre::TextureUnitState *unit =3D uit.getNext();
 							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
-							if (!unit || !unit_hue) continue;
-
-							// current texture
-							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
+							if (!unit || !unit_hue) continue;
+
+							// current texture
+							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
 							if (tex.isNull()) continue;
-
-							// lock and read access buffer
+
+							// lock and read access buffer
 							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
-							if (b.isNull()) continue;
-							// calc size of complete texture
-							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
-							// and lock (ro)
-							const Ogre::PixelBox box =3D b->lock(area,Ogre::HardwareBuffer::HBL=
_READ_ONLY);
-
-							// size of one pixel in bytes
-							unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(box.for=
mat);
-							// texture size in bytes
-							unsigned int size =3D box.getConsecutiveSize();
-
-							char *dst =3D new char[size+1024*32]; // add a little security over=
size
-							char *src =3D static_cast<char *>(box.data);
-
-							char *dst_start =3D dst;
-							char *src_start =3D src;
-
-							uint8 cr,cg,cb,ca1,ca2;
+							if (b.isNull()) continue;
+							// calc size of complete texture
+							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
+							// and lock (ro)
+							const Ogre::PixelBox box =3D b->lock(area,Ogre::HardwareBuffer::HBL=
_READ_ONLY);
+
+							// size of one pixel in bytes
+							unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(box.for=
mat);
+							// texture size in bytes
+							unsigned int size =3D box.getConsecutiveSize();
+
+							char *dst =3D new char[size+1024*32]; // add a little security over=
size
+							char *src =3D static_cast<char *>(box.data);
+
+							char *dst_start =3D dst;
+							char *src_start =3D src;
+
+							uint8 cr,cg,cb,ca1,ca2;
 							short col;
-							int dummy =3D 0;
-
-							// colorize the pixels
-							for(unsigned int y =3D 0; y < box.getHeight(); y++){
-								for(unsigned int x =3D 0; x < box.getWidth(); x++){
-									// read out pixel in src graphic
-									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,box.format,src);
-									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
-									// and hue the pixel
-									col =3D Filter( col, ColorTable );
-									//printf("RGBA_1(%i,%i,%i,%i)\n",cr,cg,cb,ca);
-									// and store it in destination (ignoring the new alpha)
-									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,=
&col);
-									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,box.format,dst);
-									//printf("RGBA_2(%i,%i,%i,%i)\n",cr,cg,cb,ca);
-									src +=3D pixelsize;
-									dst +=3D pixelsize;
-								}
-								src +=3D box.getRowSkip();
-							}
-
-							// and make a texture
-							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
-							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
-								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-							assert(!tex_hue.isNull() && "HueMesh bug");
-							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
-
-							// release the lock
-							b->unlock();
-
-							// set the texture
+							int dummy =3D 0;
+
+							// colorize the pixels
+							for(unsigned int y =3D 0; y < box.getHeight(); y++){
+								for(unsigned int x =3D 0; x < box.getWidth(); x++){
+									// read out pixel in src graphic
+									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,box.format,src);
+									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
+									// and hue the pixel
+									col =3D Filter( col, ColorTable );
+									//printf("RGBA_1(%i,%i,%i,%i)\n",cr,cg,cb,ca);
+									// and store it in destination (ignoring the new alpha)
+									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,=
&col);
+									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,box.format,dst);
+									//printf("RGBA_2(%i,%i,%i,%i)\n",cr,cg,cb,ca);
+									src +=3D pixelsize;
+									dst +=3D pixelsize;
+								}
+								src +=3D box.getRowSkip();
+							}
+
+							// and make a texture
+							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
+							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
+								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+							assert(!tex_hue.isNull() && "HueMesh bug");
+							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
+
+							// release the lock
+							b->unlock();
+
+							// set the texture
 							unit_hue->setTextureName(tex_hue->getName());
 =

 							// free memory
-							delete [] dst_start;
-						}
-					}
-				}
-
+							delete [] dst_start;
+						}
+					}
+				}
+
 				// set new material
-				if (mat_hue.isNull()) continue;
-				submesh->setMaterialName(mat_hue->getName());
-			}
-		} catch (Ogre::FileNotFoundException e){
-			printf("ERROR file not found, so HueMesh(%s) canceled\n",meshname);
-		}
-	}
-
-	return 0;
-}
-
-/// create a lua lookup table based on the given file
-/// usage: lookup[id] =3D new_id
-static int l_CreateLookupTableFromFile (lua_State *L) { PROFILE
-	const char *filename =3D luaL_checkstring(L, 1);
-	lua_newtable(L);
-
-	cFullFileLoader f(filename);
-
-	const uint32 *buffer =3D (const uint32 *)f.mpFullFileBuffer;
-
-	for(int i =3D 0;i < f.miFullFileSize / 4; ++i){
-		lua_pushnumber(L,i); lua_rawseti(L,-2,buffer[i]);
-	}
-
-	return 1;
-}
-
-
-static int l_Client_SetSkybox (lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().SetSkybox( (lua_gettop(L) > 0 && !lua_isnil(=
L,1)) ? luaL_checkstring(L, 1) : 0 , true );
-	return 0;
-}
-
-static int l_Client_SetFog (lua_State *L) { PROFILE
-	int i=3D0;
-	int numargs=3Dlua_gettop(L);
-	int iFogMode 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checkint(L,=
 ++i) : 0;
-	Ogre::Real r 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real g 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real b 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real a 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real expDensity 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_chec=
knumber(L, ++i) : 0.001;
-	Ogre::Real linearStart 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_che=
cknumber(L, ++i) : 0.0;
-	Ogre::Real linearEnd 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_check=
number(L, ++i) : 1.0;
-	/*
-	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White,
-					Real expDensity=3D0.001, Real linearStart=3D0.0, Real linearEnd=3D1.0)
-    0=3DFOG_NONE 	No fog. Duh.
-    1=3DFOG_EXP 	Fog density increases exponentially from the camera (fog =
=3D 1/e^(distance * density)).
-    2=3DFOG_EXP2 	Fog density increases at the square of FOG_EXP, i.e. eve=
n quicker (fog =3D 1/e^(distance * density)^2).
-    3=3DFOG_LINEAR 	Fog density increases linearly between the start and e=
nd distances.
-	*/
-	Ogre::FogMode      myFogMode =3D Ogre::FOG_NONE;
-	if (iFogMode =3D=3D 1) myFogMode =3D Ogre::FOG_EXP;
-	if (iFogMode =3D=3D 2) myFogMode =3D Ogre::FOG_EXP2;
-	if (iFogMode =3D=3D 3) myFogMode =3D Ogre::FOG_LINEAR;
-	cOgreWrapper::GetSingleton().mSceneMgr->setFog(myFogMode,Ogre::ColourValu=
e(r,g,b,a),expDensity,linearStart,linearEnd);
-	return 0;
-}
-
-static int l_Client_RenderOneFrame (lua_State *L) { PROFILE
-	cGame::GetSingleton().RenderOneFrame();
-	return 0;
-}
-
-/// just do nothing for x seconds
-static int l_Client_Sleep (lua_State *L) { PROFILE
-	//TODO correct win handling
-#ifndef WIN32
-	sleep(luaL_checkint(L,1));
-#else
-	Sleep(luaL_checkint(L,1)*1000); // takes milliseconds
-#endif
-	return 0;
-}
-
-/// just do nothing for x milliseconds (1000msec =3D 1sec)
-static int l_Client_USleep (lua_State *L) { PROFILE
-	//TODO correct win handling
-#ifndef WIN32
-	usleep((uint32)luaL_checkint(L,1)*(uint32)1000L); // usleep takes MICROse=
conds, where 1000 =3D 1 MILLIsecond
-#else
-	Sleep(luaL_checkint(L,1)); // takes milliseconds
-#endif
-	return 0;
-}
-
-
-
-static int l_Client_SetAmbientLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) pSceneMgr->setAmbientLight(Ogre::ColourValue(luaL_checknum=
ber(L,1),luaL_checknumber(L,2),luaL_checknumber(L,3),luaL_checknumber(L,4))=
);
-	return 0;
-}
-
-static int l_Client_ClearLights (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) pSceneMgr->destroyAllLights();
-	return 0;
-}
-
-static int l_Client_AddPointLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+				if (mat_hue.isNull()) continue;
+				submesh->setMaterialName(mat_hue->getName());
+			}
+		} catch (Ogre::FileNotFoundException e){
+			printf("ERROR file not found, so HueMesh(%s) canceled\n",meshname);
+		}
+	}
+
+	return 0;
+}
+
+/// create a lua lookup table based on the given file
+/// usage: lookup[id] =3D new_id
+static int l_CreateLookupTableFromFile (lua_State *L) { PROFILE
+	const char *filename =3D luaL_checkstring(L, 1);
+	lua_newtable(L);
+
+	cFullFileLoader f(filename);
+
+	const uint32 *buffer =3D (const uint32 *)f.mpFullFileBuffer;
+
+	for(int i =3D 0;i < f.miFullFileSize / 4; ++i){
+		lua_pushnumber(L,i); lua_rawseti(L,-2,buffer[i]);
+	}
+
+	return 1;
+}
+
+
+static int l_Client_SetSkybox (lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().SetSkybox( (lua_gettop(L) > 0 && !lua_isnil(=
L,1)) ? luaL_checkstring(L, 1) : 0 , true );
+	return 0;
+}
+
+static int l_Client_SetFog (lua_State *L) { PROFILE
+	int i=3D0;
+	int numargs=3Dlua_gettop(L);
+	int iFogMode 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checkint(L,=
 ++i) : 0;
+	Ogre::Real r 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real g 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real b 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real a 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real expDensity 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_chec=
knumber(L, ++i) : 0.001;
+	Ogre::Real linearStart 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_che=
cknumber(L, ++i) : 0.0;
+	Ogre::Real linearEnd 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_check=
number(L, ++i) : 1.0;
+	/*
+	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White,
+					Real expDensity=3D0.001, Real linearStart=3D0.0, Real linearEnd=3D1.0)
+    0=3DFOG_NONE 	No fog. Duh.
+    1=3DFOG_EXP 	Fog density increases exponentially from the camera (fog =
=3D 1/e^(distance * density)).
+    2=3DFOG_EXP2 	Fog density increases at the square of FOG_EXP, i.e. eve=
n quicker (fog =3D 1/e^(distance * density)^2).
+    3=3DFOG_LINEAR 	Fog density increases linearly between the start and e=
nd distances.
+	*/
+	Ogre::FogMode      myFogMode =3D Ogre::FOG_NONE;
+	if (iFogMode =3D=3D 1) myFogMode =3D Ogre::FOG_EXP;
+	if (iFogMode =3D=3D 2) myFogMode =3D Ogre::FOG_EXP2;
+	if (iFogMode =3D=3D 3) myFogMode =3D Ogre::FOG_LINEAR;
+	cOgreWrapper::GetSingleton().mSceneMgr->setFog(myFogMode,Ogre::ColourValu=
e(r,g,b,a),expDensity,linearStart,linearEnd);
+	return 0;
+}
+
+static int l_Client_RenderOneFrame (lua_State *L) { PROFILE
+	cGame::GetSingleton().RenderOneFrame();
+	return 0;
+}
+
+/// just do nothing for x seconds
+static int l_Client_Sleep (lua_State *L) { PROFILE
+	//TODO correct win handling
+#ifndef WIN32
+	sleep(luaL_checkint(L,1));
+#else
+	Sleep(luaL_checkint(L,1)*1000); // takes milliseconds
+#endif
+	return 0;
+}
+
+/// just do nothing for x milliseconds (1000msec =3D 1sec)
+static int l_Client_USleep (lua_State *L) { PROFILE
+	//TODO correct win handling
+#ifndef WIN32
+	usleep((uint32)luaL_checkint(L,1)*(uint32)1000L); // usleep takes MICROse=
conds, where 1000 =3D 1 MILLIsecond
+#else
+	Sleep(luaL_checkint(L,1)); // takes milliseconds
+#endif
+	return 0;
+}
+
+
+
+static int l_Client_SetAmbientLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) pSceneMgr->setAmbientLight(Ogre::ColourValue(luaL_checknum=
ber(L,1),luaL_checknumber(L,2),luaL_checknumber(L,3),luaL_checknumber(L,4))=
);
+	return 0;
+}
+
+static int l_Client_ClearLights (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) pSceneMgr->destroyAllLights();
+	return 0;
+}
+
+static int l_Client_AddPointLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
 	if (!pSceneMgr) return 0;
-	std::string sName =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	Ogre::Light* pLight =3D pSceneMgr->createLight( sName );
-	pLight->setType( Ogre::Light::LT_POINT );
-	pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_chec=
knumber(L,3));
-	pLight->setDiffuseColour(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
-	pLight->setSpecularColour(luaL_checknumber(L,7),luaL_checknumber(L,8),lua=
L_checknumber(L,9));
-	pLight->setAttenuation(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL=
_checknumber(L,12),luaL_checknumber(L,13));
+	std::string sName =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	Ogre::Light* pLight =3D pSceneMgr->createLight( sName );
+	pLight->setType( Ogre::Light::LT_POINT );
+	pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_chec=
knumber(L,3));
+	pLight->setDiffuseColour(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
+	pLight->setSpecularColour(luaL_checknumber(L,7),luaL_checknumber(L,8),lua=
L_checknumber(L,9));
+	pLight->setAttenuation(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL=
_checknumber(L,12),luaL_checknumber(L,13));
 	pLight->setCastShadows(false);
-	lua_pushstring(L,sName.c_str());
-	return 1;
+	lua_pushstring(L,sName.c_str());
+	return 1;
 }
 =

 static int l_Client_AddDirectionalLight (lua_State *L) { PROFILE
@@ -726,416 +729,418 @@
 	if (pSceneMgr) pSceneMgr->destroyLight(luaL_checkstring(L,1));
 	return 0;
 }
-
-
-static int l_Client_GetPhysStepTime (lua_State *L) { PROFILE
-	lua_pushnumber(L,cTimer::mfPhysStepTime);
-	return 1;
-}
-
-/// saved in main directory
-static int l_Client_TakeGridScreenshot (lua_State *L) { PROFILE
-	std::string filename =3D strprintf( "%shighres_%d", "../screenshots/", cS=
hell::GetTicks() );
-	std::string ext =3D ".jpg";
-	cOgreWrapper::GetSingleton().TakeGridScreenshot(3,filename,ext,true);
-	return 0;
-}
-
-/// saved in main directory
-static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().TakeScreenshot();
-	return 0;
-}
-
-void	OgreForceCloseFullscreen ();
-
-/// shows ogre config dialog
-static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
-	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
-	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
-	bIsFullscreen =3D true; // detection fails in linux ?
-	if (bIsFullscreen) {
-		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
-		OgreForceCloseFullscreen();
-	}
-	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
-	if (bIsFullscreen) cShell::mbAlive =3D false;
-	// the application shoudl terminate after this
-	// terminates the game if changes were made
-	return 1;
-}
-
-static int l_BuildTerrainEntity_Simple (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-	int i=3D5;
-	bool bGenerateNormals=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : true;
-	std::string meshname =3D BuildTerrainEntity_Simple(
-		pGroundBlockLoader,
-		luaL_checkint(L,2),luaL_checkint(L,3),
-		luaL_checkint(L,4),luaL_checkint(L,5),bGenerateNormals);
-	if (meshname.length() =3D=3D 0) return 0;
-	lua_pushstring(L,meshname.c_str());
-	return 1;
-}
-
-static int l_BuildTerrainEntity_Shaded (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-	std::string meshname =3D BuildTerrainEntity_Shaded(
-		pGroundBlockLoader,
-		luaL_checkint(L,2),luaL_checkint(L,3),
-		luaL_checkint(L,4),luaL_checkint(L,5));
-	if (meshname.length() =3D=3D 0) return 0;
-	lua_pushstring(L,meshname.c_str());
-	return 1;
-}
-
-/// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
-/// for lua : TerrainRayPick(GroundBlockLoader,blockx,blocky,vBlockPosX,vB=
lockPosY,vBlockPosZ,rx,ry,rz,rvx,rvy,rvz)  -- mainly for mousepicking
-static int l_TerrainRayPick (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-
-	// don't use ++i or something here, the compiler might mix the order
-	Ogre::Vector3 	vBlockPos(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
-	Ogre::Vector3	vRayPos(luaL_checknumber(L,7),luaL_checknumber(L,8),luaL_ch=
ecknumber(L,9));
-	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
-
-	// feedback via lua callback TerrainRayIntersect_Hit()
-	TerrainRayIntersect(pGroundBlockLoader,luaL_checkint(L,2),luaL_checkint(L=
,3),vRayPos-vBlockPos,vRayDir);
-	return 0;
-}
-
-/// for lua : dist =3D SphereRayPick(x,y,z,rad,rx,ry,rz,rvx,rvy,rvz)  -- m=
ainly for mousepicking, dist=3Dnil if not hit
-static int l_SphereRayPick (lua_State *L) { PROFILE
-	// don't use ++i or something here, the compiler might mix the order
-	Ogre::Vector3 	vSpherePos(	luaL_checknumber(L,1),luaL_checknumber(L,2),lu=
aL_checknumber(L,3));
-	float			fSphereRad =3D luaL_checknumber(L,4);
-	Ogre::Vector3	vRayPos(	luaL_checknumber(L,5),luaL_checknumber(L,6),luaL_c=
hecknumber(L,7));
-	Ogre::Vector3	vRayDir(	luaL_checknumber(L,8),luaL_checknumber(L,9),luaL_c=
hecknumber(L,10));
-
-	std::pair<bool, Real> hit =3D Ogre::Ray(vRayPos,vRayDir).intersects(Ogre:=
:Sphere(vSpherePos,fSphereRad));
-	if (!hit.first) return 0;
-	lua_pushnumber(L,hit.second);
-	return 1;
-}
-
-
+
+
+static int l_Client_GetPhysStepTime (lua_State *L) { PROFILE
+	lua_pushnumber(L,cTimer::mfPhysStepTime);
+	return 1;
+}
+
+/// saved in main directory
+static int l_Client_TakeGridScreenshot (lua_State *L) { PROFILE
+	std::string filename =3D strprintf( "%shighres_%d", "../screenshots/", cS=
hell::GetTicks() );
+	std::string ext =3D ".jpg";
+	cOgreWrapper::GetSingleton().TakeGridScreenshot(3,filename,ext,true);
+	return 0;
+}
+
+/// saved in main directory
+static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().TakeScreenshot();
+	return 0;
+}
+
+void	OgreForceCloseFullscreen ();
+
+/// shows ogre config dialog
+static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
+	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
+	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
+	bIsFullscreen =3D true; // detection fails in linux ?
+	if (bIsFullscreen) {
+		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
+		OgreForceCloseFullscreen();
+	}
+	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
+	if (bIsFullscreen) cShell::mbAlive =3D false;
+	// the application shoudl terminate after this
+	// terminates the game if changes were made
+	return 1;
+}
+
+static int l_BuildTerrainEntity_Simple (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+	int i=3D5;
+	bool bGenerateNormals=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : true;
+	std::string meshname =3D BuildTerrainEntity_Simple(
+		pGroundBlockLoader,
+		luaL_checkint(L,2),luaL_checkint(L,3),
+		luaL_checkint(L,4),luaL_checkint(L,5),bGenerateNormals);
+	if (meshname.length() =3D=3D 0) return 0;
+	lua_pushstring(L,meshname.c_str());
+	return 1;
+}
+
+static int l_BuildTerrainEntity_Shaded (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+	std::string meshname =3D BuildTerrainEntity_Shaded(
+		pGroundBlockLoader,
+		luaL_checkint(L,2),luaL_checkint(L,3),
+		luaL_checkint(L,4),luaL_checkint(L,5));
+	if (meshname.length() =3D=3D 0) return 0;
+	lua_pushstring(L,meshname.c_str());
+	return 1;
+}
+
+/// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
+/// for lua : TerrainRayPick(GroundBlockLoader,blockx,blocky,vBlockPosX,vB=
lockPosY,vBlockPosZ,rx,ry,rz,rvx,rvy,rvz)  -- mainly for mousepicking
+static int l_TerrainRayPick (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+
+	// don't use ++i or something here, the compiler might mix the order
+	Ogre::Vector3 	vBlockPos(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
+	Ogre::Vector3	vRayPos(luaL_checknumber(L,7),luaL_checknumber(L,8),luaL_ch=
ecknumber(L,9));
+	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
+
+	// feedback via lua callback TerrainRayIntersect_Hit()
+	TerrainRayIntersect(pGroundBlockLoader,luaL_checkint(L,2),luaL_checkint(L=
,3),vRayPos-vBlockPos,vRayDir);
+	return 0;
+}
+
+/// for lua : dist =3D SphereRayPick(x,y,z,rad,rx,ry,rz,rvx,rvy,rvz)  -- m=
ainly for mousepicking, dist=3Dnil if not hit
+static int l_SphereRayPick (lua_State *L) { PROFILE
+	// don't use ++i or something here, the compiler might mix the order
+	Ogre::Vector3 	vSpherePos(	luaL_checknumber(L,1),luaL_checknumber(L,2),lu=
aL_checknumber(L,3));
+	float			fSphereRad =3D luaL_checknumber(L,4);
+	Ogre::Vector3	vRayPos(	luaL_checknumber(L,5),luaL_checknumber(L,6),luaL_c=
hecknumber(L,7));
+	Ogre::Vector3	vRayDir(	luaL_checknumber(L,8),luaL_checknumber(L,9),luaL_c=
hecknumber(L,10));
+
+	std::pair<bool, Real> hit =3D Ogre::Ray(vRayPos,vRayDir).intersects(Ogre:=
:Sphere(vSpherePos,fSphereRad));
+	if (!hit.first) return 0;
+	lua_pushnumber(L,hit.second);
+	return 1;
+}
+
+
 static int l_UnloadMeshName (lua_State *L) { PROFILE
 	const char* szMeshName =3D luaL_checkstring(L,1);
 	Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(szMeshName,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
 	if (mesh.isNull()) return 0;
 	mesh->unload();
-	UnloadMeshShape(szMeshName);
-	//Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
-	return 0;
-}
-
-static int l_CountMeshTriangles (lua_State *L) { PROFILE
-	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
-					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
-	int res =3D 0;
-	for (int i=3D0;i<pMesh->getNumSubMeshes();++i) {
-		Ogre::SubMesh *pSub =3D pMesh->getSubMesh(i);
-		if (pSub && pSub->indexData) res +=3D pSub->indexData->indexCount / 3;
-	}
-	lua_pushnumber(L,res);
-	return 1;
-}
-
-static int l_getUOPath(lua_State *L) { PROFILE
-	std::string res =3D getUOPath();
-	if (res.length() =3D=3D 0) return 0;
-	lua_pushstring(L,res.c_str());
-	return 1;
-}
-
-/// attempts to correct case-sensitivity for filepaths
-static int l_PathSearch (lua_State *L) { PROFILE
-	std::string res =3D rob_pathsearch(luaL_checkstring(L,1));
-	if (res.length() =3D=3D 0) return 0;
-	lua_pushstring(L,res.c_str());
-	return 1;
-}
-
-static int l_file_exists (lua_State *L) { PROFILE
-	std::ifstream	myFileStream(luaL_checkstring(L,1));
-	lua_pushboolean(L,myFileStream?true:false);
-	return 1;
-}
-
-static int l_file_size (lua_State *L) { PROFILE
-	std::ifstream	myFileStream(luaL_checkstring(L,1));
-	int iFileSize =3D 0;
-	if (myFileStream) {
-		myFileStream.seekg(0, std::ios::end);
-		iFileSize =3D myFileStream.tellg();
-	}
-	lua_pushnumber(L,iFileSize);
-	return 1;
-}
-
-
-// for testing bitwise ops
-static int l_GetRandomHexString 	(lua_State *L) { PROFILE lua_pushstring( =
L, strprintf("0x%08x",rand()).c_str()); return 1; }
-
-/// converts "0x1234" to a number
-static int l_Hex2Num 	(lua_State *L) { PROFILE
-	std::string hexcode =3D luaL_checkstring(L,1);
-	uint32 res =3D 0;
-	sscanf(hexcode.c_str(),"0x%x",&res);
-	lua_pushnumber(L, res);
-	return 1;
-}
-
-// bitwise operations, used for networking, packet manipulation etc
-static int l_BitwiseAND 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a & b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-static int l_BitwiseOR 		(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a | b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-
-
-static int l_BitwiseXOR 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a ^ b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-
-// bitwise operations, used for networking, packet manipulation etc
-static int l_BitwiseSHL 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a << b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-// bitwise operations, used for networking, packet manipulation etc
-static int l_BitwiseSHR 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a >> b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-
-
-static int l_TestBit 		(lua_State *L) { PROFILE lua_pushboolean(L,(uint32(=
luaL_checknumber(L,1)) & (uint32(1) << luaL_checkint(L,2))) !=3D 0); return=
 1; }
-static int l_SetBit 		(lua_State *L) { PROFILE lua_pushnumber( L,(uint32(l=
uaL_checknumber(L,1)) | (uint32(1) << luaL_checkint(L,2)))); return 1; }
-static int l_ClearBit 		(lua_State *L) { PROFILE
-	uint32 input =3D uint32(luaL_checknumber(L,1));
-	uint32 mask =3D 1L << uint32(luaL_checknumber(L,2));
-	lua_pushnumber(L,(input & mask)?(input ^ mask):(input));  // XOR =3D ^ =
=3D toggle bit... toggle only if set (&) to clear
-	return 1;
-}
-
-
-static int l_Exit		 		(lua_State *L) { PROFILE
-	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0);
-	return 0;
-}
-
-static int l_Crash		 		(lua_State *L) { PROFILE
-	DisplayErrorMessage("CRASH triggered from script, see console for info (s=
tart with commandline option -c)");
-	exit(88);
-	return 0;
-}
-
-/// triggers a segfault, for testing our segfault handlers lua stacktrace
-static int l_CrashSegFault		 		(lua_State *L) { PROFILE
-	DisplayErrorMessage("testing segfault handler...");
-	*((char*)0) =3D 0; // trigger segfault
-	return 0;
-}
-
-
-static int l_DisplayNotice	(lua_State *L) { PROFILE
-	DisplayNotice(luaL_checkstring(L,1));
-	return 0;
-}
-
-
-static int l_FatalErrorMessage	(lua_State *L) { PROFILE
-	DisplayErrorMessage(luaL_checkstring(L,1));
-	exit(77);
-	return 0;
-}
-
-
-/// for lua :   void  ExportMesh  (meshname,filename)
-static int l_ExportMesh		(lua_State *L) { PROFILE
-	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
-					// autodetect group location
-					//Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME );
-					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
-	Ogre::MeshSerializer myExporter;
-	//Ogre::Mesh* pMesh =3D pEntity->getMesh().get();
-	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2));
-	return 0;
-}
-
-/// for lua :   x,y,z,vx,vy,vz  GetMouseRay  ()
-static int l_GetMouseRay		(lua_State *L) { PROFILE
-	cOgreWrapper& ogrewrapper =3D cOgreWrapper::GetSingleton();
-	Ogre::Ray myray(	ogrewrapper.mCamera->getCameraToViewportRay(
-				Ogre::Real(cInput::iMouse[0]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualWidth()),
-				Ogre::Real(cInput::iMouse[1]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualHeight()) ));
-	lua_pushnumber(L,myray.getOrigin().x);
-	lua_pushnumber(L,myray.getOrigin().y);
-	lua_pushnumber(L,myray.getOrigin().z);
-	lua_pushnumber(L,myray.getDirection().x);
-	lua_pushnumber(L,myray.getDirection().y);
-	lua_pushnumber(L,myray.getDirection().z);
-	return 6;
-}
-
-/// for lua :   z  GetMaxZ  ()
-static int 		l_GetMaxZ		(lua_State *L) { PROFILE
-	lua_pushnumber(L,Ogre::Root::getSingleton().getRenderSystem()->getMaximum=
DepthInputValue());
-	return 1;
-}
-
-
-/// for lua :   bIsInFront,px,py  ProjectPos  (x,y,z)
-static int l_ProjectPos		(lua_State *L) { PROFILE
-	bool 		bIsInFront;
-	Ogre::Real	fX,fY;
-	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectPos(
-		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY);
-	lua_pushboolean(L,bIsInFront);
-	lua_pushnumber(L,fX);
-	lua_pushnumber(L,fY);
-	return 3;
-}
-
-/// for lua :   bIsInFront,px,py,cx,cy  ProjectSizeAndPos  (x,y,z,r)
-static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE
-	bool 		bIsInFront;
-	Ogre::Real	fX,fY,fCX,fCY;
-	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectSizeAndPos(
-		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY,luaL_checknumber(L,3),fCX,fCY);
-	lua_pushboolean(L,bIsInFront);
-	lua_pushnumber(L,fX);
-	lua_pushnumber(L,fY);
-	lua_pushnumber(L,fCX);
-	lua_pushnumber(L,fCY);
-	return 5;
-}
-
-
-
-/// for lua :   void  CreateSceneManager  (sSceneManagerName)
-static int l_CreateSceneManager		(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
-	cOgreWrapper::GetSingleton().mRoot->createSceneManager(Ogre::ST_GENERIC,l=
uaL_checkstring(L,1));
-	return 0;
-}
-
-/// for lua :   table[id=3Dtexname...]  OgreMeshTextures  (meshfile)
-static int l_OgreMeshTextures	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
-	Ogre::MeshSerializer* meshSerializer =3D new Ogre::MeshSerializer();
-	const char *szMeshName =3D luaL_checkstring(L,1);
-
-	lua_newtable(L);
-
-	//printf("open file: %s\n",szMeshName);
-	// model file
-	std::ifstream ifs;
-	ifs.open(szMeshName, std::ios_base::in | std::ios_base::binary);
-	Ogre::DataStreamPtr stream(new Ogre::FileStreamDataStream(&ifs, false));
-
-	if(ifs.is_open()){
-		//printf("create tmp mesh\n");
-		// create tmp mesh import resource
-		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion",
-			Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-
-		//printf("import\n");
-		// import
-		meshSerializer->importMesh(stream, mesh.getPointer());
-
-		if(!mesh.isNull()){
-			// iterator over submeshes
-			Ogre::Mesh::SubMeshIterator it =3D mesh->getSubMeshIterator();
-			int i =3D 1;
-			while(it.hasMoreElements()){
-				Ogre::SubMesh *submesh =3D it.getNext();
-				std::string tex =3D submesh->getMaterialName();
-				//printf("material found: %s\n",tex.c_str());
-				lua_pushstring(L,tex.c_str()); lua_rawseti(L,-2,i);
-				++i;
-			}
-		}
-
-		// remove all stuff
-		Ogre::MeshManager::getSingleton().remove("l_OgreMeshTextureMissing_conve=
rsion");
-
-		ifs.close();
-	} else {
-		printf("ERROR can't open file: %s\n",szMeshName);
-	}
-
-	delete meshSerializer;
-
-	return 1;
-}
-
-
-/// for lua :   void OgreShadowTechnique  (string techique)
-static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
-	const char *tech =3D luaL_checkstring(L,1);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-
-	if(p){
-		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
-		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
-		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
-		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
-		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
-		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
-		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
-	}
-    return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTextureSize  (int size)
-static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
-	return 0;
-}
-
-
-
-/// for lua :   void	  OgreSetShadowFarDistance	(float x)
-static int 				l_OgreSetShadowFarDistance	(lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowFarDistance(luaL_checknu=
mber(L,1));
-	return 0;
+	UnloadMeshShape(szMeshName);
+	//Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
+	return 0;
+}
+
+static int l_CountMeshTriangles (lua_State *L) { PROFILE
+	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
+					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
+	int res =3D 0;
+	for (int i=3D0;i<pMesh->getNumSubMeshes();++i) {
+		Ogre::SubMesh *pSub =3D pMesh->getSubMesh(i);
+		if (pSub && pSub->indexData) res +=3D pSub->indexData->indexCount / 3;
+	}
+	lua_pushnumber(L,res);
+	return 1;
+}
+
+static int l_getUOPath(lua_State *L) { PROFILE
+	std::string res =3D getUOPath();
+	if (res.length() =3D=3D 0) return 0;
+	lua_pushstring(L,res.c_str());
+	return 1;
+}
+
+/// attempts to correct case-sensitivity for filepaths
+static int l_PathSearch (lua_State *L) { PROFILE
+	std::string res =3D rob_pathsearch(luaL_checkstring(L,1));
+	if (res.length() =3D=3D 0) return 0;
+	lua_pushstring(L,res.c_str());
+	return 1;
+}
+
+static int l_file_exists (lua_State *L) { PROFILE
+	std::ifstream	myFileStream(luaL_checkstring(L,1));
+	lua_pushboolean(L,myFileStream?true:false);
+	return 1;
+}
+
+static int l_file_size (lua_State *L) { PROFILE
+	std::ifstream	myFileStream(luaL_checkstring(L,1));
+	int iFileSize =3D 0;
+	if (myFileStream) {
+		myFileStream.seekg(0, std::ios::end);
+		iFileSize =3D myFileStream.tellg();
+	}
+	lua_pushnumber(L,iFileSize);
+	return 1;
+}
+
+
+// for testing bitwise ops
+static int l_GetRandomHexString 	(lua_State *L) { PROFILE lua_pushstring( =
L, strprintf("0x%08x",rand()).c_str()); return 1; }
+
+/// converts "0x1234" to a number
+static int l_Hex2Num 	(lua_State *L) { PROFILE
+	std::string hexcode =3D luaL_checkstring(L,1);
+	uint32 res =3D 0;
+	sscanf(hexcode.c_str(),"0x%x",&res);
+	lua_pushnumber(L, res);
+	return 1;
+}
+
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseAND 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a & b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+static int l_BitwiseOR 		(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a | b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+
+
+static int l_BitwiseXOR 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a ^ b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseSHL 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a << b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseSHR 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a >> b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+
+
+static int l_TestBit 		(lua_State *L) { PROFILE lua_pushboolean(L,(uint32(=
luaL_checknumber(L,1)) & (uint32(1) << luaL_checkint(L,2))) !=3D 0); return=
 1; }
+static int l_SetBit 		(lua_State *L) { PROFILE lua_pushnumber( L,(uint32(l=
uaL_checknumber(L,1)) | (uint32(1) << luaL_checkint(L,2)))); return 1; }
+static int l_ClearBit 		(lua_State *L) { PROFILE
+	uint32 input =3D uint32(luaL_checknumber(L,1));
+	uint32 mask =3D 1L << uint32(luaL_checknumber(L,2));
+	lua_pushnumber(L,(input & mask)?(input ^ mask):(input));  // XOR =3D ^ =
=3D toggle bit... toggle only if set (&) to clear
+	return 1;
+}
+
+
+static int l_Exit		 		(lua_State *L) { PROFILE
+	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0);
+	return 0;
+}
+
+void MyCrash		(const char* szMessage); // see main.cpp
+
+static int l_Crash		 		(lua_State *L) { PROFILE
+	MyCrash("CRASH triggered from script, see console for info (start with co=
mmandline option -c)"); // does not return...
+	exit(88);
+	return 0;
+}
+
+/// triggers a segfault, for testing our segfault handlers lua stacktrace
+static int l_CrashSegFault		 		(lua_State *L) { PROFILE
+	DisplayErrorMessage("testing segfault handler...");
+	*((char*)0) =3D 0; // trigger segfault
+	return 0;
+}
+
+
+static int l_DisplayNotice	(lua_State *L) { PROFILE
+	DisplayNotice(luaL_checkstring(L,1));
+	return 0;
+}
+
+
+static int l_FatalErrorMessage	(lua_State *L) { PROFILE
+	DisplayErrorMessage(luaL_checkstring(L,1));
+	exit(77);
+	return 0;
+}
+
+
+/// for lua :   void  ExportMesh  (meshname,filename)
+static int l_ExportMesh		(lua_State *L) { PROFILE
+	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
+					// autodetect group location
+					//Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME );
+					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
+	Ogre::MeshSerializer myExporter;
+	//Ogre::Mesh* pMesh =3D pEntity->getMesh().get();
+	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2));
+	return 0;
+}
+
+/// for lua :   x,y,z,vx,vy,vz  GetMouseRay  ()
+static int l_GetMouseRay		(lua_State *L) { PROFILE
+	cOgreWrapper& ogrewrapper =3D cOgreWrapper::GetSingleton();
+	Ogre::Ray myray(	ogrewrapper.mCamera->getCameraToViewportRay(
+				Ogre::Real(cInput::iMouse[0]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualWidth()),
+				Ogre::Real(cInput::iMouse[1]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualHeight()) ));
+	lua_pushnumber(L,myray.getOrigin().x);
+	lua_pushnumber(L,myray.getOrigin().y);
+	lua_pushnumber(L,myray.getOrigin().z);
+	lua_pushnumber(L,myray.getDirection().x);
+	lua_pushnumber(L,myray.getDirection().y);
+	lua_pushnumber(L,myray.getDirection().z);
+	return 6;
+}
+
+/// for lua :   z  GetMaxZ  ()
+static int 		l_GetMaxZ		(lua_State *L) { PROFILE
+	lua_pushnumber(L,Ogre::Root::getSingleton().getRenderSystem()->getMaximum=
DepthInputValue());
+	return 1;
+}
+
+
+/// for lua :   bIsInFront,px,py  ProjectPos  (x,y,z)
+static int l_ProjectPos		(lua_State *L) { PROFILE
+	bool 		bIsInFront;
+	Ogre::Real	fX,fY;
+	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectPos(
+		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY);
+	lua_pushboolean(L,bIsInFront);
+	lua_pushnumber(L,fX);
+	lua_pushnumber(L,fY);
+	return 3;
+}
+
+/// for lua :   bIsInFront,px,py,cx,cy  ProjectSizeAndPos  (x,y,z,r)
+static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE
+	bool 		bIsInFront;
+	Ogre::Real	fX,fY,fCX,fCY;
+	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectSizeAndPos(
+		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY,luaL_checknumber(L,3),fCX,fCY);
+	lua_pushboolean(L,bIsInFront);
+	lua_pushnumber(L,fX);
+	lua_pushnumber(L,fY);
+	lua_pushnumber(L,fCX);
+	lua_pushnumber(L,fCY);
+	return 5;
+}
+
+
+
+/// for lua :   void  CreateSceneManager  (sSceneManagerName)
+static int l_CreateSceneManager		(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
+	cOgreWrapper::GetSingleton().mRoot->createSceneManager(Ogre::ST_GENERIC,l=
uaL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   table[id=3Dtexname...]  OgreMeshTextures  (meshfile)
+static int l_OgreMeshTextures	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
+	Ogre::MeshSerializer* meshSerializer =3D new Ogre::MeshSerializer();
+	const char *szMeshName =3D luaL_checkstring(L,1);
+
+	lua_newtable(L);
+
+	//printf("open file: %s\n",szMeshName);
+	// model file
+	std::ifstream ifs;
+	ifs.open(szMeshName, std::ios_base::in | std::ios_base::binary);
+	Ogre::DataStreamPtr stream(new Ogre::FileStreamDataStream(&ifs, false));
+
+	if(ifs.is_open()){
+		//printf("create tmp mesh\n");
+		// create tmp mesh import resource
+		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion",
+			Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+
+		//printf("import\n");
+		// import
+		meshSerializer->importMesh(stream, mesh.getPointer());
+
+		if(!mesh.isNull()){
+			// iterator over submeshes
+			Ogre::Mesh::SubMeshIterator it =3D mesh->getSubMeshIterator();
+			int i =3D 1;
+			while(it.hasMoreElements()){
+				Ogre::SubMesh *submesh =3D it.getNext();
+				std::string tex =3D submesh->getMaterialName();
+				//printf("material found: %s\n",tex.c_str());
+				lua_pushstring(L,tex.c_str()); lua_rawseti(L,-2,i);
+				++i;
+			}
+		}
+
+		// remove all stuff
+		Ogre::MeshManager::getSingleton().remove("l_OgreMeshTextureMissing_conve=
rsion");
+
+		ifs.close();
+	} else {
+		printf("ERROR can't open file: %s\n",szMeshName);
+	}
+
+	delete meshSerializer;
+
+	return 1;
+}
+
+
+/// for lua :   void OgreShadowTechnique  (string techique)
+static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
+	const char *tech =3D luaL_checkstring(L,1);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+
+	if(p){
+		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
+		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
+		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
+		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
+		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
+		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
+		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
+	}
+    return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureSize  (int size)
+static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
+	return 0;
+}
+
+
+
+/// for lua :   void	  OgreSetShadowFarDistance	(float x)
+static int 				l_OgreSetShadowFarDistance	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowFarDistance(luaL_checknu=
mber(L,1));
+	return 0;
 }
 =

 /// for lua :   void	  OgreSetShadowDirLightTextureOffset	(float x)
@@ -1154,13 +1159,13 @@
 static int 				l_OgreSetShadowTextureFadeEnd	(lua_State *L) { PROFILE
 	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureFadeEnd(luaL_chec=
knumber(L,1));
 	return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTexturePixelFormat	()
+}
+
+/// for lua :   void	  OgreSetShadowTexturePixelFormat	()
 static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE
-	Ogre::PixelFormat pf =3D (lua_gettop(L) >=3D 2 && !lua_isnil(L,1)) ? ((Og=
re::PixelFormat)luaL_checkint(L,1)) : Ogre::PF_FLOAT16_R;
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(pf);
-	return 0;
+	Ogre::PixelFormat pf =3D (lua_gettop(L) >=3D 2 && !lua_isnil(L,1)) ? ((Og=
re::PixelFormat)luaL_checkint(L,1)) : Ogre::PF_FLOAT16_R;
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(pf);
+	return 0;
 }
 =

 =

@@ -1216,502 +1221,502 @@
 	OgrePixelFormatList_REGISTER(PF_COUNT)			//
 	return 1;
 }
-
-
-/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
-static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
-	return 0;
-}
-
-/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
-static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
-	return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
-static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
-	return 0;
-}
-
-/// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
-static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
-	float r =3D luaL_checknumber(L,1);
-	float g =3D luaL_checknumber(L,2);
-	float b =3D luaL_checknumber(L,3);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-
-	if(p){
-		p->setAmbientLight( ColourValue( r, g, b ) );
-	}
-
-	return 0;
-}
-
-/// for lua :   string  GetUniqueName  ()
-static int l_GetUniqueName	(lua_State *L) { PROFILE  // TODO : move to sep=
erate file ?
-	std::string n =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	lua_pushstring(L,n.c_str());
-	return 1;
-}
-
-
-/// for lua :   number OgreLastFPS  ()
-static int l_OgreLastFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfLastFPS);return 1; }
-/// for lua :   number OgreAvgFPS  ()
-static int l_OgreAvgFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWra=
pper::GetSingleton().mfAvgFPS);return 1; }
-/// for lua :   number OgreBestFPS  ()
-static int l_OgreBestFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfBestFPS);return 1; }
-/// for lua :   number OgreWorstFPS  ()
-static int l_OgreWorstFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreW=
rapper::GetSingleton().mfWorstFPS);return 1; }
-/// for lua :   number OgreBestFrameTime  ()
-static int l_OgreBestFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miBestFrameTime);return 1; }
-/// for lua :   number OgreWorstFrameTime  ()
-static int l_OgreWorstFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,=
cOgreWrapper::GetSingleton().miWorstFrameTime);return 1; }
-/// for lua :   number OgreTriangleCount  ()
-static int l_OgreTriangleCount	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miTriangleCount);return 1; }
-/// for lua :   number OgreBatchCount  ()
-static int l_OgreBatchCount	(lua_State *L) { PROFILE lua_pushnumber(L,cOgr=
eWrapper::GetSingleton().miBatchCount);return 1; }
-
-/*
-static int l_Client_SetMouseSensitivity (lua_State *L) { PROFILE
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client) client->mfMouseSensitivity =3D luaL_checknumber(L,1);
-	return 0;
-}
-
-
-
-static int l_Client_SetInvertMouse (lua_State *L) { PROFILE
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client) client->mbInvertMouse =3D luaL_checkint(L,1) !=3D 0;
-	return 0;
-}
-
-
-static int l_Client_SetCamera (lua_State *L) { PROFILE
-	int i=3D0;
-	Real x =3D luaL_checknumber(L,++i);
-	Real y =3D luaL_checknumber(L,++i);
-	Real z =3D luaL_checknumber(L,++i);
-	Real qw =3D luaL_checknumber(L,++i);
-	Real qx =3D luaL_checknumber(L,++i);
-	Real qy =3D luaL_checknumber(L,++i);
-	Real qz =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->SetCamera(Vector3(x,y,z),Quaternion(qw,qx,qy,qz));
-	else	printf("l_Client_SetCamera called from lua on non-client");
-	return 0;
-}
-
-static int l_Client_ForceCamRot (lua_State *L) { PROFILE
-	int i=3D0;
-	Real qw =3D luaL_checknumber(L,++i);
-	Real qx =3D luaL_checknumber(L,++i);
-	Real qy =3D luaL_checknumber(L,++i);
-	Real qz =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->ForceCamRot(Quaternion(qw,qx,qy,qz));
-	else	printf("l_Client_ForceCamRot called from lua on non-client");
-	return 0;
-}
-
-static int l_Client_CameraLookAt (lua_State *L) { PROFILE
-	int i=3D0;
-	Real x =3D luaL_checknumber(L,++i);
-	Real y =3D luaL_checknumber(L,++i);
-	Real z =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->CameraLookAt(Vector3(x,y,z));
-	else	printf("l_Client_CameraLookAt called from lua on non-client");
-	return 0;
-}
-*/
-
-
-// ***** ***** utilities and error handling ***** *****
-
-
-/// also adds a traceback to the error message in case of an error
-/// nret=3D-1 for unlimited
-/// don't use directly, used by LuaCall
-int 	PCallWithErrFuncWrapper (lua_State *L,int narg, int nret) { PROFILE
-	int status;
-	int base =3D lua_gettop(L) - narg;  // function index
-	lua_pushliteral(L, "_TRACEBACK");
-	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function
-	lua_insert(L, base);  // put it under chunk and args
-	// signal(SIGINT, laction); // copyed from example, no idea what this is =
good for =3D(
-	status =3D lua_pcall(L, narg, (nret=3D=3D-1) ? LUA_MULTRET : nret, base);
-
-	//printf("pcall end, cleaning up....\n");
-
-	// signal(SIGINT, SIG_DFL); // copyed from example, no idea what this is =
good for =3D(
-	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state
-
-	//printf("pcall end\n");
-
-	return status;
-}
-
-
-void MyCrash				(const char* szMessage);
-
-void LuaErrorHandler (lua_State *L, const char *fmt, ...) { PROFILE
-	printf("LuaErrorHandler start\n");
-
-	va_list argp;
-	va_start(argp, fmt);
-	gRobStringBuffer[0] =3D 0;
-	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
-	std::string s(gRobStringBuffer);
-	va_end(argp);
-
-	std::string mystr("LuaError\n");
-	mystr +=3D s;
-
-	printf("\nLuaErrorHandler end\n");
-
-	//lua_close(L);
-	MyCrash(mystr.c_str());
-	// todo : attempt recovery in case of protected function call ?
-	// todo : deinit ogre to free mouse here
-}
-
-
-struct luaL_reg make_luaL_reg(const char *name,lua_CFunction func){
-  struct luaL_reg s;
-  s.name =3D name;
-  s.func =3D func;
-  return s;
-}
-
-void	cScripting::Listener_Notify (cListenable* pTarget,const size_t eventc=
ode,const size_t param,const size_t userdata) { PROFILE
-	switch (userdata) {
-		case kListenerBinding_Keys:
-			switch (eventcode) {
-				case cInput::kListenerEvent_KeyPress:
-					LuaCall("KeyDown","ii",(int)(param & 255),(int)((param >> 8) & 255));
-					//printf("keydown(%d)\n",param);
-				break;
-				case cInput::kListenerEvent_KeyRelease:
-					LuaCall("KeyUp","i",(int)param);
-					//printf("keyup(%d)\n",param);
-				break;
-			}
-			//printf("event=3D%d,key=3D%d\n",eventcode,param);
-		break;
-		// TODO : maybe timer ?
-	}
-}
-
-int		cScripting::GetGlobal	(const char* name) { PROFILE
-	lua_getglobal(L,name);
-	if (!lua_isnumber(L,-1)) { lua_pop(L,1); return 0; }
-	return (int)lua_tonumber(L,-1);
-}
-
-void	cScripting::SetGlobal	(const char* name,int value) { PROFILE
-	lua_pushnumber(L,value);
-	lua_setglobal(L,name);
-}
-
-/// this is the call_va function from the Book "Programming in Lua" with a=
ltered type notation :
-/// float : f
-/// int : i
-/// const char* : s
-/// returns true on successful call
-/// warning ! maybe this cannot return more than one string ! todo : check=
 doc of lua_tostring
-bool cScripting::LuaCall (const char *func, const char *sig, ...) { PROFILE
-	#ifdef PROFILE_LUACALLCOUNT
-	++gPROFILE_LUACALLCOUNT[func];
-	#endif
-
-	bool result =3D true;
-	va_list vl;
-	int narg, nres;  /* number of arguments and results */
-
-	va_start(vl, sig);
-	lua_getglobal(L, func);  /* get function */
-
-	/* push arguments */
-	narg =3D 0;
-	while (*sig) {  /* push arguments */
-		bool endwhile =3D false;
-		switch (*sig++) {
-		  case 'f':  /* float/double argument */
-			lua_pushnumber(L, va_arg(vl, double));
-			break;
-
-		  case 'i':  /* int argument (ansi printf : also use %d) */
-			lua_pushnumber(L, va_arg(vl, int));
-			break;
-
-		  case 's':  /* string argument */
-			lua_pushstring(L, va_arg(vl, char *));
-			break;
-
-		  case '>':
-			endwhile =3D true;
-			break;
-		  default:
-			LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
-			lua_pushnil(L);
-			break;
-		}
-		if (endwhile) break;
-		narg++;
-		luaL_checkstack(L, 1, "too many arguments");
-	}
-
-	/* do the call */
-	nres =3D strlen(sig);  /* number of expected results */
-	// todo : push lua error handler function here ?!?
-	if (PCallWithErrFuncWrapper(L,narg, nres) !=3D 0) {
-	//if (lua_pcall(L, narg, nres, 0) !=3D 0)  { // old
-		/* do the call */
-		LuaErrorHandler(L, "error running function `%s': %s",func, lua_tostring(=
L, -1));
-
-		/*
-		doku for lua_pcall last argument (errorfunc)
-		if 0 ... else that argument should be the index in the stack where the e=
rror handler function is located. Notice that, in such cases, the handler m=
ust be pushed in the stack before the function to be called and its argumen=
ts.
-		*/
-		result =3D false;
-	} else {
-		/* retrieve results */
-		int popamount =3D nres;
-		nres =3D -nres;  /* stack index of first result */
-		while (*sig) {  /* get results */
-			switch (*sig++) {
-
-			  case 'f':  /* float / double result */
-				if (!lua_isnumber(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl, double *) =3D 0;
-				} else {
-					*va_arg(vl, double *) =3D lua_tonumber(L, nres);
-				}
-				break;
-
-			  case 'i':  /* int result */
-				if (!lua_isnumber(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl, int *) =3D 0;
-				} else {
-					*va_arg(vl, int *) =3D (int)lua_tonumber(L, nres);
-				}
-				break;
-
-			  case 's':  /* string result */
-				if (!lua_isstring(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl,std::string*) =3D "";
-				} else {
-					*va_arg(vl,std::string*) =3D lua_tostring(L, nres); // return as std:=
:string, as pure lua pointer becomes invalid with pop
-				}
-				break;
-
-			  default:
-				LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
-				break;
-			}
-			nres++;
-		}
-		// pop stack
-		lua_pop(L, popamount);
-	}
-	va_end(vl);
-	return result;
-}
-
-
-cScripting::cScripting	() : L(0) {}
-
-void	cScripting::Init () { PROFILE
-	if (sizeof(lua_Number) <=3D 4) {
-		printf("sizeof(lua_Number) =3D %d, but must be greater than 4 (32 bit) f=
or bitwise ops\n",sizeof(lua_Number));
-		DisplayErrorMessage("ERROR : lua-precision wrong");
-		exit(43);
-	}
-
-	L =3D lua_open();
-	assert(L);
-	luaopen_base(L);
-	luaopen_table(L);
-	luaopen_io(L);
-	luaopen_string(L);
-	luaopen_math(L);
-	luaopen_debug(L);
-
-	lua_register(L,"GetNamedKey",		l_GetNamedKey);
-	lua_register(L,"GetKeyName",		l_GetKeyName);
-	lua_register(L,"PollInput",			l_PollInput);
-	lua_register(L,"Terminate",			l_Terminate);
-	lua_register(L,"InitOgre",			l_InitOgre);
-	lua_register(L,"GetPointerSize",	l_GetPointerSize);
-	lua_register(L,"Client_IsAlive",	l_Client_IsAlive);
-	//lua_register(L,"ServerSendMsgToClient",			l_ServerSendMsgToClient);
-	//lua_register(L,"ClientSendMsgToServer",			l_ClientSendMsgToServer);
-	//lua_register(L,"SoundPlayAmbient",				l_SoundPlayAmbient);
-	//lua_register(L,"Server_SetMaxResyncsPerSecond",	l_Server_SetMaxResyncsP=
erSecond);
-	//lua_register(L,"Server_GetMaxResyncsPerSecond",	l_Server_GetMaxResyncsP=
erSecond);
-	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
-	lua_register(L,"Client_TakeScreenshot",			l_Client_TakeScreenshot);
-	lua_register(L,"Client_TakeGridScreenshot",			l_Client_TakeGridScreenshot=
);
-	//lua_register(L,"Client_SetCamera",				l_Client_SetCamera);
-	//lua_register(L,"Client_ForceCamRot",			l_Client_ForceCamRot);
-	//lua_register(L,"Client_CameraLookAt",			l_Client_CameraLookAt);
-	//lua_register(L,"Client_SetPlayerShip",			l_Client_SetPlayerShip);
-	//lua_register(L,"Client_SetMaxFPS",				l_Client_SetMaxFPS);
-	//lua_register(L,"Client_GetMaxFPS",				l_Client_GetMaxFPS);
-	lua_register(L,"Client_GetCurFPS",				l_Client_GetCurFPS);
-	lua_register(L,"Client_GetFrameNum",			l_Client_GetFrameNum);
-	//lua_register(L,"Client_SetMouseSensitivity",	l_Client_SetMouseSensitivi=
ty);
-	//lua_register(L,"Client_SetInvertMouse",			l_Client_SetInvertMouse);
-	//lua_register(L,"Client_ShowMessage",			l_Client_ShowMessage);
-	lua_register(L,"Client_GetTicks",				l_Client_GetTicks);
-	lua_register(L,"Client_SetSkybox",				l_Client_SetSkybox);
-	lua_register(L,"Client_SetFog",					l_Client_SetFog);
-	lua_register(L,"Client_RenderOneFrame",			l_Client_RenderOneFrame);
-	lua_register(L,"Client_Sleep",					l_Client_Sleep);
-	lua_register(L,"Client_USleep",					l_Client_USleep);
-	lua_register(L,"Client_SetAmbientLight",		l_Client_SetAmbientLight);
-	lua_register(L,"Client_ClearLights",			l_Client_ClearLights);
-	lua_register(L,"Client_AddPointLight",			l_Client_AddPointLight);
+
+
+/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
+static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
+	return 0;
+}
+
+/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
+static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
+	float r =3D luaL_checknumber(L,1);
+	float g =3D luaL_checknumber(L,2);
+	float b =3D luaL_checknumber(L,3);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+
+	if(p){
+		p->setAmbientLight( ColourValue( r, g, b ) );
+	}
+
+	return 0;
+}
+
+/// for lua :   string  GetUniqueName  ()
+static int l_GetUniqueName	(lua_State *L) { PROFILE  // TODO : move to sep=
erate file ?
+	std::string n =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	lua_pushstring(L,n.c_str());
+	return 1;
+}
+
+
+/// for lua :   number OgreLastFPS  ()
+static int l_OgreLastFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfLastFPS);return 1; }
+/// for lua :   number OgreAvgFPS  ()
+static int l_OgreAvgFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWra=
pper::GetSingleton().mfAvgFPS);return 1; }
+/// for lua :   number OgreBestFPS  ()
+static int l_OgreBestFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfBestFPS);return 1; }
+/// for lua :   number OgreWorstFPS  ()
+static int l_OgreWorstFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreW=
rapper::GetSingleton().mfWorstFPS);return 1; }
+/// for lua :   number OgreBestFrameTime  ()
+static int l_OgreBestFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miBestFrameTime);return 1; }
+/// for lua :   number OgreWorstFrameTime  ()
+static int l_OgreWorstFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,=
cOgreWrapper::GetSingleton().miWorstFrameTime);return 1; }
+/// for lua :   number OgreTriangleCount  ()
+static int l_OgreTriangleCount	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miTriangleCount);return 1; }
+/// for lua :   number OgreBatchCount  ()
+static int l_OgreBatchCount	(lua_State *L) { PROFILE lua_pushnumber(L,cOgr=
eWrapper::GetSingleton().miBatchCount);return 1; }
+
+/*
+static int l_Client_SetMouseSensitivity (lua_State *L) { PROFILE
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client) client->mfMouseSensitivity =3D luaL_checknumber(L,1);
+	return 0;
+}
+
+
+
+static int l_Client_SetInvertMouse (lua_State *L) { PROFILE
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client) client->mbInvertMouse =3D luaL_checkint(L,1) !=3D 0;
+	return 0;
+}
+
+
+static int l_Client_SetCamera (lua_State *L) { PROFILE
+	int i=3D0;
+	Real x =3D luaL_checknumber(L,++i);
+	Real y =3D luaL_checknumber(L,++i);
+	Real z =3D luaL_checknumber(L,++i);
+	Real qw =3D luaL_checknumber(L,++i);
+	Real qx =3D luaL_checknumber(L,++i);
+	Real qy =3D luaL_checknumber(L,++i);
+	Real qz =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->SetCamera(Vector3(x,y,z),Quaternion(qw,qx,qy,qz));
+	else	printf("l_Client_SetCamera called from lua on non-client");
+	return 0;
+}
+
+static int l_Client_ForceCamRot (lua_State *L) { PROFILE
+	int i=3D0;
+	Real qw =3D luaL_checknumber(L,++i);
+	Real qx =3D luaL_checknumber(L,++i);
+	Real qy =3D luaL_checknumber(L,++i);
+	Real qz =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->ForceCamRot(Quaternion(qw,qx,qy,qz));
+	else	printf("l_Client_ForceCamRot called from lua on non-client");
+	return 0;
+}
+
+static int l_Client_CameraLookAt (lua_State *L) { PROFILE
+	int i=3D0;
+	Real x =3D luaL_checknumber(L,++i);
+	Real y =3D luaL_checknumber(L,++i);
+	Real z =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->CameraLookAt(Vector3(x,y,z));
+	else	printf("l_Client_CameraLookAt called from lua on non-client");
+	return 0;
+}
+*/
+
+
+// ***** ***** utilities and error handling ***** *****
+
+
+/// also adds a traceback to the error message in case of an error
+/// nret=3D-1 for unlimited
+/// don't use directly, used by LuaCall
+int 	PCallWithErrFuncWrapper (lua_State *L,int narg, int nret) { PROFILE
+	int status;
+	int base =3D lua_gettop(L) - narg;  // function index
+	lua_pushliteral(L, "_TRACEBACK");
+	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function
+	lua_insert(L, base);  // put it under chunk and args
+	// signal(SIGINT, laction); // copyed from example, no idea what this is =
good for =3D(
+	status =3D lua_pcall(L, narg, (nret=3D=3D-1) ? LUA_MULTRET : nret, base);
+
+	//printf("pcall end, cleaning up....\n");
+
+	// signal(SIGINT, SIG_DFL); // copyed from example, no idea what this is =
good for =3D(
+	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state
+
+	//printf("pcall end\n");
+
+	return status;
+}
+
+
+void MyCrash				(const char* szMessage);
+
+void LuaErrorHandler (lua_State *L, const char *fmt, ...) { PROFILE
+	printf("LuaErrorHandler start\n");
+
+	va_list argp;
+	va_start(argp, fmt);
+	gRobStringBuffer[0] =3D 0;
+	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
+	std::string s(gRobStringBuffer);
+	va_end(argp);
+
+	std::string mystr("LuaError\n");
+	mystr +=3D s;
+
+	printf("\nLuaErrorHandler end\n");
+
+	//lua_close(L);
+	MyCrash(mystr.c_str());
+	// todo : attempt recovery in case of protected function call ?
+	// todo : deinit ogre to free mouse here
+}
+
+
+struct luaL_reg make_luaL_reg(const char *name,lua_CFunction func){
+  struct luaL_reg s;
+  s.name =3D name;
+  s.func =3D func;
+  return s;
+}
+
+void	cScripting::Listener_Notify (cListenable* pTarget,const size_t eventc=
ode,const size_t param,const size_t userdata) { PROFILE
+	switch (userdata) {
+		case kListenerBinding_Keys:
+			switch (eventcode) {
+				case cInput::kListenerEvent_KeyPress:
+					LuaCall("KeyDown","ii",(int)(param & 255),(int)((param >> 8) & 255));
+					//printf("keydown(%d)\n",param);
+				break;
+				case cInput::kListenerEvent_KeyRelease:
+					LuaCall("KeyUp","i",(int)param);
+					//printf("keyup(%d)\n",param);
+				break;
+			}
+			//printf("event=3D%d,key=3D%d\n",eventcode,param);
+		break;
+		// TODO : maybe timer ?
+	}
+}
+
+int		cScripting::GetGlobal	(const char* name) { PROFILE
+	lua_getglobal(L,name);
+	if (!lua_isnumber(L,-1)) { lua_pop(L,1); return 0; }
+	return (int)lua_tonumber(L,-1);
+}
+
+void	cScripting::SetGlobal	(const char* name,int value) { PROFILE
+	lua_pushnumber(L,value);
+	lua_setglobal(L,name);
+}
+
+/// this is the call_va function from the Book "Programming in Lua" with a=
ltered type notation :
+/// float : f
+/// int : i
+/// const char* : s
+/// returns true on successful call
+/// warning ! maybe this cannot return more than one string ! todo : check=
 doc of lua_tostring
+bool cScripting::LuaCall (const char *func, const char *sig, ...) { PROFILE
+	#ifdef PROFILE_LUACALLCOUNT
+	++gPROFILE_LUACALLCOUNT[func];
+	#endif
+
+	bool result =3D true;
+	va_list vl;
+	int narg, nres;  /* number of arguments and results */
+
+	va_start(vl, sig);
+	lua_getglobal(L, func);  /* get function */
+
+	/* push arguments */
+	narg =3D 0;
+	while (*sig) {  /* push arguments */
+		bool endwhile =3D false;
+		switch (*sig++) {
+		  case 'f':  /* float/double argument */
+			lua_pushnumber(L, va_arg(vl, double));
+			break;
+
+		  case 'i':  /* int argument (ansi printf : also use %d) */
+			lua_pushnumber(L, va_arg(vl, int));
+			break;
+
+		  case 's':  /* string argument */
+			lua_pushstring(L, va_arg(vl, char *));
+			break;
+
+		  case '>':
+			endwhile =3D true;
+			break;
+		  default:
+			LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
+			lua_pushnil(L);
+			break;
+		}
+		if (endwhile) break;
+		narg++;
+		luaL_checkstack(L, 1, "too many arguments");
+	}
+
+	/* do the call */
+	nres =3D strlen(sig);  /* number of expected results */
+	// todo : push lua error handler function here ?!?
+	if (PCallWithErrFuncWrapper(L,narg, nres) !=3D 0) {
+	//if (lua_pcall(L, narg, nres, 0) !=3D 0)  { // old
+		/* do the call */
+		LuaErrorHandler(L, "error running function `%s': %s",func, lua_tostring(=
L, -1));
+
+		/*
+		doku for lua_pcall last argument (errorfunc)
+		if 0 ... else that argument should be the index in the stack where the e=
rror handler function is located. Notice that, in such cases, the handler m=
ust be pushed in the stack before the function to be called and its argumen=
ts.
+		*/
+		result =3D false;
+	} else {
+		/* retrieve results */
+		int popamount =3D nres;
+		nres =3D -nres;  /* stack index of first result */
+		while (*sig) {  /* get results */
+			switch (*sig++) {
+
+			  case 'f':  /* float / double result */
+				if (!lua_isnumber(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl, double *) =3D 0;
+				} else {
+					*va_arg(vl, double *) =3D lua_tonumber(L, nres);
+				}
+				break;
+
+			  case 'i':  /* int result */
+				if (!lua_isnumber(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl, int *) =3D 0;
+				} else {
+					*va_arg(vl, int *) =3D (int)lua_tonumber(L, nres);
+				}
+				break;
+
+			  case 's':  /* string result */
+				if (!lua_isstring(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl,std::string*) =3D "";
+				} else {
+					*va_arg(vl,std::string*) =3D lua_tostring(L, nres); // return as std:=
:string, as pure lua pointer becomes invalid with pop
+				}
+				break;
+
+			  default:
+				LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
+				break;
+			}
+			nres++;
+		}
+		// pop stack
+		lua_pop(L, popamount);
+	}
+	va_end(vl);
+	return result;
+}
+
+
+cScripting::cScripting	() : L(0) {}
+
+void	cScripting::Init () { PROFILE
+	if (sizeof(lua_Number) <=3D 4) {
+		printf("sizeof(lua_Number) =3D %d, but must be greater than 4 (32 bit) f=
or bitwise ops\n",sizeof(lua_Number));
+		DisplayErrorMessage("ERROR : lua-precision wrong");
+		exit(43);
+	}
+
+	L =3D lua_open();
+	assert(L);
+	luaopen_base(L);
+	luaopen_table(L);
+	luaopen_io(L);
+	luaopen_string(L);
+	luaopen_math(L);
+	luaopen_debug(L);
+
+	lua_register(L,"GetNamedKey",		l_GetNamedKey);
+	lua_register(L,"GetKeyName",		l_GetKeyName);
+	lua_register(L,"PollInput",			l_PollInput);
+	lua_register(L,"Terminate",			l_Terminate);
+	lua_register(L,"InitOgre",			l_InitOgre);
+	lua_register(L,"GetPointerSize",	l_GetPointerSize);
+	lua_register(L,"Client_IsAlive",	l_Client_IsAlive);
+	//lua_register(L,"ServerSendMsgToClient",			l_ServerSendMsgToClient);
+	//lua_register(L,"ClientSendMsgToServer",			l_ClientSendMsgToServer);
+	//lua_register(L,"SoundPlayAmbient",				l_SoundPlayAmbient);
+	//lua_register(L,"Server_SetMaxResyncsPerSecond",	l_Server_SetMaxResyncsP=
erSecond);
+	//lua_register(L,"Server_GetMaxResyncsPerSecond",	l_Server_GetMaxResyncsP=
erSecond);
+	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
+	lua_register(L,"Client_TakeScreenshot",			l_Client_TakeScreenshot);
+	lua_register(L,"Client_TakeGridScreenshot",			l_Client_TakeGridScreenshot=
);
+	//lua_register(L,"Client_SetCamera",				l_Client_SetCamera);
+	//lua_register(L,"Client_ForceCamRot",			l_Client_ForceCamRot);
+	//lua_register(L,"Client_CameraLookAt",			l_Client_CameraLookAt);
+	//lua_register(L,"Client_SetPlayerShip",			l_Client_SetPlayerShip);
+	//lua_register(L,"Client_SetMaxFPS",				l_Client_SetMaxFPS);
+	//lua_register(L,"Client_GetMaxFPS",				l_Client_GetMaxFPS);
+	lua_register(L,"Client_GetCurFPS",				l_Client_GetCurFPS);
+	lua_register(L,"Client_GetFrameNum",			l_Client_GetFrameNum);
+	//lua_register(L,"Client_SetMouseSensitivity",	l_Client_SetMouseSensitivi=
ty);
+	//lua_register(L,"Client_SetInvertMouse",			l_Client_SetInvertMouse);
+	//lua_register(L,"Client_ShowMessage",			l_Client_ShowMessage);
+	lua_register(L,"Client_GetTicks",				l_Client_GetTicks);
+	lua_register(L,"Client_SetSkybox",				l_Client_SetSkybox);
+	lua_register(L,"Client_SetFog",					l_Client_SetFog);
+	lua_register(L,"Client_RenderOneFrame",			l_Client_RenderOneFrame);
+	lua_register(L,"Client_Sleep",					l_Client_Sleep);
+	lua_register(L,"Client_USleep",					l_Client_USleep);
+	lua_register(L,"Client_SetAmbientLight",		l_Client_SetAmbientLight);
+	lua_register(L,"Client_ClearLights",			l_Client_ClearLights);
+	lua_register(L,"Client_AddPointLight",			l_Client_AddPointLight);
 	lua_register(L,"Client_AddDirectionalLight",	l_Client_AddDirectionalLight=
);
-	lua_register(L,"Client_DeleteLight",			l_Client_DeleteLight);
-	lua_register(L,"Client_GetPhysStepTime",		l_Client_GetPhysStepTime);
-	lua_register(L,"BuildTerrainEntity_Simple",		l_BuildTerrainEntity_Simple);
-	lua_register(L,"BuildTerrainEntity_Shaded",		l_BuildTerrainEntity_Shaded);
-	lua_register(L,"TerrainRayPick",				l_TerrainRayPick);
-	lua_register(L,"SphereRayPick",					l_SphereRayPick);
-	lua_register(L,"UnloadMeshName",				l_UnloadMeshName);
-	lua_register(L,"CountMeshTriangles",			l_CountMeshTriangles);
-	lua_register(L,"GetUOPath",						l_getUOPath);
-	lua_register(L,"PathSearch",					l_PathSearch);
-	lua_register(L,"file_exists",					l_file_exists);
-	lua_register(L,"file_size",						l_file_size);
-	lua_register(L,"Hex2Num",						l_Hex2Num);
-	lua_register(L,"GetRandomHexString",			l_GetRandomHexString);
-	lua_register(L,"BitwiseAND",					l_BitwiseAND);
-	lua_register(L,"BitwiseOR",						l_BitwiseOR);
-	lua_register(L,"BitwiseXOR",					l_BitwiseXOR);
-	lua_register(L,"BitwiseSHL",					l_BitwiseSHL);
-	lua_register(L,"BitwiseSHR",					l_BitwiseSHR);
-	lua_register(L,"TestBit",						l_TestBit);
-	lua_register(L,"SetBit",						l_SetBit);
-	lua_register(L,"ClearBit",						l_ClearBit);
-	lua_register(L,"Exit",							l_Exit);
-	lua_register(L,"Crash",							l_Crash);
-	lua_register(L,"CrashSegFault",					l_CrashSegFault);
-	lua_register(L,"DisplayNotice",					l_DisplayNotice);
-	lua_register(L,"FatalErrorMessage",				l_FatalErrorMessage);
-	lua_register(L,"ExportMesh",					l_ExportMesh);
-	lua_register(L,"CreateSceneManager",			l_CreateSceneManager);
-	lua_register(L,"GetUniqueName",					l_GetUniqueName);
-	lua_register(L,"GetMouseRay",					l_GetMouseRay);
-	lua_register(L,"GetMaxZ",						l_GetMaxZ);
-	lua_register(L,"ProjectPos",					l_ProjectPos);
-	lua_register(L,"ProjectSizeAndPos",				l_ProjectSizeAndPos);
-	lua_register(L,"_TRACEBACK",					l_TRACEBACK);
-	lua_register(L,"ProfileDumpCallCount",			l_ProfileDumpCallCount);
-	lua_register(L,"OgreMemoryUsage",				l_OgreMemoryUsage);
-	lua_register(L,"OgreMeshAvailable",				l_OgreMeshAvailable);
-	lua_register(L,"OgreMaterialNameKnown",			l_OgreMaterialNameKnown);
-	lua_register(L,"OgreMaterialAvailable",			l_OgreMaterialAvailable);
-	lua_register(L,"OgreTextureAvailable",			l_OgreTextureAvailable);
-	lua_register(L,"OgreMeshTextures",				l_OgreMeshTextures);
-	// some statistic stuff
-	lua_register(L,"OgreLastFPS",				l_OgreLastFPS);
-	lua_register(L,"OgreAvgFPS",				l_OgreAvgFPS);
-	lua_register(L,"OgreBestFPS",				l_OgreBestFPS);
-	lua_register(L,"OgreWorstFPS",				l_OgreWorstFPS);
-	lua_register(L,"OgreBestFrameTime",			l_OgreBestFrameTime);
-	lua_register(L,"OgreWorstFrameTime",			l_OgreWorstFrameTime);
-	lua_register(L,"OgreTriangleCount",			l_OgreTriangleCount);
-	lua_register(L,"OgreBatchCount",			l_OgreBatchCount);
-
-	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
-	lua_register(L,"HueMesh",						l_HueMesh);
-	lua_register(L,"OgreAddCompositor",						l_OgreAddCompositor);
-	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
-	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
-	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
-	// shadow stuff
+	lua_register(L,"Client_DeleteLight",			l_Client_DeleteLight);
+	lua_register(L,"Client_GetPhysStepTime",		l_Client_GetPhysStepTime);
+	lua_register(L,"BuildTerrainEntity_Simple",		l_BuildTerrainEntity_Simple);
+	lua_register(L,"BuildTerrainEntity_Shaded",		l_BuildTerrainEntity_Shaded);
+	lua_register(L,"TerrainRayPick",				l_TerrainRayPick);
+	lua_register(L,"SphereRayPick",					l_SphereRayPick);
+	lua_register(L,"UnloadMeshName",				l_UnloadMeshName);
+	lua_register(L,"CountMeshTriangles",			l_CountMeshTriangles);
+	lua_register(L,"GetUOPath",						l_getUOPath);
+	lua_register(L,"PathSearch",					l_PathSearch);
+	lua_register(L,"file_exists",					l_file_exists);
+	lua_register(L,"file_size",						l_file_size);
+	lua_register(L,"Hex2Num",						l_Hex2Num);
+	lua_register(L,"GetRandomHexString",			l_GetRandomHexString);
+	lua_register(L,"BitwiseAND",					l_BitwiseAND);
+	lua_register(L,"BitwiseOR",						l_BitwiseOR);
+	lua_register(L,"BitwiseXOR",					l_BitwiseXOR);
+	lua_register(L,"BitwiseSHL",					l_BitwiseSHL);
+	lua_register(L,"BitwiseSHR",					l_BitwiseSHR);
+	lua_register(L,"TestBit",						l_TestBit);
+	lua_register(L,"SetBit",						l_SetBit);
+	lua_register(L,"ClearBit",						l_ClearBit);
+	lua_register(L,"Exit",							l_Exit);
+	lua_register(L,"Crash",							l_Crash);
+	lua_register(L,"CrashSegFault",					l_CrashSegFault);
+	lua_register(L,"DisplayNotice",					l_DisplayNotice);
+	lua_register(L,"FatalErrorMessage",				l_FatalErrorMessage);
+	lua_register(L,"ExportMesh",					l_ExportMesh);
+	lua_register(L,"CreateSceneManager",			l_CreateSceneManager);
+	lua_register(L,"GetUniqueName",					l_GetUniqueName);
+	lua_register(L,"GetMouseRay",					l_GetMouseRay);
+	lua_register(L,"GetMaxZ",						l_GetMaxZ);
+	lua_register(L,"ProjectPos",					l_ProjectPos);
+	lua_register(L,"ProjectSizeAndPos",				l_ProjectSizeAndPos);
+	lua_register(L,"_TRACEBACK",					l_TRACEBACK);
+	lua_register(L,"ProfileDumpCallCount",			l_ProfileDumpCallCount);
+	lua_register(L,"OgreMemoryUsage",				l_OgreMemoryUsage);
+	lua_register(L,"OgreMeshAvailable",				l_OgreMeshAvailable);
+	lua_register(L,"OgreMaterialNameKnown",			l_OgreMaterialNameKnown);
+	lua_register(L,"OgreMaterialAvailable",			l_OgreMaterialAvailable);
+	lua_register(L,"OgreTextureAvailable",			l_OgreTextureAvailable);
+	lua_register(L,"OgreMeshTextures",				l_OgreMeshTextures);
+	// some statistic stuff
+	lua_register(L,"OgreLastFPS",				l_OgreLastFPS);
+	lua_register(L,"OgreAvgFPS",				l_OgreAvgFPS);
+	lua_register(L,"OgreBestFPS",				l_OgreBestFPS);
+	lua_register(L,"OgreWorstFPS",				l_OgreWorstFPS);
+	lua_register(L,"OgreBestFrameTime",			l_OgreBestFrameTime);
+	lua_register(L,"OgreWorstFrameTime",			l_OgreWorstFrameTime);
+	lua_register(L,"OgreTriangleCount",			l_OgreTriangleCount);
+	lua_register(L,"OgreBatchCount",			l_OgreBatchCount);
+
+	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
+	lua_register(L,"HueMesh",						l_HueMesh);
+	lua_register(L,"OgreAddCompositor",						l_OgreAddCompositor);
+	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
+	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
+	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
+	// shadow stuff
 	lua_register(L,"OgreSetShadowTextureFadeStart",						l_OgreSetShadowTextu=
reFadeStart);
 	lua_register(L,"OgreSetShadowTextureFadeEnd",						l_OgreSetShadowTexture=
FadeEnd);
 	lua_register(L,"OgreSetShadowDirLightTextureOffset",				l_OgreSetShadowDi=
rLightTextureOffset);
 	lua_register(L,"OgreSetShadowFarDistance",							l_OgreSetShadowFarDistan=
ce);
-	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
+	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
 	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
-	lua_register(L,"OgrePixelFormatList",								l_OgrePixelFormatList);
-	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
-	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
-	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
-	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
-	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
-
-	// file paths for init
-	const char* szLuaUDataPath =3D "../data/lua/udata.lua";
-	const char* szLuaMainPath =3D "../data/lua/main.lua";
-
-
-	// check if lua files exist (otherwise working directory probably wrong)
-	std::ifstream myFileStream(szLuaMainPath);
-	if (!myFileStream) {
-		MyCrash(strprintf("%s cannot be found, probably the working directory is=
 wrong",szLuaMainPath).c_str());
-		exit(34);
-	}
-	myFileStream.close();
-
-	// load utils
-	int res;
-	res	=3D lua_dofile(L,szLuaUDataPath); // loads function used for register=
ing udatatypes
-	if (res) {
-		MyCrash("error in udata script-initialisation\n");
-		exit(44);
-	}
-
-	RegisterLuaXML(L);
-	LuaRegisterFIFO(L);
-	LuaRegisterNet(L);
-	cGfx3D::LuaRegister(L);
-	cGfx2D::LuaRegister(L);
-	cDialog::LuaRegister(L);
-	cWidget::LuaRegister(L);
-	cBitMask::LuaRegister(L);
-	cCamera::LuaRegister(L);
-	cViewport::LuaRegister(L);
-	cRenderTexture::LuaRegister(L);
-	cSoundSource::LuaRegister(L);
-	cSpriteManager::LuaRegister(L);
-	cManualArtMaterialLoader::LuaRegister(L);
-	cSprite::LuaRegister(L);
-	Material_LuaRegister(L);
-	Granny_LuaRegister(L);
-	LuaRegisterData(L);
-	LuaRegisterBuilder(L);
-	LuaRegisterRadar(L);
-
-	cInput::GetSingleton().RegisterListener(this,kListenerBinding_Keys);
-
-	res =3D lua_dofile(L,szLuaMainPath);
-	if (res) {
-		MyCrash("error in main script-initialisation\n");
-		exit(-1);
-	}
-}
-
-cScripting::~cScripting	() { PROFILE
-	cInput::GetSingleton().UnRegisterListener(this,kListenerBinding_Keys);
-
-	assert(L);
-	lua_setgcthreshold(L, 0);  // collected garbage
-	lua_close(L);
-	L =3D 0;
-}
+	lua_register(L,"OgrePixelFormatList",								l_OgrePixelFormatList);
+	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
+	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
+	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
+	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
+	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
+
+	// file paths for init
+	const char* szLuaUDataPath =3D "../data/lua/udata.lua";
+	const char* szLuaMainPath =3D "../data/lua/main.lua";
+
+
+	// check if lua files exist (otherwise working directory probably wrong)
+	std::ifstream myFileStream(szLuaMainPath);
+	if (!myFileStream) {
+		MyCrash(strprintf("%s cannot be found, probably the working directory is=
 wrong",szLuaMainPath).c_str());
+		exit(34);
+	}
+	myFileStream.close();
+
+	// load utils
+	int res;
+	res	=3D lua_dofile(L,szLuaUDataPath); // loads function used for register=
ing udatatypes
+	if (res) {
+		MyCrash("error in udata script-initialisation\n");
+		exit(44);
+	}
+
+	RegisterLuaXML(L);
+	LuaRegisterFIFO(L);
+	LuaRegisterNet(L);
+	cGfx3D::LuaRegister(L);
+	cGfx2D::LuaRegister(L);
+	cDialog::LuaRegister(L);
+	cWidget::LuaRegister(L);
+	cBitMask::LuaRegister(L);
+	cCamera::LuaRegister(L);
+	cViewport::LuaRegister(L);
+	cRenderTexture::LuaRegister(L);
+	cSoundSource::LuaRegister(L);
+	cSpriteManager::LuaRegister(L);
+	cManualArtMaterialLoader::LuaRegister(L);
+	cSprite::LuaRegister(L);
+	Material_LuaRegister(L);
+	Granny_LuaRegister(L);
+	LuaRegisterData(L);
+	LuaRegisterBuilder(L);
+	LuaRegisterRadar(L);
+
+	cInput::GetSingleton().RegisterListener(this,kListenerBinding_Keys);
+
+	res =3D lua_dofile(L,szLuaMainPath);
+	if (res) {
+		MyCrash("error in main script-initialisation\n");
+		exit(-1);
+	}
+}
+
+cScripting::~cScripting	() { PROFILE
+	cInput::GetSingleton().UnRegisterListener(this,kListenerBinding_Keys);
+
+	assert(L);
+	lua_setgcthreshold(L, 0);  // collected garbage
+	lua_close(L);
+	L =3D 0;
+}

Modified: trunk/src/spritemanager.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/spritemanager.cpp (original)
+++ trunk/src/spritemanager.cpp Thu Aug  2 02:27:17 2007
@@ -1,7 +1,7 @@
-#include "prefix.h"
-#include "spritemanager.h"
-#include "ogrewrapper.h"
-#include "shell.h"
+#include "prefix.h"
+#include "spritemanager.h"
+#include "ogrewrapper.h"
+#include "shell.h"
 #include <Ogre.h>
 #include <math.h>
 =

@@ -60,30 +60,30 @@
 		return;
 	}
 =

-	Ogre::TexturePtr tp =3D Ogre::TextureManager::getSingleton().getByHandle(=
 mTexHandle );
-
-	if (tp.isNull()) {
-		return;
-	}
-
-	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
-
-	if (mChanged) {
-		UpdateBuffer();
-		mChanged =3D false;
-	}
-
+	Ogre::TexturePtr tp =3D Ogre::TextureManager::getSingleton().getByHandle(=
 mTexHandle );
+
+	if (tp.isNull()) {
+		return;
+	}
+
+	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
+
+	if (mChanged) {
+		UpdateBuffer();
+		mChanged =3D false;
+	}
+
 	if (!mRenderOp) {
 		return;
-	}
-
-	if (mUseNormals) {
-		mSpriteQueue->SpriteManager()->SetLightningEnabled( true );
-	} else {
-		mSpriteQueue->SpriteManager()->SetLightningEnabled( false );
-	}
-
-	RenderSys->_setTexture( 0, true, tp->getName() );
+	}
+
+	if (mUseNormals) {
+		mSpriteQueue->SpriteManager()->SetLightningEnabled( true );
+	} else {
+		mSpriteQueue->SpriteManager()->SetLightningEnabled( false );
+	}
+
+	RenderSys->_setTexture( 0, true, tp->getName() );
 	RenderSys->_render( *mRenderOp );
 }
 =

@@ -148,35 +148,35 @@
 		}
 };
 void cSpriteQueue::Execute() { PROFILE
-	if (!mListSorted && cShell::GetTicks() - mLastSort > 10 ) {
-		mLastSort =3D cShell::GetTicks();
-		mSpriteList.sort( CompareSprites() );
-		mListSorted =3D true;
-		printf( "Sprites sortet in %d msec.\n", cShell::GetTicks() - mLastSort );
-
-		int Pos =3D 1;
-		for ( std::list<cBaseSprite*>::iterator itor=3DmSpriteList.begin(); itor=
!=3DmSpriteList.end(); ++itor ) {
-			if ((*itor)->GetPosition() !=3D Pos ) {
-				(*itor)->SetPosition( Pos );
-				mListResorted =3D true;
-			}
-			Pos++;
-		}
-	}
-
-	double ViewPortWidthHalf  =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualWidth() / 2.0;
-	double ViewPortHeightHalf =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualHeight() / 2.0;
-
-	//long StartTick =3D cShell::GetTicks();
-	if (mSpriteManager->UseWorldCam()) {
-		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
-			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, mSpriteManager=
->GetCam()->getPosition().x, mSpriteManager->GetCam()->getPosition().y );
-		}
-	} else {
-		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
-			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, 0, 0 );
-		}
-	}
+	if (!mListSorted && cShell::GetTicks() - mLastSort > 10 ) {
+		mLastSort =3D cShell::GetTicks();
+		mSpriteList.sort( CompareSprites() );
+		mListSorted =3D true;
+		//( "%d sprites sortet in %d msec.\n", mSpriteList.size(), cShell::GetTi=
cks() - mLastSort );
+
+		int Pos =3D 1;
+		for ( std::list<cBaseSprite*>::iterator itor=3DmSpriteList.begin(); itor=
!=3DmSpriteList.end(); ++itor ) {
+			if ((*itor)->GetPosition() !=3D Pos ) {
+				(*itor)->SetPosition( Pos );
+				mListResorted =3D true;
+			}
+			Pos++;
+		}
+	}
+
+	double ViewPortWidthHalf  =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualWidth() / 2.0;
+	double ViewPortHeightHalf =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualHeight() / 2.0;
+
+	//long StartTick =3D cShell::GetTicks();
+	if (mSpriteManager->UseWorldCam()) {
+		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
+			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, mSpriteManager=
->GetCam()->getPosition().x, mSpriteManager->GetCam()->getPosition().y );
+		}
+	} else {
+		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
+			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, 0, 0 );
+		}
+	}
 	//printf( "%d Sprites drawn in %d msec.\n", SpriteList.size(), cShell::Ge=
tTicks() - StartTick );*/
 }
 =

@@ -188,83 +188,83 @@
 	mUseWorldCam =3D UseCam;
 	mLightningEnabled =3D false;
 =

-	mSceneMan =3D SceneMan;
-	mTargetQueue =3D TargetQueue;
-	mAfterQueue =3D AfterQueue;
-
+	mSceneMan =3D SceneMan;
+	mTargetQueue =3D TargetQueue;
+	mAfterQueue =3D AfterQueue;
+
 	if (mUseWorldCam) {
 		mCam =3D cOgreWrapper::GetSingleton().mCamera;
-	} else {
-		mCam =3D 0;
-	}
-	=

+	} else {
+		mCam =3D 0;
+	}
+	=

 	mSceneMan->addRenderQueueListener( this );
 }
 =

 class cSpriteQueueDeletor { public : inline void operator () (std::pair< i=
nt, cSpriteQueue*> doomed) { delete doomed.second; } };
-cSpriteManager::~cSpriteManager() { PROFILE
+cSpriteManager::~cSpriteManager() { PROFILE
 	mSceneMan->removeRenderQueueListener( this );
 =

 	std::for_each( mSpriteQueues.begin(), mSpriteQueues.end(), cSpriteQueueDe=
letor() );
 }
 =

-void cSpriteManager::renderBuffer() { PROFILE
-	prepareForRender();
-	for ( std::map<int, cSpriteQueue*>::iterator itor=3DmSpriteQueues.begin()=
; itor!=3DmSpriteQueues.end(); ++itor ) {
-		(*itor).second->Execute();
-	}
-}
-
-void cSpriteManager::prepareForRender() { PROFILE
-	Ogre::TextureUnitState::UVWAddressingMode uvwAddressMode;
-
-	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
-	=

-	Ogre::LayerBlendModeEx colorBlendMode;
-	Ogre::LayerBlendModeEx alphaBlendMode;
-	=

-	colorBlendMode.blendType =3D Ogre::LBT_COLOUR;
-	colorBlendMode.source1 =3D Ogre::LBS_TEXTURE;
-	colorBlendMode.operation =3D Ogre::LBX_SOURCE1;
-
-	alphaBlendMode.blendType =3D Ogre::LBT_ALPHA;
-	alphaBlendMode.source1 =3D Ogre::LBS_TEXTURE;
-	alphaBlendMode.operation =3D Ogre::LBX_SOURCE1;
-
-	uvwAddressMode.u =3D Ogre::TextureUnitState::TAM_CLAMP;
-	uvwAddressMode.v =3D Ogre::TextureUnitState::TAM_CLAMP;
-	uvwAddressMode.w =3D Ogre::TextureUnitState::TAM_CLAMP;
-
-	RenderSys->_setWorldMatrix( Ogre::Matrix4::IDENTITY );
-	if (mUseWorldCam) {
-		RenderSys->_setViewMatrix( mCam->getViewMatrix() ); =

-		RenderSys->_setProjectionMatrix( mCam->getProjectionMatrixRS() );
-	} else {
-		int w =3D cOgreWrapper::GetSingleton().mViewport->getActualWidth();
-		int h =3D cOgreWrapper::GetSingleton().mViewport->getActualHeight();
-
-		Ogre::Matrix4 ViewportMatrix =3D Ogre::Matrix4::getScale( 2.0/w, -2.0/h,=
 1.0 );
-		RenderSys->_setViewMatrix( ViewportMatrix );
-		RenderSys->_setProjectionMatrix( Ogre::Matrix4::IDENTITY );
-	}
-
-	RenderSys->_setTextureMatrix( 0, Ogre::Matrix4::IDENTITY );
-	RenderSys->_setTextureCoordSet( 0, 0 );
-	RenderSys->_setTextureCoordCalculation( 0, Ogre::TEXCALC_NONE );
-	RenderSys->_setTextureUnitFiltering( 0, Ogre::FO_LINEAR, Ogre::FO_LINEAR,=
 Ogre::FO_NONE );
-	RenderSys->_setTextureBlendMode( 0, colorBlendMode );
-	RenderSys->_setTextureBlendMode( 0, alphaBlendMode );
-	RenderSys->_setTextureAddressingMode( 0, uvwAddressMode );
-	RenderSys->_disableTextureUnitsFrom( 1 );	=

-	RenderSys->_setFog( Ogre::FOG_NONE );
-	RenderSys->_setCullingMode( Ogre::CULL_NONE );
-	RenderSys->_setDepthBufferParams( false, false );
-	RenderSys->_setColourBufferWriteEnabled( true, true, true, false );
-	RenderSys->setShadingType( Ogre::SO_GOURAUD );
-	RenderSys->_setPolygonMode( Ogre::PM_SOLID );
-	RenderSys->unbindGpuProgram( Ogre::GPT_FRAGMENT_PROGRAM );
-	RenderSys->unbindGpuProgram( Ogre::GPT_VERTEX_PROGRAM );
-	RenderSys->_setSceneBlending( Ogre::SBF_SOURCE_ALPHA, Ogre::SBF_ONE_MINUS=
_SOURCE_ALPHA );
+void cSpriteManager::renderBuffer() { PROFILE
+	prepareForRender();
+	for ( std::map<int, cSpriteQueue*>::iterator itor=3DmSpriteQueues.begin()=
; itor!=3DmSpriteQueues.end(); ++itor ) {
+		(*itor).second->Execute();
+	}
+}
+
+void cSpriteManager::prepareForRender() { PROFILE
+	Ogre::TextureUnitState::UVWAddressingMode uvwAddressMode;
+
+	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
+	=

+	Ogre::LayerBlendModeEx colorBlendMode;
+	Ogre::LayerBlendModeEx alphaBlendMode;
+	=

+	colorBlendMode.blendType =3D Ogre::LBT_COLOUR;
+	colorBlendMode.source1 =3D Ogre::LBS_TEXTURE;
+	colorBlendMode.operation =3D Ogre::LBX_SOURCE1;
+
+	alphaBlendMode.blendType =3D Ogre::LBT_ALPHA;
+	alphaBlendMode.source1 =3D Ogre::LBS_TEXTURE;
+	alphaBlendMode.operation =3D Ogre::LBX_SOURCE1;
+
+	uvwAddressMode.u =3D Ogre::TextureUnitState::TAM_CLAMP;
+	uvwAddressMode.v =3D Ogre::TextureUnitState::TAM_CLAMP;
+	uvwAddressMode.w =3D Ogre::TextureUnitState::TAM_CLAMP;
+
+	RenderSys->_setWorldMatrix( Ogre::Matrix4::IDENTITY );
+	if (mUseWorldCam) {
+		RenderSys->_setViewMatrix( mCam->getViewMatrix() ); =

+		RenderSys->_setProjectionMatrix( mCam->getProjectionMatrixRS() );
+	} else {
+		int w =3D cOgreWrapper::GetSingleton().mViewport->getActualWidth();
+		int h =3D cOgreWrapper::GetSingleton().mViewport->getActualHeight();
+
+		Ogre::Matrix4 ViewportMatrix =3D Ogre::Matrix4::getScale( 2.0/w, -2.0/h,=
 1.0 );
+		RenderSys->_setViewMatrix( ViewportMatrix );
+		RenderSys->_setProjectionMatrix( Ogre::Matrix4::IDENTITY );
+	}
+
+	RenderSys->_setTextureMatrix( 0, Ogre::Matrix4::IDENTITY );
+	RenderSys->_setTextureCoordSet( 0, 0 );
+	RenderSys->_setTextureCoordCalculation( 0, Ogre::TEXCALC_NONE );
+	RenderSys->_setTextureUnitFiltering( 0, Ogre::FO_LINEAR, Ogre::FO_LINEAR,=
 Ogre::FO_NONE );
+	RenderSys->_setTextureBlendMode( 0, colorBlendMode );
+	RenderSys->_setTextureBlendMode( 0, alphaBlendMode );
+	RenderSys->_setTextureAddressingMode( 0, uvwAddressMode );
+	RenderSys->_disableTextureUnitsFrom( 1 );	=

+	RenderSys->_setFog( Ogre::FOG_NONE );
+	RenderSys->_setCullingMode( Ogre::CULL_NONE );
+	RenderSys->_setDepthBufferParams( false, false );
+	RenderSys->_setColourBufferWriteEnabled( true, true, true, false );
+	RenderSys->setShadingType( Ogre::SO_GOURAUD );
+	RenderSys->_setPolygonMode( Ogre::PM_SOLID );
+	RenderSys->unbindGpuProgram( Ogre::GPT_FRAGMENT_PROGRAM );
+	RenderSys->unbindGpuProgram( Ogre::GPT_VERTEX_PROGRAM );
+	RenderSys->_setSceneBlending( Ogre::SBF_SOURCE_ALPHA, Ogre::SBF_ONE_MINUS=
_SOURCE_ALPHA );
 	RenderSys->_setAlphaRejectSettings( Ogre::CMPF_GREATER, 128 );
 	RenderSys->setLightingEnabled( mLightningEnabled );
 }
@@ -301,14 +301,14 @@
 			delete SpriteQueue;
 		}
 	}
-}
-
-void cSpriteManager::renderQueueStarted( Ogre::uint8 queueGroupId, const O=
gre::String &invocation, bool &skipThisInvocation ) { PROFILE
-	if ( !mAfterQueue && queueGroupId =3D=3D mTargetQueue )
-      renderBuffer();
-}
-
-void cSpriteManager::renderQueueEnded( Ogre::uint8 queueGroupId, const Ogr=
e::String &invocation, bool &repeatThisInvocation ) { PROFILE
-	if ( mAfterQueue && queueGroupId =3D=3D mTargetQueue )
-      renderBuffer();
-}
+}
+
+void cSpriteManager::renderQueueStarted( Ogre::uint8 queueGroupId, const O=
gre::String &invocation, bool &skipThisInvocation ) { PROFILE
+	if ( !mAfterQueue && queueGroupId =3D=3D mTargetQueue )
+      renderBuffer();
+}
+
+void cSpriteManager::renderQueueEnded( Ogre::uint8 queueGroupId, const Ogr=
e::String &invocation, bool &repeatThisInvocation ) { PROFILE
+	if ( mAfterQueue && queueGroupId =3D=3D mTargetQueue )
+      renderBuffer();
+}



From no-reply at zwischenwelt.org  Thu Aug  2 02:27:57 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 00:27:57 -0000
Subject: [Iris-commit] [IRIS] r1326 - in /branches/knut/src: builder.cpp
 scripting.cpp spritemanager.cpp
Message-ID: <20070802002758.D9E80B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 02:27:57 2007
New Revision: 1326

Log:
linefeeds and merge corrections in src and include

Modified:
    branches/knut/src/builder.cpp
    branches/knut/src/scripting.cpp
    branches/knut/src/spritemanager.cpp

Modified: branches/knut/src/builder.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/builder.cpp (original)
+++ branches/knut/src/builder.cpp Thu Aug  2 02:27:57 2007
@@ -294,7 +294,6 @@
 		iHue =3D iHue & 0x7FFF;
 		short* ColorTable =3D pHueLoader->GetHue( iHue-1 )->GetColors();
 =

-		cHueFilter Filter;
 		if (PartialHue) {
 			cPartialHueFilter Filter;
 			gump->Decode(pImgRaw,iTexW*2,Filter,ColorTable);

Modified: branches/knut/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/scripting.cpp (original)
+++ branches/knut/src/scripting.cpp Thu Aug  2 02:27:57 2007
@@ -1,326 +1,326 @@
-#include "prefix.h"
-#include <assert.h>
-#include <stdarg.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include "net.h"
-#include "fifo.h"
-#include "game.h"
-#include "listener.h"
-#include "scripting.h"
-#include "input.h"
-#include "robstring1.2.h"
-#include "gfx3D.h"
-#include "gfx2D.h"
-#include "widget.h"
-#include "luabind.h"
-#include "data.h"
-#include "builder.h"
-#include "shell.h"
-#include "timer.h"
-#include "ogrewrapper.h"
-#include "pathsearch.h"
-#include "bitmask.h"
-#include "camera.h"
-#include "viewport.h"
-#include "rendertexture.h"
+#include "prefix.h"
+#include <assert.h>
+#include <stdarg.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include "net.h"
+#include "fifo.h"
+#include "game.h"
+#include "listener.h"
+#include "scripting.h"
+#include "input.h"
+#include "robstring1.2.h"
+#include "gfx3D.h"
+#include "gfx2D.h"
+#include "widget.h"
+#include "luabind.h"
+#include "data.h"
+#include "builder.h"
+#include "shell.h"
+#include "timer.h"
+#include "ogrewrapper.h"
+#include "pathsearch.h"
+#include "bitmask.h"
+#include "camera.h"
+#include "viewport.h"
+#include "rendertexture.h"
 #include "sound.h"
-#include "meshshape.h"
-#include "terrain.h"
-#include "radar.h"
-#include <Ogre.h>
-#include <OgreResourceManager.h>
-#include <OgreFontManager.h>
-#include <OgreTextAreaOverlayElement.h>
-#include <OgreMeshSerializer.h>
-#include <OgreCompositorManager.h>
-#include "luaxml.h"
-#include "spritemanager.h"
-#include "ogremanualloader.h"
-
-//#define PROFILE_LUACALLCOUNT
-#ifdef PROFILE_LUACALLCOUNT
-std::map<const char*,int> gPROFILE_LUACALLCOUNT;
-struct cPROFILE_LUACALLCOUNTSetCmp {
-  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const {
-	return x.second > y.second;
-  }
-};
-#endif
-
-#ifdef WIN32
-#include <windows.h>
-#else
-#include <unistd.h>
-#endif
-
-extern "C" {
-	#include "lua.h"
-	#include "lauxlib.h"
-	#include "lualib.h"
-}
-
-void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
-void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
-void	Material_LuaRegister	(void *L);
-void	Granny_LuaRegister		(void *L);
-void	PrintLuaStackTrace		();
-void	ProfileDumpCallCount	(); ///< defined in profile.cpp, only does somet=
hing if PROFILE_CALLCOUNT is enabled
-
-void	PrintLuaStackTrace		() { PROFILE
-	printf("PrintLuaStackTrace:\n");
-	// see l_TRACEBACK() : leaves a string containing the stacktrace at the t=
op of the stack
-	std::string sMyStackTrace;
-	cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
-	printf("%s\n",sMyStackTrace.c_str());
-}
-
-void	PrintLuaStackTrace		(const char *filename) { PROFILE
-	FILE *f =3D fopen(filename,"a");
-	if(f){
-		fprintf(f,"PrintLuaStackTrace:\n");
-		// see l_TRACEBACK() : leaves a string containing the stacktrace at the =
top of the stack
-		std::string sMyStackTrace;
-		cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
-		fprintf(f,"%s\n",sMyStackTrace.c_str());
-
-		fclose(f);
-	}
-}
-
-void	printdebug	(const char *szCategory, const char *szFormat, ...) { PROF=
ILE
-	va_list ap;
-	va_start(ap,szFormat);
-	gRobStringBuffer[0] =3D 0;
-	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,szFormat,ap);
-	cScripting::GetSingletonPtr()->LuaCall("printdebug","ss",szCategory,gRobS=
tringBuffer);
-	va_end(ap);
-}
-
-// ***** ***** global functionals exported to lua ***** *****
-
-
-cScripting*	cScripting::GetSingletonPtr	(cScripting* p) {
-	static cScripting* pSingleton =3D 0;
-	if (p) pSingleton =3D p;
-	return pSingleton;
-}
-
-
-/// called from lua : string keyname
-static int l_GetNamedKey (lua_State *L) { PROFILE
-	const char *keyname =3D luaL_checkstring(L, 1);
-	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult
-	return 1;  // number of results
-}
-
-/// called from lua : int keycode
-static int l_GetKeyName (lua_State *L) { PROFILE
-	int keycode =3D luaL_checkint(L, 1);
-	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult
-	return 1;  // number of results
-}
-
-/// terminates the application
-static int l_Terminate (lua_State *L) { PROFILE
-	cShell::mbAlive =3D false;
-	return 0;
-}
-
-/// only call this once at startup
-static int l_InitOgre (lua_State *L) { PROFILE
-	lua_pushboolean(L,cOgreWrapper::GetSingleton().Init());
-	return 1;
-}
-
-static int l_GetPointerSize (lua_State *L) { PROFILE
-	lua_pushnumber(L,sizeof(void*));
-	return 1;
-}
-
-/// only call this once at startup
-static int l_Client_IsAlive (lua_State *L) { PROFILE
-	lua_pushboolean(L,cShell::mbAlive);
-	return 1;
-}
-
-/// called from lua : no params, returns mousex,mousey,4xmousewheel info...
-static int l_PollInput (lua_State *L) { PROFILE
-	lua_pushnumber(L,cInput::iMouse[0]);
-	lua_pushnumber(L,cInput::iMouse[1]);
-	lua_pushnumber(L,cInput::iMouseWheel);
-	lua_pushnumber(L,cInput::iMouseWheel_pressed);
-	lua_pushnumber(L,cInput::iMouseWheel_all_since_last_step);
-	lua_pushnumber(L,cInput::iMouseWheel_pressed_since_last_step);
-	return 6;
-}
-
-
-static int l_ProfileDumpCallCount (lua_State *L) { PROFILE
-	ProfileDumpCallCount();
-
-	#ifdef PROFILE_LUACALLCOUNT
-	printf("LuaCallCounts:\n\n");
-
-	std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSetCmp> myC=
allCountProfileSet;
-	typedef std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSet=
Cmp>::iterator tLuaCallCountProfileSetItor;
-	{ for (std::map<const char*,int>::iterator itor=3DgPROFILE_LUACALLCOUNT.b=
egin();itor !=3D gPROFILE_LUACALLCOUNT.end();++itor)
-		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
));
-	}
-	int i=3D0;
-	for (tLuaCallCountProfileSetItor itor=3DmyCallCountProfileSet.begin();ito=
r !=3D myCallCountProfileSet.end();++itor) {
-		//if (++i > 10) break;
-		printf("LuaCallCallCount %16d %s\n",(*itor).second,(*itor).first);
-	}
-	#endif
-
-	return 0;
-}
-
-/// used as errfunc for lua_pcall, adds a callstack/backtrace/list_of_call=
ed_functions to the errormessage
-/// code from errorfb from /usr/src/lua-5.0.2/src/lua/ldblib.c
-/// "_TRACEBACK" is defined as errorfb
-/// leaves a string containing the stacktrace at the top of the stack
-#define LEVELS1	12	/* size of the first part of the stack */
-#define LEVELS2	10	/* size of the second part of the stack */
-static int l_TRACEBACK (lua_State *L) { PROFILE
-  int level =3D 1;  /* skip level 0 (it's this function) */
-  int firstpart =3D 1;  /* still before eventual `...' */
-  lua_Debug ar;
-  if (lua_gettop(L) =3D=3D 0)
-	lua_pushliteral(L, "");
-  else if (!lua_isstring(L, 1)) return 1;  /* no string message */
-  else lua_pushliteral(L, "\n");
-  lua_pushliteral(L, "LuaStackTrace:\n");
-  while (lua_getstack(L, level++, &ar)) {
-	if (level > LEVELS1 && firstpart) {
-	  /* no more than `LEVELS2' more levels? */
-	  if (!lua_getstack(L, level+LEVELS2, &ar))
-		level--;  /* keep going */
-	  else {
-		lua_pushliteral(L, "\n\t...");  /* too many levels */
-		while (lua_getstack(L, level+LEVELS2, &ar))  /* find last levels */
-		  level++;
-	  }
-	  firstpart =3D 0;
-	  continue;
-	}
-	lua_pushliteral(L, "\n\t");
-	lua_getinfo(L, "Snl", &ar);
-	lua_pushfstring(L, "%s:", ar.short_src);
-	if (ar.currentline > 0)
-	  lua_pushfstring(L, "%d:", ar.currentline);
-	switch (*ar.namewhat) {
-	  case 'g':  /* global */
-	  case 'l':  /* local */
-	  case 'f':  /* field */
-	  case 'm':  /* method */
-		lua_pushfstring(L, " in function `%s'", ar.name);
-		break;
-	  default: {
-		if (*ar.what =3D=3D 'm')  /* main? */
-		  lua_pushfstring(L, " in main chunk");
-		else if (*ar.what =3D=3D 'C' || *ar.what =3D=3D 't')
-		  lua_pushliteral(L, " ?");  /* C function or tail call */
-		else
-		  lua_pushfstring(L, " in function <%s:%d>",
-							 ar.short_src, ar.linedefined);
-	  }
-	}
-	lua_concat(L, lua_gettop(L));
-  }
-  lua_concat(L, lua_gettop(L));
-  return 1;
-}
-
-
-
-static int l_Client_GetCurFPS (lua_State *L) { PROFILE
-	lua_pushnumber(L, (cTimer::miTimeSinceLastFrame > 0) ? (float(1000.0) / f=
loat(cTimer::miTimeSinceLastFrame)) : 0.0 );
-	return 1;
-}
-
-static int l_Client_GetFrameNum (lua_State *L) { PROFILE
-	lua_pushnumber(L, cTimer::miCurFrameNum );
-	return 1;
-}
-
-static int l_Client_GetTicks (lua_State *L) { PROFILE
-	lua_pushnumber(L, cShell::GetTicks());
-	return 1;
-}
-
-
-/// void OgreAddCompositor(compositor script name)
-static int l_OgreAddCompositor (lua_State *L) { PROFILE
-	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
-//	printf("pViewport=3D%08x\n",pViewport);
-	if (pViewport)
-	{
-		const char *name =3D luaL_checkstring(L,2);
-		Ogre::CompositorManager::getSingleton().addCompositor(pViewport, name);
-		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, true);
-	}
-	else
-	{
-		return false;
-	}
-	return true;
-}
-
-/// void OgreRemoveCompositor(compositor script name)
-static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
-	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
-	if (pViewport)
-	{
-		const char *name =3D luaL_checkstring(L,2);
-		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, false);
-		Ogre::CompositorManager::getSingleton().removeCompositor(pViewport, name=
);
-	}
-	else
-	{
-		return false;
-	}
-	return true;
-}
-
-/// int =3D OgreMemoryUsage(part)
-/// part in {compositor,font,gpuprogram,highlevelgpuprogram,material,mesh,=
skeleton,texture,all}
-/// returns memory usage in byte
-static int l_OgreMemoryUsage (lua_State *L) { PROFILE
-	std::string part(luaL_checkstring(L,1));
-	size_t mem =3D 0;
-
-#ifdef OGRE_VERSION_SUFFIX
-	if(part.find("compositor") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::CompositorManager::getSingleton().getM=
emoryUsage();
-	if(part.find("font") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::FontManager::getSingleton().getMemoryUsage();
-	if(part.find("gpuprogram") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::GpuProgramManager::getSingleton().getM=
emoryUsage();
-	if(part.find("highlevelgpuprogram") !=3D std::string::npos || part.find("=
all") !=3D std::string::npos)mem +=3D Ogre::HighLevelGpuProgramManager::get=
Singleton().getMemoryUsage();
-	if(part.find("material") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::MaterialManager::getSingleton().getMemoryU=
sage();
-	if(part.find("mesh") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::MeshManager::getSingleton().getMemoryUsage();
-	if(part.find("skeleton") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::SkeletonManager::getSingleton().getMemoryU=
sage();
-	if(part.find("texture") !=3D std::string::npos || part.find("all") !=3D s=
td::string::npos)mem +=3D Ogre::TextureManager::getSingleton().getMemoryUsa=
ge();
-#endif
-
-	lua_pushnumber(L, mem);
-	return 1;
-}
-
-/// bool =3D OgreMeshAvailable(ressourcename)
-static int l_OgreMeshAvailable (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-
-	try {
-		Ogre::MeshManager::getSingleton().load(name,Ogre::ResourceGroupManager::=
DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-
-	lua_pushboolean(L, ret);
-	return 1;
-}
+#include "meshshape.h"
+#include "terrain.h"
+#include "radar.h"
+#include <Ogre.h>
+#include <OgreResourceManager.h>
+#include <OgreFontManager.h>
+#include <OgreTextAreaOverlayElement.h>
+#include <OgreMeshSerializer.h>
+#include <OgreCompositorManager.h>
+#include "luaxml.h"
+#include "spritemanager.h"
+#include "ogremanualloader.h"
+
+//#define PROFILE_LUACALLCOUNT
+#ifdef PROFILE_LUACALLCOUNT
+std::map<const char*,int> gPROFILE_LUACALLCOUNT;
+struct cPROFILE_LUACALLCOUNTSetCmp {
+  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const {
+	return x.second > y.second;
+  }
+};
+#endif
+
+#ifdef WIN32
+#include <windows.h>
+#else
+#include <unistd.h>
+#endif
+
+extern "C" {
+	#include "lua.h"
+	#include "lauxlib.h"
+	#include "lualib.h"
+}
+
+void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
+void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
+void	Material_LuaRegister	(void *L);
+void	Granny_LuaRegister		(void *L);
+void	PrintLuaStackTrace		();
+void	ProfileDumpCallCount	(); ///< defined in profile.cpp, only does somet=
hing if PROFILE_CALLCOUNT is enabled
+
+void	PrintLuaStackTrace		() { PROFILE
+	printf("PrintLuaStackTrace:\n");
+	// see l_TRACEBACK() : leaves a string containing the stacktrace at the t=
op of the stack
+	std::string sMyStackTrace;
+	cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
+	printf("%s\n",sMyStackTrace.c_str());
+}
+
+void	PrintLuaStackTrace		(const char *filename) { PROFILE
+	FILE *f =3D fopen(filename,"a");
+	if(f){
+		fprintf(f,"PrintLuaStackTrace:\n");
+		// see l_TRACEBACK() : leaves a string containing the stacktrace at the =
top of the stack
+		std::string sMyStackTrace;
+		cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
+		fprintf(f,"%s\n",sMyStackTrace.c_str());
+
+		fclose(f);
+	}
+}
+
+void	printdebug	(const char *szCategory, const char *szFormat, ...) { PROF=
ILE
+	va_list ap;
+	va_start(ap,szFormat);
+	gRobStringBuffer[0] =3D 0;
+	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,szFormat,ap);
+	cScripting::GetSingletonPtr()->LuaCall("printdebug","ss",szCategory,gRobS=
tringBuffer);
+	va_end(ap);
+}
+
+// ***** ***** global functionals exported to lua ***** *****
+
+
+cScripting*	cScripting::GetSingletonPtr	(cScripting* p) {
+	static cScripting* pSingleton =3D 0;
+	if (p) pSingleton =3D p;
+	return pSingleton;
+}
+
+
+/// called from lua : string keyname
+static int l_GetNamedKey (lua_State *L) { PROFILE
+	const char *keyname =3D luaL_checkstring(L, 1);
+	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult
+	return 1;  // number of results
+}
+
+/// called from lua : int keycode
+static int l_GetKeyName (lua_State *L) { PROFILE
+	int keycode =3D luaL_checkint(L, 1);
+	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult
+	return 1;  // number of results
+}
+
+/// terminates the application
+static int l_Terminate (lua_State *L) { PROFILE
+	cShell::mbAlive =3D false;
+	return 0;
+}
+
+/// only call this once at startup
+static int l_InitOgre (lua_State *L) { PROFILE
+	lua_pushboolean(L,cOgreWrapper::GetSingleton().Init());
+	return 1;
+}
+
+static int l_GetPointerSize (lua_State *L) { PROFILE
+	lua_pushnumber(L,sizeof(void*));
+	return 1;
+}
+
+/// only call this once at startup
+static int l_Client_IsAlive (lua_State *L) { PROFILE
+	lua_pushboolean(L,cShell::mbAlive);
+	return 1;
+}
+
+/// called from lua : no params, returns mousex,mousey,4xmousewheel info...
+static int l_PollInput (lua_State *L) { PROFILE
+	lua_pushnumber(L,cInput::iMouse[0]);
+	lua_pushnumber(L,cInput::iMouse[1]);
+	lua_pushnumber(L,cInput::iMouseWheel);
+	lua_pushnumber(L,cInput::iMouseWheel_pressed);
+	lua_pushnumber(L,cInput::iMouseWheel_all_since_last_step);
+	lua_pushnumber(L,cInput::iMouseWheel_pressed_since_last_step);
+	return 6;
+}
+
+
+static int l_ProfileDumpCallCount (lua_State *L) { PROFILE
+	ProfileDumpCallCount();
+
+	#ifdef PROFILE_LUACALLCOUNT
+	printf("LuaCallCounts:\n\n");
+
+	std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSetCmp> myC=
allCountProfileSet;
+	typedef std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSet=
Cmp>::iterator tLuaCallCountProfileSetItor;
+	{ for (std::map<const char*,int>::iterator itor=3DgPROFILE_LUACALLCOUNT.b=
egin();itor !=3D gPROFILE_LUACALLCOUNT.end();++itor)
+		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
));
+	}
+	int i=3D0;
+	for (tLuaCallCountProfileSetItor itor=3DmyCallCountProfileSet.begin();ito=
r !=3D myCallCountProfileSet.end();++itor) {
+		//if (++i > 10) break;
+		printf("LuaCallCallCount %16d %s\n",(*itor).second,(*itor).first);
+	}
+	#endif
+
+	return 0;
+}
+
+/// used as errfunc for lua_pcall, adds a callstack/backtrace/list_of_call=
ed_functions to the errormessage
+/// code from errorfb from /usr/src/lua-5.0.2/src/lua/ldblib.c
+/// "_TRACEBACK" is defined as errorfb
+/// leaves a string containing the stacktrace at the top of the stack
+#define LEVELS1	12	/* size of the first part of the stack */
+#define LEVELS2	10	/* size of the second part of the stack */
+static int l_TRACEBACK (lua_State *L) { PROFILE
+  int level =3D 1;  /* skip level 0 (it's this function) */
+  int firstpart =3D 1;  /* still before eventual `...' */
+  lua_Debug ar;
+  if (lua_gettop(L) =3D=3D 0)
+	lua_pushliteral(L, "");
+  else if (!lua_isstring(L, 1)) return 1;  /* no string message */
+  else lua_pushliteral(L, "\n");
+  lua_pushliteral(L, "LuaStackTrace:\n");
+  while (lua_getstack(L, level++, &ar)) {
+	if (level > LEVELS1 && firstpart) {
+	  /* no more than `LEVELS2' more levels? */
+	  if (!lua_getstack(L, level+LEVELS2, &ar))
+		level--;  /* keep going */
+	  else {
+		lua_pushliteral(L, "\n\t...");  /* too many levels */
+		while (lua_getstack(L, level+LEVELS2, &ar))  /* find last levels */
+		  level++;
+	  }
+	  firstpart =3D 0;
+	  continue;
+	}
+	lua_pushliteral(L, "\n\t");
+	lua_getinfo(L, "Snl", &ar);
+	lua_pushfstring(L, "%s:", ar.short_src);
+	if (ar.currentline > 0)
+	  lua_pushfstring(L, "%d:", ar.currentline);
+	switch (*ar.namewhat) {
+	  case 'g':  /* global */
+	  case 'l':  /* local */
+	  case 'f':  /* field */
+	  case 'm':  /* method */
+		lua_pushfstring(L, " in function `%s'", ar.name);
+		break;
+	  default: {
+		if (*ar.what =3D=3D 'm')  /* main? */
+		  lua_pushfstring(L, " in main chunk");
+		else if (*ar.what =3D=3D 'C' || *ar.what =3D=3D 't')
+		  lua_pushliteral(L, " ?");  /* C function or tail call */
+		else
+		  lua_pushfstring(L, " in function <%s:%d>",
+							 ar.short_src, ar.linedefined);
+	  }
+	}
+	lua_concat(L, lua_gettop(L));
+  }
+  lua_concat(L, lua_gettop(L));
+  return 1;
+}
+
+
+
+static int l_Client_GetCurFPS (lua_State *L) { PROFILE
+	lua_pushnumber(L, (cTimer::miTimeSinceLastFrame > 0) ? (float(1000.0) / f=
loat(cTimer::miTimeSinceLastFrame)) : 0.0 );
+	return 1;
+}
+
+static int l_Client_GetFrameNum (lua_State *L) { PROFILE
+	lua_pushnumber(L, cTimer::miCurFrameNum );
+	return 1;
+}
+
+static int l_Client_GetTicks (lua_State *L) { PROFILE
+	lua_pushnumber(L, cShell::GetTicks());
+	return 1;
+}
+
+
+/// void OgreAddCompositor(compositor script name)
+static int l_OgreAddCompositor (lua_State *L) { PROFILE
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+//	printf("pViewport=3D%08x\n",pViewport);
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().addCompositor(pViewport, name);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, true);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
+}
+
+/// void OgreRemoveCompositor(compositor script name)
+static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, false);
+		Ogre::CompositorManager::getSingleton().removeCompositor(pViewport, name=
);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
+}
+
+/// int =3D OgreMemoryUsage(part)
+/// part in {compositor,font,gpuprogram,highlevelgpuprogram,material,mesh,=
skeleton,texture,all}
+/// returns memory usage in byte
+static int l_OgreMemoryUsage (lua_State *L) { PROFILE
+	std::string part(luaL_checkstring(L,1));
+	size_t mem =3D 0;
+
+#ifdef OGRE_VERSION_SUFFIX
+	if(part.find("compositor") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::CompositorManager::getSingleton().getM=
emoryUsage();
+	if(part.find("font") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::FontManager::getSingleton().getMemoryUsage();
+	if(part.find("gpuprogram") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::GpuProgramManager::getSingleton().getM=
emoryUsage();
+	if(part.find("highlevelgpuprogram") !=3D std::string::npos || part.find("=
all") !=3D std::string::npos)mem +=3D Ogre::HighLevelGpuProgramManager::get=
Singleton().getMemoryUsage();
+	if(part.find("material") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::MaterialManager::getSingleton().getMemoryU=
sage();
+	if(part.find("mesh") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::MeshManager::getSingleton().getMemoryUsage();
+	if(part.find("skeleton") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::SkeletonManager::getSingleton().getMemoryU=
sage();
+	if(part.find("texture") !=3D std::string::npos || part.find("all") !=3D s=
td::string::npos)mem +=3D Ogre::TextureManager::getSingleton().getMemoryUsa=
ge();
+#endif
+
+	lua_pushnumber(L, mem);
+	return 1;
+}
+
+/// bool =3D OgreMeshAvailable(ressourcename)
+static int l_OgreMeshAvailable (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+
+	try {
+		Ogre::MeshManager::getSingleton().load(name,Ogre::ResourceGroupManager::=
DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+
+	lua_pushboolean(L, ret);
+	return 1;
+}
 =

 =

 /// see also OgreMaterialAvailable below
@@ -336,393 +336,393 @@
 	}
 	return 1;
 }
-
-/// see also OgreMaterialAvailable below
-/// bool =3D OgreMaterialNameKnown(ressourcename)
-/// returns false if name is empty string or nil
-static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE
-	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
-	if (sMatName.size() > 0) {
-		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
-		lua_pushboolean(L,!pMaterial.isNull());
-	} else {
-		lua_pushboolean(L,false);
-	}
-	return 1;
-}
-
-/// bool =3D OgreMaterialAvailable(ressourcename)
-static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
+
+/// see also OgreMaterialAvailable below
+/// bool =3D OgreMaterialNameKnown(ressourcename)
+/// returns false if name is empty string or nil
+static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE
+	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
+	if (sMatName.size() > 0) {
+		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
+		lua_pushboolean(L,!pMaterial.isNull());
+	} else {
+		lua_pushboolean(L,false);
+	}
+	return 1;
+}
+
+/// bool =3D OgreMaterialAvailable(ressourcename)
+static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
 	assert(0 && "DON'T USE ME, ALWAYS RETURNS TRUE"); =

 	// TODO, this code does not work, use l_OgreMaterialNameKnown  above
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-
-	try {
-		Ogre::MaterialManager::getSingleton().load(name,Ogre::ResourceGroupManag=
er::DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-
-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// bool =3D OgreTextureAvailable(ressourcename)
-static int l_OgreTextureAvailable (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-
-	try {
-		Ogre::TextureManager::getSingleton().load(name,Ogre::ResourceGroupManage=
r::DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-
-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// r,g,b =3D Uo16Color2Rgb(color)
-static int l_Uo16Color2Rgb (lua_State *L) { PROFILE
-	unsigned short color =3D luaL_checkint(L,1);
-
-	float r =3D float((color >> 10) & 0x1F)/float(0x1f);
-	float g =3D float((color >>  5) & 0x1F)/float(0x1f);
-	float b =3D float((color >>  0) & 0x1F)/float(0x1f);
-
-	lua_pushnumber(L, r);
-	lua_pushnumber(L, g);
-	lua_pushnumber(L, b);
-	return 3;
-}
-
-/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
-static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
-	std::string sTexturePath	=3D luaL_checkstring(L,1);
-	std::string sMaskPath		=3D luaL_checkstring(L,2);
-	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
-	int iHue					=3D luaL_checkint(L,4);
-
-	if (iHue =3D=3D 0 || !hueLoader) {
-		lua_pushstring(L,sTexturePath.c_str());
-		return 1;
-	}
-
-	// load image
-	Ogre::Image myImage;
-	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
-
-	// get image infos
-	Ogre::PixelFormat myFormat =3D myImage.getFormat();
-	unsigned int size =3D myImage.getSize();
-	unsigned int w =3D myImage.getWidth();
-	unsigned int h =3D myImage.getHeight();
-	unsigned int rowspan =3D myImage.getRowSpan();
-	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
-	//Ogre::uchar* dst =3D new Ogre::uchar[size];
-	Ogre::uchar* src =3D myImage.getData();
-	//Ogre::uchar* dst_start =3D dst;
-	Ogre::uchar* src_start =3D src;
-	uint8 cr,cg,cb,ca1,ca2;
-	short col;
-
-	// debug info
-	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
-	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
-
-	// hue filter
-	cHueFilter Filter;
-	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
-
-	// colorize the pixels
-	for(unsigned int y =3D 0; y < h; y++){
-		for(unsigned int x =3D 0; x < w; x++) {
-			// read out pixel in src graphic
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
-			// and hue the pixel
-			col =3D Filter( col, ColorTable );
-			// TODO ! respect mask instead of hueing the complete texture
-			// and store it in destination (ignoring the new alpha)
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
-			src +=3D pixelsize;
-			//dst +=3D pixelsize;
-		}
-		src +=3D rowspan - w*pixelsize;
-	}
-
-	// and make a texture
-	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
-	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
-	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
-
-	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
-		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
-
-	// free memory
-	//delete [] dst_start;
-
-	lua_pushstring(L,newtextname.c_str());
-	return 1;
-}
-
-/// void HueMesh(meshname, hueloader, hue)
-static int l_HueMesh (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+
+	try {
+		Ogre::MaterialManager::getSingleton().load(name,Ogre::ResourceGroupManag=
er::DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+
+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+/// bool =3D OgreTextureAvailable(ressourcename)
+static int l_OgreTextureAvailable (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+
+	try {
+		Ogre::TextureManager::getSingleton().load(name,Ogre::ResourceGroupManage=
r::DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+
+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+/// r,g,b =3D Uo16Color2Rgb(color)
+static int l_Uo16Color2Rgb (lua_State *L) { PROFILE
+	unsigned short color =3D luaL_checkint(L,1);
+
+	float r =3D float((color >> 10) & 0x1F)/float(0x1f);
+	float g =3D float((color >>  5) & 0x1F)/float(0x1f);
+	float b =3D float((color >>  0) & 0x1F)/float(0x1f);
+
+	lua_pushnumber(L, r);
+	lua_pushnumber(L, g);
+	lua_pushnumber(L, b);
+	return 3;
+}
+
+/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
+static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
+	std::string sTexturePath	=3D luaL_checkstring(L,1);
+	std::string sMaskPath		=3D luaL_checkstring(L,2);
+	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
+	int iHue					=3D luaL_checkint(L,4);
+
+	if (iHue =3D=3D 0 || !hueLoader) {
+		lua_pushstring(L,sTexturePath.c_str());
+		return 1;
+	}
+
+	// load image
+	Ogre::Image myImage;
+	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
+
+	// get image infos
+	Ogre::PixelFormat myFormat =3D myImage.getFormat();
+	unsigned int size =3D myImage.getSize();
+	unsigned int w =3D myImage.getWidth();
+	unsigned int h =3D myImage.getHeight();
+	unsigned int rowspan =3D myImage.getRowSpan();
+	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
+	//Ogre::uchar* dst =3D new Ogre::uchar[size];
+	Ogre::uchar* src =3D myImage.getData();
+	//Ogre::uchar* dst_start =3D dst;
+	Ogre::uchar* src_start =3D src;
+	uint8 cr,cg,cb,ca1,ca2;
+	short col;
+
+	// debug info
+	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
+	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
+
+	// hue filter
+	cHueFilter Filter;
+	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
+
+	// colorize the pixels
+	for(unsigned int y =3D 0; y < h; y++){
+		for(unsigned int x =3D 0; x < w; x++) {
+			// read out pixel in src graphic
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
+			// and hue the pixel
+			col =3D Filter( col, ColorTable );
+			// TODO ! respect mask instead of hueing the complete texture
+			// and store it in destination (ignoring the new alpha)
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
+			src +=3D pixelsize;
+			//dst +=3D pixelsize;
+		}
+		src +=3D rowspan - w*pixelsize;
+	}
+
+	// and make a texture
+	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
+	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
+	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
+
+	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
+		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
+
+	// free memory
+	//delete [] dst_start;
+
+	lua_pushstring(L,newtextname.c_str());
+	return 1;
+}
+
+/// void HueMesh(meshname, hueloader, hue)
+static int l_HueMesh (lua_State *L) { PROFILE
 	std::string sMeshName =3D luaL_checkstring(L,1);
-	const char *meshname =3D sMeshName.c_str();
-	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
-	int hue =3D luaL_checkint(L,3);
-
-	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
-	if(hueLoader && hue && meshname){
-		try	{
+	const char *meshname =3D sMeshName.c_str();
+	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
+	int hue =3D luaL_checkint(L,3);
+
+	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
+	if(hueLoader && hue && meshname){
+		try	{
 			cHueFilter Filter;
 			cHue* pMyHue =3D hueLoader->GetHue( hue-1 );
-			if (!pMyHue) return 0;
-			short* ColorTable =3D pMyHue->GetColors();
+			if (!pMyHue) return 0;
+			short* ColorTable =3D pMyHue->GetColors();
 			if (!ColorTable) return 0;
-
-			// data seem ok, so read out the mesh
-			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+
+			// data seem ok, so read out the mesh
+			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
 			if (mesh.isNull()) return 0;
-
-			//printf("mesh=3D%s\n",mesh->getName().c_str());
-
-			// and iterate over all submeshes
-			Ogre::Mesh::SubMeshIterator sit =3D mesh->getSubMeshIterator();
-			while(sit.hasMoreElements()){
-				Ogre::SubMesh *submesh =3D sit.getNext();
-				//printf("submesh=3D%i\n",submesh);
-
+
+			//printf("mesh=3D%s\n",mesh->getName().c_str());
+
+			// and iterate over all submeshes
+			Ogre::Mesh::SubMeshIterator sit =3D mesh->getSubMeshIterator();
+			while(sit.hasMoreElements()){
+				Ogre::SubMesh *submesh =3D sit.getNext();
+				//printf("submesh=3D%i\n",submesh);
+
 				if(!submesh) continue;
-				if(!submesh->isMatInitialised())continue;
-
-				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
-
-				// create hued texture in the current material and update the current
-				Ogre::MaterialPtr mat =3D Ogre::MaterialManager::getSingleton().load(s=
ubmesh->getMaterialName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME);
-				if(mat.isNull()){
-					printf("ERROR HueMesh: material %s is null\n",submesh->getMaterialNam=
e().c_str());
-					continue;
-				}
-
-				// clone current material for hueing
-				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
-				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
-				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
+				if(!submesh->isMatInitialised())continue;
+
+				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
+
+				// create hued texture in the current material and update the current
+				Ogre::MaterialPtr mat =3D Ogre::MaterialManager::getSingleton().load(s=
ubmesh->getMaterialName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME);
+				if(mat.isNull()){
+					printf("ERROR HueMesh: material %s is null\n",submesh->getMaterialNam=
e().c_str());
+					continue;
+				}
+
+				// clone current material for hueing
+				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
+				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
+				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
 				if (mat_hue.isNull()) return 0;
-				mat->copyDetailsTo(mat_hue);
-
-				// iterate over all techniques
-				Ogre::Material::TechniqueIterator tit =3D mat->getTechniqueIterator();
-				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
-				while(tit.hasMoreElements()){
-					Ogre::Technique *tech =3D tit.getNext();
+				mat->copyDetailsTo(mat_hue);
+
+				// iterate over all techniques
+				Ogre::Material::TechniqueIterator tit =3D mat->getTechniqueIterator();
+				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
+				while(tit.hasMoreElements()){
+					Ogre::Technique *tech =3D tit.getNext();
 					Ogre::Technique *tech_hue =3D tit_hue.getNext();
-					if (!tech || !tech_hue) continue;
-
-					// iterate over all passes
-					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
-					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
-					while(pit.hasMoreElements()){
-						Ogre::Pass *pass =3D pit.getNext();
+					if (!tech || !tech_hue) continue;
+
+					// iterate over all passes
+					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
+					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
+					while(pit.hasMoreElements()){
+						Ogre::Pass *pass =3D pit.getNext();
 						Ogre::Pass *pass_hue =3D pit_hue.getNext();
-						if (!pass || !pass_hue) continue;
-
-						// iterate over all tex units
-						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
-						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
-						while(uit.hasMoreElements()){
-							Ogre::TextureUnitState *unit =3D uit.getNext();
+						if (!pass || !pass_hue) continue;
+
+						// iterate over all tex units
+						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
+						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
+						while(uit.hasMoreElements()){
+							Ogre::TextureUnitState *unit =3D uit.getNext();
 							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
-							if (!unit || !unit_hue) continue;
-
-							// current texture
-							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
+							if (!unit || !unit_hue) continue;
+
+							// current texture
+							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
 							if (tex.isNull()) continue;
-
-							// lock and read access buffer
+
+							// lock and read access buffer
 							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
-							if (b.isNull()) continue;
-							// calc size of complete texture
-							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
-							// and lock (ro)
-							const Ogre::PixelBox box =3D b->lock(area,Ogre::HardwareBuffer::HBL=
_READ_ONLY);
-
-							// size of one pixel in bytes
-							unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(box.for=
mat);
-							// texture size in bytes
-							unsigned int size =3D box.getConsecutiveSize();
-
-							char *dst =3D new char[size+1024*32]; // add a little security over=
size
-							char *src =3D static_cast<char *>(box.data);
-
-							char *dst_start =3D dst;
-							char *src_start =3D src;
-
-							uint8 cr,cg,cb,ca1,ca2;
+							if (b.isNull()) continue;
+							// calc size of complete texture
+							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
+							// and lock (ro)
+							const Ogre::PixelBox box =3D b->lock(area,Ogre::HardwareBuffer::HBL=
_READ_ONLY);
+
+							// size of one pixel in bytes
+							unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(box.for=
mat);
+							// texture size in bytes
+							unsigned int size =3D box.getConsecutiveSize();
+
+							char *dst =3D new char[size+1024*32]; // add a little security over=
size
+							char *src =3D static_cast<char *>(box.data);
+
+							char *dst_start =3D dst;
+							char *src_start =3D src;
+
+							uint8 cr,cg,cb,ca1,ca2;
 							short col;
-							int dummy =3D 0;
-
-							// colorize the pixels
-							for(unsigned int y =3D 0; y < box.getHeight(); y++){
-								for(unsigned int x =3D 0; x < box.getWidth(); x++){
-									// read out pixel in src graphic
-									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,box.format,src);
-									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
-									// and hue the pixel
-									col =3D Filter( col, ColorTable );
-									//printf("RGBA_1(%i,%i,%i,%i)\n",cr,cg,cb,ca);
-									// and store it in destination (ignoring the new alpha)
-									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,=
&col);
-									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,box.format,dst);
-									//printf("RGBA_2(%i,%i,%i,%i)\n",cr,cg,cb,ca);
-									src +=3D pixelsize;
-									dst +=3D pixelsize;
-								}
-								src +=3D box.getRowSkip();
-							}
-
-							// and make a texture
-							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
-							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
-								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-							assert(!tex_hue.isNull() && "HueMesh bug");
-							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
-
-							// release the lock
-							b->unlock();
-
-							// set the texture
+							int dummy =3D 0;
+
+							// colorize the pixels
+							for(unsigned int y =3D 0; y < box.getHeight(); y++){
+								for(unsigned int x =3D 0; x < box.getWidth(); x++){
+									// read out pixel in src graphic
+									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,box.format,src);
+									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
+									// and hue the pixel
+									col =3D Filter( col, ColorTable );
+									//printf("RGBA_1(%i,%i,%i,%i)\n",cr,cg,cb,ca);
+									// and store it in destination (ignoring the new alpha)
+									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,=
&col);
+									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,box.format,dst);
+									//printf("RGBA_2(%i,%i,%i,%i)\n",cr,cg,cb,ca);
+									src +=3D pixelsize;
+									dst +=3D pixelsize;
+								}
+								src +=3D box.getRowSkip();
+							}
+
+							// and make a texture
+							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
+							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
+								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+							assert(!tex_hue.isNull() && "HueMesh bug");
+							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
+
+							// release the lock
+							b->unlock();
+
+							// set the texture
 							unit_hue->setTextureName(tex_hue->getName());
 =

 							// free memory
-							delete [] dst_start;
-						}
-					}
-				}
-
+							delete [] dst_start;
+						}
+					}
+				}
+
 				// set new material
-				if (mat_hue.isNull()) continue;
-				submesh->setMaterialName(mat_hue->getName());
-			}
-		} catch (Ogre::FileNotFoundException e){
-			printf("ERROR file not found, so HueMesh(%s) canceled\n",meshname);
-		}
-	}
-
-	return 0;
-}
-
-/// create a lua lookup table based on the given file
-/// usage: lookup[id] =3D new_id
-static int l_CreateLookupTableFromFile (lua_State *L) { PROFILE
-	const char *filename =3D luaL_checkstring(L, 1);
-	lua_newtable(L);
-
-	cFullFileLoader f(filename);
-
-	const uint32 *buffer =3D (const uint32 *)f.mpFullFileBuffer;
-
-	for(int i =3D 0;i < f.miFullFileSize / 4; ++i){
-		lua_pushnumber(L,i); lua_rawseti(L,-2,buffer[i]);
-	}
-
-	return 1;
-}
-
-
-static int l_Client_SetSkybox (lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().SetSkybox( (lua_gettop(L) > 0 && !lua_isnil(=
L,1)) ? luaL_checkstring(L, 1) : 0 , true );
-	return 0;
-}
-
-static int l_Client_SetFog (lua_State *L) { PROFILE
-	int i=3D0;
-	int numargs=3Dlua_gettop(L);
-	int iFogMode 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checkint(L,=
 ++i) : 0;
-	Ogre::Real r 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real g 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real b 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real a 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real expDensity 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_chec=
knumber(L, ++i) : 0.001;
-	Ogre::Real linearStart 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_che=
cknumber(L, ++i) : 0.0;
-	Ogre::Real linearEnd 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_check=
number(L, ++i) : 1.0;
-	/*
-	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White,
-					Real expDensity=3D0.001, Real linearStart=3D0.0, Real linearEnd=3D1.0)
-    0=3DFOG_NONE 	No fog. Duh.
-    1=3DFOG_EXP 	Fog density increases exponentially from the camera (fog =
=3D 1/e^(distance * density)).
-    2=3DFOG_EXP2 	Fog density increases at the square of FOG_EXP, i.e. eve=
n quicker (fog =3D 1/e^(distance * density)^2).
-    3=3DFOG_LINEAR 	Fog density increases linearly between the start and e=
nd distances.
-	*/
-	Ogre::FogMode      myFogMode =3D Ogre::FOG_NONE;
-	if (iFogMode =3D=3D 1) myFogMode =3D Ogre::FOG_EXP;
-	if (iFogMode =3D=3D 2) myFogMode =3D Ogre::FOG_EXP2;
-	if (iFogMode =3D=3D 3) myFogMode =3D Ogre::FOG_LINEAR;
-	cOgreWrapper::GetSingleton().mSceneMgr->setFog(myFogMode,Ogre::ColourValu=
e(r,g,b,a),expDensity,linearStart,linearEnd);
-	return 0;
-}
-
-static int l_Client_RenderOneFrame (lua_State *L) { PROFILE
-	cGame::GetSingleton().RenderOneFrame();
-	return 0;
-}
-
-/// just do nothing for x seconds
-static int l_Client_Sleep (lua_State *L) { PROFILE
-	//TODO correct win handling
-#ifndef WIN32
-	sleep(luaL_checkint(L,1));
-#else
-	Sleep(luaL_checkint(L,1)*1000); // takes milliseconds
-#endif
-	return 0;
-}
-
-/// just do nothing for x milliseconds (1000msec =3D 1sec)
-static int l_Client_USleep (lua_State *L) { PROFILE
-	//TODO correct win handling
-#ifndef WIN32
-	usleep((uint32)luaL_checkint(L,1)*(uint32)1000L); // usleep takes MICROse=
conds, where 1000 =3D 1 MILLIsecond
-#else
-	Sleep(luaL_checkint(L,1)); // takes milliseconds
-#endif
-	return 0;
-}
-
-
-
-static int l_Client_SetAmbientLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) pSceneMgr->setAmbientLight(Ogre::ColourValue(luaL_checknum=
ber(L,1),luaL_checknumber(L,2),luaL_checknumber(L,3),luaL_checknumber(L,4))=
);
-	return 0;
-}
-
-static int l_Client_ClearLights (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) pSceneMgr->destroyAllLights();
-	return 0;
-}
-
-static int l_Client_AddPointLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+				if (mat_hue.isNull()) continue;
+				submesh->setMaterialName(mat_hue->getName());
+			}
+		} catch (Ogre::FileNotFoundException e){
+			printf("ERROR file not found, so HueMesh(%s) canceled\n",meshname);
+		}
+	}
+
+	return 0;
+}
+
+/// create a lua lookup table based on the given file
+/// usage: lookup[id] =3D new_id
+static int l_CreateLookupTableFromFile (lua_State *L) { PROFILE
+	const char *filename =3D luaL_checkstring(L, 1);
+	lua_newtable(L);
+
+	cFullFileLoader f(filename);
+
+	const uint32 *buffer =3D (const uint32 *)f.mpFullFileBuffer;
+
+	for(int i =3D 0;i < f.miFullFileSize / 4; ++i){
+		lua_pushnumber(L,i); lua_rawseti(L,-2,buffer[i]);
+	}
+
+	return 1;
+}
+
+
+static int l_Client_SetSkybox (lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().SetSkybox( (lua_gettop(L) > 0 && !lua_isnil(=
L,1)) ? luaL_checkstring(L, 1) : 0 , true );
+	return 0;
+}
+
+static int l_Client_SetFog (lua_State *L) { PROFILE
+	int i=3D0;
+	int numargs=3Dlua_gettop(L);
+	int iFogMode 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checkint(L,=
 ++i) : 0;
+	Ogre::Real r 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real g 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real b 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real a 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real expDensity 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_chec=
knumber(L, ++i) : 0.001;
+	Ogre::Real linearStart 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_che=
cknumber(L, ++i) : 0.0;
+	Ogre::Real linearEnd 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_check=
number(L, ++i) : 1.0;
+	/*
+	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White,
+					Real expDensity=3D0.001, Real linearStart=3D0.0, Real linearEnd=3D1.0)
+    0=3DFOG_NONE 	No fog. Duh.
+    1=3DFOG_EXP 	Fog density increases exponentially from the camera (fog =
=3D 1/e^(distance * density)).
+    2=3DFOG_EXP2 	Fog density increases at the square of FOG_EXP, i.e. eve=
n quicker (fog =3D 1/e^(distance * density)^2).
+    3=3DFOG_LINEAR 	Fog density increases linearly between the start and e=
nd distances.
+	*/
+	Ogre::FogMode      myFogMode =3D Ogre::FOG_NONE;
+	if (iFogMode =3D=3D 1) myFogMode =3D Ogre::FOG_EXP;
+	if (iFogMode =3D=3D 2) myFogMode =3D Ogre::FOG_EXP2;
+	if (iFogMode =3D=3D 3) myFogMode =3D Ogre::FOG_LINEAR;
+	cOgreWrapper::GetSingleton().mSceneMgr->setFog(myFogMode,Ogre::ColourValu=
e(r,g,b,a),expDensity,linearStart,linearEnd);
+	return 0;
+}
+
+static int l_Client_RenderOneFrame (lua_State *L) { PROFILE
+	cGame::GetSingleton().RenderOneFrame();
+	return 0;
+}
+
+/// just do nothing for x seconds
+static int l_Client_Sleep (lua_State *L) { PROFILE
+	//TODO correct win handling
+#ifndef WIN32
+	sleep(luaL_checkint(L,1));
+#else
+	Sleep(luaL_checkint(L,1)*1000); // takes milliseconds
+#endif
+	return 0;
+}
+
+/// just do nothing for x milliseconds (1000msec =3D 1sec)
+static int l_Client_USleep (lua_State *L) { PROFILE
+	//TODO correct win handling
+#ifndef WIN32
+	usleep((uint32)luaL_checkint(L,1)*(uint32)1000L); // usleep takes MICROse=
conds, where 1000 =3D 1 MILLIsecond
+#else
+	Sleep(luaL_checkint(L,1)); // takes milliseconds
+#endif
+	return 0;
+}
+
+
+
+static int l_Client_SetAmbientLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) pSceneMgr->setAmbientLight(Ogre::ColourValue(luaL_checknum=
ber(L,1),luaL_checknumber(L,2),luaL_checknumber(L,3),luaL_checknumber(L,4))=
);
+	return 0;
+}
+
+static int l_Client_ClearLights (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) pSceneMgr->destroyAllLights();
+	return 0;
+}
+
+static int l_Client_AddPointLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
 	if (!pSceneMgr) return 0;
-	std::string sName =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	Ogre::Light* pLight =3D pSceneMgr->createLight( sName );
-	pLight->setType( Ogre::Light::LT_POINT );
-	pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_chec=
knumber(L,3));
-	pLight->setDiffuseColour(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
-	pLight->setSpecularColour(luaL_checknumber(L,7),luaL_checknumber(L,8),lua=
L_checknumber(L,9));
-	pLight->setAttenuation(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL=
_checknumber(L,12),luaL_checknumber(L,13));
+	std::string sName =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	Ogre::Light* pLight =3D pSceneMgr->createLight( sName );
+	pLight->setType( Ogre::Light::LT_POINT );
+	pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_chec=
knumber(L,3));
+	pLight->setDiffuseColour(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
+	pLight->setSpecularColour(luaL_checknumber(L,7),luaL_checknumber(L,8),lua=
L_checknumber(L,9));
+	pLight->setAttenuation(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL=
_checknumber(L,12),luaL_checknumber(L,13));
 	pLight->setCastShadows(false);
-	lua_pushstring(L,sName.c_str());
-	return 1;
+	lua_pushstring(L,sName.c_str());
+	return 1;
 }
 =

 static int l_Client_AddDirectionalLight (lua_State *L) { PROFILE
@@ -741,418 +741,418 @@
 	if (pSceneMgr) pSceneMgr->destroyLight(luaL_checkstring(L,1));
 	return 0;
 }
-
-
-static int l_Client_GetPhysStepTime (lua_State *L) { PROFILE
-	lua_pushnumber(L,cTimer::mfPhysStepTime);
-	return 1;
-}
-
-/// saved in main directory
-static int l_Client_TakeGridScreenshot (lua_State *L) { PROFILE
-	std::string filename =3D strprintf( "%shighres_%d", "../screenshots/", cS=
hell::GetTicks() );
-	std::string ext =3D ".jpg";
-	cOgreWrapper::GetSingleton().TakeGridScreenshot(3,filename,ext,true);
-	return 0;
-}
-
-/// saved in main directory
-static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().TakeScreenshot();
-	return 0;
-}
-
-void	OgreForceCloseFullscreen ();
-
-/// shows ogre config dialog
-static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
-	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
-	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
-	bIsFullscreen =3D true; // detection fails in linux ?
-	if (bIsFullscreen) {
-		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
-		OgreForceCloseFullscreen();
-	}
-	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
-	if (bIsFullscreen) cShell::mbAlive =3D false;
-	// the application shoudl terminate after this
-	// terminates the game if changes were made
-	return 1;
-}
-
-static int l_BuildTerrainEntity_Simple (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-	int i=3D5;
-	bool bGenerateNormals=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : true;
-	std::string meshname =3D BuildTerrainEntity_Simple(
-		pGroundBlockLoader,
-		luaL_checkint(L,2),luaL_checkint(L,3),
-		luaL_checkint(L,4),luaL_checkint(L,5),bGenerateNormals);
-	if (meshname.length() =3D=3D 0) return 0;
-	lua_pushstring(L,meshname.c_str());
-	return 1;
-}
-
-static int l_BuildTerrainEntity_Shaded (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-	std::string meshname =3D BuildTerrainEntity_Shaded(
-		pGroundBlockLoader,
-		luaL_checkint(L,2),luaL_checkint(L,3),
-		luaL_checkint(L,4),luaL_checkint(L,5));
-	if (meshname.length() =3D=3D 0) return 0;
-	lua_pushstring(L,meshname.c_str());
-	return 1;
-}
-
-/// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
-/// for lua : TerrainRayPick(GroundBlockLoader,blockx,blocky,vBlockPosX,vB=
lockPosY,vBlockPosZ,rx,ry,rz,rvx,rvy,rvz)  -- mainly for mousepicking
-static int l_TerrainRayPick (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-
-	// don't use ++i or something here, the compiler might mix the order
-	Ogre::Vector3 	vBlockPos(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
-	Ogre::Vector3	vRayPos(luaL_checknumber(L,7),luaL_checknumber(L,8),luaL_ch=
ecknumber(L,9));
-	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
-
-	// feedback via lua callback TerrainRayIntersect_Hit()
-	TerrainRayIntersect(pGroundBlockLoader,luaL_checkint(L,2),luaL_checkint(L=
,3),vRayPos-vBlockPos,vRayDir);
-	return 0;
-}
-
-/// for lua : dist =3D SphereRayPick(x,y,z,rad,rx,ry,rz,rvx,rvy,rvz)  -- m=
ainly for mousepicking, dist=3Dnil if not hit
-static int l_SphereRayPick (lua_State *L) { PROFILE
-	// don't use ++i or something here, the compiler might mix the order
-	Ogre::Vector3 	vSpherePos(	luaL_checknumber(L,1),luaL_checknumber(L,2),lu=
aL_checknumber(L,3));
-	float			fSphereRad =3D luaL_checknumber(L,4);
-	Ogre::Vector3	vRayPos(	luaL_checknumber(L,5),luaL_checknumber(L,6),luaL_c=
hecknumber(L,7));
-	Ogre::Vector3	vRayDir(	luaL_checknumber(L,8),luaL_checknumber(L,9),luaL_c=
hecknumber(L,10));
-
-	std::pair<bool, Real> hit =3D Ogre::Ray(vRayPos,vRayDir).intersects(Ogre:=
:Sphere(vSpherePos,fSphereRad));
-	if (!hit.first) return 0;
-	lua_pushnumber(L,hit.second);
-	return 1;
-}
-
-
+
+
+static int l_Client_GetPhysStepTime (lua_State *L) { PROFILE
+	lua_pushnumber(L,cTimer::mfPhysStepTime);
+	return 1;
+}
+
+/// saved in main directory
+static int l_Client_TakeGridScreenshot (lua_State *L) { PROFILE
+	std::string filename =3D strprintf( "%shighres_%d", "../screenshots/", cS=
hell::GetTicks() );
+	std::string ext =3D ".jpg";
+	cOgreWrapper::GetSingleton().TakeGridScreenshot(3,filename,ext,true);
+	return 0;
+}
+
+/// saved in main directory
+static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().TakeScreenshot();
+	return 0;
+}
+
+void	OgreForceCloseFullscreen ();
+
+/// shows ogre config dialog
+static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
+	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
+	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
+	bIsFullscreen =3D true; // detection fails in linux ?
+	if (bIsFullscreen) {
+		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
+		OgreForceCloseFullscreen();
+	}
+	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
+	if (bIsFullscreen) cShell::mbAlive =3D false;
+	// the application shoudl terminate after this
+	// terminates the game if changes were made
+	return 1;
+}
+
+static int l_BuildTerrainEntity_Simple (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+	int i=3D5;
+	bool bGenerateNormals=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : true;
+	std::string meshname =3D BuildTerrainEntity_Simple(
+		pGroundBlockLoader,
+		luaL_checkint(L,2),luaL_checkint(L,3),
+		luaL_checkint(L,4),luaL_checkint(L,5),bGenerateNormals);
+	if (meshname.length() =3D=3D 0) return 0;
+	lua_pushstring(L,meshname.c_str());
+	return 1;
+}
+
+static int l_BuildTerrainEntity_Shaded (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+	std::string meshname =3D BuildTerrainEntity_Shaded(
+		pGroundBlockLoader,
+		luaL_checkint(L,2),luaL_checkint(L,3),
+		luaL_checkint(L,4),luaL_checkint(L,5));
+	if (meshname.length() =3D=3D 0) return 0;
+	lua_pushstring(L,meshname.c_str());
+	return 1;
+}
+
+/// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
+/// for lua : TerrainRayPick(GroundBlockLoader,blockx,blocky,vBlockPosX,vB=
lockPosY,vBlockPosZ,rx,ry,rz,rvx,rvy,rvz)  -- mainly for mousepicking
+static int l_TerrainRayPick (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+
+	// don't use ++i or something here, the compiler might mix the order
+	Ogre::Vector3 	vBlockPos(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
+	Ogre::Vector3	vRayPos(luaL_checknumber(L,7),luaL_checknumber(L,8),luaL_ch=
ecknumber(L,9));
+	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
+
+	// feedback via lua callback TerrainRayIntersect_Hit()
+	TerrainRayIntersect(pGroundBlockLoader,luaL_checkint(L,2),luaL_checkint(L=
,3),vRayPos-vBlockPos,vRayDir);
+	return 0;
+}
+
+/// for lua : dist =3D SphereRayPick(x,y,z,rad,rx,ry,rz,rvx,rvy,rvz)  -- m=
ainly for mousepicking, dist=3Dnil if not hit
+static int l_SphereRayPick (lua_State *L) { PROFILE
+	// don't use ++i or something here, the compiler might mix the order
+	Ogre::Vector3 	vSpherePos(	luaL_checknumber(L,1),luaL_checknumber(L,2),lu=
aL_checknumber(L,3));
+	float			fSphereRad =3D luaL_checknumber(L,4);
+	Ogre::Vector3	vRayPos(	luaL_checknumber(L,5),luaL_checknumber(L,6),luaL_c=
hecknumber(L,7));
+	Ogre::Vector3	vRayDir(	luaL_checknumber(L,8),luaL_checknumber(L,9),luaL_c=
hecknumber(L,10));
+
+	std::pair<bool, Real> hit =3D Ogre::Ray(vRayPos,vRayDir).intersects(Ogre:=
:Sphere(vSpherePos,fSphereRad));
+	if (!hit.first) return 0;
+	lua_pushnumber(L,hit.second);
+	return 1;
+}
+
+
 static int l_UnloadMeshName (lua_State *L) { PROFILE
 	const char* szMeshName =3D luaL_checkstring(L,1);
 	Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(szMeshName,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
 	if (mesh.isNull()) return 0;
 	mesh->unload();
-	UnloadMeshShape(szMeshName);
-	//Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
-	return 0;
-}
-
-static int l_CountMeshTriangles (lua_State *L) { PROFILE
-	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
-					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
-	int res =3D 0;
-	for (int i=3D0;i<pMesh->getNumSubMeshes();++i) {
-		Ogre::SubMesh *pSub =3D pMesh->getSubMesh(i);
-		if (pSub && pSub->indexData) res +=3D pSub->indexData->indexCount / 3;
-	}
-	lua_pushnumber(L,res);
-	return 1;
-}
-
-static int l_getUOPath(lua_State *L) { PROFILE
-	std::string res =3D getUOPath();
-	if (res.length() =3D=3D 0) return 0;
-	lua_pushstring(L,res.c_str());
-	return 1;
-}
-
-/// attempts to correct case-sensitivity for filepaths
-static int l_PathSearch (lua_State *L) { PROFILE
-	std::string res =3D rob_pathsearch(luaL_checkstring(L,1));
-	if (res.length() =3D=3D 0) return 0;
-	lua_pushstring(L,res.c_str());
-	return 1;
-}
-
-static int l_file_exists (lua_State *L) { PROFILE
-	std::ifstream	myFileStream(luaL_checkstring(L,1));
-	lua_pushboolean(L,myFileStream?true:false);
-	return 1;
-}
-
-static int l_file_size (lua_State *L) { PROFILE
-	std::ifstream	myFileStream(luaL_checkstring(L,1));
-	int iFileSize =3D 0;
-	if (myFileStream) {
-		myFileStream.seekg(0, std::ios::end);
-		iFileSize =3D myFileStream.tellg();
-	}
-	lua_pushnumber(L,iFileSize);
-	return 1;
-}
-
-
-// for testing bitwise ops
-static int l_GetRandomHexString 	(lua_State *L) { PROFILE lua_pushstring( =
L, strprintf("0x%08x",rand()).c_str()); return 1; }
-
-/// converts "0x1234" to a number
-static int l_Hex2Num 	(lua_State *L) { PROFILE
-	std::string hexcode =3D luaL_checkstring(L,1);
-	uint32 res =3D 0;
-	sscanf(hexcode.c_str(),"0x%x",&res);
-	lua_pushnumber(L, res);
-	return 1;
-}
-
-// bitwise operations, used for networking, packet manipulation etc
-static int l_BitwiseAND 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a & b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-static int l_BitwiseOR 		(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a | b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-
-
-static int l_BitwiseXOR 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a ^ b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-
-// bitwise operations, used for networking, packet manipulation etc
-static int l_BitwiseSHL 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a << b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-// bitwise operations, used for networking, packet manipulation etc
-static int l_BitwiseSHR 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);
-	uint32 c =3D a >> b;
-	lua_pushnumber( L, c);
-	return 1;
-}
-
-
-static int l_TestBit 		(lua_State *L) { PROFILE lua_pushboolean(L,(uint32(=
luaL_checknumber(L,1)) & (uint32(1) << luaL_checkint(L,2))) !=3D 0); return=
 1; }
-static int l_SetBit 		(lua_State *L) { PROFILE lua_pushnumber( L,(uint32(l=
uaL_checknumber(L,1)) | (uint32(1) << luaL_checkint(L,2)))); return 1; }
-static int l_ClearBit 		(lua_State *L) { PROFILE
-	uint32 input =3D uint32(luaL_checknumber(L,1));
-	uint32 mask =3D 1L << uint32(luaL_checknumber(L,2));
-	lua_pushnumber(L,(input & mask)?(input ^ mask):(input));  // XOR =3D ^ =
=3D toggle bit... toggle only if set (&) to clear
-	return 1;
-}
-
-
-static int l_Exit		 		(lua_State *L) { PROFILE
-	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0);
-	return 0;
-}
+	UnloadMeshShape(szMeshName);
+	//Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
+	return 0;
+}
+
+static int l_CountMeshTriangles (lua_State *L) { PROFILE
+	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
+					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
+	int res =3D 0;
+	for (int i=3D0;i<pMesh->getNumSubMeshes();++i) {
+		Ogre::SubMesh *pSub =3D pMesh->getSubMesh(i);
+		if (pSub && pSub->indexData) res +=3D pSub->indexData->indexCount / 3;
+	}
+	lua_pushnumber(L,res);
+	return 1;
+}
+
+static int l_getUOPath(lua_State *L) { PROFILE
+	std::string res =3D getUOPath();
+	if (res.length() =3D=3D 0) return 0;
+	lua_pushstring(L,res.c_str());
+	return 1;
+}
+
+/// attempts to correct case-sensitivity for filepaths
+static int l_PathSearch (lua_State *L) { PROFILE
+	std::string res =3D rob_pathsearch(luaL_checkstring(L,1));
+	if (res.length() =3D=3D 0) return 0;
+	lua_pushstring(L,res.c_str());
+	return 1;
+}
+
+static int l_file_exists (lua_State *L) { PROFILE
+	std::ifstream	myFileStream(luaL_checkstring(L,1));
+	lua_pushboolean(L,myFileStream?true:false);
+	return 1;
+}
+
+static int l_file_size (lua_State *L) { PROFILE
+	std::ifstream	myFileStream(luaL_checkstring(L,1));
+	int iFileSize =3D 0;
+	if (myFileStream) {
+		myFileStream.seekg(0, std::ios::end);
+		iFileSize =3D myFileStream.tellg();
+	}
+	lua_pushnumber(L,iFileSize);
+	return 1;
+}
+
+
+// for testing bitwise ops
+static int l_GetRandomHexString 	(lua_State *L) { PROFILE lua_pushstring( =
L, strprintf("0x%08x",rand()).c_str()); return 1; }
+
+/// converts "0x1234" to a number
+static int l_Hex2Num 	(lua_State *L) { PROFILE
+	std::string hexcode =3D luaL_checkstring(L,1);
+	uint32 res =3D 0;
+	sscanf(hexcode.c_str(),"0x%x",&res);
+	lua_pushnumber(L, res);
+	return 1;
+}
+
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseAND 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a & b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+static int l_BitwiseOR 		(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a | b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+
+
+static int l_BitwiseXOR 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a ^ b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseSHL 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a << b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseSHR 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);
+	uint32 c =3D a >> b;
+	lua_pushnumber( L, c);
+	return 1;
+}
+
+
+static int l_TestBit 		(lua_State *L) { PROFILE lua_pushboolean(L,(uint32(=
luaL_checknumber(L,1)) & (uint32(1) << luaL_checkint(L,2))) !=3D 0); return=
 1; }
+static int l_SetBit 		(lua_State *L) { PROFILE lua_pushnumber( L,(uint32(l=
uaL_checknumber(L,1)) | (uint32(1) << luaL_checkint(L,2)))); return 1; }
+static int l_ClearBit 		(lua_State *L) { PROFILE
+	uint32 input =3D uint32(luaL_checknumber(L,1));
+	uint32 mask =3D 1L << uint32(luaL_checknumber(L,2));
+	lua_pushnumber(L,(input & mask)?(input ^ mask):(input));  // XOR =3D ^ =
=3D toggle bit... toggle only if set (&) to clear
+	return 1;
+}
+
+
+static int l_Exit		 		(lua_State *L) { PROFILE
+	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0);
+	return 0;
+}
 =

 void MyCrash		(const char* szMessage); // see main.cpp
-
+
 static int l_Crash		 		(lua_State *L) { PROFILE
 	MyCrash("CRASH triggered from script, see console for info (start with co=
mmandline option -c)"); // does not return...
-	exit(88);  =

+	exit(88);  =

 	return 0; =

-}
-
-/// triggers a segfault, for testing our segfault handlers lua stacktrace
-static int l_CrashSegFault		 		(lua_State *L) { PROFILE
-	DisplayErrorMessage("testing segfault handler...");
-	*((char*)0) =3D 0; // trigger segfault
-	return 0;
-}
-
-
-static int l_DisplayNotice	(lua_State *L) { PROFILE
-	DisplayNotice(luaL_checkstring(L,1));
-	return 0;
-}
-
-
-static int l_FatalErrorMessage	(lua_State *L) { PROFILE
-	DisplayErrorMessage(luaL_checkstring(L,1));
-	exit(77);
-	return 0;
-}
-
-
-/// for lua :   void  ExportMesh  (meshname,filename)
-static int l_ExportMesh		(lua_State *L) { PROFILE
-	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
-					// autodetect group location
-					//Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME );
-					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
-	Ogre::MeshSerializer myExporter;
-	//Ogre::Mesh* pMesh =3D pEntity->getMesh().get();
-	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2));
-	return 0;
-}
-
-/// for lua :   x,y,z,vx,vy,vz  GetMouseRay  ()
-static int l_GetMouseRay		(lua_State *L) { PROFILE
-	cOgreWrapper& ogrewrapper =3D cOgreWrapper::GetSingleton();
-	Ogre::Ray myray(	ogrewrapper.mCamera->getCameraToViewportRay(
-				Ogre::Real(cInput::iMouse[0]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualWidth()),
-				Ogre::Real(cInput::iMouse[1]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualHeight()) ));
-	lua_pushnumber(L,myray.getOrigin().x);
-	lua_pushnumber(L,myray.getOrigin().y);
-	lua_pushnumber(L,myray.getOrigin().z);
-	lua_pushnumber(L,myray.getDirection().x);
-	lua_pushnumber(L,myray.getDirection().y);
-	lua_pushnumber(L,myray.getDirection().z);
-	return 6;
-}
-
-/// for lua :   z  GetMaxZ  ()
-static int 		l_GetMaxZ		(lua_State *L) { PROFILE
-	lua_pushnumber(L,Ogre::Root::getSingleton().getRenderSystem()->getMaximum=
DepthInputValue());
-	return 1;
-}
-
-
-/// for lua :   bIsInFront,px,py  ProjectPos  (x,y,z)
-static int l_ProjectPos		(lua_State *L) { PROFILE
-	bool 		bIsInFront;
-	Ogre::Real	fX,fY;
-	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectPos(
-		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY);
-	lua_pushboolean(L,bIsInFront);
-	lua_pushnumber(L,fX);
-	lua_pushnumber(L,fY);
-	return 3;
-}
-
-/// for lua :   bIsInFront,px,py,cx,cy  ProjectSizeAndPos  (x,y,z,r)
-static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE
-	bool 		bIsInFront;
-	Ogre::Real	fX,fY,fCX,fCY;
-	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectSizeAndPos(
-		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY,luaL_checknumber(L,3),fCX,fCY);
-	lua_pushboolean(L,bIsInFront);
-	lua_pushnumber(L,fX);
-	lua_pushnumber(L,fY);
-	lua_pushnumber(L,fCX);
-	lua_pushnumber(L,fCY);
-	return 5;
-}
-
-
-
-/// for lua :   void  CreateSceneManager  (sSceneManagerName)
-static int l_CreateSceneManager		(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
-	cOgreWrapper::GetSingleton().mRoot->createSceneManager(Ogre::ST_GENERIC,l=
uaL_checkstring(L,1));
-	return 0;
-}
-
-/// for lua :   table[id=3Dtexname...]  OgreMeshTextures  (meshfile)
-static int l_OgreMeshTextures	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
-	Ogre::MeshSerializer* meshSerializer =3D new Ogre::MeshSerializer();
-	const char *szMeshName =3D luaL_checkstring(L,1);
-
-	lua_newtable(L);
-
-	//printf("open file: %s\n",szMeshName);
-	// model file
-	std::ifstream ifs;
-	ifs.open(szMeshName, std::ios_base::in | std::ios_base::binary);
-	Ogre::DataStreamPtr stream(new Ogre::FileStreamDataStream(&ifs, false));
-
-	if(ifs.is_open()){
-		//printf("create tmp mesh\n");
-		// create tmp mesh import resource
-		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion",
-			Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-
-		//printf("import\n");
-		// import
-		meshSerializer->importMesh(stream, mesh.getPointer());
-
-		if(!mesh.isNull()){
-			// iterator over submeshes
-			Ogre::Mesh::SubMeshIterator it =3D mesh->getSubMeshIterator();
-			int i =3D 1;
-			while(it.hasMoreElements()){
-				Ogre::SubMesh *submesh =3D it.getNext();
-				std::string tex =3D submesh->getMaterialName();
-				//printf("material found: %s\n",tex.c_str());
-				lua_pushstring(L,tex.c_str()); lua_rawseti(L,-2,i);
-				++i;
-			}
-		}
-
-		// remove all stuff
-		Ogre::MeshManager::getSingleton().remove("l_OgreMeshTextureMissing_conve=
rsion");
-
-		ifs.close();
-	} else {
-		printf("ERROR can't open file: %s\n",szMeshName);
-	}
-
-	delete meshSerializer;
-
-	return 1;
-}
-
-
-/// for lua :   void OgreShadowTechnique  (string techique)
-static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
-	const char *tech =3D luaL_checkstring(L,1);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-
-	if(p){
-		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
-		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
-		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
-		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
-		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
-		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
-		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
-	}
-    return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTextureSize  (int size)
-static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
-	return 0;
-}
-
-
-
-/// for lua :   void	  OgreSetShadowFarDistance	(float x)
-static int 				l_OgreSetShadowFarDistance	(lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowFarDistance(luaL_checknu=
mber(L,1));
-	return 0;
+}
+
+/// triggers a segfault, for testing our segfault handlers lua stacktrace
+static int l_CrashSegFault		 		(lua_State *L) { PROFILE
+	DisplayErrorMessage("testing segfault handler...");
+	*((char*)0) =3D 0; // trigger segfault
+	return 0;
+}
+
+
+static int l_DisplayNotice	(lua_State *L) { PROFILE
+	DisplayNotice(luaL_checkstring(L,1));
+	return 0;
+}
+
+
+static int l_FatalErrorMessage	(lua_State *L) { PROFILE
+	DisplayErrorMessage(luaL_checkstring(L,1));
+	exit(77);
+	return 0;
+}
+
+
+/// for lua :   void  ExportMesh  (meshname,filename)
+static int l_ExportMesh		(lua_State *L) { PROFILE
+	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
+					// autodetect group location
+					//Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME );
+					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
+	Ogre::MeshSerializer myExporter;
+	//Ogre::Mesh* pMesh =3D pEntity->getMesh().get();
+	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2));
+	return 0;
+}
+
+/// for lua :   x,y,z,vx,vy,vz  GetMouseRay  ()
+static int l_GetMouseRay		(lua_State *L) { PROFILE
+	cOgreWrapper& ogrewrapper =3D cOgreWrapper::GetSingleton();
+	Ogre::Ray myray(	ogrewrapper.mCamera->getCameraToViewportRay(
+				Ogre::Real(cInput::iMouse[0]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualWidth()),
+				Ogre::Real(cInput::iMouse[1]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualHeight()) ));
+	lua_pushnumber(L,myray.getOrigin().x);
+	lua_pushnumber(L,myray.getOrigin().y);
+	lua_pushnumber(L,myray.getOrigin().z);
+	lua_pushnumber(L,myray.getDirection().x);
+	lua_pushnumber(L,myray.getDirection().y);
+	lua_pushnumber(L,myray.getDirection().z);
+	return 6;
+}
+
+/// for lua :   z  GetMaxZ  ()
+static int 		l_GetMaxZ		(lua_State *L) { PROFILE
+	lua_pushnumber(L,Ogre::Root::getSingleton().getRenderSystem()->getMaximum=
DepthInputValue());
+	return 1;
+}
+
+
+/// for lua :   bIsInFront,px,py  ProjectPos  (x,y,z)
+static int l_ProjectPos		(lua_State *L) { PROFILE
+	bool 		bIsInFront;
+	Ogre::Real	fX,fY;
+	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectPos(
+		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY);
+	lua_pushboolean(L,bIsInFront);
+	lua_pushnumber(L,fX);
+	lua_pushnumber(L,fY);
+	return 3;
+}
+
+/// for lua :   bIsInFront,px,py,cx,cy  ProjectSizeAndPos  (x,y,z,r)
+static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE
+	bool 		bIsInFront;
+	Ogre::Real	fX,fY,fCX,fCY;
+	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectSizeAndPos(
+		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY,luaL_checknumber(L,3),fCX,fCY);
+	lua_pushboolean(L,bIsInFront);
+	lua_pushnumber(L,fX);
+	lua_pushnumber(L,fY);
+	lua_pushnumber(L,fCX);
+	lua_pushnumber(L,fCY);
+	return 5;
+}
+
+
+
+/// for lua :   void  CreateSceneManager  (sSceneManagerName)
+static int l_CreateSceneManager		(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
+	cOgreWrapper::GetSingleton().mRoot->createSceneManager(Ogre::ST_GENERIC,l=
uaL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   table[id=3Dtexname...]  OgreMeshTextures  (meshfile)
+static int l_OgreMeshTextures	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
+	Ogre::MeshSerializer* meshSerializer =3D new Ogre::MeshSerializer();
+	const char *szMeshName =3D luaL_checkstring(L,1);
+
+	lua_newtable(L);
+
+	//printf("open file: %s\n",szMeshName);
+	// model file
+	std::ifstream ifs;
+	ifs.open(szMeshName, std::ios_base::in | std::ios_base::binary);
+	Ogre::DataStreamPtr stream(new Ogre::FileStreamDataStream(&ifs, false));
+
+	if(ifs.is_open()){
+		//printf("create tmp mesh\n");
+		// create tmp mesh import resource
+		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion",
+			Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+
+		//printf("import\n");
+		// import
+		meshSerializer->importMesh(stream, mesh.getPointer());
+
+		if(!mesh.isNull()){
+			// iterator over submeshes
+			Ogre::Mesh::SubMeshIterator it =3D mesh->getSubMeshIterator();
+			int i =3D 1;
+			while(it.hasMoreElements()){
+				Ogre::SubMesh *submesh =3D it.getNext();
+				std::string tex =3D submesh->getMaterialName();
+				//printf("material found: %s\n",tex.c_str());
+				lua_pushstring(L,tex.c_str()); lua_rawseti(L,-2,i);
+				++i;
+			}
+		}
+
+		// remove all stuff
+		Ogre::MeshManager::getSingleton().remove("l_OgreMeshTextureMissing_conve=
rsion");
+
+		ifs.close();
+	} else {
+		printf("ERROR can't open file: %s\n",szMeshName);
+	}
+
+	delete meshSerializer;
+
+	return 1;
+}
+
+
+/// for lua :   void OgreShadowTechnique  (string techique)
+static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
+	const char *tech =3D luaL_checkstring(L,1);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+
+	if(p){
+		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
+		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
+		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
+		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
+		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
+		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
+		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
+	}
+    return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureSize  (int size)
+static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
+	return 0;
+}
+
+
+
+/// for lua :   void	  OgreSetShadowFarDistance	(float x)
+static int 				l_OgreSetShadowFarDistance	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowFarDistance(luaL_checknu=
mber(L,1));
+	return 0;
 }
 =

 /// for lua :   void	  OgreSetShadowDirLightTextureOffset	(float x)
@@ -1171,13 +1171,13 @@
 static int 				l_OgreSetShadowTextureFadeEnd	(lua_State *L) { PROFILE
 	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureFadeEnd(luaL_chec=
knumber(L,1));
 	return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTexturePixelFormat	()
+}
+
+/// for lua :   void	  OgreSetShadowTexturePixelFormat	()
 static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE
-	Ogre::PixelFormat pf =3D (lua_gettop(L) >=3D 2 && !lua_isnil(L,1)) ? ((Og=
re::PixelFormat)luaL_checkint(L,1)) : Ogre::PF_FLOAT16_R;
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(pf);
-	return 0;
+	Ogre::PixelFormat pf =3D (lua_gettop(L) >=3D 2 && !lua_isnil(L,1)) ? ((Og=
re::PixelFormat)luaL_checkint(L,1)) : Ogre::PF_FLOAT16_R;
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(pf);
+	return 0;
 }
 =

 =

@@ -1233,502 +1233,502 @@
 	OgrePixelFormatList_REGISTER(PF_COUNT)			//
 	return 1;
 }
-
-
-/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
-static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
-	return 0;
-}
-
-/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
-static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
-	return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
-static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
-	return 0;
-}
-
-/// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
-static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
-	float r =3D luaL_checknumber(L,1);
-	float g =3D luaL_checknumber(L,2);
-	float b =3D luaL_checknumber(L,3);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-
-	if(p){
-		p->setAmbientLight( ColourValue( r, g, b ) );
-	}
-
-	return 0;
-}
-
-/// for lua :   string  GetUniqueName  ()
-static int l_GetUniqueName	(lua_State *L) { PROFILE  // TODO : move to sep=
erate file ?
-	std::string n =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	lua_pushstring(L,n.c_str());
-	return 1;
-}
-
-
-/// for lua :   number OgreLastFPS  ()
-static int l_OgreLastFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfLastFPS);return 1; }
-/// for lua :   number OgreAvgFPS  ()
-static int l_OgreAvgFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWra=
pper::GetSingleton().mfAvgFPS);return 1; }
-/// for lua :   number OgreBestFPS  ()
-static int l_OgreBestFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfBestFPS);return 1; }
-/// for lua :   number OgreWorstFPS  ()
-static int l_OgreWorstFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreW=
rapper::GetSingleton().mfWorstFPS);return 1; }
-/// for lua :   number OgreBestFrameTime  ()
-static int l_OgreBestFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miBestFrameTime);return 1; }
-/// for lua :   number OgreWorstFrameTime  ()
-static int l_OgreWorstFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,=
cOgreWrapper::GetSingleton().miWorstFrameTime);return 1; }
-/// for lua :   number OgreTriangleCount  ()
-static int l_OgreTriangleCount	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miTriangleCount);return 1; }
-/// for lua :   number OgreBatchCount  ()
-static int l_OgreBatchCount	(lua_State *L) { PROFILE lua_pushnumber(L,cOgr=
eWrapper::GetSingleton().miBatchCount);return 1; }
-
-/*
-static int l_Client_SetMouseSensitivity (lua_State *L) { PROFILE
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client) client->mfMouseSensitivity =3D luaL_checknumber(L,1);
-	return 0;
-}
-
-
-
-static int l_Client_SetInvertMouse (lua_State *L) { PROFILE
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client) client->mbInvertMouse =3D luaL_checkint(L,1) !=3D 0;
-	return 0;
-}
-
-
-static int l_Client_SetCamera (lua_State *L) { PROFILE
-	int i=3D0;
-	Real x =3D luaL_checknumber(L,++i);
-	Real y =3D luaL_checknumber(L,++i);
-	Real z =3D luaL_checknumber(L,++i);
-	Real qw =3D luaL_checknumber(L,++i);
-	Real qx =3D luaL_checknumber(L,++i);
-	Real qy =3D luaL_checknumber(L,++i);
-	Real qz =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->SetCamera(Vector3(x,y,z),Quaternion(qw,qx,qy,qz));
-	else	printf("l_Client_SetCamera called from lua on non-client");
-	return 0;
-}
-
-static int l_Client_ForceCamRot (lua_State *L) { PROFILE
-	int i=3D0;
-	Real qw =3D luaL_checknumber(L,++i);
-	Real qx =3D luaL_checknumber(L,++i);
-	Real qy =3D luaL_checknumber(L,++i);
-	Real qz =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->ForceCamRot(Quaternion(qw,qx,qy,qz));
-	else	printf("l_Client_ForceCamRot called from lua on non-client");
-	return 0;
-}
-
-static int l_Client_CameraLookAt (lua_State *L) { PROFILE
-	int i=3D0;
-	Real x =3D luaL_checknumber(L,++i);
-	Real y =3D luaL_checknumber(L,++i);
-	Real z =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->CameraLookAt(Vector3(x,y,z));
-	else	printf("l_Client_CameraLookAt called from lua on non-client");
-	return 0;
-}
-*/
-
-
-// ***** ***** utilities and error handling ***** *****
-
-
-/// also adds a traceback to the error message in case of an error
-/// nret=3D-1 for unlimited
-/// don't use directly, used by LuaCall
-int 	PCallWithErrFuncWrapper (lua_State *L,int narg, int nret) { PROFILE
-	int status;
-	int base =3D lua_gettop(L) - narg;  // function index
-	lua_pushliteral(L, "_TRACEBACK");
-	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function
-	lua_insert(L, base);  // put it under chunk and args
-	// signal(SIGINT, laction); // copyed from example, no idea what this is =
good for =3D(
-	status =3D lua_pcall(L, narg, (nret=3D=3D-1) ? LUA_MULTRET : nret, base);
-
-	//printf("pcall end, cleaning up....\n");
-
-	// signal(SIGINT, SIG_DFL); // copyed from example, no idea what this is =
good for =3D(
-	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state
-
-	//printf("pcall end\n");
-
-	return status;
-}
-
-
-void MyCrash				(const char* szMessage);
-
-void LuaErrorHandler (lua_State *L, const char *fmt, ...) { PROFILE
-	printf("LuaErrorHandler start\n");
-
-	va_list argp;
-	va_start(argp, fmt);
-	gRobStringBuffer[0] =3D 0;
-	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
-	std::string s(gRobStringBuffer);
-	va_end(argp);
-
-	std::string mystr("LuaError\n");
-	mystr +=3D s;
-
-	printf("\nLuaErrorHandler end\n");
-
-	//lua_close(L);
-	MyCrash(mystr.c_str());
-	// todo : attempt recovery in case of protected function call ?
-	// todo : deinit ogre to free mouse here
-}
-
-
-struct luaL_reg make_luaL_reg(const char *name,lua_CFunction func){
-  struct luaL_reg s;
-  s.name =3D name;
-  s.func =3D func;
-  return s;
-}
-
-void	cScripting::Listener_Notify (cListenable* pTarget,const size_t eventc=
ode,const size_t param,const size_t userdata) { PROFILE
-	switch (userdata) {
-		case kListenerBinding_Keys:
-			switch (eventcode) {
-				case cInput::kListenerEvent_KeyPress:
-					LuaCall("KeyDown","ii",(int)(param & 255),(int)((param >> 8) & 255));
-					//printf("keydown(%d)\n",param);
-				break;
-				case cInput::kListenerEvent_KeyRelease:
-					LuaCall("KeyUp","i",(int)param);
-					//printf("keyup(%d)\n",param);
-				break;
-			}
-			//printf("event=3D%d,key=3D%d\n",eventcode,param);
-		break;
-		// TODO : maybe timer ?
-	}
-}
-
-int		cScripting::GetGlobal	(const char* name) { PROFILE
-	lua_getglobal(L,name);
-	if (!lua_isnumber(L,-1)) { lua_pop(L,1); return 0; }
-	return (int)lua_tonumber(L,-1);
-}
-
-void	cScripting::SetGlobal	(const char* name,int value) { PROFILE
-	lua_pushnumber(L,value);
-	lua_setglobal(L,name);
-}
-
-/// this is the call_va function from the Book "Programming in Lua" with a=
ltered type notation :
-/// float : f
-/// int : i
-/// const char* : s
-/// returns true on successful call
-/// warning ! maybe this cannot return more than one string ! todo : check=
 doc of lua_tostring
-bool cScripting::LuaCall (const char *func, const char *sig, ...) { PROFILE
-	#ifdef PROFILE_LUACALLCOUNT
-	++gPROFILE_LUACALLCOUNT[func];
-	#endif
-
-	bool result =3D true;
-	va_list vl;
-	int narg, nres;  /* number of arguments and results */
-
-	va_start(vl, sig);
-	lua_getglobal(L, func);  /* get function */
-
-	/* push arguments */
-	narg =3D 0;
-	while (*sig) {  /* push arguments */
-		bool endwhile =3D false;
-		switch (*sig++) {
-		  case 'f':  /* float/double argument */
-			lua_pushnumber(L, va_arg(vl, double));
-			break;
-
-		  case 'i':  /* int argument (ansi printf : also use %d) */
-			lua_pushnumber(L, va_arg(vl, int));
-			break;
-
-		  case 's':  /* string argument */
-			lua_pushstring(L, va_arg(vl, char *));
-			break;
-
-		  case '>':
-			endwhile =3D true;
-			break;
-		  default:
-			LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
-			lua_pushnil(L);
-			break;
-		}
-		if (endwhile) break;
-		narg++;
-		luaL_checkstack(L, 1, "too many arguments");
-	}
-
-	/* do the call */
-	nres =3D strlen(sig);  /* number of expected results */
-	// todo : push lua error handler function here ?!?
-	if (PCallWithErrFuncWrapper(L,narg, nres) !=3D 0) {
-	//if (lua_pcall(L, narg, nres, 0) !=3D 0)  { // old
-		/* do the call */
-		LuaErrorHandler(L, "error running function `%s': %s",func, lua_tostring(=
L, -1));
-
-		/*
-		doku for lua_pcall last argument (errorfunc)
-		if 0 ... else that argument should be the index in the stack where the e=
rror handler function is located. Notice that, in such cases, the handler m=
ust be pushed in the stack before the function to be called and its argumen=
ts.
-		*/
-		result =3D false;
-	} else {
-		/* retrieve results */
-		int popamount =3D nres;
-		nres =3D -nres;  /* stack index of first result */
-		while (*sig) {  /* get results */
-			switch (*sig++) {
-
-			  case 'f':  /* float / double result */
-				if (!lua_isnumber(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl, double *) =3D 0;
-				} else {
-					*va_arg(vl, double *) =3D lua_tonumber(L, nres);
-				}
-				break;
-
-			  case 'i':  /* int result */
-				if (!lua_isnumber(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl, int *) =3D 0;
-				} else {
-					*va_arg(vl, int *) =3D (int)lua_tonumber(L, nres);
-				}
-				break;
-
-			  case 's':  /* string result */
-				if (!lua_isstring(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl,std::string*) =3D "";
-				} else {
-					*va_arg(vl,std::string*) =3D lua_tostring(L, nres); // return as std:=
:string, as pure lua pointer becomes invalid with pop
-				}
-				break;
-
-			  default:
-				LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
-				break;
-			}
-			nres++;
-		}
-		// pop stack
-		lua_pop(L, popamount);
-	}
-	va_end(vl);
-	return result;
-}
-
-
-cScripting::cScripting	() : L(0) {}
-
-void	cScripting::Init () { PROFILE
-	if (sizeof(lua_Number) <=3D 4) {
-		printf("sizeof(lua_Number) =3D %d, but must be greater than 4 (32 bit) f=
or bitwise ops\n",sizeof(lua_Number));
-		DisplayErrorMessage("ERROR : lua-precision wrong");
-		exit(43);
-	}
-
-	L =3D lua_open();
-	assert(L);
-	luaopen_base(L);
-	luaopen_table(L);
-	luaopen_io(L);
-	luaopen_string(L);
-	luaopen_math(L);
-	luaopen_debug(L);
-
-	lua_register(L,"GetNamedKey",		l_GetNamedKey);
-	lua_register(L,"GetKeyName",		l_GetKeyName);
-	lua_register(L,"PollInput",			l_PollInput);
-	lua_register(L,"Terminate",			l_Terminate);
-	lua_register(L,"InitOgre",			l_InitOgre);
-	lua_register(L,"GetPointerSize",	l_GetPointerSize);
-	lua_register(L,"Client_IsAlive",	l_Client_IsAlive);
-	//lua_register(L,"ServerSendMsgToClient",			l_ServerSendMsgToClient);
-	//lua_register(L,"ClientSendMsgToServer",			l_ClientSendMsgToServer);
-	//lua_register(L,"SoundPlayAmbient",				l_SoundPlayAmbient);
-	//lua_register(L,"Server_SetMaxResyncsPerSecond",	l_Server_SetMaxResyncsP=
erSecond);
-	//lua_register(L,"Server_GetMaxResyncsPerSecond",	l_Server_GetMaxResyncsP=
erSecond);
-	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
-	lua_register(L,"Client_TakeScreenshot",			l_Client_TakeScreenshot);
-	lua_register(L,"Client_TakeGridScreenshot",			l_Client_TakeGridScreenshot=
);
-	//lua_register(L,"Client_SetCamera",				l_Client_SetCamera);
-	//lua_register(L,"Client_ForceCamRot",			l_Client_ForceCamRot);
-	//lua_register(L,"Client_CameraLookAt",			l_Client_CameraLookAt);
-	//lua_register(L,"Client_SetPlayerShip",			l_Client_SetPlayerShip);
-	//lua_register(L,"Client_SetMaxFPS",				l_Client_SetMaxFPS);
-	//lua_register(L,"Client_GetMaxFPS",				l_Client_GetMaxFPS);
-	lua_register(L,"Client_GetCurFPS",				l_Client_GetCurFPS);
-	lua_register(L,"Client_GetFrameNum",			l_Client_GetFrameNum);
-	//lua_register(L,"Client_SetMouseSensitivity",	l_Client_SetMouseSensitivi=
ty);
-	//lua_register(L,"Client_SetInvertMouse",			l_Client_SetInvertMouse);
-	//lua_register(L,"Client_ShowMessage",			l_Client_ShowMessage);
-	lua_register(L,"Client_GetTicks",				l_Client_GetTicks);
-	lua_register(L,"Client_SetSkybox",				l_Client_SetSkybox);
-	lua_register(L,"Client_SetFog",					l_Client_SetFog);
-	lua_register(L,"Client_RenderOneFrame",			l_Client_RenderOneFrame);
-	lua_register(L,"Client_Sleep",					l_Client_Sleep);
-	lua_register(L,"Client_USleep",					l_Client_USleep);
-	lua_register(L,"Client_SetAmbientLight",		l_Client_SetAmbientLight);
-	lua_register(L,"Client_ClearLights",			l_Client_ClearLights);
-	lua_register(L,"Client_AddPointLight",			l_Client_AddPointLight);
+
+
+/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
+static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
+	return 0;
+}
+
+/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
+static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
+	float r =3D luaL_checknumber(L,1);
+	float g =3D luaL_checknumber(L,2);
+	float b =3D luaL_checknumber(L,3);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+
+	if(p){
+		p->setAmbientLight( ColourValue( r, g, b ) );
+	}
+
+	return 0;
+}
+
+/// for lua :   string  GetUniqueName  ()
+static int l_GetUniqueName	(lua_State *L) { PROFILE  // TODO : move to sep=
erate file ?
+	std::string n =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	lua_pushstring(L,n.c_str());
+	return 1;
+}
+
+
+/// for lua :   number OgreLastFPS  ()
+static int l_OgreLastFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfLastFPS);return 1; }
+/// for lua :   number OgreAvgFPS  ()
+static int l_OgreAvgFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWra=
pper::GetSingleton().mfAvgFPS);return 1; }
+/// for lua :   number OgreBestFPS  ()
+static int l_OgreBestFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfBestFPS);return 1; }
+/// for lua :   number OgreWorstFPS  ()
+static int l_OgreWorstFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreW=
rapper::GetSingleton().mfWorstFPS);return 1; }
+/// for lua :   number OgreBestFrameTime  ()
+static int l_OgreBestFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miBestFrameTime);return 1; }
+/// for lua :   number OgreWorstFrameTime  ()
+static int l_OgreWorstFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,=
cOgreWrapper::GetSingleton().miWorstFrameTime);return 1; }
+/// for lua :   number OgreTriangleCount  ()
+static int l_OgreTriangleCount	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miTriangleCount);return 1; }
+/// for lua :   number OgreBatchCount  ()
+static int l_OgreBatchCount	(lua_State *L) { PROFILE lua_pushnumber(L,cOgr=
eWrapper::GetSingleton().miBatchCount);return 1; }
+
+/*
+static int l_Client_SetMouseSensitivity (lua_State *L) { PROFILE
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client) client->mfMouseSensitivity =3D luaL_checknumber(L,1);
+	return 0;
+}
+
+
+
+static int l_Client_SetInvertMouse (lua_State *L) { PROFILE
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client) client->mbInvertMouse =3D luaL_checkint(L,1) !=3D 0;
+	return 0;
+}
+
+
+static int l_Client_SetCamera (lua_State *L) { PROFILE
+	int i=3D0;
+	Real x =3D luaL_checknumber(L,++i);
+	Real y =3D luaL_checknumber(L,++i);
+	Real z =3D luaL_checknumber(L,++i);
+	Real qw =3D luaL_checknumber(L,++i);
+	Real qx =3D luaL_checknumber(L,++i);
+	Real qy =3D luaL_checknumber(L,++i);
+	Real qz =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->SetCamera(Vector3(x,y,z),Quaternion(qw,qx,qy,qz));
+	else	printf("l_Client_SetCamera called from lua on non-client");
+	return 0;
+}
+
+static int l_Client_ForceCamRot (lua_State *L) { PROFILE
+	int i=3D0;
+	Real qw =3D luaL_checknumber(L,++i);
+	Real qx =3D luaL_checknumber(L,++i);
+	Real qy =3D luaL_checknumber(L,++i);
+	Real qz =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->ForceCamRot(Quaternion(qw,qx,qy,qz));
+	else	printf("l_Client_ForceCamRot called from lua on non-client");
+	return 0;
+}
+
+static int l_Client_CameraLookAt (lua_State *L) { PROFILE
+	int i=3D0;
+	Real x =3D luaL_checknumber(L,++i);
+	Real y =3D luaL_checknumber(L,++i);
+	Real z =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->CameraLookAt(Vector3(x,y,z));
+	else	printf("l_Client_CameraLookAt called from lua on non-client");
+	return 0;
+}
+*/
+
+
+// ***** ***** utilities and error handling ***** *****
+
+
+/// also adds a traceback to the error message in case of an error
+/// nret=3D-1 for unlimited
+/// don't use directly, used by LuaCall
+int 	PCallWithErrFuncWrapper (lua_State *L,int narg, int nret) { PROFILE
+	int status;
+	int base =3D lua_gettop(L) - narg;  // function index
+	lua_pushliteral(L, "_TRACEBACK");
+	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function
+	lua_insert(L, base);  // put it under chunk and args
+	// signal(SIGINT, laction); // copyed from example, no idea what this is =
good for =3D(
+	status =3D lua_pcall(L, narg, (nret=3D=3D-1) ? LUA_MULTRET : nret, base);
+
+	//printf("pcall end, cleaning up....\n");
+
+	// signal(SIGINT, SIG_DFL); // copyed from example, no idea what this is =
good for =3D(
+	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state
+
+	//printf("pcall end\n");
+
+	return status;
+}
+
+
+void MyCrash				(const char* szMessage);
+
+void LuaErrorHandler (lua_State *L, const char *fmt, ...) { PROFILE
+	printf("LuaErrorHandler start\n");
+
+	va_list argp;
+	va_start(argp, fmt);
+	gRobStringBuffer[0] =3D 0;
+	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
+	std::string s(gRobStringBuffer);
+	va_end(argp);
+
+	std::string mystr("LuaError\n");
+	mystr +=3D s;
+
+	printf("\nLuaErrorHandler end\n");
+
+	//lua_close(L);
+	MyCrash(mystr.c_str());
+	// todo : attempt recovery in case of protected function call ?
+	// todo : deinit ogre to free mouse here
+}
+
+
+struct luaL_reg make_luaL_reg(const char *name,lua_CFunction func){
+  struct luaL_reg s;
+  s.name =3D name;
+  s.func =3D func;
+  return s;
+}
+
+void	cScripting::Listener_Notify (cListenable* pTarget,const size_t eventc=
ode,const size_t param,const size_t userdata) { PROFILE
+	switch (userdata) {
+		case kListenerBinding_Keys:
+			switch (eventcode) {
+				case cInput::kListenerEvent_KeyPress:
+					LuaCall("KeyDown","ii",(int)(param & 255),(int)((param >> 8) & 255));
+					//printf("keydown(%d)\n",param);
+				break;
+				case cInput::kListenerEvent_KeyRelease:
+					LuaCall("KeyUp","i",(int)param);
+					//printf("keyup(%d)\n",param);
+				break;
+			}
+			//printf("event=3D%d,key=3D%d\n",eventcode,param);
+		break;
+		// TODO : maybe timer ?
+	}
+}
+
+int		cScripting::GetGlobal	(const char* name) { PROFILE
+	lua_getglobal(L,name);
+	if (!lua_isnumber(L,-1)) { lua_pop(L,1); return 0; }
+	return (int)lua_tonumber(L,-1);
+}
+
+void	cScripting::SetGlobal	(const char* name,int value) { PROFILE
+	lua_pushnumber(L,value);
+	lua_setglobal(L,name);
+}
+
+/// this is the call_va function from the Book "Programming in Lua" with a=
ltered type notation :
+/// float : f
+/// int : i
+/// const char* : s
+/// returns true on successful call
+/// warning ! maybe this cannot return more than one string ! todo : check=
 doc of lua_tostring
+bool cScripting::LuaCall (const char *func, const char *sig, ...) { PROFILE
+	#ifdef PROFILE_LUACALLCOUNT
+	++gPROFILE_LUACALLCOUNT[func];
+	#endif
+
+	bool result =3D true;
+	va_list vl;
+	int narg, nres;  /* number of arguments and results */
+
+	va_start(vl, sig);
+	lua_getglobal(L, func);  /* get function */
+
+	/* push arguments */
+	narg =3D 0;
+	while (*sig) {  /* push arguments */
+		bool endwhile =3D false;
+		switch (*sig++) {
+		  case 'f':  /* float/double argument */
+			lua_pushnumber(L, va_arg(vl, double));
+			break;
+
+		  case 'i':  /* int argument (ansi printf : also use %d) */
+			lua_pushnumber(L, va_arg(vl, int));
+			break;
+
+		  case 's':  /* string argument */
+			lua_pushstring(L, va_arg(vl, char *));
+			break;
+
+		  case '>':
+			endwhile =3D true;
+			break;
+		  default:
+			LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
+			lua_pushnil(L);
+			break;
+		}
+		if (endwhile) break;
+		narg++;
+		luaL_checkstack(L, 1, "too many arguments");
+	}
+
+	/* do the call */
+	nres =3D strlen(sig);  /* number of expected results */
+	// todo : push lua error handler function here ?!?
+	if (PCallWithErrFuncWrapper(L,narg, nres) !=3D 0) {
+	//if (lua_pcall(L, narg, nres, 0) !=3D 0)  { // old
+		/* do the call */
+		LuaErrorHandler(L, "error running function `%s': %s",func, lua_tostring(=
L, -1));
+
+		/*
+		doku for lua_pcall last argument (errorfunc)
+		if 0 ... else that argument should be the index in the stack where the e=
rror handler function is located. Notice that, in such cases, the handler m=
ust be pushed in the stack before the function to be called and its argumen=
ts.
+		*/
+		result =3D false;
+	} else {
+		/* retrieve results */
+		int popamount =3D nres;
+		nres =3D -nres;  /* stack index of first result */
+		while (*sig) {  /* get results */
+			switch (*sig++) {
+
+			  case 'f':  /* float / double result */
+				if (!lua_isnumber(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl, double *) =3D 0;
+				} else {
+					*va_arg(vl, double *) =3D lua_tonumber(L, nres);
+				}
+				break;
+
+			  case 'i':  /* int result */
+				if (!lua_isnumber(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl, int *) =3D 0;
+				} else {
+					*va_arg(vl, int *) =3D (int)lua_tonumber(L, nres);
+				}
+				break;
+
+			  case 's':  /* string result */
+				if (!lua_isstring(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl,std::string*) =3D "";
+				} else {
+					*va_arg(vl,std::string*) =3D lua_tostring(L, nres); // return as std:=
:string, as pure lua pointer becomes invalid with pop
+				}
+				break;
+
+			  default:
+				LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
+				break;
+			}
+			nres++;
+		}
+		// pop stack
+		lua_pop(L, popamount);
+	}
+	va_end(vl);
+	return result;
+}
+
+
+cScripting::cScripting	() : L(0) {}
+
+void	cScripting::Init () { PROFILE
+	if (sizeof(lua_Number) <=3D 4) {
+		printf("sizeof(lua_Number) =3D %d, but must be greater than 4 (32 bit) f=
or bitwise ops\n",sizeof(lua_Number));
+		DisplayErrorMessage("ERROR : lua-precision wrong");
+		exit(43);
+	}
+
+	L =3D lua_open();
+	assert(L);
+	luaopen_base(L);
+	luaopen_table(L);
+	luaopen_io(L);
+	luaopen_string(L);
+	luaopen_math(L);
+	luaopen_debug(L);
+
+	lua_register(L,"GetNamedKey",		l_GetNamedKey);
+	lua_register(L,"GetKeyName",		l_GetKeyName);
+	lua_register(L,"PollInput",			l_PollInput);
+	lua_register(L,"Terminate",			l_Terminate);
+	lua_register(L,"InitOgre",			l_InitOgre);
+	lua_register(L,"GetPointerSize",	l_GetPointerSize);
+	lua_register(L,"Client_IsAlive",	l_Client_IsAlive);
+	//lua_register(L,"ServerSendMsgToClient",			l_ServerSendMsgToClient);
+	//lua_register(L,"ClientSendMsgToServer",			l_ClientSendMsgToServer);
+	//lua_register(L,"SoundPlayAmbient",				l_SoundPlayAmbient);
+	//lua_register(L,"Server_SetMaxResyncsPerSecond",	l_Server_SetMaxResyncsP=
erSecond);
+	//lua_register(L,"Server_GetMaxResyncsPerSecond",	l_Server_GetMaxResyncsP=
erSecond);
+	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
+	lua_register(L,"Client_TakeScreenshot",			l_Client_TakeScreenshot);
+	lua_register(L,"Client_TakeGridScreenshot",			l_Client_TakeGridScreenshot=
);
+	//lua_register(L,"Client_SetCamera",				l_Client_SetCamera);
+	//lua_register(L,"Client_ForceCamRot",			l_Client_ForceCamRot);
+	//lua_register(L,"Client_CameraLookAt",			l_Client_CameraLookAt);
+	//lua_register(L,"Client_SetPlayerShip",			l_Client_SetPlayerShip);
+	//lua_register(L,"Client_SetMaxFPS",				l_Client_SetMaxFPS);
+	//lua_register(L,"Client_GetMaxFPS",				l_Client_GetMaxFPS);
+	lua_register(L,"Client_GetCurFPS",				l_Client_GetCurFPS);
+	lua_register(L,"Client_GetFrameNum",			l_Client_GetFrameNum);
+	//lua_register(L,"Client_SetMouseSensitivity",	l_Client_SetMouseSensitivi=
ty);
+	//lua_register(L,"Client_SetInvertMouse",			l_Client_SetInvertMouse);
+	//lua_register(L,"Client_ShowMessage",			l_Client_ShowMessage);
+	lua_register(L,"Client_GetTicks",				l_Client_GetTicks);
+	lua_register(L,"Client_SetSkybox",				l_Client_SetSkybox);
+	lua_register(L,"Client_SetFog",					l_Client_SetFog);
+	lua_register(L,"Client_RenderOneFrame",			l_Client_RenderOneFrame);
+	lua_register(L,"Client_Sleep",					l_Client_Sleep);
+	lua_register(L,"Client_USleep",					l_Client_USleep);
+	lua_register(L,"Client_SetAmbientLight",		l_Client_SetAmbientLight);
+	lua_register(L,"Client_ClearLights",			l_Client_ClearLights);
+	lua_register(L,"Client_AddPointLight",			l_Client_AddPointLight);
 	lua_register(L,"Client_AddDirectionalLight",	l_Client_AddDirectionalLight=
);
-	lua_register(L,"Client_DeleteLight",			l_Client_DeleteLight);
-	lua_register(L,"Client_GetPhysStepTime",		l_Client_GetPhysStepTime);
-	lua_register(L,"BuildTerrainEntity_Simple",		l_BuildTerrainEntity_Simple);
-	lua_register(L,"BuildTerrainEntity_Shaded",		l_BuildTerrainEntity_Shaded);
-	lua_register(L,"TerrainRayPick",				l_TerrainRayPick);
-	lua_register(L,"SphereRayPick",					l_SphereRayPick);
-	lua_register(L,"UnloadMeshName",				l_UnloadMeshName);
-	lua_register(L,"CountMeshTriangles",			l_CountMeshTriangles);
-	lua_register(L,"GetUOPath",						l_getUOPath);
-	lua_register(L,"PathSearch",					l_PathSearch);
-	lua_register(L,"file_exists",					l_file_exists);
-	lua_register(L,"file_size",						l_file_size);
-	lua_register(L,"Hex2Num",						l_Hex2Num);
-	lua_register(L,"GetRandomHexString",			l_GetRandomHexString);
-	lua_register(L,"BitwiseAND",					l_BitwiseAND);
-	lua_register(L,"BitwiseOR",						l_BitwiseOR);
-	lua_register(L,"BitwiseXOR",					l_BitwiseXOR);
-	lua_register(L,"BitwiseSHL",					l_BitwiseSHL);
-	lua_register(L,"BitwiseSHR",					l_BitwiseSHR);
-	lua_register(L,"TestBit",						l_TestBit);
-	lua_register(L,"SetBit",						l_SetBit);
-	lua_register(L,"ClearBit",						l_ClearBit);
-	lua_register(L,"Exit",							l_Exit);
-	lua_register(L,"Crash",							l_Crash);
-	lua_register(L,"CrashSegFault",					l_CrashSegFault);
-	lua_register(L,"DisplayNotice",					l_DisplayNotice);
-	lua_register(L,"FatalErrorMessage",				l_FatalErrorMessage);
-	lua_register(L,"ExportMesh",					l_ExportMesh);
-	lua_register(L,"CreateSceneManager",			l_CreateSceneManager);
-	lua_register(L,"GetUniqueName",					l_GetUniqueName);
-	lua_register(L,"GetMouseRay",					l_GetMouseRay);
-	lua_register(L,"GetMaxZ",						l_GetMaxZ);
-	lua_register(L,"ProjectPos",					l_ProjectPos);
-	lua_register(L,"ProjectSizeAndPos",				l_ProjectSizeAndPos);
-	lua_register(L,"_TRACEBACK",					l_TRACEBACK);
-	lua_register(L,"ProfileDumpCallCount",			l_ProfileDumpCallCount);
-	lua_register(L,"OgreMemoryUsage",				l_OgreMemoryUsage);
+	lua_register(L,"Client_DeleteLight",			l_Client_DeleteLight);
+	lua_register(L,"Client_GetPhysStepTime",		l_Client_GetPhysStepTime);
+	lua_register(L,"BuildTerrainEntity_Simple",		l_BuildTerrainEntity_Simple);
+	lua_register(L,"BuildTerrainEntity_Shaded",		l_BuildTerrainEntity_Shaded);
+	lua_register(L,"TerrainRayPick",				l_TerrainRayPick);
+	lua_register(L,"SphereRayPick",					l_SphereRayPick);
+	lua_register(L,"UnloadMeshName",				l_UnloadMeshName);
+	lua_register(L,"CountMeshTriangles",			l_CountMeshTriangles);
+	lua_register(L,"GetUOPath",						l_getUOPath);
+	lua_register(L,"PathSearch",					l_PathSearch);
+	lua_register(L,"file_exists",					l_file_exists);
+	lua_register(L,"file_size",						l_file_size);
+	lua_register(L,"Hex2Num",						l_Hex2Num);
+	lua_register(L,"GetRandomHexString",			l_GetRandomHexString);
+	lua_register(L,"BitwiseAND",					l_BitwiseAND);
+	lua_register(L,"BitwiseOR",						l_BitwiseOR);
+	lua_register(L,"BitwiseXOR",					l_BitwiseXOR);
+	lua_register(L,"BitwiseSHL",					l_BitwiseSHL);
+	lua_register(L,"BitwiseSHR",					l_BitwiseSHR);
+	lua_register(L,"TestBit",						l_TestBit);
+	lua_register(L,"SetBit",						l_SetBit);
+	lua_register(L,"ClearBit",						l_ClearBit);
+	lua_register(L,"Exit",							l_Exit);
+	lua_register(L,"Crash",							l_Crash);
+	lua_register(L,"CrashSegFault",					l_CrashSegFault);
+	lua_register(L,"DisplayNotice",					l_DisplayNotice);
+	lua_register(L,"FatalErrorMessage",				l_FatalErrorMessage);
+	lua_register(L,"ExportMesh",					l_ExportMesh);
+	lua_register(L,"CreateSceneManager",			l_CreateSceneManager);
+	lua_register(L,"GetUniqueName",					l_GetUniqueName);
+	lua_register(L,"GetMouseRay",					l_GetMouseRay);
+	lua_register(L,"GetMaxZ",						l_GetMaxZ);
+	lua_register(L,"ProjectPos",					l_ProjectPos);
+	lua_register(L,"ProjectSizeAndPos",				l_ProjectSizeAndPos);
+	lua_register(L,"_TRACEBACK",					l_TRACEBACK);
+	lua_register(L,"ProfileDumpCallCount",			l_ProfileDumpCallCount);
+	lua_register(L,"OgreMemoryUsage",				l_OgreMemoryUsage);
 	lua_register(L,"OgreMeshAvailable",				l_OgreMeshAvailable);
 	lua_register(L,"OgreMaterialNameKnown",			l_OgreMaterialNameKnown);
-	lua_register(L,"OgreMaterialAvailable",			l_OgreMaterialAvailable);
-	lua_register(L,"OgreTextureAvailable",			l_OgreTextureAvailable);
-	lua_register(L,"OgreMeshTextures",				l_OgreMeshTextures);
-	// some statistic stuff
-	lua_register(L,"OgreLastFPS",				l_OgreLastFPS);
-	lua_register(L,"OgreAvgFPS",				l_OgreAvgFPS);
-	lua_register(L,"OgreBestFPS",				l_OgreBestFPS);
-	lua_register(L,"OgreWorstFPS",				l_OgreWorstFPS);
-	lua_register(L,"OgreBestFrameTime",			l_OgreBestFrameTime);
-	lua_register(L,"OgreWorstFrameTime",			l_OgreWorstFrameTime);
-	lua_register(L,"OgreTriangleCount",			l_OgreTriangleCount);
-	lua_register(L,"OgreBatchCount",			l_OgreBatchCount);
-
-	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
-	lua_register(L,"HueMesh",						l_HueMesh);
-	lua_register(L,"OgreAddCompositor",						l_OgreAddCompositor);
-	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
-	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
-	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
-	// shadow stuff
+	lua_register(L,"OgreMaterialAvailable",			l_OgreMaterialAvailable);
+	lua_register(L,"OgreTextureAvailable",			l_OgreTextureAvailable);
+	lua_register(L,"OgreMeshTextures",				l_OgreMeshTextures);
+	// some statistic stuff
+	lua_register(L,"OgreLastFPS",				l_OgreLastFPS);
+	lua_register(L,"OgreAvgFPS",				l_OgreAvgFPS);
+	lua_register(L,"OgreBestFPS",				l_OgreBestFPS);
+	lua_register(L,"OgreWorstFPS",				l_OgreWorstFPS);
+	lua_register(L,"OgreBestFrameTime",			l_OgreBestFrameTime);
+	lua_register(L,"OgreWorstFrameTime",			l_OgreWorstFrameTime);
+	lua_register(L,"OgreTriangleCount",			l_OgreTriangleCount);
+	lua_register(L,"OgreBatchCount",			l_OgreBatchCount);
+
+	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
+	lua_register(L,"HueMesh",						l_HueMesh);
+	lua_register(L,"OgreAddCompositor",						l_OgreAddCompositor);
+	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
+	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
+	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
+	// shadow stuff
 	lua_register(L,"OgreSetShadowTextureFadeStart",						l_OgreSetShadowTextu=
reFadeStart);
 	lua_register(L,"OgreSetShadowTextureFadeEnd",						l_OgreSetShadowTexture=
FadeEnd);
 	lua_register(L,"OgreSetShadowDirLightTextureOffset",				l_OgreSetShadowDi=
rLightTextureOffset);
 	lua_register(L,"OgreSetShadowFarDistance",							l_OgreSetShadowFarDistan=
ce);
-	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
+	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
 	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
-	lua_register(L,"OgrePixelFormatList",								l_OgrePixelFormatList);
-	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
-	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
-	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
-	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
-	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
-
-	// file paths for init
-	const char* szLuaUDataPath =3D "../data/lua/udata.lua";
-	const char* szLuaMainPath =3D "../data/lua/main.lua";
-
-
-	// check if lua files exist (otherwise working directory probably wrong)
-	std::ifstream myFileStream(szLuaMainPath);
-	if (!myFileStream) {
-		MyCrash(strprintf("%s cannot be found, probably the working directory is=
 wrong",szLuaMainPath).c_str());
-		exit(34);
-	}
-	myFileStream.close();
-
-	// load utils
-	int res;
-	res	=3D lua_dofile(L,szLuaUDataPath); // loads function used for register=
ing udatatypes
-	if (res) {
-		MyCrash("error in udata script-initialisation\n");
-		exit(44);
-	}
-
-	RegisterLuaXML(L);
-	LuaRegisterFIFO(L);
-	LuaRegisterNet(L);
-	cGfx3D::LuaRegister(L);
-	cGfx2D::LuaRegister(L);
-	cDialog::LuaRegister(L);
-	cWidget::LuaRegister(L);
-	cBitMask::LuaRegister(L);
-	cCamera::LuaRegister(L);
-	cViewport::LuaRegister(L);
-	cRenderTexture::LuaRegister(L);
-	cSoundSource::LuaRegister(L);
-	cSpriteManager::LuaRegister(L);
-	cManualArtMaterialLoader::LuaRegister(L);
-	cSprite::LuaRegister(L);
-	Material_LuaRegister(L);
-	Granny_LuaRegister(L);
-	LuaRegisterData(L);
-	LuaRegisterBuilder(L);
-	LuaRegisterRadar(L);
-
-	cInput::GetSingleton().RegisterListener(this,kListenerBinding_Keys);
-
-	res =3D lua_dofile(L,szLuaMainPath);
-	if (res) {
-		MyCrash("error in main script-initialisation\n");
-		exit(-1);
-	}
-}
-
-cScripting::~cScripting	() { PROFILE
-	cInput::GetSingleton().UnRegisterListener(this,kListenerBinding_Keys);
-
-	assert(L);
-	lua_setgcthreshold(L, 0);  // collected garbage
-	lua_close(L);
-	L =3D 0;
-}
+	lua_register(L,"OgrePixelFormatList",								l_OgrePixelFormatList);
+	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
+	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
+	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
+	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
+	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
+
+	// file paths for init
+	const char* szLuaUDataPath =3D "../data/lua/udata.lua";
+	const char* szLuaMainPath =3D "../data/lua/main.lua";
+
+
+	// check if lua files exist (otherwise working directory probably wrong)
+	std::ifstream myFileStream(szLuaMainPath);
+	if (!myFileStream) {
+		MyCrash(strprintf("%s cannot be found, probably the working directory is=
 wrong",szLuaMainPath).c_str());
+		exit(34);
+	}
+	myFileStream.close();
+
+	// load utils
+	int res;
+	res	=3D lua_dofile(L,szLuaUDataPath); // loads function used for register=
ing udatatypes
+	if (res) {
+		MyCrash("error in udata script-initialisation\n");
+		exit(44);
+	}
+
+	RegisterLuaXML(L);
+	LuaRegisterFIFO(L);
+	LuaRegisterNet(L);
+	cGfx3D::LuaRegister(L);
+	cGfx2D::LuaRegister(L);
+	cDialog::LuaRegister(L);
+	cWidget::LuaRegister(L);
+	cBitMask::LuaRegister(L);
+	cCamera::LuaRegister(L);
+	cViewport::LuaRegister(L);
+	cRenderTexture::LuaRegister(L);
+	cSoundSource::LuaRegister(L);
+	cSpriteManager::LuaRegister(L);
+	cManualArtMaterialLoader::LuaRegister(L);
+	cSprite::LuaRegister(L);
+	Material_LuaRegister(L);
+	Granny_LuaRegister(L);
+	LuaRegisterData(L);
+	LuaRegisterBuilder(L);
+	LuaRegisterRadar(L);
+
+	cInput::GetSingleton().RegisterListener(this,kListenerBinding_Keys);
+
+	res =3D lua_dofile(L,szLuaMainPath);
+	if (res) {
+		MyCrash("error in main script-initialisation\n");
+		exit(-1);
+	}
+}
+
+cScripting::~cScripting	() { PROFILE
+	cInput::GetSingleton().UnRegisterListener(this,kListenerBinding_Keys);
+
+	assert(L);
+	lua_setgcthreshold(L, 0);  // collected garbage
+	lua_close(L);
+	L =3D 0;
+}

Modified: branches/knut/src/spritemanager.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/spritemanager.cpp (original)
+++ branches/knut/src/spritemanager.cpp Thu Aug  2 02:27:57 2007
@@ -1,7 +1,7 @@
-#include "prefix.h"
-#include "spritemanager.h"
-#include "ogrewrapper.h"
-#include "shell.h"
+#include "prefix.h"
+#include "spritemanager.h"
+#include "ogrewrapper.h"
+#include "shell.h"
 #include <Ogre.h>
 #include <math.h>
 =

@@ -60,30 +60,30 @@
 		return;
 	}
 =

-	Ogre::TexturePtr tp =3D Ogre::TextureManager::getSingleton().getByHandle(=
 mTexHandle );
-
-	if (tp.isNull()) {
-		return;
-	}
-
-	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
-
-	if (mChanged) {
-		UpdateBuffer();
-		mChanged =3D false;
-	}
-
+	Ogre::TexturePtr tp =3D Ogre::TextureManager::getSingleton().getByHandle(=
 mTexHandle );
+
+	if (tp.isNull()) {
+		return;
+	}
+
+	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
+
+	if (mChanged) {
+		UpdateBuffer();
+		mChanged =3D false;
+	}
+
 	if (!mRenderOp) {
 		return;
-	}
-
-	if (mUseNormals) {
-		mSpriteQueue->SpriteManager()->SetLightningEnabled( true );
-	} else {
-		mSpriteQueue->SpriteManager()->SetLightningEnabled( false );
-	}
-
-	RenderSys->_setTexture( 0, true, tp->getName() );
+	}
+
+	if (mUseNormals) {
+		mSpriteQueue->SpriteManager()->SetLightningEnabled( true );
+	} else {
+		mSpriteQueue->SpriteManager()->SetLightningEnabled( false );
+	}
+
+	RenderSys->_setTexture( 0, true, tp->getName() );
 	RenderSys->_render( *mRenderOp );
 }
 =

@@ -148,35 +148,35 @@
 		}
 };
 void cSpriteQueue::Execute() { PROFILE
-	if (!mListSorted && cShell::GetTicks() - mLastSort > 10 ) {
-		mLastSort =3D cShell::GetTicks();
-		mSpriteList.sort( CompareSprites() );
-		mListSorted =3D true;
-		//( "%d sprites sortet in %d msec.\n", mSpriteList.size(), cShell::GetTi=
cks() - mLastSort );
-
-		int Pos =3D 1;
-		for ( std::list<cBaseSprite*>::iterator itor=3DmSpriteList.begin(); itor=
!=3DmSpriteList.end(); ++itor ) {
-			if ((*itor)->GetPosition() !=3D Pos ) {
-				(*itor)->SetPosition( Pos );
-				mListResorted =3D true;
-			}
-			Pos++;
-		}
-	}
-
-	double ViewPortWidthHalf  =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualWidth() / 2.0;
-	double ViewPortHeightHalf =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualHeight() / 2.0;
-
-	//long StartTick =3D cShell::GetTicks();
-	if (mSpriteManager->UseWorldCam()) {
-		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
-			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, mSpriteManager=
->GetCam()->getPosition().x, mSpriteManager->GetCam()->getPosition().y );
-		}
-	} else {
-		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
-			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, 0, 0 );
-		}
-	}
+	if (!mListSorted && cShell::GetTicks() - mLastSort > 10 ) {
+		mLastSort =3D cShell::GetTicks();
+		mSpriteList.sort( CompareSprites() );
+		mListSorted =3D true;
+		//( "%d sprites sortet in %d msec.\n", mSpriteList.size(), cShell::GetTi=
cks() - mLastSort );
+
+		int Pos =3D 1;
+		for ( std::list<cBaseSprite*>::iterator itor=3DmSpriteList.begin(); itor=
!=3DmSpriteList.end(); ++itor ) {
+			if ((*itor)->GetPosition() !=3D Pos ) {
+				(*itor)->SetPosition( Pos );
+				mListResorted =3D true;
+			}
+			Pos++;
+		}
+	}
+
+	double ViewPortWidthHalf  =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualWidth() / 2.0;
+	double ViewPortHeightHalf =3D (double)cOgreWrapper::GetSingleton().mViewp=
ort->getActualHeight() / 2.0;
+
+	//long StartTick =3D cShell::GetTicks();
+	if (mSpriteManager->UseWorldCam()) {
+		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
+			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, mSpriteManager=
->GetCam()->getPosition().x, mSpriteManager->GetCam()->getPosition().y );
+		}
+	} else {
+		for ( std::list<cBaseSprite*>::reverse_iterator itor=3DmSpriteList.rbegi=
n(); itor!=3DmSpriteList.rend(); ++itor ) {
+			(*itor)->Execute( ViewPortWidthHalf, ViewPortHeightHalf, 0, 0 );
+		}
+	}
 	//printf( "%d Sprites drawn in %d msec.\n", SpriteList.size(), cShell::Ge=
tTicks() - StartTick );*/
 }
 =

@@ -188,83 +188,83 @@
 	mUseWorldCam =3D UseCam;
 	mLightningEnabled =3D false;
 =

-	mSceneMan =3D SceneMan;
-	mTargetQueue =3D TargetQueue;
-	mAfterQueue =3D AfterQueue;
-
+	mSceneMan =3D SceneMan;
+	mTargetQueue =3D TargetQueue;
+	mAfterQueue =3D AfterQueue;
+
 	if (mUseWorldCam) {
 		mCam =3D cOgreWrapper::GetSingleton().mCamera;
-	} else {
-		mCam =3D 0;
-	}
-	=

+	} else {
+		mCam =3D 0;
+	}
+	=

 	mSceneMan->addRenderQueueListener( this );
 }
 =

 class cSpriteQueueDeletor { public : inline void operator () (std::pair< i=
nt, cSpriteQueue*> doomed) { delete doomed.second; } };
-cSpriteManager::~cSpriteManager() { PROFILE
+cSpriteManager::~cSpriteManager() { PROFILE
 	mSceneMan->removeRenderQueueListener( this );
 =

 	std::for_each( mSpriteQueues.begin(), mSpriteQueues.end(), cSpriteQueueDe=
letor() );
 }
 =

-void cSpriteManager::renderBuffer() { PROFILE
-	prepareForRender();
-	for ( std::map<int, cSpriteQueue*>::iterator itor=3DmSpriteQueues.begin()=
; itor!=3DmSpriteQueues.end(); ++itor ) {
-		(*itor).second->Execute();
-	}
-}
-
-void cSpriteManager::prepareForRender() { PROFILE
-	Ogre::TextureUnitState::UVWAddressingMode uvwAddressMode;
-
-	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
-	=

-	Ogre::LayerBlendModeEx colorBlendMode;
-	Ogre::LayerBlendModeEx alphaBlendMode;
-	=

-	colorBlendMode.blendType =3D Ogre::LBT_COLOUR;
-	colorBlendMode.source1 =3D Ogre::LBS_TEXTURE;
-	colorBlendMode.operation =3D Ogre::LBX_SOURCE1;
-
-	alphaBlendMode.blendType =3D Ogre::LBT_ALPHA;
-	alphaBlendMode.source1 =3D Ogre::LBS_TEXTURE;
-	alphaBlendMode.operation =3D Ogre::LBX_SOURCE1;
-
-	uvwAddressMode.u =3D Ogre::TextureUnitState::TAM_CLAMP;
-	uvwAddressMode.v =3D Ogre::TextureUnitState::TAM_CLAMP;
-	uvwAddressMode.w =3D Ogre::TextureUnitState::TAM_CLAMP;
-
-	RenderSys->_setWorldMatrix( Ogre::Matrix4::IDENTITY );
-	if (mUseWorldCam) {
-		RenderSys->_setViewMatrix( mCam->getViewMatrix() ); =

-		RenderSys->_setProjectionMatrix( mCam->getProjectionMatrixRS() );
-	} else {
-		int w =3D cOgreWrapper::GetSingleton().mViewport->getActualWidth();
-		int h =3D cOgreWrapper::GetSingleton().mViewport->getActualHeight();
-
-		Ogre::Matrix4 ViewportMatrix =3D Ogre::Matrix4::getScale( 2.0/w, -2.0/h,=
 1.0 );
-		RenderSys->_setViewMatrix( ViewportMatrix );
-		RenderSys->_setProjectionMatrix( Ogre::Matrix4::IDENTITY );
-	}
-
-	RenderSys->_setTextureMatrix( 0, Ogre::Matrix4::IDENTITY );
-	RenderSys->_setTextureCoordSet( 0, 0 );
-	RenderSys->_setTextureCoordCalculation( 0, Ogre::TEXCALC_NONE );
-	RenderSys->_setTextureUnitFiltering( 0, Ogre::FO_LINEAR, Ogre::FO_LINEAR,=
 Ogre::FO_NONE );
-	RenderSys->_setTextureBlendMode( 0, colorBlendMode );
-	RenderSys->_setTextureBlendMode( 0, alphaBlendMode );
-	RenderSys->_setTextureAddressingMode( 0, uvwAddressMode );
-	RenderSys->_disableTextureUnitsFrom( 1 );	=

-	RenderSys->_setFog( Ogre::FOG_NONE );
-	RenderSys->_setCullingMode( Ogre::CULL_NONE );
-	RenderSys->_setDepthBufferParams( false, false );
-	RenderSys->_setColourBufferWriteEnabled( true, true, true, false );
-	RenderSys->setShadingType( Ogre::SO_GOURAUD );
-	RenderSys->_setPolygonMode( Ogre::PM_SOLID );
-	RenderSys->unbindGpuProgram( Ogre::GPT_FRAGMENT_PROGRAM );
-	RenderSys->unbindGpuProgram( Ogre::GPT_VERTEX_PROGRAM );
-	RenderSys->_setSceneBlending( Ogre::SBF_SOURCE_ALPHA, Ogre::SBF_ONE_MINUS=
_SOURCE_ALPHA );
+void cSpriteManager::renderBuffer() { PROFILE
+	prepareForRender();
+	for ( std::map<int, cSpriteQueue*>::iterator itor=3DmSpriteQueues.begin()=
; itor!=3DmSpriteQueues.end(); ++itor ) {
+		(*itor).second->Execute();
+	}
+}
+
+void cSpriteManager::prepareForRender() { PROFILE
+	Ogre::TextureUnitState::UVWAddressingMode uvwAddressMode;
+
+	Ogre::RenderSystem* RenderSys =3D Ogre::Root::getSingleton().getRenderSys=
tem();
+	=

+	Ogre::LayerBlendModeEx colorBlendMode;
+	Ogre::LayerBlendModeEx alphaBlendMode;
+	=

+	colorBlendMode.blendType =3D Ogre::LBT_COLOUR;
+	colorBlendMode.source1 =3D Ogre::LBS_TEXTURE;
+	colorBlendMode.operation =3D Ogre::LBX_SOURCE1;
+
+	alphaBlendMode.blendType =3D Ogre::LBT_ALPHA;
+	alphaBlendMode.source1 =3D Ogre::LBS_TEXTURE;
+	alphaBlendMode.operation =3D Ogre::LBX_SOURCE1;
+
+	uvwAddressMode.u =3D Ogre::TextureUnitState::TAM_CLAMP;
+	uvwAddressMode.v =3D Ogre::TextureUnitState::TAM_CLAMP;
+	uvwAddressMode.w =3D Ogre::TextureUnitState::TAM_CLAMP;
+
+	RenderSys->_setWorldMatrix( Ogre::Matrix4::IDENTITY );
+	if (mUseWorldCam) {
+		RenderSys->_setViewMatrix( mCam->getViewMatrix() ); =

+		RenderSys->_setProjectionMatrix( mCam->getProjectionMatrixRS() );
+	} else {
+		int w =3D cOgreWrapper::GetSingleton().mViewport->getActualWidth();
+		int h =3D cOgreWrapper::GetSingleton().mViewport->getActualHeight();
+
+		Ogre::Matrix4 ViewportMatrix =3D Ogre::Matrix4::getScale( 2.0/w, -2.0/h,=
 1.0 );
+		RenderSys->_setViewMatrix( ViewportMatrix );
+		RenderSys->_setProjectionMatrix( Ogre::Matrix4::IDENTITY );
+	}
+
+	RenderSys->_setTextureMatrix( 0, Ogre::Matrix4::IDENTITY );
+	RenderSys->_setTextureCoordSet( 0, 0 );
+	RenderSys->_setTextureCoordCalculation( 0, Ogre::TEXCALC_NONE );
+	RenderSys->_setTextureUnitFiltering( 0, Ogre::FO_LINEAR, Ogre::FO_LINEAR,=
 Ogre::FO_NONE );
+	RenderSys->_setTextureBlendMode( 0, colorBlendMode );
+	RenderSys->_setTextureBlendMode( 0, alphaBlendMode );
+	RenderSys->_setTextureAddressingMode( 0, uvwAddressMode );
+	RenderSys->_disableTextureUnitsFrom( 1 );	=

+	RenderSys->_setFog( Ogre::FOG_NONE );
+	RenderSys->_setCullingMode( Ogre::CULL_NONE );
+	RenderSys->_setDepthBufferParams( false, false );
+	RenderSys->_setColourBufferWriteEnabled( true, true, true, false );
+	RenderSys->setShadingType( Ogre::SO_GOURAUD );
+	RenderSys->_setPolygonMode( Ogre::PM_SOLID );
+	RenderSys->unbindGpuProgram( Ogre::GPT_FRAGMENT_PROGRAM );
+	RenderSys->unbindGpuProgram( Ogre::GPT_VERTEX_PROGRAM );
+	RenderSys->_setSceneBlending( Ogre::SBF_SOURCE_ALPHA, Ogre::SBF_ONE_MINUS=
_SOURCE_ALPHA );
 	RenderSys->_setAlphaRejectSettings( Ogre::CMPF_GREATER, 128 );
 	RenderSys->setLightingEnabled( mLightningEnabled );
 }
@@ -301,14 +301,14 @@
 			delete SpriteQueue;
 		}
 	}
-}
-
-void cSpriteManager::renderQueueStarted( Ogre::uint8 queueGroupId, const O=
gre::String &invocation, bool &skipThisInvocation ) { PROFILE
-	if ( !mAfterQueue && queueGroupId =3D=3D mTargetQueue )
-      renderBuffer();
-}
-
-void cSpriteManager::renderQueueEnded( Ogre::uint8 queueGroupId, const Ogr=
e::String &invocation, bool &repeatThisInvocation ) { PROFILE
-	if ( mAfterQueue && queueGroupId =3D=3D mTargetQueue )
-      renderBuffer();
-}
+}
+
+void cSpriteManager::renderQueueStarted( Ogre::uint8 queueGroupId, const O=
gre::String &invocation, bool &skipThisInvocation ) { PROFILE
+	if ( !mAfterQueue && queueGroupId =3D=3D mTargetQueue )
+      renderBuffer();
+}
+
+void cSpriteManager::renderQueueEnded( Ogre::uint8 queueGroupId, const Ogr=
e::String &invocation, bool &repeatThisInvocation ) { PROFILE
+	if ( mAfterQueue && queueGroupId =3D=3D mTargetQueue )
+      renderBuffer();
+}



From no-reply at zwischenwelt.org  Thu Aug  2 17:12:25 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 15:12:25 -0000
Subject: [Iris-commit] [IRIS] r1329 - in /branches/knut/data/lua: ./ gui/
	net/ obj/
Message-ID: <20070802151226.AB966B140B5@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 17:12:24 2007
New Revision: 1329

Log:
syncing with trunk

Modified:
    branches/knut/data/lua/gui/gui.gumpmanager.lua
    branches/knut/data/lua/lib.3d.combat.lua
    branches/knut/data/lua/lib.3d.map.lua
    branches/knut/data/lua/lib.3d.mobileanim.lua
    branches/knut/data/lua/lib.3d.mousepick.lua
    branches/knut/data/lua/lib.3d.renderer.lua
    branches/knut/data/lua/lib.debugmenu.lua
    branches/knut/data/lua/lib.devtool.lua
    branches/knut/data/lua/lib.fallback.lua
    branches/knut/data/lua/lib.modelanim.lua
    branches/knut/data/lua/lib.models.lua
    branches/knut/data/lua/lib.mousepick.lua
    branches/knut/data/lua/lib.protocol.lua
    branches/knut/data/lua/lib.walking2.lua
    branches/knut/data/lua/main.lua
    branches/knut/data/lua/net.login.lua
    branches/knut/data/lua/net.other.lua
    branches/knut/data/lua/net.trade.lua
    branches/knut/data/lua/net.uodragdrop.lua
    branches/knut/data/lua/net.walk.lua
    branches/knut/data/lua/net/net.main.lua
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/net/net.object.lua
    branches/knut/data/lua/obj/obj.dynamic.lua
    branches/knut/data/lua/obj/obj.main.lua
    branches/knut/data/lua/obj/obj.player.lua

Modified: branches/knut/data/lua/gui/gui.gumpmanager.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.gumpmanager.lua (original)
+++ branches/knut/data/lua/gui/gui.gumpmanager.lua Thu Aug  2 17:12:24 2007
@@ -804,51 +804,6 @@
 	return textfield
 end
 =

--- TODO : add this everywhere
--- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
-function ApplyArtidStackManipulation (item)
-	item.baseartid =3D item.artid
-	=

-	-- from varan
-	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") end
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") end
-	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") end
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") end
-	-- Silver
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") end
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") end
-	-- cannonball
-	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") end
-
-	--TODO : if not in this list, and amount > 0 : draw the graphic 2 times
-	--for example: if (item.baseartid =3D=3D hex2num("0xE73") and item.amount=
 > 0) then item.artid =3D hex2num("0xE74") item.drawcount=3D2 end
-
-	-- ART -> GUMP
-	-- white backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue end
-	-- brown backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue end
-	-- brown chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	-- white chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-
-	-- just for testing, remove me
-	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
-end
-
 function gGumpmanager._GumpAddImage( gump, x, y, id, hue, page )
 	local material		=3D GetGumpMat( id, hue )
 	local width, height	=3D GetGumpSize( id )

Modified: branches/knut/data/lua/lib.3d.combat.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.combat.lua (original)
+++ branches/knut/data/lua/lib.3d.combat.lua Thu Aug  2 17:12:24 2007
@@ -39,7 +39,7 @@
 =

 -- helper to plop hp adds and damage
 function Renderer3D:NotifyHPChange (serial, oldhp, newhp)
-	local mobile =3D gObjectList[serial]
+	local mobile =3D GetMobile(serial)
 	if mobile and oldhp and newhp then
 		local r,g,b =3D 0.0, 0.0, 0.0
 		-- hp change, d<0 means damage, d>0 hp gain

Modified: branches/knut/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.map.lua (original)
+++ branches/knut/data/lua/lib.3d.map.lua Thu Aug  2 17:12:24 2007
@@ -245,12 +245,7 @@
 =

 function Renderer3D:UpdateStaticVisibility	(entity) =

 	if (entity and entity.gfx and entity.gfx.billboard) then
-		-- evil fix
-		if (entity.zloc) then
-			entity.gfx.billboard:SetVisible(self:IsZLayerVisible(entity.zloc))
-		else
-			entity.gfx.billboard:SetVisible(self:IsZLayerVisible(entity.z))
-		end
+		entity.gfx.billboard:SetVisible(self:IsZLayerVisible(entity.zloc))
 	end
 end
 =

@@ -262,13 +257,13 @@
 		end
 	elseif (dynamic.gfx) then
 		-- normal item
-		dynamic.gfx:SetVisible(self:IsZLayerVisible(dynamic.z))
-		if (dynamic.gfx.billboard) then dynamic.gfx.billboard:SetVisible(self:Is=
ZLayerVisible(dynamic.z)) end
+		dynamic.gfx:SetVisible(self:IsZLayerVisible(dynamic.zloc))
+		if (dynamic.gfx.billboard) then dynamic.gfx.billboard:SetVisible(self:Is=
ZLayerVisible(dynamic.zloc)) end
 	end
 end
 =

 function Renderer3D:UpdateMobileVisibility (mobile) =

-	self:MobileSetVisible(mobile,self:IsZLayerVisible(mobile.z))
+	self:MobileSetVisible(mobile,self:IsZLayerVisible(mobile.zloc))
 end
 =

 -- TODO: blend out mounts
@@ -307,14 +302,11 @@
 		end
 		=

 		-- check dynamics for multis to detect house roofs and stuff like this		=

-		for k,object in pairs(gObjectList) do =

-			if (object.isdynamic) then
-				local dynamic =3D object
-				if (dynamic.lMultiChildGfx) then
-					for k,child in pairs(dynamic.lMultiChildGfx) do
-						if (x =3D=3D dynamic.x+child.xloc and y =3D=3D dynamic.y+child.yloc =
and dynamic.z+child.zloc > playerheadpos) then
-							playerIsInside =3D true =

-						end	=

+		for k,dynamic in pairs(GetDynamicList()) do
+			if (dynamic.lMultiChildGfx) then
+				for k,child in pairs(dynamic.lMultiChildGfx) do
+					if (x =3D=3D dynamic.xloc+child.xloc and y =3D=3D dynamic.yloc+child.=
yloc and dynamic.zloc+child.zloc > playerheadpos) then
+						playerIsInside =3D true
 					end
 				end
 			end
@@ -356,11 +348,10 @@
 			end
 		end
 		=

-		-- update mobiles abd dynamics
-		for k,object in pairs(gObjectList) do
-			if (object.isdynamic) then self:UpdateDynamicVisibility(object) end
-			if (object.ismobile) then self:UpdateMobileVisibility(object) end
-		end
+		-- update dynamics
+		for k,dynamic in pairs(GetDynamicList()) do self:UpdateDynamicVisibility=
(dynamic) end
+		-- update mobiles
+		for k,mobile in pairs(GetMobileList()) do self:UpdateMobileVisibility(mo=
bile) end
 	end
 end
 =


Modified: branches/knut/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.mobileanim.lua (original)
+++ branches/knut/data/lua/lib.3d.mobileanim.lua Thu Aug  2 17:12:24 2007
@@ -40,7 +40,7 @@
 =

 =

 function Renderer3D:MobileStartServerSideAnim (anim) =

-	local mobile =3D gObjectList[anim.mobileserial]	=

+	local mobile =3D GetMobile(anim.mobileserial)
 	if (not mobile) then return end
 	=

 	anim.repeatcount =3D (anim.m_repeatFlag =3D=3D 0) and 1 or (1 + anim.m_re=
peat) -- here -1 for infinite
@@ -48,6 +48,8 @@
 	MobileStartAnim(mobile,mobile.modelparts,anim.m_animation,bDoLoop)
 	mobile.lastserveranim =3D anim
 	mobile.lastclientanim =3D nil
+	--mobile.dir =3D anim.m_direction -- this is wrong : runuo sends (short) =
frameCount  =

+	UpdateMobile(mobile) -- if dir changed
 	-- todo : remaining anim options (m_animForward, m_frameDelay)
 end
 =

@@ -55,11 +57,11 @@
 function Renderer3D:MobileStartClientSideAnim (mobile)
 	if (not mobile.equipment) then return end
 	mobile.animinit =3D true
-	local bodyid =3D MobileArtId2BodyId(mobile.body)
+	local bodyid =3D MobileArtId2BodyId(mobile.artid)
 	=

 	-- detect animation modifiers : staff, mount=3Dhorse, combat
-	local mount		=3D mobile:getequipment(kLayer_Mount)
-	local twohand	=3D mobile:getequipment(kLayer_TwoHanded) -- staff
+	local mount		=3D GetMobileEquipmentItem(mobile,kLayer_Mount)
+	local twohand	=3D GetMobileEquipmentItem(mobile,kLayer_TwoHanded) -- staff
 	local bHasStaff =3D twohand and BitwiseAND(GetStaticTileTypeFlags(twohand=
.artid) or 0,kTileDataFlag_Weapon) ~=3D 0
 	local bWarMode 	=3D BitwiseAND(mobile.flag,kMobileFlag_WarMode) ~=3D 0 --=
 combat
 	local bRunning 	=3D mobile.walksmooth_moving and (BitwiseAND(mobile.dir,k=
WalkFlag_Run) ~=3D 0)
@@ -145,9 +147,9 @@
 	-- handles clientside anim stuff together with walksmooth to detect run, =
turn etc efficiently
 	=

 	-- walksmooth
-	if (mobile.x ~=3D mobile.gfx3d_walksmooth_last_xloc or
-		mobile.y ~=3D mobile.gfx3d_walksmooth_last_yloc or
-		mobile.z ~=3D mobile.gfx3d_walksmooth_last_zloc or
+	if (mobile.xloc ~=3D mobile.gfx3d_walksmooth_last_xloc or
+		mobile.yloc ~=3D mobile.gfx3d_walksmooth_last_yloc or
+		mobile.zloc ~=3D mobile.gfx3d_walksmooth_last_zloc or
 		mobile.dir  ~=3D mobile.gfx3d_walksmooth_last_dir) then =

 		=

 		mobile.gfx3d_walksmooth_prelast_xloc =3D mobile.gfx3d_walksmooth_last_xl=
oc
@@ -156,9 +158,9 @@
 		mobile.gfx3d_walksmooth_prelast_dir  =3D mobile.gfx3d_walksmooth_last_dir
 		mobile.gfx3d_walksmooth_prelast_time =3D mobile.gfx3d_walksmooth_last_ti=
me
 		=

-		mobile.gfx3d_walksmooth_last_xloc =3D mobile.x
-		mobile.gfx3d_walksmooth_last_yloc =3D mobile.y
-		mobile.gfx3d_walksmooth_last_zloc =3D mobile.z
+		mobile.gfx3d_walksmooth_last_xloc =3D mobile.xloc
+		mobile.gfx3d_walksmooth_last_yloc =3D mobile.yloc
+		mobile.gfx3d_walksmooth_last_zloc =3D mobile.zloc
 		mobile.gfx3d_walksmooth_last_dir  =3D mobile.dir =

 		mobile.gfx3d_walksmooth_last_time =3D gMyTicks
 		local timediff =3D mobile.gfx3d_walksmooth_last_time - (mobile.gfx3d_wal=
ksmooth_prelast_time or 0)
@@ -262,7 +264,7 @@
 end
 =

 function Renderer3D:SetSimpleMobilePos (mobile)
-	local x,y,z =3D Renderer3D:UOPosToLocal(mobile.x,mobile.y,mobile.z * 0.1)
+	local x,y,z =3D Renderer3D:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zl=
oc * 0.1)
 	local ang_in_degrees =3D (mobile.dir + 0) * 45.0
 	local qw,qx,qy,qz =3D Quaternion.fromAngleAxis(- gfDeg2Rad * ang_in_degre=
es,0,0,1)
 	Renderer3D:UpdateMobilePos(mobile,x,y,z,qw,qx,qy,qz)

Modified: branches/knut/data/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.mousepick.lua (original)
+++ branches/knut/data/lua/lib.3d.mousepick.lua Thu Aug  2 17:12:24 2007
@@ -151,82 +151,76 @@
 			end
 	end end
 =

-	-- dynamics and mobile
-	local bIgnorePlayer =3D self:IsFirstPersonCam()
-	for k,object in pairs(gObjectList) do =

-		-- dynamics
-		if (object.isdynamic) then =

-			local mobile =3D dynamic
-			-- does this dynamic consists of many gfx parts (multi)?
-			if dynamic.lMultiChildGfx then
-				-- handle multi collision
-				for k,gfx in pairs(dynamic.lMultiChildGfx) do =

-					if (self:IsZLayerVisible(gfx.zloc)) then
-						-- WARNING copy & paste code
-							bHit,fHitDist =3D gfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
-							if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePic=
kFoundDist)) then
-								self.gMousePickFoundDist =3D fHitDist
-								gMousePickFoundHit =3D {}
-								gMousePickFoundHit.hittype =3D kMousePickHitType_Dynamic
-								gMousePickFoundHit.dynamic =3D dynamic
-							end
-					end
-				end
-			elseif (dynamic.gfx) then
-				-- WARNING copy & paste code
-				if (self:IsZLayerVisible(dynamic.zloc)) then
-					if (dynamic.gfx.billboard) then
-						-- fallback
-						local x,y,z =3D dynamic.gfx.billboard:GetDerivedPosition()
-						fHitDist =3D SphereRayPick(x,y,z,0.5,rx,ry,rz,rvx,rvy,rvz) -- 0.5 rad
-						bHit =3D (fHitDist ~=3D nil)
-					else
-						-- mesh mousepick
-						bHit,fHitDist =3D dynamic.gfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
-					end
-					if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickF=
oundDist)) then
-						self.gMousePickFoundDist =3D fHitDist
-						gMousePickFoundHit =3D {}
-						gMousePickFoundHit.hittype =3D kMousePickHitType_Dynamic
-						gMousePickFoundHit.dynamic =3D dynamic
-					end
-				end
-			end
-		end
-		=

-		-- mobiles
-		if (object.ismobile) then =

-			local mobile =3D object
-			if (mobile.gfx and self:IsZLayerVisible(mobile.zloc) and ((not bIgnoreP=
layer) or (not IsPlayerMobile(mobile)))) then
-				if (true) then
-					-- small bbox mousepick as fallback in case model is not available/in=
visible (horse)
-					bHit,fHitDist =3D mobile.gfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
-					if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickF=
oundDist)) then
-						self.gMousePickFoundDist =3D fHitDist
-						gMousePickFoundHit =3D {}
-						gMousePickFoundHit.hittype =3D kMousePickHitType_Mobile
-						gMousePickFoundHit.mobile =3D mobile
-					end
-				end
-				if (gbUseExactGrannyMousepicking and mobile.modelparts) then =

-					-- exact granny mousepick if possible
-					--print("gbUseExactGrannyMousepicking",mobile.modelparts)
-					for k,partgfx in pairs(mobile.modelparts) do =

-						--print("### grannymousepick start")
-						bHit,fHitDist =3D partgfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
-						--print("### grannymousepick end,",bHit)
-						--if (bHit) then print("HIT ! HIT ! HIT ! HIT ! HIT !") end
+	-- dynamics
+	for k,dynamic in pairs(GetDynamicList()) do
+		-- does this dynamic consists of many gfx parts (multi)?
+		if dynamic.lMultiChildGfx then
+			-- handle multi collision
+			for k,gfx in pairs(dynamic.lMultiChildGfx) do =

+				if (self:IsZLayerVisible(gfx.zloc)) then
+					-- WARNING copy & paste code
+						bHit,fHitDist =3D gfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
 						if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePick=
FoundDist)) then
 							self.gMousePickFoundDist =3D fHitDist
 							gMousePickFoundHit =3D {}
-							gMousePickFoundHit.hittype =3D kMousePickHitType_Mobile
-							gMousePickFoundHit.mobile =3D mobile
+							gMousePickFoundHit.hittype =3D kMousePickHitType_Dynamic
+							gMousePickFoundHit.dynamic =3D dynamic
 						end
-					end
-				end
-			end =

-		end
-	end
+				end
+			end
+		elseif (dynamic.gfx) then
+			-- WARNING copy & paste code
+			if (self:IsZLayerVisible(dynamic.zloc)) then
+				if (dynamic.gfx.billboard) then
+					-- fallback
+					local x,y,z =3D dynamic.gfx.billboard:GetDerivedPosition()
+					fHitDist =3D SphereRayPick(x,y,z,0.5,rx,ry,rz,rvx,rvy,rvz) -- 0.5 rad
+					bHit =3D (fHitDist ~=3D nil)
+				else
+					-- mesh mousepick
+					bHit,fHitDist =3D dynamic.gfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
+				end
+				if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickFo=
undDist)) then
+					self.gMousePickFoundDist =3D fHitDist
+					gMousePickFoundHit =3D {}
+					gMousePickFoundHit.hittype =3D kMousePickHitType_Dynamic
+					gMousePickFoundHit.dynamic =3D dynamic
+				end
+			end
+		end
+	end
+
+	-- mobiles
+	local bIgnorePlayer =3D self:IsFirstPersonCam()
+	for k,mobile in pairs(GetMobileList()) do if (mobile.gfx and self:IsZLaye=
rVisible(mobile.zloc) and ((not bIgnorePlayer) or (not IsPlayerMobile(mobil=
e)))) then
+		if (true) then
+			-- small bbox mousepick as fallback in case model is not available/invi=
sible (horse)
+			bHit,fHitDist =3D mobile.gfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
+			if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickFou=
ndDist)) then
+				self.gMousePickFoundDist =3D fHitDist
+				gMousePickFoundHit =3D {}
+				gMousePickFoundHit.hittype =3D kMousePickHitType_Mobile
+				gMousePickFoundHit.mobile =3D mobile
+			end
+		end
+		if (gbUseExactGrannyMousepicking and mobile.modelparts) then =

+			-- exact granny mousepick if possible
+			--print("gbUseExactGrannyMousepicking",mobile.modelparts)
+			for k,partgfx in pairs(mobile.modelparts) do =

+				--print("### grannymousepick start")
+				bHit,fHitDist =3D partgfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
+				--print("### grannymousepick end,",bHit)
+				--if (bHit) then print("HIT ! HIT ! HIT ! HIT ! HIT !") end
+				if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickFo=
undDist)) then
+					self.gMousePickFoundDist =3D fHitDist
+					gMousePickFoundHit =3D {}
+					gMousePickFoundHit.hittype =3D kMousePickHitType_Mobile
+					gMousePickFoundHit.mobile =3D mobile
+				end
+			end
+		end
+	end end
+	=

 	=

 	-- prepare exact hit coords 3d hit
 	self.gMousePickFoundHit_ExactX =3D rx + self.gMousePickFoundDist * rvx
@@ -317,7 +311,7 @@
 		end
 	elseif (o.hittype =3D=3D kMousePickHitType_Mobile) then
 		local mobile =3D o.mobile
-		local mouseover =3D sprintf("(mobiletype=3D0x%04x serial=3D0x%08x notori=
ety=3D%d flag=3D0x%02x)",mobile.body,mobile.serial,mobile.notoriety,mobile.=
flag)
+		local mouseover =3D sprintf("(mobiletype=3D0x%04x serial=3D0x%08x notori=
ety=3D%d flag=3D0x%02x)",mobile.artid,mobile.serial,mobile.notoriety,mobile=
.flag)
 		=

 		Client_SetBottomLine(self.gMousePickTippOverride or mouseover)
 		=

@@ -330,7 +324,7 @@
 			--local x,y,z =3D gMousePickBBox:GetPosition()
 			--gMousePickBBox:SetPosition(x,y,z+0.1)
 			--local qw,qx,qy,qz =3D Quaternion.identity()
-			--local qw,qx,qy,qz =3D GetStaticMeshOrientation(mobile.body)
+			--local qw,qx,qy,qz =3D GetStaticMeshOrientation(mobile.artid)
 			--gMousePickBBox:SetOrientation(qw,qx,qy,qz)
 			self.gMousePickBBox:SetVisible(true) =

 		end

Modified: branches/knut/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.renderer.lua (original)
+++ branches/knut/data/lua/lib.3d.renderer.lua Thu Aug  2 17:12:24 2007
@@ -84,18 +84,14 @@
 	self:SetMapEnvironment()
 	=

 	self.gbCamRotChanged =3D true
-	for k,object in pairs(gObjectList) do
-		if (object.isdynamic) then self:CreateDynamicGfx(object) end
-		if (object.ismobile ) then self:CreateMobileGfx(object) end
-	end
+	for k,dynamic in pairs(GetDynamicList()) do self:CreateDynamicGfx(dynamic=
) end
+	for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile) end
 end
 =

 function Renderer3D:DeInit()
 	--print("deactivating Renderer3D")
-	for k,object in pairs(gObjectList) do =

-		if (object.ismobile ) then self:DestroyMobileGfx(object) end
-		if (object.isdynamic) then self:DestroyDynamicGfx(object) end
-	end
+	for k,dynamic in pairs(GetDynamicList()) do self:DestroyDynamicGfx(dynami=
c) end
+	for k,mobile in pairs(GetMobileList()) do self:DestroyMobileGfx(mobile) e=
nd
 	self:DeactivateMousePick()
 	self:ClearMapCache()
 	Client_SetFog()
@@ -307,9 +303,9 @@
 function Renderer3D:UpdateMobile( mobile )
 	if (not self.gbActive) then return end
 	=

-	if mobile.serial =3D=3D gPlayerBodySerial then
+	if (IsPlayerMobile(mobile)) then
 		-- set audio listener position if this is the playerbody
-		SoundSetListenerPosition(mobile.x,mobile.y,mobile.z * 0.1 + self.gZ_Fact=
or)
+		SoundSetListenerPosition(mobile.xloc,mobile.yloc,mobile.zloc * 0.1 + sel=
f.gZ_Factor)
 	end
 =

 	if (not mobile.gfx) then
@@ -507,7 +503,7 @@
 function Renderer3D:UpdateMobilePos (mobile,x,y,z,qw,qx,qy,qz)
 	-- set position and orientation
 	if (mobile.modelgfx) then
-		local mount =3D mobile:getequipment(kLayer_Mount)
+		local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
 		mobile.modelgfx:SetPosition(x-0.5, y+0.5, z + (mount and -kMountZAdd or =
0))
 		mobile.modelgfx:SetOrientation(qw,qx,qy,qz)
 	end
@@ -610,7 +606,7 @@
 	local iTimeSinceLastStepInSeconds =3D self.giLastAnimStepTime and ((gMyTi=
cks - self.giLastAnimStepTime) / 1000) or 0
 	self.giLastAnimStepTime =3D gMyTicks
 	=

-	for k,mobile in pairs(gObjectList) do if (mobile.ismobile) then Renderer3=
D:StepMobile(mobile,iTimeSinceLastStepInSeconds) end end
+	for k,mobile in pairs(GetMobileList()) do Renderer3D:StepMobile(mobile,iT=
imeSinceLastStepInSeconds) end
 end
 =

 -- obsolete but might be interesting
@@ -669,10 +665,12 @@
 		self.giLastMapOriginX =3D self.giMapOriginX
 		self.giLastMapOriginY =3D self.giMapOriginY
 		=

-		for k,object in pairs(gObjectList) do =

-			if (object.ismobile) then self:UpdateMobile(object) end
-			if (object.isdynamic) then self:UpdateDynamicItemPos(object) end
-		end
+		for k,mobile in pairs(GetMobileList()) do =

+			UpdateMobile(mobile) =

+		end
+		for k,dynamic in pairs(GetDynamicList()) do if (dynamic.gfx) then
+			self:UpdateDynamicItemPos(dynamic)
+		end end
 	end
 end
 =

@@ -688,7 +686,7 @@
 =

 function Renderer3D:UpdateDynamicItemPos ( dynamic )
 	if (dynamic.gfx) then
-		dynamic.gfx:SetPosition(self:UOPosToLocal(dynamic.x + dynamic.xadd,dynam=
ic.y + dynamic.yadd,dynamic.z * 0.1 + dynamic.zadd))
+		dynamic.gfx:SetPosition(self:UOPosToLocal(dynamic.xloc + dynamic.xadd,dy=
namic.yloc + dynamic.yadd,dynamic.zloc * 0.1 + dynamic.zadd))
 	end
 end
 =

@@ -787,7 +785,7 @@
 			print("+++++++++++++++++++++++++")
 			print("ITEM",vardump(item))
 		else =

-			--printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed loa=
ding mesh for dynamic (multi): artid=3D%i z_typename=3D%s\n",item.artid or =
-1,item.z_typename or ""))
+			printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed loadi=
ng mesh for dynamic (multi): artid=3D%i z_typename=3D%s\n",item.artid or -1=
,item.z_typename or ""))
 		end
 	else
 		-- normal 1 part object
@@ -833,7 +831,7 @@
 				item.yadd =3D item.yadd + 0.5
 				item.zadd =3D item.zadd + 0.5
 				self:CreateArtBillBoard(item.gfx.billboard,iTranslatedTileTypeID,item.=
hue)
-				--printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed lo=
ading mesh for dynamic: artid=3D%i z_typename=3D%s\n",item.artid or -1,item=
.z_typename or ""))
+				printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed load=
ing mesh for dynamic: artid=3D%i z_typename=3D%s\n",item.artid or -1,item.z=
_typename or ""))
 			end
 		end
 		item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
@@ -923,7 +921,7 @@
 -- removes the current mobile selection
 function Renderer3D:DeselectMobile ()
 	if (giSelectedMobile ~=3D 0) then
-		local mobile =3D gObjectList[giSelectedMobile]
+		local mobile =3D GetMobile(giSelectedMobile)
 		if (mobile) then
 			mobile.isselected =3D false
 			mobile.selection:SetVisible(false)
@@ -937,14 +935,14 @@
 	-- print ("selectmobile",iSerial)
 	self:DeselectMobile()
 	if (iSerial ~=3D 0) then
-		local mobile =3D gObjectList[iSerial]
+		local mobile =3D GetMobile(iSerial)
 		if (mobile) then
 			mobile.isselected =3D true
 			-- TODO is it possible that selection is not created (UpdateMobile crea=
tes selection)
-			--mobile.selection:SetVisible(true)
+			mobile.selection:SetVisible(true)
 			giSelectedMobile =3D iSerial
 			=

-			-- CombatCreateDamageText("jupii!",mobile.x,mobile.y,mobile.z)
-		end
-	end
-end
+			-- CombatCreateDamageText("jupii!",mobile.xloc,mobile.yloc,mobile.zloc)
+		end
+	end
+end

Modified: branches/knut/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.debugmenu.lua (original)
+++ branches/knut/data/lua/lib.debugmenu.lua Thu Aug  2 17:12:24 2007
@@ -161,12 +161,12 @@
 		local mobile =3D gDebugTestMobiles[index]
 		if (not mobile) then return end
 		mobile.equipment =3D RepairEquipIndex(mobile.equipment)
-		AddFadeLines(sprintf("DebugMenuShowModel model=3D%04x(=3D%d) anim=3D%d[%=
s]",mobile.body,mobile.body,gDebugMenuAnimIndex,GetAnimName(mobile.body,gDe=
bugMenuAnimIndex) or ""))
+		AddFadeLines(sprintf("DebugMenuShowModel model=3D%04x(=3D%d) anim=3D%d[%=
s]",mobile.artid,mobile.artid,gDebugMenuAnimIndex,GetAnimName(mobile.artid,=
gDebugMenuAnimIndex) or ""))
 		=

 		local animid =3D gDebugMenuAnimIndex
 		local bDoLoop =3D true
 		local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelP=
artModelIDs(mobile)
-		CreateMobileModelPartsFromModelIDArray(mobile.body,gDebugRootGfx,gDebugM=
odelParts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
+		CreateMobileModelPartsFromModelIDArray(mobile.artid,gDebugRootGfx,gDebug=
ModelParts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
 		if (gDebugMenuAnimIndex >=3D 0) then MobileStartAnim(mobile,gDebugModelP=
arts,animid,bDoLoop) end
 	end
 	=


Modified: branches/knut/data/lua/lib.devtool.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.devtool.lua (original)
+++ branches/knut/data/lua/lib.devtool.lua Thu Aug  2 17:12:24 2007
@@ -260,12 +260,9 @@
 =

 function ListDynamicsNearPos (x,y,z,radius)
 	local res =3D {}
-	for k,object in pairs(gObjectList) do =

-		if (object.isdynamic) then
-			local item =3D object
-			local d =3D dist2(x,y,item.xloc,item.yloc)
-			if (d <=3D radius) then table.insert(res,item) end =

-		end
+	for k,item in pairs(GetDynamicList()) do =

+		local d =3D dist2(x,y,item.xloc,item.yloc)
+		if (d <=3D radius) then table.insert(res,item) end =

 	end
 	return res
 end

Modified: branches/knut/data/lua/lib.fallback.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.fallback.lua (original)
+++ branches/knut/data/lua/lib.fallback.lua Thu Aug  2 17:12:24 2007
@@ -25,17 +25,14 @@
 	f:write(sprintf("RegisterSkippedArtBillboardFallBack(%d) -- 0x%04x name=
=3D%s\n",i,i,GetStaticTileTypeName(i) or "unknown"))
 	f:close()
 	-- hide existing dynamics
-	=

-	for k,object in pairs(gObjectList) do =

-		if (object.isdynamic) then
-			local item =3D object
-			if (item.iTileTypeID =3D=3D i and item.gfx and item.gfx.billboard) then =

-				item.gfx.billboard:Destroy() =

-				item.gfx.billboard =3D nil =

-			end
-		end =

+
+	for k,item in pairs(GetDynamicList()) do
+		if (item.iTileTypeID =3D=3D i and item.gfx and item.gfx.billboard) then =

+			item.gfx.billboard:Destroy() =

+			item.gfx.billboard =3D nil =

+		end
 	end
-	=

+
 	-- hide existing statics (requires map rebuild)
 	gCurrentRenderer:ClearMapCache()
 end
@@ -137,12 +134,9 @@
 =

 function List3DDynamicsNearPos (x,y,z,radius)
 	local res =3D {}
-	for k,object in pairs(gObjectList) do =

-		if (object.isdynamic) then
-			local item =3D object
+	for k,item in pairs(GetDynamicList()) do =

 			local d =3D dist2(x,y,item.xloc,item.yloc)
 			if (d <=3D radius) then table.insert(res,item) end =

-		end
 	end
 	return res
 end

Modified: branches/knut/data/lua/lib.modelanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.modelanim.lua (original)
+++ branches/knut/data/lua/lib.modelanim.lua Thu Aug  2 17:12:24 2007
@@ -33,14 +33,14 @@
 function MobileStartAnim (mobile,partsarr,animid,bDoLoop)
 	if (gDisableModelAnim) then return end
 	if (not gAnimInfoLists) then return end
-	local bodyid =3D MobileArtId2BodyId(mobile.body)
+	local bodyid =3D MobileArtId2BodyId(mobile.artid)
 	local animname =3D GetAnimName(bodyid,animid)
 	if (not GetAnimPath(bodyid,animid)) then return end -- anim not found
 	-- play animation
 	animlen =3D 0
 	for k,v in pairs(partsarr) do =

 		if (v:HasSkeleton()) then
-			printdebug("granny","MobileStartAnim",mobile.body,bodyid,animid,animnam=
e,GetAnimPath(bodyid,animid))
+			printdebug("granny","MobileStartAnim",mobile.artid,bodyid,animid,animna=
me,GetAnimPath(bodyid,animid))
 			v:SetAnim(animname,bDoLoop) =

 			v:SetAnimTimePos(0) =

 			v:AnimAddTime(0)

Modified: branches/knut/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.models.lua (original)
+++ branches/knut/data/lua/lib.models.lua Thu Aug  2 17:12:24 2007
@@ -305,7 +305,7 @@
 	local iSecondaryHandItem =3D nil
 	local modelidarr =3D {}
 	=

-	local bodyid =3D MobileArtId2BodyId(mobile.body)
+	local bodyid =3D MobileArtId2BodyId(mobile.artid)
 	local bFemale =3D IsBodyIDFemale(bodyid)
 	if (mobile.bIsFemale) then bFemale =3D true end -- debug hack
 	=

@@ -326,10 +326,10 @@
 	end
 	=

 	-- equipment, ORDER IS IMPORTANT FOR STITCHIN !!! (gLayerOrder?)
-	if (mobile.content) then =

+	if (GetMobileEquipmentList(mobile)) then =

 		-- TODO : i assume the paperdoll layerorder is the same as the granny la=
yeroder, check if this is correct
 		for index,layer in pairs(gLayerOrder) do
-			local item =3D mobile:getequipment(layer)
+			local item =3D GetMobileEquipmentItem(mobile,layer)
 			if (item and layer ~=3D kLayer_Mount) then  -- ignore mounts here, hand=
led seperately
 				local tiledata =3D GetStaticTileType(item.artid or 0)
 				--print("equip",item.artid,tiledata and tiledata.miAnimID or 0)
@@ -484,13 +484,13 @@
 =

 function UpdateMobileModel (mobile)
 	if (not gAnimInfoLists) then return end
-	--if (mobile.body ~=3D 400 and mobile.body ~=3D 401) then return end
+	--if (mobile.artid ~=3D 400 and mobile.artid ~=3D 401) then return end
 =

 	-- TODO: Debug and check why RunUO sends kPacket_Equipped_MOB with artid =
=3D=3D Zero
 	if (mobile.artid =3D=3D 0) then return end
 	if (not mobile.equipment) then return end -- happens when being teleported
 	=

-	local mount =3D mobile:getequipment(kLayer_Mount)
+	local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
 	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelPa=
rtModelIDs(mobile)
 	local bModelPartsChanged =3D false
 	if (not mobile.modelgfx) then bModelPartsChanged =3D true end
@@ -515,7 +515,7 @@
 		mobile.modelgfx:SetVisible(true)
 		mobile.modelparts =3D {}
 		mobile.modelidarr =3D modelidarr
-		CreateMobileModelPartsFromModelIDArray(mobile.body,mobile.modelgfx,mobil=
e.modelparts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
+		CreateMobileModelPartsFromModelIDArray(mobile.artid,mobile.modelgfx,mobi=
le.modelparts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
 		=

 		-- create mount gfx
 		mobile.hasmountgfx =3D false
@@ -579,7 +579,7 @@
 		end
 		=

 		if (false) then
-			local txt =3D sprintf("##### {body=3D%d,hue=3D%d, equipment=3D{",mobile=
.body,mobile.hue)
+			local txt =3D sprintf("##### {artid=3D%d,hue=3D%d, equipment=3D{",mobil=
e.artid,mobile.hue)
 			if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
 				local tiledata =3D GetStaticTileType(item.artid)
 				txt =3D txt .. sprintf("[%d]=3D{artid=3D%d,hue=3D%d,animid=3D%d},",k,i=
tem.artid,item.hue,tiledata and tiledata.miAnimID or 0)

Modified: branches/knut/data/lua/lib.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.mousepick.lua (original)
+++ branches/knut/data/lua/lib.mousepick.lua Thu Aug  2 17:12:24 2007
@@ -1,150 +1,146 @@
-kMousePickHitType_Static =3D 0
-kMousePickHitType_Terrain =3D 1
-kMousePickHitType_Dynamic =3D 2
-kMousePickHitType_Mobile =3D 3
-
-gMousePickFoundHit =3D false
-
-giSelectedMobile =3D 0
+kMousePickHitType_Static =3D 0
+kMousePickHitType_Terrain =3D 1
+kMousePickHitType_Dynamic =3D 2
+kMousePickHitType_Mobile =3D 3
+kMousePickHitType_ContainerItem =3D 4
+kMousePickHitType_PaperdollItem =3D 5
 =

--- OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix>f =
TerrainRayIntersect_Hit .lua
-function TerrainRayIntersect_Hit(tx,ty,tiletype,hit_dist,minz,maxz)
-	gCurrentRenderer:TerrainRayIntersect_Hit (tx,ty,tiletype,hit_dist,minz,ma=
xz)
+gMousePickFoundHit =3D false
+
+giSelectedMobile =3D 0
+
+-- OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix>f =
TerrainRayIntersect_Hit .lua
+function TerrainRayIntersect_Hit(tx,ty,tiletype,hit_dist,minz,maxz)
+	gCurrentRenderer:TerrainRayIntersect_Hit (tx,ty,tiletype,hit_dist,minz,ma=
xz)
 end
 =

 function IrisRightDoubleClick ()
-	-- TODO implement pathfinding and use it here
+	-- TODO implement pathfinding and use it here
 	-- SetAutoWalkTarget()
-end
-
-function IrisDoubleClick ()
-	gCurrentRenderer:MousePick()
-	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
-	if gbControlDown then
-		-- open status window if control pressed and mobile targeted
-		if (iSerial and iSerial ~=3D 0) then =

-			local mobile =3D gObjectList[iSerial].ismobile and gObjectList[iSerial]
-			local iMouseX,iMouseY =3D PollInput()
-			-- -50,-30 to place the dialog beneath the mouse
-			OpenStatus(mobile,iMouseX - 50,iMouseY - 30)
-		end
-	else
-		-- normal doubleclick handling
-		pm =3D GetPlayerMobile()
-		if (gActWarmode =3D=3D gWarmode_Normal or (pm and iSerial =3D=3D pm.seri=
al) ) then
-			if (iSerial and iSerial ~=3D 0) then
-				printdebug("UO","IrisDoubleClick: serial=3D0x%08x\n",iSerial)
-				Send_DoubleClick(iSerial)
-			end
-		end
-		if (gActWarmode =3D=3D gWarmode_Combat) then
-			if (iSerial and iSerial ~=3D 0) then
-				printdebug("UO","IrisDoubleClickAttack: serial=3D0x%08x\n",iSerial)
-				Send_AttackReq(iSerial)
-			end
-		end
-	end
-end
-
--- currently sent on mousedown
--- TODO : maybe only send on mouseup if no dragdrop took place ?
-function IrisSingleClick ()
-	if (IsTargetModeActive()) then =

-		CompleteTargetMode() -- see net.cursor.lua
-	else
-		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
-		if (iSerial and iSerial ~=3D 0) then =

-			printdebug("UO","IrisSingleClick: serial=3D0x%08x\n",iSerial)
-			Send_SingleClick(iSerial)
-			gCurrentRenderer:SelectMobile(iSerial)
-		else
-			-- TODO is this too removey?
-			-- gCurrentRenderer:DeselectMobile()
-		end
-	end
-end
-
-function IrisRightClick ()
-	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
-	if (iSerial and iSerial ~=3D 0) then =

-		printdebug("UO","IrisRightClick: serial=3D0x%08x\n",iSerial)
-		Send_PopupRequest(iSerial) =

-	end
-end
-
--- find mobile with the minimum distance to player (x,y 2d based)
-function SelectNearestMobile ()
-	gCurrentRenderer:DeselectMobile()
-	=

-	local mindist =3D -1
-	local minserial =3D 0
-	local playermobile =3D gObjectList[gPlayerBodySerial]
+end
+
+function IrisDoubleClick ()
+	gCurrentRenderer:MousePick()
+	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+	if gbControlDown then
+		-- open status window if control pressed and mobile targeted
+		if (iSerial and iSerial ~=3D 0) then =

+			local mobile =3D GetMobile(iSerial)
+			local iMouseX,iMouseY =3D PollInput()
+			-- -50,-30 to place the dialog beneath the mouse
+			OpenStatus(mobile,iMouseX - 50,iMouseY - 30)
+		end
+	else
+		-- normal doubleclick handling
+		pm =3D GetPlayerMobile()
+		if (gActWarmode =3D=3D gWarmode_Normal or (pm and iSerial =3D=3D pm.seri=
al) ) then
+			if (iSerial and iSerial ~=3D 0) then
+				printdebug("UO","IrisDoubleClick: serial=3D0x%08x\n",iSerial)
+				Send_DoubleClick(iSerial)
+			end
+		end
+		if (gActWarmode =3D=3D gWarmode_Combat) then
+			if (iSerial and iSerial ~=3D 0) then
+				printdebug("UO","IrisDoubleClickAttack: serial=3D0x%08x\n",iSerial)
+				Send_AttackReq(iSerial)
+			end
+		end
+	end
+end
+
+-- currently sent on mousedown
+-- TODO : maybe only send on mouseup if no dragdrop took place ?
+function IrisSingleClick ()
+	if (IsTargetModeActive()) then =

+		CompleteTargetMode() -- see net.cursor.lua
+	else
+		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		if (iSerial and iSerial ~=3D 0) then =

+			printdebug("UO","IrisSingleClick: serial=3D0x%08x\n",iSerial)
+			Send_SingleClick(iSerial)
+			gCurrentRenderer:SelectMobile(iSerial)
+		else
+			-- TODO is this too removey?
+			-- gCurrentRenderer:DeselectMobile()
+		end
+	end
+end
+
+function IrisRightClick ()
+	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+	if (iSerial and iSerial ~=3D 0) then =

+		printdebug("UO","IrisRightClick: serial=3D0x%08x\n",iSerial)
+		Send_PopupRequest(iSerial) =

+	end
+end
+
+-- find mobile with the minimum distance to player (x,y 2d based)
+function SelectNearestMobile ()
+	gCurrentRenderer:DeselectMobile()
+	=

+	local mindist =3D -1
+	local minserial =3D 0
+	local playermobile =3D GetMobile(gPlayerBodySerial)
 	if (playermobile) then
-		for k,object in pairs(gObjectList) do =

-			if (object.ismobile) then =

-				local mobile =3D object
-				if (k ~=3D gPlayerBodySerial) then
-					-- calculate distance to player
-					local dx =3D (mobile.x - playermobile.x)
-					local dy =3D (mobile.y - playermobile.y)
-					local d =3D math.sqrt(dx*dx + dy*dy)
-					if (mindist < 0 or d < mindist) then
-						-- new min found
-						minserial =3D k
-						mindist =3D d
-					end
+		for k,mobile in pairs(GetMobileList()) do =

+			if (k ~=3D gPlayerBodySerial) then
+				-- calculate distance to player
+				local dx =3D (mobile.xloc - playermobile.xloc)
+				local dy =3D (mobile.yloc - playermobile.yloc)
+				local d =3D math.sqrt(dx*dx + dy*dy)
+				if (mindist < 0 or d < mindist) then
+					-- new min found
+					minserial =3D k
+					mindist =3D d
 				end
 			end
-		end
-	end
-	-- select the nearest if found
-	if (minserial ~=3D 0) then
-		gCurrentRenderer:SelectMobile(minserial)
-	end
-end
-
--- selects the next mobile cycling through all mobiles
-function SelectNextMobile ()
-	local current =3D giSelectedMobile
-	local minserial =3D -1
-	local nextminserial =3D -1
+		end
+	end
+	-- select the nearest if found
+	if (minserial ~=3D 0) then
+		gCurrentRenderer:SelectMobile(minserial)
+	end
+end
+
+-- selects the next mobile cycling through all mobiles
+function SelectNextMobile ()
+	local current =3D giSelectedMobile
+	local minserial =3D -1
+	local nextminserial =3D -1
 	-- print ("current", current)
 	=

-	for k,object in pairs(gObjectList) do =

-		if (object.ismobile) then =

-			local mobile =3D object
-			if (current < k and (k < nextminserial or nextminserial < 0)) then
-				-- small serial (bigger than current found)
-				nextminserial =3D k
-				-- print ("nextminserial",nextminserial)
-			end
-			if (minserial < 0 or k < minserial) then
-				-- searches for the absolute min serial, cycle start
-				minserial =3D k
-				-- print ("minserial",minserial)
-			end
+	for k,mobile in pairs(GetMobileList()) do
+		if (current < k and (k < nextminserial or nextminserial < 0)) then
+			-- small serial (bigger than current found)
+			nextminserial =3D k
+			-- print ("nextminserial",nextminserial)
 		end
-	end
-	=

-	-- select the next if found
-	if (nextminserial > 0) then
-		gCurrentRenderer:SelectMobile(nextminserial)
-	else
-		-- or the start if no next found
-		if (minserial > 0) then
-			gCurrentRenderer:SelectMobile(minserial)
-		end
-	end
-end
-
--- attack the current selected mobile or just go to it (depends in warmode=
 on/off)
-function AttackSelectedMobile ()
-	if (giSelectedMobile ~=3D 0) then
-		-- who shall i kill, master?
-		local target =3D gObjectList[giSelectedMobile]
-		if target then
-			-- run to the target
-			SetFollowMobile(giSelectedMobile)
-		end
-	end
-end
+		if (minserial < 0 or k < minserial) then
+			-- searches for the absolute min serial, cycle start
+			minserial =3D k
+			-- print ("minserial",minserial)
+		end
+	end
+	=

+	-- select the next if found
+	if (nextminserial > 0) then
+		gCurrentRenderer:SelectMobile(nextminserial)
+	else
+		-- or the start if no next found
+		if (minserial > 0) then
+			gCurrentRenderer:SelectMobile(minserial)
+		end
+	end
+end
+
+-- attack the current selected mobile or just go to it (depends in warmode=
 on/off)
+function AttackSelectedMobile ()
+	if (giSelectedMobile ~=3D 0) then
+		-- who shall i kill, master?
+		local target =3D GetMobile(giSelectedMobile)
+		if target then
+			-- run to the target
+			SetFollowMobile(giSelectedMobile)
+		end
+	end
+end

Modified: branches/knut/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.protocol.lua (original)
+++ branches/knut/data/lua/lib.protocol.lua Thu Aug  2 17:12:24 2007
@@ -41,9 +41,9 @@
 	dofile(libpath .. "net.sound.lua")
 	dofile(libpath .. "net.trade.lua")
 	dofile(libpath .. "net.securetrade.lua")
+	dofile(libpath .. "net.uodragdrop.lua")
 	dofile(libpath .. "net.walk.lua")
 	dofile(libpath .. "net.world.lua")
-	dofile(libpath .. "net.customhouse.lua")
 	dofile(libpath .. "net.corpse.lua")
 =

 	=

@@ -151,78 +151,9 @@
 =

 -- Send Packets -----------------------------------------------------------
 =

--- send login server request 0x80
--- answered by 0xA8 kPacket_Server_List which calls MainMenuShowServerList
-function ProtocolSend_Account_Login_Request	(sName,sPassword,iSeed)
-	printdebug("login",sprintf("NET: Account_Login_Request: Name: %s Password=
: %s Seed: %i\n",sName,sPassword,iSeed))
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Account_Login_Request)
-	out:PushFilledString(sName,30)
-	out:PushFilledString(sPassword,30)
-	out:PushNetUint8(iSeed)
-	out:SendPacket()
-end
-
--- send gameserverselect to loginserver : kPacket_Server_Select 0xA0
--- answered by kPacket_Server_Redirect 0x8C
--- which calls ProtocolSend_GameServer_PostLogin kPacket_Post_Login 0x91 =

-function ProtocolSend_GameServer_Select(iGameServerID)
-	printdebug("login",sprintf("NET: GameServer_Select: %i\n",iGameServerID))
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Server_Select)
-	out:PushNetUint16(iGameServerID)
-	out:SendPacket()
-end
-
--- send postlogin to gameserver  kPacket_Post_Login 0x91
--- something is wrong...runuo & wolfpack detects invalid client
--- answered by kPacket_Features 0xB9 (gClientFeatures)  and  kPacket_Chara=
cter_List 0xA9
-function ProtocolSend_GameServer_PostLogin(sName,sPassword,iAccount)
-	printdebug("login",sprintf("NET: GameServer_PostLogin: Name: %s Password:=
 %s AccountNr.: 0x%08x\n",sName,sPassword,iAccount))
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Post_Login)
-	out:PushNetUint32(iAccount)
-	out:PushFilledString(sName,30)
-	out:PushFilledString(sPassword,30)
-	out:SendPacket()
-end
-
--- send characterselect to gameserver
-function ProtocolSend_Character_Select(iCharacterID,iAccount)
-	printdebug("login",sprintf("NET: Character_Select: %i Name: %s Password: =
%s AccountNr.:%x\n",
-			iCharacterID,gCharacterList[iCharacterID].name,gCharacterList[iCharacte=
rID].pw,iAccount))
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Pre_Login)
-	out:PushNetUint32(hex2num("0xedededed"))
-	out:PushFilledString(gCharacterList[iCharacterID].name,30)
-	out:PushFilledString(gCharacterList[iCharacterID].pw,30)
-	out:PushNetUint32(iCharacterID)
-	out:PushNetUint32(hex2num("0xC0A83016"))	--out:PushNetUint32(gGameServerI=
P)		--TODO: check: iAccount or gGameServerIP
-	out:SendPacket()
-end
-
--- client identification
-function Send_ClientQuery(iMode,iCharacterID)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Client_Query)
-	out:PushNetUint32(hex2num("0xedededed"))
-	out:PushNetUint8(iMode)
-	out:PushNetUint32(iCharacterID)
-	out:SendPacket()
-end
-
--- send combat request to server, triggers kPacket_Combat
-function Send_CombatMode(iWarMode)
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Request_Assistance)
-	out:PushNetUint8(iWarMode)
-	out:PushNetUint16(hex2num("0x0032"))
-	out:PushNetUint8(hex2num("0x00"))
-	out:SendPacket()
-end
-
 -- request serverside helppage
 function Send_RequestHelp()
+	print("NET: Send_RequestHelp")
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Request_Assistance)
 	for i=3D1, 257 do
@@ -240,4 +171,3 @@
 	out:PushNetUint32(serial)
 	out:SendPacket()
 end
-

Modified: branches/knut/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.walking2.lua (original)
+++ branches/knut/data/lua/lib.walking2.lua Thu Aug  2 17:12:24 2007
@@ -1,175 +1,174 @@
--- Walking Implementation for PC
--- thx for helping to Arahil
-
-gDebugWalkingDetailed =3D true =

-
-function printwalkdebug (...) if (gDebugWalkingDetailed) then printdebug("=
walking",unpack(arg)) end end =

-
--- returns tiletype,zloc
-function GetAbsTile (xloc,yloc) =

-	return gGroundBlockLoader:GetTile(	math.floor(xloc/8), =

-										math.floor(yloc/8), =

-										math.mod(xloc,8), =

-										math.mod(yloc,8))
-end
-
---Calc the average Z Value for the new Player pos (don't use this for calc=
ulations)
-function AverageGroundHeight(bx,by,tx,ty)
-	local iTerrainTileType1,iTerrainZ1 =3D GetAbsTile(bx*8+tx,by*8+ty)
-	local iTerrainTileType2,iTerrainZ2 =3D GetAbsTile(bx*8+tx+1,by*8+ty)
-	local iTerrainTileType3,iTerrainZ3 =3D GetAbsTile(bx*8+tx,by*8+ty+1)
-	local iTerrainTileType4,iTerrainZ4 =3D GetAbsTile(bx*8+tx+1,by*8+ty+1)
-	local testz =3D 0
-	if ( math.abs(iTerrainZ1-iTerrainZ4) <=3D math.abs(iTerrainZ2-iTerrainZ3)=
 ) then
-		if (gIllegalZ =3D=3D iTerrainZ4) then
-			testz =3D iTerrainZ1
-		else
-			testz =3D math.floor( ( iTerrainZ1 + iTerrainZ4 ) / 2.0)
-		end
-	else
-		if (gIllegalZ =3D=3D iTerrainZ2 or gIllegalZ =3D=3D iTerrainZ3) then
-			testz =3D iTerrainZ1
-		else
-			testz =3D math.floor( ( iTerrainZ2 + iTerrainZ3 ) / 2.0)
-		end
-	end
-	return testz
-end
-
-function isBridge(flag)
-	local bIsBridge=3Dfalse
-	if ((BitwiseAND(flag, kTileDataFlag_StairBack) ~=3D 0) or
-		(BitwiseAND(flag, kTileDataFlag_StairRight) ~=3D 0) or
-		(BitwiseAND(flag, kTileDataFlag_Bridge) ~=3D 0) ) then
-		bIsBridge=3Dtrue
-	end
-	return bIsBridge	=

-end
-
-function isSurface(flag)
-	local bIsSurface=3Dfalse
-
-	if (BitwiseAND(flag, kTileDataFlag_Surface) ~=3D 0) then
-		bIsSurface=3Dtrue
-	end
-
-	return bIsSurface
-end
-
-function isImpassable(flag)
-	local bIsImpassable=3Dfalse
-
-	if (BitwiseAND(flag, kTileDataFlag_Impassable) ~=3D 0) then
-		bIsImpassable=3Dtrue
-	end
-
-	return bIsImpassable
-end
-
-
--- a little helper for GetWalkingBlockFlags(...)
-function GetWalkingBlockFlagsHelper(zloc,artid,flaglist)
-	local t =3D GetStaticTileType(artid)
-	if (t) then
-		if ( not(isBridge(t.miFlags)) and not(isImpassable(t.miFlags)) and not(i=
sSurface(t.miFlags)) ) then
-			printwalkdebug("----" .. t.msName .."  !impassable  !bridge  !surfacebl=
ocking")
-		else
-			local iHeight =3D t.miHeight
-			if (isBridge(t.miFlags)) then iHeight =3D iHeight/2 + 0.5 end -- TODO :=
 2 is the right value, but playerpos is to low
-			=

-			if (flaglist[zloc] =3D=3D nil) then
-				flaglist[zloc] =3D { }
-			end
-			=

-			flaglist[zloc].bSurface =3D flaglist[zloc].bSurface or isSurface(t.miFl=
ags)
-			flaglist[zloc].bBridge =3D flaglist[zloc].bBridge or isBridge (t.miFlag=
s)
-			=

-			if (iHeight > 0) then
-				flaglist[zloc].bImpassable =3D flaglist[zloc].bImpassable or isImpassa=
ble(t.miFlags)
-				for j=3D1, iHeight-1, 1 do
-					if (flaglist[zloc + j] =3D=3D nil) then
-						flaglist[zloc + j] =3D { }
-					end
-					flaglist[zloc + j].bImpassable =3D flaglist[zloc + j].bImpassable or =
isImpassable(t.miFlags)
-					flaglist[zloc + j].bSurface =3D flaglist[zloc + j].bSurface or isSurf=
ace(t.miFlags)
-					flaglist[zloc + j].bBridge =3D flaglist[zloc + j].bBridge or isBridge=
 (t.miFlags) =

-				end
-				=

-				if (flaglist[zloc + iHeight] =3D=3D nil) then
-					flaglist[zloc + iHeight] =3D { }
-				end
-				flaglist[zloc + iHeight].bSurface =3D flaglist[zloc + iHeight].bSurfac=
e or isSurface(t.miFlags)
-				flaglist[zloc + iHeight].bBridge =3D flaglist[zloc + iHeight].bBridge =
or isBridge(t.miFlags) =

-			end
-			=

-			printwalkdebug("----" .. t.msName .."  z=3D" .. zloc .. "  height=3D" .=
. iHeight .. " bImpassable=3D" .. tostring(isImpassable(t.miFlags)) .. " bS=
urface=3D" .. tostring(isSurface(t.miFlags)) .. " isBridge=3D" .. tostring(=
isBridge(t.miFlags)))
-		end
-	end
-end
-
--- returns an array of flags (impassable, surface, maptile)
--- array might contain empty entries (meaning on the specific z level is n=
either something blocking nor a surface/maptile)
-function GetWalkingBlockFlags(bx, by, tx, ty)
-	printwalkdebug("--GetWalkingBlockFlags() for bx=3D"..bx.."  by=3D"..by.."=
  tx=3D"..tx.."  ty=3D"..ty.."  ("..(bx*8 + tx).."/"..(by*8+ty)..")") =

-	=

-	if ( not(gTileTypeLoader) ) then return {} end
-	local flaglist =3D { }
-	=

-	-- map
-	printwalkdebug("---Map")
-	=

-	local iMapTileType =3D gGroundBlockLoader:GetTile(bx,by,tx,ty)
-	local iMapTileZ =3D tonumber(AverageGroundHeight( bx, by, tx, ty))
-
-	--Seasonal Translation
-	local iTranstile=3DTranslateTileTypeID(iMapTileType, gSeasonSetting)
-	local miFlags,miTexID,msName =3D gTileTypeLoader:GetGroundTileType(iTrans=
tile)
-	=

-	-- ignore NoDraw Tiles
-	if (iMapTileType ~=3D hex2num("0x02")) then
-		flaglist[iMapTileZ] =3D { }
-		flaglist[iMapTileZ].bSurface =3D true
-		flaglist[iMapTileZ].bImpassable =3D isImpassable(miFlags)
-		flaglist[iMapTileZ].bMaptile =3D true
-		printwalkdebug("----Map Name=3D" .. msName .."  Heigt=3D" .. iMapTileZ .=
."   bSurface=3Dtrue  bImpassable=3D" .. tostring(flaglist[iMapTileZ].bImpa=
ssable))
-	end
-	=

-	=

-	-- statics
-	printwalkdebug("---Statics")
-	=

-	local iStaticCount
-	if (gStaticBlockLoader) then
-		gStaticBlockLoader:Load(bx,by)
-		iStaticCount =3D gStaticBlockLoader:Count() -- operates on the block tha=
t was last loaded using :Load()
-	else
-		iStaticCount =3D 0
-	end
-	-- TODO : maybe include Seasonal translation also here!?
-	=

-	local iTileTypeID,iX,iY,iZ,iHue
-	for i =3D 0,iStaticCount-1 do
-		iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
-		if (iX =3D=3D tx and iY =3D=3D ty) then
-			printwalkdebug("----new Static ID=3D" .. iTileTypeID)
-			GetWalkingBlockFlagsHelper(iZ,iTileTypeID,flaglist)
-		end
-	end
-	=

-	-- dynamics
-	printwalkdebug("---Dynamics")
-	=

+-- Walking Implementation for PC
+-- thx for helping to Arahil
+
+gDebugWalkingDetailed =3D true =

+
+function printwalkdebug (...) if (gDebugWalkingDetailed) then printdebug("=
walking",unpack(arg)) end end =

+
+-- returns tiletype,zloc
+function GetAbsTile (xloc,yloc) =

+	return gGroundBlockLoader:GetTile(	math.floor(xloc/8), =

+										math.floor(yloc/8), =

+										math.mod(xloc,8), =

+										math.mod(yloc,8))
+end
+
+--Calc the average Z Value for the new Player pos (don't use this for calc=
ulations)
+function AverageGroundHeight(bx,by,tx,ty)
+	local iTerrainTileType1,iTerrainZ1 =3D GetAbsTile(bx*8+tx,by*8+ty)
+	local iTerrainTileType2,iTerrainZ2 =3D GetAbsTile(bx*8+tx+1,by*8+ty)
+	local iTerrainTileType3,iTerrainZ3 =3D GetAbsTile(bx*8+tx,by*8+ty+1)
+	local iTerrainTileType4,iTerrainZ4 =3D GetAbsTile(bx*8+tx+1,by*8+ty+1)
+	local testz =3D 0
+	if ( math.abs(iTerrainZ1-iTerrainZ4) <=3D math.abs(iTerrainZ2-iTerrainZ3)=
 ) then
+		if (gIllegalZ =3D=3D iTerrainZ4) then
+			testz =3D iTerrainZ1
+		else
+			testz =3D math.floor( ( iTerrainZ1 + iTerrainZ4 ) / 2.0)
+		end
+	else
+		if (gIllegalZ =3D=3D iTerrainZ2 or gIllegalZ =3D=3D iTerrainZ3) then
+			testz =3D iTerrainZ1
+		else
+			testz =3D math.floor( ( iTerrainZ2 + iTerrainZ3 ) / 2.0)
+		end
+	end
+	return testz
+end
+
+function isBridge(flag)
+	local bIsBridge=3Dfalse
+	if ((BitwiseAND(flag, kTileDataFlag_StairBack) ~=3D 0) or
+		(BitwiseAND(flag, kTileDataFlag_StairRight) ~=3D 0) or
+		(BitwiseAND(flag, kTileDataFlag_Bridge) ~=3D 0) ) then
+		bIsBridge=3Dtrue
+	end
+	return bIsBridge	=

+end
+
+function isSurface(flag)
+	local bIsSurface=3Dfalse
+
+	if (BitwiseAND(flag, kTileDataFlag_Surface) ~=3D 0) then
+		bIsSurface=3Dtrue
+	end
+
+	return bIsSurface
+end
+
+function isImpassable(flag)
+	local bIsImpassable=3Dfalse
+
+	if (BitwiseAND(flag, kTileDataFlag_Impassable) ~=3D 0) then
+		bIsImpassable=3Dtrue
+	end
+
+	return bIsImpassable
+end
+
+
+-- a little helper for GetWalkingBlockFlags(...)
+function GetWalkingBlockFlagsHelper(zloc,artid,flaglist)
+	local t =3D GetStaticTileType(artid)
+	if (t) then
+		if ( not(isBridge(t.miFlags)) and not(isImpassable(t.miFlags)) and not(i=
sSurface(t.miFlags)) ) then
+			printwalkdebug("----" .. t.msName .."  !impassable  !bridge  !surfacebl=
ocking")
+		else
+			local iHeight =3D t.miHeight
+			if (isBridge(t.miFlags)) then iHeight =3D iHeight/2 + 0.5 end -- TODO :=
 2 is the right value, but playerpos is to low
+			=

+			if (flaglist[zloc] =3D=3D nil) then
+				flaglist[zloc] =3D { }
+			end
+			=

+			flaglist[zloc].bSurface =3D flaglist[zloc].bSurface or isSurface(t.miFl=
ags)
+			flaglist[zloc].bBridge =3D flaglist[zloc].bBridge or isBridge (t.miFlag=
s)
+			=

+			if (iHeight > 0) then
+				flaglist[zloc].bImpassable =3D flaglist[zloc].bImpassable or isImpassa=
ble(t.miFlags)
+				for j=3D1, iHeight-1, 1 do
+					if (flaglist[zloc + j] =3D=3D nil) then
+						flaglist[zloc + j] =3D { }
+					end
+					flaglist[zloc + j].bImpassable =3D flaglist[zloc + j].bImpassable or =
isImpassable(t.miFlags)
+					flaglist[zloc + j].bSurface =3D flaglist[zloc + j].bSurface or isSurf=
ace(t.miFlags)
+					flaglist[zloc + j].bBridge =3D flaglist[zloc + j].bBridge or isBridge=
 (t.miFlags) =

+				end
+				=

+				if (flaglist[zloc + iHeight] =3D=3D nil) then
+					flaglist[zloc + iHeight] =3D { }
+				end
+				flaglist[zloc + iHeight].bSurface =3D flaglist[zloc + iHeight].bSurfac=
e or isSurface(t.miFlags)
+				flaglist[zloc + iHeight].bBridge =3D flaglist[zloc + iHeight].bBridge =
or isBridge(t.miFlags) =

+			end
+			=

+			printwalkdebug("----" .. t.msName .."  z=3D" .. zloc .. "  height=3D" .=
. iHeight .. " bImpassable=3D" .. tostring(isImpassable(t.miFlags)) .. " bS=
urface=3D" .. tostring(isSurface(t.miFlags)) .. " isBridge=3D" .. tostring(=
isBridge(t.miFlags)))
+		end
+	end
+end
+
+-- returns an array of flags (impassable, surface, maptile)
+-- array might contain empty entries (meaning on the specific z level is n=
either something blocking nor a surface/maptile)
+function GetWalkingBlockFlags(bx, by, tx, ty)
+	printwalkdebug("--GetWalkingBlockFlags() for bx=3D"..bx.."  by=3D"..by.."=
  tx=3D"..tx.."  ty=3D"..ty.."  ("..(bx*8 + tx).."/"..(by*8+ty)..")") =

+	=

+	if ( not(gTileTypeLoader) ) then return {} end
+	local flaglist =3D { }
+	=

+	-- map
+	printwalkdebug("---Map")
+	=

+	local iMapTileType =3D gGroundBlockLoader:GetTile(bx,by,tx,ty)
+	local iMapTileZ =3D tonumber(AverageGroundHeight( bx, by, tx, ty))
+
+	--Seasonal Translation
+	local iTranstile=3DTranslateTileTypeID(iMapTileType, gSeasonSetting)
+	local miFlags,miTexID,msName =3D gTileTypeLoader:GetGroundTileType(iTrans=
tile)
+	=

+	-- ignore NoDraw Tiles
+	if (iMapTileType ~=3D hex2num("0x02")) then
+		flaglist[iMapTileZ] =3D { }
+		flaglist[iMapTileZ].bSurface =3D true
+		flaglist[iMapTileZ].bImpassable =3D isImpassable(miFlags)
+		flaglist[iMapTileZ].bMaptile =3D true
+		printwalkdebug("----Map Name=3D" .. msName .."  Heigt=3D" .. iMapTileZ .=
."   bSurface=3Dtrue  bImpassable=3D" .. tostring(flaglist[iMapTileZ].bImpa=
ssable))
+	end
+	=

+	=

+	-- statics
+	printwalkdebug("---Statics")
+	=

+	local iStaticCount
+	if (gStaticBlockLoader) then
+		gStaticBlockLoader:Load(bx,by)
+		iStaticCount =3D gStaticBlockLoader:Count() -- operates on the block tha=
t was last loaded using :Load()
+	else
+		iStaticCount =3D 0
+	end
+	-- TODO : maybe include Seasonal translation also here!?
+	=

+	local iTileTypeID,iX,iY,iZ,iHue
+	for i =3D 0,iStaticCount-1 do
+		iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
+		if (iX =3D=3D tx and iY =3D=3D ty) then
+			printwalkdebug("----new Static ID=3D" .. iTileTypeID)
+			GetWalkingBlockFlagsHelper(iZ,iTileTypeID,flaglist)
+		end
+	end
+	=

+	-- dynamics
+	printwalkdebug("---Dynamics")
+	=

 	local xloc=3Dbx*8+tx
 	local yloc=3Dby*8+ty
-	for k,object in pairs(gObjectList) do =

-		if (object.isdynamic) then
-			local dynamic =3D object
+	for k,dynamic in pairs(GetDynamicList()) do =

+		if(dynamic.artid) then
 =

 			-- is this a normal statictile or multi?
 			if (dynamic.artid >=3D gMulti_ID) then -- gMulti_ID + 100
 				if (dynamic.lTile) then
 					for k,v in pairs(dynamic.lTile) do
-						if ((dynamic.x+v.x) =3D=3D xloc and (dynamic.y+v.y) =3D=3D yloc) then
+						if ((dynamic.xloc+v.x) =3D=3D xloc and (dynamic.yloc+v.y) =3D=3D ylo=
c) then
 							printwalkdebug("----new serverside multi tile ID=3D" .. v.artid)
 							GetWalkingBlockFlagsHelper(v.z,v.artid,flaglist)	-- todo flaglist
 				end
@@ -184,9 +183,9 @@
 					blocknum,x,y,z,flags =3D gMultiLoader:GetMultiParts(id,p)
 					=

 					local pxloc,pyloc,pzloc
-						pxloc =3D dynamic.x + x
-						pyloc =3D dynamic.y + y
-						pzloc =3D dynamic.z + z
+						pxloc =3D dynamic.xloc + x
+						pyloc =3D dynamic.yloc + y
+						pzloc =3D dynamic.zloc + z
 					=

 					if (flags =3D=3D 1 and pxloc =3D=3D xloc and pyloc =3D=3D yloc) then
 						printwalkdebug("----new dynamic ID=3D" .. blocknum)
@@ -199,213 +198,213 @@
 			else
 				--elseif(dynamic.artid < gMulti_ID + 100) then
 				-- no mulit just a normal tile
-				if (dynamic.x =3D=3D xloc and dynamic.y =3D=3D yloc) then
+				if (dynamic.xloc =3D=3D xloc and dynamic.yloc =3D=3D yloc) then
 					printwalkdebug("----new dynamic ID=3D" .. dynamic.artid)
-					GetWalkingBlockFlagsHelper(dynamic.z,dynamic.artid,flaglist)
-				end
-			end
-		end
-	end
-	=

-	printwalkdebug("End GetWalkingBlockFlags()")
-	return flaglist
-end
-
-
--- check for free space (!impassable), char is 15 zlevels tall
--- if diagonalCheck is true land tiles above zloc+gMaxZ_Climb (resp. +5 fo=
r maptiles) are blocking, underneath they are ignored
--- returns true or false
-function CheckZSpace(flaglist, zloc, diagonalCheck, height)  =

-	diagonalCheck =3D diagonalCheck or false =

-	height =3D height or 15
-	for i=3D1, height, 1 do
-		if (flaglist[zloc+i] ~=3D nil) then
-			if (diagonalCheck) then
-				if (flaglist[zloc+i].bImpassable
-					or (flaglist[zloc+i].bMaptile and (i > gMaxZ_Climb + 5)) =

-					or (flaglist[zloc+i].bSurface and (i > gMaxZ_Climb))
-				) then
-					return false =

-				end
-			elseif (flaglist[zloc+i].bImpassable or flaglist[zloc+i].bSurface) then =

-				return false
-			end
-		end
-	end
-	=

-	return true
-end
-
-
--- check adjacent coordinates when walking diagonally
--- OSI is not looking for a surface on those tiles, it only checks that th=
ere is nothing blocking
--- OSI takes the current z level to check for that, not the z level of the=
 target tile
--- returns true or false
-function CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
-	local bDiagonal
-	local diagonalFlagList1, diagonalFlagList2
-	printwalkdebug("------direction: "..iDir)
-	if (iDir =3D=3D 1) then --northeast (right)
-		bDiagonal =3D true
-		if (tx =3D=3D 0) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
-		end
-		=

-		if (ty =3D=3D 7) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
-		end
-							=

-	elseif (iDir =3D=3D 3) then --southeast (down)
-		bDiagonal =3D true
-		if (tx =3D=3D 0) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
-		end
-		=

-		if (ty =3D=3D 0) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
-		end
-		=

-	elseif (iDir =3D=3D 5) then --southwest (left)
-		bDiagonal =3D true
-		if (tx =3D=3D 7) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
-		end
-		=

-		if (ty =3D=3D 0) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
-		end
-		=

-	elseif (iDir =3D=3D 7) then --northwest (up)
-		bDiagonal =3D true
-		if (tx =3D=3D 7) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
-		end
-		=

-		if (ty =3D=3D 7) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
-		end
-	end
-			=

-	if (bDiagonal) then
-		printwalkdebug("------walking diagonally")
-				=

-		if (CheckZSpace(diagonalFlagList1, iStartZ, true) and CheckZSpace(diagon=
alFlagList2, iStartZ, true)) then
-			printwalkdebug("-------no obstacles on adjacent coordinates")
-			return true
-		else
-			printwalkdebug("-------adjacent tiles are not free to walk, blocking")
-			return false
-		end
-	else
-		return true
-	end
-end
-
-
-
--- Can walk the tile, the tile's height and if the tile's a stair
--- (about 30 in int, or 3.0 in float (*0.1) is the height of a door)
--- two values are returned: is walkable, new Z Level
-function GetNearestGroundLevel (bx,by,tx,ty,iStartZ,iDir)
-	local Walking_Start =3D Client_GetTicks()
-	printwalkdebug("-------------------")
-	printwalkdebug("GetNearestGroundLevel()")
-	=

-	if ( (tx >=3D 8) or (ty >=3D 8) or (tx < 0) or (ty < 0)) then return fals=
e, 255 end
-	if (not gGroundBlockLoader) then return false, 255 end
-
-	printwalkdebug("iStartZ=3D"..iStartZ)
-	=

-	local flaglist =3D GetWalkingBlockFlags(bx, by, tx, ty)
-	=

-	printwalkdebug("--------------------")
-	printwalkdebug("List output:")
-	for index, value in pairs(flaglist) do
-		printwalkdebug("z=3D" .. index .. "   bSurface=3D" .. tostring(flaglist[=
index].bSurface) .. "  bImpassable=3D" .. tostring(flaglist[index].bImpassa=
ble).. "  bBridge=3D" .. tostring(flaglist[index].bBridge))
-	end
-
-	printwalkdebug("--------------------")
-	=

-	=

-	-- find closest surface (z + 0, -1, +1, -2, +2 etc)
-	-- check for maxfall and maxclimb
-	-- if surface is maptile +5 climbing bonus
-	=

-	local iCur
-	for i=3D0, math.max((gMaxZ_Climb + 5), gMaxZ_Fall), 1 do
-		iCur =3D iStartZ + i
-		if (i ~=3D 0 and flaglist[iCur] ~=3D nil) then
-			printwalkdebug("-----iCur=3D" .. iCur)
-			if (i < gMaxZ_Climb or (i < (gMaxZ_Climb + 5) and (flaglist[iCur].bMapt=
ile or flaglist[iCur].bBridge))) then
-				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
-					printwalkdebug("------found Surface");
-					if (CheckZSpace(flaglist, iCur)) then
-						printwalkdebug("------checkSpace successful")
-						=

-						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
-						=

-						printwalkdebug("End GetNearestGroundLevel()")
-						printwalkdebug("----------------------------")
-						printwalkdebug()
-						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
-						if (bAdjacent) then
-							return true, iCur
-						else
-							return false, 255
-						end
-					end
-				end
-			end
-		end
-		=

-		=

-		iCur =3D iStartZ - i
-		if (flaglist[iCur] ~=3D nil) then
-			printwalkdebug("-----iCur=3D" .. iCur)
-			if (i < gMaxZ_Fall) then
-				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
-					printwalkdebug("------found Surface");
-					if (CheckZSpace(flaglist, iCur)) then
-						printwalkdebug("------ checkSpace successful")
-						=

-						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
-						=

-						printwalkdebug("End GetNearestGroundLevel()")
-						printwalkdebug("----------------------------")
-						printwalkdebug()
-						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
-						if (bAdjacent) then
-							return true, iCur
-						else
-							return false, 255
-						end
-					end
-				end
-			end
-		end
-	end
-	=

-	-- if there was no space to walk through found, return false
-	printwalkdebug("End GetNearestGroundLevel()")
-	printwalkdebug("returning false")
-	printwalkdebug("----------------------------")
-	=

-	printdebug("walking",sprintf( "Walking calculations took %d msec.\n", Cli=
ent_GetTicks() - Walking_Start ))
-	return false, 255 =

-end
+					GetWalkingBlockFlagsHelper(dynamic.zloc,dynamic.artid,flaglist)
+				end
+			end
+		end
+	end
+	=

+	printwalkdebug("End GetWalkingBlockFlags()")
+	return flaglist
+end
+
+
+-- check for free space (!impassable), char is 15 zlevels tall
+-- if diagonalCheck is true land tiles above zloc+gMaxZ_Climb (resp. +5 fo=
r maptiles) are blocking, underneath they are ignored
+-- returns true or false
+function CheckZSpace(flaglist, zloc, diagonalCheck, height)  =

+	diagonalCheck =3D diagonalCheck or false =

+	height =3D height or 15
+	for i=3D1, height, 1 do
+		if (flaglist[zloc+i] ~=3D nil) then
+			if (diagonalCheck) then
+				if (flaglist[zloc+i].bImpassable
+					or (flaglist[zloc+i].bMaptile and (i > gMaxZ_Climb + 5)) =

+					or (flaglist[zloc+i].bSurface and (i > gMaxZ_Climb))
+				) then
+					return false =

+				end
+			elseif (flaglist[zloc+i].bImpassable or flaglist[zloc+i].bSurface) then =

+				return false
+			end
+		end
+	end
+	=

+	return true
+end
+
+
+-- check adjacent coordinates when walking diagonally
+-- OSI is not looking for a surface on those tiles, it only checks that th=
ere is nothing blocking
+-- OSI takes the current z level to check for that, not the z level of the=
 target tile
+-- returns true or false
+function CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+	local bDiagonal
+	local diagonalFlagList1, diagonalFlagList2
+	printwalkdebug("------direction: "..iDir)
+	if (iDir =3D=3D 1) then --northeast (right)
+		bDiagonal =3D true
+		if (tx =3D=3D 0) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
+		end
+		=

+		if (ty =3D=3D 7) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
+		end
+							=

+	elseif (iDir =3D=3D 3) then --southeast (down)
+		bDiagonal =3D true
+		if (tx =3D=3D 0) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
+		end
+		=

+		if (ty =3D=3D 0) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
+		end
+		=

+	elseif (iDir =3D=3D 5) then --southwest (left)
+		bDiagonal =3D true
+		if (tx =3D=3D 7) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
+		end
+		=

+		if (ty =3D=3D 0) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
+		end
+		=

+	elseif (iDir =3D=3D 7) then --northwest (up)
+		bDiagonal =3D true
+		if (tx =3D=3D 7) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
+		end
+		=

+		if (ty =3D=3D 7) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
+		end
+	end
+			=

+	if (bDiagonal) then
+		printwalkdebug("------walking diagonally")
+				=

+		if (CheckZSpace(diagonalFlagList1, iStartZ, true) and CheckZSpace(diagon=
alFlagList2, iStartZ, true)) then
+			printwalkdebug("-------no obstacles on adjacent coordinates")
+			return true
+		else
+			printwalkdebug("-------adjacent tiles are not free to walk, blocking")
+			return false
+		end
+	else
+		return true
+	end
+end
+
+
+
+-- Can walk the tile, the tile's height and if the tile's a stair
+-- (about 30 in int, or 3.0 in float (*0.1) is the height of a door)
+-- two values are returned: is walkable, new Z Level
+function GetNearestGroundLevel (bx,by,tx,ty,iStartZ,iDir)
+	local Walking_Start =3D Client_GetTicks()
+	printwalkdebug("-------------------")
+	printwalkdebug("GetNearestGroundLevel()")
+	=

+	if ( (tx >=3D 8) or (ty >=3D 8) or (tx < 0) or (ty < 0)) then return fals=
e, 255 end
+	if (not gGroundBlockLoader) then return false, 255 end
+
+	printwalkdebug("iStartZ=3D"..iStartZ)
+	=

+	local flaglist =3D GetWalkingBlockFlags(bx, by, tx, ty)
+	=

+	printwalkdebug("--------------------")
+	printwalkdebug("List output:")
+	for index, value in pairs(flaglist) do
+		printwalkdebug("z=3D" .. index .. "   bSurface=3D" .. tostring(flaglist[=
index].bSurface) .. "  bImpassable=3D" .. tostring(flaglist[index].bImpassa=
ble).. "  bBridge=3D" .. tostring(flaglist[index].bBridge))
+	end
+
+	printwalkdebug("--------------------")
+	=

+	=

+	-- find closest surface (z + 0, -1, +1, -2, +2 etc)
+	-- check for maxfall and maxclimb
+	-- if surface is maptile +5 climbing bonus
+	=

+	local iCur
+	for i=3D0, math.max((gMaxZ_Climb + 5), gMaxZ_Fall), 1 do
+		iCur =3D iStartZ + i
+		if (i ~=3D 0 and flaglist[iCur] ~=3D nil) then
+			printwalkdebug("-----iCur=3D" .. iCur)
+			if (i < gMaxZ_Climb or (i < (gMaxZ_Climb + 5) and (flaglist[iCur].bMapt=
ile or flaglist[iCur].bBridge))) then
+				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
+					printwalkdebug("------found Surface");
+					if (CheckZSpace(flaglist, iCur)) then
+						printwalkdebug("------checkSpace successful")
+						=

+						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+						=

+						printwalkdebug("End GetNearestGroundLevel()")
+						printwalkdebug("----------------------------")
+						printwalkdebug()
+						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
+						if (bAdjacent) then
+							return true, iCur
+						else
+							return false, 255
+						end
+					end
+				end
+			end
+		end
+		=

+		=

+		iCur =3D iStartZ - i
+		if (flaglist[iCur] ~=3D nil) then
+			printwalkdebug("-----iCur=3D" .. iCur)
+			if (i < gMaxZ_Fall) then
+				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
+					printwalkdebug("------found Surface");
+					if (CheckZSpace(flaglist, iCur)) then
+						printwalkdebug("------ checkSpace successful")
+						=

+						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+						=

+						printwalkdebug("End GetNearestGroundLevel()")
+						printwalkdebug("----------------------------")
+						printwalkdebug()
+						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
+						if (bAdjacent) then
+							return true, iCur
+						else
+							return false, 255
+						end
+					end
+				end
+			end
+		end
+	end
+	=

+	-- if there was no space to walk through found, return false
+	printwalkdebug("End GetNearestGroundLevel()")
+	printwalkdebug("returning false")
+	printwalkdebug("----------------------------")
+	=

+	printdebug("walking",sprintf( "Walking calculations took %d msec.\n", Cli=
ent_GetTicks() - Walking_Start ))
+	return false, 255 =

+end

Modified: branches/knut/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/main.lua (original)
+++ branches/knut/data/lua/main.lua Thu Aug  2 17:12:24 2007
@@ -211,8 +211,8 @@
 =

 	if (gStartInDebugMode) then StopMainMenu() StartDebugMenu() end
 =

-	TestGuiSystem2_Init()
-	TestGuiSystem3_Init()
+	--TestGuiSystem2_Init()
+	--TestGuiSystem3_Init()
 	=

 	-- mainloop
 	while (Client_IsAlive()) do
@@ -254,7 +254,7 @@
 	if (gInGameStarted) then
 		gCurrentRenderer:UpdateMap()
 		gCurrentRenderer:MousePickStep()
-		DragDropStep()
+		StepUODragDrop()
 		WalkStep()
 		PingStep()
 		gCurrentRenderer:CombatGuiStep()

Modified: branches/knut/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.login.lua (original)
+++ branches/knut/data/lua/net.login.lua Thu Aug  2 17:12:24 2007
@@ -277,13 +277,13 @@
 =

 -- send login server request 0x80
 -- answered by 0xA8 kPacket_Server_List which calls MainMenuShowServerList
-function ProtocolSend_Account_Login_Request	(sName,sPassword)
+function ProtocolSend_Account_Login_Request	(sName,sPassword,iSeed)
 	printdebug("login",sprintf("NET: Account_Login_Request: Name: %s Password=
: %s\n",sName,sPassword))
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Account_Login_Request)
 	out:PushFilledString(sName,30)
 	out:PushFilledString(sPassword,30)
-	out:PushNetUint8(hex2num("0x5D"))
+	out:PushNetUint8(iSeed or hex2num("0x5D"))
 	out:SendPacket()
 end
 =


Modified: branches/knut/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.other.lua (original)
+++ branches/knut/data/lua/net.other.lua Thu Aug  2 17:12:24 2007
@@ -371,7 +371,7 @@
 -- prevents the answer to the tooltipp request from being displayed as nor=
mal message
 -- returns true if the info was caught and should not be displayed
 function CatchTooltippRequest (serial,model,charname,message) =

-	local mobile =3D gObjectList[serial]
+	local mobile =3D GetMobile(serial)
 	=

 	if (mobile) then
 		if (charname =3D=3D message) then
@@ -383,7 +383,7 @@
 		end
 		if (not mobile.name) then =

 			mobile.name =3D charname
-			--mobile:update() -- TODO : set mobile name
+			UpdateMobile(mobile) -- TODO : set mobile name
 			if (charname ~=3D message) then print("CatchTooltippRequest : unexpecte=
d text:",charname,message) return false end
 			return true
 		end
@@ -416,7 +416,7 @@
 	local plaintext =3D string.gsub(text_message,"<br>","\n")
 	AddFadeLines(sprintf("%s: %s",text_charname,plaintext)) -- TODO : color,f=
ont,...
 	=

-	-- MobileDisplayTextOverHead(text_item_serial,string.gsub(text_message,"<=
br>","\n"),Uo16Color2Rgb(text_color))
+	MobileDisplayTextOverHead(text_item_serial,string.gsub(text_message,"<br>=
","\n"),Uo16Color2Rgb(text_color))
 	=

 	-- TODO : text_item ?!?
 	-- TODO : JournalAddEntry(somefunc(text_type),text_charname,text_message)
@@ -504,7 +504,7 @@
 	-- TODO : JournalAddEntry(somefunc(text_type),text_charname,text_message)
 	=

 	-- show text over player head
-	-- MobileDisplayTextOverHead(unitext_speakerid,string.gsub(unitext_messag=
e,"<br>","\n"),Uo16Color2Rgb(unitext_hue))
+	MobileDisplayTextOverHead(unitext_speakerid,string.gsub(unitext_message,"=
<br>","\n"),Uo16Color2Rgb(unitext_hue))
 end
 =

 -- TODO : question : ghoulsblade : is this only for combat ? sience: don't=
 know -> verify

Modified: branches/knut/data/lua/net.trade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.trade.lua (original)
+++ branches/knut/data/lua/net.trade.lua Thu Aug  2 17:12:24 2007
@@ -71,10 +71,10 @@
 		if (not playerMobile)				then print("FATAL : kPacket_Shop_Sell : playerM=
obile not found") Crash() end
 	=

 		if (true) then -- debug
-			for k,item in pairs(playerBackpackContainer.content) do =

+			for k,item in pairs(GetContainerContentList(playerBackpackContainer)) d=
o =

 				printf("item serial=3D0x%08x artid=3D0x%04x in backpack\n",item.serial=
,item.artid)
 			end
-			for k,item in pairs(playerMobile.content) do =

+			for k,item in pairs(GetMobileEquipmentList(playerMobile)) do =

 				printf("item serial=3D0x%08x artid=3D0x%04x equipped\n",item.serial,it=
em.artid)
 			end
 		end
@@ -91,8 +91,9 @@
 			good.name 		=3D input:PopFilledString(good.namelen)
 			good.tradeamount=3D 0
 			good.index 		=3D i
-			good.item		=3D gObjectList[good.itemserial]
-			=

+			good.item		=3D GetObjectBySerial(good.itemserial)
+			--- old : see also playerBackpackContainer.items[good.itemserial]			=

+
 			if (good.item) then -- item is not always available, especially if its =
in the backpack, and that has not been opened yet
 				if (good.itemartid ~=3D good.item.artid)	then printf("FATAL : kPacket_=
Shop_Sell : artid mismatch 0x%04x !=3D 0x%04x\n",good.itemartid,good.item.a=
rtid) Crash()  end
 				if (good.itemamount ~=3D good.item.amount)	then printf("FATAL : kPacke=
t_Shop_Sell : amount mismatch 0x%04x !=3D 0x%04x\n",good.itemamount,good.it=
em.amount) Crash()  end
@@ -397,7 +398,7 @@
 =

 function GetShopMobileID (shop)
 	if (shop.shopMobileID) then return shop.shopMobileID end -- only set for =
sell-shop
-	local shopContainerItem =3D gObjectList[shop.shopContainerID]
+	local shopContainerItem =3D GetObjectBySerial(shop.shopContainerID)
 	if (not shopContainerItem) then printf("FATAL : GetShopMobileID : shopCon=
tainerItem not found %08x\n",shop.shopContainerID) return end
 	local shopmobile =3D shopContainerItem.mobile
 	if (not shopmobile) then printf("FATAL : GetShopMobileID : shopmobile not=
 found for container %08x\n",shop.shopContainerID) return end

Modified: branches/knut/data/lua/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.uodragdrop.lua (original)
+++ branches/knut/data/lua/net.uodragdrop.lua Thu Aug  2 17:12:24 2007
@@ -122,6 +122,7 @@
 end
 =

 function StepUODragDrop () =

+	if (true) then DragDropStep() return end
 	-- start dragdrop if the mouse is dragged for a minimum distance
 	if (gDragDrop and (not gDragDrop.started)) then =

 		local iMouseX,iMouseY =3D PollInput()
@@ -260,7 +261,7 @@
 		local iTileTypeID =3D item.artid -- can come from paperdoll or container=
 or dynamic
 		local layer =3D GetPaperdollLayerFromTileType(iTileTypeID)
 		local mobileserial =3D paperdoll.mobileserial
-		local mobile =3D gObjectList[mobileserial]
+		local mobile =3D GetMobile(mobileserial)
 		print("MouseUpUODragDrop: drop on paperdoll ",item.serial,item.amount,iT=
ileTypeID,layer,paperdoll.mobileserial)
 		if (not layer) then
 			print("CompleteUODragDrop : item is not wearable",vardump(item))
@@ -268,7 +269,7 @@
 		elseif (not mobile) then
 			print("CompleteUODragDrop : paperdoll mobile not found",vardump(item))
 			CancelUODragDrop()
-		elseif (mobile:getequipment(layer)) then
+		elseif (GetMobileEquipmentItem(mobile,layer)) then
 			print("CompleteUODragDrop : layer already full",vardump(item))
 			-- TODO : if layer is not empty, drop dragged item to backpack, take it=
em from layer to backpack, equip dragged item
 			-- NOTE : if layer is not empty and it's not possible to put item to ba=
ckpack -> check and solve this problem!

Modified: branches/knut/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.walk.lua (original)
+++ branches/knut/data/lua/net.walk.lua Thu Aug  2 17:12:24 2007
@@ -80,7 +80,7 @@
 	=

 		-- destroy objects outside view range
 		for k,object in pairs(gObjectList) do =

-			if ((not object.container) and IsObjectFarEnoughToDestroy(object.x,obje=
ct.y)) then
+			if ((not object.container) and IsObjectFarEnoughToDestroy(object.xloc,o=
bject.yloc)) then
 				object:delete()
 			end
 		end
@@ -113,7 +113,7 @@
 gNextAutoWalkCheck =3D 0
 -- timeout to next autowalk check on pressed right button
 gNextAutoWalkCheckTimeout =3D 500
--- if this is > 0 and the mobile (given as serial) is existing in gObjectL=
ist, autowalk tries to follow the mobile
+-- if this is > 0 and the mobile (given as serial) is existing, autowalk t=
ries to follow the mobile
 gFollowMobile =3D 0
 function WalkStep ()
 	-- runnung if shift is pressed
@@ -129,7 +129,7 @@
 	=

 	-- follow target
 	if (gFollowMobile ~=3D 0) then
-		local target =3D gObjectList[gFollowMobile]
+		local target =3D GetMobile(gFollowMobile)
 		if target then
 			SetAutoWalkTo(target.xloc, target.yloc,true)
 		else
@@ -221,7 +221,7 @@
 =

 -- will follow a given mobile
 function SetFollowMobile (serial)
-	local target =3D gObjectList[serial]
+	local target =3D GetMobile(serial)
 	if target then
 		gFollowMobile =3D serial
 		SetAutoWalkTo(target.xloc, target.yloc , true)

Modified: branches/knut/data/lua/net/net.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.main.lua (original)
+++ branches/knut/data/lua/net/net.main.lua Thu Aug  2 17:12:24 2007
@@ -9,4 +9,4 @@
 dofile(libpath .. "net/net.packethandlers.lua")
 =

 gLastDoubleClickSerial =3D 0
-gLastResyncRequest =3D nil
+

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Thu Aug  2 17:12:24 2007
@@ -1,257 +1,257 @@
--- simple mobile, no equipment, fixed size packet 0x77
-function gPacketHandler.kPacket_Naked_MOB ()
-	local packet =3D {}
-	local input =3D GetRecvFIFO()
-	=

-	local packetid =3D input:PopNetUint8()
-	packet.serial =3D input:PopNetUint32()
-	packet.body =3D input:PopNetUint16()
-	packet.x =3D input:PopNetUint16()
-	packet.y =3D input:PopNetUint16()
-	packet.z =3D input:PopInt8()
-	packet.dir =3D input:PopNetUint8()
-	packet.hue =3D input:PopNetUint16()
-	packet.flag =3D input:PopNetUint8()
-	packet.notoriety =3D input:PopNetUint8()
-	=

-	local mobile =3D gObjectList[packet.serial]	=

-	if (not mobile) then
-		mobile =3D CreateMobile( packet )
-	end
-	=

-	mobile:update( packet )
-end
-
--- equipped mobile packet (0x78)
-function gPacketHandler.kPacket_Equipped_MOB()
-	local packet =3D {}
-	local input =3D GetRecvFIFO()
-	=

-	local fifolen_start =3D input:Size()
-	local packetid =3D input:PopNetUint8()
-	local iPacketSize =3D input:PopNetUint16()
-	=

-	packet.serial =3D input:PopNetUint32()
-	packet.body =3D input:PopNetUint16()
-	-- maybe it is necessary to read amount here, if this packet is used for =
a corpse
-	=

-	packet.x =3D input:PopNetUint16()
-	packet.y =3D input:PopNetUint16()
-	packet.z =3D input:PopInt8()
-	packet.dir =3D input:PopNetUint8()
-	packet.hue =3D input:PopNetUint16()
-	packet.flag =3D input:PopNetUint8()
-	packet.notoriety =3D input:PopNetUint8()
-	=

-	local mobile =3D gObjectList[packet.serial] =

-	if (not mobile) then
-		mobile =3D CreateMobile( packet )
-	end
-	=

-	mobile:update( packet )
-	=

-	local loopalive =3D true
-	while loopalive do =

-		local packet_dynamic =3D {}
-		if ( iPacketSize >=3D (fifolen_start - input:Size()+4) ) then
-			packet_dynamic.serial =3D input:PopNetUint32()
-			if ( packet_dynamic.serial =3D=3D 0 ) then
-				loopalive =3D false
-			else
-				if ( iPacketSize >=3D (fifolen_start - input:Size()+3) ) then
-					packet_dynamic.artid =3D input:PopNetUint16()
-					packet_dynamic.layer =3D input:PopNetUint8()
-					=

-					if ((BitwiseAND(packet_dynamic.artid,hex2num("0x8000")) ~=3D 0) and (=
 iPacketSize >=3D (fifolen_start - input:Size()+2) )) then
-						packet_dynamic.hue =3D input:PopNetUint16()
-					else
-						packet_dynamic.hue =3D 0
-					end
-					packet_dynamic.artid =3D BitwiseAND(packet_dynamic.artid,hex2num("0x7=
fff"))
-					=

-					dynamic =3D gObjectList[ packet_dynamic.serial ]
-					if (not dynamic) then
-						dynamic =3D CreateDynamic( packet_dynamic )
-					end
-					=

-					dynamic:update( packet_dynamic )
-					dynamic:setcontainer( mobile )
-				else
-					loopalive =3D false
-				end
-			end
-		else
-			loopalive =3D false
-		end
-	end
-end
-
--- Teleport packet (also known as ProtocolRecv_Draw_Player) (0x20)
-function gPacketHandler.kPacket_Teleport()
-	gLastResyncRequest =3D nil
-	=

-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	packet =3D {}
-	packet.serial	=3D input:PopNetUint32()
-	packet.body	=3D input:PopNetUint16()
-	packet.unknown1 =3D input:PopNetUint8()
-	packet.hue	=3D input:PopNetUint16()
-	packet.flag	=3D input:PopNetUint8()
-	packet.x	=3D input:PopNetUint16()
-	packet.y	=3D input:PopNetUint16()
-	packet.unknown2 =3D input:PopNetUint16()
-	packet.dir	=3D input:PopNetUint8()
-	packet.z	=3D input:PopInt8()
-	=

-	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
-
-	local mobile =3D gObjectList[packet.serial] =

-	if (not mobile) then
-		mobile =3D CreateMobile( packet )
-	end
-	=

-	mobile:update( packet )
-	-- set player pos after updating mobile, otherwise the mobile may be dele=
ted as its out of range
-	SetPlayerPos( packet.x, packet.y, packet.z, packet.dir )
-
-	ResetWalkQueue()
-end
-
--- Character Animation (0x6e)
-function gPacketHandler.kPacket_Animation ()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	=

-	local packet =3D {}
-	packet.mobileserial	=3D input:PopNetUint32()	=

-	packet.m_animation	=3D input:PopNetUint16()
-	packet.m_framecount	=3D input:PopNetUint16()
-	packet.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D tw=
ice / 0 =3D repeat forever)
-	packet.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3Dba=
ckwards)
-	packet.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repea=
t)
-	packet.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - To=
o slow to watch)
-	=

-	local mobile =3D gObjectList[packet.serial] =

-	if (mobile) then
-		mobile:DoAnimation( packet )
-	end
-end
-
--- mobile status (0x11)
-function gPacketHandler.kPacket_Mobile_Stats()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local iPacketSize =3D input:PopNetUint16()
-	=

-	local stats =3D {}
-	local mobileserial	=3D input:PopNetUint32()
+-- simple mobile, no equipment, fixed size packet 0x77
+function gPacketHandler.kPacket_Naked_MOB ()
+	local packet =3D {}
+	local input =3D GetRecvFIFO()
+	=

+	local packetid =3D input:PopNetUint8()
+	packet.serial =3D input:PopNetUint32()
+	packet.body =3D input:PopNetUint16()
+	packet.xloc =3D input:PopNetUint16()
+	packet.yloc =3D input:PopNetUint16()
+	packet.zloc =3D input:PopInt8()
+	packet.dir =3D input:PopNetUint8()
+	packet.hue =3D input:PopNetUint16()
+	packet.flag =3D input:PopNetUint8()
+	packet.notoriety =3D input:PopNetUint8()
+	=

+	local mobile =3D gObjectList[packet.serial]	=

+	if (not mobile) then
+		mobile =3D CreateMobile( packet )
+	end
+	=

+	mobile:update( packet )
+end
+
+-- equipped mobile packet (0x78)
+function gPacketHandler.kPacket_Equipped_MOB()
+	local packet =3D {}
+	local input =3D GetRecvFIFO()
+	=

+	local fifolen_start =3D input:Size()
+	local packetid =3D input:PopNetUint8()
+	local iPacketSize =3D input:PopNetUint16()
+	=

+	packet.serial =3D input:PopNetUint32()
+	packet.body =3D input:PopNetUint16()
+	-- maybe it is necessary to read amount here, if this packet is used for =
a corpse
+	=

+	packet.x =3D input:PopNetUint16()
+	packet.y =3D input:PopNetUint16()
+	packet.z =3D input:PopInt8()
+	packet.dir =3D input:PopNetUint8()
+	packet.hue =3D input:PopNetUint16()
+	packet.flag =3D input:PopNetUint8()
+	packet.notoriety =3D input:PopNetUint8()
+	=

+	local mobile =3D gObjectList[packet.serial] =

+	if (not mobile) then
+		mobile =3D CreateMobile( packet )
+	end
+	=

+	mobile:update( packet )
+	=

+	local loopalive =3D true
+	while loopalive do =

+		local packet_dynamic =3D {}
+		if ( iPacketSize >=3D (fifolen_start - input:Size()+4) ) then
+			packet_dynamic.serial =3D input:PopNetUint32()
+			if ( packet_dynamic.serial =3D=3D 0 ) then
+				loopalive =3D false
+			else
+				if ( iPacketSize >=3D (fifolen_start - input:Size()+3) ) then
+					packet_dynamic.artid =3D input:PopNetUint16()
+					packet_dynamic.layer =3D input:PopNetUint8()
+					=

+					if ((BitwiseAND(packet_dynamic.artid,hex2num("0x8000")) ~=3D 0) and (=
 iPacketSize >=3D (fifolen_start - input:Size()+2) )) then
+						packet_dynamic.hue =3D input:PopNetUint16()
+					else
+						packet_dynamic.hue =3D 0
+					end
+					packet_dynamic.artid =3D BitwiseAND(packet_dynamic.artid,hex2num("0x7=
fff"))
+					=

+					dynamic =3D gObjectList[ packet_dynamic.serial ]
+					if (not dynamic) then
+						dynamic =3D CreateDynamic( packet_dynamic )
+					end
+					=

+					dynamic:update( packet_dynamic )
+					dynamic:setcontainer( mobile )
+				else
+					loopalive =3D false
+				end
+			end
+		else
+			loopalive =3D false
+		end
+	end
+end
+
+-- Teleport packet (also known as ProtocolRecv_Draw_Player) (0x20)
+function gPacketHandler.kPacket_Teleport()
+	gLastResyncRequest =3D nil
+	=

+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	packet =3D {}
+	packet.serial	=3D input:PopNetUint32()
+	packet.body	=3D input:PopNetUint16()
+	packet.unknown1 =3D input:PopNetUint8()
+	packet.hue	=3D input:PopNetUint16()
+	packet.flag	=3D input:PopNetUint8()
+	packet.x	=3D input:PopNetUint16()
+	packet.y	=3D input:PopNetUint16()
+	packet.unknown2 =3D input:PopNetUint16()
+	packet.dir	=3D input:PopNetUint8()
+	packet.z	=3D input:PopInt8()
+	=

+	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
+
+	local mobile =3D gObjectList[packet.serial] =

+	if (not mobile) then
+		mobile =3D CreateMobile( packet )
+	end
+	=

+	mobile:update( packet )
+	-- set player pos after updating mobile, otherwise the mobile may be dele=
ted as its out of range
+	SetPlayerPos( packet.x, packet.y, packet.z, packet.dir )
+
+	ResetWalkQueue()
+end
+
+-- Character Animation (0x6e)
+function gPacketHandler.kPacket_Animation ()
+	local input =3D GetRecvFIFO()
+	local packetid =3D input:PopNetUint8()
+	=

+	local packet =3D {}
+	packet.mobileserial	=3D input:PopNetUint32()	=

+	packet.m_animation	=3D input:PopNetUint16()
+	packet.m_framecount	=3D input:PopNetUint16()
+	packet.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D tw=
ice / 0 =3D repeat forever)
+	packet.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3Dba=
ckwards)
+	packet.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repea=
t)
+	packet.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - To=
o slow to watch)
+	=

+	local mobile =3D gObjectList[packet.serial] =

+	if (mobile) then
+		mobile:DoAnimation( packet )
+	end
+end
+
+-- mobile status (0x11)
+function gPacketHandler.kPacket_Mobile_Stats()
+	local input =3D GetRecvFIFO()
+	local packetid =3D input:PopNetUint8()
+	local iPacketSize =3D input:PopNetUint16()
+	=

+	local stats =3D {}
+	local mobileserial	=3D input:PopNetUint32()
 	stats.name				=3D input:PopFilledString(30)
-	stats.curHits			=3D input:PopNetUint16()
-	stats.maxHits	 		=3D input:PopNetUint16()
-	stats.bCanChangeName	=3D input:PopNetUint8() ~=3D 0
-	stats.flag 				=3D input:PopNetUint8()
-	=

-	-- more data following
-	if in_array( stats.flag, {1,3,4,5} ) then
-		stats.sex			=3D input:PopNetUint8() -- * 0x00 - Male * 0x01 - Female
-		stats.str			=3D input:PopNetUint16()
-		stats.dex			=3D input:PopNetUint16()
-		stats.int			=3D input:PopNetUint16()
-		stats.curStamina	=3D input:PopNetUint16()
-		stats.maxStamina	=3D input:PopNetUint16()
-		stats.curMana		=3D input:PopNetUint16()
-		stats.maxMana		=3D input:PopNetUint16()
-		stats.gold			=3D input:PopNetUint32()
-		stats.armor			=3D input:PopNetUint16()
-		stats.curWeight		=3D input:PopNetUint16()
-
-		if (stats.flag =3D=3D 5) then
-			stats.maxWeight	=3D input:PopNetUint16()
-			stats.race		=3D input:PopNetUint8()
-		end
-
-		if in_array( stats.flag, {3,4,5} ) then
-			stats.statcap	=3D input:PopNetUint16()
-			stats.curPet	=3D input:PopNetUint8()			=

-			stats.maxPet	=3D input:PopNetUint8()
-			=

-			if in_array( stats.flag, {4,5} ) then
-				stats.fireresist	=3D input:PopNetUint16()			=

-				stats.coldresist	=3D input:PopNetUint16()			=

-				stats.poisonresist	=3D input:PopNetUint16()			=

-				stats.energyresist	=3D input:PopNetUint16()			=

-				stats.luck			=3D input:PopNetUint16()			=

-				stats.minDamage		=3D input:PopNetUint16()			=

-				stats.maxDamage		=3D input:PopNetUint16()			=

-				stats.tithing		=3D input:PopNetUint32()			=

-			end
-		end
-	end
-
-	local mobile =3D gObjectList[mobileserial] =

-	if (mobile) then
-		mobile:updatestats( stats )
-	end
-end
-
--- Update Current Health [0xA1]
-function gPacketHandler.kPacket_HP_Health()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	=

-	local mobile =3D gObjectList[serial] =

-	if (mobile) then
-		mobile:UpdateHits( curval, maxval )
-	end
-end
-
--- Update Current Mana [0xA2]
-function gPacketHandler.kPacket_Mana_Health()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-
-	local mobile =3D gObjectList[serial] =

-	if (mobile) then
-		mobile:UpdateMana( curval, maxval )
-	end	=

-end
-
--- Update Current Stamina [0xA3]
-function gPacketHandler.kPacket_Stamina()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-
-	local mobile =3D gObjectList[serial] =

-	if (mobile) then
-		mobile:UpdateStamina( curval, maxval )
-	end
-end
-
-function gPacketHandler.kPacket_Damage()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
-	local damage =3D input:PopNetUint16()
-	=

-	gCurrentRenderer:NotifyHPChange( serial, damage, 0 )
-end
-
--- see also Send_ClientQuery in net.login.lua
-function Send_QueryStatus( mobile )
-	local out =3D GetSendFIFO()
-	out:PushNetUint8( kPacket_Client_Query )
-	out:PushNetUint32( hex2num("0xedededed"))
-	out:PushNetUint8( hex2num("0x04") )
-	out:PushNetUint32( mobile.serial )
-	out:SendPacket()
-end
+	stats.curHits			=3D input:PopNetUint16()
+	stats.maxHits	 		=3D input:PopNetUint16()
+	stats.bCanChangeName	=3D input:PopNetUint8() ~=3D 0
+	stats.flag 				=3D input:PopNetUint8()
+	=

+	-- more data following
+	if in_array( stats.flag, {1,3,4,5} ) then
+		stats.sex			=3D input:PopNetUint8() -- * 0x00 - Male * 0x01 - Female
+		stats.str			=3D input:PopNetUint16()
+		stats.dex			=3D input:PopNetUint16()
+		stats.int			=3D input:PopNetUint16()
+		stats.curStamina	=3D input:PopNetUint16()
+		stats.maxStamina	=3D input:PopNetUint16()
+		stats.curMana		=3D input:PopNetUint16()
+		stats.maxMana		=3D input:PopNetUint16()
+		stats.gold			=3D input:PopNetUint32()
+		stats.armor			=3D input:PopNetUint16()
+		stats.curWeight		=3D input:PopNetUint16()
+
+		if (stats.flag =3D=3D 5) then
+			stats.maxWeight	=3D input:PopNetUint16()
+			stats.race		=3D input:PopNetUint8()
+		end
+
+		if in_array( stats.flag, {3,4,5} ) then
+			stats.statcap	=3D input:PopNetUint16()
+			stats.curPet	=3D input:PopNetUint8()			=

+			stats.maxPet	=3D input:PopNetUint8()
+			=

+			if in_array( stats.flag, {4,5} ) then
+				stats.fireresist	=3D input:PopNetUint16()			=

+				stats.coldresist	=3D input:PopNetUint16()			=

+				stats.poisonresist	=3D input:PopNetUint16()			=

+				stats.energyresist	=3D input:PopNetUint16()			=

+				stats.luck			=3D input:PopNetUint16()			=

+				stats.minDamage		=3D input:PopNetUint16()			=

+				stats.maxDamage		=3D input:PopNetUint16()			=

+				stats.tithing		=3D input:PopNetUint32()			=

+			end
+		end
+	end
+
+	local mobile =3D gObjectList[mobileserial] =

+	if (mobile) then
+		mobile:updatestats( stats )
+	end
+end
+
+-- Update Current Health [0xA1]
+function gPacketHandler.kPacket_HP_Health()
+	local input =3D GetRecvFIFO()
+	local packetid =3D input:PopNetUint8()
+	local serial =3D input:PopNetUint32()
+	local maxval =3D input:PopNetUint16()
+	local curval =3D input:PopNetUint16()
+	=

+	local mobile =3D gObjectList[serial] =

+	if (mobile) then
+		mobile:UpdateHits( curval, maxval )
+	end
+end
+
+-- Update Current Mana [0xA2]
+function gPacketHandler.kPacket_Mana_Health()
+	local input =3D GetRecvFIFO()
+	local packetid =3D input:PopNetUint8()
+	local serial =3D input:PopNetUint32()
+	local maxval =3D input:PopNetUint16()
+	local curval =3D input:PopNetUint16()
+
+	local mobile =3D gObjectList[serial] =

+	if (mobile) then
+		mobile:UpdateMana( curval, maxval )
+	end	=

+end
+
+-- Update Current Stamina [0xA3]
+function gPacketHandler.kPacket_Stamina()
+	local input =3D GetRecvFIFO()
+	local packetid =3D input:PopNetUint8()
+	local serial =3D input:PopNetUint32()
+	local maxval =3D input:PopNetUint16()
+	local curval =3D input:PopNetUint16()
+
+	local mobile =3D gObjectList[serial] =

+	if (mobile) then
+		mobile:UpdateStamina( curval, maxval )
+	end
+end
+
+function gPacketHandler.kPacket_Damage()
+	local input =3D GetRecvFIFO()
+	local packetid =3D input:PopNetUint8()
+	local serial =3D input:PopNetUint32()
+	local damage =3D input:PopNetUint16()
+	=

+	gCurrentRenderer:NotifyHPChange( serial, damage, 0 )
+end
+
+-- see also Send_ClientQuery in net.login.lua
+function Send_QueryStatus( mobile )
+	local out =3D GetSendFIFO()
+	out:PushNetUint8( kPacket_Client_Query )
+	out:PushNetUint32( hex2num("0xedededed"))
+	out:PushNetUint8( hex2num("0x04") )
+	out:PushNetUint32( mobile.serial )
+	out:SendPacket()
+end

Modified: branches/knut/data/lua/net/net.object.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.object.lua (original)
+++ branches/knut/data/lua/net/net.object.lua Thu Aug  2 17:12:24 2007
@@ -1,4 +1,8 @@
+-- packet handlers for receiving creating and updating game-objects (dynam=
ics, statics, multis...)
+-- see also lib.packet.lua and lib.protocol.lua
+
 function Send_DoubleClick( iSerial )
+	printdebug("net",sprintf("NET: Send_DoubleClick: 0x%08x\n",iSerial))
 	local out =3D GetSendFIFO()
 	out:PushNetUint8( kPacket_Double_Click )
 	out:PushNetUint32( iSerial )
@@ -9,24 +13,31 @@
 =

 function RepeatLastDoubleClick()
 	if gLastDoubleClickSerial ~=3D 0 then
-		DoubleClick( gLastDoubleClickSerial )
+		Send_DoubleClick(gLastDoubleClickSerial)
 	end
 end
 =

 function Send_SingleClick( iSerial )
+	printdebug("net",sprintf("NET: Send_SingleClick: 0x%08x\n",iSerial))
 	local out =3D GetSendFIFO()
 	out:PushNetUint8( kPacket_Single_Click )
 	out:PushNetUint32( iSerial )
 	out:SendPacket()
 end
 =

+-- Server sends Delete/Destroy command of char/item (usually during drag&d=
rop from container)
+-- TODO : multis (serverside multis)
+--		  destroy statics?, containers ?? (associated dialogs,widgets..)
+--		 (NOT here, statics are dynamicly loaded and containers should be cach=
ed or destroyed when closed
 function gPacketHandler.kPacket_Destroy()
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	local serial =3D input:PopNetUint32()
+	printdebug("net",sprintf("NET: Destroy item with serial: 0x%08x\n",serial=
))
 	=

 	object =3D gObjectList[ serial ]
 	if (object) then
 		object:delete()
 	end
-end
+end
+

Modified: branches/knut/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.dynamic.lua (original)
+++ branches/knut/data/lua/obj/obj.dynamic.lua Thu Aug  2 17:12:24 2007
@@ -138,4 +138,4 @@
 =

 	-- just for testing, remove me
 	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
-end
+end

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Thu Aug  2 17:12:24 2007
@@ -1,6 +1,33 @@
 dofile(libpath .. "obj/obj.mobile.lua")
 dofile(libpath .. "obj/obj.dynamic.lua")
 dofile(libpath .. "obj/obj.player.lua")
+
+function GetMobile (mobileserial) local res =3D gObjectList[mobileserial] =
if (res.ismobile) then return res end end
+function GetMobileEquipmentItem (mobile,layer) return mobile:getequipment(=
layer) end
+function GetMobileEquipmentList (mobile) return mobile.content end
+function GetContainerContentList (container) return container.content end
+function GetObjectBySerial (serial) return gObjectList[serial] end
+
+function GetDynamicList () =

+	if (not gGetDynamicListWarning)	print("WARNING ! redesign me : GetDynamic=
List workaround") gGetDynamicListWarning =3D true end
+	-- ask ghoulsblade : this global lists of all dynamics and mobiles etc sh=
ould be kept for performance
+	local res
+	for k,object in pairs(gObjectList) do
+		if (object.isdynamic) then res[k] =3D object end
+	end
+	return res
+end
+
+function GetMobileList () =

+	if (not gGetMobileListWarning)	print("WARNING ! redesign me : GetDynamicL=
ist workaround") gGetMobileListWarning =3D true end
+	-- ask ghoulsblade : this global lists of all dynamics and mobiles etc sh=
ould be kept for performance
+	local res
+	for k,object in pairs(gObjectList) do
+		if (object.ismobile) then res[k] =3D object end
+	end
+	return res
+end
+
 =

 gObjectList =3D {}
 gPlayerBodySerial =3D 0

Modified: branches/knut/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.player.lua (original)
+++ branches/knut/data/lua/obj/obj.player.lua Thu Aug  2 17:12:24 2007
@@ -4,9 +4,10 @@
 end
 =

 function GetPlayerMobile ()
-	return gObjectList[ gPlayerBodySerial ]
+	return gPlayerBodySerial and GetMobile(gPlayerBodySerial)
 end
 =

+-- used by secure trade, mobile.name is filled by kPacket_Mobile_Stats
 function GetPlayerName ()
 	local mobile =3D GetPlayerMobile()
 	return mobile and mobile.name



From no-reply at zwischenwelt.org  Thu Aug  2 17:13:37 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 15:13:37 -0000
Subject: [Iris-commit] [IRIS] r1330 - in /trunk/data/lua: ./ gui/ net/ obj/
Message-ID: <20070802151339.8A268B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 17:13:37 2007
New Revision: 1330

Log:
syncing with branch..

Added:
    trunk/data/lua/gui/gui.gumpmanager.lua
    trunk/data/lua/gui/gui.journal.lua
    trunk/data/lua/gui/gui.quit.lua
    trunk/data/lua/gui/gui.widget.lua
    trunk/data/lua/lib.uodragdrop.lua
Modified:
    trunk/data/lua/gui/gui.container.lua
    trunk/data/lua/gui/gui.main.lua
    trunk/data/lua/gui/gui.paperdoll.lua
    trunk/data/lua/gui/gui.status.lua
    trunk/data/lua/lib.3d.combat.lua
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.3d.mousepick.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.devtool.lua
    trunk/data/lua/lib.fallback.lua
    trunk/data/lua/lib.models.lua
    trunk/data/lua/lib.mousepick.lua
    trunk/data/lua/lib.protocol.lua
    trunk/data/lua/lib.walking2.lua
    trunk/data/lua/main.lua
    trunk/data/lua/net.login.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net.trade.lua
    trunk/data/lua/net.uodragdrop.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.effect.lua
    trunk/data/lua/net/net.main.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/net/net.object.lua
    trunk/data/lua/obj/obj.dynamic.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/gui/gui.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.container.lua (original)
+++ trunk/data/lua/gui/gui.container.lua Thu Aug  2 17:13:37 2007
@@ -37,50 +37,6 @@
 		container.dialog =3D nil
 	end
 	gContainer[serial] =3D nil
-end
-
--- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
-function ApplyArtidStackManipulation (item)
-	item.baseartid =3D item.artid
-	=

-	-- from varan
-	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") end
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") end
-	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") end
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") end
-	-- Silver
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") end
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") end
-	-- cannonball
-	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") end
-
-	--TODO : if not in this list, and amount > 0 : draw the graphic 2 times
-	--for example: if (item.baseartid =3D=3D hex2num("0xE73") and item.amount=
 > 0) then item.artid =3D hex2num("0xE74") item.drawcount=3D2 end
-
-	-- ART -> GUMP
-	-- white backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue end
-	-- brown backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue end
-	-- brown chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	-- white chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-
-	-- just for testing, remove me
-	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
 end
 =

 -- creates if necessary

Modified: trunk/data/lua/gui/gui.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.main.lua (original)
+++ trunk/data/lua/gui/gui.main.lua Thu Aug  2 17:13:37 2007
@@ -1,7 +1,7 @@
---~ dofile(libpath .. "gui/gui.widget.lua")
---~ dofile(libpath .. "gui/gui.gumpmanager.lua")
+dofile(libpath .. "gui/gui.widget.lua")
+dofile(libpath .. "gui/gui.gumpmanager.lua")
 dofile(libpath .. "gui/gui.container.lua")
 dofile(libpath .. "gui/gui.paperdoll.lua")
---~ dofile(libpath .. "gui/gui.journal.lua")
---~ dofile(libpath .. "gui/gui.quit.lua")
+dofile(libpath .. "gui/gui.journal.lua")
+dofile(libpath .. "gui/gui.quit.lua")
 dofile(libpath .. "gui/gui.status.lua")

Modified: trunk/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.paperdoll.lua (original)
+++ trunk/data/lua/gui/gui.paperdoll.lua Thu Aug  2 17:13:37 2007
@@ -300,17 +300,6 @@
 	out:SendPacket()
 end
 =

--- request serverside helppage
-function Send_RequestHelp()
-	print("NET: Send_RequestHelp")
-	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Request_Assistance)
-	for i=3D1, 257 do
-		out:PushNetUint8(0)
-	end
-	out:SendPacket()
-end
-
 -- TODO : Clean
 function TogglePlayerPaperdoll ()
 	if (gPlayerBodySerial and gPaperdolls[gPlayerBodySerial]) then

Modified: trunk/data/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.status.lua (original)
+++ trunk/data/lua/gui/gui.status.lua Thu Aug  2 17:13:37 2007
@@ -64,7 +64,7 @@
 					local s =3D m.stats
 					=

 					local l =3D {	char_str =3D "status_str", char_dex =3D "status_dex", c=
har_int =3D "status_int",
-								currentHitpoints =3D "status_hits", maxHitpoints =3D "status_maxhi=
ts",
+								curHits =3D "status_hits", maxHits =3D "status_maxhits",
 								char_curMana =3D "status_mana", char_maxMana =3D "status_maxmana",
 								char_curSta =3D "status_stamina", char_maxSta =3D "status_maxstami=
na",
 								char_luck =3D "status_luck", char_gold =3D "status_gold",

Modified: trunk/data/lua/lib.3d.combat.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.combat.lua (original)
+++ trunk/data/lua/lib.3d.combat.lua Thu Aug  2 17:13:37 2007
@@ -39,7 +39,7 @@
 =

 -- helper to plop hp adds and damage
 function Renderer3D:NotifyHPChange (serial, oldhp, newhp)
-	local mobile =3D gMobiles[serial]
+	local mobile =3D GetMobile(serial)
 	if mobile and oldhp and newhp then
 		local r,g,b =3D 0.0, 0.0, 0.0
 		-- hp change, d<0 means damage, d>0 hp gain

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Thu Aug  2 17:13:37 2007
@@ -302,7 +302,7 @@
 		end
 		=

 		-- check dynamics for multis to detect house roofs and stuff like this
-		for k,dynamic in pairs(gDynamics) do
+		for k,dynamic in pairs(GetDynamicList()) do
 			if (dynamic.lMultiChildGfx) then
 				for k,child in pairs(dynamic.lMultiChildGfx) do
 					if (x =3D=3D dynamic.xloc+child.xloc and y =3D=3D dynamic.yloc+child.=
yloc and dynamic.zloc+child.zloc > playerheadpos) then
@@ -349,9 +349,9 @@
 		end
 		=

 		-- update dynamics
-		for k,dynamic in pairs(gDynamics) do self:UpdateDynamicVisibility(dynami=
c) end
+		for k,dynamic in pairs(GetDynamicList()) do self:UpdateDynamicVisibility=
(dynamic) end
 		-- update mobiles
-		for k,mobile in pairs(gMobiles) do self:UpdateMobileVisibility(mobile) e=
nd
+		for k,mobile in pairs(GetMobileList()) do self:UpdateMobileVisibility(mo=
bile) end
 	end
 end
 =


Modified: trunk/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobileanim.lua (original)
+++ trunk/data/lua/lib.3d.mobileanim.lua Thu Aug  2 17:13:37 2007
@@ -40,7 +40,7 @@
 =

 =

 function Renderer3D:MobileStartServerSideAnim (anim) =

-	local mobile =3D gMobiles[anim.mobileserial]	=

+	local mobile =3D GetMobile(anim.mobileserial)
 	if (not mobile) then return end
 	=

 	anim.repeatcount =3D (anim.m_repeatFlag =3D=3D 0) and 1 or (1 + anim.m_re=
peat) -- here -1 for infinite
@@ -60,8 +60,8 @@
 	local bodyid =3D MobileArtId2BodyId(mobile.artid)
 	=

 	-- detect animation modifiers : staff, mount=3Dhorse, combat
-	local mount		=3D mobile.equipment[kLayer_Mount]
-	local twohand	=3D mobile.equipment[kLayer_TwoHanded] -- staff
+	local mount		=3D GetMobileEquipmentItem(mobile,kLayer_Mount)
+	local twohand	=3D GetMobileEquipmentItem(mobile,kLayer_TwoHanded) -- staff
 	local bHasStaff =3D twohand and BitwiseAND(GetStaticTileTypeFlags(twohand=
.artid) or 0,kTileDataFlag_Weapon) ~=3D 0
 	local bWarMode 	=3D BitwiseAND(mobile.flag,kMobileFlag_WarMode) ~=3D 0 --=
 combat
 	local bRunning 	=3D mobile.walksmooth_moving and (BitwiseAND(mobile.dir,k=
WalkFlag_Run) ~=3D 0)

Modified: trunk/data/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mousepick.lua (original)
+++ trunk/data/lua/lib.3d.mousepick.lua Thu Aug  2 17:13:37 2007
@@ -170,7 +170,7 @@
 	end end
 =

 	-- dynamics
-	for k,dynamic in pairs(gDynamics) do
+	for k,dynamic in pairs(GetDynamicList()) do
 		-- does this dynamic consists of many gfx parts (multi)?
 		if dynamic.lMultiChildGfx then
 			-- handle multi collision
@@ -210,7 +210,7 @@
 	=

 	-- mobiles
 	local bIgnorePlayer =3D self:IsFirstPersonCam()
-	for k,mobile in pairs(gMobiles) do if (mobile.gfx and self:IsZLayerVisibl=
e(mobile.zloc) and ((not bIgnorePlayer) or (not IsPlayerMobile(mobile)))) t=
hen
+	for k,mobile in pairs(GetMobileList()) do if (mobile.gfx and self:IsZLaye=
rVisible(mobile.zloc) and ((not bIgnorePlayer) or (not IsPlayerMobile(mobil=
e)))) then
 		if (true) then
 			-- small bbox mousepick as fallback in case model is not available/invi=
sible (horse)
 			bHit,fHitDist =3D mobile.gfx:RayPick(rx,ry,rz,rvx,rvy,rvz)

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Thu Aug  2 17:13:37 2007
@@ -84,14 +84,14 @@
 	self:SetMapEnvironment()
 	=

 	self.gbCamRotChanged =3D true
-	for k,dynamic in pairs(gDynamics) do self:CreateDynamicGfx(dynamic) end
-	for k,mobile in pairs(gMobiles) do self:CreateMobileGfx(mobile) end
+	for k,dynamic in pairs(GetDynamicList()) do self:CreateDynamicGfx(dynamic=
) end
+	for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile) end
 end
 =

 function Renderer3D:DeInit()
 	--print("deactivating Renderer3D")
-	for k,dynamic in pairs(gDynamics) do self:DestroyDynamicGfx(dynamic) end
-	for k,mobile in pairs(gMobiles) do self:DestroyMobileGfx(mobile) end
+	for k,dynamic in pairs(GetDynamicList()) do self:DestroyDynamicGfx(dynami=
c) end
+	for k,mobile in pairs(GetMobileList()) do self:DestroyMobileGfx(mobile) e=
nd
 	self:DeactivateMousePick()
 	self:ClearMapCache()
 	Client_SetFog()
@@ -294,10 +294,16 @@
 --###############################
 =

 =

+function Renderer3D:AddMobile () end
+
+
+function Renderer3D:UpdateMobileEquipment( mobile )
+end
+
 function Renderer3D:UpdateMobile( mobile )
 	if (not self.gbActive) then return end
 	=

-	if IsPlayerMobile(mobile) then
+	if (IsPlayerMobile(mobile)) then
 		-- set audio listener position if this is the playerbody
 		SoundSetListenerPosition(mobile.xloc,mobile.yloc,mobile.zloc * 0.1 + sel=
f.gZ_Factor)
 	end
@@ -325,13 +331,13 @@
 	end
 =

 	-- update mobile bar color
-	if (mobile and mobile.stats and mobile.stats.currentHitpoints and =

-		mobile.bar.lastn ~=3D mobile.stats.currentHitpoints) then
+	if (mobile and mobile.stats and mobile.stats.curHits and =

+		mobile.bar.lastn ~=3D mobile.stats.curHits) then
 =

 		-- store current as last value
-		mobile.bar.lastn =3D mobile.stats.currentHitpoints
-		=

-		local p =3D mobile.stats.currentHitpoints / mobile.stats.maxHitpoints
+		mobile.bar.lastn =3D mobile.stats.curHits
+		=

+		local p =3D mobile.stats.curHits / mobile.stats.maxHits
 		-- print("#### health",p)
 		=

 		-- bar color
@@ -477,6 +483,7 @@
 				mobile.nametext.lastn =3D nil
 				mobile.nametext.lastname =3D nil
 			end
+			mobile.name =3D mobile.stats and mobile.stats.name
 			if (mobile.nametext.lastn ~=3D mobile.notoriety or mobile.nametext.last=
name ~=3D mobile.name) then
 				mobile.nametext.lastn =3D mobile.notoriety
 				mobile.nametext.lastname =3D mobile.name
@@ -496,7 +503,7 @@
 function Renderer3D:UpdateMobilePos (mobile,x,y,z,qw,qx,qy,qz)
 	-- set position and orientation
 	if (mobile.modelgfx) then
-		local mount =3D mobile.equipment[kLayer_Mount]
+		local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
 		mobile.modelgfx:SetPosition(x-0.5, y+0.5, z + (mount and -kMountZAdd or =
0))
 		mobile.modelgfx:SetOrientation(qw,qx,qy,qz)
 	end
@@ -518,7 +525,9 @@
 	-- chat text over player head
 	if mobile.mlastChatText and mobile.mlastChatTime and mobile.mlastChatColo=
r then
 		-- chat text graphic present?
-		local r,g,b =3D mobile.mlastChatColor.r,mobile.mlastChatColor.g,mobile.m=
lastChatColor.b
+		local r,g,b =3D	mobile.mlastChatColor.r,
+						mobile.mlastChatColor.g,
+						mobile.mlastChatColor.b
 		local a =3D 1
 		=

 		if not mobile.chattext then
@@ -597,7 +606,7 @@
 	local iTimeSinceLastStepInSeconds =3D self.giLastAnimStepTime and ((gMyTi=
cks - self.giLastAnimStepTime) / 1000) or 0
 	self.giLastAnimStepTime =3D gMyTicks
 	=

-	for k,mobile in pairs(gMobiles) do Renderer3D:StepMobile(mobile,iTimeSinc=
eLastStepInSeconds) end
+	for k,mobile in pairs(GetMobileList()) do Renderer3D:StepMobile(mobile,iT=
imeSinceLastStepInSeconds) end
 end
 =

 -- obsolete but might be interesting
@@ -656,11 +665,11 @@
 		self.giLastMapOriginX =3D self.giMapOriginX
 		self.giLastMapOriginY =3D self.giMapOriginY
 		=

-		for k,mobile in pairs(gMobiles) do =

+		for k,mobile in pairs(GetMobileList()) do =

 			UpdateMobile(mobile) =

 		end
-		for k,dynamic in pairs(gDynamics) do if (dynamic.gfx) then
-			Renderer3D:UpdateDynamicItemPos(dynamic)
+		for k,dynamic in pairs(GetDynamicList()) do if (dynamic.gfx) then
+			self:UpdateDynamicItemPos(dynamic)
 		end end
 	end
 end
@@ -912,7 +921,7 @@
 -- removes the current mobile selection
 function Renderer3D:DeselectMobile ()
 	if (giSelectedMobile ~=3D 0) then
-		local mobile =3D gMobiles[giSelectedMobile]
+		local mobile =3D GetMobile(giSelectedMobile)
 		if (mobile) then
 			mobile.isselected =3D false
 			mobile.selection:SetVisible(false)
@@ -926,7 +935,7 @@
 	-- print ("selectmobile",iSerial)
 	self:DeselectMobile()
 	if (iSerial ~=3D 0) then
-		local mobile =3D gMobiles[iSerial]
+		local mobile =3D GetMobile(iSerial)
 		if (mobile) then
 			mobile.isselected =3D true
 			-- TODO is it possible that selection is not created (UpdateMobile crea=
tes selection)

Modified: trunk/data/lua/lib.devtool.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.devtool.lua (original)
+++ trunk/data/lua/lib.devtool.lua Thu Aug  2 17:13:37 2007
@@ -260,7 +260,7 @@
 =

 function ListDynamicsNearPos (x,y,z,radius)
 	local res =3D {}
-	for k,item in pairs(gDynamics) do =

+	for k,item in pairs(GetDynamicList()) do =

 		local d =3D dist2(x,y,item.xloc,item.yloc)
 		if (d <=3D radius) then table.insert(res,item) end =

 	end

Modified: trunk/data/lua/lib.fallback.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.fallback.lua (original)
+++ trunk/data/lua/lib.fallback.lua Thu Aug  2 17:13:37 2007
@@ -25,9 +25,14 @@
 	f:write(sprintf("RegisterSkippedArtBillboardFallBack(%d) -- 0x%04x name=
=3D%s\n",i,i,GetStaticTileTypeName(i) or "unknown"))
 	f:close()
 	-- hide existing dynamics
-	for k,item in pairs(gDynamics) do if (item.iTileTypeID =3D=3D i) then
-		if (item.gfx and item.gfx.billboard) then item.gfx.billboard:Destroy() i=
tem.gfx.billboard =3D nil end
-	end end
+
+	for k,item in pairs(GetDynamicList()) do
+		if (item.iTileTypeID =3D=3D i and item.gfx and item.gfx.billboard) then =

+			item.gfx.billboard:Destroy() =

+			item.gfx.billboard =3D nil =

+		end
+	end
+
 	-- hide existing statics (requires map rebuild)
 	gCurrentRenderer:ClearMapCache()
 end
@@ -129,7 +134,7 @@
 =

 function List3DDynamicsNearPos (x,y,z,radius)
 	local res =3D {}
-	for k,item in pairs(gDynamics) do =

+	for k,item in pairs(GetDynamicList()) do =

 		local d =3D dist2(x,y,item.xloc,item.yloc)
 		if (d <=3D radius) then table.insert(res,item) end =

 	end

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Thu Aug  2 17:13:37 2007
@@ -326,10 +326,10 @@
 	end
 	=

 	-- equipment, ORDER IS IMPORTANT FOR STITCHIN !!! (gLayerOrder?)
-	if (mobile.equipment) then =

+	if (GetMobileEquipmentList(mobile)) then =

 		-- TODO : i assume the paperdoll layerorder is the same as the granny la=
yeroder, check if this is correct
 		for index,layer in pairs(gLayerOrder) do
-			local item =3D mobile.equipment[layer]
+			local item =3D GetMobileEquipmentItem(mobile,layer)
 			if (item and layer ~=3D kLayer_Mount) then  -- ignore mounts here, hand=
led seperately
 				local tiledata =3D GetStaticTileType(item.artid or 0)
 				--print("equip",item.artid,tiledata and tiledata.miAnimID or 0)
@@ -490,7 +490,7 @@
 	if (mobile.artid =3D=3D 0) then return end
 	if (not mobile.equipment) then return end -- happens when being teleported
 	=

-	local mount =3D mobile.equipment[kLayer_Mount]
+	local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
 	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelPa=
rtModelIDs(mobile)
 	local bModelPartsChanged =3D false
 	if (not mobile.modelgfx) then bModelPartsChanged =3D true end

Modified: trunk/data/lua/lib.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mousepick.lua (original)
+++ trunk/data/lua/lib.mousepick.lua Thu Aug  2 17:13:37 2007
@@ -1,145 +1,146 @@
-kMousePickHitType_Static =3D 0
-kMousePickHitType_Terrain =3D 1
-kMousePickHitType_Dynamic =3D 2
-kMousePickHitType_Mobile =3D 3
-kMousePickHitType_ContainerItem =3D 4
-kMousePickHitType_PaperdollItem =3D 5
-
-gMousePickFoundHit =3D false
-
-giSelectedMobile =3D 0
+kMousePickHitType_Static =3D 0
+kMousePickHitType_Terrain =3D 1
+kMousePickHitType_Dynamic =3D 2
+kMousePickHitType_Mobile =3D 3
+kMousePickHitType_ContainerItem =3D 4
+kMousePickHitType_PaperdollItem =3D 5
 =

--- OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix>f =
TerrainRayIntersect_Hit .lua
-function TerrainRayIntersect_Hit(tx,ty,tiletype,hit_dist,minz,maxz)
-	gCurrentRenderer:TerrainRayIntersect_Hit (tx,ty,tiletype,hit_dist,minz,ma=
xz)
+gMousePickFoundHit =3D false
+
+giSelectedMobile =3D 0
+
+-- OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix>f =
TerrainRayIntersect_Hit .lua
+function TerrainRayIntersect_Hit(tx,ty,tiletype,hit_dist,minz,maxz)
+	gCurrentRenderer:TerrainRayIntersect_Hit (tx,ty,tiletype,hit_dist,minz,ma=
xz)
 end
 =

 function IrisRightDoubleClick ()
-	-- TODO implement pathfinding and use it here
+	-- TODO implement pathfinding and use it here
 	-- SetAutoWalkTarget()
-end
-
-function IrisDoubleClick ()
-	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
-
-	if gbControlDown then
-		-- open status window if control pressed and mobile targeted
-		if (iSerial and iSerial ~=3D 0) then =

-			local mobile =3D gMobiles[iSerial]
-			local iMouseX,iMouseY =3D PollInput()
-			-- -50,-30 to place the dialog beneath the mouse
-			OpenStatus(mobile,iMouseX - 50,iMouseY - 30)
-		end
-	else
-		-- normal doubleclick handling
-		pm =3D GetPlayerMobile()
-		if (gActWarmode =3D=3D gWarmode_Normal or (pm and iSerial =3D=3D pm.seri=
al) ) then
-			if (iSerial and iSerial ~=3D 0) then
-				printf("IrisDoubleClick: serial=3D0x%08x\n",iSerial)
-				Send_DoubleClick(iSerial)
-			end
-		end
-		if (gActWarmode =3D=3D gWarmode_Combat) then
-			if (iSerial and iSerial ~=3D 0) then
-				printf("IrisDoubleClickAttack: serial=3D0x%08x\n",iSerial)
-				Send_AttackReq(iSerial)
-			end
-		end
-	end
-end
-
--- currently sent on mousedown
--- TODO : maybe only send on mouseup if no dragdrop took place ?
-function IrisSingleClick ()
-	if (IsTargetModeActive()) then =

-		CompleteTargetMode() -- see net.cursor.lua
-	else
-		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
-		if (iSerial and iSerial ~=3D 0) then =

-			printf("IrisSingleClick: serial=3D0x%08x\n",iSerial)
-			Send_SingleClick(iSerial)
-			gCurrentRenderer:SelectMobile(iSerial)
-		else
-			-- TODO is this too removey?
-			-- gCurrentRenderer:DeselectMobile()
-		end
-	end
-end
-
-function IrisRightClick ()
-	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
-	if (iSerial and iSerial ~=3D 0) then =

-		printf("IrisRightClick: serial=3D0x%08x\n",iSerial)
-		Send_PopupRequest(iSerial) =

-	end
-end
-
--- find mobile with the minimum distance to player (x,y 2d based)
-function SelectNearestMobile ()
-	gCurrentRenderer:DeselectMobile()
-	=

-	local mindist =3D -1
-	local minserial =3D 0
-	local playermobile =3D gMobiles[gPlayerBodySerial]
-	if (playermobile) then
-		for k,mobile in pairs(gMobiles) do =

-			if (k ~=3D gPlayerBodySerial) then
-				-- calculate distance to player
-				local dx =3D (mobile.xloc - playermobile.xloc)
-				local dy =3D (mobile.yloc - playermobile.yloc)
-				local d =3D math.sqrt(dx*dx + dy*dy)
-				if (mindist < 0 or d < mindist) then
-					-- new min found
-					minserial =3D k
-					mindist =3D d
-				end
-			end
-		end
-	end
-	-- select the nearest if found
-	if (minserial ~=3D 0) then
-		gCurrentRenderer:SelectMobile(minserial)
-	end
-end
-
--- selects the next mobile cycling through all mobiles
-function SelectNextMobile ()
-	local current =3D giSelectedMobile
-	local minserial =3D -1
-	local nextminserial =3D -1
-	-- print ("current", current)
-	for k,mobile in pairs(gMobiles) do
-		if (current < k and (k < nextminserial or nextminserial < 0)) then
-			-- small serial (bigger than current found)
-			nextminserial =3D k
-			-- print ("nextminserial",nextminserial)
-		end
-		if (minserial < 0 or k < minserial) then
-			-- searches for the absolute min serial, cycle start
-			minserial =3D k
-			-- print ("minserial",minserial)
-		end
-	end
-	=

-	-- select the next if found
-	if (nextminserial > 0) then
-		gCurrentRenderer:SelectMobile(nextminserial)
-	else
-		-- or the start if no next found
-		if (minserial > 0) then
-			gCurrentRenderer:SelectMobile(minserial)
-		end
-	end
-end
-
--- attack the current selected mobile or just go to it (depends in warmode=
 on/off)
-function AttackSelectedMobile ()
-	if (giSelectedMobile ~=3D 0) then
-		-- who shall i kill, master?
-		local target =3D gMobiles[giSelectedMobile]
-		if target then
-			-- run to the target
-			SetFollowMobile(giSelectedMobile)
-		end
-	end
-end
+end
+
+function IrisDoubleClick ()
+	gCurrentRenderer:MousePick()
+	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+	if gbControlDown then
+		-- open status window if control pressed and mobile targeted
+		if (iSerial and iSerial ~=3D 0) then =

+			local mobile =3D GetMobile(iSerial)
+			local iMouseX,iMouseY =3D PollInput()
+			-- -50,-30 to place the dialog beneath the mouse
+			OpenStatus(mobile,iMouseX - 50,iMouseY - 30)
+		end
+	else
+		-- normal doubleclick handling
+		pm =3D GetPlayerMobile()
+		if (gActWarmode =3D=3D gWarmode_Normal or (pm and iSerial =3D=3D pm.seri=
al) ) then
+			if (iSerial and iSerial ~=3D 0) then
+				printdebug("UO","IrisDoubleClick: serial=3D0x%08x\n",iSerial)
+				Send_DoubleClick(iSerial)
+			end
+		end
+		if (gActWarmode =3D=3D gWarmode_Combat) then
+			if (iSerial and iSerial ~=3D 0) then
+				printdebug("UO","IrisDoubleClickAttack: serial=3D0x%08x\n",iSerial)
+				Send_AttackReq(iSerial)
+			end
+		end
+	end
+end
+
+-- currently sent on mousedown
+-- TODO : maybe only send on mouseup if no dragdrop took place ?
+function IrisSingleClick ()
+	if (IsTargetModeActive()) then =

+		CompleteTargetMode() -- see net.cursor.lua
+	else
+		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		if (iSerial and iSerial ~=3D 0) then =

+			printdebug("UO","IrisSingleClick: serial=3D0x%08x\n",iSerial)
+			Send_SingleClick(iSerial)
+			gCurrentRenderer:SelectMobile(iSerial)
+		else
+			-- TODO is this too removey?
+			-- gCurrentRenderer:DeselectMobile()
+		end
+	end
+end
+
+function IrisRightClick ()
+	local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+	if (iSerial and iSerial ~=3D 0) then =

+		printdebug("UO","IrisRightClick: serial=3D0x%08x\n",iSerial)
+		Send_PopupRequest(iSerial) =

+	end
+end
+
+-- find mobile with the minimum distance to player (x,y 2d based)
+function SelectNearestMobile ()
+	gCurrentRenderer:DeselectMobile()
+	=

+	local mindist =3D -1
+	local minserial =3D 0
+	local playermobile =3D GetMobile(gPlayerBodySerial)
+	if (playermobile) then
+		for k,mobile in pairs(GetMobileList()) do =

+			if (k ~=3D gPlayerBodySerial) then
+				-- calculate distance to player
+				local dx =3D (mobile.xloc - playermobile.xloc)
+				local dy =3D (mobile.yloc - playermobile.yloc)
+				local d =3D math.sqrt(dx*dx + dy*dy)
+				if (mindist < 0 or d < mindist) then
+					-- new min found
+					minserial =3D k
+					mindist =3D d
+				end
+			end
+		end
+	end
+	-- select the nearest if found
+	if (minserial ~=3D 0) then
+		gCurrentRenderer:SelectMobile(minserial)
+	end
+end
+
+-- selects the next mobile cycling through all mobiles
+function SelectNextMobile ()
+	local current =3D giSelectedMobile
+	local minserial =3D -1
+	local nextminserial =3D -1
+	-- print ("current", current)
+
+	for k,mobile in pairs(GetMobileList()) do
+		if (current < k and (k < nextminserial or nextminserial < 0)) then
+			-- small serial (bigger than current found)
+			nextminserial =3D k
+			-- print ("nextminserial",nextminserial)
+		end
+		if (minserial < 0 or k < minserial) then
+			-- searches for the absolute min serial, cycle start
+			minserial =3D k
+			-- print ("minserial",minserial)
+		end
+	end
+	=

+	-- select the next if found
+	if (nextminserial > 0) then
+		gCurrentRenderer:SelectMobile(nextminserial)
+	else
+		-- or the start if no next found
+		if (minserial > 0) then
+			gCurrentRenderer:SelectMobile(minserial)
+		end
+	end
+end
+
+-- attack the current selected mobile or just go to it (depends in warmode=
 on/off)
+function AttackSelectedMobile ()
+	if (giSelectedMobile ~=3D 0) then
+		-- who shall i kill, master?
+		local target =3D GetMobile(giSelectedMobile)
+		if target then
+			-- run to the target
+			SetFollowMobile(giSelectedMobile)
+		end
+	end
+end

Modified: trunk/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.protocol.lua (original)
+++ trunk/data/lua/lib.protocol.lua Thu Aug  2 17:13:37 2007
@@ -148,3 +148,26 @@
 	file:write(info)
 	file:close()
 end
+
+-- Send Packets -----------------------------------------------------------
+
+-- request serverside helppage
+function Send_RequestHelp()
+	print("NET: Send_RequestHelp")
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Request_Assistance)
+	for i=3D1, 257 do
+		out:PushNetUint8(0)
+	end
+	out:SendPacket()
+end
+
+-- request profile
+function Send_RequestProfile( serial )
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Character_Profile)
+	out:PushNetUint16(8)
+	out:PushNetUint8(0)
+	out:PushNetUint32(serial)
+	out:SendPacket()
+end

Modified: trunk/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.walking2.lua (original)
+++ trunk/data/lua/lib.walking2.lua Thu Aug  2 17:13:37 2007
@@ -161,11 +161,11 @@
 	=

 	local xloc=3Dbx*8+tx
 	local yloc=3Dby*8+ty
-	for k,dynamic in pairs(gDynamics) do
+	for k,dynamic in pairs(GetDynamicList()) do
 		if(dynamic.artid) then
 =

 			-- is this a normal statictile or multi?
-			if dynamic.artid >=3D gMulti_ID then
+			if (dynamic.artid >=3D gMulti_ID) then -- gMulti_ID + 100
 				if (dynamic.lTile) then
 					for k,v in pairs(dynamic.lTile) do
 						if ((dynamic.xloc+v.x) =3D=3D xloc and (dynamic.yloc+v.y) =3D=3D ylo=
c) then
@@ -203,7 +203,6 @@
 					GetWalkingBlockFlagsHelper(dynamic.zloc,dynamic.artid,flaglist)
 				end
 			end
-
 		end
 	end
 	=


Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Thu Aug  2 17:13:37 2007
@@ -16,6 +16,7 @@
 =

 -- utils first
 dofile(libpath .. "lib.util.lua")
+dofile(libpath .. "lib.listener.lua")
 =

 -- renderer second
 gRendererList =3D {}
@@ -78,6 +79,8 @@
 dofile(libpath .. "lib.devtool.lua")
 dofile(libpath .. "lib.3d.mobileanim.lua")
 dofile(libpath .. "lib.mount.lua")
+dofile(libpath .. "lib.debug.lua")
+dofile(libpath .. "lib.uodragdrop.lua")
 dofile(libpath .. "gui/gui.main.lua")
 dofile(libpath .. "obj/obj.main.lua")
 dofile(libpath .. "net/net.main.lua")
@@ -208,6 +211,9 @@
 =

 	if (gStartInDebugMode) then StopMainMenu() StartDebugMenu() end
 =

+	--TestGuiSystem2_Init()
+	--TestGuiSystem3_Init()
+	=

 	-- mainloop
 	while (Client_IsAlive()) do
 		MainStep(Client_GetTicks())
@@ -241,6 +247,7 @@
 	gMyTicks =3D curticks
 	UpdateStats(curticks)
 	StepTimer(curticks)
+	--TestGuiSystem2_Step()
 =

 	NetStep()
 =

@@ -259,6 +266,9 @@
 =

 	StepDebugMenu()
 	gui.Step()
+
+	NotifyListener( "EveryFrame" )
+	=

 	Client_RenderOneFrame()
 	SoundStep()
 	Client_USleep(1) -- just 1 millisecond, but gives other processes a chanc=
e to do something

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Thu Aug  2 17:13:37 2007
@@ -274,13 +274,13 @@
 =

 -- send login server request 0x80
 -- answered by 0xA8 kPacket_Server_List which calls MainMenuShowServerList
-function ProtocolSend_Account_Login_Request	(sName,sPassword)
+function ProtocolSend_Account_Login_Request	(sName,sPassword,iSeed)
 	printdebug("login",sprintf("NET: Account_Login_Request: Name: %s Password=
: %s\n",sName,sPassword))
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Account_Login_Request)
 	out:PushFilledString(sName,30)
 	out:PushFilledString(sPassword,30)
-	out:PushNetUint8(hex2num("0x5D"))
+	out:PushNetUint8(iSeed or hex2num("0x5D"))
 	out:SendPacket()
 end
 =


Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Thu Aug  2 17:13:37 2007
@@ -371,7 +371,7 @@
 -- prevents the answer to the tooltipp request from being displayed as nor=
mal message
 -- returns true if the info was caught and should not be displayed
 function CatchTooltippRequest (serial,model,charname,message) =

-	local mobile =3D gMobiles[serial]
+	local mobile =3D GetMobile(serial)
 	=

 	if (mobile) then
 		if (charname =3D=3D message) then
@@ -383,7 +383,7 @@
 		end
 		if (not mobile.name) then =

 			mobile.name =3D charname
-			UpdateMobile(mobile)
+			UpdateMobile(mobile) -- TODO : set mobile name
 			if (charname ~=3D message) then print("CatchTooltippRequest : unexpecte=
d text:",charname,message) return false end
 			return true
 		end

Modified: trunk/data/lua/net.trade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.trade.lua (original)
+++ trunk/data/lua/net.trade.lua Thu Aug  2 17:13:37 2007
@@ -71,10 +71,10 @@
 		if (not playerMobile)				then print("FATAL : kPacket_Shop_Sell : playerM=
obile not found") Crash() end
 	=

 		if (true) then -- debug
-			for k,item in pairs(playerBackpackContainer.items) do =

+			for k,item in pairs(GetContainerContentList(playerBackpackContainer)) d=
o =

 				printf("item serial=3D0x%08x artid=3D0x%04x in backpack\n",item.serial=
,item.artid)
 			end
-			for k,item in pairs(playerMobile.equipment) do =

+			for k,item in pairs(GetMobileEquipmentList(playerMobile)) do =

 				printf("item serial=3D0x%08x artid=3D0x%04x equipped\n",item.serial,it=
em.artid)
 			end
 		end
@@ -91,8 +91,9 @@
 			good.name 		=3D input:PopFilledString(good.namelen)
 			good.tradeamount=3D 0
 			good.index 		=3D i
-			good.item		=3D playerBackpackContainer.items[good.itemserial] or gMobil=
eItemsBySerial[good.itemserial]
-			=

+			good.item		=3D GetObjectBySerial(good.itemserial)
+			--- old : see also playerBackpackContainer.items[good.itemserial]			=

+
 			if (good.item) then -- item is not always available, especially if its =
in the backpack, and that has not been opened yet
 				if (good.itemartid ~=3D good.item.artid)	then printf("FATAL : kPacket_=
Shop_Sell : artid mismatch 0x%04x !=3D 0x%04x\n",good.itemartid,good.item.a=
rtid) Crash()  end
 				if (good.itemamount ~=3D good.item.amount)	then printf("FATAL : kPacke=
t_Shop_Sell : amount mismatch 0x%04x !=3D 0x%04x\n",good.itemamount,good.it=
em.amount) Crash()  end
@@ -397,7 +398,7 @@
 =

 function GetShopMobileID (shop)
 	if (shop.shopMobileID) then return shop.shopMobileID end -- only set for =
sell-shop
-	local shopContainerItem =3D gMobileItemsBySerial[shop.shopContainerID]
+	local shopContainerItem =3D GetObjectBySerial(shop.shopContainerID)
 	if (not shopContainerItem) then printf("FATAL : GetShopMobileID : shopCon=
tainerItem not found %08x\n",shop.shopContainerID) return end
 	local shopmobile =3D shopContainerItem.mobile
 	if (not shopmobile) then printf("FATAL : GetShopMobileID : shopmobile not=
 found for container %08x\n",shop.shopContainerID) return end

Modified: trunk/data/lua/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.uodragdrop.lua (original)
+++ trunk/data/lua/net.uodragdrop.lua Thu Aug  2 17:13:37 2007
@@ -260,7 +260,7 @@
 		local iTileTypeID =3D item.artid -- can come from paperdoll or container=
 or dynamic
 		local layer =3D GetPaperdollLayerFromTileType(iTileTypeID)
 		local mobileserial =3D paperdoll.mobileserial
-		local mobile =3D gMobiles[mobileserial]
+		local mobile =3D GetMobile(mobileserial)
 		print("MouseUpUODragDrop: drop on paperdoll ",item.serial,item.amount,iT=
ileTypeID,layer,paperdoll.mobileserial)
 		if (not layer) then
 			print("CompleteUODragDrop : item is not wearable",vardump(item))
@@ -268,7 +268,7 @@
 		elseif (not mobile) then
 			print("CompleteUODragDrop : paperdoll mobile not found",vardump(item))
 			CancelUODragDrop()
-		elseif (mobile.equipment[layer]) then
+		elseif (GetMobileEquipmentItem(mobile,layer)) then
 			print("CompleteUODragDrop : layer already full",vardump(item))
 			-- TODO : if layer is not empty, drop dragged item to backpack, take it=
em from layer to backpack, equip dragged item
 			-- NOTE : if layer is not empty and it's not possible to put item to ba=
ckpack -> check and solve this problem!

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Thu Aug  2 17:13:37 2007
@@ -125,7 +125,7 @@
 gNextAutoWalkCheck =3D 0
 -- timeout to next autowalk check on pressed right button
 gNextAutoWalkCheckTimeout =3D 500
--- if this is > 0 and the mobile (given as serial) is existing in gMobiles=
, autowalk tries to follow the mobile
+-- if this is > 0 and the mobile (given as serial) is existing, autowalk t=
ries to follow the mobile
 gFollowMobile =3D 0
 function WalkStep ()
 	-- runnung if shift is pressed
@@ -141,7 +141,7 @@
 	=

 	-- follow target
 	if (gFollowMobile ~=3D 0) then
-		local target =3D gMobiles[gFollowMobile]
+		local target =3D GetMobile(gFollowMobile)
 		if target then
 			SetAutoWalkTo(target.xloc, target.yloc,true)
 		else
@@ -233,7 +233,7 @@
 =

 -- will follow a given mobile
 function SetFollowMobile (serial)
-	local target =3D gMobiles[serial]
+	local target =3D GetMobile(serial)
 	if target then
 		gFollowMobile =3D serial
 		SetAutoWalkTo(target.xloc, target.yloc , true)

Modified: trunk/data/lua/net/net.effect.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.effect.lua (original)
+++ trunk/data/lua/net/net.effect.lua Thu Aug  2 17:13:37 2007
@@ -31,7 +31,7 @@
 	effect.rendermode =3D input:PopNetUint32()
 	effect.iseffect =3D true
 	=

-	printf("NET: Hued_FX: artid=3D0x%04x locx=3D%i locy=3D%i locz=3D%i target=
x=3D%i targety=3D%i targetz=3D%i effect_type=3D%s\n",
+	printdebug("NET", "Hued_FX: artid=3D0x%04x locx=3D%i locy=3D%i locz=3D%i =
targetx=3D%i targety=3D%i targetz=3D%i effect_type=3D%s\n",
 			effect.itemid, effect.source_locx, effect.source_locy, effect.source_lo=
cz,
 			effect.target_locx, effect.target_locy, effect.target_locz, gEffectType=
s[effect.effect_type] or "")
 	=


Modified: trunk/data/lua/net/net.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.main.lua (original)
+++ trunk/data/lua/net/net.main.lua Thu Aug  2 17:13:37 2007
@@ -1,9 +1,12 @@
-dofile(libpath .. "net/net.mobile.lua")
-dofile(libpath .. "net/net.dynamic.lua")
-dofile(libpath .. "net/net.object.lua")
-dofile(libpath .. "net/net.effect.lua")
-dofile(libpath .. "net/net.multi.lua")
-dofile(libpath .. "net/net.uodragdrop.lua")
+dofile(libpath .. "net/net.mobile.lua")
+dofile(libpath .. "net/net.dynamic.lua")
+dofile(libpath .. "net/net.object.lua")
+dofile(libpath .. "net/net.effect.lua")
+dofile(libpath .. "net/net.multi.lua")
+dofile(libpath .. "net/net.uodragdrop.lua")
 =

 -- only things that have at least 2 packets get its own file, everything e=
lse is handled here:
 dofile(libpath .. "net/net.packethandlers.lua")
+
+gLastDoubleClickSerial =3D 0
+

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Thu Aug  2 17:13:37 2007
@@ -198,8 +198,8 @@
 	gCurrentRenderer:MobileStartServerSideAnim(anim)
 end
 =

--- Note: For characters other than the player, currentHitpoints and maxHit=
points are not the actual values.
--- MaxHitpoints is a fixed value, and currentHitpoints works like a percen=
tage.
+-- Note: For characters other than the player, curHits and maxHits are not=
 the actual values.
+-- maxHits is a fixed value, and curHits works like a percentage.
 -- triggered by Send_ClientQuery(gRequest_States,playermobile.serial)
 -- TODO : Set also HP,Stamina,Mana here
 function gPacketHandler.kPacket_Mobile_Stats() -- 0x11
@@ -217,15 +217,15 @@
 	local oldhp =3D 0
 	if (mobile) then
 		if (mobile.stats) then =

-			oldhp =3D mobile.stats.currentHitpoints	-- save old HitPoints for notif=
ication (see below)
+			oldhp =3D mobile.stats.curHits	-- save old HitPoints for notification (=
see below)
 			stats =3D mobile.stats					-- is stats, use old stats and update it
 		else
 			print("mobile has no stats yet")
 		end
 	end
 =

-	stats.currentHitpoints		=3D input:PopNetUint16()
-	stats.maxHitpoints 			=3D input:PopNetUint16()
+	stats.curHits		=3D input:PopNetUint16()
+	stats.maxHits 			=3D input:PopNetUint16()
 	stats.flagChangeNameFlag	=3D input:PopNetUint8()		--(0x1 =3D allowed, 0 =
=3D not allowed)
 	stats.bCanChangeName =3D stats.flagChangeNameFlag ~=3D 0
 	local flag =3D input:PopNetUint8()
@@ -274,7 +274,7 @@
 		mobile.stats =3D stats
 		-- not needed due to normal damage packet
 		-- TODO is this ok for every server?
-		-- gCurrentRenderer:NotifyHPChange(mobile_id, oldhp, mobile.stats.curren=
tHitpoints)
+		-- gCurrentRenderer:NotifyHPChange(mobile_id, oldhp, mobile.stats.curHit=
s)
 		UpdateMobile(mobile)
 	end
 	=

@@ -328,14 +328,14 @@
 	local mobile =3D gMobiles[mobile_id]
 	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
 	if (mobile and (maxval ~=3D 1000) and mobile.stats) then
-		if mobile.stats.currentHitpoints then
+		if mobile.stats.curHits then
 			-- if there was a change, plop a text
-			local old =3D mobile.stats.currentHitpoints
+			local old =3D mobile.stats.curHits
 			gCurrentRenderer:NotifyHPChange(mobile_id, old, curval)
 		end
 		-- update values
-		mobile.stats.currentHitpoints =3D curval
-		mobile.stats.maxHitpoints =3D maxval
+		mobile.stats.curHits =3D curval
+		mobile.stats.maxHits =3D maxval
 =

 		UpdateMobile(mobile)
 	end

Modified: trunk/data/lua/net/net.object.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.object.lua (original)
+++ trunk/data/lua/net/net.object.lua Thu Aug  2 17:13:37 2007
@@ -1,10 +1,5 @@
 -- packet handlers for receiving creating and updating game-objects (dynam=
ics, statics, multis...)
 -- see also lib.packet.lua and lib.protocol.lua
-
--- quick hack to test if it works (its 4:42 am, i'm getting tired)
-gDynamics =3D {}
-
-gLastDoubleClickSerial =3D 0
 =

 function Send_DoubleClick (iSerial)
 	printdebug("net",sprintf("NET: Send_DoubleClick: 0x%08x\n",iSerial))
@@ -30,14 +25,6 @@
 	out:SendPacket()
 end
 =

-function DestroyDynamicItemBySerial (serial) =

-	local dynamic =3D gDynamics[serial]
-	if (dynamic) then
-		gCurrentRenderer:RemoveDynamicItem( dynamic )
-		gDynamics[dynamic.serial] =3D nil
-	end
-end
-
 -- Server sends Delete/Destroy command of char/item (usually during drag&d=
rop from container)
 -- TODO : multis (serverside multis)
 --		  destroy statics?, containers ?? (associated dialogs,widgets..)
@@ -47,32 +34,7 @@
 	local id =3D input:PopNetUint8()
 	local serial =3D input:PopNetUint32()
 	printdebug("net",sprintf("NET: Destroy item with serial: 0x%08x\n",serial=
))
+	=

 	DestroyObjectBySerial(serial)
 end
 =

-function DestroyObjectBySerial (serial) =

-	-- destroy items in containers
-	DestroyContainerItemBySerial(serial)
-	-- destroy items in mobiles
-	DestroyMobileItemBySerial(serial)
-	-- destroy dynamics
-	DestroyDynamicItemBySerial(serial)
-	-- destroy mobiles (npcs, monsters,...)
-	DestroyMobileBySerial(serial)
-	DestroyPaperdollByMobileSerial(serial)
-	-- TODO : destroy container
-	gCurrentRenderer:DestroyMousePickItemBySerial(serial)
-	DestroyDragDropItemBySerial(serial)
-end
-
--- needed for mapchange
-function DestroyAllObjects () =

-	CancelUODragDrop()
-	for serial,v in pairs(gContainer) do 			CloseContainer(serial) end
-	for serial,v in pairs(gMobileItemsBySerial) do 	DestroyMobileItemBySerial=
(serial) end
-	for serial,v in pairs(gMobiles) do 				DestroyMobileBySerial(serial) end
-	for serial,v in pairs(gDynamics) do 			DestroyDynamicItemBySerial(serial)=
 end
-	for serial,v in pairs(gPaperdolls) do 			DestroyPaperdollByMobileSerial(s=
erial) end
-	-- TODO : gCurrentRenderer:DestroyMousePickItemBySerial(serial)
-	-- TODO : DestroyDragDropItemBySerial ?? done by CancelUODragDrop
-end

Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Thu Aug  2 17:13:37 2007
@@ -1,2 +1,46 @@
 -- empty so far, will be filled on knut merge
 =

+
+-- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
+function ApplyArtidStackManipulation (item)
+	item.baseartid =3D item.artid
+	=

+	-- from varan
+	-- gold
+	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") end
+	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") end
+	-- gold
+	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") end
+	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") end
+	-- Silver
+	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") end
+	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") end
+	-- cannonball
+	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") end
+
+	--TODO : if not in this list, and amount > 0 : draw the graphic 2 times
+	--for example: if (item.baseartid =3D=3D hex2num("0xE73") and item.amount=
 > 0) then item.artid =3D hex2num("0xE74") item.drawcount=3D2 end
+
+	-- ART -> GUMP
+	-- white backgammon game piece
+	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue end
+	-- brown backgammon game piece
+	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue end
+	-- brown chess pieces
+	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	-- white chess pieces
+	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+
+	-- just for testing, remove me
+	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
+end

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Thu Aug  2 17:13:37 2007
@@ -1,3 +1,52 @@
 dofile(libpath .. "obj/obj.mobile.lua")
 dofile(libpath .. "obj/obj.dynamic.lua")
 dofile(libpath .. "obj/obj.player.lua")
+
+function GetMobile (mobileserial) return gMobiles[mobileserial] end
+function GetMobileEquipmentItem (mobile,layer) return mobile.equipment[lay=
er] end
+function GetMobileEquipmentList (mobile) return mobile.equipment end
+function GetContainerContentList (container) return container.items end
+function GetObjectBySerial (serial) return gMobileItemsBySerial[serial] or=
 gMobiles[serial] or gDynamics[serial] end
+
+function GetDynamicList () return gDynamics end
+function GetMobileList () return gMobiles end
+
+gDynamics =3D {}
+
+
+function DestroyDynamicItemBySerial (serial) =

+	local dynamic =3D gDynamics[serial]
+	if (dynamic) then
+		gCurrentRenderer:RemoveDynamicItem( dynamic )
+		gDynamics[dynamic.serial] =3D nil
+	end
+end
+
+function DestroyObjectBySerial (serial) =

+	-- destroy items in containers
+	DestroyContainerItemBySerial(serial)
+	-- destroy items in mobiles
+	DestroyMobileItemBySerial(serial)
+	-- destroy dynamics
+	DestroyDynamicItemBySerial(serial)
+	-- destroy mobiles (npcs, monsters,...)
+	DestroyMobileBySerial(serial)
+	DestroyPaperdollByMobileSerial(serial)
+	-- TODO : destroy container
+	gCurrentRenderer:DestroyMousePickItemBySerial(serial)
+	DestroyDragDropItemBySerial(serial)
+end
+
+-- needed for mapchange
+function DestroyAllObjects () =

+	CancelUODragDrop()
+	for serial,v in pairs(gContainer) do 			CloseContainer(serial) end
+	for serial,v in pairs(gMobileItemsBySerial) do 	DestroyMobileItemBySerial=
(serial) end
+	for serial,v in pairs(gMobiles) do 				DestroyMobileBySerial(serial) end
+	for serial,v in pairs(gDynamics) do 			DestroyDynamicItemBySerial(serial)=
 end
+	for serial,v in pairs(gPaperdolls) do 			DestroyPaperdollByMobileSerial(s=
erial) end
+	-- TODO : gCurrentRenderer:DestroyMousePickItemBySerial(serial)
+	-- TODO : DestroyDragDropItemBySerial ?? done by CancelUODragDrop
+end
+
+

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Thu Aug  2 17:13:37 2007
@@ -98,17 +98,17 @@
 	end
 	=

 	-- update life stats in gui elements
-	if (mobile.stats.currentHitpoints and mobile.stats.maxHitpoints) then
+	if (mobile.stats.curHits and mobile.stats.maxHits) then
 		if (mobile.serial =3D=3D gPlayerBodySerial) then
 			-- for player
-			gui.SetHitpoints(mobile.stats.currentHitpoints/mobile.stats.maxHitpoint=
s)
+			gui.SetHitpoints(mobile.stats.curHits/mobile.stats.maxHits)
 			if (mobile.stats.char_curMana) then gui.SetMana(mobile.stats.char_curMa=
na/mobile.stats.char_maxMana) end
 			if (mobile.stats.char_curSta) then gui.SetStamina(mobile.stats.char_cur=
Sta/mobile.stats.char_maxSta) end
 			-- update big_stats window
 			UpdateStatusAos()
 		else
 			-- for other mobiles
-			SetNpcStatusHitpoints(mobile, mobile.stats.currentHitpoints / mobile.st=
ats.maxHitpoints)
+			SetNpcStatusHitpoints(mobile, mobile.stats.curHits / mobile.stats.maxHi=
ts)
 		end
 	end
 	=


Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Thu Aug  2 17:13:37 2007
@@ -47,15 +47,14 @@
 	return playermobile and playermobile.stats and playermobile.stats.char_go=
ld or 0
 end
 =

+function GetPlayerMobile ()
+	return gPlayerBodySerial and GetMobile(gPlayerBodySerial)
+end
+
 -- used by secure trade, mobile.name is filled by kPacket_Mobile_Stats
 function GetPlayerName ()
 	local mobile =3D GetPlayerMobile()
 	return mobile and mobile.name
-end
-
-function GetPlayerMobile ()
-	if (not gPlayerBodySerial) then return end -- not yet received from server
-	return gMobiles[gPlayerBodySerial]
 end
 =

 function GetPlayerBackPackContainer ()



From no-reply at zwischenwelt.org  Thu Aug  2 18:31:46 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 16:31:46 -0000
Subject: [Iris-commit] [IRIS] r1331 - in /branches/knut/data/lua/net:
 net.effect.lua net.multi.lua net.packethandlers.lua
Message-ID: <20070802163146.ADFF7B140B5@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 18:31:44 2007
New Revision: 1331

Log:
syncing

Modified:
    branches/knut/data/lua/net/net.effect.lua
    branches/knut/data/lua/net/net.multi.lua
    branches/knut/data/lua/net/net.packethandlers.lua

Modified: branches/knut/data/lua/net/net.effect.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.effect.lua (original)
+++ branches/knut/data/lua/net/net.effect.lua Thu Aug  2 18:31:44 2007
@@ -6,14 +6,20 @@
 	effect.effect_type =3D input:PopNetUint8()
 	effect.sourceserial =3D input:PopNetUint32()
 	effect.targetserial =3D input:PopNetUint32()
-	effect.itemid =3D input:PopNetUint16()
-	effect.source_x =3D input:PopNetUint16()
-	effect.source_y =3D input:PopNetUint16()
-	effect.source_z =3D input:PopNetUint8()
-	effect.target_x =3D input:PopNetUint16()
-	effect.target_y =3D input:PopNetUint16()
-	effect.target_z =3D input:PopNetUint8()
-
+	effect.itemid =3D input:PopNetUint16()
+	=

+	effect.source_xloc =3D input:PopNetUint16()
+	effect.source_yloc =3D input:PopNetUint16()
+	effect.source_zloc =3D input:PopNetUint8()
+	=

+	effect.target_xloc =3D input:PopNetUint16()
+	effect.target_yloc =3D input:PopNetUint16()
+	effect.target_zloc =3D input:PopNetUint8()
+	=

+ 	effect.current_locx =3D effect.source_locx =

+ 	effect.current_locy =3D effect.source_locy =

+ 	effect.current_locz =3D effect.source_locz =

+	=

 	effect.speed =3D input:PopNetUint8()
 	effect.duration =3D input:PopNetUint8()
 	effect.unkown =3D input:PopNetUint16()

Modified: branches/knut/data/lua/net/net.multi.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.multi.lua (original)
+++ branches/knut/data/lua/net/net.multi.lua Thu Aug  2 18:31:44 2007
@@ -297,34 +297,3 @@
 		end
 	end
 end
-
-
-
--- Custom Multis - aka - Serverside Multis
---X/Y of this packet is probably wrong. May be 2 Byte portions instead of =
1. Information was submitted and as of yet untested.
--- OLD version from knut.. above is new version from trunk
---[[
-function gPacketHandler.kPacket_Custom_House()	--0xD8
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local iPacketSize =3D input:PopNetUint16()
-	local compresstype =3D input:PopNetUint8()	-- (0=3Dnothing, 3=3Dzlib)
-	local unknown1 =3D input:PopNetUint8()
-	local multiserial =3D input:PopNetUint32()
-	local revision =3D input:PopNetUint32()
-	local itemcount =3D input:PopNetUint16()
-	local bufferlen =3D input:PopNetUint16()			-- item list (Number of tiles =
* 5), compressed
-
-	printf("NET: Custom_House: iPacketSize=3D0x%04x compresstype=3D%i unknown=
1=3D0x%02x multiserial=3D0x%08x revision=3D0x%08x itemcount=3D%i buffer=3D%=
i\n",
-			iPacketSize, compresstype, unknown1, multiserial, revision, itemcount, =
buffer)
-	=

-	for i =3D 1, tilenum do
-		local newitem =3D {}
-		newitem.artid =3D input:PopNetUint16()
-		newitem.xloc =3D input:PopNetUint8()
-		newitem.yloc =3D input:PopNetUint8()
-		newitem.zloc =3D input:PopNetUint8()
-		printdebug("NET", "Custom_House: artid=3D0x%04x locx=3D%i locy=3D%i locz=
=3D%i\n", newitem.artid, newitem.xloc, newitem.yloc, newitem.zloc)
-	end
-end
-]]--

Modified: branches/knut/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.packethandlers.lua (original)
+++ branches/knut/data/lua/net/net.packethandlers.lua Thu Aug  2 18:31:44 2=
007
@@ -13,7 +13,8 @@
 		-- AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",container_seria=
l))
 	--Old_Spellbook Container (Pol,Sphere,Lonewolf,RunUO1 etc.)
 	elseif ((container.gumpid =3D=3D kGumpIDSpellbookContainer) and not(conta=
iner.dialog)) then
-		local spellbook =3D {}
+		local spellbook =3D {}
+		spellbook.old=3Dtrue
 		spellbook.serial =3D packet.serial
 		spellbook.itemid =3D packet.gumpid
 		spellbook.scrolloffset =3D 0



From no-reply at zwischenwelt.org  Thu Aug  2 18:32:04 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 16:32:04 -0000
Subject: [Iris-commit] [IRIS] r1332 - in /trunk/data/lua: main.lua
	net/net.multi.lua
Message-ID: <20070802163204.8C1C0B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 18:32:03 2007
New Revision: 1332

Log:
syncing

Modified:
    trunk/data/lua/main.lua
    trunk/data/lua/net/net.multi.lua

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Thu Aug  2 18:32:03 2007
@@ -80,7 +80,7 @@
 dofile(libpath .. "lib.3d.mobileanim.lua")
 dofile(libpath .. "lib.mount.lua")
 dofile(libpath .. "lib.debug.lua")
-dofile(libpath .. "lib.uodragdrop.lua")
+-- dofile(libpath .. "lib.uodragdrop.lua")  (new dragdrop system not yet u=
sed in trunk, see net.uodragdrop.lua for old)
 dofile(libpath .. "gui/gui.main.lua")
 dofile(libpath .. "obj/obj.main.lua")
 dofile(libpath .. "net/net.main.lua")

Modified: trunk/data/lua/net/net.multi.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.multi.lua (original)
+++ trunk/data/lua/net/net.multi.lua Thu Aug  2 18:32:03 2007
@@ -297,34 +297,3 @@
 		end
 	end
 end
-
-
-
--- Custom Multis - aka - Serverside Multis
---X/Y of this packet is probably wrong. May be 2 Byte portions instead of =
1. Information was submitted and as of yet untested.
--- OLD version from knut.. above is new version from trunk
---[[
-function gPacketHandler.kPacket_Custom_House()	--0xD8
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local iPacketSize =3D input:PopNetUint16()
-	local compresstype =3D input:PopNetUint8()	-- (0=3Dnothing, 3=3Dzlib)
-	local unknown1 =3D input:PopNetUint8()
-	local multiserial =3D input:PopNetUint32()
-	local revision =3D input:PopNetUint32()
-	local itemcount =3D input:PopNetUint16()
-	local bufferlen =3D input:PopNetUint16()			-- item list (Number of tiles =
* 5), compressed
-
-	printf("NET: Custom_House: iPacketSize=3D0x%04x compresstype=3D%i unknown=
1=3D0x%02x multiserial=3D0x%08x revision=3D0x%08x itemcount=3D%i buffer=3D%=
i\n",
-			iPacketSize, compresstype, unknown1, multiserial, revision, itemcount, =
buffer)
-	=

-	for i =3D 1, tilenum do
-		local newitem =3D {}
-		newitem.artid =3D input:PopNetUint16()
-		newitem.xloc =3D input:PopNetUint8()
-		newitem.yloc =3D input:PopNetUint8()
-		newitem.zloc =3D input:PopNetUint8()
-		printdebug("NET", "Custom_House: artid=3D0x%04x locx=3D%i locy=3D%i locz=
=3D%i\n", newitem.artid, newitem.xloc, newitem.yloc, newitem.zloc)
-	end
-end
-]]--



From no-reply at zwischenwelt.org  Thu Aug  2 19:47:03 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 17:47:03 -0000
Subject: [Iris-commit] [IRIS] r1333 - in /trunk/data/lua: gui/gui.status.lua
 net.login.lua net.walk.lua net/net.dynamic.lua net/net.effect.lua
 net/net.mobile.lua net/net.packethandlers.lua obj/obj.mobile.lua
 obj/obj.player.lua
Message-ID: <20070802174703.65E58B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 19:47:02 2007
New Revision: 1333

Log:
syncing

Modified:
    trunk/data/lua/gui/gui.status.lua
    trunk/data/lua/net.login.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.dynamic.lua
    trunk/data/lua/net/net.effect.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/net/net.packethandlers.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.status.lua (original)
+++ trunk/data/lua/gui/gui.status.lua Thu Aug  2 19:47:02 2007
@@ -38,22 +38,22 @@
 		end
 	=

 		--[[
-		stats.char_sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Fe=
male
-		stats.char_gold		=3D input:PopNetUint32()
-		stats.char_armorC	=3D input:PopNetUint16() -- resistPhysical (old client=
s: AC).
-		stats.char_curWeight=3D input:PopNetUint16()
-		stats.char_maxWeight =3D input:PopNetUint16()
-		stats.char_race		 =3D input:PopNetUint8()
-		stats.char_statcap	=3D input:PopNetUint16()		-- The character's total al=
lowable sum of Strength, Intelligence, and Dexterity
-		stats.char_curPet	=3D input:PopNetUint8()			=

-		stats.char_maxPet	=3D input:PopNetUint8()
-		stats.char_fireresist	=3D input:PopNetUint16()			=

-		stats.char_coldresist	=3D input:PopNetUint16()			=

-		stats.char_poisonresist	=3D input:PopNetUint16()			=

-		stats.char_energyresist	=3D input:PopNetUint16()			=

-		stats.char_minDamage	=3D input:PopNetUint16()			=

-		stats.char_maxDamage	=3D input:PopNetUint16()			=

-		stats.char_tithing		=3D input:PopNetUint32()		=

+		stats.sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Female
+		stats.gold		=3D input:PopNetUint32()
+		stats.armorC	=3D input:PopNetUint16() -- resistPhysical (old clients: AC=
).
+		stats.curWeight=3D input:PopNetUint16()
+		stats.maxWeight =3D input:PopNetUint16()
+		stats.race		 =3D input:PopNetUint8()
+		stats.statcap	=3D input:PopNetUint16()		-- The character's total allowab=
le sum of Strength, Intelligence, and Dexterity
+		stats.curPet	=3D input:PopNetUint8()			=

+		stats.maxPet	=3D input:PopNetUint8()
+		stats.fireresist	=3D input:PopNetUint16()			=

+		stats.coldresist	=3D input:PopNetUint16()			=

+		stats.poisonresist	=3D input:PopNetUint16()			=

+		stats.energyresist	=3D input:PopNetUint16()			=

+		stats.minDamage	=3D input:PopNetUint16()			=

+		stats.maxDamage	=3D input:PopNetUint16()			=

+		stats.tithing		=3D input:PopNetUint32()		=

 		]]--		=

 =

 				-- stats update function
@@ -63,14 +63,14 @@
 				if m and m.stats then
 					local s =3D m.stats
 					=

-					local l =3D {	char_str =3D "status_str", char_dex =3D "status_dex", c=
har_int =3D "status_int",
-								curHits =3D "status_hits", maxHits =3D "status_maxhits",
-								char_curMana =3D "status_mana", char_maxMana =3D "status_maxmana",
-								char_curSta =3D "status_stamina", char_maxSta =3D "status_maxstami=
na",
-								char_luck =3D "status_luck", char_gold =3D "status_gold",
-								char_armorC =3D "status_armor", char_statcap =3D "status_statcap",=
 char_fireresist =3D "status_fireres",
-								char_coldresist =3D "status_coldres", char_poisonresist =3D "statu=
s_poisres",
-								char_energyresist =3D "status_energres" }
+					local l =3D {	str =3D "status_str", dex =3D "status_dex", int =3D "st=
atus_int",
+								curHits =3D "status_hits", 		maxHits =3D "status_maxhits",
+								curMana =3D "status_mana", 		maxMana =3D "status_maxmana",
+								curSta =3D "status_stamina", 		maxSta =3D "status_maxstamina",
+								luck =3D "status_luck", 			gold =3D "status_gold",
+								armorC =3D "status_armor", 		statcap =3D "status_statcap", fireres=
ist =3D "status_fireres",
+								coldresist =3D "status_coldres", 	poisonresist =3D "status_poisres=
",
+								energyresist =3D "status_energres" }
 					=

 					-- set all textfields (single)
 					for k,v in pairs(l) do
@@ -86,25 +86,25 @@
 =

 					-- multi part textfields, like "10 / 20"
 					-- pets
-					if s["char_curPet"] and s["char_maxPet"] then =

-						dialog.controls["status_pets"].gfx:SetText(s["char_curPet"].."/"..s[=
"char_maxPet"]) =

+					if s["curPet"] and s["maxPet"] then =

+						dialog.controls["status_pets"].gfx:SetText(s["curPet"].."/"..s["maxP=
et"]) =

 					else dialog.controls["status_pets"].gfx:SetText("?") end =

 					-- damage
-					if s["char_minDamage"] and s["char_maxDamage"] then =

-						dialog.controls["status_minmaxdamage"].gfx:SetText(s["char_minDamage=
"].."-"..s["char_maxDamage"]) =

+					if s["minDamage"] and s["maxDamage"] then =

+						dialog.controls["status_minmaxdamage"].gfx:SetText(s["minDamage"].."=
-"..s["maxDamage"]) =

 					else dialog.controls["status_minmaxdamage"].gfx:SetText("?") end =

 					-- weight
-					if s["char_curWeight"] then =

-						if s["char_maxWeight"] then =

+					if s["curWeight"] then =

+						if s["maxWeight"] then =

 							-- max weight given
-							dialog.controls["status_weight"].gfx:SetText(s["char_curWeight"])
-							dialog.controls["status_maxweight"].gfx:SetText(s["char_maxWeight"])
+							dialog.controls["status_weight"].gfx:SetText(s["curWeight"])
+							dialog.controls["status_maxweight"].gfx:SetText(s["maxWeight"])
 						else =

 							-- no maxweight present
-							dialog.controls["status_weight"].gfx:SetText(s["char_curWeight"]) =

+							dialog.controls["status_weight"].gfx:SetText(s["curWeight"]) =

 							-- hardcoded fallback: 40 + floor(str*35/10)
 							dialog.controls["status_maxweight"].gfx:SetText(""..
-								(40 + math.floor(s["char_str"]*35/10)))
+								(40 + math.floor(s["str"]*35/10)))
 						end
 					else dialog.controls["status_weight"].gfx:SetText("?") end =

 				end

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Thu Aug  2 19:47:02 2007
@@ -174,27 +174,33 @@
 function gPacketHandler.kPacket_Login_Confirm()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local playerid =3D input:PopNetUint32()
-	local unknown1 =3D input:PopNetUint32()
-	local bodytype =3D input:PopNetUint16()
-	local x_location =3D input:PopNetUint16()
-	local y_location =3D input:PopNetUint16()
-	local unknown0 =3D input:PopNetUint8()
-	local z_location =3D input:PopInt8()
-	local direction =3D input:PopNetUint8()
-
-	local unknown2 =3D input:PopNetUint16()
-	local unknown3 =3D input:PopNetUint32()
-
-	local unknown4 =3D input:PopNetUint32()
-	local flag =3D input:PopNetUint8()
-	local highlight_color =3D input:PopNetUint8()
-
-	local unknown5 =3D input:PopNetUint32()
-	local unknown6 =3D input:PopNetUint16()
-	local unknown7 =3D input:PopNetUint8()
-
-	printdebug("login",sprintf("NET: Login_Confirm CharacterID: 0x%08x Bodyty=
pe: %i x: %i y: %i z: %i flag=3D0x%02x\n", playerid, bodytype, x_location, =
y_location, z_location, flag))
+
+	packet =3D {}
+	packet.serial	=3D input:PopNetUint32()
+	packet.unknown1 =3D input:PopNetUint32()
+	packet.body	=3D input:PopNetUint16()
+	packet.xloc	=3D input:PopNetUint16()
+	packet.yloc	=3D input:PopNetUint16()
+	packet.unknown0 =3D input:PopNetUint8()
+	packet.zloc	=3D input:PopInt8()
+	packet.dir	=3D input:PopNetUint8()
+
+	packet.unknown2 =3D input:PopNetUint16()
+	packet.unknown3 =3D input:PopNetUint32()
+
+	packet.unknown4 =3D input:PopNetUint32()
+	packet.flag	=3D input:PopNetUint8()
+	packet.notoriety =3D input:PopNetUint8()
+
+	packet.unknown5 =3D input:PopNetUint32()
+	packet.unknown6 =3D input:PopNetUint16()
+	packet.unknown7 =3D input:PopNetUint8()
+	=

+	packet.hue	=3D 0
+	local playerid =3D packet.serial
+
+	local bodytype =3D packet.body
+	printdebug("login",sprintf("NET: Login_Confirm CharacterID: 0x%08x Bodyty=
pe: %i x: %i y: %i z: %i flag=3D0x%02x\n", playerid, bodytype, packet.xloc,=
 packet.yloc, packet.zloc, packet.flag))
 =

 	-- TODO : HintStartPosition(x_location,y_location,z_location) ?
 	-- this is just a hint that might be used to position the cam
@@ -212,7 +218,7 @@
 =

 	UpdatePlayerBodySerial(playerid)
 	local playerMobile =3D GetPlayerMobile()
-	if (playerMobile) then playerMobile.artid =3D bodytype end
+	if (playerMobile) then playerMobile.artid =3D packet.body end
 end
 =

 -- if packet is received we can Start the Game now !

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Thu Aug  2 19:47:02 2007
@@ -90,11 +90,11 @@
 	=

 	-- destroy objects outside view range
 	-- dynamics
-	for k,dynamic in pairs(gDynamics) do if (IsObjectFarEnoughToDestroy(dynam=
ic.xloc,dynamic.yloc)) then
+	for k,dynamic in pairs(GetDynamicList()) do if (IsObjectFarEnoughToDestro=
y(dynamic.xloc,dynamic.yloc)) then
 		DestroyObjectBySerial(dynamic.serial) =

 	end end
 	-- mobiles
-	for k,mobile in pairs(gMobiles) do if (IsObjectFarEnoughToDestroy(mobile.=
xloc,mobile.yloc)) then
+	for k,mobile in pairs(GetMobileList()) do if (IsObjectFarEnoughToDestroy(=
mobile.xloc,mobile.yloc)) then
 		DestroyObjectBySerial(mobile.serial) =

 	end end
 end

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Thu Aug  2 19:47:02 2007
@@ -55,6 +55,8 @@
 1a 00 11 c0 02 9d aa 00 00 00 01 15 44 44 88 9c =

 80
 ]]--
+
+-- show item (0x1a)
 function gPacketHandler.kPacket_Show_Item()
 	local newitem =3D {}
 	local input =3D GetRecvFIFO()
@@ -150,12 +152,14 @@
 end
 =

 =

+-- AddItemToContainer (0x3C)
 -- pol sends this after kPacket_Open_Container, runuo before, see also kPa=
cket_Object_to_Object
 function gPacketHandler.kPacket_Container_Contents() -- 0x3c
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local size =3D input:PopNetUint16()
 	local itemcount =3D input:PopNetUint16()
+
 	for i=3D1,itemcount do
 		local item =3D {}
 		item.serial =3D input:PopNetUint32()
@@ -174,7 +178,6 @@
 		--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticT=
ileTypeName(item.artid)))
 	end
 end
-
 =

 -- This is sent by the server to add/update a single item to a container. =
(response to player dragdrop)
 function gPacketHandler.kPacket_Object_to_Object() -- 0x25

Modified: trunk/data/lua/net/net.effect.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.effect.lua (original)
+++ trunk/data/lua/net/net.effect.lua Thu Aug  2 19:47:02 2007
@@ -1,6 +1,5 @@
 =

 -- Graphical Effect (Hued Art-Gfx / see Tiledata for Animation) - Billboar=
d or 3d Statics?
--- TODO : organize HUED_FX
 function gPacketHandler.kPacket_Hued_FX()	--0xC0
 	local effect =3D {}
 	local input =3D GetRecvFIFO()

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Thu Aug  2 19:47:02 2007
@@ -35,6 +35,7 @@
 function gPacketHandler.kPacket_Equipped_MOB() -- ProtocolRecv_AddMobile
 	local mobile =3D {}
 	local input =3D GetRecvFIFO()
+
 	local fifolen_start =3D input:Size()
 	local id =3D input:PopNetUint8()
 	local iPacketSize =3D input:PopNetUint16()
@@ -125,6 +126,7 @@
 function gPacketHandler.kPacket_Teleport()
 	gLastResyncRequest =3D nil
 	--ResetWalkQueue()
+
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local player_id =3D input:PopNetUint32()
@@ -182,10 +184,11 @@
 	ResetWalkQueue() -- todo : (here or only if setplayerpos is done?)
 end
 =

--- Character Animation
+-- Character Animation (0x6e)
 function gPacketHandler.kPacket_Animation ()	-- [0x6e] 14 Bytes
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
+
 	local anim =3D {}
 	anim.mobileserial	=3D input:PopNetUint32()	=

 	anim.m_animation		=3D input:PopNetUint16()
@@ -195,6 +198,7 @@
 	anim.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repeat)
 	anim.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - Too =
slow to watch)
 	printdebug("animation","Animation "..vardump2(anim))
+	=

 	gCurrentRenderer:MobileStartServerSideAnim(anim)
 end
 =

@@ -228,42 +232,41 @@
 	stats.maxHits 			=3D input:PopNetUint16()
 	stats.flagChangeNameFlag	=3D input:PopNetUint8()		--(0x1 =3D allowed, 0 =
=3D not allowed)
 	stats.bCanChangeName =3D stats.flagChangeNameFlag ~=3D 0
-	local flag =3D input:PopNetUint8()
-	stats.flag =3D flag
+	stats.flag =3D input:PopNetUint8()
 	=

 	-- more data following
-	if ((flag =3D=3D 1) or (flag =3D=3D 3) or (flag =3D=3D 4) or (flag =3D=3D=
 5)) then -- stats
-		stats.char_sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Fe=
male
-		stats.char_str		=3D input:PopNetUint16()
-		stats.char_dex		=3D input:PopNetUint16()
-		stats.char_int		=3D input:PopNetUint16()
-		stats.char_curSta	=3D input:PopNetUint16()
-		stats.char_maxSta	=3D input:PopNetUint16()
-		stats.char_curMana	=3D input:PopNetUint16()
-		stats.char_maxMana	=3D input:PopNetUint16()
-		stats.char_gold		=3D input:PopNetUint32()
-		stats.char_armorC	=3D input:PopNetUint16() -- resistPhysical (old client=
s: AC).
-		stats.char_curWeight=3D input:PopNetUint16()
-
-		if (flag =3D=3D 5) then
-			stats.char_maxWeight =3D input:PopNetUint16()
-			stats.char_race		 =3D input:PopNetUint8()
-		end
-
-		if ((flag =3D=3D 3) or (flag =3D=3D 4) or (flag =3D=3D 5)) then -- Follo=
wers (pets)
-			stats.char_statcap	=3D input:PopNetUint16()		-- The character's total a=
llowable sum of Strength, Intelligence, and Dexterity
-			stats.char_curPet	=3D input:PopNetUint8()			=

-			stats.char_maxPet	=3D input:PopNetUint8()
+	if (in_array( stats.flag, {1,3,4,5})) then
+		stats.sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Female
+		stats.str		=3D input:PopNetUint16()
+		stats.dex		=3D input:PopNetUint16()
+		stats.int		=3D input:PopNetUint16()
+		stats.curSta	=3D input:PopNetUint16()
+		stats.maxSta	=3D input:PopNetUint16()
+		stats.curMana	=3D input:PopNetUint16()
+		stats.maxMana	=3D input:PopNetUint16()
+		stats.gold		=3D input:PopNetUint32()
+		stats.armorC	=3D input:PopNetUint16() -- resistPhysical (old clients: AC=
).
+		stats.curWeight=3D input:PopNetUint16()
+
+		if (stats.flag =3D=3D 5) then
+			stats.maxWeight =3D input:PopNetUint16()
+			stats.race		 =3D input:PopNetUint8()
+		end
+
+		if (in_array( stats.flag, {3,4,5} )) then -- Followers (pets)
+			stats.statcap	=3D input:PopNetUint16()		-- The character's total allowa=
ble sum of Strength, Intelligence, and Dexterity
+			stats.curPet	=3D input:PopNetUint8()			=

+			stats.maxPet	=3D input:PopNetUint8()
 			=

-			if ((flag =3D=3D 4) or (flag =3D=3D 5)) then -- Resistances
-				stats.char_fireresist	=3D input:PopNetUint16()			=

-				stats.char_coldresist	=3D input:PopNetUint16()			=

-				stats.char_poisonresist	=3D input:PopNetUint16()			=

-				stats.char_energyresist	=3D input:PopNetUint16()			=

-				stats.char_luck			=3D input:PopNetUint16()			=

-				stats.char_minDamage	=3D input:PopNetUint16()			=

-				stats.char_maxDamage	=3D input:PopNetUint16()			=

-				stats.char_tithing		=3D input:PopNetUint32()			=

+			if (in_array( stats.flag, {4,5} )) then -- Resistances
+				stats.fireresist	=3D input:PopNetUint16()			=

+				stats.coldresist	=3D input:PopNetUint16()			=

+				stats.poisonresist	=3D input:PopNetUint16()			=

+				stats.energyresist	=3D input:PopNetUint16()			=

+				stats.luck			=3D input:PopNetUint16()			=

+				stats.minDamage	=3D input:PopNetUint16()			=

+				stats.maxDamage	=3D input:PopNetUint16()			=

+				stats.tithing		=3D input:PopNetUint32()			=

 			end
 		end
 	end
@@ -301,7 +304,6 @@
 We probably have to wait till OSI activates it/finishes implementation., t=
o see what it does.
 =

 ]]--
-
 =

 --[[
 Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
@@ -325,7 +327,7 @@
 	local curval =3D input:PopNetUint16()
 	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobile_id,curval,maxval))
 	=

-	local mobile =3D gMobiles[mobile_id]
+	local mobile =3D GetMobile(mobile_id)
 	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
 	if (mobile and (maxval ~=3D 1000) and mobile.stats) then
 		if mobile.stats.curHits then
@@ -351,11 +353,11 @@
 	local curval =3D input:PopNetUint16()
 	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobile_id,curval,maxval))
 	=

-	local mobile =3D gMobiles[mobile_id]
-	if mobile and mobile.stats then
+	local mobile =3D GetMobile(mobile_id)
+	if (mobile and mobile.stats) then
 		-- update values
-		mobile.stats.char_curMana =3D curval
-		mobile.stats.char_maxMana =3D maxval
+		mobile.stats.curMana =3D curval
+		mobile.stats.maxMana =3D maxval
 =

 		if (mobile_id =3D=3D gPlayerBodySerial) then
 			gui.SetMana(curval/maxval)
@@ -365,7 +367,6 @@
 	end
 end
 =

-
 --# Update Current Stamina [0xA3]
 -- TODO : not only player gets update packets here
 function gPacketHandler.kPacket_Stamina()
@@ -376,11 +377,11 @@
 	local curval =3D input:PopNetUint16()
 	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curval,maxval))
 =

-	local mobile =3D gMobiles[mobile_id]
-	if mobile and mobile.stats then
+	local mobile =3D GetMobile(mobile_id)
+	if (mobile and mobile.stats) then
 		-- update values
-		mobile.stats.char_curSta =3D curval
-		mobile.stats.char_maxSta =3D maxval
+		mobile.stats.curSta =3D curval
+		mobile.stats.maxSta =3D maxval
 =

 		if (mobile_id =3D=3D gPlayerBodySerial) then
 			gui.SetStamina(curval/maxval)

Modified: trunk/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.packethandlers.lua (original)
+++ trunk/data/lua/net/net.packethandlers.lua Thu Aug  2 19:47:02 2007
@@ -3,13 +3,15 @@
 function gPacketHandler.kPacket_Open_Container() -- 0x24
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local container_serial =3D input:PopNetUint32()
-	local container_gumpid =3D input:PopNetUint16()
+
+	packet =3D {}
+	packet.serial =3D input:PopNetUint32()
+	packet.gumpid =3D input:PopNetUint16()
 	=

-	print("# kPacket_Open_Container",container_serial,container_gumpid)
+	print("# kPacket_Open_Container",packet.serial,packet.gumpid)
 	=

-	local container =3D GetOrCreateContainer(container_serial)
-	container.gumpid =3D container_gumpid
+	local container =3D GetOrCreateContainer(packet.serial)
+	container.gumpid =3D packet.gumpid
 =

 	--Ignore Shop container - created somewhere else
 	if (container.gumpid =3D=3D kGumpIDShopContainer) then
@@ -18,8 +20,8 @@
 	elseif ((container.gumpid =3D=3D kGumpIDSpellbookContainer) and not(conta=
iner.dialog)) then
 		local spellbook =3D {}
 		spellbook.old=3Dtrue
-		spellbook.serial =3D container_serial
-		spellbook.itemid =3D container_gumpid
+		spellbook.serial =3D packet.serial
+		spellbook.itemid =3D packet.gumpid
 		spellbook.scrolloffset =3D 0
 		spellbook.matrix =3D {}
 		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
@@ -45,6 +47,7 @@
 		end
 		RefreshContainerItemWidgets(container)
 	end
+
 	SecureTradeRebuildContainerHook(container)
 end
 =


Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Thu Aug  2 19:47:02 2007
@@ -102,8 +102,8 @@
 		if (mobile.serial =3D=3D gPlayerBodySerial) then
 			-- for player
 			gui.SetHitpoints(mobile.stats.curHits/mobile.stats.maxHits)
-			if (mobile.stats.char_curMana) then gui.SetMana(mobile.stats.char_curMa=
na/mobile.stats.char_maxMana) end
-			if (mobile.stats.char_curSta) then gui.SetStamina(mobile.stats.char_cur=
Sta/mobile.stats.char_maxSta) end
+			if (mobile.stats.curMana) then gui.SetMana(mobile.stats.curMana/mobile.=
stats.maxMana) end
+			if (mobile.stats.curSta) then gui.SetStamina(mobile.stats.curSta/mobile=
.stats.maxSta) end
 			-- update big_stats window
 			UpdateStatusAos()
 		else

Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Thu Aug  2 19:47:02 2007
@@ -44,7 +44,7 @@
 =

 function GetPlayerGold ()
 	local playermobile =3D GetPlayerMobile()
-	return playermobile and playermobile.stats and playermobile.stats.char_go=
ld or 0
+	return playermobile and playermobile.stats and playermobile.stats.gold or=
 0
 end
 =

 function GetPlayerMobile ()



From no-reply at zwischenwelt.org  Thu Aug  2 19:47:10 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 17:47:10 -0000
Subject: [Iris-commit] [IRIS] r1334 - in /branches/knut/data/lua:
 net.login.lua net.walk.lua net/net.dynamic.lua net/net.effect.lua
 net/net.mobile.lua net/net.object.lua net/net.packethandlers.lua
 obj/obj.mobile.lua
Message-ID: <20070802174711.6B440B140B4@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 19:47:10 2007
New Revision: 1334

Log:
syncing

Modified:
    branches/knut/data/lua/net.login.lua
    branches/knut/data/lua/net.walk.lua
    branches/knut/data/lua/net/net.dynamic.lua
    branches/knut/data/lua/net/net.effect.lua
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/net/net.object.lua
    branches/knut/data/lua/net/net.packethandlers.lua
    branches/knut/data/lua/obj/obj.mobile.lua

Modified: branches/knut/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.login.lua (original)
+++ branches/knut/data/lua/net.login.lua Thu Aug  2 19:47:10 2007
@@ -173,7 +173,7 @@
 -- Receive Login Confirm from GameServer
 function gPacketHandler.kPacket_Login_Confirm()
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	=

 	packet =3D {}
 	packet.serial	=3D input:PopNetUint32()
@@ -197,6 +197,7 @@
 	packet.unknown7 =3D input:PopNetUint8()
 	=

 	packet.hue	=3D 0
+	local playerid =3D packet.serial
 	=

 	local player =3D gObjectList[packet.serial]	=

 	if (not player) then
@@ -207,7 +208,7 @@
 	gPlayerBodySerial =3D player.serial
 =

 	--Request Skills and stats
-	Send_ClientQuery( gRequest_Skills, player.serial )
+	Send_ClientQuery( gRequest_Skills,playerid )
 =

 	--Send Client ident string
 	Send_ClientVersion(gClientVersion or "4.0.11c5 3D")

Modified: branches/knut/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.walk.lua (original)
+++ branches/knut/data/lua/net.walk.lua Thu Aug  2 19:47:10 2007
@@ -79,11 +79,16 @@
 		gCurrentRenderer:BlendOutLayersAbovePlayer()
 	=

 		-- destroy objects outside view range
-		for k,object in pairs(gObjectList) do =

-			if ((not object.container) and IsObjectFarEnoughToDestroy(object.xloc,o=
bject.yloc)) then
-				object:delete()
-			end
-		end
+		-- dynamics
+		for k,dynamic in pairs(GetDynamicList()) do if (IsObjectFarEnoughToDestr=
oy(dynamic.xloc,dynamic.yloc)) then
+			--DestroyObjectBySerial(dynamic.serial) =

+			dynamic:delete()
+		end end
+		-- mobiles
+		for k,mobile in pairs(GetMobileList()) do if (IsObjectFarEnoughToDestroy=
(mobile.xloc,mobile.yloc)) then
+			--DestroyObjectBySerial(mobile.serial) =

+			mobile:delete()
+		end end
 	end
 end
 =


Modified: branches/knut/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.dynamic.lua (original)
+++ branches/knut/data/lua/net/net.dynamic.lua Thu Aug  2 19:47:10 2007
@@ -1,7 +1,12 @@
--- 0x2E  equip Item  (single item update version of 0x78 : equipped mobile)
-function gPacketHandler.kPacket_Equip_Item()
+
+
+-- 0x2E  Equip Item  (single item update version of 0x78 : equipped mobile)
+-- This is sent by the server to equip a single item on a character.
+--Packet [2e], Length: 15, Type: Server
+--2e 40 02 21 9b 20 3b 00 0b 00 00 00 03 04 5e =

+function gPacketHandler.kPacket_Equip_Item() -- ProtocolRecv_AddMobile
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	=

 	local packet =3D {}
 	packet.serial  =3D input:PopNetUint32()
@@ -26,12 +31,26 @@
 	dynamic:setcontainer( container )
 end
 =

+
+-- Dynamics/Object Information (Variable # of bytes)
+-- (recieved when item first appears on char visualrange on the ground)
+--			// 14 base length
+--			// +2 - Amount
+--			// +2 - Hue
+--			// +1 - Flags
+-- TODO : here Tooltip request   0x1A  (old iris:PCK_Put)
+--[[
+Packet [1a], Length: 17, Type: Server
+1a 00 11 c0 02 9d aa 00 00 00 01 15 44 44 88 9c =

+80
+]]--
+
 -- show item (0x1a)
 function gPacketHandler.kPacket_Show_Item()
 	local packet =3D {}
 	local input =3D GetRecvFIFO()
 	local popped_start =3D input:GetTotalPopped()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	=

 	local iPacketSize =3D input:PopNetUint16()
 	packet.serial =3D input:PopNetUint32()
@@ -85,9 +104,10 @@
 end
 =

 -- AddItemToContainer (0x3C)
-function gPacketHandler.kPacket_Container_Contents()
+-- pol sends this after kPacket_Open_Container, runuo before, see also kPa=
cket_Object_to_Object
+function gPacketHandler.kPacket_Container_Contents() -- 0x3c
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	local size =3D input:PopNetUint16()
 	local itemcount =3D input:PopNetUint16()
 	=

@@ -116,10 +136,10 @@
 	end
 end
 =

--- This is sent by the server to add/update a single item to a container. =
(response to player dragdrop) (0x25)
-function gPacketHandler.kPacket_Object_to_Object()
+-- This is sent by the server to add/update a single item to a container. =
(response to player dragdrop)
+function gPacketHandler.kPacket_Object_to_Object() -- 0x25
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	local packet =3D {}
 	=

 	packet.serial =3D input:PopNetUint32()

Modified: branches/knut/data/lua/net/net.effect.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.effect.lua (original)
+++ branches/knut/data/lua/net/net.effect.lua Thu Aug  2 19:47:10 2007
@@ -1,37 +1,38 @@
--- Graphical Effect (Hued Art-Gfx / see Tiledata for Animation) (0xC0)
-function gPacketHandler.kPacket_Hued_FX()	=

-	local effect =3D {}
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	effect.effect_type =3D input:PopNetUint8()
-	effect.sourceserial =3D input:PopNetUint32()
-	effect.targetserial =3D input:PopNetUint32()
+
+-- Graphical Effect (Hued Art-Gfx / see Tiledata for Animation) - Billboar=
d or 3d Statics?
+function gPacketHandler.kPacket_Hued_FX()	--0xC0
+	local effect =3D {}
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	effect.effect_type =3D input:PopNetUint8()
+	effect.sourceserial =3D input:PopNetUint32()
+	effect.targetserial =3D input:PopNetUint32()
 	effect.itemid =3D input:PopNetUint16()
-	=

-	effect.source_xloc =3D input:PopNetUint16()
-	effect.source_yloc =3D input:PopNetUint16()
-	effect.source_zloc =3D input:PopNetUint8()
-	=

-	effect.target_xloc =3D input:PopNetUint16()
-	effect.target_yloc =3D input:PopNetUint16()
-	effect.target_zloc =3D input:PopNetUint8()
-	=

+	=

+	effect.source_locx =3D input:PopNetUint16()
+	effect.source_locy =3D input:PopNetUint16()
+	effect.source_locz =3D input:PopNetUint8()
+	=

+	effect.target_locx =3D input:PopNetUint16()
+	effect.target_locy =3D input:PopNetUint16()
+	effect.target_locz =3D input:PopNetUint8()
+	=

  	effect.current_locx =3D effect.source_locx =

  	effect.current_locy =3D effect.source_locy =

  	effect.current_locz =3D effect.source_locz =

-	=

-	effect.speed =3D input:PopNetUint8()
-	effect.duration =3D input:PopNetUint8()
-	effect.unkown =3D input:PopNetUint16()
-	effect.fixeddirection =3D input:PopNetUint8()
-	effect.explodes =3D input:PopNetUint8()
-	effect.hue =3D input:PopNetUint32()
-	effect.rendermode =3D input:PopNetUint32()
-	effect.iseffect =3D true
-	=

-	printdebug("NET", "Hued_FX: artid=3D0x%04x locx=3D%i locy=3D%i locz=3D%i =
targetx=3D%i targety=3D%i targetz=3D%i effect_type=3D%s\n",
-			effect.itemid, effect.source_locx, effect.source_locy, effect.source_lo=
cz,
-			effect.target_locx, effect.target_locy, effect.target_locz, gEffectType=
s[effect.effect_type] or "")
-	=

-	gCurrentRenderer:AddEffect( effect )
-end
+	=

+	effect.speed =3D input:PopNetUint8()
+	effect.duration =3D input:PopNetUint8()
+	effect.unkown =3D input:PopNetUint16()
+	effect.fixeddirection =3D input:PopNetUint8()
+	effect.explodes =3D input:PopNetUint8()
+	effect.hue =3D input:PopNetUint32()
+	effect.rendermode =3D input:PopNetUint32()
+	effect.iseffect =3D true
+	=

+	printdebug("NET", "Hued_FX: artid=3D0x%04x locx=3D%i locy=3D%i locz=3D%i =
targetx=3D%i targety=3D%i targetz=3D%i effect_type=3D%s\n",
+			effect.itemid, effect.source_locx, effect.source_locy, effect.source_lo=
cz,
+			effect.target_locx, effect.target_locy, effect.target_locz, gEffectType=
s[effect.effect_type] or "")
+	=

+	if (gParticleEffectSystem) then gCurrentRenderer:AddEffect( effect ) end
+end

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Thu Aug  2 19:47:10 2007
@@ -1,81 +1,82 @@
 -- simple mobile, no equipment, fixed size packet 0x77
 function gPacketHandler.kPacket_Naked_MOB ()
-	local packet =3D {}
-	local input =3D GetRecvFIFO()
-	=

-	local packetid =3D input:PopNetUint8()
-	packet.serial =3D input:PopNetUint32()
-	packet.body =3D input:PopNetUint16()
-	packet.xloc =3D input:PopNetUint16()
-	packet.yloc =3D input:PopNetUint16()
-	packet.zloc =3D input:PopInt8()
-	packet.dir =3D input:PopNetUint8()
-	packet.hue =3D input:PopNetUint16()
-	packet.flag =3D input:PopNetUint8()
-	packet.notoriety =3D input:PopNetUint8()
-	=

-	local mobile =3D gObjectList[packet.serial]	=

-	if (not mobile) then
-		mobile =3D CreateMobile( packet )
-	end
-	=

-	mobile:update( packet )
-end
-
--- equipped mobile packet (0x78)
-function gPacketHandler.kPacket_Equipped_MOB()
-	local packet =3D {}
+	local mobile =3D {}
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	mobile.serial =3D input:PopNetUint32()
+
+	mobile.artid =3D input:PopNetUint16()
+	mobile.xloc =3D input:PopNetUint16()
+	mobile.yloc =3D input:PopNetUint16()
+	mobile.zloc =3D input:PopInt8()
+	mobile.dir =3D input:PopNetUint8()
+	mobile.hue =3D input:PopNetUint16() -- hue/skin color
+	mobile.flag =3D input:PopNetUint8()
+	mobile.notoriety =3D input:PopNetUint8()
+	=

+	local mymobile =3D GetMobile(mobile.serial)
+	if (not mymobile) then
+		mymobile =3D CreateMobile( mobile )
+	end
+	=

+	mymobile:update( mobile )
+end
+
+-- Equipped_MOB packet (0x78)
+-- TODO : rest of the packet
+-- TODO : Tooltip request
+function gPacketHandler.kPacket_Equipped_MOB() -- ProtocolRecv_AddMobile
+	local mobile =3D {}
 	local input =3D GetRecvFIFO()
 	=

 	local fifolen_start =3D input:Size()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	local iPacketSize =3D input:PopNetUint16()
-	=

-	packet.serial =3D input:PopNetUint32()
-	packet.body =3D input:PopNetUint16()
+	mobile.serial =3D input:PopNetUint32()
+
+	=

+	mobile.artid =3D input:PopNetUint16()
 	-- maybe it is necessary to read amount here, if this packet is used for =
a corpse
 	=

-	packet.x =3D input:PopNetUint16()
-	packet.y =3D input:PopNetUint16()
-	packet.z =3D input:PopInt8()
-	packet.dir =3D input:PopNetUint8()
-	packet.hue =3D input:PopNetUint16()
-	packet.flag =3D input:PopNetUint8()
-	packet.notoriety =3D input:PopNetUint8()
-	=

-	local mobile =3D gObjectList[packet.serial] =

-	if (not mobile) then
-		mobile =3D CreateMobile( packet )
-	end
-	=

-	mobile:update( packet )
+	mobile.xloc =3D input:PopNetUint16()
+	mobile.yloc =3D input:PopNetUint16()
+	mobile.zloc =3D input:PopInt8()
+	mobile.dir =3D input:PopNetUint8()
+	mobile.hue =3D input:PopNetUint16()  -- dye/skin color
+	mobile.flag =3D input:PopNetUint8()
+	mobile.notoriety =3D input:PopNetUint8() -- TODO : (2's complement signed)
+	=

+	local mymobile =3D GetMobile(mobile.serial)
+	if (not mymobile) then
+		mymobile =3D CreateMobile( mobile )
+	end
+	=

+	mymobile:update( mobile )
 	=

 	local loopalive =3D true
 	while loopalive do =

-		local packet_dynamic =3D {}
+		local item =3D {}
 		if ( iPacketSize >=3D (fifolen_start - input:Size()+4) ) then
-			packet_dynamic.serial =3D input:PopNetUint32()
-			if ( packet_dynamic.serial =3D=3D 0 ) then
+			item.serial =3D input:PopNetUint32()
+			if ( item.serial =3D=3D 0 ) then
 				loopalive =3D false
 			else
 				if ( iPacketSize >=3D (fifolen_start - input:Size()+3) ) then
-					packet_dynamic.artid =3D input:PopNetUint16()
-					packet_dynamic.layer =3D input:PopNetUint8()
+					item.artid =3D input:PopNetUint16()
+					item.layer =3D input:PopNetUint8()
+					if ((BitwiseAND(item.artid,hex2num("0x8000")) ~=3D 0) and ( iPacketSi=
ze >=3D (fifolen_start - input:Size()+2) )) then
+						item.hue =3D input:PopNetUint16()
+					else	item.hue =3D 0 -- TODO : default value ?
+					end
+					item.artid =3D BitwiseAND(item.artid,hex2num("0x7fff"))
 					=

-					if ((BitwiseAND(packet_dynamic.artid,hex2num("0x8000")) ~=3D 0) and (=
 iPacketSize >=3D (fifolen_start - input:Size()+2) )) then
-						packet_dynamic.hue =3D input:PopNetUint16()
-					else
-						packet_dynamic.hue =3D 0
-					end
-					packet_dynamic.artid =3D BitwiseAND(packet_dynamic.artid,hex2num("0x7=
fff"))
-					=

-					dynamic =3D gObjectList[ packet_dynamic.serial ]
+					dynamic =3D gObjectList[ item.serial ]
 					if (not dynamic) then
-						dynamic =3D CreateDynamic( packet_dynamic )
+						dynamic =3D CreateDynamic( item )
 					end
 					=

-					dynamic:update( packet_dynamic )
-					dynamic:setcontainer( mobile )
+					dynamic:update( item )
+					dynamic:setcontainer( mymobile )
 				else
 					loopalive =3D false
 				end
@@ -86,9 +87,12 @@
 	end
 end
 =

--- Teleport packet (also known as ProtocolRecv_Draw_Player) (0x20)
+-- 0x20 Teleport packet (also known as ProtocolRecv_Draw_Player)
+-- Note: Only used with the character being played by the client. =

+-- TODO : center cam on player etc. , check z_location on the ground
 function gPacketHandler.kPacket_Teleport()
 	gLastResyncRequest =3D nil
+	--ResetWalkQueue()
 	=

 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
@@ -119,29 +123,33 @@
 end
 =

 -- Character Animation (0x6e)
-function gPacketHandler.kPacket_Animation ()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	=

-	local packet =3D {}
-	packet.mobileserial	=3D input:PopNetUint32()	=

-	packet.m_animation	=3D input:PopNetUint16()
-	packet.m_framecount	=3D input:PopNetUint16()
-	packet.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D tw=
ice / 0 =3D repeat forever)
-	packet.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3Dba=
ckwards)
-	packet.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repea=
t)
-	packet.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - To=
o slow to watch)
-	=

-	local mobile =3D gObjectList[packet.serial] =

-	if (mobile) then
-		mobile:DoAnimation( packet )
-	end
-end
-
--- mobile status (0x11)
-function gPacketHandler.kPacket_Mobile_Stats()
-	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
+function gPacketHandler.kPacket_Animation ()	-- [0x6e] 14 Bytes
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	=

+	local anim =3D {}
+	anim.mobileserial	=3D input:PopNetUint32()	=

+	anim.m_animation	=3D input:PopNetUint16()
+	anim.m_framecount	=3D input:PopNetUint16()
+	anim.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D twic=
e / 0 =3D repeat forever)
+	anim.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3Dback=
wards)
+	anim.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repeat)
+	anim.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - Too =
slow to watch)
+	printdebug("animation","Animation "..vardump2(anim))
+	=

+	local mobile =3D GetMobile(anim.mobileserial)
+	if (mobile) then
+		mobile:DoAnimation( anim )
+	end
+end
+
+-- Note: For characters other than the player, curHits and maxHits are not=
 the actual values.
+-- maxHits is a fixed value, and curHits works like a percentage.
+-- triggered by Send_ClientQuery(gRequest_States,playermobile.serial)
+-- TODO : Set also HP,Stamina,Mana here
+function gPacketHandler.kPacket_Mobile_Stats() -- 0x11
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
 	local iPacketSize =3D input:PopNetUint16()
 	=

 	local stats =3D {}
@@ -153,7 +161,7 @@
 	stats.flag 				=3D input:PopNetUint8()
 	=

 	-- more data following
-	if in_array( stats.flag, {1,3,4,5} ) then
+	if (in_array( stats.flag, {1,3,4,5})) then
 		stats.sex			=3D input:PopNetUint8() -- * 0x00 - Male * 0x01 - Female
 		stats.str			=3D input:PopNetUint16()
 		stats.dex			=3D input:PopNetUint16()
@@ -163,7 +171,7 @@
 		stats.curMana		=3D input:PopNetUint16()
 		stats.maxMana		=3D input:PopNetUint16()
 		stats.gold			=3D input:PopNetUint32()
-		stats.armor			=3D input:PopNetUint16()
+		stats.armor			=3D input:PopNetUint16() -- resistPhysical (old clients: A=
C).
 		stats.curWeight		=3D input:PopNetUint16()
 =

 		if (stats.flag =3D=3D 5) then
@@ -171,12 +179,12 @@
 			stats.race		=3D input:PopNetUint8()
 		end
 =

-		if in_array( stats.flag, {3,4,5} ) then
-			stats.statcap	=3D input:PopNetUint16()
+		if (in_array( stats.flag, {3,4,5} )) then -- Followers (pets)
+			stats.statcap	=3D input:PopNetUint16()		-- The character's total allowa=
ble sum of Strength, Intelligence, and Dexterity
 			stats.curPet	=3D input:PopNetUint8()			=

 			stats.maxPet	=3D input:PopNetUint8()
 			=

-			if in_array( stats.flag, {4,5} ) then
+			if (in_array( stats.flag, {4,5} )) then -- Resistances
 				stats.fireresist	=3D input:PopNetUint16()			=

 				stats.coldresist	=3D input:PopNetUint16()			=

 				stats.poisonresist	=3D input:PopNetUint16()			=

@@ -195,43 +203,82 @@
 	end
 end
 =

--- Update Current Health [0xA1]
+--[[
+Mobile Stats    0x11  	=

+Show Mobile .. 0xD3
+Rename MOB  0x75  	=

+MOB Name	0x98  	=

+kPacket_Naked_MOB    	0x77  	=

+kPacket_Update_Mobile	0xD2  (extended 0x20)  similar to the Naked MOB pack=
et.   pos..
+
+0xD2 : kPacket_Update_Mobile : "Extended 0x20"  25 Byte length
+    * BYTE cmd
+    * Preamble: Exactly like 0x20
+    * BYTE[2] unknown 1
+    * BYTE[2] unknown 2
+    * BYTE[2] unknown 3
+
+Note: currently unknown's don't seem to do anything.
+That packet has never been sighted on OSI servers as well.
+We probably have to wait till OSI activates it/finishes implementation., t=
o see what it does.
+
+]]--
+
+--[[
+Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
+0x00 - None
+0x02 - Female
+0x04 - Poisoned
+0x08 - YellowHits // healthbar gets yellow
+0x10 - FactionShip // unsure why client needs to know
+0x20 - Movable if normally not
+0x40 - War mode
+0x80 - Hidden =

+]]--
+
+--# Update Current Health [0xA1]
+-- TODO : not only player gets update packets here - also the defender of =
a combat
 function gPacketHandler.kPacket_HP_Health()
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
+	local id =3D input:PopNetUint8()
+	local mobile_id =3D input:PopNetUint32()
 	local maxval =3D input:PopNetUint16()
 	local curval =3D input:PopNetUint16()
-	=

-	local mobile =3D gObjectList[serial] =

+	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobile_id,curval,maxval))
+	=

+	local mobile =3D GetMobile(mobile_id)
 	if (mobile) then
 		mobile:UpdateHits( curval, maxval )
 	end
 end
 =

--- Update Current Mana [0xA2]
+--# Update Current Mana [0xA2]
+-- TODO : not only player gets update packets here
 function gPacketHandler.kPacket_Mana_Health()
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
+	local id =3D input:PopNetUint8()
+	local mobile_id =3D input:PopNetUint32()
 	local maxval =3D input:PopNetUint16()
 	local curval =3D input:PopNetUint16()
-
-	local mobile =3D gObjectList[serial] =

+	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobile_id,curval,maxval))
+
+	local mobile =3D GetMobile(mobile_id)
 	if (mobile) then
 		mobile:UpdateMana( curval, maxval )
 	end	=

 end
 =

--- Update Current Stamina [0xA3]
+--# Update Current Stamina [0xA3]
+-- TODO : not only player gets update packets here
 function gPacketHandler.kPacket_Stamina()
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
+	local id =3D input:PopNetUint8()
+	local mobile_id =3D input:PopNetUint32()
 	local maxval =3D input:PopNetUint16()
 	local curval =3D input:PopNetUint16()
-
-	local mobile =3D gObjectList[serial] =

+	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curval,maxval))
+
+	local mobile =3D GetMobile(mobile_id)
 	if (mobile) then
 		mobile:UpdateStamina( curval, maxval )
 	end

Modified: branches/knut/data/lua/net/net.object.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.object.lua (original)
+++ branches/knut/data/lua/net/net.object.lua Thu Aug  2 19:47:10 2007
@@ -35,9 +35,6 @@
 	local serial =3D input:PopNetUint32()
 	printdebug("net",sprintf("NET: Destroy item with serial: 0x%08x\n",serial=
))
 	=

-	object =3D gObjectList[ serial ]
-	if (object) then
-		object:delete()
-	end
+	DestroyObjectBySerial(serial)
 end
 =


Modified: branches/knut/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.packethandlers.lua (original)
+++ branches/knut/data/lua/net/net.packethandlers.lua Thu Aug  2 19:47:10 2=
007
@@ -1,81 +1,84 @@
-kGumpIDShopContainer		=3D hex2num("0x0030")
-kGumpIDSpellbookContainer	=3D hex2num("0xFFFF")
-function gPacketHandler.kPacket_Open_Container() -- 0x24
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	=

-	packet =3D {}
-	packet.serial =3D input:PopNetUint32()
-	packet.gumpid =3D input:PopNetUint16()
-
-	--Ignore Shop container - created somewhere else
-	if (container.gumpid =3D=3D kGumpIDShopContainer) then
-		-- AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",container_seria=
l))
-	--Old_Spellbook Container (Pol,Sphere,Lonewolf,RunUO1 etc.)
-	elseif ((container.gumpid =3D=3D kGumpIDSpellbookContainer) and not(conta=
iner.dialog)) then
+kGumpIDShopContainer		=3D hex2num("0x0030")
+kGumpIDSpellbookContainer	=3D hex2num("0xFFFF")
+
+-- create and/or show graphical representation of container
+function gPacketHandler.kPacket_Open_Container() -- 0x24
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	=

+	packet =3D {}
+	packet.serial =3D input:PopNetUint32()
+	packet.gumpid =3D input:PopNetUint16()
+
+	--Ignore Shop container - created somewhere else
+	if (container.gumpid =3D=3D kGumpIDShopContainer) then
+		AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",container_serial))
+	--Old_Spellbook Container (Pol,Sphere,Lonewolf,RunUO1 etc.)
+	elseif ((container.gumpid =3D=3D kGumpIDSpellbookContainer) and not(conta=
iner.dialog)) then
 		local spellbook =3D {}
-		spellbook.old=3Dtrue
-		spellbook.serial =3D packet.serial
-		spellbook.itemid =3D packet.gumpid
-		spellbook.scrolloffset =3D 0
-		spellbook.matrix =3D {}
-		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
-		-- container with spell is already created (invisible)
-		Open_Spellbook(spellbook)
-		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)
-	else
-		local containers =3D gGumpmanager.GetGumpsByName( "container" )
-		local cont =3D nil
-		for s, gump in pairs( containers ) do
-			if (gump.serial =3D=3D packet.serial) then
-				cont =3D gump
-				break
-			end
-		end
-		=

-		if (cont) then
-			cont:setBackground( packet.gumpid )
-		else
-			CreateContainerGump( packet )
-		end
-	end
-	=

-	-- SecureTradeRebuildContainerHook(container)
-end
-
-function gPacketHandler.kPacket_Open_Paperdoll() -- 0x88
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local packet =3D {}
-	packet.serial =3D input:PopNetUint32()
-	packet.name =3D input:PopFilledString(60)
-	packet.flag =3D input:PopNetUint8()
-	=

-	local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
-	local paperdoll =3D nil
-	for s, gump in pairs( paperdolls ) do
-		if (gump.serial =3D=3D packet.serial) then
-			paperdoll =3D gump
-			break
-		end
-	end
-		=

-	if (paperdoll) then
-		paperdoll:update( packet)
-	else
-		CreatePaperdoll( packet )
-	end
-end
-
-function gPacketHandler.kPacket_SetPlayerWarmode()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local flag =3D input:PopNetUint8()
-	local unknown1 =3D input:PopNetUint8()
-	local unknown2 =3D input:PopNetUint16()
-	=

-	local player =3D GetPlayerMobile()
-	if (player) then
-		player:setwarmode( flag =3D=3D 1 )
-	end
-end
+		spellbook.old=3Dtrue
+		spellbook.serial =3D packet.serial
+		spellbook.itemid =3D packet.gumpid
+		spellbook.scrolloffset =3D 0
+		spellbook.matrix =3D {}
+		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
+		-- container with spell is already created (invisible)
+		Open_Spellbook(spellbook)
+		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)
+	else
+		local containers =3D gGumpmanager.GetGumpsByName( "container" )
+		local cont =3D nil
+		for s, gump in pairs( containers ) do
+			if (gump.serial =3D=3D packet.serial) then
+				cont =3D gump
+				break
+			end
+		end
+		=

+		if (cont) then
+			cont:setBackground( packet.gumpid )
+		else
+			CreateContainerGump( packet )
+		end
+	end
+	=

+	SecureTradeRebuildContainerHook(container)
+end
+
+function gPacketHandler.kPacket_Open_Paperdoll() -- 0x88
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local packet =3D {}
+	packet.serial =3D input:PopNetUint32()
+	packet.name =3D input:PopFilledString(60)
+	packet.flag =3D input:PopNetUint8()
+	=

+	local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
+	local paperdoll =3D nil
+	for s, gump in pairs( paperdolls ) do
+		if (gump.serial =3D=3D packet.serial) then
+			paperdoll =3D gump
+			break
+		end
+	end
+		=

+	if (paperdoll) then
+		paperdoll:update( packet)
+	else
+		CreatePaperdoll( packet )
+	end
+end
+
+-- Request WarMode Change/Send War Mode Status
+function gPacketHandler.kPacket_SetPlayerWarmode()
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local flag =3D input:PopNetUint8()
+	local unknown1 =3D input:PopNetUint8()
+	local unknown2 =3D input:PopNetUint16()
+	=

+	local player =3D GetPlayerMobile()
+	if (player) then
+		player:setwarmode( flag =3D=3D 1 )
+	end
+end

Modified: branches/knut/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.mobile.lua (original)
+++ branches/knut/data/lua/obj/obj.mobile.lua Thu Aug  2 19:47:10 2007
@@ -105,43 +105,13 @@
 end
 =

 function UpdateMobileFlags( mobile )
-	if BitwiseAND( mobile.flag, hex2num("0x02") ) then
-		mobile.female =3D true
-	else
-		mobile.female =3D false
-	end
-	=

-	if BitwiseAND( mobile.flag, hex2num("0x04") ) then
-		mobile.poisoned =3D true
-	else
-		mobile.poisoned =3D false
-	end
-
-	if BitwiseAND( mobile.flag, hex2num("0x08") ) then
-		mobile.yellowhits =3D true
-	else
-		mobile.yellowhits =3D false
-	end
-	=

-	if BitwiseAND( mobile.flag, hex2num("0x10") ) then
-		mobile.factionship =3D true
-	else
-		mobile.factionship =3D false
-	end
-	=

-	if BitwiseAND( mobile.flag, hex2num("0x20") ) then
-		mobile.explicitmovable =3D true
-	else
-		mobile.explicitmovable =3D false
-	end
-	=

-	mobile:setwarmode( BitwiseAND( mobile.flag, hex2num("0x40") ) )
-	=

-	if BitwiseAND( mobile.flag, hex2num("0x80") ) then
-		mobile.hidden =3D true
-	else
-		mobile.hidden =3D false
-	end
+	mobile.female			=3D BitwiseAND( mobile.flag, hex2num("0x02") ) ~=3D 0
+	mobile.poisoned			=3D BitwiseAND( mobile.flag, hex2num("0x04") ) ~=3D 0
+	mobile.yellowhits		=3D BitwiseAND( mobile.flag, hex2num("0x08") ) ~=3D 0
+	mobile.factionship		=3D BitwiseAND( mobile.flag, hex2num("0x10") ) ~=3D 0
+	mobile.explicitmovable	=3D BitwiseAND( mobile.flag, hex2num("0x20") ) ~=
=3D 0
+	mobile:setwarmode( 		  BitwiseAND( mobile.flag, hex2num("0x40") ) ~=3D 0 )
+	mobile.hidden			=3D BitwiseAND( mobile.flag, hex2num("0x80") ) ~=3D 0
 end
 =

 function MobileSetWarmode( mobile, warmode )



From no-reply at zwischenwelt.org  Thu Aug  2 20:37:33 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 18:37:33 -0000
Subject: [Iris-commit] [IRIS] r1335 - /trunk/data/lua/net/net.dynamic.lua
Message-ID: <20070802183734.52CEB1058006@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 20:37:30 2007
New Revision: 1335

Log:
syncing

Modified:
    trunk/data/lua/net/net.dynamic.lua

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Thu Aug  2 20:37:30 2007
@@ -7,11 +7,13 @@
 function gPacketHandler.kPacket_Equip_Item() -- ProtocolRecv_AddMobile
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
+
 	local item =3D {}
 	item.serial  =3D input:PopNetUint32() -- (always starts 0x40 in my data)
 	item.artid =3D input:PopNetUint16() -- also known as model
 	item.unknown1 =3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then prin=
t("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
 	item.layer =3D input:PopNetUint8()
+
 	item.mobile_serial  =3D input:PopNetUint32() -- "container" for item
 	item.hue =3D input:PopNetUint16()
 	=

@@ -69,8 +71,10 @@
 	=

 	-- newitem.amount  (or model # for corpses)
 	if ( BitwiseAND(newitem.serial,hex2num("0x80000000")) ~=3D 0) then =

-			newitem.amount =3D input:PopNetUint16() =

-	else 	newitem.amount =3D 1 end
+		newitem.amount =3D input:PopNetUint16() =

+	else 	=

+		newitem.amount =3D 1
+	end
 	=

 	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
 	=

@@ -83,18 +87,24 @@
 	newitem.yloc =3D input:PopNetUint16()
 =

 	if ( BitwiseAND(newitem.xloc,hex2num("0x8000")) ~=3D 0) then
-			newitem.dir =3D input:PopNetUint8()
-	else	newitem.dir =3D 0 end
+		newitem.dir =3D input:PopNetUint8()
+	else	=

+		newitem.dir =3D 0
+	end
 =

 	newitem.zloc =3D input:PopInt8()
 =

 	newitem.hue =3D 0
 	newitem.flag =3D 0
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then newitem.hue =
=3D input:PopNetUint16() end
+		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then
+			newitem.hue =3D input:PopNetUint16()
+		end
 	end
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then newitem.flag=
 =3D input:PopNetUint8() end
+		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then
+			newitem.flag =3D input:PopNetUint8()
+		end
 	end
 	-- item_flag : some kind of status or flags, usage unknown
 	=




From no-reply at zwischenwelt.org  Thu Aug  2 20:37:33 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 02 Aug 2007 18:37:33 -0000
Subject: [Iris-commit] [IRIS] r1336 - in /branches/knut/data/lua:
 net.login.lua net.walk.lua net/net.dynamic.lua net/net.packethandlers.lua
Message-ID: <20070802183738.6B414105800C@localhost.localdomain>

Author: ghoulsblade
Date: Thu Aug  2 20:37:32 2007
New Revision: 1336

Log:
syncing

Modified:
    branches/knut/data/lua/net.login.lua
    branches/knut/data/lua/net.walk.lua
    branches/knut/data/lua/net/net.dynamic.lua
    branches/knut/data/lua/net/net.packethandlers.lua

Modified: branches/knut/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.login.lua (original)
+++ branches/knut/data/lua/net.login.lua Thu Aug  2 20:37:32 2007
@@ -179,10 +179,10 @@
 	packet.serial	=3D input:PopNetUint32()
 	packet.unknown1 =3D input:PopNetUint32()
 	packet.body	=3D input:PopNetUint16()
-	packet.x	=3D input:PopNetUint16()
-	packet.y	=3D input:PopNetUint16()
+	packet.xloc	=3D input:PopNetUint16()
+	packet.yloc	=3D input:PopNetUint16()
 	packet.unknown0 =3D input:PopNetUint8()
-	packet.z	=3D input:PopInt8()
+	packet.zloc	=3D input:PopInt8()
 	packet.dir	=3D input:PopNetUint8()
 =

 	packet.unknown2 =3D input:PopNetUint16()

Modified: branches/knut/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.walk.lua (original)
+++ branches/knut/data/lua/net.walk.lua Thu Aug  2 20:37:32 2007
@@ -489,7 +489,11 @@
 				player:setposition( request.onSuccess_XLoc, request.onSuccess_YLoc, re=
quest.onSuccess_ZLoc, BitwiseOR(request.onSuccess_Dir,request.onSuccess_Run=
 and kWalkFlag_Run or 0) )
 			end
 =

-			SetPlayerPos( request.onSuccess_XLoc, request.onSuccess_YLoc, request.o=
nSuccess_ZLoc, BitwiseOR(request.onSuccess_Dir,request.onSuccess_Run and kW=
alkFlag_Run or 0) )
+			SetPlayerPos(	request.onSuccess_XLoc,
+							request.onSuccess_YLoc,
+							request.onSuccess_ZLoc,
+							BitwiseOR(request.onSuccess_Dir,request.onSuccess_Run and kWalkFlag=
_Run or 0)
+							)
 		end
 	else	=

 		printdebug("walking","walk request canceled from client side (not passab=
le)!")

Modified: branches/knut/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.dynamic.lua (original)
+++ branches/knut/data/lua/net/net.dynamic.lua Thu Aug  2 20:37:32 2007
@@ -8,26 +8,26 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	=

-	local packet =3D {}
-	packet.serial  =3D input:PopNetUint32()
-	packet.artid =3D input:PopNetUint16()
-	packet.unknown1 =3D input:PopNetUint8()
-	packet.layer =3D input:PopNetUint8()
+	local item =3D {}
+	item.serial  =3D input:PopNetUint32() -- (always starts 0x40 in my data)
+	item.artid =3D input:PopNetUint16() -- also known as model
+	item.unknown1 =3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then prin=
t("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
+	item.layer =3D input:PopNetUint8()
 	=

-	local container_serial  =3D input:PopNetUint32()
-	packet.hue =3D input:PopNetUint16()
+	local container_serial  =3D input:PopNetUint32() -- "container" for item
+	item.hue =3D input:PopNetUint16()
 	=

 	container =3D gObjectList[ container_serial ]
 	if (not container) then
 		return
 	end
 	=

-	dynamic =3D gObjectList[ packet.serial ]
+	dynamic =3D gObjectList[ item.serial ]
 	if (not dynamic) then
-		dynamic =3D CreateDynamic( packet )
+		dynamic =3D CreateDynamic( item )
 	end
 	=

-	dynamic:update( packet )	=

+	dynamic:update( item )	=

 	dynamic:setcontainer( container )
 end
 =

@@ -47,56 +47,62 @@
 =

 -- show item (0x1a)
 function gPacketHandler.kPacket_Show_Item()
-	local packet =3D {}
+	local newitem =3D {}
 	local input =3D GetRecvFIFO()
 	local popped_start =3D input:GetTotalPopped()
 	local id =3D input:PopNetUint8()
 	=

 	local iPacketSize =3D input:PopNetUint16()
-	packet.serial =3D input:PopNetUint32()
-	packet.artid =3D input:PopNetUint16()
+	newitem.serial =3D input:PopNetUint32() -- id =3D serial . Include the fl=
ag 0x80000000 if the item's amount is greater than one.
+	newitem.artid =3D input:PopNetUint16() -- model =3D artwork . Include the=
 flag 0x8000 if the item's stackid is greater than zero.	=

 	=

-	if ( BitwiseAND(packet.serial,hex2num("0x80000000")) ~=3D 0) then =

-			packet.amount =3D input:PopNetUint16() =

+	-- newitem.amount  (or model # for corpses)
+	if ( BitwiseAND(newitem.serial,hex2num("0x80000000")) ~=3D 0) then =

+			newitem.amount =3D input:PopNetUint16() =

 	else
-		packet.amount =3D 1
+		newitem.amount =3D 1
 	end
 	=

-	if ( BitwiseAND(packet.artid,hex2num("0x8000")) ~=3D 0) then =

-			packet.artid =3D packet.artid + input:PopNetUint8() =

+	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
+	=

+	-- newitem.artid_addstack : The number to add to the item's artwork when =
Amount > 1.
+	if ( BitwiseAND(newitem.artid,hex2num("0x8000")) ~=3D 0) then =

+			newitem.artid =3D newitem.artid + input:PopNetUint8() =

 	end
 =

-	packet.x =3D input:PopNetUint16()
-	packet.y =3D input:PopNetUint16()
+	newitem.xloc =3D input:PopNetUint16() --only use lowest significant 15 bi=
ts)
+	newitem.yloc =3D input:PopNetUint16()
 =

-	if ( BitwiseAND(packet.x,hex2num("0x8000")) ~=3D 0) then
-			packet.dir =3D input:PopNetUint8()
+	if ( BitwiseAND(newitem.xloc,hex2num("0x8000")) ~=3D 0) then
+		newitem.dir =3D input:PopNetUint8()
 	else
-		packet.dir =3D 0
+		newitem.dir =3D 0
 	end
-	packet.z =3D input:PopInt8()
 =

-	packet.hue =3D 0
-	packet.flag =3D 0
+	newitem.zloc =3D input:PopInt8()
+
+	newitem.hue =3D 0
+	newitem.flag =3D 0
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
-		if (BitwiseAND(packet.y,hex2num("0x8000")) ~=3D 0) then
-			packet.hue =3D input:PopNetUint16()
+		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then
+			newitem.hue =3D input:PopNetUint16()
 		end
 	end
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
-		if (BitwiseAND(packet.y,hex2num("0x4000")) ~=3D 0) then
-			packet.flag =3D input:PopNetUint8()
+		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then
+			newitem.flag =3D input:PopNetUint8()
 		end
 	end
+	-- item_flag : some kind of status or flags, usage unknown
 	=

-	packet.serial	=3D BitwiseAND(packet.serial,hex2num("0x7fffffff"))
-	packet.artid	=3D BitwiseAND(packet.artid,hex2num("0x7fff"))
-	packet.x	=3D BitwiseAND(packet.x,hex2num("0x7fff"))
-	packet.y	=3D BitwiseAND(packet.y,hex2num("0x3fff"))
+	newitem.serial	=3D BitwiseAND(newitem.serial,hex2num("0x7fffffff"))
+	newitem.artid	=3D BitwiseAND(newitem.artid,hex2num("0x7fff"))
+	newitem.xloc	=3D BitwiseAND(newitem.xloc,hex2num("0x7fff"))
+	newitem.yloc	=3D BitwiseAND(newitem.yloc,hex2num("0x3fff"))
 	=

-	dynamic =3D gObjectList[ packet.serial ]
+	dynamic =3D gObjectList[ newitem.serial ]
 	if (not dynamic) then
-		dynamic =3D CreateDynamic( packet )
+		dynamic =3D CreateDynamic( newitem )
 	end
 	=

 	dynamic:update( packet )
@@ -112,25 +118,25 @@
 	local itemcount =3D input:PopNetUint16()
 	=

 	for i=3D1,itemcount do
-		local packet =3D {}
-		packet.serial =3D input:PopNetUint32()
-		packet.artid =3D input:PopNetUint16()
-		packet.artid =3D packet.artid + input:PopNetUint8()
-		packet.amount =3D input:PopNetUint16()
-		packet.x =3D input:PopNetInt16()
-		packet.y =3D input:PopNetInt16()
-		packet.z =3D 0
+		local item =3D {}
+		item.serial =3D input:PopNetUint32()
+		item.artid =3D input:PopNetUint16()
+		item.artid =3D packet.artid + input:PopNetUint8()
+		item.amount =3D input:PopNetUint16()
+		item.xloc =3D input:PopNetInt16()
+		item.yloc =3D input:PopNetInt16()
+		item.zloc =3D 0
 		local ContainerSerial =3D input:PopNetUint32()
-		packet.hue =3D input:PopNetUint16()
+		item.hue =3D input:PopNetUint16()
 =

 		local container =3D gObjectList[ContainerSerial]
 		if (container) then
-			dynamic =3D gObjectList[packet.serial]
+			dynamic =3D gObjectList[item.serial]
 			if (not dynamic) then
-				dynamic =3D CreateDynamic( packet )
+				dynamic =3D CreateDynamic( item )
 			end
 			=

-			dynamic:update( packet )
+			dynamic:update( item )
 			dynamic:setcontainer( container )
 		end
 	end
@@ -140,22 +146,21 @@
 function gPacketHandler.kPacket_Object_to_Object() -- 0x25
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local packet =3D {}
-	=

-	packet.serial =3D input:PopNetUint32()
-	packet.artid =3D input:PopNetUint16()
-	packet.artid =3D packet.artid + input:PopNetUint8()
-	packet.amount =3D input:PopNetUint16()
-	packet.x =3D input:PopNetInt16()
-	packet.y =3D input:PopNetInt16()
+	local item =3D {}
+	item.serial =3D input:PopNetUint32()
+	item.artid =3D input:PopNetUint16()
+	item.artid =3D packet.artid + input:PopNetUint8()
+	item.amount =3D input:PopNetUint16()
+	item.xloc =3D input:PopNetInt16()
+	item.yloc =3D input:PopNetInt16()
 	local ContainerSerial =3D input:PopNetUint32()
-	packet.hue =3D input:PopNetUint16()
+	item.hue =3D input:PopNetUint16()
 =

 	local container =3D gObjectList[ContainerSerial]
 	if (container) then
-		dynamic =3D gObjectList[packet.serial]
+		dynamic =3D gObjectList[item.serial]
 		if (not dynamic) then
-			dynamic =3D CreateDynamic( packet )
+			dynamic =3D CreateDynamic( item )
 		end
 			=

 		dynamic:update( packet )

Modified: branches/knut/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.packethandlers.lua (original)
+++ branches/knut/data/lua/net/net.packethandlers.lua Thu Aug  2 20:37:32 2=
007
@@ -48,24 +48,24 @@
 function gPacketHandler.kPacket_Open_Paperdoll() -- 0x88
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local packet =3D {}
-	packet.serial =3D input:PopNetUint32()
-	packet.name =3D input:PopFilledString(60)
-	packet.flag =3D input:PopNetUint8()
+	local paperdoll =3D {}
+	paperdoll.serial =3D input:PopNetUint32()
+	paperdoll.name =3D input:PopFilledString(60)
+	paperdoll.flag =3D input:PopNetUint8()
 	=

 	local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
-	local paperdoll =3D nil
+	local mypaperdoll =3D nil
 	for s, gump in pairs( paperdolls ) do
 		if (gump.serial =3D=3D packet.serial) then
-			paperdoll =3D gump
+			mypaperdoll =3D gump
 			break
 		end
 	end
 		=

-	if (paperdoll) then
-		paperdoll:update( packet)
+	if (mypaperdoll) then
+		mypaperdoll:update( paperdoll)
 	else
-		CreatePaperdoll( packet )
+		CreatePaperdoll( paperdoll )
 	end
 end
 =




From no-reply at zwischenwelt.org  Sun Aug 12 14:43:48 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 12:43:48 -0000
Subject: [Iris-commit] [IRIS] r1337 - in /trunk/data/lua:
 gui/gui.container.lua gui/gui.status.lua net.walk.lua
 net/net.packethandlers.lua
Message-ID: <20070812124349.279711524001@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 12 14:43:48 2007
New Revision: 1337

Log:
syncing for merge

Modified:
    trunk/data/lua/gui/gui.container.lua
    trunk/data/lua/gui/gui.status.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.packethandlers.lua

Modified: trunk/data/lua/gui/gui.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.container.lua (original)
+++ trunk/data/lua/gui/gui.container.lua Sun Aug 12 14:43:48 2007
@@ -8,8 +8,6 @@
 -- dialog is only created when it is displayed, on kPacket_Open_Container
 -- TODO : check if iContainerSerial is secure trade serial
 -- TODO : check if spellbook
-kGumpIDShopContainer		=3D hex2num("0x0030")
-kGumpIDSpellbookContainer	=3D hex2num("0xFFFF")
 =

 =

 -- warning ! do not call while iterating over original container.items arr=
ay, item is removed from that array, might break iterator

Modified: trunk/data/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.status.lua (original)
+++ trunk/data/lua/gui/gui.status.lua Sun Aug 12 14:43:48 2007
@@ -1,3 +1,6 @@
+-- toggles the display of the extended aos stats
+gStatusAosDialog_LastPositionX =3D nil
+gStatusAosDialog_LastPositionY =3D nil
 =

 -- update the aos stats display
 function UpdateStatusAos ()
@@ -5,12 +8,7 @@
 		gStatusAosDialog:UpdateStats()
 	end
 end
-
-
 		=

--- toggles the display of the extended aos stats
-gStatusAosDialog_LastPositionX =3D nil
-gStatusAosDialog_LastPositionY =3D nil
 function ToggleStatusAos ()
 	if (gStatusAosDialog) then
 		-- store current positoin

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Sun Aug 12 14:43:48 2007
@@ -580,7 +580,7 @@
 function gPacketHandler.kPacket_Block_Movement()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local seqnumber =3D input:PopNetUint8()	--	TODO ! use this somehow ?
+	local seqnumber =3D input:PopNetUint8()
 	local player_xloc =3D input:PopNetUint16()
 	local player_yloc =3D input:PopNetUint16()
 	local player_dir =3D input:PopNetUint8()

Modified: trunk/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.packethandlers.lua (original)
+++ trunk/data/lua/net/net.packethandlers.lua Sun Aug 12 14:43:48 2007
@@ -1,3 +1,5 @@
+kGumpIDShopContainer		=3D hex2num("0x0030")
+kGumpIDSpellbookContainer	=3D hex2num("0xFFFF")
 =

 -- create and/or show graphical representation of container
 function gPacketHandler.kPacket_Open_Container() -- 0x24



From no-reply at zwischenwelt.org  Sun Aug 12 17:47:07 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 15:47:07 -0000
Subject: [Iris-commit] [IRIS] r1338 - in /trunk/data/lua:
 gui/gui.paperdoll.lua gui/gui.status.lua lib.util.lua net.other.lua
 net/net.dynamic.lua net/net.mobile.lua net/net.multi.lua obj/obj.main.lua
 obj/obj.mobile.lua
Message-ID: <20070812154707.746191524001@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 12 17:47:06 2007
New Revision: 1338

Log:
syncing for merge

Modified:
    trunk/data/lua/gui/gui.paperdoll.lua
    trunk/data/lua/gui/gui.status.lua
    trunk/data/lua/lib.util.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net/net.dynamic.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/net/net.multi.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua

Modified: trunk/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.paperdoll.lua (original)
+++ trunk/data/lua/gui/gui.paperdoll.lua Sun Aug 12 17:47:06 2007
@@ -45,7 +45,7 @@
 -- rebuild needed on update to have correct layerorder
 -- paperdoll.bIsPlayer (check if is player or npc)
 function RebuildPaperdoll (paperdoll)
-	local mobile =3D gMobiles[paperdoll.mobileserial]
+	local mobile =3D GetMobile(paperdoll.mobileserial)
 	paperdoll.mobile =3D mobile
 	paperdoll.bIsPlayer =3D IsPlayerMobile(mobile)
 	=


Modified: trunk/data/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.status.lua (original)
+++ trunk/data/lua/gui/gui.status.lua Sun Aug 12 17:47:06 2007
@@ -56,8 +56,8 @@
 =

 				-- stats update function
 		dialog.UpdateStats =3D function (dialog)
-			if gPlayerBodySerial and gMobiles then
-				local m =3D gMobiles[gPlayerBodySerial]
+			if gPlayerBodySerial then
+				local m =3D GetMobile(gPlayerBodySerial)
 				if m and m.stats then
 					local s =3D m.stats
 					=


Modified: trunk/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.util.lua (original)
+++ trunk/data/lua/lib.util.lua Sun Aug 12 17:47:06 2007
@@ -1,6 +1,8 @@
 --function printf(...) io.write(string.format("%d:",Client_GetTicks())..st=
ring.format(unpack(arg))) end
 function printf(...) io.write(string.format(unpack(arg))) end
 function sprintf(...) return string.format(unpack(arg)) end
+
+function TestBit (mask1,mask2) return BitwiseAND(mask1,mask2) ~=3D 0 end
 =

 gDebugCategories =3D {} -- gDebugCategories.mycat =3D false to disable out=
put
 function printdebug(category,...) =


Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Sun Aug 12 17:47:06 2007
@@ -286,7 +286,7 @@
 		local customhouseserial =3D input:PopNetUint32()
 		local customhouserevision =3D input:PopNetUint32()
 =

-		local dyn =3D gDynamics[customhouseserial]
+		local dyn =3D GetDynamic(customhouseserial)
 		-- check if houserevision exists
 		if (dyn) then
 			if (dyn.customhouserevision) then

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Sun Aug 12 17:47:06 2007
@@ -19,7 +19,7 @@
 	=

 	--print("NET : Equip_Item",vardump(item))
 	=

-	local mobile =3D gMobiles[item.mobile_serial]
+	local mobile =3D GetMobile(item.mobile_serial)
 	if (mobile) then
 		item.mobile =3D mobile
 		if (mobile.equipment[item.layer]) then
@@ -135,7 +135,7 @@
 	=

 	local bCreateNew =3D true
 	=

-	local olditem =3D gDynamics[newitem.serial]
+	local olditem =3D GetDynamic(newitem.serial)
 	if (olditem) then
 		-- if only the position changed we can just update the old one
 		if (	newitem.artid =3D=3D olditem.artid and =


Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Sun Aug 12 17:47:06 2007
@@ -1,124 +1,80 @@
 -- simple mobile, no equipment, fixed size packet 0x77
 function gPacketHandler.kPacket_Naked_MOB ()
-	local mobile =3D {}
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	mobile.serial =3D input:PopNetUint32()
-	=

-	local oldmobile =3D gMobiles[mobile.serial]
-	if (oldmobile) then mobile =3D oldmobile end -- update	=

-	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer
-	=

-	mobile.artid =3D input:PopNetUint16()
-	mobile.xloc =3D input:PopNetUint16()
-	mobile.yloc =3D input:PopNetUint16()
-	mobile.zloc =3D input:PopInt8()
-	mobile.dir =3D input:PopNetUint8()
-	mobile.hue =3D input:PopNetUint16() -- hue/skin color
-	mobile.flag =3D input:PopNetUint8()
-	mobile.notoriety =3D input:PopNetUint8()
-	=

-	--AddFadeLines("nakedmob ["..(mobile.serial).."]")
-	--print("\t\tNaked_MOB "..vardump(mobile))
-	=

-	gMobiles[mobile.serial] =3D mobile
-	=

-	-- request basic stats info
-	Send_ClientQuery(gRequest_States,mobile.serial)
-	=

-	UpdateMobile(mobile)
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	=

+	local mobiledata =3D {}
+	mobiledata.serial =3D input:PopNetUint32()
+	mobiledata.artid =3D input:PopNetUint16()
+	mobiledata.xloc =3D input:PopNetUint16()
+	mobiledata.yloc =3D input:PopNetUint16()
+	mobiledata.zloc =3D input:PopInt8()
+	mobiledata.dir =3D input:PopNetUint8()
+	mobiledata.hue =3D input:PopNetUint16() -- hue/skin color
+	mobiledata.flag =3D input:PopNetUint8()
+	mobiledata.notoriety =3D input:PopNetUint8()
+	=

+	CreateOrUpdateMobile(mobiledata)
 end
 =

 -- Equipped_MOB packet (0x78)
--- TODO : rest of the packet
--- TODO : Tooltip request
 function gPacketHandler.kPacket_Equipped_MOB() -- ProtocolRecv_AddMobile
-	local mobile =3D {}
-	local input =3D GetRecvFIFO()
-
+	local input =3D GetRecvFIFO()
 	local fifolen_start =3D input:Size()
 	local id =3D input:PopNetUint8()
 	local iPacketSize =3D input:PopNetUint16()
-	mobile.serial =3D input:PopNetUint32()
-	=

-	local oldmobile =3D gMobiles[mobile.serial]
-	if (oldmobile) then mobile =3D oldmobile end -- update
-	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer
-	=

-	mobile.artid =3D input:PopNetUint16()
-
-	if (BitwiseAND(mobile.serial,hex2num("0x80000000")) ~=3D 0) then
-			mobile.amount =3D input:PopNetUint16()
-			print("tag corpse")
-	else 	mobile.amount =3D 1 end -- amount/Corpse Model Num
-	=

-	mobile.xloc =3D input:PopNetUint16()
-	mobile.yloc =3D input:PopNetUint16()
-	=

-	-- TOOD : check if this 2nd dir actually is used, or just a copy/paste er=
ror in the packet guide ?!?
-	if (BitwiseAND(mobile.xloc,hex2num("0x8000")) ~=3D 0) then
-			mobile.dir2 =3D input:PopNetUint16()
-			print("tag dir2")
-	else 	mobile.dir2 =3D -1 end -- why 2 directions ?!?
-
-	mobile.zloc =3D input:PopInt8()
-	mobile.dir =3D input:PopNetUint8()
-	mobile.hue =3D input:PopNetUint16()  -- dye/skin color
-	mobile.flag =3D input:PopNetUint8()
-	mobile.notoriety =3D input:PopNetUint8() -- TODO : (2's complement signed)
-	mobile.equipment =3D {}
-
-	local equipcount =3D 0
-	local loopalive =3D true
-
-	while loopalive do =

-		local item =3D {}
-		if ( iPacketSize >=3D (fifolen_start - input:Size()+4) ) then
-			item.serial =3D input:PopNetUint32()
-			if (item.serial =3D=3D 0) then
-				loopalive =3D false
-			else
-				item.mobile =3D mobile
-				item.mobile_serial =3D mobile.serial
-				=

-				if ( iPacketSize >=3D (fifolen_start - input:Size()+3) ) then
-					item.artid =3D input:PopNetUint16()
-					item.layer =3D input:PopNetUint8()
-					if ((BitwiseAND(item.artid,hex2num("0x8000")) ~=3D 0) and ( iPacketSi=
ze >=3D (fifolen_start - input:Size()+2) )) then
-							item.hue =3D input:PopNetUint16()
-					else	item.hue =3D 0 -- TODO : default value ?
-					end
-					item.artid =3D BitwiseAND(item.artid,hex2num("0x7fff"))
-					if (mobile.equipment[item.layer]) then print("Equipped_MOB : layer co=
ntains more than one item",item.layer) end
-					mobile.equipment[item.layer] =3D item
-					gMobileItemsBySerial[item.serial] =3D item
-					--print("Equipped_MOB add item",mobile.serial,sprintf("0x%02x",item.l=
ayer),item.artid)
-					equipcount =3D equipcount + 1
-				else
-					loopalive =3D false
-				end
-			end
-		else
-			loopalive =3D false
-		end
-	end
-	=

-	if (equipcount > 2) then gMobileWithPaperdoll =3D mobile end
-	=

-	mobile.serial	=3D BitwiseAND(mobile.serial,hex2num("0x7fffffff"))
-	mobile.xloc		=3D BitwiseAND(mobile.xloc,hex2num("0x7fff"))
-
-	--AddFadeLines("equippedmob ["..(mobile.serial).."]")
-	--print("\t\tEquipped_MOB "..vardump(mobile))
-	gMobiles[mobile.serial] =3D mobile
-	=

-	-- request basic stats info
-	Send_ClientQuery(gRequest_States,mobile.serial)
-
-	UpdateMobile(mobile)	=

-	=

-	UpdateMobileEquipment(mobile)
-end
+	=

+	local mobiledata =3D {}
+	mobiledata.serial =3D input:PopNetUint32()
+	mobiledata.artid =3D input:PopNetUint16()
+
+	-- this is related to corpse stuff, some encoded modelid
+	if (TestBit(mobiledata.serial,hex2num("0x80000000"))) then
+			mobiledata.amount =3D input:PopNetUint16()
+	else 	mobiledata.amount =3D 1 end -- amount/Corpse Model Num
+	=

+	mobiledata.xloc =3D input:PopNetUint16()
+	mobiledata.yloc =3D input:PopNetUint16()
+	=

+	-- the usage of this and on which servers it occurs on is unknown
+	if (TestBit(mobiledata.xloc,hex2num("0x8000"))) then
+			mobiledata.dir2 =3D input:PopNetUint16()
+	else 	mobiledata.dir2 =3D -1 end
+
+	mobiledata.zloc =3D input:PopInt8()
+	mobiledata.dir =3D input:PopNetUint8()
+	mobiledata.hue =3D input:PopNetUint16()  -- dye/skin color
+	mobiledata.flag =3D input:PopNetUint8()
+	mobiledata.notoriety =3D input:PopNetUint8() -- TODO : (2's complement si=
gned)
+	=

+	mobiledata.serial	=3D BitwiseAND(mobiledata.serial,hex2num("0x7fffffff"))
+	mobiledata.xloc		=3D BitwiseAND(mobiledata.xloc,hex2num("0x7fff"))
+	=

+	local equipmentdata =3D {}
+
+	while true do =

+		if ( iPacketSize < (fifolen_start - input:Size()+4) ) then break end
+		=

+		local itemdata =3D {}
+		itemdata.serial =3D input:PopNetUint32()
+		if (itemdata.serial =3D=3D 0) then break end
+		=

+		if ( iPacketSize < (fifolen_start - input:Size()+3) ) then break end
+		itemdata.artid =3D input:PopNetUint16()
+		itemdata.layer =3D input:PopNetUint8()
+		if (TestBit(itemdata.artid,hex2num("0x8000")) and ( iPacketSize >=3D (fi=
folen_start - input:Size()+2) )) then
+				itemdata.hue =3D input:PopNetUint16()
+		else	itemdata.hue =3D 0 -- TODO : default value ?
+		end
+		itemdata.artid =3D BitwiseAND(itemdata.artid,hex2num("0x7fff"))
+		if (equipmentdata[itemdata.layer]) then print("warning ! Equipped_MOB : =
layer contains more than one item",itemdata.layer) end
+		equipmentdata[itemdata.layer] =3D item
+	end
+	=

+	CreateOrUpdateMobile(mobiledata,equipmentdata)
+	ResetWalkQueue()
+end
+
 =

 -- 0x20 Teleport packet (also known as ProtocolRecv_Draw_Player)
 -- Note: Only used with the character being played by the client. =

@@ -217,7 +173,7 @@
 	=

 	--printf("NET : kPacket_Mobile_Stats mobile=3D0x%08x name=3D%s\n",mobile_=
id,mobilename)
 	=

-	local mobile =3D gMobiles[mobile_id]
+	local mobile =3D GetMobile(mobile_id)
 	local oldhp =3D 0
 	if (mobile) then
 		if (mobile.stats) then =


Modified: trunk/data/lua/net/net.multi.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.multi.lua (original)
+++ trunk/data/lua/net/net.multi.lua Sun Aug 12 17:47:06 2007
@@ -260,7 +260,7 @@
 =

 	-- print("Custom House Tiles",vardump(lTile))
 =

-	local dyn =3D gDynamics[customhouseserial]
+	local dyn =3D GetDynamic(customhouseserial)
 	local update_or_create_house =3D false
 =

 	-- if dynamic-customhouse-multi alreay exists

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Sun Aug 12 17:47:06 2007
@@ -2,20 +2,39 @@
 dofile(libpath .. "obj/obj.dynamic.lua")
 dofile(libpath .. "obj/obj.player.lua")
 =

+gObjectList =3D {}
+gDynamics =3D {}
+gMobiles =3D {}
+gMobileItemsBySerial =3D {} -- items equipped on mobiles TODO : killme !
+
+function GetDynamic (serial) return gDynamics[serial] end
 function GetMobile (mobileserial) return gMobiles[mobileserial] end
 function GetMobileEquipmentItem (mobile,layer) return mobile.equipment[lay=
er] end
 function GetMobileEquipmentList (mobile) return mobile.equipment end
 function GetContainerContentList (container) return container.items end
-function GetObjectBySerial (serial) return gMobileItemsBySerial[serial] or=
 gMobiles[serial] or gDynamics[serial] end
+function GetObjectBySerial (serial) return gMobileItemsBySerial[serial] or=
 GetMobile(serial) or gDynamics[serial] end
 =

-function GetDynamicList () return gDynamics end
-function GetMobileList () return gMobiles end
+function DynamicIsInWorld (dynamic) return not dynamic.container end  -- T=
ODO : spelling of container correct ???
 =

-gDynamics =3D {}
+function GetDynamicList	() return gDynamics end
+function GetMobileList	() return gMobiles end
 =

+-- temporary knut merge wrappers for syncing, naming will be fixed as the =
merge progresses
+function KNUTMERGETEMP_CREATE_EMPTY_OBJECT	(serial) =

+	local newitem =3D {serial=3Dserial} =

+	gObjectList[serial] =3D newitem
+	return newitem
+end
+function KNUTMERGETEMP_CREATE_EMPTY_MOBILE	(serial)
+	local newmobile =3D KNUTMERGETEMP_CREATE_EMPTY_OBJECT(serial)
+	gMobiles[serial] =3D newmobile
+	return newmobile
+end
+function KNUTMERGETEMP_CREATE_EMPTY_ITEM	(serial) return KNUTMERGETEMP_CRE=
ATE_EMPTY_OBJECT(serial) end
+function KNUTMERGETEMP_DEL_MOBILE	(serial) gObjectList[serial] =3D nil gMo=
biles[serial] =3D nil end  -- todo : clean me..., remove from central objec=
t list
 =

 function DestroyDynamicItemBySerial (serial) =

-	local dynamic =3D gDynamics[serial]
+	local dynamic =3D GetDynamic(serial)
 	if (dynamic) then
 		gCurrentRenderer:RemoveDynamicItem( dynamic )
 		gDynamics[dynamic.serial] =3D nil
@@ -42,11 +61,78 @@
 	CancelUODragDrop()
 	for serial,v in pairs(gContainer) do 			CloseContainer(serial) end
 	for serial,v in pairs(gMobileItemsBySerial) do 	DestroyMobileItemBySerial=
(serial) end
-	for serial,v in pairs(gMobiles) do 				DestroyMobileBySerial(serial) end
-	for serial,v in pairs(gDynamics) do 			DestroyDynamicItemBySerial(serial)=
 end
+	for serial,v in pairs(GetMobileList()) do 		DestroyMobileBySerial(serial)=
 end
+	for serial,v in pairs(GetDynamicList()) do 		DestroyDynamicItemBySerial(s=
erial) end
 	for serial,v in pairs(gPaperdolls) do 			DestroyPaperdollByMobileSerial(s=
erial) end
 	-- TODO : gCurrentRenderer:DestroyMousePickItemBySerial(serial)
 	-- TODO : DestroyDragDropItemBySerial ?? done by CancelUODragDrop
 end
 =

 =

+-- called from kPacket_Naked_MOB and kPacket_Equipped_MOB
+function CreateOrUpdateMobile (mobiledata,equipmentdata)
+	local mobile =3D GetMobile(mobiledata.serial)
+	if (not mobile) then mobile =3D KNUTMERGETEMP_CREATE_EMPTY_MOBILE(mobiled=
ata.serial) end
+	=

+	for k,v in pairs(mobiledata) do mobile[k] =3D v end
+	-- mobile.serial		=

+	-- mobile.artid		=

+	-- mobile.xloc			=

+	-- mobile.yloc 		=

+	-- mobile.zloc			=

+	-- mobile.dir			=

+	-- mobile.hue			=

+	-- mobile.flag			=

+	-- mobile.notoriety	=

+	-- mobile.amount	-- only kPacket_Equipped_MOB, corpse related
+	-- mobile.dir2		-- only kPacket_Equipped_MOB, unknown
+	=

+	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer =
-- TODO : is this obsolete since knut ?
+	=

+	-- request basic stats info
+	Send_ClientQuery(gRequest_States,mobile.serial)
+	=

+	if (equipmentdata) then
+		mobile.equipment =3D {} -- todo : KILL old equipment items ???
+
+		=

+		for layer,itemdata in pairs(equipmentdata) do
+			local item =3D KNUTMERGETEMP_CREATE_EMPTY_ITEM(itemdata.serial) -- dyna=
mic ? =

+			for k,v in pairs(itemdata) do item[k] =3D v end
+			item.mobile =3D mobile
+			item.mobile_serial =3D mobile.serial
+			-- item.serial
+			-- item.artid
+			-- item.layer
+			-- item.hue
+			mobile.equipment[item.layer] =3D item
+			gMobileItemsBySerial[item.serial] =3D item -- TODO : obsolete ??
+		end
+		-- OBSOLETE : if (equipcount > 2) then gMobileWithPaperdoll =3D mobile e=
nd
+	end
+	=

+	UpdateMobile(mobile)
+	if (equipmentdata) then UpdateMobileEquipment(mobile) end
+end
+
+function DestroyMobileBySerial (serial) =

+	local mobile =3D GetMobile(serial)
+	if (not mobile) then return end
+	=

+	CloseStatus(mobile)
+
+	-- clean up equipment
+	if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
+		DestroyMobileItem(item)
+	end end
+	=

+	gCurrentRenderer:RemoveMobile( mobile )
+	=

+	KNUTMERGETEMP_DEL_MOBILE(serial)
+
+	-- destroy Status Gump from NPC
+	CloseStatus(mobile)
+	=

+	mobile.serial =3D nil
+	=

+end

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Sun Aug 12 17:47:06 2007
@@ -2,8 +2,6 @@
 -- see also net.paperdoll.lua
 -- see also net.skill.lua
 =

-gMobiles =3D {}
-gMobileItemsBySerial =3D {} -- items equipped on mobiles
 gHudNamesFontSize =3D 12
 			=

 -- request the tooltipp for the mobile, e.g. the name
@@ -52,27 +50,6 @@
 	return 0.5,0.5,0.5
 end
  =

-function DestroyMobileBySerial (serial) =

-	local mobile =3D gMobiles[serial]
-	if (not mobile) then return end
-	=

-	CloseStatus(mobile)
-
-	-- clean up equipment
-	if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
-		DestroyMobileItem(item)
-	end end
-	=

-	gCurrentRenderer:RemoveMobile( mobile )
-	=

-	gMobiles[serial] =3D nil
-
-	-- destroy Status Gump from NPC
-	CloseStatus(mobile)
-	=

-	mobile.serial =3D nil
-	=

-end
 =

 -- note : modifying existing elements and removing from a lua table while =
iterating is save, only inserting is dangerous
 function DestroyMobileItemBySerial (serial) =

@@ -150,7 +127,7 @@
 	g =3D g or 0
 	b =3D b or 0
 =

-	local mobile =3D gMobiles[serial]
+	local mobile =3D GetMobile(serial)
 	=

 	printdebug("mobile","TEXT MobileDisplayTextOverHead",serial,message,color)
 	=




From no-reply at zwischenwelt.org  Sun Aug 12 17:47:41 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 15:47:41 -0000
Subject: [Iris-commit] [IRIS] r1339 - in /branches/knut/data/lua:
 gui/gui.paperdoll.lua gui/gui.status.lua net.other.lua net.walk.lua
 net/net.mobile.lua net/net.multi.lua obj/obj.main.lua obj/obj.mobile.lua
Message-ID: <20070812154742.4B4551524001@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 12 17:47:41 2007
New Revision: 1339

Log:
syncing for merge

Modified:
    branches/knut/data/lua/gui/gui.paperdoll.lua
    branches/knut/data/lua/gui/gui.status.lua
    branches/knut/data/lua/net.other.lua
    branches/knut/data/lua/net.walk.lua
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/net/net.multi.lua
    branches/knut/data/lua/obj/obj.main.lua
    branches/knut/data/lua/obj/obj.mobile.lua

Modified: branches/knut/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.paperdoll.lua (original)
+++ branches/knut/data/lua/gui/gui.paperdoll.lua Sun Aug 12 17:47:41 2007
@@ -26,7 +26,7 @@
 }
 =

 function CreatePaperdoll( packet )
-	local mobile =3D gObjectList[ packet.serial ]
+	local mobile =3D GetMobile(packet.serial)
 	if (not mobile) then
 		return
 	end
@@ -71,7 +71,7 @@
 	end
 	=

 	Gump.OnChangeWarMode =3D function()
-		local mobile =3D gObjectList[ Gump.mobileserial ]
+		local mobile =3D GetMobile(Gump.mobileserial)
 		if (not mobile) then
 			return
 		end
@@ -92,7 +92,7 @@
 	RegisterListener( "WarmodeChange"..sprintf("%d",Gump.mobileserial), Gump.=
OnChangeWarMode )
 	=

 	Gump.OnMobileUpdate =3D function()
-		local mobile =3D gObjectList[ Gump.mobileserial ]
+		local mobile =3D GetMobile(Gump.mobileserial)
 		if (not mobile) then
 			return
 		end
@@ -112,7 +112,7 @@
 	=

 	Gump.OnAddItem =3D function( serial )
 		local item =3D gObjectList[ serial ]
-		local mobile =3D gObjectList[ Gump.mobileserial ]
+		local mobile =3D GetMobile(Gump.mobileserial)
 		if (not item) or (not mobile) then
 			return
 		end
@@ -160,7 +160,7 @@
 				ToggleStatusAos()
 			elseif GumpObject.buttonid =3D=3D 2 then
 				-- toggles warmode
-				local mobile =3D gObjectList[ Gump.mobileserial ]
+				local mobile =3D GetMobile(Gump.mobileserial)
 				if (mobile) then
 					if (mobile.warmode) then
 						Send_CombatMode( gWarmode_Normal )

Modified: branches/knut/data/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.status.lua (original)
+++ branches/knut/data/lua/gui/gui.status.lua Sun Aug 12 17:47:41 2007
@@ -1,8 +1,9 @@
+-- toggles the display of the extended aos stats
 gStatusAosDialog_LastPositionX =3D nil
 gStatusAosDialog_LastPositionY =3D nil
 =

 function CreateStatusGump( serial )
-	local mobile =3D gObjectList[ serial ]
+	local mobile =3D GetMobile(serial)
 	if (not mobile) then
 		return
 	end
@@ -76,7 +77,7 @@
 	end
 	=

 	Gump.OnMobileStatUpdate =3D function()
-		local mobile =3D gObjectList[ Gump.mobileserial ]
+		local mobile =3D GetMobile(Gump.mobileserial)
 		if (not mobile) then
 			Gump:destroy()
 		end
@@ -101,7 +102,7 @@
 end
 =

 function UpdateStatusGump( Gump )
-	local mobile =3D gObjectList[ Gump.mobileserial ]
+	local mobile =3D GetMobile(Gump.mobileserial)
 	if (not mobile) then
 		Gump:destroy()
 	end

Modified: branches/knut/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.other.lua (original)
+++ branches/knut/data/lua/net.other.lua Sun Aug 12 17:47:41 2007
@@ -286,7 +286,7 @@
 		local customhouseserial =3D input:PopNetUint32()
 		local customhouserevision =3D input:PopNetUint32()
 =

-		local dyn =3D gDynamics[customhouseserial]
+		local dyn =3D GetDynamic(customhouseserial)
 		-- check if houserevision exists
 		if (dyn) then
 			if (dyn.customhouserevision) then

Modified: branches/knut/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.walk.lua (original)
+++ branches/knut/data/lua/net.walk.lua Sun Aug 12 17:47:41 2007
@@ -576,22 +576,23 @@
 -- Block Movement Request - reset player to back to location
 function gPacketHandler.kPacket_Block_Movement()
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
+	local id =3D input:PopNetUint8()
 	local seqnumber =3D input:PopNetUint8()
-	local x =3D input:PopNetUint16()
-	local y =3D input:PopNetUint16()
-	local dir =3D input:PopNetUint8()
-	local z =3D input:PopInt8()
-
-	dir =3D BitwiseAND(dir,hex2num("0x07"))
+	local player_xloc =3D input:PopNetUint16()
+	local player_yloc =3D input:PopNetUint16()
+	local player_dir =3D input:PopNetUint8()
+	local player_zloc =3D input:PopInt8()
+
+	local fullplayerdir =3D player_dir
+	player_dir =3D BitwiseAND(player_dir,hex2num("0x07"))
 =

 	local player =3D GetPlayerMobile()
 	if (player) then
-		player:setposition( x, y, z, dir )
+		player:setposition( player_xloc, player_yloc, player_zloc, player_dir )
 	end
 	=

 	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
-	SetPlayerPos( x, y, z, dir )
+	SetPlayerPos(player_xloc,player_yloc,player_zloc,fullplayerdir )
 =

 	Send_Accept_Block_Movement(seqnumber)
 =


Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Sun Aug 12 17:47:41 2007
@@ -1,90 +1,78 @@
 -- simple mobile, no equipment, fixed size packet 0x77
 function gPacketHandler.kPacket_Naked_MOB ()
-	local mobile =3D {}
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	mobile.serial =3D input:PopNetUint32()
-
-	mobile.artid =3D input:PopNetUint16()
-	mobile.xloc =3D input:PopNetUint16()
-	mobile.yloc =3D input:PopNetUint16()
-	mobile.zloc =3D input:PopInt8()
-	mobile.dir =3D input:PopNetUint8()
-	mobile.hue =3D input:PopNetUint16() -- hue/skin color
-	mobile.flag =3D input:PopNetUint8()
-	mobile.notoriety =3D input:PopNetUint8()
-	=

-	local mymobile =3D GetMobile(mobile.serial)
-	if (not mymobile) then
-		mymobile =3D CreateMobile( mobile )
-	end
-	=

-	mymobile:update( mobile )
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	=

+	local mobiledata =3D {}
+	mobiledata.serial =3D input:PopNetUint32()
+	mobiledata.artid =3D input:PopNetUint16()
+	mobiledata.xloc =3D input:PopNetUint16()
+	mobiledata.yloc =3D input:PopNetUint16()
+	mobiledata.zloc =3D input:PopInt8()
+	mobiledata.dir =3D input:PopNetUint8()
+	mobiledata.hue =3D input:PopNetUint16() -- hue/skin color
+	mobiledata.flag =3D input:PopNetUint8()
+	mobiledata.notoriety =3D input:PopNetUint8()
+	=

+	CreateOrUpdateMobile(mobiledata)
 end
 =

 -- Equipped_MOB packet (0x78)
--- TODO : rest of the packet
--- TODO : Tooltip request
 function gPacketHandler.kPacket_Equipped_MOB() -- ProtocolRecv_AddMobile
-	local mobile =3D {}
-	local input =3D GetRecvFIFO()
-	=

+	local input =3D GetRecvFIFO()
 	local fifolen_start =3D input:Size()
 	local id =3D input:PopNetUint8()
 	local iPacketSize =3D input:PopNetUint16()
-	mobile.serial =3D input:PopNetUint32()
-
-	=

-	mobile.artid =3D input:PopNetUint16()
-	-- maybe it is necessary to read amount here, if this packet is used for =
a corpse
-	=

-	mobile.xloc =3D input:PopNetUint16()
-	mobile.yloc =3D input:PopNetUint16()
-	mobile.zloc =3D input:PopInt8()
-	mobile.dir =3D input:PopNetUint8()
-	mobile.hue =3D input:PopNetUint16()  -- dye/skin color
-	mobile.flag =3D input:PopNetUint8()
-	mobile.notoriety =3D input:PopNetUint8() -- TODO : (2's complement signed)
-	=

-	local mymobile =3D GetMobile(mobile.serial)
-	if (not mymobile) then
-		mymobile =3D CreateMobile( mobile )
-	end
-	=

-	mymobile:update( mobile )
-	=

-	local loopalive =3D true
-	while loopalive do =

-		local item =3D {}
-		if ( iPacketSize >=3D (fifolen_start - input:Size()+4) ) then
-			item.serial =3D input:PopNetUint32()
-			if ( item.serial =3D=3D 0 ) then
-				loopalive =3D false
-			else
-				if ( iPacketSize >=3D (fifolen_start - input:Size()+3) ) then
-					item.artid =3D input:PopNetUint16()
-					item.layer =3D input:PopNetUint8()
-					if ((BitwiseAND(item.artid,hex2num("0x8000")) ~=3D 0) and ( iPacketSi=
ze >=3D (fifolen_start - input:Size()+2) )) then
-						item.hue =3D input:PopNetUint16()
-					else	item.hue =3D 0 -- TODO : default value ?
-					end
-					item.artid =3D BitwiseAND(item.artid,hex2num("0x7fff"))
-					=

-					dynamic =3D gObjectList[ item.serial ]
-					if (not dynamic) then
-						dynamic =3D CreateDynamic( item )
-					end
-					=

-					dynamic:update( item )
-					dynamic:setcontainer( mymobile )
-				else
-					loopalive =3D false
-				end
-			end
-		else
-			loopalive =3D false
+	=

+	local mobiledata =3D {}
+	mobiledata.serial =3D input:PopNetUint32()
+	mobiledata.artid =3D input:PopNetUint16()
+
+	-- this is related to corpse stuff, some encoded modelid
+	if (TestBit(mobiledata.serial,hex2num("0x80000000"))) then
+			mobiledata.amount =3D input:PopNetUint16()
+	else 	mobiledata.amount =3D 1 end -- amount/Corpse Model Num
+	=

+	mobiledata.xloc =3D input:PopNetUint16()
+	mobiledata.yloc =3D input:PopNetUint16()
+	=

+	-- the usage of this and on which servers it occurs on is unknown
+	if (TestBit(mobiledata.xloc,hex2num("0x8000"))) then
+			mobiledata.dir2 =3D input:PopNetUint16()
+	else 	mobiledata.dir2 =3D -1 end
+
+	mobiledata.zloc =3D input:PopInt8()
+	mobiledata.dir =3D input:PopNetUint8()
+	mobiledata.hue =3D input:PopNetUint16()  -- dye/skin color
+	mobiledata.flag =3D input:PopNetUint8()
+	mobiledata.notoriety =3D input:PopNetUint8() -- TODO : (2's complement si=
gned)
+	=

+	mobiledata.serial	=3D BitwiseAND(mobiledata.serial,hex2num("0x7fffffff"))
+	mobiledata.xloc		=3D BitwiseAND(mobiledata.xloc,hex2num("0x7fff"))
+	=

+	local equipmentdata =3D {}
+
+	while true do =

+		if ( iPacketSize < (fifolen_start - input:Size()+4) ) then break end
+		=

+		local itemdata =3D {}
+		itemdata.serial =3D input:PopNetUint32()
+		if (itemdata.serial =3D=3D 0) then break end
+		=

+		if ( iPacketSize < (fifolen_start - input:Size()+3) ) then break end
+		itemdata.artid =3D input:PopNetUint16()
+		itemdata.layer =3D input:PopNetUint8()
+		if (TestBit(itemdata.artid,hex2num("0x8000")) and ( iPacketSize >=3D (fi=
folen_start - input:Size()+2) )) then
+				itemdata.hue =3D input:PopNetUint16()
+		else	itemdata.hue =3D 0 -- TODO : default value ?
 		end
-	end
+		itemdata.artid =3D BitwiseAND(itemdata.artid,hex2num("0x7fff"))
+		if (equipmentdata[itemdata.layer]) then print("warning ! Equipped_MOB : =
layer contains more than one item",itemdata.layer) end
+		equipmentdata[itemdata.layer] =3D item
+	end
+	=

+	CreateOrUpdateMobile(mobiledata,equipmentdata)
+	ResetWalkQueue()
 end
 =

 -- 0x20 Teleport packet (also known as ProtocolRecv_Draw_Player)
@@ -110,7 +98,7 @@
 	=

 	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
 =

-	local mobile =3D gObjectList[packet.serial] =

+	local mobile =3D GetMobile(packet.serial)
 	if (not mobile) then
 		mobile =3D CreateMobile( packet )
 	end
@@ -197,7 +185,7 @@
 		end
 	end
 =

-	local mobile =3D gObjectList[mobileserial] =

+	local mobile =3D GetMobile(mobileserial)
 	if (mobile) then
 		mobile:updatestats( stats )
 	end

Modified: branches/knut/data/lua/net/net.multi.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.multi.lua (original)
+++ branches/knut/data/lua/net/net.multi.lua Sun Aug 12 17:47:41 2007
@@ -260,7 +260,7 @@
 =

 	-- print("Custom House Tiles",vardump(lTile))
 =

-	local dyn =3D gDynamics[customhouseserial]
+	local dyn =3D GetDynamic(customhouseserial)
 	local update_or_create_house =3D false
 =

 	-- if dynamic-customhouse-multi alreay exists

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Sun Aug 12 17:47:41 2007
@@ -2,32 +2,20 @@
 dofile(libpath .. "obj/obj.dynamic.lua")
 dofile(libpath .. "obj/obj.player.lua")
 =

+gDynamics =3D {}
+gMobiles =3D {}
+
+function GetDynamic (serial) return gObjectList[serial] end
 function GetMobile (mobileserial) local res =3D gObjectList[mobileserial] =
if (res.ismobile) then return res end end
 function GetMobileEquipmentItem (mobile,layer) return mobile:getequipment(=
layer) end
 function GetMobileEquipmentList (mobile) return mobile.content end
 function GetContainerContentList (container) return container.content end
 function GetObjectBySerial (serial) return gObjectList[serial] end
 =

-function GetDynamicList () =

-	if (not gGetDynamicListWarning)	print("WARNING ! redesign me : GetDynamic=
List workaround") gGetDynamicListWarning =3D true end
-	-- ask ghoulsblade : this global lists of all dynamics and mobiles etc sh=
ould be kept for performance
-	local res
-	for k,object in pairs(gObjectList) do
-		if (object.isdynamic) then res[k] =3D object end
-	end
-	return res
-end
+function DynamicIsInWorld (dynamic) return not dynamic.container end  -- T=
ODO : spelling of container correct ???
 =

-function GetMobileList () =

-	if (not gGetMobileListWarning)	print("WARNING ! redesign me : GetDynamicL=
ist workaround") gGetMobileListWarning =3D true end
-	-- ask ghoulsblade : this global lists of all dynamics and mobiles etc sh=
ould be kept for performance
-	local res
-	for k,object in pairs(gObjectList) do
-		if (object.ismobile) then res[k] =3D object end
-	end
-	return res
-end
-
+function GetDynamicList	() return gDynamics end -- object.isdynamic
+function GetMobileList	() return gMobiles end -- object.ismobile
 =

 gObjectList =3D {}
 gPlayerBodySerial =3D 0
@@ -51,3 +39,18 @@
 		object:delete()
 	end
 end
+
+function CreateOrUpdateMobile (mobiledata,equipmentdata)
+	local mobile =3D GetMobile(mobiledata.serial)
+	if (not mobile) then mobile =3D CreateMobile( mobiledata ) end
+	mobile:update( mobiledata )
+	=

+	if (equipmentdata) then
+		for layer,itemdata in pairs(equipmentdata) do
+			dynamic =3D GetDynamic(itemdata.serial)
+			if (not dynamic) then dynamic =3D CreateDynamic( itemdata ) end
+			dynamic:update( itemdata )
+			dynamic:setcontainer( mobile )
+		end
+	end
+end

Modified: branches/knut/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.mobile.lua (original)
+++ branches/knut/data/lua/obj/obj.mobile.lua Sun Aug 12 17:47:41 2007
@@ -1,228 +1,250 @@
---[[
-mobile.notoriety: =

-	0 =3D invalid/across server line
-	1 =3D innocent (blue)
-	2 =3D guilded/ally (green)
-	3 =3D attackable but not criminal (gray)
-	4 =3D criminal (gray)
-	5 =3D enemy (orange)
-	6 =3D murderer (red)
-	7 =3D unknown use (translucent (like 0x4000 hue)) =

-Status/flag in kPacket_Naked_MOB
-	Normal =3D 0x00,
-	Unknown =3D 0x01,
-	CanAlterPaperdoll =3D 0x02,
-	Poisoned =3D 0x04,
-	GoldenHealth =3D 0x08,
-	Unknown2 =3D 0x10,
-	Unknown3 =3D 0x20,
-	WarMode =3D 0x40,
-	Hidden =3D 0x80
-]]--
-
---[[
-Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
-0x00 - None
-0x02 - Female
-0x04 - Poisoned
-0x08 - YellowHits // healthbar gets yellow
-0x10 - FactionShip // unsure why client needs to know
-0x20 - Movable if normally not
-0x40 - War mode
-0x80 - Hidden =

-]]--
-
-function CreateMobile( packet )
-	mobile =3D {}
-	mobile.serial =3D packet.serial
-	mobile.body =3D 0
-	mobile.x =3D 0
-	mobile.y =3D 0
-	mobile.z =3D 0
-	mobile.hue =3D 0
-	mobile.flag =3D 0
-	mobile.content =3D {}
-	mobile.ismobile =3D true
-	mobile.warmode =3D false
-	=

-	mobile.stats =3D {}
-	=

-	-- SendTooltipRequest( mobile.serial )
-	=

-	-- mobile
-	mobile.update =3D UpdateMobile
-	mobile.delete =3D DeleteMobile
-	mobile.addobject =3D MobileAddObject
-	mobile.removeobject =3D MobileRemoveObject
-	mobile.doanimation =3D DoAnimation
-	mobile.getequipment =3D GetEquipment	=

-	mobile.updatestats =3D UpdateStats
-	mobile.updatehits =3D UpdateHits
-	mobile.updatestamina =3D UpdateStamina
-	mobile.updatemana =3D UpdateMana
-	mobile.setposition =3D SetMobilePosition
-	mobile.updateflags =3D UpdateMobileFlags
-	mobile.setwarmode =3D MobileSetWarmode
-	mobile.getitemonlayer =3D MobileGetItemOnLayer
-	=

-	-- derived from object
-	mobile.register =3D RegisterObject
-	mobile.deregister =3D DeRegisterObject
-	mobile.removecontent =3D RemoveContent
-		=

-	mobile:register()
-	gCurrentRenderer:AddMobile( mobile )
-	=

-	Send_QueryStatus( mobile )
-	=

-	return mobile
-end
-
-function UpdateMobile( mobile, packet )
-	local update =3D false
-	=

-	local flagsChanged =3D false
-	for field, value in pairs( packet ) do
-		if (value ~=3D mobile[field]) then
-			update =3D true
-			mobile[field] =3D value
-			=

-			if field =3D=3D "flag" then
-				flagsChanged =3D true
-			end
-		end
-	end
-	=

-	if (flagsChanged) then
-		mobile:updateflags()
-	end
-	=

-	NotifyListener( "UpdateMobile"..sprintf("%d",mobile.serial) )
-
-	if (update) then
-		gCurrentRenderer:UpdateMobile( mobile )
-	end
-end
-
-function UpdateMobileFlags( mobile )
-	mobile.female			=3D BitwiseAND( mobile.flag, hex2num("0x02") ) ~=3D 0
-	mobile.poisoned			=3D BitwiseAND( mobile.flag, hex2num("0x04") ) ~=3D 0
-	mobile.yellowhits		=3D BitwiseAND( mobile.flag, hex2num("0x08") ) ~=3D 0
-	mobile.factionship		=3D BitwiseAND( mobile.flag, hex2num("0x10") ) ~=3D 0
-	mobile.explicitmovable	=3D BitwiseAND( mobile.flag, hex2num("0x20") ) ~=
=3D 0
+--[[
+mobile.notoriety: =

+	0 =3D invalid/across server line
+	1 =3D innocent (blue)
+	2 =3D guilded/ally (green)
+	3 =3D attackable but not criminal (gray)
+	4 =3D criminal (gray)
+	5 =3D enemy (orange)
+	6 =3D murderer (red)
+	7 =3D unknown use (translucent (like 0x4000 hue)) =

+Status/flag in kPacket_Naked_MOB
+	Normal =3D 0x00,
+	Unknown =3D 0x01,
+	CanAlterPaperdoll =3D 0x02,
+	Poisoned =3D 0x04,
+	GoldenHealth =3D 0x08,
+	Unknown2 =3D 0x10,
+	Unknown3 =3D 0x20,
+	WarMode =3D 0x40,
+	Hidden =3D 0x80
+]]--
+
+--[[
+Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
+0x00 - None
+0x02 - Female
+0x04 - Poisoned
+0x08 - YellowHits // healthbar gets yellow
+0x10 - FactionShip // unsure why client needs to know
+0x20 - Movable if normally not
+0x40 - War mode
+0x80 - Hidden =

+]]--
+
+function CreateMobile( packet )
+	mobile =3D {}
+	mobile.serial =3D packet.serial
+	mobile.body =3D 0
+	mobile.x =3D 0
+	mobile.y =3D 0
+	mobile.z =3D 0
+	mobile.hue =3D 0
+	mobile.flag =3D 0
+	mobile.content =3D {}
+	mobile.ismobile =3D true
+	mobile.warmode =3D false
+	=

+	mobile.stats =3D {}
+	=

+	-- SendTooltipRequest( mobile.serial )
+	=

+	-- mobile
+	mobile.update =3D UpdateMobile
+	mobile.delete =3D DeleteMobile
+	mobile.addobject =3D MobileAddObject
+	mobile.removeobject =3D MobileRemoveObject
+	mobile.doanimation =3D DoAnimation
+	mobile.getequipment =3D GetEquipment	=

+	mobile.updatestats =3D UpdateStats
+	mobile.updatehits =3D UpdateHits
+	mobile.updatestamina =3D UpdateStamina
+	mobile.updatemana =3D UpdateMana
+	mobile.setposition =3D SetMobilePosition
+	mobile.updateflags =3D UpdateMobileFlags
+	mobile.setwarmode =3D MobileSetWarmode
+	mobile.getitemonlayer =3D MobileGetItemOnLayer
+	=

+	-- derived from object
+	mobile.register =3D RegisterObject
+	mobile.deregister =3D DeRegisterObject
+	mobile.removecontent =3D RemoveContent
+		=

+	mobile:register()
+	gCurrentRenderer:AddMobile( mobile )
+	=

+	Send_QueryStatus( mobile )
+	=

+	return mobile
+end
+
+function UpdateMobile( mobile, packet )
+	local update =3D false
+	=

+	local flagsChanged =3D false
+	for field, value in pairs( packet ) do
+		if (value ~=3D mobile[field]) then
+			update =3D true
+			mobile[field] =3D value
+			=

+			if field =3D=3D "flag" then
+				flagsChanged =3D true
+			end
+		end
+	end
+	=

+	if (flagsChanged) then
+		mobile:updateflags()
+	end
+	=

+	NotifyListener( "UpdateMobile"..sprintf("%d",mobile.serial) )
+
+	if (update) then
+		gCurrentRenderer:UpdateMobile( mobile )
+	end
+end
+
+function UpdateMobileFlags( mobile )
+	mobile.female			=3D BitwiseAND( mobile.flag, hex2num("0x02") ) ~=3D 0
+	mobile.poisoned			=3D BitwiseAND( mobile.flag, hex2num("0x04") ) ~=3D 0
+	mobile.yellowhits		=3D BitwiseAND( mobile.flag, hex2num("0x08") ) ~=3D 0
+	mobile.factionship		=3D BitwiseAND( mobile.flag, hex2num("0x10") ) ~=3D 0
+	mobile.explicitmovable	=3D BitwiseAND( mobile.flag, hex2num("0x20") ) ~=
=3D 0
 	mobile:setwarmode( 		  BitwiseAND( mobile.flag, hex2num("0x40") ) ~=3D 0 )
-	mobile.hidden			=3D BitwiseAND( mobile.flag, hex2num("0x80") ) ~=3D 0
-end
-
-function MobileSetWarmode( mobile, warmode )
-	if mobile.warmode ~=3D warmode then
-		mobile.warmode =3D warmode
-		NotifyListener( "WarmodeChange"..sprintf("%d",mobile.serial) )
-	end
-end
-
-function DeleteMobile( mobile )
-	NotifyListener( "DeleteMobile"..sprintf("%d",mobile.serial) )
-	gCurrentRenderer:RemoveMobile( mobile )
-	mobile:removecontent()
-	mobile:deregister()
-end
-
-function MobileAddObject( mobile, object )
-	-- if object is mount =3D> stop animation
-	mobile.content[ object.serial ] =3D object
-	object.container =3D mobile
-	NotifyListener( "DynamicAddedToCont"..sprintf("%d",mobile.serial), object=
.serial )
-	gCurrentRenderer:UpdateMobileEquipment( mobile )
-end
-
-function MobileRemoveObject( mobile, object )
-	mobile.content[ object.serial ] =3D nil
-	object.container =3D nil
-	NotifyListener( "DynamicRemovedFromCont"..sprintf("%d",mobile.serial), ob=
ject.serial )
-	gCurrentRenderer:UpdateMobileEquipment( mobile )
-end
-
-function DoAnimation( mobile, packet )
-	gCurrentRenderer:MobileStartServerSideAnim( packet )
-end
-
-function GetEquipment( mobile, layer )
-	local dynamic =3D nil
-	for serial, object in pairs( mobile.content ) do
-		if (object.layer =3D=3D layer) then
-			dynamic =3D object
-			break
-		end
-	end
-	=

-	return dynamic
-end
-
-function UpdateStats( mobile, stats )
-	for field, value in pairs( stats ) do
-		if (value ~=3D mobile.stats[field]) then
-			update =3D true
-			mobile.stats[field] =3D value
-		end
-	end
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function UpdateHits( mobile, curHits, maxHits )
-	mobile.stats.curHits =3D curHits
-	mobile.stats.maxHits =3D maxHits
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function UpdateMana( mobile, curStamina, maxStamina )
-	mobile.stats.curMana =3D curMana
-	mobile.stats.maxMana =3D maxMana
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function UpdateStamina( mobile, curMana, maxMana )
-	mobile.stats.curStamina =3D curStamina
-	mobile.stats.maxStamina =3D maxStamina
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function SetMobilePosition( mobile, x, y, z, dir )
-	mobile.x =3D x
-	mobile.y =3D y
-	mobile.z =3D z
-	mobile.dir =3D dir
-	=

-	gCurrentRenderer:UpdateMobile( mobile )
-end
-
-function IsPlayerMobile( mobile )
-	return mobile and mobile.serial =3D=3D gPlayerBodySerial
-end
-
-function MobileGetItemOnLayer( mobile, layer )
-	for s, item in pairs( mobile.content ) do
-		if item.layer =3D=3D layer then
-			return item
-		end
-	end
-	=

-	return nil
-end
-
--- return r,g,b
-function GetNotorietyColor(n)
-	if (n =3D=3D  0) then return 0.0 , 0.0 , 0.0 end -- 0.0 =3D invalid/acros=
s server line
-	if (n =3D=3D  1) then return 0.1 , 0.1 , 1.0 end -- 1 =3D innocent (blue)
-	if (n =3D=3D  2) then return 0.0 , 1.0 , 0.0 end -- 2 =3D guilded/ally (g=
reen)
-	if (n =3D=3D  3) then return 1.0 , 1.0 , 0.3 end -- 3 =3D attackable but =
not criminal (original : gray, here : yellow)
-	if (n =3D=3D  4) then return 0.5 , 0.5 , 0.5 end -- 4 =3D criminal (gray)
-	if (n =3D=3D  5) then return 1.0 , 0.5 , 0.0 end -- 5 =3D enemy (orange)
-	if (n =3D=3D  6) then return 1.0 , 0.0 , 0.0 end -- 6 =3D murderer (red)
-	if (n =3D=3D  7) then return 1.0 , 0.0 , 1.0 end -- 7 =3D unknown use (tr=
anslucent (like 0x4000 hue)) =

-	return 0.5,0.5,0.5
-end
+	mobile.hidden			=3D BitwiseAND( mobile.flag, hex2num("0x80") ) ~=3D 0
+end
+
+function MobileSetWarmode( mobile, warmode )
+	if mobile.warmode ~=3D warmode then
+		mobile.warmode =3D warmode
+		NotifyListener( "WarmodeChange"..sprintf("%d",mobile.serial) )
+	end
+end
+
+function DeleteMobile( mobile )
+	NotifyListener( "DeleteMobile"..sprintf("%d",mobile.serial) )
+	gCurrentRenderer:RemoveMobile( mobile )
+	mobile:removecontent()
+	mobile:deregister()
+end
+
+function MobileAddObject( mobile, object )
+	-- if object is mount =3D> stop animation
+	mobile.content[ object.serial ] =3D object
+	object.container =3D mobile
+	NotifyListener( "DynamicAddedToCont"..sprintf("%d",mobile.serial), object=
.serial )
+	gCurrentRenderer:UpdateMobileEquipment( mobile )
+end
+
+function MobileRemoveObject( mobile, object )
+	mobile.content[ object.serial ] =3D nil
+	object.container =3D nil
+	NotifyListener( "DynamicRemovedFromCont"..sprintf("%d",mobile.serial), ob=
ject.serial )
+	gCurrentRenderer:UpdateMobileEquipment( mobile )
+end
+
+function DoAnimation( mobile, packet )
+	gCurrentRenderer:MobileStartServerSideAnim( packet )
+end
+
+function GetEquipment( mobile, layer )
+	local dynamic =3D nil
+	for serial, object in pairs( mobile.content ) do
+		if (object.layer =3D=3D layer) then
+			dynamic =3D object
+			break
+		end
+	end
+	=

+	return dynamic
+end
+
+function UpdateStats( mobile, stats )
+	for field, value in pairs( stats ) do
+		if (value ~=3D mobile.stats[field]) then
+			update =3D true
+			mobile.stats[field] =3D value
+		end
+	end
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function UpdateHits( mobile, curHits, maxHits )
+	mobile.stats.curHits =3D curHits
+	mobile.stats.maxHits =3D maxHits
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function UpdateMana( mobile, curStamina, maxStamina )
+	mobile.stats.curMana =3D curMana
+	mobile.stats.maxMana =3D maxMana
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function UpdateStamina( mobile, curMana, maxMana )
+	mobile.stats.curStamina =3D curStamina
+	mobile.stats.maxStamina =3D maxStamina
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function SetMobilePosition( mobile, x, y, z, dir )
+	mobile.x =3D x
+	mobile.y =3D y
+	mobile.z =3D z
+	mobile.dir =3D dir
+	=

+	gCurrentRenderer:UpdateMobile( mobile )
+end
+
+function IsPlayerMobile( mobile )
+	return mobile and mobile.serial =3D=3D gPlayerBodySerial
+end
+
+function MobileGetItemOnLayer( mobile, layer )
+	for s, item in pairs( mobile.content ) do
+		if item.layer =3D=3D layer then
+			return item
+		end
+	end
+	=

+	return nil
+end
+
+-- return r,g,b
+function GetNotorietyColor(n)
+	if (n =3D=3D  0) then return 0.0 , 0.0 , 0.0 end -- 0.0 =3D invalid/acros=
s server line
+	if (n =3D=3D  1) then return 0.1 , 0.1 , 1.0 end -- 1 =3D innocent (blue)
+	if (n =3D=3D  2) then return 0.0 , 1.0 , 0.0 end -- 2 =3D guilded/ally (g=
reen)
+	if (n =3D=3D  3) then return 1.0 , 1.0 , 0.3 end -- 3 =3D attackable but =
not criminal (original : gray, here : yellow)
+	if (n =3D=3D  4) then return 0.5 , 0.5 , 0.5 end -- 4 =3D criminal (gray)
+	if (n =3D=3D  5) then return 1.0 , 0.5 , 0.0 end -- 5 =3D enemy (orange)
+	if (n =3D=3D  6) then return 1.0 , 0.0 , 0.0 end -- 6 =3D murderer (red)
+	if (n =3D=3D  7) then return 1.0 , 0.0 , 1.0 end -- 7 =3D unknown use (tr=
anslucent (like 0x4000 hue)) =

+	return 0.5,0.5,0.5
+end
+
+
+-- Fighting - Swing [0x2F] 10bytes
+-- TODO : handle animation
+function gPacketHandler.kPacket_Swing()
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local unknown1 =3D input:PopNetUint8()
+	local attacker_serial =3D input:PopNetUint32()
+	local defender_serial =3D input:PopNetUint32()
+	printf("NET: Swing Attack Animation, attacker=3D0x%08x defender=3D0x%08x\=
n",attacker_serial,defender_serial)
+end
+
+-- TODO : what is the result of this packet?
+--BYTE cmd =

+--BYTE action (2=3Dghost, 1=3Dresurrect, 0=3Dfrom server)
+function gPacketHandler.kPacket_Death()
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local action =3D input:PopNetUint8()
+	print("NET: Server sends, that player is now (2=3Dghost, 1=3Dresurrect, 0=
=3Dfrom server)=3D"..action)
+end



From no-reply at zwischenwelt.org  Sun Aug 12 17:49:15 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 15:49:15 -0000
Subject: [Iris-commit] [IRIS] r1340 - /trunk/data/lua/net/net.mobile.lua
Message-ID: <20070812154915.41C7B1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 12 17:49:14 2007
New Revision: 1340

Log:
syncing for merge

Modified:
    trunk/data/lua/net/net.mobile.lua

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Sun Aug 12 17:49:14 2007
@@ -68,7 +68,7 @@
 		end
 		itemdata.artid =3D BitwiseAND(itemdata.artid,hex2num("0x7fff"))
 		if (equipmentdata[itemdata.layer]) then print("warning ! Equipped_MOB : =
layer contains more than one item",itemdata.layer) end
-		equipmentdata[itemdata.layer] =3D item
+		equipmentdata[itemdata.layer] =3D itemdata
 	end
 	=

 	CreateOrUpdateMobile(mobiledata,equipmentdata)



From no-reply at zwischenwelt.org  Sun Aug 12 17:49:48 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 15:49:48 -0000
Subject: [Iris-commit] [IRIS] r1341 -
	/branches/knut/data/lua/net/net.mobile.lua
Message-ID: <20070812154949.3D3F11524001@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 12 17:49:48 2007
New Revision: 1341

Log:
syncing for merge

Modified:
    branches/knut/data/lua/net/net.mobile.lua

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Sun Aug 12 17:49:48 2007
@@ -68,7 +68,7 @@
 		end
 		itemdata.artid =3D BitwiseAND(itemdata.artid,hex2num("0x7fff"))
 		if (equipmentdata[itemdata.layer]) then print("warning ! Equipped_MOB : =
layer contains more than one item",itemdata.layer) end
-		equipmentdata[itemdata.layer] =3D item
+		equipmentdata[itemdata.layer] =3D itemdata
 	end
 	=

 	CreateOrUpdateMobile(mobiledata,equipmentdata)



From no-reply at zwischenwelt.org  Sun Aug 12 23:29:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 21:29:16 -0000
Subject: [Iris-commit] [IRIS] r1342 - in /trunk/data/lua:
 gui/gui.paperdoll.lua net/net.mobile.lua obj/obj.main.lua
Message-ID: <20070812212917.1B3771524001@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 12 23:29:15 2007
New Revision: 1342

Log:
syncing for merge

Modified:
    trunk/data/lua/gui/gui.paperdoll.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/obj/obj.main.lua

Modified: trunk/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.paperdoll.lua (original)
+++ trunk/data/lua/gui/gui.paperdoll.lua Sun Aug 12 23:29:15 2007
@@ -36,10 +36,6 @@
 -- TODO : admin char paperdoll body broken : bodyid,bodygumpid =3D     987=
     0x03db  : body gump id unknown unknown  ( GM admin robe)
 -- TODO : gump.def must be parsed, simple format
 =

-
-gMobileWithPaperdoll =3D nil
-gSearchFullPaperDollHack =3D false -- if this is true, the paperdoll is op=
ened for some mobile with at least 2 equipped items instead of the player (=
usefull for debug with "naked" admin-chars)
-
 gPaperdolls =3D {}
 =

 -- rebuild needed on update to have correct layerorder
@@ -309,9 +305,6 @@
 =

 		local playermobile =3D GetPlayerMobile()
 		=

-		-- just a little hack to get a usefull paperdoll for testing, as my test=
char seems to be naked besides backpack
-		if (gMobileWithPaperdoll and gSearchFullPaperDollHack) then playermobile=
 =3D gMobileWithPaperdoll end =

-		=

 		if (playermobile) then =

 			print("player serial",playermobile.serial)
 			Send_DoubleClick(playermobile.serial)

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Sun Aug 12 23:29:15 2007
@@ -4,15 +4,15 @@
 	local id =3D input:PopNetUint8()
 	=

 	local mobiledata =3D {}
-	mobiledata.serial =3D input:PopNetUint32()
-	mobiledata.artid =3D input:PopNetUint16()
-	mobiledata.xloc =3D input:PopNetUint16()
-	mobiledata.yloc =3D input:PopNetUint16()
-	mobiledata.zloc =3D input:PopInt8()
-	mobiledata.dir =3D input:PopNetUint8()
-	mobiledata.hue =3D input:PopNetUint16() -- hue/skin color
-	mobiledata.flag =3D input:PopNetUint8()
-	mobiledata.notoriety =3D input:PopNetUint8()
+	mobiledata.serial		=3D input:PopNetUint32()
+	mobiledata.artid 		=3D input:PopNetUint16()
+	mobiledata.xloc	 		=3D input:PopNetUint16()
+	mobiledata.yloc	 		=3D input:PopNetUint16()
+	mobiledata.zloc	 		=3D input:PopInt8()
+	mobiledata.dir			=3D input:PopNetUint8()
+	mobiledata.hue			=3D input:PopNetUint16() -- hue/skin color
+	mobiledata.flag			=3D input:PopNetUint8()
+	mobiledata.notoriety	=3D input:PopNetUint8()
 	=

 	CreateOrUpdateMobile(mobiledata)
 end
@@ -25,8 +25,8 @@
 	local iPacketSize =3D input:PopNetUint16()
 	=

 	local mobiledata =3D {}
-	mobiledata.serial =3D input:PopNetUint32()
-	mobiledata.artid =3D input:PopNetUint16()
+	mobiledata.serial	=3D input:PopNetUint32()
+	mobiledata.artid	=3D input:PopNetUint16()
 =

 	-- this is related to corpse stuff, some encoded modelid
 	if (TestBit(mobiledata.serial,hex2num("0x80000000"))) then
@@ -41,14 +41,14 @@
 			mobiledata.dir2 =3D input:PopNetUint16()
 	else 	mobiledata.dir2 =3D -1 end
 =

-	mobiledata.zloc =3D input:PopInt8()
-	mobiledata.dir =3D input:PopNetUint8()
-	mobiledata.hue =3D input:PopNetUint16()  -- dye/skin color
-	mobiledata.flag =3D input:PopNetUint8()
-	mobiledata.notoriety =3D input:PopNetUint8() -- TODO : (2's complement si=
gned)
-	=

-	mobiledata.serial	=3D BitwiseAND(mobiledata.serial,hex2num("0x7fffffff"))
-	mobiledata.xloc		=3D BitwiseAND(mobiledata.xloc,hex2num("0x7fff"))
+	mobiledata.zloc			=3D input:PopInt8()
+	mobiledata.dir			=3D input:PopNetUint8()
+	mobiledata.hue			=3D input:PopNetUint16()  -- dye/skin color
+	mobiledata.flag			=3D input:PopNetUint8()
+	mobiledata.notoriety	=3D input:PopNetUint8() -- TODO : (2's complement si=
gned)
+	=

+	mobiledata.serial		=3D BitwiseAND(mobiledata.serial,hex2num("0x7fffffff"))
+	mobiledata.xloc			=3D BitwiseAND(mobiledata.xloc,hex2num("0x7fff"))
 	=

 	local equipmentdata =3D {}
 =

@@ -75,69 +75,26 @@
 	ResetWalkQueue()
 end
 =

-
 -- 0x20 Teleport packet (also known as ProtocolRecv_Draw_Player)
 -- Note: Only used with the character being played by the client. =

 -- TODO : center cam on player etc. , check z_location on the ground
 function gPacketHandler.kPacket_Teleport()
-	gLastResyncRequest =3D nil
-	--ResetWalkQueue()
-
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local player_id =3D input:PopNetUint32()
-	local player_bodytype =3D input:PopNetUint16()
-	local unknown1 =3D input:PopNetUint8()
-	local player_skin_hue =3D input:PopNetUint16()
-	local player_status =3D input:PopNetUint8()
-	local player_xloc =3D input:PopNetUint16()
-	local player_yloc =3D input:PopNetUint16()
-	local unknown2 =3D input:PopNetUint16()
-	local player_dir =3D input:PopNetUint8()
-	local player_zloc =3D input:PopInt8()
-	=

-	local bPlayerRunning =3D BitwiseAND(player_dir,kWalkFlag_Run) ~=3D 0
-	local fullplayerdir =3D player_dir
-	player_dir =3D BitwiseAND(player_dir,hex2num("0x07"))
-	=

-	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
-
-	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XLoc: =
%i YLoc: %i ZLoc: %i Dir: [%s]\n",
-			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gPlaye=
rDir or 0] or ""))
-	=

-	-- TODO : (Check if char is in Boat!)
-
-	printdebug("login",sprintf("NET: Draw_Player: id: %i player_id: %i body: =
%i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
-			id, player_id, player_bodytype, player_xloc, player_yloc, player_zloc, =
fullplayerdir, gDirection[player_dir] or ""))
-
-	-- Check if Player is already on Teleported Pos
-	if (gPlayerXLoc ~=3D player_xloc or gPlayerYLoc ~=3D player_yloc or
-		gPlayerZLoc ~=3D player_zloc or gPlayerDir ~=3D player_dir) then
-		SetPlayerPos(player_xloc,player_yloc,player_zloc,fullplayerdir)
-		print("Player is teleported.")
-	else
-		print("Player not teleported, because already on the same pos+dir!")
-	end
-
-	UpdatePlayerBodySerial(player_id)
-	local playerMobile=3DGetPlayerMobile()
-	if (playerMobile) then
-		if (playerMobile.artid ~=3D player_bodytype) then
-			print("Change PC Bodytype=3D"..player_bodytype)
-			playerMobile.artid=3Dplayer_bodytype
-
-			-- currently only for human (not elfs)
-			if ( (playerMobile.artid=3D=3D402) or (playerMobile.artid=3D=3D403) or
-				 (playerMobile.artid=3D=3D607) or (playerMobile.artid=3D=3D608) or
-				 (playerMobile.artid=3D=3D970)) then
-				print("TODO : pc character is now ghost. new bodymodel=3D"..player_bod=
ytype)
-			end
-
-			gCurrentRenderer:UpdateMobile( playerMobile )
-		end
-	end
-
-	ResetWalkQueue() -- todo : (here or only if setplayerpos is done?)
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	=

+	local mobiledata =3D {}
+	mobiledata.serial				=3D input:PopNetUint32()
+	mobiledata.artid				=3D input:PopNetUint16()
+	mobiledata.teleport_unknown1 	=3D input:PopNetUint8()
+	mobiledata.hue 					=3D input:PopNetUint16()
+	mobiledata.flag 				=3D input:PopNetUint8()
+	mobiledata.xloc 				=3D input:PopNetUint16()
+	mobiledata.yloc 				=3D input:PopNetUint16()
+	mobiledata.teleport_unknown2	=3D input:PopNetUint16()
+	mobiledata.dir 					=3D input:PopNetUint8()
+	mobiledata.zloc 				=3D input:PopInt8()
+	=

+	MobileNotifyTeleport(mobiledata)
 end
 =

 -- Character Animation (0x6e)
@@ -145,17 +102,17 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 =

-	local anim =3D {}
-	anim.mobileserial	=3D input:PopNetUint32()	=

-	anim.m_animation		=3D input:PopNetUint16()
-	anim.m_framecount	=3D input:PopNetUint16()
-	anim.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D twic=
e / 0 =3D repeat forever)
-	anim.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3Dback=
wards)
-	anim.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repeat)
-	anim.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - Too =
slow to watch)
-	printdebug("animation","Animation "..vardump2(anim))
-	=

-	gCurrentRenderer:MobileStartServerSideAnim(anim)
+	local animdata =3D {}
+	animdata.mobileserial	=3D input:PopNetUint32()	=

+	animdata.m_animation		=3D input:PopNetUint16()
+	animdata.m_framecount	=3D input:PopNetUint16()
+	animdata.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D =
twice / 0 =3D repeat forever)
+	animdata.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3D=
backwards)
+	animdata.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 rep=
eat)
+	animdata.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - =
Too slow to watch)
+	printdebug("animation","Animation "..vardump2(animdata))
+	=

+	MobileStartServerSideAnim(animdata)
 end
 =

 -- Note: For characters other than the player, curHits and maxHits are not=
 the actual values.

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Sun Aug 12 23:29:15 2007
@@ -69,7 +69,7 @@
 end
 =

 =

--- called from kPacket_Naked_MOB and kPacket_Equipped_MOB
+-- called from kPacket_Naked_MOB kPacket_Equipped_MOB kPacket_Teleport
 function CreateOrUpdateMobile (mobiledata,equipmentdata)
 	local mobile =3D GetMobile(mobiledata.serial)
 	if (not mobile) then mobile =3D KNUTMERGETEMP_CREATE_EMPTY_MOBILE(mobiled=
ata.serial) end
@@ -84,7 +84,7 @@
 	-- mobile.hue			=

 	-- mobile.flag			=

 	-- mobile.notoriety	=

-	-- mobile.amount	-- only kPacket_Equipped_MOB, corpse related
+	-- mobile.amount	-- only kPacket_Equipped_MOB, corpse related ?
 	-- mobile.dir2		-- only kPacket_Equipped_MOB, unknown
 	=

 	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer =
-- TODO : is this obsolete since knut ?
@@ -98,22 +98,91 @@
 		=

 		for layer,itemdata in pairs(equipmentdata) do
 			local item =3D KNUTMERGETEMP_CREATE_EMPTY_ITEM(itemdata.serial) -- dyna=
mic ? =

+			=

 			for k,v in pairs(itemdata) do item[k] =3D v end
-			item.mobile =3D mobile
-			item.mobile_serial =3D mobile.serial
 			-- item.serial
 			-- item.artid
 			-- item.layer
 			-- item.hue
+			=

+			item.mobile =3D mobile
+			item.mobile_serial =3D mobile.serial
 			mobile.equipment[item.layer] =3D item
-			gMobileItemsBySerial[item.serial] =3D item -- TODO : obsolete ??
+			gMobileItemsBySerial[item.serial] =3D item -- TODO : obsoleted by knut =
merge ??
 		end
-		-- OBSOLETE : if (equipcount > 2) then gMobileWithPaperdoll =3D mobile e=
nd
 	end
 	=

 	UpdateMobile(mobile)
 	if (equipmentdata) then UpdateMobileEquipment(mobile) end
-end
+	return mobile
+end
+
+
+-- called from kPacket_Teleport
+function MobileNotifyTeleport	(mobiledata)
+	--mobiledata.serial				=

+	--mobiledata.artid				=

+	--mobiledata.teleport_unknown1 	=

+	--mobiledata.hue 					=

+	--mobiledata.flag 				=

+	--mobiledata.xloc 				=

+	--mobiledata.yloc 				=

+	--mobiledata.teleport_unknown2	=

+	--mobiledata.dir 					=

+	--mobiledata.zloc
+	-- TODO : knutmerge ??  : local mobile =3D CreateOrUpdateMobile(mobiledat=
a)	=

+	=

+	local bPlayerRunning =3D BitwiseAND(mobiledata.dir,kWalkFlag_Run) ~=3D 0
+	local fullplayerdir =3D mobiledata.dir
+	mobiledata.dir =3D BitwiseAND(mobiledata.dir,hex2num("0x07"))
+	=

+	gLastResyncRequest =3D nil
+	--ResetWalkQueue()
+	=

+	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
+
+	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XLoc: =
%i YLoc: %i ZLoc: %i Dir: [%s]\n",
+			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gPlaye=
rDir or 0] or ""))
+	=

+	-- TODO : (Check if char is in Boat!)
+
+	printdebug("login",sprintf("NET: Draw_Player: id: %i mobiledata.serial: %=
i body: %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
+			id, mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yl=
oc, mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
+
+	-- Check if Player is already on Teleported Pos
+	if (gPlayerXLoc ~=3D mobiledata.xloc or gPlayerYLoc ~=3D mobiledata.yloc =
or
+		gPlayerZLoc ~=3D mobiledata.zloc or gPlayerDir ~=3D mobiledata.dir) then
+		SetPlayerPos(mobiledata.xloc,mobiledata.yloc,mobiledata.zloc,fullplayerd=
ir)
+		print("Player is teleported.")
+	else
+		print("Player not teleported, because already on the same pos+dir!")
+	end
+
+	UpdatePlayerBodySerial(mobiledata.serial)
+	local playerMobile=3DGetPlayerMobile()
+	if (playerMobile) then
+		if (playerMobile.artid ~=3D mobiledata.artid) then
+			print("Change PC Bodytype=3D"..mobiledata.artid)
+			playerMobile.artid=3Dmobiledata.artid
+
+			-- currently only for human (not elfs)
+			if ( (playerMobile.artid=3D=3D402) or (playerMobile.artid=3D=3D403) or
+				 (playerMobile.artid=3D=3D607) or (playerMobile.artid=3D=3D608) or
+				 (playerMobile.artid=3D=3D970)) then
+				print("TODO : pc character is now ghost. new bodymodel=3D"..mobiledata=
.artid)
+			end
+
+			gCurrentRenderer:UpdateMobile( playerMobile )
+		end
+	end
+
+	ResetWalkQueue() -- todo : (here or only if setplayerpos is done?)
+end
+
+function MobileStartServerSideAnim (animdata)
+	gCurrentRenderer:MobileStartServerSideAnim(animdata)
+end
+
 =

 function DestroyMobileBySerial (serial) =

 	local mobile =3D GetMobile(serial)
@@ -134,5 +203,4 @@
 	CloseStatus(mobile)
 	=

 	mobile.serial =3D nil
-	=

-end
+end



From no-reply at zwischenwelt.org  Sun Aug 12 23:29:22 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 21:29:22 -0000
Subject: [Iris-commit] [IRIS] r1343 - in /branches/knut/data/lua:
 net/net.mobile.lua obj/obj.main.lua
Message-ID: <20070812212922.A76C81524001@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Aug 12 23:29:22 2007
New Revision: 1343

Log:
syncing for merge

Modified:
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/obj/obj.main.lua

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Sun Aug 12 23:29:22 2007
@@ -79,35 +79,22 @@
 -- Note: Only used with the character being played by the client. =

 -- TODO : center cam on player etc. , check z_location on the ground
 function gPacketHandler.kPacket_Teleport()
-	gLastResyncRequest =3D nil
-	--ResetWalkQueue()
-	=

-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	packet =3D {}
-	packet.serial	=3D input:PopNetUint32()
-	packet.body	=3D input:PopNetUint16()
-	packet.unknown1 =3D input:PopNetUint8()
-	packet.hue	=3D input:PopNetUint16()
-	packet.flag	=3D input:PopNetUint8()
-	packet.x	=3D input:PopNetUint16()
-	packet.y	=3D input:PopNetUint16()
-	packet.unknown2 =3D input:PopNetUint16()
-	packet.dir	=3D input:PopNetUint8()
-	packet.z	=3D input:PopInt8()
-	=

-	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
-
-	local mobile =3D GetMobile(packet.serial)
-	if (not mobile) then
-		mobile =3D CreateMobile( packet )
-	end
-	=

-	mobile:update( packet )
-	-- set player pos after updating mobile, otherwise the mobile may be dele=
ted as its out of range
-	SetPlayerPos( packet.x, packet.y, packet.z, packet.dir )
-
-	ResetWalkQueue()
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	=

+	local mobiledata =3D {}
+	mobiledata.serial				=3D input:PopNetUint32()
+	mobiledata.artid				=3D input:PopNetUint16()
+	mobiledata.teleport_unknown1 	=3D input:PopNetUint8()
+	mobiledata.hue 					=3D input:PopNetUint16()
+	mobiledata.flag 				=3D input:PopNetUint8()
+	mobiledata.xloc 				=3D input:PopNetUint16()
+	mobiledata.yloc 				=3D input:PopNetUint16()
+	mobiledata.teleport_unknown2	=3D input:PopNetUint16()
+	mobiledata.dir 					=3D input:PopNetUint8()
+	mobiledata.zloc 				=3D input:PopInt8()
+	=

+	MobileNotifyTeleport(mobiledata)
 end
 =

 -- Character Animation (0x6e)
@@ -115,20 +102,17 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	=

-	local anim =3D {}
-	anim.mobileserial	=3D input:PopNetUint32()	=

-	anim.m_animation	=3D input:PopNetUint16()
-	anim.m_framecount	=3D input:PopNetUint16()
-	anim.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D twic=
e / 0 =3D repeat forever)
-	anim.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3Dback=
wards)
-	anim.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 repeat)
-	anim.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - Too =
slow to watch)
-	printdebug("animation","Animation "..vardump2(anim))
-	=

-	local mobile =3D GetMobile(anim.mobileserial)
-	if (mobile) then
-		mobile:DoAnimation( anim )
-	end
+	local animdata =3D {}
+	animdata.mobileserial	=3D input:PopNetUint32()	=

+	animdata.m_animation		=3D input:PopNetUint16()
+	animdata.m_framecount	=3D input:PopNetUint16()
+	animdata.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D =
twice / 0 =3D repeat forever)
+	animdata.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3D=
backwards)
+	animdata.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 rep=
eat)
+	animdata.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - =
Too slow to watch)
+	printdebug("animation","Animation "..vardump2(animdata))
+	=

+	MobileStartServerSideAnim(animdata)
 end
 =

 -- Note: For characters other than the player, curHits and maxHits are not=
 the actual values.

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Sun Aug 12 23:29:22 2007
@@ -54,3 +54,21 @@
 		end
 	end
 end
+
+-- called from kPacket_Teleport
+function MobileNotifyTeleport	(mobiledata)
+	gLastResyncRequest =3D nil
+	--ResetWalkQueue()
+	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
+
+	CreateOrUpdateMobile( mobiledata )
+	-- set player pos after updating mobile, otherwise the mobile may be dele=
ted as its out of range
+	SetPlayerPos( mobiledata.xloc, mobiledata.yloc, mobiledata.zloc, teleport=
data.dir )
+
+	ResetWalkQueue()
+end
+
+function MobileStartServerSideAnim (animdata)
+	local mobile =3D GetMobile(animdata.mobileserial)
+	if (mobile) then mobile:DoAnimation( animdata ) end
+end



From no-reply at zwischenwelt.org  Mon Aug 13 01:33:17 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 23:33:17 -0000
Subject: [Iris-commit] [IRIS] r1344 - in /trunk/data/lua: gui/gui.status.lua
 net/net.mobile.lua obj/obj.main.lua obj/obj.mobile.lua
Message-ID: <20070812233317.24FCA1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 01:33:16 2007
New Revision: 1344

Log:
syncing for merge

Modified:
    trunk/data/lua/gui/gui.status.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua

Modified: trunk/data/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.status.lua (original)
+++ trunk/data/lua/gui/gui.status.lua Mon Aug 13 01:33:16 2007
@@ -38,7 +38,7 @@
 		--[[
 		stats.sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Female
 		stats.gold		=3D input:PopNetUint32()
-		stats.armorC	=3D input:PopNetUint16() -- resistPhysical (old clients: AC=
).
+		stats.armor		=3D input:PopNetUint16() -- resistPhysical (old clients: AC=
).
 		stats.curWeight=3D input:PopNetUint16()
 		stats.maxWeight =3D input:PopNetUint16()
 		stats.race		 =3D input:PopNetUint8()
@@ -64,9 +64,9 @@
 					local l =3D {	str =3D "status_str", dex =3D "status_dex", int =3D "st=
atus_int",
 								curHits =3D "status_hits", 		maxHits =3D "status_maxhits",
 								curMana =3D "status_mana", 		maxMana =3D "status_maxmana",
-								curSta =3D "status_stamina", 		maxSta =3D "status_maxstamina",
+								curStamina =3D "status_stamina", 	maxStamina =3D "status_maxstamin=
a",
 								luck =3D "status_luck", 			gold =3D "status_gold",
-								armorC =3D "status_armor", 		statcap =3D "status_statcap", fireres=
ist =3D "status_fireres",
+								armor =3D "status_armor", 		statcap =3D "status_statcap", fireresi=
st =3D "status_fireres",
 								coldresist =3D "status_coldres", 	poisonresist =3D "status_poisres=
",
 								energyresist =3D "status_energres" }
 					=


Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Mon Aug 13 01:33:16 2007
@@ -123,47 +123,33 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local iPacketSize =3D input:PopNetUint16()
-	=

+
 	local stats =3D {}
-	mobile_id	=3D input:PopNetUint32()
-	local mobilename =3D input:PopFilledString(30)
-	=

-	--printf("NET : kPacket_Mobile_Stats mobile=3D0x%08x name=3D%s\n",mobile_=
id,mobilename)
-	=

-	local mobile =3D GetMobile(mobile_id)
-	local oldhp =3D 0
-	if (mobile) then
-		if (mobile.stats) then =

-			oldhp =3D mobile.stats.curHits	-- save old HitPoints for notification (=
see below)
-			stats =3D mobile.stats					-- is stats, use old stats and update it
-		else
-			print("mobile has no stats yet")
-		end
-	end
-
-	stats.curHits		=3D input:PopNetUint16()
+	local mobileserial		=3D input:PopNetUint32()
+	stats.name				=3D input:PopFilledString(30)
+	=

+	stats.curHits			=3D input:PopNetUint16()
 	stats.maxHits 			=3D input:PopNetUint16()
-	stats.flagChangeNameFlag	=3D input:PopNetUint8()		--(0x1 =3D allowed, 0 =
=3D not allowed)
-	stats.bCanChangeName =3D stats.flagChangeNameFlag ~=3D 0
-	stats.flag =3D input:PopNetUint8()
+	stats.bCanChangeName	=3D input:PopNetUint8() ~=3D 0	--(0x1 =3D allowed, 0=
 =3D not allowed)
+	stats.flag 				=3D input:PopNetUint8()
 	=

 	-- more data following
 	if (in_array( stats.flag, {1,3,4,5})) then
-		stats.sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Female
-		stats.str		=3D input:PopNetUint16()
-		stats.dex		=3D input:PopNetUint16()
-		stats.int		=3D input:PopNetUint16()
-		stats.curSta	=3D input:PopNetUint16()
-		stats.maxSta	=3D input:PopNetUint16()
-		stats.curMana	=3D input:PopNetUint16()
-		stats.maxMana	=3D input:PopNetUint16()
-		stats.gold		=3D input:PopNetUint32()
-		stats.armorC	=3D input:PopNetUint16() -- resistPhysical (old clients: AC=
).
-		stats.curWeight=3D input:PopNetUint16()
+		stats.sex			=3D input:PopNetUint8() -- * 0x00 - Male  * 0x01 - Female
+		stats.str			=3D input:PopNetUint16()
+		stats.dex			=3D input:PopNetUint16()
+		stats.int			=3D input:PopNetUint16()
+		stats.curStamina	=3D input:PopNetUint16()
+		stats.maxStamina	=3D input:PopNetUint16()
+		stats.curMana		=3D input:PopNetUint16()
+		stats.maxMana		=3D input:PopNetUint16()
+		stats.gold			=3D input:PopNetUint32()
+		stats.armor			=3D input:PopNetUint16() -- resistPhysical (old clients: A=
C).
+		stats.curWeight		=3D input:PopNetUint16()
 =

 		if (stats.flag =3D=3D 5) then
-			stats.maxWeight =3D input:PopNetUint16()
-			stats.race		 =3D input:PopNetUint8()
+			stats.maxWeight	=3D input:PopNetUint16()
+			stats.race		=3D input:PopNetUint8()
 		end
 =

 		if (in_array( stats.flag, {3,4,5} )) then -- Followers (pets)
@@ -177,24 +163,16 @@
 				stats.poisonresist	=3D input:PopNetUint16()			=

 				stats.energyresist	=3D input:PopNetUint16()			=

 				stats.luck			=3D input:PopNetUint16()			=

-				stats.minDamage	=3D input:PopNetUint16()			=

-				stats.maxDamage	=3D input:PopNetUint16()			=

+				stats.minDamage		=3D input:PopNetUint16()			=

+				stats.maxDamage		=3D input:PopNetUint16()			=

 				stats.tithing		=3D input:PopNetUint32()			=

 			end
 		end
 	end
 =

-	-- Update Mobile
-	if (mobile) then
-		mobile.name=3Dmobilename
-		mobile.stats =3D stats
-		-- not needed due to normal damage packet
-		-- TODO is this ok for every server?
-		-- gCurrentRenderer:NotifyHPChange(mobile_id, oldhp, mobile.stats.curHit=
s)
-		UpdateMobile(mobile)
-	end
-	=

-	TradeUpdatePlayerGold()
+	--printf("NET : kPacket_Mobile_Stats mobile=3D0x%08x name=3D%s\n",mobiles=
erial,stats.name)
+	=

+	MobileUpdateStats(mobileserial,stats)
 end
 =

 --[[
@@ -235,25 +213,12 @@
 function gPacketHandler.kPacket_HP_Health()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobile_id,curval,maxval))
-	=

-	local mobile =3D GetMobile(mobile_id)
-	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
-	if (mobile and (maxval ~=3D 1000) and mobile.stats) then
-		if mobile.stats.curHits then
-			-- if there was a change, plop a text
-			local old =3D mobile.stats.curHits
-			gCurrentRenderer:NotifyHPChange(mobile_id, old, curval)
-		end
-		-- update values
-		mobile.stats.curHits =3D curval
-		mobile.stats.maxHits =3D maxval
-
-		UpdateMobile(mobile)
-	end
+	local mobileserial	=3D input:PopNetUint32()
+	local maxvalue 		=3D input:PopNetUint16()
+	local curvalue 		=3D input:PopNetUint16()
+	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobileserial,curvalue,maxvalue))
+	=

+	MobileUpdateHealth(mobileserial,curvalue,maxvalue)
 end
 =

 --# Update Current Mana [0xA2]
@@ -261,23 +226,12 @@
 function gPacketHandler.kPacket_Mana_Health()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobile_id,curval,maxval))
-	=

-	local mobile =3D GetMobile(mobile_id)
-	if (mobile and mobile.stats) then
-		-- update values
-		mobile.stats.curMana =3D curval
-		mobile.stats.maxMana =3D maxval
-
-		if (mobile_id =3D=3D gPlayerBodySerial) then
-			gui.SetMana(curval/maxval)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
+	local mobileserial 	=3D input:PopNetUint32()
+	local maxvalue 		=3D input:PopNetUint16()
+	local curvalue 		=3D input:PopNetUint16()
+	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobileserial,curvalue,maxvalue))
+	=

+	MobileUpdateMana(mobileserial,curvalue,maxvalue)
 end
 =

 --# Update Current Stamina [0xA3]
@@ -285,25 +239,20 @@
 function gPacketHandler.kPacket_Stamina()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curval,maxval))
-
-	local mobile =3D GetMobile(mobile_id)
-	if (mobile and mobile.stats) then
-		-- update values
-		mobile.stats.curSta =3D curval
-		mobile.stats.maxSta =3D maxval
-
-		if (mobile_id =3D=3D gPlayerBodySerial) then
-			gui.SetStamina(curval/maxval)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
-end
-
-
-
-
+	local mobileserial	=3D input:PopNetUint32()
+	local maxvalue		=3D input:PopNetUint16()
+	local curvalue		=3D input:PopNetUint16()
+	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curvalue,maxvalue))
+
+	MobileUpdateStamina(mobileserial,curvalue,maxvalue)
+end
+
+
+function gPacketHandler.kPacket_Damage()
+	local input =3D GetRecvFIFO()
+	local packetid	=3D input:PopNetUint8()
+	local serial 	=3D input:PopNetUint32()
+	local damage 	=3D input:PopNetUint16()
+	=

+	gCurrentRenderer:NotifyHPChange( serial, damage, 0 )
+end

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Mon Aug 13 01:33:16 2007
@@ -68,6 +68,27 @@
 	-- TODO : DestroyDragDropItemBySerial ?? done by CancelUODragDrop
 end
 =

+
+function DestroyMobileBySerial (serial) =

+	local mobile =3D GetMobile(serial)
+	if (not mobile) then return end
+	=

+	CloseStatus(mobile)
+
+	-- clean up equipment
+	if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
+		DestroyMobileItem(item)
+	end end
+	=

+	gCurrentRenderer:RemoveMobile( mobile )
+	=

+	KNUTMERGETEMP_DEL_MOBILE(serial)
+
+	-- destroy Status Gump from NPC
+	CloseStatus(mobile)
+	=

+	mobile.serial =3D nil
+end
 =

 -- called from kPacket_Naked_MOB kPacket_Equipped_MOB kPacket_Teleport
 function CreateOrUpdateMobile (mobiledata,equipmentdata)
@@ -146,8 +167,8 @@
 	=

 	-- TODO : (Check if char is in Boat!)
 =

-	printdebug("login",sprintf("NET: Draw_Player: id: %i mobiledata.serial: %=
i body: %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
-			id, mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yl=
oc, mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
+	printdebug("login",sprintf("NET: Draw_Player: mobiledata.serial: %i body:=
 %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
+			mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yloc, =
mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
 =

 	-- Check if Player is already on Teleported Pos
 	if (gPlayerXLoc ~=3D mobiledata.xloc or gPlayerYLoc ~=3D mobiledata.yloc =
or
@@ -183,24 +204,66 @@
 	gCurrentRenderer:MobileStartServerSideAnim(animdata)
 end
 =

-
-function DestroyMobileBySerial (serial) =

-	local mobile =3D GetMobile(serial)
-	if (not mobile) then return end
-	=

-	CloseStatus(mobile)
-
-	-- clean up equipment
-	if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
-		DestroyMobileItem(item)
-	end end
-	=

-	gCurrentRenderer:RemoveMobile( mobile )
-	=

-	KNUTMERGETEMP_DEL_MOBILE(serial)
-
-	-- destroy Status Gump from NPC
-	CloseStatus(mobile)
-	=

-	mobile.serial =3D nil
-end
+function MobileUpdateStats (mobileserial,stats)
+	local mobile =3D GetMobile(mobileserial)
+	-- Update Mobile
+	if (mobile) then
+		-- local oldhp =3D mobile.stats.curHits or stats.curHits
+		mobile.name =3D stats.name
+		mobile.stats =3D stats
+		-- not needed due to normal damage packet
+		-- TODO is this ok for every server?
+		-- gCurrentRenderer:NotifyHPChange(mobileserial, oldhp, mobile.stats.cur=
Hits)
+		UpdateMobile(mobile)
+	end
+	=

+	TradeUpdatePlayerGold()
+end
+
+function MobileUpdateHealth (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
+	if (mobile and (maxvalue ~=3D 1000) and mobile.stats) then
+		if mobile.stats.curHits then
+			-- if there was a change, plop a text
+			local old =3D mobile.stats.curHits
+			gCurrentRenderer:NotifyHPChange(mobileserial, old, curvalue)
+		end
+		-- update values
+		mobile.stats.curHits =3D curvalue
+		mobile.stats.maxHits =3D maxvalue
+
+		UpdateMobile(mobile)
+	end
+end
+
+function MobileUpdateMana (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile and mobile.stats) then
+		-- update values
+		mobile.stats.curMana =3D curvalue
+		mobile.stats.maxMana =3D maxvalue
+
+		if (mobileserial =3D=3D gPlayerBodySerial) then
+			gui.SetMana(curvalue/maxvalue)
+			-- update big_stats window
+			UpdateStatusAos()
+		end
+	end
+end
+
+function MobileUpdateStamina(mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile and mobile.stats) then
+		-- update values
+		mobile.stats.curStamina =3D curvalue
+		mobile.stats.maxStamina =3D maxvalue
+
+		if (mobileserial =3D=3D gPlayerBodySerial) then
+			gui.SetStamina(curvalue/maxvalue)
+			-- update big_stats window
+			UpdateStatusAos()
+		end
+	end
+end
+	=


Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Mon Aug 13 01:33:16 2007
@@ -80,7 +80,7 @@
 			-- for player
 			gui.SetHitpoints(mobile.stats.curHits/mobile.stats.maxHits)
 			if (mobile.stats.curMana) then gui.SetMana(mobile.stats.curMana/mobile.=
stats.maxMana) end
-			if (mobile.stats.curSta) then gui.SetStamina(mobile.stats.curSta/mobile=
.stats.maxSta) end
+			if (mobile.stats.curStamina) then gui.SetStamina(mobile.stats.curStamin=
a/mobile.stats.maxStamina) end
 			-- update big_stats window
 			UpdateStatusAos()
 		else



From no-reply at zwischenwelt.org  Mon Aug 13 01:33:18 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 12 Aug 2007 23:33:18 -0000
Subject: [Iris-commit] [IRIS] r1345 - in /branches/knut/data/lua:
 net/net.mobile.lua obj/obj.main.lua obj/obj.mobile.lua
Message-ID: <20070812233318.C92541524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 01:33:18 2007
New Revision: 1345

Log:
syncing for merge

Modified:
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/obj/obj.main.lua
    branches/knut/data/lua/obj/obj.mobile.lua

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Mon Aug 13 01:33:18 2007
@@ -125,16 +125,17 @@
 	local iPacketSize =3D input:PopNetUint16()
 	=

 	local stats =3D {}
-	local mobileserial	=3D input:PopNetUint32()
+	local mobileserial		=3D input:PopNetUint32()
 	stats.name				=3D input:PopFilledString(30)
+	=

 	stats.curHits			=3D input:PopNetUint16()
-	stats.maxHits	 		=3D input:PopNetUint16()
-	stats.bCanChangeName	=3D input:PopNetUint8() ~=3D 0
+	stats.maxHits 			=3D input:PopNetUint16()
+	stats.bCanChangeName	=3D input:PopNetUint8() ~=3D 0	--(0x1 =3D allowed, 0=
 =3D not allowed)
 	stats.flag 				=3D input:PopNetUint8()
 	=

 	-- more data following
 	if (in_array( stats.flag, {1,3,4,5})) then
-		stats.sex			=3D input:PopNetUint8() -- * 0x00 - Male * 0x01 - Female
+		stats.sex			=3D input:PopNetUint8() -- * 0x00 - Male  * 0x01 - Female
 		stats.str			=3D input:PopNetUint16()
 		stats.dex			=3D input:PopNetUint16()
 		stats.int			=3D input:PopNetUint16()
@@ -169,10 +170,9 @@
 		end
 	end
 =

-	local mobile =3D GetMobile(mobileserial)
-	if (mobile) then
-		mobile:updatestats( stats )
-	end
+	--printf("NET : kPacket_Mobile_Stats mobile=3D0x%08x name=3D%s\n",mobiles=
erial,stats.name)
+
+	MobileUpdateStats(mobileserial,stats)
 end
 =

 --[[
@@ -213,15 +213,12 @@
 function gPacketHandler.kPacket_HP_Health()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobile_id,curval,maxval))
-	=

-	local mobile =3D GetMobile(mobile_id)
-	if (mobile) then
-		mobile:UpdateHits( curval, maxval )
-	end
+	local mobileserial =3D input:PopNetUint32()
+	local maxvalue =3D input:PopNetUint16()
+	local curvalue =3D input:PopNetUint16()
+	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobileserial,curvalue,maxvalue))
+	=

+	MobileUpdateHealth(mobileserial,curvalue,maxvalue)
 end
 =

 --# Update Current Mana [0xA2]
@@ -229,15 +226,12 @@
 function gPacketHandler.kPacket_Mana_Health()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobile_id,curval,maxval))
-
-	local mobile =3D GetMobile(mobile_id)
-	if (mobile) then
-		mobile:UpdateMana( curval, maxval )
-	end	=

+	local mobileserial	=3D input:PopNetUint32()
+	local maxvalue		=3D input:PopNetUint16()
+	local curvalue		=3D input:PopNetUint16()
+	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobileserial,curvalue,maxvalue))
+
+	MobileUpdateMana(mobileserial,curvalue,maxvalue)
 end
 =

 --# Update Current Stamina [0xA3]
@@ -245,32 +239,20 @@
 function gPacketHandler.kPacket_Stamina()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local mobile_id =3D input:PopNetUint32()
-	local maxval =3D input:PopNetUint16()
-	local curval =3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curval,maxval))
-
-	local mobile =3D GetMobile(mobile_id)
-	if (mobile) then
-		mobile:UpdateStamina( curval, maxval )
-	end
-end
+	local mobileserial	=3D input:PopNetUint32()
+	local maxvalue		=3D input:PopNetUint16()
+	local curvalue		=3D input:PopNetUint16()
+	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curvalue,maxvalue))
+
+	MobileUpdateStamina(mobileserial,curvalue,maxvalue)
+end
+
 =

 function gPacketHandler.kPacket_Damage()
 	local input =3D GetRecvFIFO()
-	local packetid =3D input:PopNetUint8()
-	local serial =3D input:PopNetUint32()
-	local damage =3D input:PopNetUint16()
+	local packetid	=3D input:PopNetUint8()
+	local serial 	=3D input:PopNetUint32()
+	local damage 	=3D input:PopNetUint16()
 	=

 	gCurrentRenderer:NotifyHPChange( serial, damage, 0 )
 end
-
--- see also Send_ClientQuery in net.login.lua
-function Send_QueryStatus( mobile )
-	local out =3D GetSendFIFO()
-	out:PushNetUint8( kPacket_Client_Query )
-	out:PushNetUint32( hex2num("0xedededed"))
-	out:PushNetUint8( hex2num("0x04") )
-	out:PushNetUint32( mobile.serial )
-	out:SendPacket()
-end

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Mon Aug 13 01:33:18 2007
@@ -72,3 +72,26 @@
 	local mobile =3D GetMobile(animdata.mobileserial)
 	if (mobile) then mobile:DoAnimation( animdata ) end
 end
+
+function MobileUpdateStats (mobileserial,stats)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then
+		mobile:updatestats( stats )
+	end
+end
+
+function MobileUpdateHealth (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then mobile:UpdateHits( curvalue, maxvalue ) end
+end
+
+function MobileUpdateMana (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then mobile:UpdateMana( curvalue, maxvalue ) end	=

+end
+
+function MobileUpdateStamina(mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then mobile:UpdateStamina( curvalue, maxvalue ) end
+end
+

Modified: branches/knut/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.mobile.lua (original)
+++ branches/knut/data/lua/obj/obj.mobile.lua Mon Aug 13 01:33:18 2007
@@ -73,7 +73,7 @@
 	mobile:register()
 	gCurrentRenderer:AddMobile( mobile )
 	=

-	Send_QueryStatus( mobile )
+	Send_ClientQuery(hex2num("0x04"),mobile.serial)
 	=

 	return mobile
 end



From no-reply at zwischenwelt.org  Mon Aug 13 02:57:30 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 00:57:30 -0000
Subject: [Iris-commit] [IRIS] r1346 - in /branches/knut/data/lua:
 net/net.dynamic.lua net/net.mobile.lua obj/obj.dynamic.lua obj/obj.main.lua
Message-ID: <20070813005730.5C8BB1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 02:57:30 2007
New Revision: 1346

Log:
syncing for merge

Modified:
    branches/knut/data/lua/net/net.dynamic.lua
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/obj/obj.dynamic.lua
    branches/knut/data/lua/obj/obj.main.lua

Modified: branches/knut/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.dynamic.lua (original)
+++ branches/knut/data/lua/net/net.dynamic.lua Mon Aug 13 02:57:30 2007
@@ -1,169 +1,142 @@
-
-
--- 0x2E  Equip Item  (single item update version of 0x78 : equipped mobile)
--- This is sent by the server to equip a single item on a character.
---Packet [2e], Length: 15, Type: Server
---2e 40 02 21 9b 20 3b 00 0b 00 00 00 03 04 5e =

-function gPacketHandler.kPacket_Equip_Item() -- ProtocolRecv_AddMobile
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	=

-	local item =3D {}
-	item.serial  =3D input:PopNetUint32() -- (always starts 0x40 in my data)
-	item.artid =3D input:PopNetUint16() -- also known as model
-	item.unknown1 =3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then prin=
t("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
-	item.layer =3D input:PopNetUint8()
-	=

-	local container_serial  =3D input:PopNetUint32() -- "container" for item
-	item.hue =3D input:PopNetUint16()
-	=

-	container =3D gObjectList[ container_serial ]
-	if (not container) then
-		return
-	end
-	=

-	dynamic =3D gObjectList[ item.serial ]
-	if (not dynamic) then
-		dynamic =3D CreateDynamic( item )
-	end
-	=

-	dynamic:update( item )	=

-	dynamic:setcontainer( container )
-end
-
-
--- Dynamics/Object Information (Variable # of bytes)
--- (recieved when item first appears on char visualrange on the ground)
---			// 14 base length
---			// +2 - Amount
---			// +2 - Hue
---			// +1 - Flags
--- TODO : here Tooltip request   0x1A  (old iris:PCK_Put)
---[[
-Packet [1a], Length: 17, Type: Server
-1a 00 11 c0 02 9d aa 00 00 00 01 15 44 44 88 9c =

-80
-]]--
-
--- show item (0x1a)
-function gPacketHandler.kPacket_Show_Item()
-	local newitem =3D {}
-	local input =3D GetRecvFIFO()
-	local popped_start =3D input:GetTotalPopped()
-	local id =3D input:PopNetUint8()
-	=

-	local iPacketSize =3D input:PopNetUint16()
-	newitem.serial =3D input:PopNetUint32() -- id =3D serial . Include the fl=
ag 0x80000000 if the item's amount is greater than one.
-	newitem.artid =3D input:PopNetUint16() -- model =3D artwork . Include the=
 flag 0x8000 if the item's stackid is greater than zero.	=

-	=

-	-- newitem.amount  (or model # for corpses)
-	if ( BitwiseAND(newitem.serial,hex2num("0x80000000")) ~=3D 0) then =

-			newitem.amount =3D input:PopNetUint16() =

-	else
-		newitem.amount =3D 1
-	end
-	=

-	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
-	=

-	-- newitem.artid_addstack : The number to add to the item's artwork when =
Amount > 1.
-	if ( BitwiseAND(newitem.artid,hex2num("0x8000")) ~=3D 0) then =

-			newitem.artid =3D newitem.artid + input:PopNetUint8() =

-	end
-
-	newitem.xloc =3D input:PopNetUint16() --only use lowest significant 15 bi=
ts)
-	newitem.yloc =3D input:PopNetUint16()
-
-	if ( BitwiseAND(newitem.xloc,hex2num("0x8000")) ~=3D 0) then
-		newitem.dir =3D input:PopNetUint8()
-	else
-		newitem.dir =3D 0
-	end
-
-	newitem.zloc =3D input:PopInt8()
-
-	newitem.hue =3D 0
-	newitem.flag =3D 0
-	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then
-			newitem.hue =3D input:PopNetUint16()
-		end
-	end
-	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then
-			newitem.flag =3D input:PopNetUint8()
-		end
-	end
-	-- item_flag : some kind of status or flags, usage unknown
-	=

-	newitem.serial	=3D BitwiseAND(newitem.serial,hex2num("0x7fffffff"))
-	newitem.artid	=3D BitwiseAND(newitem.artid,hex2num("0x7fff"))
-	newitem.xloc	=3D BitwiseAND(newitem.xloc,hex2num("0x7fff"))
-	newitem.yloc	=3D BitwiseAND(newitem.yloc,hex2num("0x3fff"))
-	=

-	dynamic =3D gObjectList[ newitem.serial ]
-	if (not dynamic) then
-		dynamic =3D CreateDynamic( newitem )
-	end
-	=

-	dynamic:update( packet )
-	dynamic:setcontainer( nil )
-end
-
--- AddItemToContainer (0x3C)
--- pol sends this after kPacket_Open_Container, runuo before, see also kPa=
cket_Object_to_Object
-function gPacketHandler.kPacket_Container_Contents() -- 0x3c
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local size =3D input:PopNetUint16()
-	local itemcount =3D input:PopNetUint16()
-	=

-	for i=3D1,itemcount do
-		local item =3D {}
-		item.serial =3D input:PopNetUint32()
-		item.artid =3D input:PopNetUint16()
-		item.artid =3D packet.artid + input:PopNetUint8()
-		item.amount =3D input:PopNetUint16()
-		item.xloc =3D input:PopNetInt16()
-		item.yloc =3D input:PopNetInt16()
-		item.zloc =3D 0
-		local ContainerSerial =3D input:PopNetUint32()
-		item.hue =3D input:PopNetUint16()
-
-		local container =3D gObjectList[ContainerSerial]
-		if (container) then
-			dynamic =3D gObjectList[item.serial]
-			if (not dynamic) then
-				dynamic =3D CreateDynamic( item )
-			end
-			=

-			dynamic:update( item )
-			dynamic:setcontainer( container )
-		end
-	end
-end
-
--- This is sent by the server to add/update a single item to a container. =
(response to player dragdrop)
-function gPacketHandler.kPacket_Object_to_Object() -- 0x25
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local item =3D {}
-	item.serial =3D input:PopNetUint32()
-	item.artid =3D input:PopNetUint16()
-	item.artid =3D packet.artid + input:PopNetUint8()
-	item.amount =3D input:PopNetUint16()
-	item.xloc =3D input:PopNetInt16()
-	item.yloc =3D input:PopNetInt16()
-	local ContainerSerial =3D input:PopNetUint32()
-	item.hue =3D input:PopNetUint16()
-
-	local container =3D gObjectList[ContainerSerial]
-	if (container) then
-		dynamic =3D gObjectList[item.serial]
-		if (not dynamic) then
-			dynamic =3D CreateDynamic( item )
-		end
-			=

-		dynamic:update( packet )
-		dynamic:setcontainer( container )
-	end
-end
+
+
+-- 0x2E  Equip Item  (single item update version of 0x78 : equipped mobile)
+-- This is sent by the server to equip a single item on a character.
+--Packet [2e], Length: 15, Type: Server
+--2e 40 02 21 9b 20 3b 00 0b 00 00 00 03 04 5e =

+function gPacketHandler.kPacket_Equip_Item() -- ProtocolRecv_AddMobile
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	=

+	local item =3D {}
+	item.serial				=3D input:PopNetUint32() -- (always starts 0x40 in my data)
+	item.artid				=3D input:PopNetUint16() -- also known as model
+	item.unknown1			=3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then pr=
int("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
+	item.layer				=3D input:PopNetUint8()
+	local container_serial	=3D input:PopNetUint32() -- "container" for item
+	item.hue				=3D input:PopNetUint16()
+	=

+	ContainerEquipItem(item,container_serial)
+end
+
+
+-- Dynamics/Object Information (Variable # of bytes)
+-- (recieved when item first appears on char visualrange on the ground)
+--			// 14 base length
+--			// +2 - Amount
+--			// +2 - Hue
+--			// +1 - Flags
+-- TODO : here Tooltip request   0x1A  (old iris:PCK_Put)
+--[[
+Packet [1a], Length: 17, Type: Server
+1a 00 11 c0 02 9d aa 00 00 00 01 15 44 44 88 9c =

+80
+]]--
+
+-- show item (0x1a)
+function gPacketHandler.kPacket_Show_Item()
+	local newitem =3D {}
+	local input =3D GetRecvFIFO()
+	local popped_start =3D input:GetTotalPopped()
+	local id =3D input:PopNetUint8()
+	=

+	local iPacketSize =3D input:PopNetUint16()
+	newitem.serial =3D input:PopNetUint32() -- id =3D serial . Include the fl=
ag 0x80000000 if the item's amount is greater than one.
+	newitem.artid =3D input:PopNetUint16() -- model =3D artwork . Include the=
 flag 0x8000 if the item's stackid is greater than zero.	=

+	=

+	-- newitem.amount  (or model # for corpses)
+	if ( BitwiseAND(newitem.serial,hex2num("0x80000000")) ~=3D 0) then =

+			newitem.amount =3D input:PopNetUint16() =

+	else
+		newitem.amount =3D 1
+	end
+	=

+	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
+	=

+	-- newitem.artid_addstack : The number to add to the item's artwork when =
Amount > 1.
+	if ( BitwiseAND(newitem.artid,hex2num("0x8000")) ~=3D 0) then =

+			newitem.artid_addstack =3D input:PopNetUint8() =

+	else	newitem.artid_addstack =3D 0 end
+
+	newitem.xloc =3D input:PopNetUint16() --only use lowest significant 15 bi=
ts)
+	newitem.yloc =3D input:PopNetUint16()
+
+	if ( BitwiseAND(newitem.xloc,hex2num("0x8000")) ~=3D 0) then
+		newitem.dir =3D input:PopNetUint8()
+	else
+		newitem.dir =3D 0
+	end
+
+	newitem.zloc =3D input:PopInt8()
+
+	newitem.hue =3D 0
+	newitem.flag =3D 0
+	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
+		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then
+			newitem.hue =3D input:PopNetUint16()
+		end
+	end
+	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
+		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then
+			newitem.flag =3D input:PopNetUint8()
+		end
+	end
+	-- item_flag : some kind of status or flags, usage unknown
+	=

+	newitem.serial	=3D BitwiseAND(newitem.serial,hex2num("0x7fffffff"))
+	newitem.artid	=3D BitwiseAND(newitem.artid,hex2num("0x7fff"))
+	newitem.xloc	=3D BitwiseAND(newitem.xloc,hex2num("0x7fff"))
+	newitem.yloc	=3D BitwiseAND(newitem.yloc,hex2num("0x3fff"))
+	=

+	-- TODO : corpse is spawned
+	if (newitem.artid =3D=3D hex2num("0x2006")) then
+		print("TODO: char died. sethue,setdirection,setascorpse")
+	end
+
+	ApplyArtidStackManipulation(newitem)
+	=

+	CreateOrUpdateItem(newitem)
+end
+
+-- AddItemToContainer (0x3C)
+-- pol sends this after kPacket_Open_Container, runuo before, see also kPa=
cket_Object_to_Object
+function gPacketHandler.kPacket_Container_Contents() -- 0x3c
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local size =3D input:PopNetUint16()
+	local itemcount =3D input:PopNetUint16()
+	=

+	for i=3D1,itemcount do
+		local item =3D {}
+		item.serial =3D input:PopNetUint32()
+		item.artid =3D input:PopNetUint16()
+		item.artid_addstack =3D input:PopNetUint8()	--unknown1 (alyways 0x00) !?
+		item.amount =3D input:PopNetUint16()
+		item.xloc =3D input:PopNetInt16()
+		item.yloc =3D input:PopNetInt16()
+		item.zloc =3D 0
+		item.iContainerSerial =3D input:PopNetUint32()
+		item.hue =3D input:PopNetUint16()
+
+		ContainerSetContentItem(item)
+	end
+end
+
+-- This is sent by the server to add/update a single item to a container. =
(response to player dragdrop)
+function gPacketHandler.kPacket_Object_to_Object() -- 0x25
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local item =3D {}
+	item.serial =3D input:PopNetUint32()
+	item.artid =3D input:PopNetUint16()
+	item.artid_addstack =3D input:PopNetUint8()
+	item.amount =3D input:PopNetUint16()
+	item.xloc =3D input:PopNetInt16()
+	item.yloc =3D input:PopNetInt16()
+	item.iContainerSerial =3D input:PopNetUint32()
+	item.hue =3D input:PopNetUint16()
+	printdebug("net",sprintf("NET : kPacket_Object_to_Object : container=3D0x=
%08x item=3D0x%08x artid=3D0x%04x amount=3D%d\n",
+				item.iContainerSerial,item.serial,item.artid,item.amount))
+				=

+	ContainerObjectToObject(item)
+end

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Mon Aug 13 02:57:30 2007
@@ -242,7 +242,7 @@
 	local mobileserial	=3D input:PopNetUint32()
 	local maxvalue		=3D input:PopNetUint16()
 	local curvalue		=3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curvalue,maxvalue))
+	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobileserial,curvalue,maxvalue))
 =

 	MobileUpdateStamina(mobileserial,curvalue,maxvalue)
 end

Modified: branches/knut/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.dynamic.lua (original)
+++ branches/knut/data/lua/obj/obj.dynamic.lua Mon Aug 13 02:57:30 2007
@@ -97,45 +97,50 @@
 end
 =

 -- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
-function ApplyArtidStackManipulation (item)
-	item.baseartid =3D item.artid
-	=

-	-- from varan
-	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") end
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") end
-	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") end
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") end
-	-- Silver
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") end
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") end
-	-- cannonball
-	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") end
-
-	--TODO : if not in this list, and amount > 0 : draw the graphic 2 times
-	--for example: if (item.baseartid =3D=3D hex2num("0xE73") and item.amount=
 > 0) then item.artid =3D hex2num("0xE74") item.drawcount=3D2 end
-
-	-- ART -> GUMP
-	-- white backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue end
-	-- brown backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue end
-	-- brown chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	-- white chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-
-	-- just for testing, remove me
-	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
+function ApplyArtidStackManipulation (item)
+	item.baseartid =3D item.artid
+	local custom_artid =3D false
+	=

+	-- from varan
+	-- gold
+	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") custom_artid =3D true end
+	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") custom_artid =3D true end
+	-- gold
+	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") custom_artid =3D true end
+	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") custom_artid =3D true end
+	-- Silver
+	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") custom_artid =3D true end
+	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") custom_artid =3D true end
+	-- cannonball
+	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") custom_artid =3D true end
+
+	--TODO : if not in this list, and amount > 0 : draw the graphic 2 times
+	--for example: if (item.baseartid =3D=3D hex2num("0xE73") and item.amount=
 > 0) then item.artid =3D hex2num("0xE74") item.drawcount=3D2 end
+
+	-- ART -> GUMP
+	-- white backgammon game piece
+	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue custom_artid =3D true end
+	-- brown backgammon game piece
+	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue custom_artid =3D true end
+	-- brown chess pieces
+	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	-- white chess pieces
+	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+
+	if ((not custom_artid) and item.artid_addstack and item.amount > 1) then =

+		item.artid =3D item.artid + item.artid_addstack =

+		item.artid_addstack =3D 0 -- avoid bad errors if this function is applie=
d more than once
+	end
+	-- just for testing, remove me
+	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
 end

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Mon Aug 13 02:57:30 2007
@@ -95,3 +95,57 @@
 	if (mobile) then mobile:UpdateStamina( curvalue, maxvalue ) end
 end
 =

+-- called from kPacket_Object_to_Object
+function ContainerObjectToObject	(item)
+	local container =3D gObjectList[item.iContainerSerial]
+	if (container) then
+		dynamic =3D gObjectList[item.serial]
+		if (not dynamic) then
+			dynamic =3D CreateDynamic( item )
+		end
+			=

+		dynamic:update( packet )
+		dynamic:setcontainer( container )
+	end
+end
+
+-- called from kPacket_Container_Contents
+function ContainerSetContentItem	(item)
+	local container =3D gObjectList[item.iContainerSerial]
+	if (container) then
+		dynamic =3D gObjectList[item.serial]
+		if (not dynamic) then
+			dynamic =3D CreateDynamic( item )
+		end
+		=

+		dynamic:update( item )
+		dynamic:setcontainer( container )
+	end
+end
+
+-- called from kPacket_Equip_Item
+function ContainerEquipItem(item,container_serial)
+	container =3D gObjectList[ container_serial ]
+	if (not container) then
+		return
+	end
+	=

+	dynamic =3D gObjectList[ item.serial ]
+	if (not dynamic) then
+		dynamic =3D CreateDynamic( item )
+	end
+	=

+	dynamic:update( item )	=

+	dynamic:setcontainer( container )
+end
+
+-- called from kPacket_Show_Item
+function CreateOrUpdateItem	(newitem)
+	dynamic =3D gObjectList[ newitem.serial ]
+	if (not dynamic) then
+		dynamic =3D CreateDynamic( newitem )
+	end
+	=

+	dynamic:update( newitem )
+	dynamic:setcontainer( nil )
+end



From no-reply at zwischenwelt.org  Mon Aug 13 02:57:30 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 00:57:30 -0000
Subject: [Iris-commit] [IRIS] r1347 - in /trunk/data/lua:
 net/net.dynamic.lua net/net.mobile.lua obj/obj.dynamic.lua obj/obj.main.lua
Message-ID: <20070813005730.D5AAD1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 02:57:30 2007
New Revision: 1347

Log:
syncing for merge

Modified:
    trunk/data/lua/net/net.dynamic.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/obj/obj.dynamic.lua
    trunk/data/lua/obj/obj.main.lua

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Mon Aug 13 02:57:30 2007
@@ -9,39 +9,14 @@
 	local id =3D input:PopNetUint8()
 =

 	local item =3D {}
-	item.serial  =3D input:PopNetUint32() -- (always starts 0x40 in my data)
-	item.artid =3D input:PopNetUint16() -- also known as model
-	item.unknown1 =3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then prin=
t("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
-	item.layer =3D input:PopNetUint8()
-
-	item.mobile_serial  =3D input:PopNetUint32() -- "container" for item
-	item.hue =3D input:PopNetUint16()
+	item.serial  			=3D input:PopNetUint32() -- (always starts 0x40 in my dat=
a)
+	item.artid				=3D input:PopNetUint16() -- also known as model
+	item.unknown1			=3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then pr=
int("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
+	item.layer				=3D input:PopNetUint8()
+	local container_serial	=3D input:PopNetUint32() -- "container" for item
+	item.hue				=3D input:PopNetUint16()
 	=

-	--print("NET : Equip_Item",vardump(item))
-	=

-	local mobile =3D GetMobile(item.mobile_serial)
-	if (mobile) then
-		item.mobile =3D mobile
-		if (mobile.equipment[item.layer]) then
-			DestroyMobileItem(mobile.equipment[item.layer])
-		end
-		mobile.equipment[item.layer] =3D item
-		gMobileItemsBySerial[item.serial] =3D item
-		--printf("NET : kPacket_Equip_Item mobile=3D0x%08x item=3D0x%08x\n",item=
.mobile_serial,item.serial)
-		UpdateMobileEquipment(mobile)
-	else =

-		print("WARNING ! mobile update for unknown mobile received, update lost =
!")
-
-		-- don't crash on UOX3, Lonewolf (this servers sends unknown Equip messa=
ges)
-		if ((gServerType[gServerEmulator] ~=3D "Lonewolf") and (gServerType[gSer=
verEmulator] ~=3D "SpherePolUox3")) then
-			print("Crash Client here!"..gServerType[gServerEmulator])
-			Crash()
-		end
-
-		-- the client state would loose sync with server, this is fatal, =

-		-- but should never happen for correct server implementation ? (there ar=
e strange servers however...)
-		-- an alternative would be to create the mobile if unknown , something l=
ike GetOrCreateMobile like in net.container.lua
-	end
+	ContainerEquipItem(item,container_serial)
 end
 =

 =

@@ -112,55 +87,16 @@
 	newitem.artid	=3D BitwiseAND(newitem.artid,hex2num("0x7fff"))
 	newitem.xloc	=3D BitwiseAND(newitem.xloc,hex2num("0x7fff"))
 	newitem.yloc	=3D BitwiseAND(newitem.yloc,hex2num("0x3fff"))
-	if (newitem.amount > 1) then newitem.artid =3D newitem.artid + newitem.ar=
tid_addstack end
-	=

 	=

 	-- TODO : corpse is spawned
 	if (newitem.artid =3D=3D hex2num("0x2006")) then
 		print("TODO: char died. sethue,setdirection,setascorpse")
 	end
 =

-	-- TODO : if (newitem.artid >=3D gMulti_ID +100) .. model is multi
-	-- gMulti_ID =3D hex2num("0x4000")
-	-- TODO : check newitem.artid for boat
+	ApplyArtidStackManipulation(newitem)
 	=

-	if (gTileTypeLoader) then
-		local miFlags,miWeight,miQuality,miUnknown,miUnknown1,miQuantity,miAnimI=
D,miUnknown2,miHue,miUnknown3,miHeight,msName =3D gTileTypeLoader:GetStatic=
TileType(newitem.artid+32*512) -- add 0x00004000
-		newitem.z_typename =3D msName
-	end
-	=

-	printdebug("mobile","ShowItem "..vardump(newitem))
-	=

-	newitem.isdynamic =3D true -- needed to identify the dynamic in 2d render=
er
-	=

-	local bCreateNew =3D true
-	=

-	local olditem =3D GetDynamic(newitem.serial)
-	if (olditem) then
-		-- if only the position changed we can just update the old one
-		if (	newitem.artid =3D=3D olditem.artid and =

-				newitem.amount =3D=3D olditem.amount and =

-				newitem.flag =3D=3D olditem.flag and =

-				newitem.hue =3D=3D olditem.hue and =

-				newitem.dir =3D=3D olditem.dir and =

-				newitem.artid_addstack =3D=3D olditem.artid_addstack ) then
-			-- update old item
-			bCreateNew =3D false
-			olditem.xloc =3D newitem.xloc
-			olditem.yloc =3D newitem.yloc
-			olditem.zloc =3D newitem.zloc
-			newitem =3D olditem
-		else
-			gCurrentRenderer:RemoveDynamicItem( olditem )
-		end
-	end
-	=

-	if (bCreateNew) then gCurrentRenderer:AddDynamicItem( newitem ) end
-	=

-	gCurrentRenderer:UpdateDynamicItemPos(newitem)
-	gDynamics[newitem.serial] =3D newitem	=

+	CreateOrUpdateItem(newitem)
 end
-
 =

 -- AddItemToContainer (0x3C)
 -- pol sends this after kPacket_Open_Container, runuo before, see also kPa=
cket_Object_to_Object
@@ -178,14 +114,11 @@
 		item.amount =3D input:PopNetUint16()
 		item.xloc =3D input:PopNetInt16()
 		item.yloc =3D input:PopNetInt16()
-		--print("kPacket_Container_Contents",item.xloc,item.yloc)
+		item.zloc =3D 0
 		item.iContainerSerial =3D input:PopNetUint32()
 		item.hue =3D input:PopNetUint16()
 =

-		ApplyArtidStackManipulation(item)
-		RefreshContainerItem(item)
-		--printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_s=
tack=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,=
item.artid_addstack,item.amount)
-		--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticT=
ileTypeName(item.artid)))
+		ContainerSetContentItem(item)
 	end
 end
 =

@@ -200,13 +133,10 @@
 	item.amount =3D input:PopNetUint16()
 	item.xloc =3D input:PopNetInt16()
 	item.yloc =3D input:PopNetInt16()
-	--print("kPacket_Object_to_Object",item.xloc,item.yloc)
 	item.iContainerSerial =3D input:PopNetUint32()
 	item.hue =3D input:PopNetUint16()
 	printdebug("net",sprintf("NET : kPacket_Object_to_Object : container=3D0x=
%08x item=3D0x%08x artid=3D0x%04x amount=3D%d\n",
 				item.iContainerSerial,item.serial,item.artid,item.amount))
-
-	ApplyArtidStackManipulation(item)
-	RefreshContainerItem(item)
+				=

+	ContainerObjectToObject(item)
 end
-

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Mon Aug 13 02:57:30 2007
@@ -242,7 +242,7 @@
 	local mobileserial	=3D input:PopNetUint32()
 	local maxvalue		=3D input:PopNetUint16()
 	local curvalue		=3D input:PopNetUint16()
-	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobile_id,curvalue,maxvalue))
+	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobileserial,curvalue,maxvalue))
 =

 	MobileUpdateStamina(mobileserial,curvalue,maxvalue)
 end

Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Mon Aug 13 02:57:30 2007
@@ -4,43 +4,45 @@
 -- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
 function ApplyArtidStackManipulation (item)
 	item.baseartid =3D item.artid
+	local custom_artid =3D false
 	=

 	-- from varan
 	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") end
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") end
+	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") custom_artid =3D true end
+	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") custom_artid =3D true end
 	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") end
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") end
+	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") custom_artid =3D true end
+	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") custom_artid =3D true end
 	-- Silver
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") end
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") end
+	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") custom_artid =3D true end
+	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") custom_artid =3D true end
 	-- cannonball
-	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") end
+	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") custom_artid =3D true end
 =

 	--TODO : if not in this list, and amount > 0 : draw the graphic 2 times
 	--for example: if (item.baseartid =3D=3D hex2num("0xE73") and item.amount=
 > 0) then item.artid =3D hex2num("0xE74") item.drawcount=3D2 end
 =

 	-- ART -> GUMP
 	-- white backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue custom_artid =3D true end
 	-- brown backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue custom_artid =3D true end
 	-- brown chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
 	-- white chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
-	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue end
+	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
 =

+	if ((not custom_artid) and item.artid_addstack and item.amount > 1) then =
item.artid =3D item.artid + item.artid_addstack end
 	-- just for testing, remove me
 	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
 end

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Mon Aug 13 02:57:30 2007
@@ -266,4 +266,92 @@
 		end
 	end
 end
-	=

+
+-- called from kPacket_Object_to_Object
+function ContainerObjectToObject	(item)
+	ApplyArtidStackManipulation(item)
+	RefreshContainerItem(item)
+end
+
+-- called from kPacket_Container_Contents
+function ContainerSetContentItem	(item)
+	ApplyArtidStackManipulation(item)
+	RefreshContainerItem(item)
+	--printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_st=
ack=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,i=
tem.artid_addstack,item.amount)
+	--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticTi=
leTypeName(item.artid)))
+end
+
+-- called from kPacket_Equip_Item
+function ContainerEquipItem(item,container_serial)
+	--print("NET : Equip_Item",vardump(item))
+	=

+	item.mobile_serial =3D container_serial
+	local mobile =3D GetMobile(item.mobile_serial)
+	if (mobile) then
+		item.mobile =3D mobile
+		if (mobile.equipment[item.layer]) then
+			DestroyMobileItem(mobile.equipment[item.layer])
+		end
+		mobile.equipment[item.layer] =3D item
+		gMobileItemsBySerial[item.serial] =3D item
+		--printf("NET : kPacket_Equip_Item mobile=3D0x%08x item=3D0x%08x\n",item=
.mobile_serial,item.serial)
+		UpdateMobileEquipment(mobile)
+	else =

+		print("WARNING ! mobile update for unknown mobile received, update lost =
!")
+
+		-- don't crash on UOX3, Lonewolf (this servers sends unknown Equip messa=
ges)
+		if ((gServerType[gServerEmulator] ~=3D "Lonewolf") and (gServerType[gSer=
verEmulator] ~=3D "SpherePolUox3")) then
+			print("Crash Client here!"..gServerType[gServerEmulator])
+			Crash()
+		end
+
+		-- the client state would loose sync with server, this is fatal, =

+		-- but should never happen for correct server implementation ? (there ar=
e strange servers however...)
+		-- an alternative would be to create the mobile if unknown , something l=
ike GetOrCreateMobile like in net.container.lua
+	end
+end
+
+-- called from kPacket_Show_Item
+function CreateOrUpdateItem	(newitem)
+	-- TODO : if (newitem.artid >=3D gMulti_ID +100) .. model is multi
+	-- gMulti_ID =3D hex2num("0x4000")
+	-- TODO : check newitem.artid for boat
+	=

+	if (gTileTypeLoader) then
+		local miFlags,miWeight,miQuality,miUnknown,miUnknown1,miQuantity,miAnimI=
D,miUnknown2,miHue,miUnknown3,miHeight,msName =3D gTileTypeLoader:GetStatic=
TileType(newitem.artid+32*512) -- add 0x00004000
+		newitem.z_typename =3D msName
+	end
+	=

+	printdebug("mobile","ShowItem "..vardump(newitem))
+	=

+	newitem.isdynamic =3D true -- needed to identify the dynamic in 2d render=
er
+	=

+	local bCreateNew =3D true
+	=

+	local olditem =3D GetDynamic(newitem.serial)
+	if (olditem) then
+		-- if only the position changed we can just update the old one
+		if (	newitem.artid =3D=3D olditem.artid and =

+				newitem.amount =3D=3D olditem.amount and =

+				newitem.flag =3D=3D olditem.flag and =

+				newitem.hue =3D=3D olditem.hue and =

+				newitem.dir =3D=3D olditem.dir and =

+				newitem.artid_addstack =3D=3D olditem.artid_addstack ) then
+			-- update old item
+			bCreateNew =3D false
+			olditem.xloc =3D newitem.xloc
+			olditem.yloc =3D newitem.yloc
+			olditem.zloc =3D newitem.zloc
+			newitem =3D olditem
+		else
+			gCurrentRenderer:RemoveDynamicItem( olditem )
+		end
+	end
+	=

+	if (bCreateNew) then gCurrentRenderer:AddDynamicItem( newitem ) end
+	=

+	gCurrentRenderer:UpdateDynamicItemPos(newitem)
+	gDynamics[newitem.serial] =3D newitem	=

+	gObjectList[newitem.serial] =3D newitem	 -- TODO : fix this like in mobile
+end
+



From no-reply at zwischenwelt.org  Mon Aug 13 03:23:40 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 01:23:40 -0000
Subject: [Iris-commit] [IRIS] r1348 - in /trunk/data/lua:
 net/net.packethandlers.lua obj/obj.main.lua
Message-ID: <20070813012340.F1D4A1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 03:23:39 2007
New Revision: 1348

Log:
syncing for merge

Modified:
    trunk/data/lua/net/net.packethandlers.lua
    trunk/data/lua/obj/obj.main.lua

Modified: trunk/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.packethandlers.lua (original)
+++ trunk/data/lua/net/net.packethandlers.lua Mon Aug 13 03:23:39 2007
@@ -6,24 +6,21 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 =

-	packet =3D {}
-	packet.serial =3D input:PopNetUint32()
-	packet.gumpid =3D input:PopNetUint16()
+	containerdata =3D {}
+	containerdata.serial =3D input:PopNetUint32()
+	containerdata.gumpid =3D input:PopNetUint16()
 	=

-	print("# kPacket_Open_Container",packet.serial,packet.gumpid)
+	print("# kPacket_Open_Container",containerdata.serial,containerdata.gumpi=
d)
 	=

-	local container =3D GetOrCreateContainer(packet.serial)
-	container.gumpid =3D packet.gumpid
-
 	--Ignore Shop container - created somewhere else
-	if (container.gumpid =3D=3D kGumpIDShopContainer) then
-		AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",container_serial))
+	if (containerdata.gumpid =3D=3D kGumpIDShopContainer) then
+		AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",containerdata.seri=
al))
 	--Old_Spellbook Container (Pol,Sphere,Lonewolf,RunUO1 etc.)
-	elseif ((container.gumpid =3D=3D kGumpIDSpellbookContainer) and not(conta=
iner.dialog)) then
+	elseif ((containerdata.gumpid =3D=3D kGumpIDSpellbookContainer) and (not =
IsContainerAlreadyOpen(containerdata.serial))) then
 		local spellbook =3D {}
 		spellbook.old=3Dtrue
-		spellbook.serial =3D packet.serial
-		spellbook.itemid =3D packet.gumpid
+		spellbook.serial =3D containerdata.serial
+		spellbook.itemid =3D containerdata.gumpid
 		spellbook.scrolloffset =3D 0
 		spellbook.matrix =3D {}
 		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
@@ -31,47 +28,19 @@
 		Open_Spellbook(spellbook)
 		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)
 	else
-		-- 0x003c =3D backpack
-		-- 0x0030 =3D shopcontainer
-		--AddFadeLines(sprintf("Open_Container gumpid=3D%d",container.gumpid))
-		if (not container.dialog) then
-			-- create dialog from scratch
-			local dialog =3D guimaker.MakeSortedDialog()
-			container.dialog =3D dialog
-			dialog.uoContainer =3D container
-			dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
-			dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gump=
id,0,0)
-			dialog.backpane.mbIgnoreMouseOver =3D false
-			dialog.backpane.onMouseDown =3D function (widget,mousebutton)
-											if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoC=
ontainer.serial) end
-											if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui=
.StartMoveDialog(widget.dialog.rootwidget) end
-										  end
-		end
-		RefreshContainerItemWidgets(container)
+		HandleOpenContainer(containerdata)
 	end
-
-	SecureTradeRebuildContainerHook(container)
 end
 =

 function gPacketHandler.kPacket_Open_Paperdoll() -- 0x88
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local paperdoll =3D {}
-	paperdoll.mobileserial =3D input:PopNetUint32()
-	paperdoll.name =3D input:PopFilledString(60)
-	paperdoll.flag =3D input:PopNetUint8()
-	paperdoll.Close =3D ClosePaperdoll
+	paperdoll.serial	=3D input:PopNetUint32()
+	paperdoll.name		=3D input:PopFilledString(60)
+	paperdoll.flag		=3D input:PopNetUint8()
 	=

-	-- close old paperdoll
-	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
-	if (oldpaperdoll) then oldpaperdoll:Close() end =

-	=

-	-- register paperdoll
-	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
-	=

-	--AddFadeLines("Open Paperdoll for ["..(paperdoll.mobileserial).."] "..(p=
aperdoll.name or ""))
-	=

-	RebuildPaperdoll(paperdoll)
+	HandleOpenPaperdoll(paperdoll)
 end
 =

 -- Request WarMode Change/Send War Mode Status
@@ -81,15 +50,5 @@
 	local flag =3D input:PopNetUint8()
 	local unknown1 =3D input:PopNetUint8()
 	local unknown2 =3D input:PopNetUint16()
-	if (flag =3D=3D gWarmode_Normal) then
-		gActWarmode=3DgWarmode_Normal
-		AddFadeLines("Be the peace with you!")
-		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: normal\n",i=
d)
-	end
-	if (flag =3D=3D gWarmode_Combat) then
-		gActWarmode=3DgWarmode_Combat
-		AddFadeLines("You go into War!")
-		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: combat\n",i=
d)
-	end
-	gui.SetWarmode(gActWarmode)
+	NotifyWarmode(flag)
 end

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Mon Aug 13 03:23:39 2007
@@ -355,3 +355,69 @@
 	gObjectList[newitem.serial] =3D newitem	 -- TODO : fix this like in mobile
 end
 =

+-- TODO : move to obj.player.lua ?
+-- called from kPacket_SetPlayerWarmode
+function NotifyWarmode	(flag)
+	if (flag =3D=3D gWarmode_Normal) then
+		gActWarmode=3DgWarmode_Normal
+		AddFadeLines("Be the peace with you!")
+		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: normal\n",i=
d)
+	end
+	if (flag =3D=3D gWarmode_Combat) then
+		gActWarmode=3DgWarmode_Combat
+		AddFadeLines("You go into War!")
+		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: combat\n",i=
d)
+	end
+	gui.SetWarmode(gActWarmode)
+end
+
+-- called from kPacket_Open_Paperdoll
+function HandleOpenPaperdoll	(paperdoll)
+	paperdoll.mobileserial	=3D paperdoll.serial
+	paperdoll.Close =3D ClosePaperdoll
+	=

+	-- close old paperdoll
+	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
+	if (oldpaperdoll) then oldpaperdoll:Close() end =

+	=

+	-- register paperdoll
+	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
+	=

+	--AddFadeLines("Open Paperdoll for ["..(paperdoll.mobileserial).."] "..(p=
aperdoll.name or ""))
+	=

+	RebuildPaperdoll(paperdoll)
+end
+
+-- called from kPacket_Open_Container
+function IsContainerAlreadyOpen (containerserial) =

+	local container =3D GetOrCreateContainer(containerdata.serial)
+	return container.dialog ~=3D nil
+end
+
+
+-- called from kPacket_Open_Container
+function HandleOpenContainer	(containerdata)
+
+	local container =3D GetOrCreateContainer(containerdata.serial)
+	container.gumpid =3D containerdata.gumpid
+	=

+	-- 0x003c =3D backpack
+	-- 0x0030 =3D shopcontainer
+	--AddFadeLines(sprintf("Open_Container gumpid=3D%d",container.gumpid))
+	if (not container.dialog) then
+		-- create dialog from scratch
+		local dialog =3D guimaker.MakeSortedDialog()
+		container.dialog =3D dialog
+		dialog.uoContainer =3D container
+		dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
+		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
+		dialog.backpane.mbIgnoreMouseOver =3D false
+		dialog.backpane.onMouseDown =3D function (widget,mousebutton)
+										if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoCo=
ntainer.serial) end
+										if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.=
StartMoveDialog(widget.dialog.rootwidget) end
+									  end
+	end
+	RefreshContainerItemWidgets(container)
+
+	SecureTradeRebuildContainerHook(container)
+end



From no-reply at zwischenwelt.org  Mon Aug 13 03:23:42 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 01:23:42 -0000
Subject: [Iris-commit] [IRIS] r1349 - in /branches/knut/data/lua:
 net/net.packethandlers.lua obj/obj.main.lua
Message-ID: <20070813012342.BEB4B1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 03:23:41 2007
New Revision: 1349

Log:
syncing for merge

Modified:
    branches/knut/data/lua/net/net.packethandlers.lua
    branches/knut/data/lua/obj/obj.main.lua

Modified: branches/knut/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.packethandlers.lua (original)
+++ branches/knut/data/lua/net/net.packethandlers.lua Mon Aug 13 03:23:41 2=
007
@@ -6,19 +6,21 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	=

-	packet =3D {}
-	packet.serial =3D input:PopNetUint32()
-	packet.gumpid =3D input:PopNetUint16()
+	containerdata =3D {}
+	containerdata.serial =3D input:PopNetUint32()
+	containerdata.gumpid =3D input:PopNetUint16()
 =

+	print("# kPacket_Open_Container",containerdata.serial,containerdata.gumpi=
d)
+	=

 	--Ignore Shop container - created somewhere else
-	if (container.gumpid =3D=3D kGumpIDShopContainer) then
-		AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",container_serial))
+	if (containerdata.gumpid =3D=3D kGumpIDShopContainer) then
+		AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",containerdata.seri=
al))
 	--Old_Spellbook Container (Pol,Sphere,Lonewolf,RunUO1 etc.)
-	elseif ((container.gumpid =3D=3D kGumpIDSpellbookContainer) and not(conta=
iner.dialog)) then
+	elseif ((containerdata.gumpid =3D=3D kGumpIDSpellbookContainer) and (not =
IsContainerAlreadyOpen(containerdata.serial))) then
 		local spellbook =3D {}
 		spellbook.old=3Dtrue
-		spellbook.serial =3D packet.serial
-		spellbook.itemid =3D packet.gumpid
+		spellbook.serial =3D containerdata.serial
+		spellbook.itemid =3D containerdata.gumpid
 		spellbook.scrolloffset =3D 0
 		spellbook.matrix =3D {}
 		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
@@ -26,47 +28,19 @@
 		Open_Spellbook(spellbook)
 		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)
 	else
-		local containers =3D gGumpmanager.GetGumpsByName( "container" )
-		local cont =3D nil
-		for s, gump in pairs( containers ) do
-			if (gump.serial =3D=3D packet.serial) then
-				cont =3D gump
-				break
-			end
-		end
-		=

-		if (cont) then
-			cont:setBackground( packet.gumpid )
-		else
-			CreateContainerGump( packet )
-		end
+		HandleOpenContainer(containerdata)
 	end
-	=

-	SecureTradeRebuildContainerHook(container)
 end
 =

 function gPacketHandler.kPacket_Open_Paperdoll() -- 0x88
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local paperdoll =3D {}
-	paperdoll.serial =3D input:PopNetUint32()
-	paperdoll.name =3D input:PopFilledString(60)
-	paperdoll.flag =3D input:PopNetUint8()
+	paperdoll.serial	=3D input:PopNetUint32()
+	paperdoll.name		=3D input:PopFilledString(60)
+	paperdoll.flag		=3D input:PopNetUint8()
 	=

-	local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
-	local mypaperdoll =3D nil
-	for s, gump in pairs( paperdolls ) do
-		if (gump.serial =3D=3D packet.serial) then
-			mypaperdoll =3D gump
-			break
-		end
-	end
-		=

-	if (mypaperdoll) then
-		mypaperdoll:update( paperdoll)
-	else
-		CreatePaperdoll( paperdoll )
-	end
+	HandleOpenPaperdoll(paperdoll)
 end
 =

 -- Request WarMode Change/Send War Mode Status
@@ -76,9 +50,5 @@
 	local flag =3D input:PopNetUint8()
 	local unknown1 =3D input:PopNetUint8()
 	local unknown2 =3D input:PopNetUint16()
-	=

-	local player =3D GetPlayerMobile()
-	if (player) then
-		player:setwarmode( flag =3D=3D 1 )
-	end
+	NotifyWarmode(flag)
 end

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Mon Aug 13 03:23:41 2007
@@ -149,3 +149,56 @@
 	dynamic:update( newitem )
 	dynamic:setcontainer( nil )
 end
+
+-- TODO : move to obj.player.lua ?
+-- called from kPacket_SetPlayerWarmode
+function NotifyWarmode	(flag)
+	local player =3D GetPlayerMobile()
+	if (player) then
+		player:setwarmode( flag =3D=3D gWarmode_Combat )
+	end
+end
+
+-- called from kPacket_Open_Paperdoll
+function HandleOpenPaperdoll	(paperdoll)
+	local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
+	local mypaperdoll =3D nil
+	for s, gump in pairs( paperdolls ) do
+		if (gump.serial =3D=3D packet.serial) then
+			mypaperdoll =3D gump
+			break
+		end
+	end
+		=

+	if (mypaperdoll) then
+		mypaperdoll:update( paperdoll)
+	else
+		CreatePaperdoll( paperdoll )
+	end
+end
+
+-- called from kPacket_Open_Container
+function IsContainerAlreadyOpen (containerserial) =

+	print("TODO : implement me : IsContainerAlreadyOpen")
+	return false
+end
+
+-- called from kPacket_Open_Container
+function HandleOpenContainer	(containerdata)
+	local containers =3D gGumpmanager.GetGumpsByName( "container" )
+	local cont =3D nil
+	for s, gump in pairs( containers ) do
+		if (gump.serial =3D=3D containerdata.serial) then
+			cont =3D gump
+			break
+		end
+	end
+	=

+	if (cont) then
+		cont:setBackground( containerdata.gumpid )
+	else
+		CreateContainerGump( containerdata )
+	end
+	=

+	SecureTradeRebuildContainerHook(containerdata) -- TODO : knutmerge  this =
expects a full container record, needs to be fixed
+end



From no-reply at zwischenwelt.org  Mon Aug 13 03:26:40 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 01:26:40 -0000
Subject: [Iris-commit] [IRIS] r1350 -
	/branches/knut/data/lua/gui/gui.paperdoll.lua
Message-ID: <20070813012640.D38EF1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 03:26:40 2007
New Revision: 1350

Log:
syncing for merge

Modified:
    branches/knut/data/lua/gui/gui.paperdoll.lua

Modified: branches/knut/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.paperdoll.lua (original)
+++ branches/knut/data/lua/gui/gui.paperdoll.lua Mon Aug 13 03:26:40 2007
@@ -205,6 +205,7 @@
 =

 function GetPaperdollBodyAndBaseID (bodyid)
 	local bodygumpid =3D nil
+	local base_id =3D kGumpBaseId_Male
 =

 	--Human-Male Paperdoll
 	if (bodyid =3D=3D 400 or
@@ -212,39 +213,47 @@
 		bodyid =3D=3D 987)	  --GameMaster v2 + GM Robe should be displayed
 	then
 		bodygumpid =3D hex2num("0x0C")
+		base_id =3D kGumpBaseId_Male
 	--Human-Savage_Male
 	elseif (bodyid =3D=3D 183 or
 			bodyid =3D=3D 185 or
 			bodyid =3D=3D 750)
 	then
 		bodygumpid =3D hex2num("0x79")
+		base_id =3D kGumpBaseId_Male
 	--Human-Female Paperdoll
 	elseif (bodyid =3D=3D 401 or
 			bodyid =3D=3D 745)  --Necromancy Transfromed Model
 	then
 		bodygumpid =3D hex2num("0x0D")
+		base_id =3D kGumpBaseId_Female
 	--Human-Savage_Female
 	elseif (bodyid =3D=3D 184 or
 			bodyid =3D=3D 186 or
 			bodyid =3D=3D 751)
 	then
 		bodygumpid =3D hex2num("0x78")
+		base_id =3D kGumpBaseId_Female
 	--Male-Elf Paperdoll
 	elseif (bodyid =3D=3D 605)
 	then
 		bodygumpid =3D hex2num("0x0E")
+		base_id =3D kGumpBaseId_Male
 	--Female-Elf Paperdoll
 	elseif (bodyid =3D=3D 606)
 	then
 		bodygumpid =3D hex2num("0x0F")
+		base_id =3D kGumpBaseId_Female
 	--Lord British
 	elseif (bodyid =3D=3D 990)
 	then
 		bodygumpid =3D hex2num("0x3DE")
+		base_id =3D kGumpBaseId_Male
 	--Blackthorn
 	elseif (bodyid =3D=3D 991)
 	then
 		bodygumpid =3D hex2num("0x3DF")
+		base_id =3D kGumpBaseId_Male
 	--Dupre (wrong paperdoll ?!)
 	elseif (bodyid =3D=3D 994)
 	then
@@ -261,7 +270,7 @@
 		-- unknown
 		--bodygumpid =3D hex2num("0x3DF")
 	end
-	return bodygumpid
+	return bodygumpid,base_id
 end
 =

 function TogglePlayerPaperdoll ()



From no-reply at zwischenwelt.org  Mon Aug 13 03:39:12 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 01:39:12 -0000
Subject: [Iris-commit] [IRIS] r1351 - in /trunk/data/lua: net.login.lua
	obj/obj.main.lua
Message-ID: <20070813013912.AE6E51524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 03:39:12 2007
New Revision: 1351

Log:
syncing for merge

Modified:
    trunk/data/lua/net.login.lua
    trunk/data/lua/obj/obj.main.lua

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Mon Aug 13 03:39:12 2007
@@ -199,12 +199,6 @@
 	packet.hue	=3D 0
 	local playerid =3D packet.serial
 =

-	local bodytype =3D packet.body
-	printdebug("login",sprintf("NET: Login_Confirm CharacterID: 0x%08x Bodyty=
pe: %i x: %i y: %i z: %i flag=3D0x%02x\n", playerid, bodytype, packet.xloc,=
 packet.yloc, packet.zloc, packet.flag))
-
-	-- TODO : HintStartPosition(x_location,y_location,z_location) ?
-	-- this is just a hint that might be used to position the cam
-	=

 	--Request Skills and stats
 	Send_ClientQuery(gRequest_Skills,playerid)
 =

@@ -215,10 +209,8 @@
 	Send_ClientLanguage(gLanguage or "ENU")
 	Send_UnknownCommand()
 	Send_UnknownSE()
-
-	UpdatePlayerBodySerial(playerid)
-	local playerMobile =3D GetPlayerMobile()
-	if (playerMobile) then playerMobile.artid =3D packet.body end
+	=

+	NotifyLoginConfirm(packet)
 end
 =

 -- if packet is received we can Start the Game now !

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Mon Aug 13 03:39:12 2007
@@ -421,3 +421,17 @@
 =

 	SecureTradeRebuildContainerHook(container)
 end
+
+-- kPacket_Login_Confirm
+function NotifyLoginConfirm	(packet)
+	local bodytype =3D packet.body
+	local playerid =3D packet.serial
+	printdebug("login",sprintf("NET: Login_Confirm CharacterID: 0x%08x Bodyty=
pe: %i x: %i y: %i z: %i flag=3D0x%02x\n", playerid, bodytype, packet.xloc,=
 packet.yloc, packet.zloc, packet.flag))
+
+	-- TODO : HintStartPosition(x_location,y_location,z_location) ?
+	-- this is just a hint that might be used to position the cam	=

+	=

+	UpdatePlayerBodySerial(playerid)
+	local playerMobile =3D GetPlayerMobile()
+	if (playerMobile) then playerMobile.artid =3D packet.body end
+end



From no-reply at zwischenwelt.org  Mon Aug 13 03:39:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 01:39:16 -0000
Subject: [Iris-commit] [IRIS] r1352 - in /branches/knut/data/lua:
 gui/gui.paperdoll.lua lib.util.lua net.login.lua obj/obj.main.lua
Message-ID: <20070813013916.BECDC1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 03:39:15 2007
New Revision: 1352

Log:
syncing for merge

Modified:
    branches/knut/data/lua/gui/gui.paperdoll.lua
    branches/knut/data/lua/lib.util.lua
    branches/knut/data/lua/net.login.lua
    branches/knut/data/lua/obj/obj.main.lua

Modified: branches/knut/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.paperdoll.lua (original)
+++ branches/knut/data/lua/gui/gui.paperdoll.lua Mon Aug 13 03:39:15 2007
@@ -203,6 +203,10 @@
 	end
 end
 =

+-- from old iris code, src/gui/Paperdoll.cpp, returns bodygumpid,base_id
+-- base_id is usually 50000 for male and 60000 for female models
+-- TODO : we should put this in a seperate file for easy editing
+-- TODO : maybe this comes from Models.txt
 function GetPaperdollBodyAndBaseID (bodyid)
 	local bodygumpid =3D nil
 	local base_id =3D kGumpBaseId_Male

Modified: branches/knut/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.util.lua (original)
+++ branches/knut/data/lua/lib.util.lua Mon Aug 13 03:39:15 2007
@@ -1,6 +1,8 @@
 --function printf(...) io.write(string.format("%d:",Client_GetTicks())..st=
ring.format(unpack(arg))) end
 function printf(...) io.write(string.format(unpack(arg))) end
 function sprintf(...) return string.format(unpack(arg)) end
+
+function TestBit (mask1,mask2) return BitwiseAND(mask1,mask2) ~=3D 0 end
 =

 gDebugCategories =3D {} -- gDebugCategories.mycat =3D false to disable out=
put
 function printdebug(category,...) =


Modified: branches/knut/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.login.lua (original)
+++ branches/knut/data/lua/net.login.lua Mon Aug 13 03:39:15 2007
@@ -198,14 +198,6 @@
 	=

 	packet.hue	=3D 0
 	local playerid =3D packet.serial
-	=

-	local player =3D gObjectList[packet.serial]	=

-	if (not player) then
-		player =3D CreateMobile( packet )
-	end	=

-	=

-	player:update( packet )
-	gPlayerBodySerial =3D player.serial
 =

 	--Request Skills and stats
 	Send_ClientQuery( gRequest_Skills,playerid )
@@ -217,6 +209,8 @@
 	Send_ClientLanguage(gLanguage or "ENU")
 	Send_UnknownCommand()
 	Send_UnknownSE()
+	=

+	NotifyLoginConfirm(packet)
 end
 =

 -- if packet is received we can Start the Game now !

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Mon Aug 13 03:39:15 2007
@@ -202,3 +202,14 @@
 	=

 	SecureTradeRebuildContainerHook(containerdata) -- TODO : knutmerge  this =
expects a full container record, needs to be fixed
 end
+
+-- kPacket_Login_Confirm
+function NotifyLoginConfirm	(packet)
+	local player =3D gObjectList[packet.serial]	=

+	if (not player) then
+		player =3D CreateMobile( packet )
+	end	=

+	=

+	player:update( packet )
+	gPlayerBodySerial =3D player.serial
+end



From no-reply at zwischenwelt.org  Mon Aug 13 20:44:08 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 18:44:08 -0000
Subject: [Iris-commit] [IRIS] r1353 - /trunk/data/lua/obj/obj.dynamic.lua
Message-ID: <20070813184408.7F7BF1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 20:44:07 2007
New Revision: 1353

Log:
syncing for merge

Modified:
    trunk/data/lua/obj/obj.dynamic.lua

Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Mon Aug 13 20:44:07 2007
@@ -42,7 +42,10 @@
 	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
 	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
 =

-	if ((not custom_artid) and item.artid_addstack and item.amount > 1) then =
item.artid =3D item.artid + item.artid_addstack end
+	if ((not custom_artid) and item.artid_addstack and item.amount > 1) then =

+		item.artid =3D item.artid + item.artid_addstack =

+		item.artid_addstack =3D 0 -- avoid bad errors if this function is applie=
d more than once
+	end
 	-- just for testing, remove me
 	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
 end



From no-reply at zwischenwelt.org  Mon Aug 13 20:44:14 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 13 Aug 2007 18:44:14 -0000
Subject: [Iris-commit] [IRIS] r1354 -
	/branches/knut/data/lua/obj/obj.main.lua
Message-ID: <20070813184414.5F4BB1524001@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Aug 13 20:44:13 2007
New Revision: 1354

Log:
syncing for merge

Modified:
    branches/knut/data/lua/obj/obj.main.lua

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Mon Aug 13 20:44:13 2007
@@ -46,11 +46,9 @@
 	mobile:update( mobiledata )
 	=

 	if (equipmentdata) then
-		for layer,itemdata in pairs(equipmentdata) do
-			dynamic =3D GetDynamic(itemdata.serial)
-			if (not dynamic) then dynamic =3D CreateDynamic( itemdata ) end
-			dynamic:update( itemdata )
-			dynamic:setcontainer( mobile )
+		-- TODO: clear old equipment ???
+		for layer,dynamicdata in pairs(equipmentdata) do
+			CreateOrUpdateDynamic(dynamicdata,mobile)
 		end
 	end
 end
@@ -96,59 +94,35 @@
 end
 =

 -- called from kPacket_Object_to_Object
-function ContainerObjectToObject	(item)
-	local container =3D gObjectList[item.iContainerSerial]
-	if (container) then
-		dynamic =3D gObjectList[item.serial]
-		if (not dynamic) then
-			dynamic =3D CreateDynamic( item )
-		end
-			=

-		dynamic:update( packet )
-		dynamic:setcontainer( container )
-	end
+function ContainerObjectToObject	(dynamicdata)
+	local container =3D GetContainer(dynamicdata.iContainerSerial)
+	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
 end
 =

+
+function GetContainer (iContainerSerial) return gObjectList[iContainerSeri=
al] end
+
 -- called from kPacket_Container_Contents
-function ContainerSetContentItem	(item)
-	local container =3D gObjectList[item.iContainerSerial]
-	if (container) then
-		dynamic =3D gObjectList[item.serial]
-		if (not dynamic) then
-			dynamic =3D CreateDynamic( item )
-		end
-		=

-		dynamic:update( item )
-		dynamic:setcontainer( container )
-	end
+function ContainerSetContentItem	(dynamicdata)
+	local container =3D GetContainer(dynamicdata.iContainerSerial) =

+	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
+end
+
+function CreateOrUpdateDynamic (dynamicdata,container)
+	dynamic =3D gObjectList[dynamicdata.serial]
+	if (not dynamic) then dynamic =3D CreateDynamic( dynamicdata ) end
+	dynamic:update( dynamicdata )
+	dynamic:setcontainer( container )
 end
 =

 -- called from kPacket_Equip_Item
-function ContainerEquipItem(item,container_serial)
-	container =3D gObjectList[ container_serial ]
-	if (not container) then
-		return
-	end
-	=

-	dynamic =3D gObjectList[ item.serial ]
-	if (not dynamic) then
-		dynamic =3D CreateDynamic( item )
-	end
-	=

-	dynamic:update( item )	=

-	dynamic:setcontainer( container )
+function ContainerEquipItem(dynamicdata,iContainerSerial)
+	container =3D GetContainer(iContainerSerial)
+	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
 end
 =

 -- called from kPacket_Show_Item
-function CreateOrUpdateItem	(newitem)
-	dynamic =3D gObjectList[ newitem.serial ]
-	if (not dynamic) then
-		dynamic =3D CreateDynamic( newitem )
-	end
-	=

-	dynamic:update( newitem )
-	dynamic:setcontainer( nil )
-end
+function CreateOrUpdateItem	(dynamicdata) CreateOrUpdateDynamic(dynamicdat=
a) end
 =

 -- TODO : move to obj.player.lua ?
 -- called from kPacket_SetPlayerWarmode



From no-reply at zwischenwelt.org  Tue Aug 14 14:21:32 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 14 Aug 2007 12:21:32 -0000
Subject: [Iris-commit] [IRIS] r1355 - /trunk/configure.ac
Message-ID: <20070814122132.890251524001@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Aug 14 14:21:31 2007
New Revision: 1355

Log:
removed SDL_image from configure.ac dependency check as it is no longer nee=
ded

Modified:
    trunk/configure.ac

Modified: trunk/configure.ac
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/configure.ac (original)
+++ trunk/configure.ac Tue Aug 14 14:21:31 2007
@@ -73,10 +73,10 @@
 #]))
 AC_SUBST(alut_LIBS)
 =

-AC_CHECK_LIB(SDL_image, IMG_Load_RW, , AC_MSG_ERROR([
-*** Unable to find SDL_image libary with IMG_Load_RW support
-(http://www.libsdl.org/projects/SDL_image/)
-]))
+#AC_CHECK_LIB(SDL_image, IMG_Load_RW, , AC_MSG_ERROR([
+#*** Unable to find SDL_image libary with IMG_Load_RW support
+#(http://www.libsdl.org/projects/SDL_image/)
+#]))
 =

 =

 PKG_CHECK_MODULES(OGRE, OGRE)



From no-reply at zwischenwelt.org  Wed Aug 22 11:35:32 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 22 Aug 2007 09:35:32 -0000
Subject: [Iris-commit] [IRIS] r1356 - /trunk/src/scripting.cpp
Message-ID: <20070822093532.756E21C184BD@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 22 11:35:31 2007
New Revision: 1356

Log:
added l_OgreMaterialNameKnown

Modified:
    trunk/src/scripting.cpp

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Wed Aug 22 11:35:31 2007
@@ -323,7 +323,6 @@
 }
 =

 =

-
 /// see also OgreMaterialAvailable below
 /// bool =3D OgreMaterialNameKnown(ressourcename)
 /// returns false if name is empty string or nil
@@ -338,6 +337,19 @@
 	return 1;
 }
 =

+/// see also OgreMaterialAvailable below
+/// bool =3D OgreMaterialNameKnown(ressourcename)
+/// returns false if name is empty string or nil
+static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE
+	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
+	if (sMatName.size() > 0) {
+		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
+		lua_pushboolean(L,!pMaterial.isNull());
+	} else {
+		lua_pushboolean(L,false);
+	}
+	return 1;
+}
 =

 /// bool =3D OgreMaterialAvailable(ressourcename)
 static int l_OgreMaterialAvailable (lua_State *L) { PROFILE



From no-reply at zwischenwelt.org  Wed Aug 22 11:35:45 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 22 Aug 2007 09:35:45 -0000
Subject: [Iris-commit] [IRIS] r1357 - in /branches/knut:
 data/lua/obj/obj.dynamic.lua data/lua/obj/obj.main.lua
 data/lua/obj/obj.player.lua src/builder.cpp
Message-ID: <20070822093545.0EA281C184BD@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 22 11:35:44 2007
New Revision: 1357

Log:
syncing for merge

Modified:
    branches/knut/data/lua/obj/obj.dynamic.lua
    branches/knut/data/lua/obj/obj.main.lua
    branches/knut/data/lua/obj/obj.player.lua
    branches/knut/src/builder.cpp

Modified: branches/knut/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.dynamic.lua (original)
+++ branches/knut/data/lua/obj/obj.dynamic.lua Wed Aug 22 11:35:44 2007
@@ -2,9 +2,9 @@
 	dynamic =3D {}
 	dynamic.serial =3D packet.serial
 	dynamic.artid =3D 0
-	dynamic.x =3D 0
-	dynamic.y =3D 0
-	dynamic.z =3D 0
+	dynamic.xloc =3D 0
+	dynamic.yloc =3D 0
+	dynamic.zloc =3D 0
 	dynamic.hue =3D 0
 	dynamic.amount =3D 1
 	dynamic.content =3D {}
@@ -37,7 +37,7 @@
 	=

 	for field, value in pairs( packet ) do
 		if (value ~=3D dynamic[field]) then
-			if in_array( field, {"x","y","z"} ) then
+			if in_array( field, {"xloc","yloc","zloc"} ) then
 				updateposition =3D true
 			else
 				updategraphic =3D true
@@ -68,13 +68,15 @@
 	=

 	dynamic:deregister()
 end
-
+
+-- if dynamic is a container, add object to its contents
 function DynamicAddObject( dynamic, object )
 	dynamic.content[ object.serial ] =3D object
 	object.container =3D dynamic
 	NotifyListener( "DynamicAddedToCont"..sprintf("%d",dynamic.serial), objec=
t.serial )
 end
-
+
+-- if dynamic is a container, remove object from its contents
 function DynamicRemoveObject( dynamic, object )
 	dynamic.content[ object.serial ] =3D nil
 	object.container =3D nil
@@ -82,7 +84,8 @@
 end
 =

 function SetContainer( dynamic, container )
-	if (dynamic.container) then
+	if (dynamic.container) then
+		-- remove dynamic from old container
 		dynamic.container:removeobject( dynamic )
 	end
 	=

@@ -90,7 +93,8 @@
 		container:addobject( dynamic )
 	end
 end
-
+
+-- TODO : is there a better place for this ? a seperate lua file for all d=
ragdrop stuff ? container related ?
 function DynamicGrab( dynamic, offx, offy )
 	SetDragItem( dynamic, offx, offy )
 	Send_Take_Object( dynamic.serial, dynamic.amount )

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Wed Aug 22 11:35:44 2007
@@ -14,8 +14,8 @@
 =

 function DynamicIsInWorld (dynamic) return not dynamic.container end  -- T=
ODO : spelling of container correct ???
 =

-function GetDynamicList	() return gDynamics end -- object.isdynamic
-function GetMobileList	() return gMobiles end -- object.ismobile
+function GetDynamicList	() assert(false,"TODO, not yet supported..") retur=
n gDynamics end -- object.isdynamic
+function GetMobileList	() assert(false,"TODO, not yet supported..") return=
 gMobiles end -- object.ismobile
 =

 gObjectList =3D {}
 gPlayerBodySerial =3D 0

Modified: branches/knut/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.player.lua (original)
+++ branches/knut/data/lua/obj/obj.player.lua Wed Aug 22 11:35:44 2007
@@ -41,4 +41,4 @@
 			Send_DoubleClick( backpack.serial )
 		end
 	end
-end
+end

Modified: branches/knut/src/builder.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/builder.cpp (original)
+++ branches/knut/src/builder.cpp Wed Aug 22 11:35:44 2007
@@ -275,7 +275,7 @@
 =

 =

 /// WARNING ! changes size to 2^n where n >=3D 4
-bool	GenerateGumpMaterial	(cGumpLoader& oGumpLoader,const char* szMatName,=
const int iID,const bool bHasAlpha,cHueLoader* pHueLoader,const short iHue)=
 { PROFILE
+bool	GenerateGumpMaterial	(cGumpLoader& oGumpLoader,const char* szMatName,=
const int iID,const bool bHasAlpha,cHueLoader* pHueLoader,short iHue) { PRO=
FILE
 	cGump *gump =3D oGumpLoader.GetGump(iID);
 	if (gump =3D=3D 0) return false;
 	int iImgW =3D gump->GetWidth();



From no-reply at zwischenwelt.org  Fri Aug 24 19:48:14 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 24 Aug 2007 17:48:14 -0000
Subject: [Iris-commit] [IRIS] r1358 - /trunk/src/scripting.cpp
Message-ID: <20070824174814.9C60E1C182C3@zwischenwelt.org>

Author: sience
Date: Fri Aug 24 19:48:13 2007
New Revision: 1358

Log:
-fix

Modified:
    trunk/src/scripting.cpp

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Fri Aug 24 19:48:13 2007
@@ -337,20 +337,8 @@
 	return 1;
 }
 =

-/// see also OgreMaterialAvailable below
-/// bool =3D OgreMaterialNameKnown(ressourcename)
-/// returns false if name is empty string or nil
-static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE
-	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
-	if (sMatName.size() > 0) {
-		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
-		lua_pushboolean(L,!pMaterial.isNull());
-	} else {
-		lua_pushboolean(L,false);
-	}
-	return 1;
-}
-
+
+
 /// bool =3D OgreMaterialAvailable(ressourcename)
 static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
 	assert(0 && "DON'T USE ME, ALWAYS RETURNS TRUE");



From no-reply at zwischenwelt.org  Sat Aug 25 21:07:19 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 25 Aug 2007 19:07:19 -0000
Subject: [Iris-commit] [IRIS] r1360 - in
 /trunk/data/models/models/to_004000: mdl_003264.mesh.xml
 mdl_003305.mesh.xml
Message-ID: <20070825190719.82E241C18742@zwischenwelt.org>

Author: sience
Date: Sat Aug 25 21:07:18 2007
New Revision: 1360

Log:
-obsolete

Removed:
    trunk/data/models/models/to_004000/mdl_003264.mesh.xml
    trunk/data/models/models/to_004000/mdl_003305.mesh.xml



From no-reply at zwischenwelt.org  Sat Aug 25 21:32:03 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 25 Aug 2007 19:32:03 -0000
Subject: [Iris-commit] [IRIS] r1361 - in /branches/knut/data/lua:
 lib.util.lua net.login.lua net/net.dynamic.lua net/net.mobile.lua
 obj/obj.dynamic.lua obj/obj.main.lua obj/obj.mobile.lua obj/obj.player.lua
Message-ID: <20070825193204.7CFE71524002@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 25 21:32:02 2007
New Revision: 1361

Log:
syncing for merge

Modified:
    branches/knut/data/lua/lib.util.lua
    branches/knut/data/lua/net.login.lua
    branches/knut/data/lua/net/net.dynamic.lua
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/obj/obj.dynamic.lua
    branches/knut/data/lua/obj/obj.main.lua
    branches/knut/data/lua/obj/obj.mobile.lua
    branches/knut/data/lua/obj/obj.player.lua

Modified: branches/knut/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.util.lua (original)
+++ branches/knut/data/lua/lib.util.lua Sat Aug 25 21:32:02 2007
@@ -327,7 +327,7 @@
 				aw * bz + az * bw + ax * by - ay * bx
 	end
 	=

-	-- returns qw,qx,qy,qz  , input comma seperated list "x:90,y:90,z:30" =

+	-- returns qw,qx,qy,qz  , input comma seperated list QuaternionFromString=
("x:90,y:90,z:30")
 	function QuaternionFromString (txt) =

 		local qw,qx,qy,qz =3D Quaternion.identity()
 		local arr =3D strsplit(",",txt)

Modified: branches/knut/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.login.lua (original)
+++ branches/knut/data/lua/net.login.lua Sat Aug 25 21:32:02 2007
@@ -178,7 +178,7 @@
 	packet =3D {}
 	packet.serial	=3D input:PopNetUint32()
 	packet.unknown1 =3D input:PopNetUint32()
-	packet.body	=3D input:PopNetUint16()
+	packet.artid	=3D input:PopNetUint16()
 	packet.xloc	=3D input:PopNetUint16()
 	packet.yloc	=3D input:PopNetUint16()
 	packet.unknown0 =3D input:PopNetUint8()
@@ -210,7 +210,9 @@
 	Send_UnknownCommand()
 	Send_UnknownSE()
 	=

-	NotifyLoginConfirm(packet)
+	-- TODO : HintStartPosition(packet.xloc, packet.yloc, packet.zloc) hint f=
or campos ?
+	UpdatePlayerBodySerial(packet.serial)
+	CreateOrUpdateMobile(packet)
 end
 =

 -- if packet is received we can Start the Game now !

Modified: branches/knut/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.dynamic.lua (original)
+++ branches/knut/data/lua/net/net.dynamic.lua Sat Aug 25 21:32:02 2007
@@ -95,7 +95,7 @@
 =

 	ApplyArtidStackManipulation(newitem)
 	=

-	CreateOrUpdateItem(newitem)
+	CreateOrUpdateDynamic(newitem)
 end
 =

 -- AddItemToContainer (0x3C)

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Sat Aug 25 21:32:02 2007
@@ -94,7 +94,7 @@
 	mobiledata.dir 					=3D input:PopNetUint8()
 	mobiledata.zloc 				=3D input:PopInt8()
 	=

-	MobileNotifyTeleport(mobiledata)
+	NotifyTeleport(mobiledata)
 end
 =

 -- Character Animation (0x6e)

Modified: branches/knut/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.dynamic.lua (original)
+++ branches/knut/data/lua/obj/obj.dynamic.lua Sat Aug 25 21:32:02 2007
@@ -1,3 +1,12 @@
+-- handles dynamic items (lamps,doors,inventory,...)
+
+function CreateOrUpdateDynamic (dynamicdata,container)
+	dynamic =3D gObjectList[dynamicdata.serial]
+	if (not dynamic) then dynamic =3D CreateDynamic( dynamicdata ) end
+	dynamic:update( dynamicdata )
+	dynamic:setcontainer( container )
+end
+
 function CreateDynamic( packet )
 	dynamic =3D {}
 	dynamic.serial =3D packet.serial
@@ -99,6 +108,56 @@
 	SetDragItem( dynamic, offx, offy )
 	Send_Take_Object( dynamic.serial, dynamic.amount )
 end
+
+
+-- called from kPacket_Object_to_Object
+function ContainerObjectToObject	(dynamicdata)
+	local container =3D GetContainer(dynamicdata.iContainerSerial)
+	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
+end
+
+
+function GetContainer (iContainerSerial) return gObjectList[iContainerSeri=
al] end
+
+-- called from kPacket_Container_Contents
+function ContainerSetContentItem	(dynamicdata)
+	local container =3D GetContainer(dynamicdata.iContainerSerial) =

+	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
+end
+
+-- called from kPacket_Equip_Item
+function ContainerEquipItem(dynamicdata,iContainerSerial)
+	container =3D GetContainer(iContainerSerial)
+	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
+end
+
+-- called from kPacket_Open_Container
+function IsContainerAlreadyOpen (containerserial) =

+	print("TODO : implement me : IsContainerAlreadyOpen")
+	return false
+end
+
+-- called from kPacket_Open_Container
+function HandleOpenContainer	(containerdata)
+	local containers =3D gGumpmanager.GetGumpsByName( "container" )
+	local cont =3D nil
+	for s, gump in pairs( containers ) do
+		if (gump.serial =3D=3D containerdata.serial) then
+			cont =3D gump
+			break
+		end
+	end
+	=

+	if (cont) then
+		cont:setBackground( containerdata.gumpid )
+	else
+		CreateContainerGump( containerdata )
+	end
+	=

+	SecureTradeRebuildContainerHook(containerdata) -- TODO : knutmerge  this =
expects a full container record, needs to be fixed
+end
+
+
 =

 -- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
 function ApplyArtidStackManipulation (item)

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Sat Aug 25 21:32:02 2007
@@ -40,150 +40,3 @@
 	end
 end
 =

-function CreateOrUpdateMobile (mobiledata,equipmentdata)
-	local mobile =3D GetMobile(mobiledata.serial)
-	if (not mobile) then mobile =3D CreateMobile( mobiledata ) end
-	mobile:update( mobiledata )
-	=

-	if (equipmentdata) then
-		-- TODO: clear old equipment ???
-		for layer,dynamicdata in pairs(equipmentdata) do
-			CreateOrUpdateDynamic(dynamicdata,mobile)
-		end
-	end
-end
-
--- called from kPacket_Teleport
-function MobileNotifyTeleport	(mobiledata)
-	gLastResyncRequest =3D nil
-	--ResetWalkQueue()
-	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
-
-	CreateOrUpdateMobile( mobiledata )
-	-- set player pos after updating mobile, otherwise the mobile may be dele=
ted as its out of range
-	SetPlayerPos( mobiledata.xloc, mobiledata.yloc, mobiledata.zloc, teleport=
data.dir )
-
-	ResetWalkQueue()
-end
-
-function MobileStartServerSideAnim (animdata)
-	local mobile =3D GetMobile(animdata.mobileserial)
-	if (mobile) then mobile:DoAnimation( animdata ) end
-end
-
-function MobileUpdateStats (mobileserial,stats)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile) then
-		mobile:updatestats( stats )
-	end
-end
-
-function MobileUpdateHealth (mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile) then mobile:UpdateHits( curvalue, maxvalue ) end
-end
-
-function MobileUpdateMana (mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile) then mobile:UpdateMana( curvalue, maxvalue ) end	=

-end
-
-function MobileUpdateStamina(mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile) then mobile:UpdateStamina( curvalue, maxvalue ) end
-end
-
--- called from kPacket_Object_to_Object
-function ContainerObjectToObject	(dynamicdata)
-	local container =3D GetContainer(dynamicdata.iContainerSerial)
-	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
-end
-
-
-function GetContainer (iContainerSerial) return gObjectList[iContainerSeri=
al] end
-
--- called from kPacket_Container_Contents
-function ContainerSetContentItem	(dynamicdata)
-	local container =3D GetContainer(dynamicdata.iContainerSerial) =

-	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
-end
-
-function CreateOrUpdateDynamic (dynamicdata,container)
-	dynamic =3D gObjectList[dynamicdata.serial]
-	if (not dynamic) then dynamic =3D CreateDynamic( dynamicdata ) end
-	dynamic:update( dynamicdata )
-	dynamic:setcontainer( container )
-end
-
--- called from kPacket_Equip_Item
-function ContainerEquipItem(dynamicdata,iContainerSerial)
-	container =3D GetContainer(iContainerSerial)
-	if (container) then CreateOrUpdateDynamic(dynamicdata,container) end
-end
-
--- called from kPacket_Show_Item
-function CreateOrUpdateItem	(dynamicdata) CreateOrUpdateDynamic(dynamicdat=
a) end
-
--- TODO : move to obj.player.lua ?
--- called from kPacket_SetPlayerWarmode
-function NotifyWarmode	(flag)
-	local player =3D GetPlayerMobile()
-	if (player) then
-		player:setwarmode( flag =3D=3D gWarmode_Combat )
-	end
-end
-
--- called from kPacket_Open_Paperdoll
-function HandleOpenPaperdoll	(paperdoll)
-	local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
-	local mypaperdoll =3D nil
-	for s, gump in pairs( paperdolls ) do
-		if (gump.serial =3D=3D packet.serial) then
-			mypaperdoll =3D gump
-			break
-		end
-	end
-		=

-	if (mypaperdoll) then
-		mypaperdoll:update( paperdoll)
-	else
-		CreatePaperdoll( paperdoll )
-	end
-end
-
--- called from kPacket_Open_Container
-function IsContainerAlreadyOpen (containerserial) =

-	print("TODO : implement me : IsContainerAlreadyOpen")
-	return false
-end
-
--- called from kPacket_Open_Container
-function HandleOpenContainer	(containerdata)
-	local containers =3D gGumpmanager.GetGumpsByName( "container" )
-	local cont =3D nil
-	for s, gump in pairs( containers ) do
-		if (gump.serial =3D=3D containerdata.serial) then
-			cont =3D gump
-			break
-		end
-	end
-	=

-	if (cont) then
-		cont:setBackground( containerdata.gumpid )
-	else
-		CreateContainerGump( containerdata )
-	end
-	=

-	SecureTradeRebuildContainerHook(containerdata) -- TODO : knutmerge  this =
expects a full container record, needs to be fixed
-end
-
--- kPacket_Login_Confirm
-function NotifyLoginConfirm	(packet)
-	local player =3D gObjectList[packet.serial]	=

-	if (not player) then
-		player =3D CreateMobile( packet )
-	end	=

-	=

-	player:update( packet )
-	gPlayerBodySerial =3D player.serial
-end

Modified: branches/knut/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.mobile.lua (original)
+++ branches/knut/data/lua/obj/obj.mobile.lua Sat Aug 25 21:32:02 2007
@@ -1,3 +1,64 @@
+
+
+function CreateOrUpdateMobile (mobiledata,equipmentdata)
+	local mobile =3D GetMobile(mobiledata.serial)
+	if (not mobile) then mobile =3D CreateMobile( mobiledata ) end
+	mobile:update( mobiledata )
+	=

+	if (equipmentdata) then
+		-- TODO: clear old equipment ???
+		for layer,dynamicdata in pairs(equipmentdata) do
+			CreateOrUpdateDynamic(dynamicdata,mobile)
+		end
+	end
+end
+
+-- called from kPacket_Open_Paperdoll
+function HandleOpenPaperdoll	(paperdoll)
+	local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
+	local mypaperdoll =3D nil
+	for s, gump in pairs( paperdolls ) do
+		if (gump.serial =3D=3D packet.serial) then
+			mypaperdoll =3D gump
+			break
+		end
+	end
+		=

+	if (mypaperdoll) then
+		mypaperdoll:update( paperdoll)
+	else
+		CreatePaperdoll( paperdoll )
+	end
+end
+
+
+function MobileStartServerSideAnim (animdata)
+	local mobile =3D GetMobile(animdata.mobileserial)
+	if (mobile) then mobile:DoAnimation( animdata ) end
+end
+
+function MobileUpdateStats (mobileserial,stats)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then
+		mobile:updatestats( stats )
+	end
+end
+
+function MobileUpdateHealth (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then mobile:UpdateHits( curvalue, maxvalue ) end
+end
+
+function MobileUpdateMana (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then mobile:UpdateMana( curvalue, maxvalue ) end	=

+end
+
+function MobileUpdateStamina(mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile) then mobile:UpdateStamina( curvalue, maxvalue ) end
+end
+
 --[[
 mobile.notoriety: =

 	0 =3D invalid/across server line

Modified: branches/knut/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.player.lua (original)
+++ branches/knut/data/lua/obj/obj.player.lua Sat Aug 25 21:32:02 2007
@@ -42,3 +42,32 @@
 		end
 	end
 end
+
+
+-- TODO : move to obj.player.lua ?
+-- called from kPacket_SetPlayerWarmode
+function NotifyWarmode	(flag)
+	local player =3D GetPlayerMobile()
+	if (player) then
+		player:setwarmode( flag =3D=3D gWarmode_Combat )
+	end
+end
+
+
+-- called from kPacket_Teleport
+function NotifyTeleport	(mobiledata)
+	gLastResyncRequest =3D nil
+	--ResetWalkQueue()
+	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
+
+	CreateOrUpdateMobile( mobiledata )
+	-- set player pos after updating mobile, otherwise the mobile may be dele=
ted as its out of range
+	SetPlayerPos( mobiledata.xloc, mobiledata.yloc, mobiledata.zloc, teleport=
data.dir )
+
+	ResetWalkQueue()
+end
+
+-- called from handlers of kPacket_Login_Confirm and kPacket_Teleport
+function UpdatePlayerBodySerial (serial) =

+	gPlayerBodySerial =3D serial =

+end



From no-reply at zwischenwelt.org  Sat Aug 25 21:32:06 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 25 Aug 2007 19:32:06 -0000
Subject: [Iris-commit] [IRIS] r1362 - in /trunk/data/lua: lib.util.lua
 net.login.lua net/net.dynamic.lua net/net.mobile.lua obj/obj.dynamic.lua
 obj/obj.main.lua obj/obj.mobile.lua obj/obj.player.lua
Message-ID: <20070825193206.DA2371524002@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Aug 25 21:32:06 2007
New Revision: 1362

Log:
syncing for merge

Modified:
    trunk/data/lua/lib.util.lua
    trunk/data/lua/net.login.lua
    trunk/data/lua/net/net.dynamic.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/obj/obj.dynamic.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.util.lua (original)
+++ trunk/data/lua/lib.util.lua Sat Aug 25 21:32:06 2007
@@ -327,7 +327,7 @@
 				aw * bz + az * bw + ax * by - ay * bx
 	end
 	=

-	-- returns qw,qx,qy,qz  , input comma seperated list "x:90,y:90,z:30" =

+	-- returns qw,qx,qy,qz  , input comma seperated list QuaternionFromString=
("x:90,y:90,z:30")
 	function QuaternionFromString (txt) =

 		local qw,qx,qy,qz =3D Quaternion.identity()
 		local arr =3D strsplit(",",txt)

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Sat Aug 25 21:32:06 2007
@@ -178,7 +178,7 @@
 	packet =3D {}
 	packet.serial	=3D input:PopNetUint32()
 	packet.unknown1 =3D input:PopNetUint32()
-	packet.body	=3D input:PopNetUint16()
+	packet.artid	=3D input:PopNetUint16()
 	packet.xloc	=3D input:PopNetUint16()
 	packet.yloc	=3D input:PopNetUint16()
 	packet.unknown0 =3D input:PopNetUint8()
@@ -210,7 +210,9 @@
 	Send_UnknownCommand()
 	Send_UnknownSE()
 	=

-	NotifyLoginConfirm(packet)
+	-- TODO : HintStartPosition(packet.xloc, packet.yloc, packet.zloc) hint f=
or campos ?
+	UpdatePlayerBodySerial(packet.serial)
+	CreateOrUpdateMobile(packet)
 end
 =

 -- if packet is received we can Start the Game now !

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Sat Aug 25 21:32:06 2007
@@ -95,7 +95,7 @@
 =

 	ApplyArtidStackManipulation(newitem)
 	=

-	CreateOrUpdateItem(newitem)
+	CreateOrUpdateDynamic(newitem)
 end
 =

 -- AddItemToContainer (0x3C)

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Sat Aug 25 21:32:06 2007
@@ -94,7 +94,7 @@
 	mobiledata.dir 					=3D input:PopNetUint8()
 	mobiledata.zloc 				=3D input:PopInt8()
 	=

-	MobileNotifyTeleport(mobiledata)
+	NotifyTeleport(mobiledata)
 end
 =

 -- Character Animation (0x6e)

Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Sat Aug 25 21:32:06 2007
@@ -1,4 +1,128 @@
--- empty so far, will be filled on knut merge
+-- handles dynamic items (lamps,doors,inventory,...)
+
+-- called from kPacket_Show_Item
+function CreateOrUpdateDynamic	(newitem)
+	-- TODO : if (newitem.artid >=3D gMulti_ID +100) .. model is multi
+	-- gMulti_ID =3D hex2num("0x4000")
+	-- TODO : check newitem.artid for boat
+	=

+	if (gTileTypeLoader) then
+		local miFlags,miWeight,miQuality,miUnknown,miUnknown1,miQuantity,miAnimI=
D,miUnknown2,miHue,miUnknown3,miHeight,msName =3D gTileTypeLoader:GetStatic=
TileType(newitem.artid+32*512) -- add 0x00004000
+		newitem.z_typename =3D msName
+	end
+	=

+	printdebug("mobile","ShowItem "..vardump(newitem))
+	=

+	newitem.isdynamic =3D true -- needed to identify the dynamic in 2d render=
er
+	=

+	local bCreateNew =3D true
+	=

+	local olditem =3D GetDynamic(newitem.serial)
+	if (olditem) then
+		-- if only the position changed we can just update the old one
+		if (	newitem.artid =3D=3D olditem.artid and =

+				newitem.amount =3D=3D olditem.amount and =

+				newitem.flag =3D=3D olditem.flag and =

+				newitem.hue =3D=3D olditem.hue and =

+				newitem.dir =3D=3D olditem.dir and =

+				newitem.artid_addstack =3D=3D olditem.artid_addstack ) then
+			-- update old item
+			bCreateNew =3D false
+			olditem.xloc =3D newitem.xloc
+			olditem.yloc =3D newitem.yloc
+			olditem.zloc =3D newitem.zloc
+			newitem =3D olditem
+		else
+			gCurrentRenderer:RemoveDynamicItem( olditem )
+		end
+	end
+	=

+	if (bCreateNew) then gCurrentRenderer:AddDynamicItem( newitem ) end
+	=

+	gCurrentRenderer:UpdateDynamicItemPos(newitem)
+	gDynamics[newitem.serial] =3D newitem	=

+	gObjectList[newitem.serial] =3D newitem	 -- TODO : fix this like in mobile
+end
+
+
+-- called from kPacket_Object_to_Object
+function ContainerObjectToObject	(item)
+	ApplyArtidStackManipulation(item)
+	RefreshContainerItem(item)
+end
+
+-- called from kPacket_Container_Contents
+function ContainerSetContentItem	(item)
+	ApplyArtidStackManipulation(item)
+	RefreshContainerItem(item)
+	--printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_st=
ack=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,i=
tem.artid_addstack,item.amount)
+	--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticTi=
leTypeName(item.artid)))
+end
+
+-- called from kPacket_Equip_Item
+function ContainerEquipItem(item,container_serial)
+	--print("NET : Equip_Item",vardump(item))
+	=

+	item.mobile_serial =3D container_serial
+	local mobile =3D GetMobile(item.mobile_serial)
+	if (mobile) then
+		item.mobile =3D mobile
+		if (mobile.equipment[item.layer]) then
+			DestroyMobileItem(mobile.equipment[item.layer])
+		end
+		mobile.equipment[item.layer] =3D item
+		gMobileItemsBySerial[item.serial] =3D item
+		--printf("NET : kPacket_Equip_Item mobile=3D0x%08x item=3D0x%08x\n",item=
.mobile_serial,item.serial)
+		UpdateMobileEquipment(mobile)
+	else =

+		print("WARNING ! mobile update for unknown mobile received, update lost =
!")
+
+		-- don't crash on UOX3, Lonewolf (this servers sends unknown Equip messa=
ges)
+		if ((gServerType[gServerEmulator] ~=3D "Lonewolf") and (gServerType[gSer=
verEmulator] ~=3D "SpherePolUox3")) then
+			print("Crash Client here!"..gServerType[gServerEmulator])
+			Crash()
+		end
+
+		-- the client state would loose sync with server, this is fatal, =

+		-- but should never happen for correct server implementation ? (there ar=
e strange servers however...)
+		-- an alternative would be to create the mobile if unknown , something l=
ike GetOrCreateMobile like in net.container.lua
+	end
+end
+
+-- called from kPacket_Open_Container
+function IsContainerAlreadyOpen (containerserial) =

+	local container =3D GetOrCreateContainer(containerdata.serial)
+	return container.dialog ~=3D nil
+end
+
+
+-- called from kPacket_Open_Container
+function HandleOpenContainer	(containerdata)
+
+	local container =3D GetOrCreateContainer(containerdata.serial)
+	container.gumpid =3D containerdata.gumpid
+	=

+	-- 0x003c =3D backpack
+	-- 0x0030 =3D shopcontainer
+	--AddFadeLines(sprintf("Open_Container gumpid=3D%d",container.gumpid))
+	if (not container.dialog) then
+		-- create dialog from scratch
+		local dialog =3D guimaker.MakeSortedDialog()
+		container.dialog =3D dialog
+		dialog.uoContainer =3D container
+		dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
+		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
+		dialog.backpane.mbIgnoreMouseOver =3D false
+		dialog.backpane.onMouseDown =3D function (widget,mousebutton)
+										if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoCo=
ntainer.serial) end
+										if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.=
StartMoveDialog(widget.dialog.rootwidget) end
+									  end
+	end
+	RefreshContainerItemWidgets(container)
+
+	SecureTradeRebuildContainerHook(container)
+end
+
 =

 =

 -- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Sat Aug 25 21:32:06 2007
@@ -69,369 +69,3 @@
 end
 =

 =

-function DestroyMobileBySerial (serial) =

-	local mobile =3D GetMobile(serial)
-	if (not mobile) then return end
-	=

-	CloseStatus(mobile)
-
-	-- clean up equipment
-	if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
-		DestroyMobileItem(item)
-	end end
-	=

-	gCurrentRenderer:RemoveMobile( mobile )
-	=

-	KNUTMERGETEMP_DEL_MOBILE(serial)
-
-	-- destroy Status Gump from NPC
-	CloseStatus(mobile)
-	=

-	mobile.serial =3D nil
-end
-
--- called from kPacket_Naked_MOB kPacket_Equipped_MOB kPacket_Teleport
-function CreateOrUpdateMobile (mobiledata,equipmentdata)
-	local mobile =3D GetMobile(mobiledata.serial)
-	if (not mobile) then mobile =3D KNUTMERGETEMP_CREATE_EMPTY_MOBILE(mobiled=
ata.serial) end
-	=

-	for k,v in pairs(mobiledata) do mobile[k] =3D v end
-	-- mobile.serial		=

-	-- mobile.artid		=

-	-- mobile.xloc			=

-	-- mobile.yloc 		=

-	-- mobile.zloc			=

-	-- mobile.dir			=

-	-- mobile.hue			=

-	-- mobile.flag			=

-	-- mobile.notoriety	=

-	-- mobile.amount	-- only kPacket_Equipped_MOB, corpse related ?
-	-- mobile.dir2		-- only kPacket_Equipped_MOB, unknown
-	=

-	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer =
-- TODO : is this obsolete since knut ?
-	=

-	-- request basic stats info
-	Send_ClientQuery(gRequest_States,mobile.serial)
-	=

-	if (equipmentdata) then
-		mobile.equipment =3D {} -- todo : KILL old equipment items ???
-
-		=

-		for layer,itemdata in pairs(equipmentdata) do
-			local item =3D KNUTMERGETEMP_CREATE_EMPTY_ITEM(itemdata.serial) -- dyna=
mic ? =

-			=

-			for k,v in pairs(itemdata) do item[k] =3D v end
-			-- item.serial
-			-- item.artid
-			-- item.layer
-			-- item.hue
-			=

-			item.mobile =3D mobile
-			item.mobile_serial =3D mobile.serial
-			mobile.equipment[item.layer] =3D item
-			gMobileItemsBySerial[item.serial] =3D item -- TODO : obsoleted by knut =
merge ??
-		end
-	end
-	=

-	UpdateMobile(mobile)
-	if (equipmentdata) then UpdateMobileEquipment(mobile) end
-	return mobile
-end
-
-
--- called from kPacket_Teleport
-function MobileNotifyTeleport	(mobiledata)
-	--mobiledata.serial				=

-	--mobiledata.artid				=

-	--mobiledata.teleport_unknown1 	=

-	--mobiledata.hue 					=

-	--mobiledata.flag 				=

-	--mobiledata.xloc 				=

-	--mobiledata.yloc 				=

-	--mobiledata.teleport_unknown2	=

-	--mobiledata.dir 					=

-	--mobiledata.zloc
-	-- TODO : knutmerge ??  : local mobile =3D CreateOrUpdateMobile(mobiledat=
a)	=

-	=

-	local bPlayerRunning =3D BitwiseAND(mobiledata.dir,kWalkFlag_Run) ~=3D 0
-	local fullplayerdir =3D mobiledata.dir
-	mobiledata.dir =3D BitwiseAND(mobiledata.dir,hex2num("0x07"))
-	=

-	gLastResyncRequest =3D nil
-	--ResetWalkQueue()
-	=

-	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
-
-	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XLoc: =
%i YLoc: %i ZLoc: %i Dir: [%s]\n",
-			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gPlaye=
rDir or 0] or ""))
-	=

-	-- TODO : (Check if char is in Boat!)
-
-	printdebug("login",sprintf("NET: Draw_Player: mobiledata.serial: %i body:=
 %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
-			mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yloc, =
mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
-
-	-- Check if Player is already on Teleported Pos
-	if (gPlayerXLoc ~=3D mobiledata.xloc or gPlayerYLoc ~=3D mobiledata.yloc =
or
-		gPlayerZLoc ~=3D mobiledata.zloc or gPlayerDir ~=3D mobiledata.dir) then
-		SetPlayerPos(mobiledata.xloc,mobiledata.yloc,mobiledata.zloc,fullplayerd=
ir)
-		print("Player is teleported.")
-	else
-		print("Player not teleported, because already on the same pos+dir!")
-	end
-
-	UpdatePlayerBodySerial(mobiledata.serial)
-	local playerMobile=3DGetPlayerMobile()
-	if (playerMobile) then
-		if (playerMobile.artid ~=3D mobiledata.artid) then
-			print("Change PC Bodytype=3D"..mobiledata.artid)
-			playerMobile.artid=3Dmobiledata.artid
-
-			-- currently only for human (not elfs)
-			if ( (playerMobile.artid=3D=3D402) or (playerMobile.artid=3D=3D403) or
-				 (playerMobile.artid=3D=3D607) or (playerMobile.artid=3D=3D608) or
-				 (playerMobile.artid=3D=3D970)) then
-				print("TODO : pc character is now ghost. new bodymodel=3D"..mobiledata=
.artid)
-			end
-
-			gCurrentRenderer:UpdateMobile( playerMobile )
-		end
-	end
-
-	ResetWalkQueue() -- todo : (here or only if setplayerpos is done?)
-end
-
-function MobileStartServerSideAnim (animdata)
-	gCurrentRenderer:MobileStartServerSideAnim(animdata)
-end
-
-function MobileUpdateStats (mobileserial,stats)
-	local mobile =3D GetMobile(mobileserial)
-	-- Update Mobile
-	if (mobile) then
-		-- local oldhp =3D mobile.stats.curHits or stats.curHits
-		mobile.name =3D stats.name
-		mobile.stats =3D stats
-		-- not needed due to normal damage packet
-		-- TODO is this ok for every server?
-		-- gCurrentRenderer:NotifyHPChange(mobileserial, oldhp, mobile.stats.cur=
Hits)
-		UpdateMobile(mobile)
-	end
-	=

-	TradeUpdatePlayerGold()
-end
-
-function MobileUpdateHealth (mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
-	if (mobile and (maxvalue ~=3D 1000) and mobile.stats) then
-		if mobile.stats.curHits then
-			-- if there was a change, plop a text
-			local old =3D mobile.stats.curHits
-			gCurrentRenderer:NotifyHPChange(mobileserial, old, curvalue)
-		end
-		-- update values
-		mobile.stats.curHits =3D curvalue
-		mobile.stats.maxHits =3D maxvalue
-
-		UpdateMobile(mobile)
-	end
-end
-
-function MobileUpdateMana (mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile and mobile.stats) then
-		-- update values
-		mobile.stats.curMana =3D curvalue
-		mobile.stats.maxMana =3D maxvalue
-
-		if (mobileserial =3D=3D gPlayerBodySerial) then
-			gui.SetMana(curvalue/maxvalue)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
-end
-
-function MobileUpdateStamina(mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile and mobile.stats) then
-		-- update values
-		mobile.stats.curStamina =3D curvalue
-		mobile.stats.maxStamina =3D maxvalue
-
-		if (mobileserial =3D=3D gPlayerBodySerial) then
-			gui.SetStamina(curvalue/maxvalue)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
-end
-
--- called from kPacket_Object_to_Object
-function ContainerObjectToObject	(item)
-	ApplyArtidStackManipulation(item)
-	RefreshContainerItem(item)
-end
-
--- called from kPacket_Container_Contents
-function ContainerSetContentItem	(item)
-	ApplyArtidStackManipulation(item)
-	RefreshContainerItem(item)
-	--printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_st=
ack=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,i=
tem.artid_addstack,item.amount)
-	--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticTi=
leTypeName(item.artid)))
-end
-
--- called from kPacket_Equip_Item
-function ContainerEquipItem(item,container_serial)
-	--print("NET : Equip_Item",vardump(item))
-	=

-	item.mobile_serial =3D container_serial
-	local mobile =3D GetMobile(item.mobile_serial)
-	if (mobile) then
-		item.mobile =3D mobile
-		if (mobile.equipment[item.layer]) then
-			DestroyMobileItem(mobile.equipment[item.layer])
-		end
-		mobile.equipment[item.layer] =3D item
-		gMobileItemsBySerial[item.serial] =3D item
-		--printf("NET : kPacket_Equip_Item mobile=3D0x%08x item=3D0x%08x\n",item=
.mobile_serial,item.serial)
-		UpdateMobileEquipment(mobile)
-	else =

-		print("WARNING ! mobile update for unknown mobile received, update lost =
!")
-
-		-- don't crash on UOX3, Lonewolf (this servers sends unknown Equip messa=
ges)
-		if ((gServerType[gServerEmulator] ~=3D "Lonewolf") and (gServerType[gSer=
verEmulator] ~=3D "SpherePolUox3")) then
-			print("Crash Client here!"..gServerType[gServerEmulator])
-			Crash()
-		end
-
-		-- the client state would loose sync with server, this is fatal, =

-		-- but should never happen for correct server implementation ? (there ar=
e strange servers however...)
-		-- an alternative would be to create the mobile if unknown , something l=
ike GetOrCreateMobile like in net.container.lua
-	end
-end
-
--- called from kPacket_Show_Item
-function CreateOrUpdateItem	(newitem)
-	-- TODO : if (newitem.artid >=3D gMulti_ID +100) .. model is multi
-	-- gMulti_ID =3D hex2num("0x4000")
-	-- TODO : check newitem.artid for boat
-	=

-	if (gTileTypeLoader) then
-		local miFlags,miWeight,miQuality,miUnknown,miUnknown1,miQuantity,miAnimI=
D,miUnknown2,miHue,miUnknown3,miHeight,msName =3D gTileTypeLoader:GetStatic=
TileType(newitem.artid+32*512) -- add 0x00004000
-		newitem.z_typename =3D msName
-	end
-	=

-	printdebug("mobile","ShowItem "..vardump(newitem))
-	=

-	newitem.isdynamic =3D true -- needed to identify the dynamic in 2d render=
er
-	=

-	local bCreateNew =3D true
-	=

-	local olditem =3D GetDynamic(newitem.serial)
-	if (olditem) then
-		-- if only the position changed we can just update the old one
-		if (	newitem.artid =3D=3D olditem.artid and =

-				newitem.amount =3D=3D olditem.amount and =

-				newitem.flag =3D=3D olditem.flag and =

-				newitem.hue =3D=3D olditem.hue and =

-				newitem.dir =3D=3D olditem.dir and =

-				newitem.artid_addstack =3D=3D olditem.artid_addstack ) then
-			-- update old item
-			bCreateNew =3D false
-			olditem.xloc =3D newitem.xloc
-			olditem.yloc =3D newitem.yloc
-			olditem.zloc =3D newitem.zloc
-			newitem =3D olditem
-		else
-			gCurrentRenderer:RemoveDynamicItem( olditem )
-		end
-	end
-	=

-	if (bCreateNew) then gCurrentRenderer:AddDynamicItem( newitem ) end
-	=

-	gCurrentRenderer:UpdateDynamicItemPos(newitem)
-	gDynamics[newitem.serial] =3D newitem	=

-	gObjectList[newitem.serial] =3D newitem	 -- TODO : fix this like in mobile
-end
-
--- TODO : move to obj.player.lua ?
--- called from kPacket_SetPlayerWarmode
-function NotifyWarmode	(flag)
-	if (flag =3D=3D gWarmode_Normal) then
-		gActWarmode=3DgWarmode_Normal
-		AddFadeLines("Be the peace with you!")
-		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: normal\n",i=
d)
-	end
-	if (flag =3D=3D gWarmode_Combat) then
-		gActWarmode=3DgWarmode_Combat
-		AddFadeLines("You go into War!")
-		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: combat\n",i=
d)
-	end
-	gui.SetWarmode(gActWarmode)
-end
-
--- called from kPacket_Open_Paperdoll
-function HandleOpenPaperdoll	(paperdoll)
-	paperdoll.mobileserial	=3D paperdoll.serial
-	paperdoll.Close =3D ClosePaperdoll
-	=

-	-- close old paperdoll
-	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
-	if (oldpaperdoll) then oldpaperdoll:Close() end =

-	=

-	-- register paperdoll
-	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
-	=

-	--AddFadeLines("Open Paperdoll for ["..(paperdoll.mobileserial).."] "..(p=
aperdoll.name or ""))
-	=

-	RebuildPaperdoll(paperdoll)
-end
-
--- called from kPacket_Open_Container
-function IsContainerAlreadyOpen (containerserial) =

-	local container =3D GetOrCreateContainer(containerdata.serial)
-	return container.dialog ~=3D nil
-end
-
-
--- called from kPacket_Open_Container
-function HandleOpenContainer	(containerdata)
-
-	local container =3D GetOrCreateContainer(containerdata.serial)
-	container.gumpid =3D containerdata.gumpid
-	=

-	-- 0x003c =3D backpack
-	-- 0x0030 =3D shopcontainer
-	--AddFadeLines(sprintf("Open_Container gumpid=3D%d",container.gumpid))
-	if (not container.dialog) then
-		-- create dialog from scratch
-		local dialog =3D guimaker.MakeSortedDialog()
-		container.dialog =3D dialog
-		dialog.uoContainer =3D container
-		dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
-		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
-		dialog.backpane.mbIgnoreMouseOver =3D false
-		dialog.backpane.onMouseDown =3D function (widget,mousebutton)
-										if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoCo=
ntainer.serial) end
-										if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.=
StartMoveDialog(widget.dialog.rootwidget) end
-									  end
-	end
-	RefreshContainerItemWidgets(container)
-
-	SecureTradeRebuildContainerHook(container)
-end
-
--- kPacket_Login_Confirm
-function NotifyLoginConfirm	(packet)
-	local bodytype =3D packet.body
-	local playerid =3D packet.serial
-	printdebug("login",sprintf("NET: Login_Confirm CharacterID: 0x%08x Bodyty=
pe: %i x: %i y: %i z: %i flag=3D0x%02x\n", playerid, bodytype, packet.xloc,=
 packet.yloc, packet.zloc, packet.flag))
-
-	-- TODO : HintStartPosition(x_location,y_location,z_location) ?
-	-- this is just a hint that might be used to position the cam	=

-	=

-	UpdatePlayerBodySerial(playerid)
-	local playerMobile =3D GetPlayerMobile()
-	if (playerMobile) then playerMobile.artid =3D packet.body end
-end

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Sat Aug 25 21:32:06 2007
@@ -3,6 +3,163 @@
 -- see also net.skill.lua
 =

 gHudNamesFontSize =3D 12
+
+
+function DestroyMobileBySerial (serial) =

+	local mobile =3D GetMobile(serial)
+	if (not mobile) then return end
+	=

+	CloseStatus(mobile)
+
+	-- clean up equipment
+	if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
+		DestroyMobileItem(item)
+	end end
+	=

+	gCurrentRenderer:RemoveMobile( mobile )
+	=

+	KNUTMERGETEMP_DEL_MOBILE(serial)
+
+	-- destroy Status Gump from NPC
+	CloseStatus(mobile)
+	=

+	mobile.serial =3D nil
+end
+
+-- called from kPacket_Naked_MOB kPacket_Equipped_MOB kPacket_Teleport
+function CreateOrUpdateMobile (mobiledata,equipmentdata)
+	local mobile =3D GetMobile(mobiledata.serial)
+	if (not mobile) then mobile =3D KNUTMERGETEMP_CREATE_EMPTY_MOBILE(mobiled=
ata.serial) end
+	=

+	for k,v in pairs(mobiledata) do mobile[k] =3D v end
+	-- mobile.serial		=

+	-- mobile.artid		=

+	-- mobile.xloc			=

+	-- mobile.yloc 		=

+	-- mobile.zloc			=

+	-- mobile.dir			=

+	-- mobile.hue			=

+	-- mobile.flag			=

+	-- mobile.notoriety	=

+	-- mobile.amount	-- only kPacket_Equipped_MOB, corpse related ?
+	-- mobile.dir2		-- only kPacket_Equipped_MOB, unknown
+	=

+	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer =
-- TODO : is this obsolete since knut ?
+	=

+	-- request basic stats info
+	Send_ClientQuery(gRequest_States,mobile.serial)
+	=

+	if (equipmentdata) then
+		mobile.equipment =3D {} -- todo : KILL old equipment items ???
+
+		=

+		for layer,itemdata in pairs(equipmentdata) do
+			local item =3D KNUTMERGETEMP_CREATE_EMPTY_ITEM(itemdata.serial) -- dyna=
mic ? =

+			=

+			for k,v in pairs(itemdata) do item[k] =3D v end
+			-- item.serial
+			-- item.artid
+			-- item.layer
+			-- item.hue
+			=

+			item.mobile =3D mobile
+			item.mobile_serial =3D mobile.serial
+			mobile.equipment[item.layer] =3D item
+			gMobileItemsBySerial[item.serial] =3D item -- TODO : obsoleted by knut =
merge ??
+		end
+	end
+	=

+	UpdateMobile(mobile)
+	if (equipmentdata) then UpdateMobileEquipment(mobile) end
+	return mobile
+end
+
+
+-- called from kPacket_Open_Paperdoll
+function HandleOpenPaperdoll	(paperdoll)
+	paperdoll.mobileserial	=3D paperdoll.serial
+	paperdoll.Close =3D ClosePaperdoll
+	=

+	-- close old paperdoll
+	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
+	if (oldpaperdoll) then oldpaperdoll:Close() end =

+	=

+	-- register paperdoll
+	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
+	=

+	--AddFadeLines("Open Paperdoll for ["..(paperdoll.mobileserial).."] "..(p=
aperdoll.name or ""))
+	=

+	RebuildPaperdoll(paperdoll)
+end
+
+
+function MobileStartServerSideAnim (animdata)
+	gCurrentRenderer:MobileStartServerSideAnim(animdata)
+end
+
+function MobileUpdateStats (mobileserial,stats)
+	local mobile =3D GetMobile(mobileserial)
+	-- Update Mobile
+	if (mobile) then
+		-- local oldhp =3D mobile.stats.curHits or stats.curHits
+		mobile.name =3D stats.name
+		mobile.stats =3D stats
+		-- not needed due to normal damage packet
+		-- TODO is this ok for every server?
+		-- gCurrentRenderer:NotifyHPChange(mobileserial, oldhp, mobile.stats.cur=
Hits)
+		UpdateMobile(mobile)
+	end
+	=

+	TradeUpdatePlayerGold()
+end
+
+function MobileUpdateHealth (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
+	if (mobile and (maxvalue ~=3D 1000) and mobile.stats) then
+		if mobile.stats.curHits then
+			-- if there was a change, plop a text
+			local old =3D mobile.stats.curHits
+			gCurrentRenderer:NotifyHPChange(mobileserial, old, curvalue)
+		end
+		-- update values
+		mobile.stats.curHits =3D curvalue
+		mobile.stats.maxHits =3D maxvalue
+
+		UpdateMobile(mobile)
+	end
+end
+
+function MobileUpdateMana (mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile and mobile.stats) then
+		-- update values
+		mobile.stats.curMana =3D curvalue
+		mobile.stats.maxMana =3D maxvalue
+
+		if (mobileserial =3D=3D gPlayerBodySerial) then
+			gui.SetMana(curvalue/maxvalue)
+			-- update big_stats window
+			UpdateStatusAos()
+		end
+	end
+end
+
+function MobileUpdateStamina(mobileserial,curvalue,maxvalue)
+	local mobile =3D GetMobile(mobileserial)
+	if (mobile and mobile.stats) then
+		-- update values
+		mobile.stats.curStamina =3D curvalue
+		mobile.stats.maxStamina =3D maxvalue
+
+		if (mobileserial =3D=3D gPlayerBodySerial) then
+			gui.SetStamina(curvalue/maxvalue)
+			-- update big_stats window
+			UpdateStatusAos()
+		end
+	end
+end
+
 			=

 -- request the tooltipp for the mobile, e.g. the name
 -- the uo protocol is a bit ugly here, we actually have to send a mousecli=
ck as request

Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Sat Aug 25 21:32:06 2007
@@ -12,19 +12,6 @@
 	return mobile and (mobile.serial =3D=3D gPlayerBodySerial)
 end
 =

-
--- called from handlers of kPacket_Login_Confirm and kPacket_Teleport
-function UpdatePlayerBodySerial (newserial)
-	if (gPlayerBodySerial ~=3D 0 and gPlayerBodySerial ~=3D newserial) then =

-		print("WARNING ! playerbody serial changed old,new=3D",gPlayerBodySerial=
,newserial)
-	end
-	gPlayerBodySerial =3D newserial
-	PlayerEquipmentUpdated()
-	=

-	-- TODO this seems a bit like the wrong place for this stuff
-	-- create player status dialog and stuff like this
-	GuiInit()
-end
 =

 -- adjust backpack art and maybe paperdoll ?
 -- called from kPacket_Equipped_MOB and UpdatePlayerBodySerial
@@ -65,7 +52,7 @@
 function GetPlayerBackPackItem ()
 	local res =3D nil
 	local playermobile =3D GetPlayerMobile()
-	if (playermobile) then res =3D playermobile.equipment[kLayer_Backpack] end
+	if (playermobile) then res =3D playermobile.equipment and playermobile.eq=
uipment[kLayer_Backpack] end
 	return res
 end
 =

@@ -84,3 +71,93 @@
 	end
 end
 =

+
+-- TODO : move to obj.player.lua ?
+-- called from kPacket_SetPlayerWarmode
+function NotifyWarmode	(flag)
+	if (flag =3D=3D gWarmode_Normal) then
+		gActWarmode=3DgWarmode_Normal
+		AddFadeLines("Be the peace with you!")
+		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: normal\n",i=
d)
+	end
+	if (flag =3D=3D gWarmode_Combat) then
+		gActWarmode=3DgWarmode_Combat
+		AddFadeLines("You go into War!")
+		--printf("NET: kPacket_SetPlayerWarmode id: 0x%02x gWarmode: combat\n",i=
d)
+	end
+	gui.SetWarmode(gActWarmode)
+end
+
+-- called from kPacket_Teleport
+function NotifyTeleport	(mobiledata)
+	--mobiledata.serial				=

+	--mobiledata.artid				=

+	--mobiledata.teleport_unknown1 	=

+	--mobiledata.hue 					=

+	--mobiledata.flag 				=

+	--mobiledata.xloc 				=

+	--mobiledata.yloc 				=

+	--mobiledata.teleport_unknown2	=

+	--mobiledata.dir 					=

+	--mobiledata.zloc
+	-- TODO : knutmerge ??  : local mobile =3D CreateOrUpdateMobile(mobiledat=
a)	=

+	=

+	local bPlayerRunning =3D BitwiseAND(mobiledata.dir,kWalkFlag_Run) ~=3D 0
+	local fullplayerdir =3D mobiledata.dir
+	mobiledata.dir =3D BitwiseAND(mobiledata.dir,hex2num("0x07"))
+	=

+	gLastResyncRequest =3D nil
+	--ResetWalkQueue()
+	=

+	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
+
+	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XLoc: =
%i YLoc: %i ZLoc: %i Dir: [%s]\n",
+			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gPlaye=
rDir or 0] or ""))
+	=

+	-- TODO : (Check if char is in Boat!)
+
+	printdebug("login",sprintf("NET: Draw_Player: mobiledata.serial: %i body:=
 %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
+			mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yloc, =
mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
+
+	-- Check if Player is already on Teleported Pos
+	if (gPlayerXLoc ~=3D mobiledata.xloc or gPlayerYLoc ~=3D mobiledata.yloc =
or
+		gPlayerZLoc ~=3D mobiledata.zloc or gPlayerDir ~=3D mobiledata.dir) then
+		SetPlayerPos(mobiledata.xloc,mobiledata.yloc,mobiledata.zloc,fullplayerd=
ir)
+		print("Player is teleported.")
+	else
+		print("Player not teleported, because already on the same pos+dir!")
+	end
+
+	UpdatePlayerBodySerial(mobiledata.serial)
+	local playerMobile=3DGetPlayerMobile()
+	if (playerMobile) then
+		if (playerMobile.artid ~=3D mobiledata.artid) then
+			print("Change PC Bodytype=3D"..mobiledata.artid)
+			playerMobile.artid=3Dmobiledata.artid
+
+			-- currently only for human (not elfs)
+			if ( (playerMobile.artid=3D=3D402) or (playerMobile.artid=3D=3D403) or
+				 (playerMobile.artid=3D=3D607) or (playerMobile.artid=3D=3D608) or
+				 (playerMobile.artid=3D=3D970)) then
+				print("TODO : pc character is now ghost. new bodymodel=3D"..mobiledata=
.artid)
+			end
+
+			gCurrentRenderer:UpdateMobile( playerMobile )
+		end
+	end
+
+	ResetWalkQueue() -- todo : (here or only if setplayerpos is done?)
+end
+
+-- called from handlers of kPacket_Login_Confirm and kPacket_Teleport
+function UpdatePlayerBodySerial (serial) =

+	if (gPlayerBodySerial ~=3D 0 and gPlayerBodySerial ~=3D serial) then =

+		print("WARNING ! playerbody serial changed old,new=3D",gPlayerBodySerial=
,serial)
+	end
+	gPlayerBodySerial =3D serial
+	PlayerEquipmentUpdated()
+	=

+	-- TODO this seems a bit like the wrong place for this stuff
+	-- create player status dialog and stuff like this
+	GuiInit()
+end



From no-reply at zwischenwelt.org  Wed Aug 29 01:07:23 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 28 Aug 2007 23:07:23 -0000
Subject: [Iris-commit] [IRIS] r1364 - in /branches/knut/data/lua: ./ net/
	obj/
Message-ID: <20070828230723.E1EB71C186FB@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 29 01:07:23 2007
New Revision: 1364

Log:
syning for merge

Modified:
    branches/knut/data/lua/lib.3d.map.lua
    branches/knut/data/lua/lib.3d.mobileanim.lua
    branches/knut/data/lua/lib.3d.renderer.lua
    branches/knut/data/lua/lib.data.lua
    branches/knut/data/lua/lib.models.lua
    branches/knut/data/lua/lib.spellbooks.lua
    branches/knut/data/lua/lib.static.lua
    branches/knut/data/lua/lib.test.lua
    branches/knut/data/lua/lib.uodragdrop.lua
    branches/knut/data/lua/lib.walking2.lua
    branches/knut/data/lua/net.cursor.lua
    branches/knut/data/lua/net.other.lua
    branches/knut/data/lua/net.uodragdrop.lua
    branches/knut/data/lua/net/net.dynamic.lua
    branches/knut/data/lua/obj/obj.main.lua
    branches/knut/data/lua/obj/obj.mobile.lua

Modified: branches/knut/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.map.lua (original)
+++ branches/knut/data/lua/lib.3d.map.lua Wed Aug 29 01:07:23 2007
@@ -193,7 +193,7 @@
 						if (gLightsources) then
 							local arrtiletype =3D {}
 							arrtiletype =3D GetStaticTileType(iTileTypeID)
-							if( BitwiseAND(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) =
~=3D 0 ) then
+							if( TestBit(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ) t=
hen
 								local x,y,z =3D Renderer3D:UOPosToLocal(entity.x,entity.y,entity.z=
 * 0.1)
 								Client_AddPointLight(entity.x-0.5,entity.y-0.5,entity.z+arrtiletyp=
e.miHeight, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
 							end

Modified: branches/knut/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.mobileanim.lua (original)
+++ branches/knut/data/lua/lib.3d.mobileanim.lua Wed Aug 29 01:07:23 2007
@@ -62,10 +62,10 @@
 	-- detect animation modifiers : staff, mount=3Dhorse, combat
 	local mount		=3D GetMobileEquipmentItem(mobile,kLayer_Mount)
 	local twohand	=3D GetMobileEquipmentItem(mobile,kLayer_TwoHanded) -- staff
-	local bHasStaff =3D twohand and BitwiseAND(GetStaticTileTypeFlags(twohand=
.artid) or 0,kTileDataFlag_Weapon) ~=3D 0
-	local bWarMode 	=3D BitwiseAND(mobile.flag,kMobileFlag_WarMode) ~=3D 0 --=
 combat
-	local bRunning 	=3D mobile.walksmooth_moving and (BitwiseAND(mobile.dir,k=
WalkFlag_Run) ~=3D 0)
-	--local bRunning 	=3D (mobile.walksmooth_moving or mobile.walksmooth_turn=
ing) and (BitwiseAND(mobile.dir,kWalkFlag_Run) ~=3D 0)
+	local bHasStaff =3D twohand and TestBit(GetStaticTileTypeFlags(twohand.ar=
tid) or 0,kTileDataFlag_Weapon)
+	local bWarMode 	=3D TestBit(mobile.flag,kMobileFlag_WarMode) -- combat
+	local bRunning 	=3D mobile.walksmooth_moving and TestBit(mobile.dir,kWalk=
Flag_Run)
+	--local bRunning 	=3D (mobile.walksmooth_moving or mobile.walksmooth_turn=
ing) and TestBit(mobile.dir,kWalkFlag_Run)
 	--local bPlayerIsInWarMode =3D gActWarmode =3D=3D gWarmode_Combat -- TODO=
 : only player, not any mobile
 	=

 	--(mobile.walksmooth_turning or mobile.walksmooth_moving or (not mobile.a=
nimstate))
@@ -193,7 +193,7 @@
 	local yloc2 =3D mobile.gfx3d_walksmooth_last_yloc
 	local zloc2 =3D mobile.gfx3d_walksmooth_last_zloc
 	local dir2  =3D mobile.gfx3d_walksmooth_last_dir
-	local bRunning =3D BitwiseAND(dir2,kWalkFlag_Run) ~=3D 0
+	local bRunning =3D TestBit(dir2,kWalkFlag_Run)
 	dir1 =3D BitwiseAND(dir1,hex2num("0x07"))
 	dir2 =3D BitwiseAND(dir2,hex2num("0x07"))
 	=


Modified: branches/knut/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.3d.renderer.lua (original)
+++ branches/knut/data/lua/lib.3d.renderer.lua Wed Aug 29 01:07:23 2007
@@ -800,7 +800,7 @@
 			if (gLightsources) then
 			local arrtiletype =3D {}
 			arrtiletype =3D GetStaticTileType(item.artid)
-			if( BitwiseAND(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ~=3D=
 0 ) then
+			if( TestBit(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ) then
 				local x,y,z =3D Renderer3D:UOPosToLocal(item.xloc,item.yloc,(item.zloc=
+arrtiletype.miHeight) * 0.1)
 				Client_AddPointLight(x,y,z, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
 			end

Modified: branches/knut/data/lua/lib.data.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.data.lua (original)
+++ branches/knut/data/lua/lib.data.lua Wed Aug 29 01:07:23 2007
@@ -2,7 +2,7 @@
 -- nil if not wearable
 function GetPaperdollLayerFromTileType (iTileTypeID)
 	local t =3D GetStaticTileType(iTileTypeID)
-	if (t and BitwiseAND(t.miFlags,kTileDataFlag_Wearable) ~=3D 0) then =

+	if (t and TestBit(t.miFlags,kTileDataFlag_Wearable)) then =

 		return t.miQuality
 	end
 	return nil

Modified: branches/knut/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.models.lua (original)
+++ branches/knut/data/lua/lib.models.lua Wed Aug 29 01:07:23 2007
@@ -344,12 +344,12 @@
 					=

 					--local bShieldHand=3Dfalse
 					-- check for shields (if wearable -> take quality as layer) (stupid)
-					--if (BitwiseAND(tiledata.miFlags,kTileDataFlag_Wearable)~=3D0) then
+					--if (TestBit(tiledata.miFlags,kTileDataFlag_Wearable)) then
 						--print("QualityLayer=3D"..tiledata.miQuality.." "..tiledata.msName)
 					--	bShieldHand=3Dtrue
 					--end
 					=

-					local bDoubleHanded =3D (layer =3D=3D kLayer_TwoHanded) and (BitwiseA=
ND(tiledata.miFlags,kTileDataFlag_Weapon) ~=3D 0)
+					local bDoubleHanded =3D (layer =3D=3D kLayer_TwoHanded) and TestBit(t=
iledata.miFlags,kTileDataFlag_Weapon)
 					if (layer =3D=3D kLayer_OneHanded or bDoubleHanded) then =

 						iPrimaryHandItem =3D {hue=3Dhue,modelid=3Dmodelid}
 					elseif (layer =3D=3D kLayer_TwoHanded) then =


Modified: branches/knut/data/lua/lib.spellbooks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.spellbooks.lua (original)
+++ branches/knut/data/lua/lib.spellbooks.lua Wed Aug 29 01:07:23 2007
@@ -193,7 +193,7 @@
 				local spellcounter=3D0
 =

 				for spell=3D1, spellnumber do
-					if (BitwiseAND(spellbook.matrix[circle], BitwiseSHL(1,spell-1)) ~=3D =
0) then
+					if (TestBit(spellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
 						-- increase number of available spells
 						spellcounter=3Dspellcounter+1
 						local spellbutton =3D MakeBorderGumpPart(curparent, hex2num("0x837")=
, 60 + rightspacer, 20+((spellcounter+1)*15) - top_align)
@@ -233,7 +233,7 @@
 				local spellnumber=3Dtable.getn(gSpellBooks[spellbook.itemid].spells[ci=
rcle])
 			=

 				for spell=3D1, spellnumber do
-					if (BitwiseAND(spellbook.matrix[circle], BitwiseSHL(1,spell-1)) ~=3D =
0) then
+					if (TestBit(spellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
 						-- increase number of available spells
 						spellcounter=3Dspellcounter+1
 =


Modified: branches/knut/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.static.lua (original)
+++ branches/knut/data/lua/lib.static.lua Wed Aug 29 01:07:23 2007
@@ -108,7 +108,7 @@
 				end
 				-- Hue this Model | TODO : Partitial Hue
 				if (gHueLoader) then
-					if( BitwiseAND(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTi=
leDataFlag_Partial_Hue) ~=3D 0 ) then
+					if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileD=
ataFlag_Partial_Hue)) then
 						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
 					else
 						HueMesh(meshname,gHueLoader,iHue)

Modified: branches/knut/data/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.test.lua (original)
+++ branches/knut/data/lua/lib.test.lua Wed Aug 29 01:07:23 2007
@@ -202,9 +202,9 @@
 =

 -- test if lua can perform bitwise operations correctly
 function LuaBitwiseTest ()
-	if ( BitwiseAND(hex2num("0x4000250e"),hex2num("0x80000000")) ~=3D 0) then=
 print("we got bug") Crash() end
+	if ( TestBit(hex2num("0x4000250e"),hex2num("0x80000000"))) then print("we=
 got bug") Crash() end
 	local test =3D hex2num("0x4000250e")
-	if ( BitwiseAND(test,hex2num("0x80000000")) ~=3D 0) then print("we got bu=
g") Crash() end
+	if ( TestBit(test,hex2num("0x80000000"))) then print("we got bug") Crash(=
) end
 	print(Hex2Num("0x70000020"),"=3D",hex2num("0x70000020"))
 	print(Hex2Num("0x941c48bf"),"=3D",hex2num("0x941c48bf"))
 	LuaBitwiseTest_Pair("0x941c48bf","0x0000000f")

Modified: branches/knut/data/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.uodragdrop.lua (original)
+++ branches/knut/data/lua/lib.uodragdrop.lua Wed Aug 29 01:07:23 2007
@@ -90,7 +90,7 @@
 			gCurrentRenderer:MousePick()
 			=

 			if (gMousePickFoundHit) then
-				if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic and Bi=
twiseAND(GetStaticTileTypeFlags( gDragDropItem.artid ) or 0,kTileDataFlag_C=
ontainer)) then
+				if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic and Te=
stBit(GetStaticTileTypeFlags( gDragDropItem.artid ) or 0,kTileDataFlag_Cont=
ainer)) then
 					Send_Drop_Object( gDragDropItem.serial, hex2num("0xFFFF"), hex2num("0=
xFFFF"), 0, gMousePickFoundHit.dynamic.serial )
 				elseif (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Mobile) th=
en					=

 					--Send_Equip_Item_Request( gDragDropItem.serial, gDragDropItem.layer,=
 gMousePickFoundHit.mobile.serial )

Modified: branches/knut/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.walking2.lua (original)
+++ branches/knut/data/lua/lib.walking2.lua Wed Aug 29 01:07:23 2007
@@ -38,9 +38,9 @@
 =

 function isBridge(flag)
 	local bIsBridge=3Dfalse
-	if ((BitwiseAND(flag, kTileDataFlag_StairBack) ~=3D 0) or
-		(BitwiseAND(flag, kTileDataFlag_StairRight) ~=3D 0) or
-		(BitwiseAND(flag, kTileDataFlag_Bridge) ~=3D 0) ) then
+	if ((TestBit(flag, kTileDataFlag_StairBack	)) or
+		(TestBit(flag, kTileDataFlag_StairRight	)) or
+		(TestBit(flag, kTileDataFlag_Bridge		)) ) then
 		bIsBridge=3Dtrue
 	end
 	return bIsBridge	=

@@ -49,7 +49,7 @@
 function isSurface(flag)
 	local bIsSurface=3Dfalse
 =

-	if (BitwiseAND(flag, kTileDataFlag_Surface) ~=3D 0) then
+	if (TestBit(flag, kTileDataFlag_Surface)) then
 		bIsSurface=3Dtrue
 	end
 =

@@ -59,7 +59,7 @@
 function isImpassable(flag)
 	local bIsImpassable=3Dfalse
 =

-	if (BitwiseAND(flag, kTileDataFlag_Impassable) ~=3D 0) then
+	if (TestBit(flag, kTileDataFlag_Impassable)) then
 		bIsImpassable=3Dtrue
 	end
 =


Modified: branches/knut/data/lua/net.cursor.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.cursor.lua (original)
+++ branches/knut/data/lua/net.cursor.lua Wed Aug 29 01:07:23 2007
@@ -119,7 +119,7 @@
 		-- The target object's artwork number (or body number if the target is a=
 mobile).
 		-- 0x0000 is the ground if Type is 0x01.
 =

---	if (BitwiseAND(flag,hex2num("0x03")) ~=3D 0) then
+--	if (TestBit(flag,hex2num("0x03"))) then
 	if (flag =3D=3D hex2num("0x03")) then
 		print("Cancel Target Mode")
 		CleanupTargetMode() -- server side cancel

Modified: branches/knut/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.other.lua (original)
+++ branches/knut/data/lua/net.other.lua Wed Aug 29 01:07:23 2007
@@ -215,7 +215,7 @@
 			entry.textid	=3D input:PopNetUint16() -- ID is the file number for intl=
oc#.language e.g intloc6.enu and the index into that
 			entry.text 		=3D GetPopupEntryText(entry.textid) or "unknown"
 			entry.flags		=3D input:PopNetUint16() -- 0x01 =3D locked, 0x02 =3D arro=
w, 0x20 =3D color
-			if (BitwiseAND(entry.flags,kPopupEntryFlag_Color) ~=3D 0) then
+			if (TestBit(entry.flags,kPopupEntryFlag_Color)) then
 				entry.color	=3D input:PopNetUint16() =

 				-- rgb 1555 color (ex, 0 =3D transparent, 0x8000 =3D solid black, 0x1F=
 =3D blue, 0x3E0 =3D green, 0x7C00 =3D red)
 			else
@@ -903,7 +903,7 @@
 		out:PushNetUint16(hex2num("0xc0")) -- (( count << 4 ) | ( (keywords.at( =
0 ) & 0xF000) >> 8 ))
 =

 		for i=3D0, i < speechcount do
-			if ( BitwiseAND(i,1) =3D=3D 0 ) then
+			if ( not TestBit(i,1) ) then
 				out:PushNetUint16(speechids[i])
 			else
 				local nextword

Modified: branches/knut/data/lua/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net.uodragdrop.lua (original)
+++ branches/knut/data/lua/net.uodragdrop.lua Wed Aug 29 01:07:23 2007
@@ -239,7 +239,7 @@
 			local flags,weight,quality,unkn1,unkn2,quantity,animid,unkn3,hue,unkn4,=
height,name =3D gTileTypeLoader:GetStaticTileType(item.artid+32*512)
 =

 			-- if the item beneath has the same artid and stackable, try to stack t=
hem
-			if (BitwiseAND(flags, kTileDataFlag_Generic_Stackable) ~=3D 0) and gMou=
sePickFoundHit.item.artid =3D=3D item.artid then =

+			if (TestBit(flags, kTileDataFlag_Generic_Stackable)) and gMousePickFoun=
dHit.item.artid =3D=3D item.artid then =

 				target =3D gMousePickFoundHit.item.serial =

 			end
 		end

Modified: branches/knut/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.dynamic.lua (original)
+++ branches/knut/data/lua/net/net.dynamic.lua Wed Aug 29 01:07:23 2007
@@ -45,7 +45,7 @@
 	newitem.artid =3D input:PopNetUint16() -- model =3D artwork . Include the=
 flag 0x8000 if the item's stackid is greater than zero.	=

 	=

 	-- newitem.amount  (or model # for corpses)
-	if ( BitwiseAND(newitem.serial,hex2num("0x80000000")) ~=3D 0) then =

+	if (TestBit(newitem.serial,hex2num("0x80000000"))) then =

 			newitem.amount =3D input:PopNetUint16() =

 	else
 		newitem.amount =3D 1
@@ -54,14 +54,14 @@
 	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
 	=

 	-- newitem.artid_addstack : The number to add to the item's artwork when =
Amount > 1.
-	if ( BitwiseAND(newitem.artid,hex2num("0x8000")) ~=3D 0) then =

+	if (TestBit(newitem.artid,hex2num("0x8000"))) then =

 			newitem.artid_addstack =3D input:PopNetUint8() =

 	else	newitem.artid_addstack =3D 0 end
 =

 	newitem.xloc =3D input:PopNetUint16() --only use lowest significant 15 bi=
ts)
 	newitem.yloc =3D input:PopNetUint16()
 =

-	if ( BitwiseAND(newitem.xloc,hex2num("0x8000")) ~=3D 0) then
+	if (TestBit(newitem.xloc,hex2num("0x8000"))) then
 		newitem.dir =3D input:PopNetUint8()
 	else
 		newitem.dir =3D 0
@@ -72,12 +72,12 @@
 	newitem.hue =3D 0
 	newitem.flag =3D 0
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then
+		if (TestBit(newitem.yloc,hex2num("0x8000"))) then
 			newitem.hue =3D input:PopNetUint16()
 		end
 	end
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then
+		if (TestBit(newitem.yloc,hex2num("0x4000"))) then
 			newitem.flag =3D input:PopNetUint8()
 		end
 	end

Modified: branches/knut/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.main.lua (original)
+++ branches/knut/data/lua/obj/obj.main.lua Wed Aug 29 01:07:23 2007
@@ -2,8 +2,10 @@
 dofile(libpath .. "obj/obj.dynamic.lua")
 dofile(libpath .. "obj/obj.player.lua")
 =

+gObjectList =3D {}
 gDynamics =3D {}
 gMobiles =3D {}
+
 =

 function GetDynamic (serial) return gObjectList[serial] end
 function GetMobile (mobileserial) local res =3D gObjectList[mobileserial] =
if (res.ismobile) then return res end end
@@ -17,7 +19,6 @@
 function GetDynamicList	() assert(false,"TODO, not yet supported..") retur=
n gDynamics end -- object.isdynamic
 function GetMobileList	() assert(false,"TODO, not yet supported..") return=
 gMobiles end -- object.ismobile
 =

-gObjectList =3D {}
 gPlayerBodySerial =3D 0
 =

 function RegisterObject( object )

Modified: branches/knut/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.mobile.lua (original)
+++ branches/knut/data/lua/obj/obj.mobile.lua Wed Aug 29 01:07:23 2007
@@ -58,6 +58,200 @@
 	local mobile =3D GetMobile(mobileserial)
 	if (mobile) then mobile:UpdateStamina( curvalue, maxvalue ) end
 end
+
+function CreateMobile( packet )
+	mobile =3D {}
+	mobile.serial =3D packet.serial
+	mobile.body =3D 0
+	mobile.xloc =3D 0
+	mobile.yloc =3D 0
+	mobile.zloc =3D 0
+	mobile.hue =3D 0
+	mobile.flag =3D 0
+	mobile.content =3D {}
+	mobile.ismobile =3D true
+	mobile.warmode =3D false
+	=

+	mobile.stats =3D {}
+	=

+	-- SendTooltipRequest( mobile.serial )
+	=

+	-- mobile
+	mobile.update =3D UpdateMobile
+	mobile.delete =3D DeleteMobile
+	mobile.addobject =3D MobileAddObject
+	mobile.removeobject =3D MobileRemoveObject
+	mobile.doanimation =3D DoAnimation
+	mobile.getequipment =3D GetEquipment	=

+	mobile.updatestats =3D UpdateStats
+	mobile.updatehits =3D UpdateHits
+	mobile.updatestamina =3D UpdateStamina
+	mobile.updatemana =3D UpdateMana
+	mobile.setposition =3D SetMobilePosition
+	mobile.updateflags =3D UpdateMobileFlags
+	mobile.setwarmode =3D MobileSetWarmode
+	mobile.getitemonlayer =3D MobileGetItemOnLayer
+	=

+	-- derived from object
+	mobile.register =3D RegisterObject
+	mobile.deregister =3D DeRegisterObject
+	mobile.removecontent =3D RemoveContent
+		=

+	mobile:register()
+	gCurrentRenderer:AddMobile( mobile )
+	=

+	Send_ClientQuery(hex2num("0x04"),mobile.serial)
+	=

+	return mobile
+end
+
+function UpdateMobile( mobile, packet )
+	local update =3D false
+	=

+	local flagsChanged =3D false
+	for field, value in pairs( packet ) do
+		if (value ~=3D mobile[field]) then
+			update =3D true
+			mobile[field] =3D value
+			=

+			if field =3D=3D "flag" then
+				flagsChanged =3D true
+			end
+		end
+	end
+	=

+	if (flagsChanged) then
+		mobile:updateflags()
+	end
+	=

+	NotifyListener( "UpdateMobile"..sprintf("%d",mobile.serial) )
+
+	if (update) then
+		gCurrentRenderer:UpdateMobile( mobile )
+	end
+end
+
+function UpdateMobileFlags( mobile )
+	mobile.female			=3D TestBit( mobile.flag, hex2num("0x02") )
+	mobile.poisoned			=3D TestBit( mobile.flag, hex2num("0x04") )
+	mobile.yellowhits		=3D TestBit( mobile.flag, hex2num("0x08") )
+	mobile.factionship		=3D TestBit( mobile.flag, hex2num("0x10") )
+	mobile.explicitmovable	=3D TestBit( mobile.flag, hex2num("0x20") )
+	mobile:setwarmode( 		  TestBit( mobile.flag, hex2num("0x40") ) )
+	mobile.hidden			=3D TestBit( mobile.flag, hex2num("0x80") )
+end
+
+function MobileSetWarmode( mobile, warmode )
+	if mobile.warmode ~=3D warmode then
+		mobile.warmode =3D warmode
+		NotifyListener( "WarmodeChange"..sprintf("%d",mobile.serial) )
+	end
+end
+
+function DeleteMobile( mobile )
+	NotifyListener( "DeleteMobile"..sprintf("%d",mobile.serial) )
+	gCurrentRenderer:RemoveMobile( mobile )
+	mobile:removecontent()
+	mobile:deregister()
+end
+
+function MobileAddObject( mobile, object )
+	-- if object is mount =3D> stop animation
+	mobile.content[ object.serial ] =3D object
+	object.container =3D mobile
+	NotifyListener( "DynamicAddedToCont"..sprintf("%d",mobile.serial), object=
.serial )
+	gCurrentRenderer:UpdateMobileEquipment( mobile )
+end
+
+function MobileRemoveObject( mobile, object )
+	mobile.content[ object.serial ] =3D nil
+	object.container =3D nil
+	NotifyListener( "DynamicRemovedFromCont"..sprintf("%d",mobile.serial), ob=
ject.serial )
+	gCurrentRenderer:UpdateMobileEquipment( mobile )
+end
+
+function DoAnimation( mobile, packet )
+	gCurrentRenderer:MobileStartServerSideAnim( packet )
+end
+
+function GetEquipment( mobile, layer )
+	local dynamic =3D nil
+	for serial, object in pairs( mobile.content ) do
+		if (object.layer =3D=3D layer) then
+			dynamic =3D object
+			break
+		end
+	end
+	=

+	return dynamic
+end
+
+function UpdateStats( mobile, stats )
+	for field, value in pairs( stats ) do
+		if (value ~=3D mobile.stats[field]) then
+			update =3D true
+			mobile.stats[field] =3D value
+		end
+	end
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function UpdateHits( mobile, curHits, maxHits )
+	mobile.stats.curHits =3D curHits
+	mobile.stats.maxHits =3D maxHits
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function UpdateMana( mobile, curStamina, maxStamina )
+	mobile.stats.curMana =3D curMana
+	mobile.stats.maxMana =3D maxMana
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function UpdateStamina( mobile, curMana, maxMana )
+	mobile.stats.curStamina =3D curStamina
+	mobile.stats.maxStamina =3D maxStamina
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
+end
+
+function SetMobilePosition( mobile, x, y, z, dir )
+	mobile.x =3D x
+	mobile.y =3D y
+	mobile.z =3D z
+	mobile.dir =3D dir
+	=

+	gCurrentRenderer:UpdateMobile( mobile )
+end
+
+function IsPlayerMobile( mobile )
+	return mobile and mobile.serial =3D=3D gPlayerBodySerial
+end
+
+function MobileGetItemOnLayer( mobile, layer )
+	for s, item in pairs( mobile.content ) do
+		if item.layer =3D=3D layer then
+			return item
+		end
+	end
+	=

+	return nil
+end
+
+--[[
+Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
+0x00 - None
+0x02 - Female
+0x04 - Poisoned
+0x08 - YellowHits // healthbar gets yellow
+0x10 - FactionShip // unsure why client needs to know
+0x20 - Movable if normally not
+0x40 - War mode
+0x80 - Hidden =

+]]--
 =

 --[[
 mobile.notoriety: =

@@ -81,200 +275,6 @@
 	Hidden =3D 0x80
 ]]--
 =

---[[
-Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
-0x00 - None
-0x02 - Female
-0x04 - Poisoned
-0x08 - YellowHits // healthbar gets yellow
-0x10 - FactionShip // unsure why client needs to know
-0x20 - Movable if normally not
-0x40 - War mode
-0x80 - Hidden =

-]]--
-
-function CreateMobile( packet )
-	mobile =3D {}
-	mobile.serial =3D packet.serial
-	mobile.body =3D 0
-	mobile.x =3D 0
-	mobile.y =3D 0
-	mobile.z =3D 0
-	mobile.hue =3D 0
-	mobile.flag =3D 0
-	mobile.content =3D {}
-	mobile.ismobile =3D true
-	mobile.warmode =3D false
-	=

-	mobile.stats =3D {}
-	=

-	-- SendTooltipRequest( mobile.serial )
-	=

-	-- mobile
-	mobile.update =3D UpdateMobile
-	mobile.delete =3D DeleteMobile
-	mobile.addobject =3D MobileAddObject
-	mobile.removeobject =3D MobileRemoveObject
-	mobile.doanimation =3D DoAnimation
-	mobile.getequipment =3D GetEquipment	=

-	mobile.updatestats =3D UpdateStats
-	mobile.updatehits =3D UpdateHits
-	mobile.updatestamina =3D UpdateStamina
-	mobile.updatemana =3D UpdateMana
-	mobile.setposition =3D SetMobilePosition
-	mobile.updateflags =3D UpdateMobileFlags
-	mobile.setwarmode =3D MobileSetWarmode
-	mobile.getitemonlayer =3D MobileGetItemOnLayer
-	=

-	-- derived from object
-	mobile.register =3D RegisterObject
-	mobile.deregister =3D DeRegisterObject
-	mobile.removecontent =3D RemoveContent
-		=

-	mobile:register()
-	gCurrentRenderer:AddMobile( mobile )
-	=

-	Send_ClientQuery(hex2num("0x04"),mobile.serial)
-	=

-	return mobile
-end
-
-function UpdateMobile( mobile, packet )
-	local update =3D false
-	=

-	local flagsChanged =3D false
-	for field, value in pairs( packet ) do
-		if (value ~=3D mobile[field]) then
-			update =3D true
-			mobile[field] =3D value
-			=

-			if field =3D=3D "flag" then
-				flagsChanged =3D true
-			end
-		end
-	end
-	=

-	if (flagsChanged) then
-		mobile:updateflags()
-	end
-	=

-	NotifyListener( "UpdateMobile"..sprintf("%d",mobile.serial) )
-
-	if (update) then
-		gCurrentRenderer:UpdateMobile( mobile )
-	end
-end
-
-function UpdateMobileFlags( mobile )
-	mobile.female			=3D BitwiseAND( mobile.flag, hex2num("0x02") ) ~=3D 0
-	mobile.poisoned			=3D BitwiseAND( mobile.flag, hex2num("0x04") ) ~=3D 0
-	mobile.yellowhits		=3D BitwiseAND( mobile.flag, hex2num("0x08") ) ~=3D 0
-	mobile.factionship		=3D BitwiseAND( mobile.flag, hex2num("0x10") ) ~=3D 0
-	mobile.explicitmovable	=3D BitwiseAND( mobile.flag, hex2num("0x20") ) ~=
=3D 0
-	mobile:setwarmode( 		  BitwiseAND( mobile.flag, hex2num("0x40") ) ~=3D 0 )
-	mobile.hidden			=3D BitwiseAND( mobile.flag, hex2num("0x80") ) ~=3D 0
-end
-
-function MobileSetWarmode( mobile, warmode )
-	if mobile.warmode ~=3D warmode then
-		mobile.warmode =3D warmode
-		NotifyListener( "WarmodeChange"..sprintf("%d",mobile.serial) )
-	end
-end
-
-function DeleteMobile( mobile )
-	NotifyListener( "DeleteMobile"..sprintf("%d",mobile.serial) )
-	gCurrentRenderer:RemoveMobile( mobile )
-	mobile:removecontent()
-	mobile:deregister()
-end
-
-function MobileAddObject( mobile, object )
-	-- if object is mount =3D> stop animation
-	mobile.content[ object.serial ] =3D object
-	object.container =3D mobile
-	NotifyListener( "DynamicAddedToCont"..sprintf("%d",mobile.serial), object=
.serial )
-	gCurrentRenderer:UpdateMobileEquipment( mobile )
-end
-
-function MobileRemoveObject( mobile, object )
-	mobile.content[ object.serial ] =3D nil
-	object.container =3D nil
-	NotifyListener( "DynamicRemovedFromCont"..sprintf("%d",mobile.serial), ob=
ject.serial )
-	gCurrentRenderer:UpdateMobileEquipment( mobile )
-end
-
-function DoAnimation( mobile, packet )
-	gCurrentRenderer:MobileStartServerSideAnim( packet )
-end
-
-function GetEquipment( mobile, layer )
-	local dynamic =3D nil
-	for serial, object in pairs( mobile.content ) do
-		if (object.layer =3D=3D layer) then
-			dynamic =3D object
-			break
-		end
-	end
-	=

-	return dynamic
-end
-
-function UpdateStats( mobile, stats )
-	for field, value in pairs( stats ) do
-		if (value ~=3D mobile.stats[field]) then
-			update =3D true
-			mobile.stats[field] =3D value
-		end
-	end
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function UpdateHits( mobile, curHits, maxHits )
-	mobile.stats.curHits =3D curHits
-	mobile.stats.maxHits =3D maxHits
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function UpdateMana( mobile, curStamina, maxStamina )
-	mobile.stats.curMana =3D curMana
-	mobile.stats.maxMana =3D maxMana
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function UpdateStamina( mobile, curMana, maxMana )
-	mobile.stats.curStamina =3D curStamina
-	mobile.stats.maxStamina =3D maxStamina
-	=

-	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
-end
-
-function SetMobilePosition( mobile, x, y, z, dir )
-	mobile.x =3D x
-	mobile.y =3D y
-	mobile.z =3D z
-	mobile.dir =3D dir
-	=

-	gCurrentRenderer:UpdateMobile( mobile )
-end
-
-function IsPlayerMobile( mobile )
-	return mobile and mobile.serial =3D=3D gPlayerBodySerial
-end
-
-function MobileGetItemOnLayer( mobile, layer )
-	for s, item in pairs( mobile.content ) do
-		if item.layer =3D=3D layer then
-			return item
-		end
-	end
-	=

-	return nil
-end
-
 -- return r,g,b
 function GetNotorietyColor(n)
 	if (n =3D=3D  0) then return 0.0 , 0.0 , 0.0 end -- 0.0 =3D invalid/acros=
s server line



From no-reply at zwischenwelt.org  Wed Aug 29 01:07:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 28 Aug 2007 23:07:16 -0000
Subject: [Iris-commit] [IRIS] r1363 - in /trunk/data/lua: ./ net/ obj/
Message-ID: <20070828230717.3F7911C186FB@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 29 01:07:16 2007
New Revision: 1363

Log:
syncing for merge

Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.data.lua
    trunk/data/lua/lib.models.lua
    trunk/data/lua/lib.spellbooks.lua
    trunk/data/lua/lib.static.lua
    trunk/data/lua/lib.test.lua
    trunk/data/lua/lib.uodragdrop.lua
    trunk/data/lua/lib.walking2.lua
    trunk/data/lua/net.cursor.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net.uodragdrop.lua
    trunk/data/lua/net/net.dynamic.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Wed Aug 29 01:07:16 2007
@@ -193,7 +193,7 @@
 						if (gLightsources) then
 							local arrtiletype =3D {}
 							arrtiletype =3D GetStaticTileType(iTileTypeID)
-							if( BitwiseAND(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) =
~=3D 0 ) then
+							if( TestBit(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ) t=
hen
 								local x,y,z =3D Renderer3D:UOPosToLocal(entity.x,entity.y,entity.z=
 * 0.1)
 								Client_AddPointLight(entity.x-0.5,entity.y-0.5,entity.z+arrtiletyp=
e.miHeight, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
 							end

Modified: trunk/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobileanim.lua (original)
+++ trunk/data/lua/lib.3d.mobileanim.lua Wed Aug 29 01:07:16 2007
@@ -62,10 +62,10 @@
 	-- detect animation modifiers : staff, mount=3Dhorse, combat
 	local mount		=3D GetMobileEquipmentItem(mobile,kLayer_Mount)
 	local twohand	=3D GetMobileEquipmentItem(mobile,kLayer_TwoHanded) -- staff
-	local bHasStaff =3D twohand and BitwiseAND(GetStaticTileTypeFlags(twohand=
.artid) or 0,kTileDataFlag_Weapon) ~=3D 0
-	local bWarMode 	=3D BitwiseAND(mobile.flag,kMobileFlag_WarMode) ~=3D 0 --=
 combat
-	local bRunning 	=3D mobile.walksmooth_moving and (BitwiseAND(mobile.dir,k=
WalkFlag_Run) ~=3D 0)
-	--local bRunning 	=3D (mobile.walksmooth_moving or mobile.walksmooth_turn=
ing) and (BitwiseAND(mobile.dir,kWalkFlag_Run) ~=3D 0)
+	local bHasStaff =3D twohand and TestBit(GetStaticTileTypeFlags(twohand.ar=
tid) or 0,kTileDataFlag_Weapon)
+	local bWarMode 	=3D TestBit(mobile.flag,kMobileFlag_WarMode) -- combat
+	local bRunning 	=3D mobile.walksmooth_moving and TestBit(mobile.dir,kWalk=
Flag_Run)
+	--local bRunning 	=3D (mobile.walksmooth_moving or mobile.walksmooth_turn=
ing) and TestBit(mobile.dir,kWalkFlag_Run)
 	--local bPlayerIsInWarMode =3D gActWarmode =3D=3D gWarmode_Combat -- TODO=
 : only player, not any mobile
 	=

 	--(mobile.walksmooth_turning or mobile.walksmooth_moving or (not mobile.a=
nimstate))
@@ -193,7 +193,7 @@
 	local yloc2 =3D mobile.gfx3d_walksmooth_last_yloc
 	local zloc2 =3D mobile.gfx3d_walksmooth_last_zloc
 	local dir2  =3D mobile.gfx3d_walksmooth_last_dir
-	local bRunning =3D BitwiseAND(dir2,kWalkFlag_Run) ~=3D 0
+	local bRunning =3D TestBit(dir2,kWalkFlag_Run)
 	dir1 =3D BitwiseAND(dir1,hex2num("0x07"))
 	dir2 =3D BitwiseAND(dir2,hex2num("0x07"))
 	=


Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Wed Aug 29 01:07:16 2007
@@ -800,7 +800,7 @@
 			if (gLightsources) then
 			local arrtiletype =3D {}
 			arrtiletype =3D GetStaticTileType(item.artid)
-			if( BitwiseAND(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ~=3D=
 0 ) then
+			if( TestBit(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ) then
 				local x,y,z =3D Renderer3D:UOPosToLocal(item.xloc,item.yloc,(item.zloc=
+arrtiletype.miHeight) * 0.1)
 				Client_AddPointLight(x,y,z, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
 			end

Modified: trunk/data/lua/lib.data.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.data.lua (original)
+++ trunk/data/lua/lib.data.lua Wed Aug 29 01:07:16 2007
@@ -2,7 +2,7 @@
 -- nil if not wearable
 function GetPaperdollLayerFromTileType (iTileTypeID)
 	local t =3D GetStaticTileType(iTileTypeID)
-	if (t and BitwiseAND(t.miFlags,kTileDataFlag_Wearable) ~=3D 0) then =

+	if (t and TestBit(t.miFlags,kTileDataFlag_Wearable)) then =

 		return t.miQuality
 	end
 	return nil

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Wed Aug 29 01:07:16 2007
@@ -344,12 +344,12 @@
 					=

 					--local bShieldHand=3Dfalse
 					-- check for shields (if wearable -> take quality as layer) (stupid)
-					--if (BitwiseAND(tiledata.miFlags,kTileDataFlag_Wearable)~=3D0) then
+					--if (TestBit(tiledata.miFlags,kTileDataFlag_Wearable)) then
 						--print("QualityLayer=3D"..tiledata.miQuality.." "..tiledata.msName)
 					--	bShieldHand=3Dtrue
 					--end
 					=

-					local bDoubleHanded =3D (layer =3D=3D kLayer_TwoHanded) and (BitwiseA=
ND(tiledata.miFlags,kTileDataFlag_Weapon) ~=3D 0)
+					local bDoubleHanded =3D (layer =3D=3D kLayer_TwoHanded) and TestBit(t=
iledata.miFlags,kTileDataFlag_Weapon)
 					if (layer =3D=3D kLayer_OneHanded or bDoubleHanded) then =

 						iPrimaryHandItem =3D {hue=3Dhue,modelid=3Dmodelid}
 					elseif (layer =3D=3D kLayer_TwoHanded) then =


Modified: trunk/data/lua/lib.spellbooks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.spellbooks.lua (original)
+++ trunk/data/lua/lib.spellbooks.lua Wed Aug 29 01:07:16 2007
@@ -193,7 +193,7 @@
 				local spellcounter=3D0
 =

 				for spell=3D1, spellnumber do
-					if (BitwiseAND(spellbook.matrix[circle], BitwiseSHL(1,spell-1)) ~=3D =
0) then
+					if (TestBit(spellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
 						-- increase number of available spells
 						spellcounter=3Dspellcounter+1
 						local spellbutton =3D MakeBorderGumpPart(curparent, hex2num("0x837")=
, 60 + rightspacer, 20+((spellcounter+1)*15) - top_align)
@@ -233,7 +233,7 @@
 				local spellnumber=3Dtable.getn(gSpellBooks[spellbook.itemid].spells[ci=
rcle])
 			=

 				for spell=3D1, spellnumber do
-					if (BitwiseAND(spellbook.matrix[circle], BitwiseSHL(1,spell-1)) ~=3D =
0) then
+					if (TestBit(spellbook.matrix[circle], BitwiseSHL(1,spell-1))) then
 						-- increase number of available spells
 						spellcounter=3Dspellcounter+1
 =


Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Wed Aug 29 01:07:16 2007
@@ -108,7 +108,7 @@
 				end
 				-- Hue this Model | TODO : Partitial Hue
 				if (gHueLoader) then
-					if( BitwiseAND(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTi=
leDataFlag_Partial_Hue) ~=3D 0 ) then
+					if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileD=
ataFlag_Partial_Hue) ) then
 						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
 					else
 						HueMesh(meshname,gHueLoader,iHue)

Modified: trunk/data/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.test.lua (original)
+++ trunk/data/lua/lib.test.lua Wed Aug 29 01:07:16 2007
@@ -202,9 +202,9 @@
 =

 -- test if lua can perform bitwise operations correctly
 function LuaBitwiseTest ()
-	if ( BitwiseAND(hex2num("0x4000250e"),hex2num("0x80000000")) ~=3D 0) then=
 print("we got bug") Crash() end
+	if ( TestBit(hex2num("0x4000250e"),hex2num("0x80000000"))) then print("we=
 got bug") Crash() end
 	local test =3D hex2num("0x4000250e")
-	if ( BitwiseAND(test,hex2num("0x80000000")) ~=3D 0) then print("we got bu=
g") Crash() end
+	if ( TestBit(test,hex2num("0x80000000"))) then print("we got bug") Crash(=
) end
 	print(Hex2Num("0x70000020"),"=3D",hex2num("0x70000020"))
 	print(Hex2Num("0x941c48bf"),"=3D",hex2num("0x941c48bf"))
 	LuaBitwiseTest_Pair("0x941c48bf","0x0000000f")

Modified: trunk/data/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.uodragdrop.lua (original)
+++ trunk/data/lua/lib.uodragdrop.lua Wed Aug 29 01:07:16 2007
@@ -90,7 +90,7 @@
 			gCurrentRenderer:MousePick()
 			=

 			if (gMousePickFoundHit) then
-				if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic and Bi=
twiseAND(GetStaticTileTypeFlags( gDragDropItem.artid ) or 0,kTileDataFlag_C=
ontainer)) then
+				if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic and Te=
stBit(GetStaticTileTypeFlags( gDragDropItem.artid ) or 0,kTileDataFlag_Cont=
ainer)) then
 					Send_Drop_Object( gDragDropItem.serial, hex2num("0xFFFF"), hex2num("0=
xFFFF"), 0, gMousePickFoundHit.dynamic.serial )
 				elseif (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Mobile) th=
en					=

 					--Send_Equip_Item_Request( gDragDropItem.serial, gDragDropItem.layer,=
 gMousePickFoundHit.mobile.serial )

Modified: trunk/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.walking2.lua (original)
+++ trunk/data/lua/lib.walking2.lua Wed Aug 29 01:07:16 2007
@@ -38,9 +38,9 @@
 =

 function isBridge(flag)
 	local bIsBridge=3Dfalse
-	if ((BitwiseAND(flag, kTileDataFlag_StairBack) ~=3D 0) or
-		(BitwiseAND(flag, kTileDataFlag_StairRight) ~=3D 0) or
-		(BitwiseAND(flag, kTileDataFlag_Bridge) ~=3D 0) ) then
+	if ((TestBit(flag, kTileDataFlag_StairBack	)) or
+		(TestBit(flag, kTileDataFlag_StairRight	)) or
+		(TestBit(flag, kTileDataFlag_Bridge		)) ) then
 		bIsBridge=3Dtrue
 	end
 	return bIsBridge	=

@@ -49,7 +49,7 @@
 function isSurface(flag)
 	local bIsSurface=3Dfalse
 =

-	if (BitwiseAND(flag, kTileDataFlag_Surface) ~=3D 0) then
+	if (TestBit(flag, kTileDataFlag_Surface)) then
 		bIsSurface=3Dtrue
 	end
 =

@@ -59,7 +59,7 @@
 function isImpassable(flag)
 	local bIsImpassable=3Dfalse
 =

-	if (BitwiseAND(flag, kTileDataFlag_Impassable) ~=3D 0) then
+	if (TestBit(flag, kTileDataFlag_Impassable)) then
 		bIsImpassable=3Dtrue
 	end
 =


Modified: trunk/data/lua/net.cursor.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.cursor.lua (original)
+++ trunk/data/lua/net.cursor.lua Wed Aug 29 01:07:16 2007
@@ -119,7 +119,7 @@
 		-- The target object's artwork number (or body number if the target is a=
 mobile).
 		-- 0x0000 is the ground if Type is 0x01.
 =

---	if (BitwiseAND(flag,hex2num("0x03")) ~=3D 0) then
+--	if (TestBit(flag,hex2num("0x03"))) then
 	if (flag =3D=3D hex2num("0x03")) then
 		print("Cancel Target Mode")
 		CleanupTargetMode() -- server side cancel

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Wed Aug 29 01:07:16 2007
@@ -215,7 +215,7 @@
 			entry.textid	=3D input:PopNetUint16() -- ID is the file number for intl=
oc#.language e.g intloc6.enu and the index into that
 			entry.text 		=3D GetPopupEntryText(entry.textid) or "unknown"
 			entry.flags		=3D input:PopNetUint16() -- 0x01 =3D locked, 0x02 =3D arro=
w, 0x20 =3D color
-			if (BitwiseAND(entry.flags,kPopupEntryFlag_Color) ~=3D 0) then
+			if (TestBit(entry.flags,kPopupEntryFlag_Color)) then
 				entry.color	=3D input:PopNetUint16() =

 				-- rgb 1555 color (ex, 0 =3D transparent, 0x8000 =3D solid black, 0x1F=
 =3D blue, 0x3E0 =3D green, 0x7C00 =3D red)
 			else
@@ -903,7 +903,7 @@
 		out:PushNetUint16(hex2num("0xc0")) -- (( count << 4 ) | ( (keywords.at( =
0 ) & 0xF000) >> 8 ))
 =

 		for i=3D0, i < speechcount do
-			if ( BitwiseAND(i,1) =3D=3D 0 ) then
+			if ( not TestBit(i,1) ) then
 				out:PushNetUint16(speechids[i])
 			else
 				local nextword

Modified: trunk/data/lua/net.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.uodragdrop.lua (original)
+++ trunk/data/lua/net.uodragdrop.lua Wed Aug 29 01:07:16 2007
@@ -238,7 +238,7 @@
 			local flags,weight,quality,unkn1,unkn2,quantity,animid,unkn3,hue,unkn4,=
height,name =3D gTileTypeLoader:GetStaticTileType(item.artid+32*512)
 =

 			-- if the item beneath has the same artid and stackable, try to stack t=
hem
-			if (BitwiseAND(flags, kTileDataFlag_Generic_Stackable) ~=3D 0) and gMou=
sePickFoundHit.item.artid =3D=3D item.artid then =

+			if (TestBit(flags, kTileDataFlag_Generic_Stackable)) and gMousePickFoun=
dHit.item.artid =3D=3D item.artid then =

 				target =3D gMousePickFoundHit.item.serial =

 			end
 		end

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Wed Aug 29 01:07:16 2007
@@ -45,7 +45,7 @@
 	newitem.artid =3D input:PopNetUint16() -- model =3D artwork . Include the=
 flag 0x8000 if the item's stackid is greater than zero.	=

 	=

 	-- newitem.amount  (or model # for corpses)
-	if ( BitwiseAND(newitem.serial,hex2num("0x80000000")) ~=3D 0) then =

+	if (TestBit(newitem.serial,hex2num("0x80000000"))) then =

 		newitem.amount =3D input:PopNetUint16() =

 	else 	=

 		newitem.amount =3D 1
@@ -54,14 +54,14 @@
 	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
 	=

 	-- newitem.artid_addstack : The number to add to the item's artwork when =
Amount > 1.
-	if ( BitwiseAND(newitem.artid,hex2num("0x8000")) ~=3D 0) then =

+	if (TestBit(newitem.artid,hex2num("0x8000"))) then =

 			newitem.artid_addstack =3D input:PopNetUint8() =

 	else	newitem.artid_addstack =3D 0 end
 =

 	newitem.xloc =3D input:PopNetUint16() --only use lowest significant 15 bi=
ts)
 	newitem.yloc =3D input:PopNetUint16()
 =

-	if ( BitwiseAND(newitem.xloc,hex2num("0x8000")) ~=3D 0) then
+	if (TestBit(newitem.xloc,hex2num("0x8000"))) then
 		newitem.dir =3D input:PopNetUint8()
 	else	=

 		newitem.dir =3D 0
@@ -72,12 +72,12 @@
 	newitem.hue =3D 0
 	newitem.flag =3D 0
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x8000")) ~=3D 0) then
+		if (TestBit(newitem.yloc,hex2num("0x8000"))) then
 			newitem.hue =3D input:PopNetUint16()
 		end
 	end
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
-		if (BitwiseAND(newitem.yloc,hex2num("0x4000")) ~=3D 0) then
+		if (TestBit(newitem.yloc,hex2num("0x4000"))) then
 			newitem.flag =3D input:PopNetUint8()
 		end
 	end

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Wed Aug 29 01:07:16 2007
@@ -170,6 +170,91 @@
 	mobile.bTooltippRequested =3D true
 	Send_SingleClick(mobile.serial)
 end
+
+
+ =

+
+-- note : modifying existing elements and removing from a lua table while =
iterating is save, only inserting is dangerous
+function DestroyMobileItemBySerial (serial) =

+	local item =3D gMobileItemsBySerial[serial]
+	if (item) then DestroyMobileItem(item) end
+end
+
+function DestroyMobileItem (item) =

+	item.mobile.equipment[item.layer] =3D nil
+	gMobileItemsBySerial[item.serial] =3D nil
+	if (item.widget) then item.widget:Destroy()  item.widget =3D nil end -- p=
aperdoll widgets
+	UpdateMobileEquipment(item.mobile) =

+end
+
+-- update the position of the graphical representation
+-- TODO : center Mobilename overhead, dont use fixed height - check height=
 of mobiles (big dragons)
+function UpdateMobile (mobile)
+	-- create empty stats if there is not stats table
+	mobile.stats =3D mobile.stats or {}
+	=

+	if (not mobile.name) then =

+		RequestMobileTooltipp(mobile)
+	end
+	=

+	-- update life stats in gui elements
+	if (mobile.stats.curHits and mobile.stats.maxHits) then
+		if (mobile.serial =3D=3D gPlayerBodySerial) then
+			-- for player
+			gui.SetHitpoints(mobile.stats.curHits/mobile.stats.maxHits)
+			if (mobile.stats.curMana) then gui.SetMana(mobile.stats.curMana/mobile.=
stats.maxMana) end
+			if (mobile.stats.curStamina) then gui.SetStamina(mobile.stats.curStamin=
a/mobile.stats.maxStamina) end
+			-- update big_stats window
+			UpdateStatusAos()
+		else
+			-- for other mobiles
+			SetNpcStatusHitpoints(mobile, mobile.stats.curHits / mobile.stats.maxHi=
ts)
+		end
+	end
+	=

+	gCurrentRenderer:UpdateMobile( mobile )
+end
+
+function UpdateMobileEquipment (mobile) =

+	if (mobile.serial =3D=3D gPlayerBodySerial and mobile.equipment) then Pla=
yerEquipmentUpdated() end
+	local paperdoll =3D gPaperdolls[mobile.serial]
+	if (paperdoll) then RebuildPaperdoll(paperdoll) end
+	gCurrentRenderer:UpdateMobile( mobile )
+end
+
+
+--- displays the chat text over the head of the mobile, color is 16bit uo =
color
+function MobileDisplayTextOverHead(serial,message,r,g,b)
+	r =3D r or 0
+	g =3D g or 0
+	b =3D b or 0
+
+	local mobile =3D GetMobile(serial)
+	=

+	printdebug("mobile","TEXT MobileDisplayTextOverHead",serial,message,color)
+	=

+	if mobile then
+		mobile.mlastChatText =3D message
+		mobile.mlastChatTime =3D gMyTicks
+		mobile.mlastChatColor =3D {r =3D r,g =3D g,b =3D b}
+
+		printdebug("mobile","TEXT "..vardump2(mobile))
+
+		gCurrentRenderer:UpdateMobile(mobile)
+	end
+end
+
+--[[
+Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
+0x00 - None
+0x02 - Female
+0x04 - Poisoned
+0x08 - YellowHits // healthbar gets yellow
+0x10 - FactionShip // unsure why client needs to know
+0x20 - Movable if normally not
+0x40 - War mode
+0x80 - Hidden =

+]]--
 =

 --[[
 mobile.notoriety: =

@@ -193,7 +278,6 @@
 	Hidden =3D 0x80
 ]]--
 =

-
 -- return r,g,b
 function GetNotorietyColor (n)
 	if (n =3D=3D  0) then return 0.0 , 0.0 , 0.0 end -- 0.0 =3D invalid/acros=
s server line
@@ -206,55 +290,6 @@
 	if (n =3D=3D  7) then return 1.0 , 0.0 , 1.0 end -- 7 =3D unknown use (tr=
anslucent (like 0x4000 hue)) =

 	return 0.5,0.5,0.5
 end
- =

-
--- note : modifying existing elements and removing from a lua table while =
iterating is save, only inserting is dangerous
-function DestroyMobileItemBySerial (serial) =

-	local item =3D gMobileItemsBySerial[serial]
-	if (item) then DestroyMobileItem(item) end
-end
-
-function DestroyMobileItem (item) =

-	item.mobile.equipment[item.layer] =3D nil
-	gMobileItemsBySerial[item.serial] =3D nil
-	if (item.widget) then item.widget:Destroy()  item.widget =3D nil end -- p=
aperdoll widgets
-	UpdateMobileEquipment(item.mobile) =

-end
-
--- update the position of the graphical representation
--- TODO : center Mobilename overhead, dont use fixed height - check height=
 of mobiles (big dragons)
-function UpdateMobile (mobile)
-	-- create empty stats if there is not stats table
-	mobile.stats =3D mobile.stats or {}
-	=

-	if (not mobile.name) then =

-		RequestMobileTooltipp(mobile)
-	end
-	=

-	-- update life stats in gui elements
-	if (mobile.stats.curHits and mobile.stats.maxHits) then
-		if (mobile.serial =3D=3D gPlayerBodySerial) then
-			-- for player
-			gui.SetHitpoints(mobile.stats.curHits/mobile.stats.maxHits)
-			if (mobile.stats.curMana) then gui.SetMana(mobile.stats.curMana/mobile.=
stats.maxMana) end
-			if (mobile.stats.curStamina) then gui.SetStamina(mobile.stats.curStamin=
a/mobile.stats.maxStamina) end
-			-- update big_stats window
-			UpdateStatusAos()
-		else
-			-- for other mobiles
-			SetNpcStatusHitpoints(mobile, mobile.stats.curHits / mobile.stats.maxHi=
ts)
-		end
-	end
-	=

-	gCurrentRenderer:UpdateMobile( mobile )
-end
-
-function UpdateMobileEquipment (mobile) =

-	if (mobile.serial =3D=3D gPlayerBodySerial and mobile.equipment) then Pla=
yerEquipmentUpdated() end
-	local paperdoll =3D gPaperdolls[mobile.serial]
-	if (paperdoll) then RebuildPaperdoll(paperdoll) end
-	gCurrentRenderer:UpdateMobile( mobile )
-end
 =

 =

 -- Fighting - Swing [0x2F] 10bytes
@@ -277,24 +312,3 @@
 	local action =3D input:PopNetUint8()
 	print("NET: Server sends, that player is now (2=3Dghost, 1=3Dresurrect, 0=
=3Dfrom server)=3D"..action)
 end
-
---- displays the chat text over the head of the mobile, color is 16bit uo =
color
-function MobileDisplayTextOverHead(serial,message,r,g,b)
-	r =3D r or 0
-	g =3D g or 0
-	b =3D b or 0
-
-	local mobile =3D GetMobile(serial)
-	=

-	printdebug("mobile","TEXT MobileDisplayTextOverHead",serial,message,color)
-	=

-	if mobile then
-		mobile.mlastChatText =3D message
-		mobile.mlastChatTime =3D gMyTicks
-		mobile.mlastChatColor =3D {r =3D r,g =3D g,b =3D b}
-
-		printdebug("mobile","TEXT "..vardump2(mobile))
-
-		gCurrentRenderer:UpdateMobile(mobile)
-	end
-end

Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Wed Aug 29 01:07:16 2007
@@ -102,7 +102,7 @@
 	--mobiledata.zloc
 	-- TODO : knutmerge ??  : local mobile =3D CreateOrUpdateMobile(mobiledat=
a)	=

 	=

-	local bPlayerRunning =3D BitwiseAND(mobiledata.dir,kWalkFlag_Run) ~=3D 0
+	local bPlayerRunning =3D TestBit(mobiledata.dir,kWalkFlag_Run)
 	local fullplayerdir =3D mobiledata.dir
 	mobiledata.dir =3D BitwiseAND(mobiledata.dir,hex2num("0x07"))
 	=




From no-reply at zwischenwelt.org  Wed Aug 29 22:03:53 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 29 Aug 2007 20:03:53 -0000
Subject: [Iris-commit] [IRIS] r1365 - in /trunk/data/lua:
 gui/gui.paperdoll.lua lib.3d.mobileanim.lua lib.3d.renderer.lua
 lib.input.lua lib.util.lua net.other.lua net.walk.lua net/net.mobile.lua
 obj/obj.dynamic.lua obj/obj.main.lua obj/obj.mobile.lua obj/obj.player.lua
Message-ID: <20070829200353.71D861C18137@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Aug 29 22:03:52 2007
New Revision: 1365

Log:
knutmerge : mobile stuff

Modified:
    trunk/data/lua/gui/gui.paperdoll.lua
    trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.input.lua
    trunk/data/lua/lib.util.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/obj/obj.dynamic.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.paperdoll.lua (original)
+++ trunk/data/lua/gui/gui.paperdoll.lua Wed Aug 29 22:03:52 2007
@@ -192,7 +192,7 @@
 	=

 	if (mobile and mobile.name ~=3D paperdoll.name) then =

 		mobile.name =3D paperdoll.name =

-		UpdateMobile(mobile)
+		mobile:Update()
 	end
 end
 =


Modified: trunk/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobileanim.lua (original)
+++ trunk/data/lua/lib.3d.mobileanim.lua Wed Aug 29 22:03:52 2007
@@ -49,7 +49,7 @@
 	mobile.lastserveranim =3D anim
 	mobile.lastclientanim =3D nil
 	--mobile.dir =3D anim.m_direction -- this is wrong : runuo sends (short) =
frameCount  =

-	UpdateMobile(mobile) -- if dir changed
+	mobile:Update() -- if dir changed
 	-- todo : remaining anim options (m_animForward, m_frameDelay)
 end
 =

@@ -142,7 +142,7 @@
 	end
 end
 =

--- called from UpdateMobile, not every frame
+-- called from Renderer3D:UpdateMobile, not every frame
 function Renderer3D:ClientSideMobileAnimUpdate (mobile)
 	-- handles clientside anim stuff together with walksmooth to detect run, =
turn etc efficiently
 	=


Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Wed Aug 29 22:03:52 2007
@@ -1,5 +1,9 @@
 Renderer3D =3D {}
 gRendererList[ "Renderer3d" ] =3D Renderer3D
+
+		=

+gHudNamesFontSize =3D 12
+
 =

 Renderer3D.gbActive =3D false
 Renderer3D.giLastAnimStepTime =3D nil
@@ -297,9 +301,6 @@
 function Renderer3D:AddMobile () end
 =

 =

-function Renderer3D:UpdateMobileEquipment( mobile )
-end
-
 function Renderer3D:UpdateMobile( mobile )
 	if (not self.gbActive) then return end
 	=

@@ -495,7 +496,6 @@
 		end
 	end
 	=

-	UpdateMobileModel(mobile)
 	self:UpdateMobileVisibility(mobile)
 	self:ClientSideMobileAnimUpdate(mobile)
 end
@@ -654,9 +654,7 @@
 	DestroyMobileModel(mobile)
 end
 =

-function Renderer3D:CreateMobileGfx( mobile )
-	self:UpdateMobile(mobile)
-end	=

+function Renderer3D:CreateMobileGfx( mobile ) self:UpdateMobile(mobile) en=
d	=

 =

 function Renderer3D:CheckForUpdateMapOrigin()
 	if (self.giLastMapOriginX ~=3D self.giMapOriginX or
@@ -665,9 +663,7 @@
 		self.giLastMapOriginX =3D self.giMapOriginX
 		self.giLastMapOriginY =3D self.giMapOriginY
 		=

-		for k,mobile in pairs(GetMobileList()) do =

-			UpdateMobile(mobile) =

-		end
+		for k,mobile in pairs(GetMobileList()) do mobile:Update() end
 		for k,dynamic in pairs(GetDynamicList()) do if (dynamic.gfx) then
 			self:UpdateDynamicItemPos(dynamic)
 		end end
@@ -938,7 +934,7 @@
 		local mobile =3D GetMobile(iSerial)
 		if (mobile) then
 			mobile.isselected =3D true
-			-- TODO is it possible that selection is not created (UpdateMobile crea=
tes selection)
+			-- TODO is it possible that selection is not created (mobile:Update() c=
reates selection)
 			mobile.selection:SetVisible(true)
 			giSelectedMobile =3D iSerial
 			=


Modified: trunk/data/lua/lib.input.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.input.lua (original)
+++ trunk/data/lua/lib.input.lua Wed Aug 29 22:03:52 2007
@@ -256,7 +256,7 @@
 	Bind("f10",		function (state) if (not gActiveEditText) then if (state > 0=
) then ShowDevTool() end end end)
 	Bind("f11",		function (state) if (not gActiveEditText) then if ((state > =
0) and (gCurrentRenderer =3D=3D Renderer3D)) then ShowFallBackTool() end en=
d end)
 	Bind("tab",		function (state) if (state > 0) then if (gActWarmode=3D=3DgW=
armode_Normal) then Send_CombatMode(gWarmode_Combat) else Send_CombatMode(g=
Warmode_Normal) end end end)
-	Bind("m",		function (state) if (not gActiveEditText) then if (state > 0) =
then MobileDisplayTextOverHead(gPlayerBodySerial,"bla bla bla") end end end)
+	Bind("m",		function (state) if (not gActiveEditText) then if (state > 0) =
then Mobile_DisplayTextOverHead(gPlayerBodySerial,"bla bla bla") end end en=
d)
 =

 	Bind("f7",		function (state) if (not gActiveEditText) then if (state > 0)=
 then
 		if (gAmbientColor.r < 1.0) then

Modified: trunk/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.util.lua (original)
+++ trunk/data/lua/lib.util.lua Wed Aug 29 22:03:52 2007
@@ -17,6 +17,9 @@
 =

 -- adds all fields from second to first, but does not overwrite fields tha=
t are already set
 function ArrayMergeToFirst (first,second) for k,v in pairs(second) do if (=
first[k] =3D=3D nil) then first[k] =3D v end end end
+
+-- overwrites fields in first by fields in second
+function ArrayOverwrite (first,second) for k,v in pairs(second) do first[k=
] =3D v end end
 =

 -- shallow copy
 function CopyArray (arr) res =3D {} for k,v in pairs(arr) do res[k] =3D v =
end return res end
@@ -49,7 +52,7 @@
 	return false
 end
 =

-kPi =3D 3.1415
+kPi =3D math.pi -- 3.1415
 gfDeg2Rad =3D kPi / 180.0
 =

 math.randomseed(os.time())

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Wed Aug 29 22:03:52 2007
@@ -367,30 +367,6 @@
 	gCurrentRenderer:ShowQuestArrow( Questarrow_Active, Questarrow_xloc, Ques=
tarrow_yloc )
 end
 =

--- this RequestMobileTooltipp
--- prevents the answer to the tooltipp request from being displayed as nor=
mal message
--- returns true if the info was caught and should not be displayed
-function CatchTooltippRequest (serial,model,charname,message) =

-	local mobile =3D GetMobile(serial)
-	=

-	if (mobile) then
-		if (charname =3D=3D message) then
-			if (string.sub(message,1,1) =3D=3D "[") then
-				mobile.somestate =3D message -- TODO : outputs stuff like [invulnerabl=
e]  , purpose unknown, probably for tooltipp
-				--printf("CatchTooltippRequest : serial=3D0x%08x somestate=3D%s\n",ser=
ial,message)
-				return true
-			end
-		end
-		if (not mobile.name) then =

-			mobile.name =3D charname
-			UpdateMobile(mobile) -- TODO : set mobile name
-			if (charname ~=3D message) then print("CatchTooltippRequest : unexpecte=
d text:",charname,message) return false end
-			return true
-		end
-	end
-	return false
-end
-
 -- Text (Speech) receive 0x1C
 -- Pol use thi spacket to send names when you single click on items or NPC=
s. OSI's method uses 0xC1
 -- TODO : handle System messages
@@ -405,7 +381,8 @@
 	local text_font =3D input:PopNetUint16()
 	local text_charname =3D input:PopFilledString(30)
 	local text_message =3D input:PopFilledString(size-44)
-	if (CatchTooltippRequest(text_item_serial,text_item_model,text_charname,t=
ext_message)) then return end
+	=

+	Mobile_NameHint(text_item_serial,text_item_model,text_charname,text_messa=
ge)
 =

 	if (text_item_serial =3D=3D hex2num("0xffffffff") and text_item_model =3D=
=3D hex2num("0xffff")) then
 		printf("NET: System Message %s:%s\n",text_charname,text_message)
@@ -416,7 +393,7 @@
 	local plaintext =3D string.gsub(text_message,"<br>","\n")
 	AddFadeLines(sprintf("%s: %s",text_charname,plaintext)) -- TODO : color,f=
ont,...
 	=

-	MobileDisplayTextOverHead(text_item_serial,string.gsub(text_message,"<br>=
","\n"),Uo16Color2Rgb(text_color))
+	Mobile_DisplayTextOverHead(text_item_serial,string.gsub(text_message,"<br=
>","\n"),Uo16Color2Rgb(text_color))
 	=

 	-- TODO : text_item ?!?
 	-- TODO : JournalAddEntry(somefunc(text_type),text_charname,text_message)
@@ -497,14 +474,14 @@
 	local unitext_name =3D input:PopFilledString(30)
 	local unitext_message =3D input:PopUnicodeString((unitext_size-48)/2)
 =

-	if (CatchTooltippRequest(unitext_speakerid,unitext_item_model,unitext_nam=
e,unitext_message)) then return end
+	Mobile_NameHint(unitext_speakerid,unitext_item_model,unitext_name,unitext=
_message)
  =

 	printf("NET: UnicodeText speakerid: %i name: %s txtsize: %i msg: %s\n",un=
itext_speakerid,unitext_name,(unitext_size-48)/2,unitext_message)
 	AddFadeLines(unitext_name..": "..string.gsub(unitext_message,"<br>","\n")=
) -- TODO : unicode
 	-- TODO : JournalAddEntry(somefunc(text_type),text_charname,text_message)
 	=

 	-- show text over player head
-	MobileDisplayTextOverHead(unitext_speakerid,string.gsub(unitext_message,"=
<br>","\n"),Uo16Color2Rgb(unitext_hue))
+	Mobile_DisplayTextOverHead(unitext_speakerid,string.gsub(unitext_message,=
"<br>","\n"),Uo16Color2Rgb(unitext_hue))
 end
 =

 -- TODO : question : ghoulsblade : is this only for combat ? sience: don't=
 know -> verify

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Wed Aug 29 22:03:52 2007
@@ -86,7 +86,7 @@
 	mobile.yloc =3D yloc
 	mobile.zloc =3D zloc
 	mobile.dir =3D fulldir
-	UpdateMobile(mobile)
+	mobile:Update()
 	=

 	-- destroy objects outside view range
 	-- dynamics

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Wed Aug 29 22:03:52 2007
@@ -172,7 +172,7 @@
 =

 	--printf("NET : kPacket_Mobile_Stats mobile=3D0x%08x name=3D%s\n",mobiles=
erial,stats.name)
 	=

-	MobileUpdateStats(mobileserial,stats)
+	Mobile_UpdateStats(mobileserial,stats)
 end
 =

 --[[
@@ -218,7 +218,7 @@
 	local curvalue 		=3D input:PopNetUint16()
 	printdebug("mobile",sprintf("NET: update HP: mobile_serial=3D0x%08x  %i /=
 %i\n",mobileserial,curvalue,maxvalue))
 	=

-	MobileUpdateHealth(mobileserial,curvalue,maxvalue)
+	Mobile_UpdateHealth(mobileserial,curvalue,maxvalue)
 end
 =

 --# Update Current Mana [0xA2]
@@ -231,7 +231,7 @@
 	local curvalue 		=3D input:PopNetUint16()
 	printdebug("mobile",sprintf("NET: update MANA: mobile_serial=3D0x%08x  %i=
 / %i\n",mobileserial,curvalue,maxvalue))
 	=

-	MobileUpdateMana(mobileserial,curvalue,maxvalue)
+	Mobile_UpdateMana(mobileserial,curvalue,maxvalue)
 end
 =

 --# Update Current Stamina [0xA3]
@@ -244,7 +244,7 @@
 	local curvalue		=3D input:PopNetUint16()
 	printdebug("mobile",sprintf("NET: update STAMINA: mobile_serial=3D0x%08x =
 %i / %i\n",mobileserial,curvalue,maxvalue))
 =

-	MobileUpdateStamina(mobileserial,curvalue,maxvalue)
+	Mobile_UpdateStamina(mobileserial,curvalue,maxvalue)
 end
 =

 =


Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Wed Aug 29 22:03:52 2007
@@ -73,7 +73,7 @@
 		mobile.equipment[item.layer] =3D item
 		gMobileItemsBySerial[item.serial] =3D item
 		--printf("NET : kPacket_Equip_Item mobile=3D0x%08x item=3D0x%08x\n",item=
.mobile_serial,item.serial)
-		UpdateMobileEquipment(mobile)
+		mobile:Update()
 	else =

 		print("WARNING ! mobile update for unknown mobile received, update lost =
!")
 =


Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Wed Aug 29 22:03:52 2007
@@ -8,7 +8,6 @@
 gMobileItemsBySerial =3D {} -- items equipped on mobiles TODO : killme !
 =

 function GetDynamic (serial) return gDynamics[serial] end
-function GetMobile (mobileserial) return gMobiles[mobileserial] end
 function GetMobileEquipmentItem (mobile,layer) return mobile.equipment[lay=
er] end
 function GetMobileEquipmentList (mobile) return mobile.equipment end
 function GetContainerContentList (container) return container.items end
@@ -25,13 +24,7 @@
 	gObjectList[serial] =3D newitem
 	return newitem
 end
-function KNUTMERGETEMP_CREATE_EMPTY_MOBILE	(serial)
-	local newmobile =3D KNUTMERGETEMP_CREATE_EMPTY_OBJECT(serial)
-	gMobiles[serial] =3D newmobile
-	return newmobile
-end
 function KNUTMERGETEMP_CREATE_EMPTY_ITEM	(serial) return KNUTMERGETEMP_CRE=
ATE_EMPTY_OBJECT(serial) end
-function KNUTMERGETEMP_DEL_MOBILE	(serial) gObjectList[serial] =3D nil gMo=
biles[serial] =3D nil end  -- todo : clean me..., remove from central objec=
t list
 =

 function DestroyDynamicItemBySerial (serial) =

 	local dynamic =3D GetDynamic(serial)
@@ -49,7 +42,7 @@
 	-- destroy dynamics
 	DestroyDynamicItemBySerial(serial)
 	-- destroy mobiles (npcs, monsters,...)
-	DestroyMobileBySerial(serial)
+	Mobile_Destroy(serial)
 	DestroyPaperdollByMobileSerial(serial)
 	-- TODO : destroy container
 	gCurrentRenderer:DestroyMousePickItemBySerial(serial)
@@ -61,7 +54,7 @@
 	CancelUODragDrop()
 	for serial,v in pairs(gContainer) do 			CloseContainer(serial) end
 	for serial,v in pairs(gMobileItemsBySerial) do 	DestroyMobileItemBySerial=
(serial) end
-	for serial,v in pairs(GetMobileList()) do 		DestroyMobileBySerial(serial)=
 end
+	for serial,v in pairs(GetMobileList()) do 		Mobile_Destroy(serial) end
 	for serial,v in pairs(GetDynamicList()) do 		DestroyDynamicItemBySerial(s=
erial) end
 	for serial,v in pairs(gPaperdolls) do 			DestroyPaperdollByMobileSerial(s=
erial) end
 	-- TODO : gCurrentRenderer:DestroyMousePickItemBySerial(serial)

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Wed Aug 29 22:03:52 2007
@@ -2,57 +2,140 @@
 -- see also net.paperdoll.lua
 -- see also net.skill.lua
 =

-gHudNamesFontSize =3D 12
-
-
-function DestroyMobileBySerial (serial) =

-	local mobile =3D GetMobile(serial)
-	if (not mobile) then return end
-	=

-	CloseStatus(mobile)
-
-	-- clean up equipment
-	if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
-		DestroyMobileItem(item)
-	end end
-	=

-	gCurrentRenderer:RemoveMobile( mobile )
-	=

-	KNUTMERGETEMP_DEL_MOBILE(serial)
-
-	-- destroy Status Gump from NPC
-	CloseStatus(mobile)
-	=

-	mobile.serial =3D nil
-end
+--[[
+the following fields are available : =

+mobile.serial		=

+mobile.artid		=

+mobile.xloc			=

+mobile.yloc 		=

+mobile.zloc			=

+mobile.dir			=

+mobile.hue			=

+mobile.flag			=

+mobile.notoriety	=

+mobile.amount	-- only kPacket_Equipped_MOB, corpse related ?
+mobile.dir2		-- only kPacket_Equipped_MOB, unknown
+
+Mobile_GetEquipmentList 	(mobile_or_serial)
+Mobile_NotifyListener		(mobile_or_serial,eventname)
+Mobile_Update 				(mobile_or_serial,mobiledata,equipmentdata)
+Mobile_UpdateFlags			(mobile_or_serial)
+Mobile_UpdateStats 			(mobile_or_serial,stats)
+Mobile_UpdateHealth 		(mobile_or_serial,curvalue,maxvalue)
+Mobile_UpdateMana 			(mobile_or_serial,curvalue,maxvalue)
+Mobile_UpdateStamina		(mobile_or_serial,curvalue,maxvalue)
+Mobile_NameHint 			(mobile_or_serial,model,charname,message) =

+Mobile_Destroy				(mobile_or_serial)
+Mobile_DisplayTextOverHead	(mobile_or_serial,message,r,g,b)
+
+each of those is also available as method you can call like mobile:(...) w=
ithout the first param
+]]--
+
+
+gMobilePrototype =3D {}
+gbMobileMethodWrappersInitialised =3D false
+
+function GetMobile (mobile_or_serial) =

+	if (type(mobile_or_serial) =3D=3D "table") then return mobile_or_serial e=
nd
+	return gMobiles[mobile_or_serial] -- look up by serial
+end
+
+function KNUTMERGETEMP_CREATE_EMPTY_MOBILE	(serial)
+	-- create method wrapppers, e.g. Mobile_UpdateFlags(serial) calls mobile:=
UpdateFlags()
+	if (not gbMobileMethodWrappersInitialised) then =

+		gbMobileMethodWrappersInitialised =3D true
+		for method_name,method_impl in pairs(gMobilePrototype) do
+			local mymethod_impl =3D method_impl
+			_G["Mobile_"..method_name] =3D function (mobile_or_serial,...)
+				local mobile =3D GetMobile(mobile_or_serial)
+				if (mobile) then return mymethod_impl(mobile,unpack(arg)) end
+			end
+		end
+	end
+	=

+	-- create base object and register in mobile-list
+	local newmobile =3D KNUTMERGETEMP_CREATE_EMPTY_OBJECT(serial)
+	gMobiles[serial] =3D newmobile
+	=

+	-- install methods and call constructor
+	ArrayOverwrite(newmobile,gMobilePrototype)
+	newmobile:Construct()
+	=

+	return newmobile
+end
+
+
+-- constructor, don't call directly, use CreateOrUpdateMobile() instead
+function gMobilePrototype:Construct () =

+	self.equipment =3D {} -- TODO : rename to content to share code with cont=
ainer stuff ??
+	self.ismobile =3D true -- needed to identify the mobile in 2d renderer --=
 TODO : is this obsolete since knut ?
+	self.flag =3D 0
+	self:UpdateFlags()
+end
+
+
 =

 -- called from kPacket_Naked_MOB kPacket_Equipped_MOB kPacket_Teleport
 function CreateOrUpdateMobile (mobiledata,equipmentdata)
 	local mobile =3D GetMobile(mobiledata.serial)
 	if (not mobile) then mobile =3D KNUTMERGETEMP_CREATE_EMPTY_MOBILE(mobiled=
ata.serial) end
-	=

-	for k,v in pairs(mobiledata) do mobile[k] =3D v end
-	-- mobile.serial		=

-	-- mobile.artid		=

-	-- mobile.xloc			=

-	-- mobile.yloc 		=

-	-- mobile.zloc			=

-	-- mobile.dir			=

-	-- mobile.hue			=

-	-- mobile.flag			=

-	-- mobile.notoriety	=

-	-- mobile.amount	-- only kPacket_Equipped_MOB, corpse related ?
-	-- mobile.dir2		-- only kPacket_Equipped_MOB, unknown
-	=

-	mobile.ismobile =3D true -- needed to identify the mobile in 2d renderer =
-- TODO : is this obsolete since knut ?
+	mobile:Update(mobiledata,equipmentdata)
+	return mobile
+end
+
+
+function gMobilePrototype:GetEquipmentList () return self.equipment end
+
+function gMobilePrototype:NotifyListener	(eventname)
+	NotifyListener(eventname..self.serial,self)
+end
+
+
+
+
+-- ##### ##### ##### ##### ##### updates
+
+
+
+
+
+-- updates mobile status, and the position of the graphical representation=
 and other things
+function gMobilePrototype:Update (mobiledata,equipmentdata)
+	if (mobiledata) then
+		for k,v in pairs(mobiledata) do self[k] =3D v end
+	end
+	self:UpdateFlags()
+	=

+	=

+	-- create empty stats if there is not stats table
+	self.stats =3D self.stats or {} -- TODO : needs to be adjusted for knut m=
erge ?
 	=

 	-- request basic stats info
-	Send_ClientQuery(gRequest_States,mobile.serial)
-	=

+	if (not self.state_request_sent) then  =

+			self.state_request_sent =3D true
+		Send_ClientQuery(gRequest_States,self.serial)
+	end
+	=

+	-- TODO : needs to be adjusted for knut merge ?
+	-- update life stats in gui elements
+	if (self.stats.curHits and self.stats.maxHits) then
+		if (self.serial =3D=3D gPlayerBodySerial) then
+			-- for player
+			gui.SetHitpoints(self.stats.curHits/self.stats.maxHits)
+			if (self.stats.curMana) then gui.SetMana(self.stats.curMana/self.stats.=
maxMana) end
+			if (self.stats.curStamina) then gui.SetStamina(self.stats.curStamina/se=
lf.stats.maxStamina) end
+			-- update big_stats window
+			UpdateStatusAos()
+		else
+			-- for other mobiles
+			SetNpcStatusHitpoints(self, self.stats.curHits / self.stats.maxHits)
+		end
+	end
+	=

+	-- TODO : needs to be adjusted for knut merge ?
 	if (equipmentdata) then
-		mobile.equipment =3D {} -- todo : KILL old equipment items ???
-
-		=

+		self.equipment =3D {} -- todo : knut merge : KILL old equipment items ???
+
 		for layer,itemdata in pairs(equipmentdata) do
 			local item =3D KNUTMERGETEMP_CREATE_EMPTY_ITEM(itemdata.serial) -- dyna=
mic ? =

 			=

@@ -62,16 +145,194 @@
 			-- item.layer
 			-- item.hue
 			=

-			item.mobile =3D mobile
-			item.mobile_serial =3D mobile.serial
-			mobile.equipment[item.layer] =3D item
+			item.mobile =3D self
+			item.mobile_serial =3D self.serial
+			self.equipment[item.layer] =3D item
 			gMobileItemsBySerial[item.serial] =3D item -- TODO : obsoleted by knut =
merge ??
 		end
 	end
 	=

-	UpdateMobile(mobile)
-	if (equipmentdata) then UpdateMobileEquipment(mobile) end
-	return mobile
+	-- if something related to equipment might have changed =

+	if (true) then
+		if (self.serial =3D=3D gPlayerBodySerial and self.equipment) then Player=
EquipmentUpdated() end
+		local paperdoll =3D gPaperdolls[self.serial]
+		if (paperdoll) then RebuildPaperdoll(paperdoll) end
+		=

+		-- TODO : does check for changes, but still a little expensive, only cal=
l if neccessary
+		if (gCurrentRenderer =3D=3D Renderer3D) then UpdateMobileModel(self) end =

+	end
+		=

+	self:NotifyListener("Mobile_Update")
+	=

+	gCurrentRenderer:UpdateMobile( self )
+	=

+	-- TODO : center Mobilename overhead, dont use fixed height - check heigh=
t of mobiles (big dragons)
+end
+
+
+-- sets self.flag_* from self.flag
+function gMobilePrototype:UpdateFlags	()
+	self.flag_female			=3D TestBit( self.flag, hex2num("0x02") )
+	self.flag_poisoned			=3D TestBit( self.flag, hex2num("0x04") )
+	self.flag_yellowhits		=3D TestBit( self.flag, hex2num("0x08") )
+	self.flag_factionship		=3D TestBit( self.flag, hex2num("0x10") )
+	self.flag_explicitmovable	=3D TestBit( self.flag, hex2num("0x20") )
+	self.flag_warmode	 		=3D TestBit( self.flag, hex2num("0x40") )
+	self.flag_hidden			=3D TestBit( self.flag, hex2num("0x80") )
+	=

+	if (self.old_flag ~=3D self.flag) then -- only if a change has occurred
+		self.old_flag  =3D self.flag
+		self:NotifyListener("Mobile_UpdateFlags")
+	end
+end
+
+
+function gMobilePrototype:UpdateStats (stats)
+	-- local oldhp =3D mobile.stats.curHits or stats.curHits
+	self.name =3D stats.name
+	self.stats =3D stats
+	self:NotifyListener("Mobile_UpdateStats")
+	-- not needed due to normal damage packet
+	-- TODO is this ok for every server?
+	-- gCurrentRenderer:NotifyHPChange(mobileserial, oldhp, mobile.stats.curH=
its)
+	self:Update()
+end
+
+
+function gMobilePrototype:UpdateHealth (curvalue,maxvalue)
+	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
+	if ((maxvalue ~=3D 1000) and self.stats) then
+		if self.stats.curHits then
+			-- if there was a change, plop a text
+			local old =3D self.stats.curHits
+			gCurrentRenderer:NotifyHPChange(self.serial, old, curvalue)
+		end
+		-- update values
+		self.stats.curHits =3D curvalue
+		self.stats.maxHits =3D maxvalue
+
+		self:NotifyListener("Mobile_UpdateHealth")
+		self:Update()
+	end
+end
+
+
+function gMobilePrototype:UpdateMana (curvalue,maxvalue)
+	if (self and self.stats) then
+		-- update values
+		self.stats.curMana =3D curvalue
+		self.stats.maxMana =3D maxvalue
+
+		if (self.serial =3D=3D gPlayerBodySerial) then
+			gui.SetMana(curvalue/maxvalue)
+			-- update big_stats window
+			UpdateStatusAos()
+		end
+
+		self:NotifyListener("Mobile_UpdateMana")
+		self:Update()
+	end
+end
+
+
+function gMobilePrototype:UpdateStamina(curvalue,maxvalue)
+	if (self.stats) then
+		-- update values
+		self.stats.curStamina =3D curvalue
+		self.stats.maxStamina =3D maxvalue
+
+		if (self.serial =3D=3D gPlayerBodySerial) then
+			gui.SetStamina(curvalue/maxvalue)
+			-- update big_stats window
+			UpdateStatusAos()
+		end
+
+		self:NotifyListener("Mobile_UpdateStamina")
+		self:Update()
+	end
+end
+
+
+-- triggered from kPacket_Text kPacket_Text_Unicode
+function gMobilePrototype:NameHint (model,charname,message) =

+	--~ 	if (charname =3D=3D message) then
+	--~ 		if (string.sub(message,1,1) =3D=3D "[") then
+	--~ 			self.somestate =3D message -- TODO : outputs stuff like [invulnera=
ble]  , purpose unknown, probably for tooltipp
+	--~ 			--printf("CatchTooltippRequest : serial=3D0x%08x somestate=3D%s\n"=
,serial,message)
+	--~ 		end
+	--~ 	end
+	if (not self.name) then =

+		self.name =3D charname
+		self:Update()
+		--if (charname ~=3D message) then print("gMobilePrototype:NameHint : une=
xpected text:",charname,message) return false end
+	end
+end
+
+
+
+
+
+-- ##### ##### ##### ##### ##### destruction
+
+
+
+
+
+function gMobilePrototype:Destroy ()
+	-- clean up equipment  -- TODO : has to be adjusted for knut merge
+	for k,item in pairs(self:GetEquipmentList()) do DestroyMobileItem(item) e=
nd
+	=

+	self:NotifyListener("Mobile_Destroy")
+	=

+	gCurrentRenderer:RemoveMobile( self )
+	=

+	-- destroy Status Gump from NPC
+	CloseStatus(self)
+	=

+	gObjectList[self.serial] =3D nil =

+	gMobiles[self.serial] =3D nil
+	self.serial =3D nil
+end
+
+-- note : modifying existing elements and removing from a lua table while =
iterating is save, only inserting is dangerous
+function DestroyMobileItemBySerial (serial) =

+	local item =3D gMobileItemsBySerial[serial]
+	if (item) then DestroyMobileItem(item) end
+end
+
+
+-- TODO : has to be adjusted for knut merge
+function DestroyMobileItem (item) =

+	item.mobile.equipment[item.layer] =3D nil
+	gMobileItemsBySerial[item.serial] =3D nil
+	if (item.widget) then item.widget:Destroy()  item.widget =3D nil end -- p=
aperdoll widgets
+	item.mobile:Update() =

+end
+
+
+
+
+
+-- ##### ##### ##### ##### ##### the rest =

+
+
+
+
+
+--- displays the chat text over the head of the mobile, color is 16bit uo =
color
+function gMobilePrototype:DisplayTextOverHead(message,r,g,b)
+	r =3D r or 0
+	g =3D g or 0
+	b =3D b or 0
+	printdebug("mobile","DisplayTextOverHead",self.serial,message,r,g,b)
+	self.mlastChatText =3D message
+	self.mlastChatTime =3D gMyTicks
+	self.mlastChatColor =3D {r =3D r,g =3D g,b =3D b}
+	self:Update() -- trigger change in renderer
+end
+
+function MobileStartServerSideAnim (animdata)
+	gCurrentRenderer:MobileStartServerSideAnim(animdata)
 end
 =

 =

@@ -93,168 +354,6 @@
 end
 =

 =

-function MobileStartServerSideAnim (animdata)
-	gCurrentRenderer:MobileStartServerSideAnim(animdata)
-end
-
-function MobileUpdateStats (mobileserial,stats)
-	local mobile =3D GetMobile(mobileserial)
-	-- Update Mobile
-	if (mobile) then
-		-- local oldhp =3D mobile.stats.curHits or stats.curHits
-		mobile.name =3D stats.name
-		mobile.stats =3D stats
-		-- not needed due to normal damage packet
-		-- TODO is this ok for every server?
-		-- gCurrentRenderer:NotifyHPChange(mobileserial, oldhp, mobile.stats.cur=
Hits)
-		UpdateMobile(mobile)
-	end
-	=

-	TradeUpdatePlayerGold()
-end
-
-function MobileUpdateHealth (mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	-- TODO pol sends normal hp update and x/1000 hp update ???? so i ignore =
the strange one
-	if (mobile and (maxvalue ~=3D 1000) and mobile.stats) then
-		if mobile.stats.curHits then
-			-- if there was a change, plop a text
-			local old =3D mobile.stats.curHits
-			gCurrentRenderer:NotifyHPChange(mobileserial, old, curvalue)
-		end
-		-- update values
-		mobile.stats.curHits =3D curvalue
-		mobile.stats.maxHits =3D maxvalue
-
-		UpdateMobile(mobile)
-	end
-end
-
-function MobileUpdateMana (mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile and mobile.stats) then
-		-- update values
-		mobile.stats.curMana =3D curvalue
-		mobile.stats.maxMana =3D maxvalue
-
-		if (mobileserial =3D=3D gPlayerBodySerial) then
-			gui.SetMana(curvalue/maxvalue)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
-end
-
-function MobileUpdateStamina(mobileserial,curvalue,maxvalue)
-	local mobile =3D GetMobile(mobileserial)
-	if (mobile and mobile.stats) then
-		-- update values
-		mobile.stats.curStamina =3D curvalue
-		mobile.stats.maxStamina =3D maxvalue
-
-		if (mobileserial =3D=3D gPlayerBodySerial) then
-			gui.SetStamina(curvalue/maxvalue)
-			-- update big_stats window
-			UpdateStatusAos()
-		end
-	end
-end
-
-			=

--- request the tooltipp for the mobile, e.g. the name
--- the uo protocol is a bit ugly here, we actually have to send a mousecli=
ck as request
--- triggers kPacket_Text
--- todo : maybe also kPacket_Text_Unicode ?
-function RequestMobileTooltipp (mobile)
-	if (mobile.bTooltippRequested) then return end
-	mobile.bTooltippRequested =3D true
-	Send_SingleClick(mobile.serial)
-end
-
-
- =

-
--- note : modifying existing elements and removing from a lua table while =
iterating is save, only inserting is dangerous
-function DestroyMobileItemBySerial (serial) =

-	local item =3D gMobileItemsBySerial[serial]
-	if (item) then DestroyMobileItem(item) end
-end
-
-function DestroyMobileItem (item) =

-	item.mobile.equipment[item.layer] =3D nil
-	gMobileItemsBySerial[item.serial] =3D nil
-	if (item.widget) then item.widget:Destroy()  item.widget =3D nil end -- p=
aperdoll widgets
-	UpdateMobileEquipment(item.mobile) =

-end
-
--- update the position of the graphical representation
--- TODO : center Mobilename overhead, dont use fixed height - check height=
 of mobiles (big dragons)
-function UpdateMobile (mobile)
-	-- create empty stats if there is not stats table
-	mobile.stats =3D mobile.stats or {}
-	=

-	if (not mobile.name) then =

-		RequestMobileTooltipp(mobile)
-	end
-	=

-	-- update life stats in gui elements
-	if (mobile.stats.curHits and mobile.stats.maxHits) then
-		if (mobile.serial =3D=3D gPlayerBodySerial) then
-			-- for player
-			gui.SetHitpoints(mobile.stats.curHits/mobile.stats.maxHits)
-			if (mobile.stats.curMana) then gui.SetMana(mobile.stats.curMana/mobile.=
stats.maxMana) end
-			if (mobile.stats.curStamina) then gui.SetStamina(mobile.stats.curStamin=
a/mobile.stats.maxStamina) end
-			-- update big_stats window
-			UpdateStatusAos()
-		else
-			-- for other mobiles
-			SetNpcStatusHitpoints(mobile, mobile.stats.curHits / mobile.stats.maxHi=
ts)
-		end
-	end
-	=

-	gCurrentRenderer:UpdateMobile( mobile )
-end
-
-function UpdateMobileEquipment (mobile) =

-	if (mobile.serial =3D=3D gPlayerBodySerial and mobile.equipment) then Pla=
yerEquipmentUpdated() end
-	local paperdoll =3D gPaperdolls[mobile.serial]
-	if (paperdoll) then RebuildPaperdoll(paperdoll) end
-	gCurrentRenderer:UpdateMobile( mobile )
-end
-
-
---- displays the chat text over the head of the mobile, color is 16bit uo =
color
-function MobileDisplayTextOverHead(serial,message,r,g,b)
-	r =3D r or 0
-	g =3D g or 0
-	b =3D b or 0
-
-	local mobile =3D GetMobile(serial)
-	=

-	printdebug("mobile","TEXT MobileDisplayTextOverHead",serial,message,color)
-	=

-	if mobile then
-		mobile.mlastChatText =3D message
-		mobile.mlastChatTime =3D gMyTicks
-		mobile.mlastChatColor =3D {r =3D r,g =3D g,b =3D b}
-
-		printdebug("mobile","TEXT "..vardump2(mobile))
-
-		gCurrentRenderer:UpdateMobile(mobile)
-	end
-end
-
---[[
-Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
-0x00 - None
-0x02 - Female
-0x04 - Poisoned
-0x08 - YellowHits // healthbar gets yellow
-0x10 - FactionShip // unsure why client needs to know
-0x20 - Movable if normally not
-0x40 - War mode
-0x80 - Hidden =

-]]--
 =

 --[[
 mobile.notoriety: =

@@ -271,11 +370,20 @@
 	Unknown =3D 0x01,
 	CanAlterPaperdoll =3D 0x02,
 	Poisoned =3D 0x04,
-	GoldenHealth =3D 0x08,
+	YellowHits aka GoldenHealth =3D 0x08,
 	Unknown2 =3D 0x10,
 	Unknown3 =3D 0x20,
 	WarMode =3D 0x40,
 	Hidden =3D 0x80
+Mobile Flag Byte: maybe those are similar to the kPacket_Show_Item flag/st=
atus byte ?
+	0x00 - None
+	0x02 - Female
+	0x04 - Poisoned
+	0x08 - YellowHits aka GoldenHealth // healthbar gets yellow
+	0x10 - FactionShip // unsure why client needs to know
+	0x20 - Movable if normally not
+	0x40 - War mode
+	0x80 - Hidden =

 ]]--
 =

 -- return r,g,b
@@ -294,6 +402,7 @@
 =

 -- Fighting - Swing [0x2F] 10bytes
 -- TODO : handle animation
+-- TODO : is this packet actually used ?
 function gPacketHandler.kPacket_Swing()
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()

Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Wed Aug 29 22:03:52 2007
@@ -142,7 +142,7 @@
 				print("TODO : pc character is now ghost. new bodymodel=3D"..mobiledata=
.artid)
 			end
 =

-			gCurrentRenderer:UpdateMobile( playerMobile )
+			playerMobile:Update()
 		end
 	end
 =




From no-reply at zwischenwelt.org  Thu Aug 30 21:17:18 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 30 Aug 2007 19:17:18 -0000
Subject: [Iris-commit] [IRIS] r1366 - in /trunk/data/lua: ./ gui/ net/ obj/
Message-ID: <20070830191719.603221C1813E@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Aug 30 21:17:18 2007
New Revision: 1366

Log:
merging in progress...

Added:
    trunk/data/lua/obj/obj.container.lua
Modified:
    trunk/data/lua/gui/gui.container.lua
    trunk/data/lua/gui/gui.paperdoll.lua
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.3d.mousepick.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.cam.lua
    trunk/data/lua/lib.corpse.lua
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.devtool.lua
    trunk/data/lua/lib.fallback.lua
    trunk/data/lua/lib.models.lua
    trunk/data/lua/lib.spellbooks.lua
    trunk/data/lua/lib.walking2.lua
    trunk/data/lua/net.securetrade.lua
    trunk/data/lua/net.trade.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.dynamic.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/net/net.packethandlers.lua
    trunk/data/lua/obj/obj.dynamic.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/gui/gui.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.container.lua (original)
+++ trunk/data/lua/gui/gui.container.lua Thu Aug 30 21:17:18 2007
@@ -1,134 +1,1 @@
--- packet handlers for containers (chests, drawers, inventory..)
--- see also lib.packet.lua and lib.protocol.lua
-
-gContainer =3D {}
-
--- pols sends kPacket_Open_Container first and then kPacket_Container_Cont=
ents , runuo the other way around
--- every container (data structure) can have zero-or-one associated dialog=
 (graphical representation)
--- dialog is only created when it is displayed, on kPacket_Open_Container
--- TODO : check if iContainerSerial is secure trade serial
--- TODO : check if spellbook
-
-
--- warning ! do not call while iterating over original container.items arr=
ay, item is removed from that array, might break iterator
-function DestroyContainerItemBySerial (serial)
-	for k,container in pairs(gContainer) do =

-		local item =3D container.items[serial]
-		if (item) then
-			if (item.widget) then item.widget:Destroy()  item.widget =3D nil end
-			container.items[item.serial] =3D nil
-			SecureTradeRebuildContainerHook(container)
-		end
-	end
-end
-
-function IsContainerOpen (serial)
-	local container =3D gContainer[serial]
-	return (container and container.dialog)
-end
-
-function CloseContainer (serial) =

-	local container =3D gContainer[serial]
-	if (container and container.dialog) then
-		DestroyContainerItemWidgets(container)
-		container.dialog:Destroy()
-		container.dialog =3D nil
-	end
-	gContainer[serial] =3D nil
-end
-
--- creates if necessary
-function GetOrCreateContainer (serial) =

-	local container =3D gContainer[serial]
-	if (not container) then =

-		-- container didn't exist yet, create from scratch
-		container =3D {} =

-		container.serial =3D serial
-		container.items =3D {}
-		gContainer[container.serial] =3D container
-	end
-	return container
-end
-
--- destroys old widgets if neccessary
-function DestroyContainerItemWidgets (container) =

-	for k,item in pairs(container.items) do
-		if (item.widget) then item.widget:Destroy()  item.widget =3D nil end
-	end
-end
-
--- destroys old widgets and creates new ones from contents
-function RefreshContainerItemWidgets (container) =

-	if (container.dialog) then
-		DestroyContainerItemWidgets(container)
-		for k,item in pairs(container.items) do MakeContainerItemWidget(item) end
-	end
-end
-
--- updates item data and graphical representation
-function RefreshContainerItem (item) =

-	DestroyContainerItemBySerial(item.serial) -- kill the any old items with =
same serial in case of move
-	local container =3D GetOrCreateContainer(item.iContainerSerial)
-	item.container =3D container
-	=

-	-- TODO : remove item if amount =3D 0 ? (or don't add)
-	container.items[item.serial] =3D item
-	=

-	-- refresh whole container, to keep zorder correct
-	RefreshContainerItemWidgets(container)
-	SecureTradeRebuildContainerHook(container)
-end
-
--- TODO use lib.gfm.lua : MakeArtGumpPart ?
--- create graphical representation (use only if container dialog is alread=
y visible)
-function MakeContainerItemWidget (item)
-	local parent =3D item.container.dialog.rootwidget
-	local iArtID =3D item.artid + hex2num("0x4000")
-	local x,y =3D item.xloc,item.yloc
-	local widget =3D nil
-
-	-- If it's not an ART-gfx to display -> Display GUMP-gfx
-	if (item.usegump=3D=3Dtrue) then
-		widget =3D MakeBorderGumpPart (parent,item.artid,x,y)
-
-		widget.mbIgnoreMouseOver =3D false
-		widget.uoContainer =3D item.container
-		widget.item =3D item
-		item.widget =3D widget
-
-		widget.onMouseLeave =3D function () gCurrentRenderer.gMousePickTippOverr=
ide =3D false end
-		widget.onMouseDown	=3D function (widget,mousebutton) end
-	else
-		local mat =3D GetArtMat(iArtID,item.hue)
-		if ((not mat) or mat =3D=3D "") then
-			print("WARNING ! MakeContainerItemWidget : material load failed for art=
id=3D", iArtID)
-		else
-			local bitmask =3D GetArtBitMask(iArtID)
-			local w,h =3D GetArtSize(iArtID)
-			widget =3D guimaker.MakePlane(parent,mat,x,y,w,h)
-			local tw,th =3D texsize(w),texsize(h)
-			widget.gfx:SetUV(0,(0)/th,w/tw,(h+0)/th)
-			widget:SetBitMask(bitmask)
-			widget.mbIgnoreMouseOver =3D false
-			widget.uoContainer =3D item.container
-			widget.item =3D item
-			item.widget =3D widget
-		=

-			-- item debuginfo on mouseover (clientside,debuginfos)
-			widget.onMouseLeave =3D function () =

-				gCurrentRenderer.gMousePickTippOverride =3D false =

-				Client_SetBottomLine("")
-			end
-			widget.onMouseDown	=3D function (widget,mousebutton) end
-			widget.onMouseEnter =3D function ()
-				-- TODO : find a cleaner solution to override the mousepick tipp
-				local item =3D widget.item
-				local name =3D GetStaticTileTypeName(item.artid) or ""
-				info =3D sprintf("item %s amount=3D%d (artid=3D%04x=3D%d)",name,item.a=
mount,item.artid,item.artid)
-				--print("MakeContainerItemWidget onMouseEnter ",name,vardump(item))
-				gCurrentRenderer.gMousePickTippOverride =3D info
-				Client_SetBottomLine(gCurrentRenderer.gMousePickTippOverride)
-			end
-		end
-	end
-end
+-- moved to obj/obj.container.lua

Modified: trunk/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.paperdoll.lua (original)
+++ trunk/data/lua/gui/gui.paperdoll.lua Thu Aug 30 21:17:18 2007
@@ -38,6 +38,26 @@
 =

 gPaperdolls =3D {}
 =

+
+-- called from kPacket_Open_Paperdoll
+function HandleOpenPaperdoll	(paperdoll)
+	paperdoll.mobileserial	=3D paperdoll.serial
+	paperdoll.Close =3D ClosePaperdoll
+	=

+	-- close old paperdoll
+	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
+	if (oldpaperdoll) then oldpaperdoll:Close() end =

+	=

+	-- register paperdoll
+	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
+	=

+	--AddFadeLines("Open Paperdoll for ["..(paperdoll.mobileserial).."] "..(p=
aperdoll.name or ""))
+	=

+	RebuildPaperdoll(paperdoll)
+end
+
+
+
 -- rebuild needed on update to have correct layerorder
 -- paperdoll.bIsPlayer (check if is player or npc)
 function RebuildPaperdoll (paperdoll)
@@ -164,7 +184,7 @@
 	DestroyPaperdollItemWidgets(paperdoll)
 	=

 	-- create bodywidget and item widgets
-	if (mobile and mobile.equipment) then
+	if (mobile) then
 		local bodyid =3D mobile.artid
 		local bodygumpid,base_id =3D GetPaperdollBodyAndBaseID(bodyid)
 		=

@@ -185,7 +205,7 @@
 		-- create item widgets
 		for index,layer in pairs(gLayerOrder) do =

 			local k =3D gLayerTypeName[layer]
-			local item =3D mobile.equipment[layer]
+			local item =3D GetMobileEquipmentItem(mobile,layer)
 			if (item) then CreatePaperdollItemWidget(paperdoll,item,base_id) end
 		end
 	end
@@ -250,8 +270,8 @@
 =

 -- destroys old widgets if neccessary
 function DestroyPaperdollItemWidgets (paperdoll) =

-	if (paperdoll.mobile and paperdoll.mobile.equipment) then
-		for k,item in pairs(paperdoll.mobile.equipment) do
+	if (paperdoll.mobile) then
+		for k,item in pairs(GetMobileEquipmentList(paperdoll.mobile)) do
 			if (item.widget) then item.widget:Destroy()  item.widget =3D nil end
 		end
 	end

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Thu Aug 30 21:17:18 2007
@@ -303,7 +303,7 @@
 		=

 		-- check dynamics for multis to detect house roofs and stuff like this
 		for k,dynamic in pairs(GetDynamicList()) do
-			if (dynamic.lMultiChildGfx) then
+			if (DynamicIsInWorld(dynamic) and dynamic.lMultiChildGfx) then
 				for k,child in pairs(dynamic.lMultiChildGfx) do
 					if (x =3D=3D dynamic.xloc+child.xloc and y =3D=3D dynamic.yloc+child.=
yloc and dynamic.zloc+child.zloc > playerheadpos) then
 						playerIsInside =3D true
@@ -349,7 +349,7 @@
 		end
 		=

 		-- update dynamics
-		for k,dynamic in pairs(GetDynamicList()) do self:UpdateDynamicVisibility=
(dynamic) end
+		for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic=
)) then self:UpdateDynamicVisibility(dynamic) end end
 		-- update mobiles
 		for k,mobile in pairs(GetMobileList()) do self:UpdateMobileVisibility(mo=
bile) end
 	end

Modified: trunk/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobileanim.lua (original)
+++ trunk/data/lua/lib.3d.mobileanim.lua Thu Aug 30 21:17:18 2007
@@ -55,7 +55,6 @@
 =

 -- calling this interrupts any playing serverside anim
 function Renderer3D:MobileStartClientSideAnim (mobile)
-	if (not mobile.equipment) then return end
 	mobile.animinit =3D true
 	local bodyid =3D MobileArtId2BodyId(mobile.artid)
 	=


Modified: trunk/data/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mousepick.lua (original)
+++ trunk/data/lua/lib.3d.mousepick.lua Thu Aug 30 21:17:18 2007
@@ -172,7 +172,7 @@
 	-- dynamics
 	for k,dynamic in pairs(GetDynamicList()) do
 		-- does this dynamic consists of many gfx parts (multi)?
-		if dynamic.lMultiChildGfx then
+		if dynamic.lMultiChildGfx and DynamicIsInWorld(dynamic) then
 			-- handle multi collision
 			for k,gfx in pairs(dynamic.lMultiChildGfx) do =

 				if (self:IsZLayerVisible(gfx.zloc)) then
@@ -186,7 +186,7 @@
 						end
 				end
 			end
-		elseif (dynamic.gfx) then
+		elseif (dynamic.gfx and DynamicIsInWorld(dynamic)) then
 			-- WARNING copy & paste code
 			if (self:IsZLayerVisible(dynamic.zloc)) then
 				if (dynamic.gfx.billboard) then

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Thu Aug 30 21:17:18 2007
@@ -88,13 +88,13 @@
 	self:SetMapEnvironment()
 	=

 	self.gbCamRotChanged =3D true
-	for k,dynamic in pairs(GetDynamicList()) do self:CreateDynamicGfx(dynamic=
) end
+	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
) then self:CreateDynamicGfx(dynamic) end end
 	for k,mobile in pairs(GetMobileList()) do self:CreateMobileGfx(mobile) end
 end
 =

 function Renderer3D:DeInit()
 	--print("deactivating Renderer3D")
-	for k,dynamic in pairs(GetDynamicList()) do self:DestroyDynamicGfx(dynami=
c) end
+	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
) then self:DestroyDynamicGfx(dynamic) end end
 	for k,mobile in pairs(GetMobileList()) do self:DestroyMobileGfx(mobile) e=
nd
 	self:DeactivateMousePick()
 	self:ClearMapCache()

Modified: trunk/data/lua/lib.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.cam.lua (original)
+++ trunk/data/lua/lib.cam.lua Thu Aug 30 21:17:18 2007
@@ -15,7 +15,7 @@
 	return cam:GetNearClipDistance(),cam:GetFarClipDistance() =

 end
 =

---- initialise ortho mode, useful for 2d rendering
+--- initialize ortho mode, useful for 2d rendering
 function Client_SetPixelCoordSystem	()
 	local cam =3D GetMainCam() =

 	cam:SetFOVy( gfDeg2Rad*90 )

Modified: trunk/data/lua/lib.corpse.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.corpse.lua (original)
+++ trunk/data/lua/lib.corpse.lua Thu Aug 30 21:17:18 2007
@@ -1,4 +1,5 @@
 -- handles special cases for corpses
+-- see also net.corpse.lua
 =

 =

 =

@@ -50,4 +51,4 @@
 	end
 	RefreshContainerItemWidgets(container)
 end
-]]--
+]]--

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Thu Aug 30 21:17:18 2007
@@ -16,121 +16,120 @@
 gDebugMenuModelIndex =3D 1
 gDebugMenuMainGfxPos =3D {-0.5,0.5,-0.15}
 =

+-- TODO : might have to be adjusted for knut merge
 function RepairEquipIndex (arr) =

-	local res =3D {}
-	for k,v in pairs(arr) do =

+	for k,item in pairs(arr) do =

 		local layer =3D GetPaperdollLayerFromTileType(v.artid)
 		if (not layer) then print("could't get layer for artid ",v.artid) end
-		res[layer or (1000 + k)] =3D v =

-	end
-	return res
+		item.layer =3D layer or (1000 + k)
+	end
 end
 =

 gDebugTestMobiles =3D {
-	{artid=3D 292 , equipment=3D{}}, --broken llamas_llama_pack (crash) -> ma=
pped to id: 220
-
-	{artid=3D hex2num("0xA9") , equipment=3D{}}, --169 broken horse
-	{artid=3D hex2num("0x317"), equipment=3D{}}, --791 broken horse
-	{artid=3D	hex2num("0x76") , equipment=3D{}}, --horse ok
-	{artid=3D	hex2num("0x78") , equipment=3D{}}, --horse ok
-
-	{artid=3D hex2num("0x123") , equipment=3D{}}, =

-	{artid=3D hex2num("0xD5") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xF1") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xF3") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xCC") , equipment=3D{}}, -- 204, broken
-	{artid=3D	hex2num("0xC8") , equipment=3D{}}, -- 200 : standard horse
-	{artid=3D	hex2num("0xE2") , equipment=3D{}}, -- 226 broken
-	{artid=3D	hex2num("0xE4") , equipment=3D{}}, -- 228 broken
-	{artid=3D	hex2num("0xDC") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xD2") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xDA") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xDB") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x3C") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xD5") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xB1") , equipment=3D{}}, -- 177 broken
-	{artid=3D	hex2num("0x75") , equipment=3D{}}, -- 117 broken =

-	{artid=3D	hex2num("0x72") , equipment=3D{}}, -- 114 broken =

-	{artid=3D	hex2num("0x73") , equipment=3D{}},  -- 115 broken
-	{artid=3D	hex2num("0xC8") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x79") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x77") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x90") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x74") , equipment=3D{}},  -- 116 broken
-	{artid=3D	hex2num("0xB2") , equipment=3D{}},  -- 178 broken
-	{artid=3D	hex2num("0x84") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xB3") , equipment=3D{}},  -- 179 broken
-	{artid=3D	hex2num("0xBB") , equipment=3D{}}, =

-	{artid=3D	hex2num("0xBC") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x319") , equipment=3D{}},
-	{artid=3D	hex2num("0x317") , equipment=3D{}}, -- brokenanim
-	{artid=3D	hex2num("0x31A") , equipment=3D{}}, -- brokenanim
-	{artid=3D	hex2num("0x31F") , equipment=3D{}}, -- brokenanim
-	{artid=3D	hex2num("0xBE") , equipment=3D{}},  -- 190 broken
-	{artid=3D hex2num("0x11C") , equipment=3D{}}, -- 284 anim broken, scale b=
roken..
-	{artid=3D	hex2num("0xFB") , equipment=3D{}}, =

-
-	{artid=3D400,hue=3D33780, equipment=3D{[4]=3D{artid=3D5422,hue=3D1728,ani=
mid=3D430},[26]=3D{artid=3D3701,hue=3D0,animid=3D422},[16]=3D{artid=3D8269,=
hue=3D1147,animid=3D906},[27]=3D{artid=3D3701,hue=3D0,animid=3D422},[17]=3D=
{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252,hue=3D1147,anim=
id=3D701},[12]=3D{artid=3D5435,hue=3D0,animid=3D466},[21]=3D{artid=3D3701,h=
ue=3D0,animid=3D422},}},
-	{artid=3D400,hue=3D33780, equipment=3D{[26]=3D{artid=3D3701,hue=3D0,animi=
d=3D422},[16]=3D{artid=3D8269,hue=3D1147,animid=3D906},[27]=3D{artid=3D3701=
,hue=3D0,animid=3D422},[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=
=3D{artid=3D8252,hue=3D1147,animid=3D701},[12]=3D{artid=3D5435,hue=3D0,anim=
id=3D466},[21]=3D{artid=3D3701,hue=3D0,animid=3D422},}},
-	{artid=3D400,hue=3D33780, equipment=3D{[27]=3D{artid=3D3701,hue=3D0,animi=
d=3D422},[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252=
,hue=3D1147,animid=3D701},[12]=3D{artid=3D5435,hue=3D0,animid=3D466},[21]=
=3D{artid=3D3701,hue=3D0,animid=3D422},}},
-	{artid=3D400,hue=3D33780, equipment=3D{[11]=3D{artid=3D8252,hue=3D1147,an=
imid=3D701},[12]=3D{artid=3D5435,hue=3D0,animid=3D466},[21]=3D{artid=3D3701=
,hue=3D0,animid=3D422},}},
-
-
-	--{artid=3D2011, equipment=3D{{animid=3D2002}}}, -- 02:feet 11:ulegs
-	{artid=3D400, equipment=3D{}},
-	{artid=3D400, equipment=3D{[1]=3D{artid=3D3932,animid=3D631},[2]=3D{artid=
=3D7107,animid=3D993},[4]=3D{artid=3D5137,animid=3D529},[6]=3D{artid=3D9797=
,animid=3D682},[7]=3D{artid=3D5140,animid=3D530},[19]=3D{artid=3D5136,animi=
d=3D528},[16]=3D{artid=3D8256,animid=3D800},[21]=3D{artid=3D3701,animid=3D4=
22},[13]=3D{artid=3D5141,animid=3D527},[29]=3D{artid=3D3708,animid=3D0},[11=
]=3D{artid=3D8266,animid=3D903},}},
-	{artid=3D401, equipment=3D{}},
-	{artid=3D401, equipment=3D{[1]=3D{artid=3D3932,animid=3D631},[2]=3D{artid=
=3D7107,animid=3D993},[4]=3D{artid=3D5137,animid=3D529},[6]=3D{artid=3D9797=
,animid=3D682},[7]=3D{artid=3D5140,animid=3D530},[19]=3D{artid=3D5136,animi=
d=3D528},[16]=3D{artid=3D8256,animid=3D800},[21]=3D{artid=3D3701,animid=3D4=
22},[13]=3D{artid=3D5141,animid=3D527},[29]=3D{artid=3D3708,animid=3D0},[11=
]=3D{artid=3D8266,animid=3D903},}},
-	{artid=3D040, equipment=3D{}},
-	{artid=3D014, equipment=3D{}},
-	{artid=3D199, equipment=3D{}},
-	{artid=3D256, equipment=3D{}},
-	{artid=3D778, equipment=3D{}},
-	{artid=3D225, equipment=3D{}}, -- timberwolf
-	{artid=3D401, equipment=3D{[1]=3D{artid=3D3932,animid=3D631},[2]=3D{artid=
=3D7107,animid=3D993},[4]=3D{artid=3D5137,animid=3D529},[6]=3D{artid=3D9797=
,animid=3D682},[7]=3D{artid=3D5140,animid=3D530},[19]=3D{artid=3D5136,animi=
d=3D528},[16]=3D{artid=3D8256,animid=3D800},[21]=3D{artid=3D3701,animid=3D4=
22},[13]=3D{artid=3D5141,animid=3D527},[29]=3D{artid=3D3708,animid=3D0},[11=
]=3D{artid=3D8266,animid=3D903},}},
-	{artid=3D401, equipment=3D{[1]=3D{artid=3D3932,animid=3D631},[4]=3D{artid=
=3D5137,animid=3D529},[6]=3D{artid=3D9797,animid=3D682},[7]=3D{artid=3D5140=
,animid=3D530},[19]=3D{artid=3D5136,animid=3D528},[16]=3D{artid=3D8256,anim=
id=3D800},[21]=3D{artid=3D3701,animid=3D422},[13]=3D{artid=3D5141,animid=3D=
527},[29]=3D{artid=3D3708,animid=3D0},[11]=3D{artid=3D8266,animid=3D903},}},
-	{artid=3D401, equipment=3D({{artid=3D3932,animid=3D631},{artid=3D7107,ani=
mid=3D993},{artid=3D5137,animid=3D529},{artid=3D9797,animid=3D682},{artid=
=3D5140,animid=3D530},{artid=3D5136,animid=3D528},{artid=3D8256,animid=3D80=
0},{artid=3D3701,animid=3D422},{artid=3D5141,animid=3D527},{artid=3D3708,an=
imid=3D0},{artid=3D8266,animid=3D903},})},
-	=

-	{artid=3D400, equipment=3D({{artid=3D3519,animid=3D972},})},
-	{artid=3D400, equipment=3D({{artid=3D3519,animid=3D972},{artid=3D5901,ani=
mid=3D479},{artid=3D5422,animid=3D430},{artid=3D5399,animid=3D434},{artid=
=3D5907,animid=3D404},{artid=3D3701,animid=3D422},{artid=3D8252,animid=3D70=
1},})},
-	{artid=3D987, equipment=3D({{artid=3D5182,animid=3D624},{artid=3D5903,ani=
mid=3D480},{artid=3D5399,animid=3D434},{artid=3D5130,animid=3D565},{artid=
=3D5397,animid=3D468},{artid=3D3701,animid=3D422},{artid=3D7939,animid=3D46=
9},})},
-	{artid=3D401, equipment=3D({{artid=3D2594,animid=3D500},{artid=3D5899,ani=
mid=3D477},{artid=3D7933,animid=3D435},{artid=3D5431,animid=3D455},{artid=
=3D5397,animid=3D468},{artid=3D5441,animid=3D490},{artid=3D8261,animid=3D71=
0},{artid=3D3701,animid=3D422},})},
-	{artid=3D401, equipment=3D({{artid=3D2594,animid=3D500},{artid=3D5905,ani=
mid=3D476},{artid=3D5399,animid=3D434},{artid=3D5431,animid=3D455},{artid=
=3D5441,animid=3D490},{artid=3D3701,animid=3D422},{artid=3D8262,animid=3D71=
2},})},
-	{artid=3D401, equipment=3D({{artid=3D5899,animid=3D477},{artid=3D5422,ani=
mid=3D430},{artid=3D5399,animid=3D434},{artid=3D5435,animid=3D466},{artid=
=3D8251,animid=3D700},{artid=3D3701,animid=3D422},})},
-	{artid=3D400, equipment=3D({{artid=3D5905,animid=3D476},{artid=3D5422,ani=
mid=3D430},{artid=3D7933,animid=3D435},{artid=3D5909,animid=3D406},{artid=
=3D5441,animid=3D490},{artid=3D3701,animid=3D422},{artid=3D8251,animid=3D70=
0},})},
-	{artid=3D400, equipment=3D({{artid=3D5899,animid=3D477},{artid=3D5422,ani=
mid=3D430},{artid=3D7933,animid=3D435},{artid=3D8266,animid=3D903},{artid=
=3D3701,animid=3D422},})},
-	{artid=3D256, equipment=3D{}},
-	{artid=3D252, equipment=3D{}},
-	{artid=3D204, equipment=3D{}}, -- should be horse
-	--{artid=3D3006, equipment=3D{}}, -- female lower legs, sience was having=
 problem with them, 2 submeshes !
+	{artid=3D 292 , content=3D{}}, --broken llamas_llama_pack (crash) -> mapp=
ed to id: 220
+
+	{artid=3D hex2num("0xA9") , content=3D{}}, --169 broken horse
+	{artid=3D hex2num("0x317"), content=3D{}}, --791 broken horse
+	{artid=3D	hex2num("0x76") , content=3D{}}, --horse ok
+	{artid=3D	hex2num("0x78") , content=3D{}}, --horse ok
+
+	{artid=3D hex2num("0x123") , content=3D{}}, =

+	{artid=3D hex2num("0xD5") , content=3D{}}, =

+	{artid=3D	hex2num("0xF1") , content=3D{}}, =

+	{artid=3D	hex2num("0xF3") , content=3D{}}, =

+	{artid=3D	hex2num("0xCC") , content=3D{}}, -- 204, broken
+	{artid=3D	hex2num("0xC8") , content=3D{}}, -- 200 : standard horse
+	{artid=3D	hex2num("0xE2") , content=3D{}}, -- 226 broken
+	{artid=3D	hex2num("0xE4") , content=3D{}}, -- 228 broken
+	{artid=3D	hex2num("0xDC") , content=3D{}}, =

+	{artid=3D	hex2num("0xD2") , content=3D{}}, =

+	{artid=3D	hex2num("0xDA") , content=3D{}}, =

+	{artid=3D	hex2num("0xDB") , content=3D{}}, =

+	{artid=3D	hex2num("0x3C") , content=3D{}}, =

+	{artid=3D	hex2num("0xD5") , content=3D{}}, =

+	{artid=3D	hex2num("0xB1") , content=3D{}}, -- 177 broken
+	{artid=3D	hex2num("0x75") , content=3D{}}, -- 117 broken =

+	{artid=3D	hex2num("0x72") , content=3D{}}, -- 114 broken =

+	{artid=3D	hex2num("0x73") , content=3D{}},  -- 115 broken
+	{artid=3D	hex2num("0xC8") , content=3D{}}, =

+	{artid=3D	hex2num("0x79") , content=3D{}}, =

+	{artid=3D	hex2num("0x77") , content=3D{}}, =

+	{artid=3D	hex2num("0x90") , content=3D{}}, =

+	{artid=3D	hex2num("0x74") , content=3D{}},  -- 116 broken
+	{artid=3D	hex2num("0xB2") , content=3D{}},  -- 178 broken
+	{artid=3D	hex2num("0x84") , content=3D{}}, =

+	{artid=3D	hex2num("0xB3") , content=3D{}},  -- 179 broken
+	{artid=3D	hex2num("0xBB") , content=3D{}}, =

+	{artid=3D	hex2num("0xBC") , content=3D{}}, =

+	{artid=3D	hex2num("0x319") , content=3D{}},
+	{artid=3D	hex2num("0x317") , content=3D{}}, -- brokenanim
+	{artid=3D	hex2num("0x31A") , content=3D{}}, -- brokenanim
+	{artid=3D	hex2num("0x31F") , content=3D{}}, -- brokenanim
+	{artid=3D	hex2num("0xBE") , content=3D{}},  -- 190 broken
+	{artid=3D hex2num("0x11C") , content=3D{}}, -- 284 anim broken, scale bro=
ken..
+	{artid=3D	hex2num("0xFB") , content=3D{}}, =

+
+	{artid=3D400,hue=3D33780, content=3D{[4]=3D{artid=3D5422,hue=3D1728,animi=
d=3D430},[26]=3D{artid=3D3701,hue=3D0,animid=3D422},[16]=3D{artid=3D8269,hu=
e=3D1147,animid=3D906},[27]=3D{artid=3D3701,hue=3D0,animid=3D422},[17]=3D{a=
rtid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252,hue=3D1147,animid=
=3D701},[12]=3D{artid=3D5435,hue=3D0,animid=3D466},[21]=3D{artid=3D3701,hue=
=3D0,animid=3D422},}},
+	{artid=3D400,hue=3D33780, content=3D{[26]=3D{artid=3D3701,hue=3D0,animid=
=3D422},[16]=3D{artid=3D8269,hue=3D1147,animid=3D906},[27]=3D{artid=3D3701,=
hue=3D0,animid=3D422},[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D=
{artid=3D8252,hue=3D1147,animid=3D701},[12]=3D{artid=3D5435,hue=3D0,animid=
=3D466},[21]=3D{artid=3D3701,hue=3D0,animid=3D422},}},
+	{artid=3D400,hue=3D33780, content=3D{[27]=3D{artid=3D3701,hue=3D0,animid=
=3D422},[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252,=
hue=3D1147,animid=3D701},[12]=3D{artid=3D5435,hue=3D0,animid=3D466},[21]=3D=
{artid=3D3701,hue=3D0,animid=3D422},}},
+	{artid=3D400,hue=3D33780, content=3D{[11]=3D{artid=3D8252,hue=3D1147,anim=
id=3D701},[12]=3D{artid=3D5435,hue=3D0,animid=3D466},[21]=3D{artid=3D3701,h=
ue=3D0,animid=3D422},}},
+
+
+	--{artid=3D2011, content=3D{{animid=3D2002}}}, -- 02:feet 11:ulegs
+	{artid=3D400, content=3D{}},
+	{artid=3D400, content=3D{[1]=3D{artid=3D3932,animid=3D631},[2]=3D{artid=
=3D7107,animid=3D993},[4]=3D{artid=3D5137,animid=3D529},[6]=3D{artid=3D9797=
,animid=3D682},[7]=3D{artid=3D5140,animid=3D530},[19]=3D{artid=3D5136,animi=
d=3D528},[16]=3D{artid=3D8256,animid=3D800},[21]=3D{artid=3D3701,animid=3D4=
22},[13]=3D{artid=3D5141,animid=3D527},[29]=3D{artid=3D3708,animid=3D0},[11=
]=3D{artid=3D8266,animid=3D903},}},
+	{artid=3D401, content=3D{}},
+	{artid=3D401, content=3D{[1]=3D{artid=3D3932,animid=3D631},[2]=3D{artid=
=3D7107,animid=3D993},[4]=3D{artid=3D5137,animid=3D529},[6]=3D{artid=3D9797=
,animid=3D682},[7]=3D{artid=3D5140,animid=3D530},[19]=3D{artid=3D5136,animi=
d=3D528},[16]=3D{artid=3D8256,animid=3D800},[21]=3D{artid=3D3701,animid=3D4=
22},[13]=3D{artid=3D5141,animid=3D527},[29]=3D{artid=3D3708,animid=3D0},[11=
]=3D{artid=3D8266,animid=3D903},}},
+	{artid=3D040, content=3D{}},
+	{artid=3D014, content=3D{}},
+	{artid=3D199, content=3D{}},
+	{artid=3D256, content=3D{}},
+	{artid=3D778, content=3D{}},
+	{artid=3D225, content=3D{}}, -- timberwolf
+	{artid=3D401, content=3D{[1]=3D{artid=3D3932,animid=3D631},[2]=3D{artid=
=3D7107,animid=3D993},[4]=3D{artid=3D5137,animid=3D529},[6]=3D{artid=3D9797=
,animid=3D682},[7]=3D{artid=3D5140,animid=3D530},[19]=3D{artid=3D5136,animi=
d=3D528},[16]=3D{artid=3D8256,animid=3D800},[21]=3D{artid=3D3701,animid=3D4=
22},[13]=3D{artid=3D5141,animid=3D527},[29]=3D{artid=3D3708,animid=3D0},[11=
]=3D{artid=3D8266,animid=3D903},}},
+	{artid=3D401, content=3D{[1]=3D{artid=3D3932,animid=3D631},[4]=3D{artid=
=3D5137,animid=3D529},[6]=3D{artid=3D9797,animid=3D682},[7]=3D{artid=3D5140=
,animid=3D530},[19]=3D{artid=3D5136,animid=3D528},[16]=3D{artid=3D8256,anim=
id=3D800},[21]=3D{artid=3D3701,animid=3D422},[13]=3D{artid=3D5141,animid=3D=
527},[29]=3D{artid=3D3708,animid=3D0},[11]=3D{artid=3D8266,animid=3D903},}},
+	{artid=3D401, content=3D({{artid=3D3932,animid=3D631},{artid=3D7107,animi=
d=3D993},{artid=3D5137,animid=3D529},{artid=3D9797,animid=3D682},{artid=3D5=
140,animid=3D530},{artid=3D5136,animid=3D528},{artid=3D8256,animid=3D800},{=
artid=3D3701,animid=3D422},{artid=3D5141,animid=3D527},{artid=3D3708,animid=
=3D0},{artid=3D8266,animid=3D903},})},
+	=

+	{artid=3D400, content=3D({{artid=3D3519,animid=3D972},})},
+	{artid=3D400, content=3D({{artid=3D3519,animid=3D972},{artid=3D5901,animi=
d=3D479},{artid=3D5422,animid=3D430},{artid=3D5399,animid=3D434},{artid=3D5=
907,animid=3D404},{artid=3D3701,animid=3D422},{artid=3D8252,animid=3D701},}=
)},
+	{artid=3D987, content=3D({{artid=3D5182,animid=3D624},{artid=3D5903,animi=
d=3D480},{artid=3D5399,animid=3D434},{artid=3D5130,animid=3D565},{artid=3D5=
397,animid=3D468},{artid=3D3701,animid=3D422},{artid=3D7939,animid=3D469},}=
)},
+	{artid=3D401, content=3D({{artid=3D2594,animid=3D500},{artid=3D5899,animi=
d=3D477},{artid=3D7933,animid=3D435},{artid=3D5431,animid=3D455},{artid=3D5=
397,animid=3D468},{artid=3D5441,animid=3D490},{artid=3D8261,animid=3D710},{=
artid=3D3701,animid=3D422},})},
+	{artid=3D401, content=3D({{artid=3D2594,animid=3D500},{artid=3D5905,animi=
d=3D476},{artid=3D5399,animid=3D434},{artid=3D5431,animid=3D455},{artid=3D5=
441,animid=3D490},{artid=3D3701,animid=3D422},{artid=3D8262,animid=3D712},}=
)},
+	{artid=3D401, content=3D({{artid=3D5899,animid=3D477},{artid=3D5422,animi=
d=3D430},{artid=3D5399,animid=3D434},{artid=3D5435,animid=3D466},{artid=3D8=
251,animid=3D700},{artid=3D3701,animid=3D422},})},
+	{artid=3D400, content=3D({{artid=3D5905,animid=3D476},{artid=3D5422,animi=
d=3D430},{artid=3D7933,animid=3D435},{artid=3D5909,animid=3D406},{artid=3D5=
441,animid=3D490},{artid=3D3701,animid=3D422},{artid=3D8251,animid=3D700},}=
)},
+	{artid=3D400, content=3D({{artid=3D5899,animid=3D477},{artid=3D5422,animi=
d=3D430},{artid=3D7933,animid=3D435},{artid=3D8266,animid=3D903},{artid=3D3=
701,animid=3D422},})},
+	{artid=3D256, content=3D{}},
+	{artid=3D252, content=3D{}},
+	{artid=3D204, content=3D{}}, -- should be horse
+	--{artid=3D3006, content=3D{}}, -- female lower legs, sience was having p=
roblem with them, 2 submeshes !
 	--[[
-	{artid=3D1924, equipment=3D{{animid=3D3012}}},
-	{artid=3D3604, equipment=3D{{animid=3D3012}}},
-	{artid=3D1925, equipment=3D{{animid=3D3012}}},
-	{artid=3D3605, equipment=3D{{animid=3D3012}}},
+	{artid=3D1924, content=3D{{animid=3D3012}}},
+	{artid=3D3604, content=3D{{animid=3D3012}}},
+	{artid=3D1925, content=3D{{animid=3D3012}}},
+	{artid=3D3605, content=3D{{animid=3D3012}}},
 	]]--
 	--[[
-	{artid=3D2013, equipment=3D{}},
-	{artid=3D2009, equipment=3D{}},
-	{artid=3D2012, equipment=3D{}},
-	{artid=3D3013, equipment=3D{}},
-	{artid=3D3009, equipment=3D{}},
-	{artid=3D3012, equipment=3D{}},
-	{artid=3D3009, equipment=3D{}},
-	{artid=3D3012, equipment=3D{}},
-	{artid=3D3009, equipment=3D{}},
-	{artid=3D3012, equipment=3D{}},
-	{artid=3D3009, equipment=3D{}},
-	{artid=3D3012, equipment=3D{}},
+	{artid=3D2013, content=3D{}},
+	{artid=3D2009, content=3D{}},
+	{artid=3D2012, content=3D{}},
+	{artid=3D3013, content=3D{}},
+	{artid=3D3009, content=3D{}},
+	{artid=3D3012, content=3D{}},
+	{artid=3D3009, content=3D{}},
+	{artid=3D3012, content=3D{}},
+	{artid=3D3009, content=3D{}},
+	{artid=3D3012, content=3D{}},
+	{artid=3D3009, content=3D{}},
+	{artid=3D3012, content=3D{}},
 	]]--
 	--[[
-	{artid=3D1466, equipment=3D{}}, -- flimmer, need culling? (fixed)
-	{artid=3D1700, equipment=3D{}}, -- hair, texcoords or normals broken ? (f=
ixed)
-	{artid=3D500, equipment=3D{}}, -- lantern, texcoords broken ?! (fixed)
-	{artid=3D468, equipment=3D{}}, -- cape, texcoords broken ? culling? (fixe=
d)
-	{artid=3D1468, equipment=3D{}}, -- cape, texcoords broken ? culling? (fix=
ed)
-	{artid=3D490, equipment=3D{}}, -- sash, texcoords broken ? culling? (fixe=
d)
-	{artid=3D1490, equipment=3D{}},  -- sash, texcoords broken ? culling? (fi=
xed)
+	{artid=3D1466, content=3D{}}, -- flimmer, need culling? (fixed)
+	{artid=3D1700, content=3D{}}, -- hair, texcoords or normals broken ? (fix=
ed)
+	{artid=3D500, content=3D{}}, -- lantern, texcoords broken ?! (fixed)
+	{artid=3D468, content=3D{}}, -- cape, texcoords broken ? culling? (fixed)
+	{artid=3D1468, content=3D{}}, -- cape, texcoords broken ? culling? (fixed)
+	{artid=3D490, content=3D{}}, -- sash, texcoords broken ? culling? (fixed)
+	{artid=3D1490, content=3D{}},  -- sash, texcoords broken ? culling? (fixe=
d)
 	]]--
 }
 =

@@ -160,7 +159,7 @@
 	if (gCurDebugMode =3D=3D kDebugMode_Granny) then
 		local mobile =3D gDebugTestMobiles[index]
 		if (not mobile) then return end
-		mobile.equipment =3D RepairEquipIndex(mobile.equipment)
+		RepairEquipIndex(mobile.content)
 		AddFadeLines(sprintf("DebugMenuShowModel model=3D%04x(=3D%d) anim=3D%d[%=
s]",mobile.artid,mobile.artid,gDebugMenuAnimIndex,GetAnimName(mobile.artid,=
gDebugMenuAnimIndex) or ""))
 		=

 		local animid =3D gDebugMenuAnimIndex

Modified: trunk/data/lua/lib.devtool.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.devtool.lua (original)
+++ trunk/data/lua/lib.devtool.lua Thu Aug 30 21:17:18 2007
@@ -262,7 +262,7 @@
 	local res =3D {}
 	for k,item in pairs(GetDynamicList()) do =

 		local d =3D dist2(x,y,item.xloc,item.yloc)
-		if (d <=3D radius) then table.insert(res,item) end =

+		if (DynamicIsInWorld(item) and d <=3D radius) then table.insert(res,item=
) end =

 	end
 	return res
 end

Modified: trunk/data/lua/lib.fallback.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.fallback.lua (original)
+++ trunk/data/lua/lib.fallback.lua Thu Aug 30 21:17:18 2007
@@ -136,7 +136,7 @@
 	local res =3D {}
 	for k,item in pairs(GetDynamicList()) do =

 		local d =3D dist2(x,y,item.xloc,item.yloc)
-		if (d <=3D radius) then table.insert(res,item) end =

+		if (DynamicIsInWorld(item) and d <=3D radius) then table.insert(res,item=
) end =

 	end
 	return res
 end

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Thu Aug 30 21:17:18 2007
@@ -488,7 +488,6 @@
 =

 	-- TODO: Debug and check why RunUO sends kPacket_Equipped_MOB with artid =
=3D=3D Zero
 	if (mobile.artid =3D=3D 0) then return end
-	if (not mobile.equipment) then return end -- happens when being teleported
 	=

 	local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
 	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelPa=
rtModelIDs(mobile)
@@ -579,11 +578,11 @@
 		end
 		=

 		if (false) then
-			local txt =3D sprintf("##### {artid=3D%d,hue=3D%d, equipment=3D{",mobil=
e.artid,mobile.hue)
-			if (mobile.equipment) then for k,item in pairs(mobile.equipment) do
+			local txt =3D sprintf("##### {artid=3D%d,hue=3D%d, content=3D{",mobile.=
artid,mobile.hue)
+			for k,item in pairs(GetMobileEquipmentList(mobile)) do
 				local tiledata =3D GetStaticTileType(item.artid)
-				txt =3D txt .. sprintf("[%d]=3D{artid=3D%d,hue=3D%d,animid=3D%d},",k,i=
tem.artid,item.hue,tiledata and tiledata.miAnimID or 0)
-			end end =

+				txt =3D txt .. sprintf("{layer=3D%d,artid=3D%d,hue=3D%d,animid=3D%d},"=
,item.layer,item.artid,item.hue,tiledata and tiledata.miAnimID or 0)
+			end =

 			txt =3D txt .. sprintf("}},\n")
 			printdebug("equip",txt)
 		end

Modified: trunk/data/lua/lib.spellbooks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.spellbooks.lua (original)
+++ trunk/data/lua/lib.spellbooks.lua Thu Aug 30 21:17:18 2007
@@ -19,8 +19,8 @@
 container=3D0x41b72b8a item.serial=3D0x7fffffe2 artid=3D0x0000 artid_stack=
=3D0 item.amount=3D30
 ]]--
 function Convert_Spellbookcontainer(matrix,container)
-	if (container.items) then
-		for k,v in pairs(container.items) do
+	if (container:GetContent()) then
+		for k,v in pairs(container:GetContent()) do
 			local circle=3D0
 			v.artid=3Dtonumber(v.artid)
 			if (v.artid >=3D hex2num("0x1F2D") and v.artid < hex2num("0x1F35")) then

Modified: trunk/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.walking2.lua (original)
+++ trunk/data/lua/lib.walking2.lua Thu Aug 30 21:17:18 2007
@@ -162,7 +162,7 @@
 	local xloc=3Dbx*8+tx
 	local yloc=3Dby*8+ty
 	for k,dynamic in pairs(GetDynamicList()) do
-		if(dynamic.artid) then
+		if(DynamicIsInWorld(dynamic) and dynamic.artid) then
 =

 			-- is this a normal statictile or multi?
 			if (dynamic.artid >=3D gMulti_ID) then -- gMulti_ID + 100

Modified: trunk/data/lua/net.securetrade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.securetrade.lua (original)
+++ trunk/data/lua/net.securetrade.lua Thu Aug 30 21:17:18 2007
@@ -37,7 +37,7 @@
 	--print("SecureTradeRebuildContainerWidgets",mysectrade.id,bIsMyStuff)
 	=

 	local parent =3D mysectrade.dialog.rootwidget
-	for k,item in pairs(container.items) do
+	for k,item in pairs(container:GetContent()) do
 		-- todo : gold art modifyer
 		local iArtID =3D item.artid + hex2num("0x4000")
 		local mat =3D GetArtMat(iArtID,item.hue)
@@ -72,7 +72,6 @@
 				local item =3D widget.item
 				local name =3D GetStaticTileTypeName(item.artid) or ""
 				info =3D sprintf("tradeitem %s amount=3D%d (artid=3D%04x=3D%d)",name,i=
tem.amount,item.artid,item.artid)
-				--print("MakeContainerItemWidget onMouseEnter ",name,vardump(item))
 				gCurrentRenderer.gMousePickTippOverride =3D info
 				Client_SetBottomLine(gCurrentRenderer.gMousePickTippOverride)
 			end
@@ -80,7 +79,6 @@
 		end
 	end
 	=

-	-- container.items[item.serial] =3D item
 	--[[
 	SecureTradeObjectToObjectHook(item)
 	=

@@ -96,8 +94,8 @@
 	]]--
 end
 =

--- triggered when anythin is changed,added or removed in/from a container
--- kPacket_Container_Contents kPacket_Object_to_Object DestroyContainerIte=
mBySerial
+-- triggered when anything is changed,added or removed in/from a container
+-- kPacket_Container_Contents kPacket_Object_to_Object
 function SecureTradeRebuildContainerHook (container)
 	for k,mysectrade in pairs(gSecureTrades) do =

 		if (mysectrade.myContainerID	=3D=3D container.serial) then SecureTradeRe=
buildContainerWidgets(mysectrade,container,true) end
@@ -106,9 +104,9 @@
 end
 =

 function SecureTradeRebuildContainers (mysectrade)
-	local container_my =3D gContainer[mysectrade.myContainerID]
+	local container_my =3D GetContainer(mysectrade.myContainerID)
 	if (container_my) then SecureTradeRebuildContainerWidgets(mysectrade,cont=
ainer_my,true) end
-	local container_their =3D gContainer[mysectrade.theirContainerID]
+	local container_their =3D GetContainer(mysectrade.theirContainerID)
 	if (container_their) then SecureTradeRebuildContainerWidgets(mysectrade,c=
ontainer_their,false) end
 end
 =


Modified: trunk/data/lua/net.trade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.trade.lua (original)
+++ trunk/data/lua/net.trade.lua Thu Aug 30 21:17:18 2007
@@ -70,7 +70,7 @@
 		if (not playerBackpackContainer)	then print("FATAL : kPacket_Shop_Sell :=
 playerBackpackContainer not found") Crash() end
 		if (not playerMobile)				then print("FATAL : kPacket_Shop_Sell : playerM=
obile not found") Crash() end
 	=

-		if (true) then -- debug
+		if (false) then -- debug
 			for k,item in pairs(GetContainerContentList(playerBackpackContainer)) d=
o =

 				printf("item serial=3D0x%08x artid=3D0x%04x in backpack\n",item.serial=
,item.artid)
 			end
@@ -92,7 +92,7 @@
 			good.tradeamount=3D 0
 			good.index 		=3D i
 			good.item		=3D GetObjectBySerial(good.itemserial)
-			--- old : see also playerBackpackContainer.items[good.itemserial]			=

+			--- old : see also get obj with good.itemserial from playerBackpackCont=
ainer
 =

 			if (good.item) then -- item is not always available, especially if its =
in the backpack, and that has not been opened yet
 				if (good.itemartid ~=3D good.item.artid)	then printf("FATAL : kPacket_=
Shop_Sell : artid mismatch 0x%04x !=3D 0x%04x\n",good.itemartid,good.item.a=
rtid) Crash()  end
@@ -142,12 +142,12 @@
 	if (shop.goodcount > 0) then
 		-- get associated container (probably on one of the special layers, kLay=
er_NPCBuyRestock or NPCBuyNoRestock)
 		-- usually sent together with this packet as kPacket_Container_Contents
-		local container =3D gContainer[shop.shopContainerID]
+		local container =3D GetContainer(shop.shopContainerID)
 		if (not container) then print("FATAL ! shop container not found",vardump=
(shop.shopContainerID)) Crash() end
 		=

 		-- goods are associate with items in container sorted by serial, ascendi=
ng or descending, depending on server Emu
 		local sorteditems =3D {}
-		for k,v in pairs(container.items) do table.insert(sorteditems,v) end
+		for k,v in pairs(container:GetContent()) do table.insert(sorteditems,v) =
end
 		if (gPolServer) then
 			table.sort(sorteditems,CompareSerialDesc)
 		else

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Thu Aug 30 21:17:18 2007
@@ -90,7 +90,7 @@
 	=

 	-- destroy objects outside view range
 	-- dynamics
-	for k,dynamic in pairs(GetDynamicList()) do if (IsObjectFarEnoughToDestro=
y(dynamic.xloc,dynamic.yloc)) then
+	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
 and IsObjectFarEnoughToDestroy(dynamic.xloc,dynamic.yloc)) then
 		DestroyObjectBySerial(dynamic.serial) =

 	end end
 	-- mobiles

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Thu Aug 30 21:17:18 2007
@@ -4,19 +4,22 @@
 -- This is sent by the server to equip a single item on a character.
 --Packet [2e], Length: 15, Type: Server
 --2e 40 02 21 9b 20 3b 00 0b 00 00 00 03 04 5e =

+-- watch out for kLayer_NPCBuyRestock and kLayer_NPCBuyNoRestock
 function gPacketHandler.kPacket_Equip_Item() -- ProtocolRecv_AddMobile
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 =

-	local item =3D {}
-	item.serial  			=3D input:PopNetUint32() -- (always starts 0x40 in my dat=
a)
-	item.artid				=3D input:PopNetUint16() -- also known as model
-	item.unknown1			=3D input:PopNetUint8() if (item.unknown1 ~=3D 0) then pr=
int("NET : kPacket_Equip_Item : unexpected unknown1 : ",vardump(item)) end
-	item.layer				=3D input:PopNetUint8()
-	local container_serial	=3D input:PopNetUint32() -- "container" for item
-	item.hue				=3D input:PopNetUint16()
+	local dynamicdata =3D {}
+	dynamicdata.serial  			=3D input:PopNetUint32() -- (always starts 0x40 in=
 my data)
+	dynamicdata.artid_base			=3D input:PopNetUint16() -- also known as model
+	dynamicdata.unknown1			=3D input:PopNetUint8()  -- artid_addstack ? amoun=
t for corpse ?	=

+	if (dynamicdata.unknown1 ~=3D 0) then print("NET : kPacket_Equip_Item : u=
nexpected unknown1 : ",vardump(dynamicdata)) end
 	=

-	ContainerEquipItem(item,container_serial)
+	dynamicdata.layer				=3D input:PopNetUint8()
+	dynamicdata.iContainerSerial	=3D input:PopNetUint32() -- "container" for =
item
+	dynamicdata.hue					=3D input:PopNetUint16()
+	=

+	HandleEquipItem(dynamicdata)
 end
 =

 =

@@ -35,90 +38,83 @@
 =

 -- show item (0x1a)
 function gPacketHandler.kPacket_Show_Item()
-	local newitem =3D {}
+	local dynamicdata =3D {}
 	local input =3D GetRecvFIFO()
 	local popped_start =3D input:GetTotalPopped()
 	local id =3D input:PopNetUint8()
 	=

 	local iPacketSize =3D input:PopNetUint16()
-	newitem.serial =3D input:PopNetUint32() -- id =3D serial . Include the fl=
ag 0x80000000 if the item's amount is greater than one.
-	newitem.artid =3D input:PopNetUint16() -- model =3D artwork . Include the=
 flag 0x8000 if the item's stackid is greater than zero.	=

+	dynamicdata.serial			=3D input:PopNetUint32() -- id =3D serial . Include =
the flag 0x80000000 if the item's amount is greater than one.
+	dynamicdata.artid_base		=3D input:PopNetUint16() -- model =3D artwork . I=
nclude the flag 0x8000 if the item's stackid is greater than zero.	=

 	=

-	-- newitem.amount  (or model # for corpses)
-	if (TestBit(newitem.serial,hex2num("0x80000000"))) then =

-		newitem.amount =3D input:PopNetUint16() =

+	-- dynamicdata.amount  (or model # for corpses)
+	if (TestBit(dynamicdata.serial,hex2num("0x80000000"))) then =

+		dynamicdata.amount =3D input:PopNetUint16() =

 	else 	=

-		newitem.amount =3D 1
+		dynamicdata.amount =3D 1
 	end
 	=

-	--print("artid,artidhex,bitwiseand",newitem.artid,sprintf("0x%04x",newite=
m.artid),BitwiseAND(newitem.artid,hex2num("0x8000")))
+	--print("artid_base,artidhex,bitwiseand",dynamicdata.artid_base,sprintf("=
0x%04x",dynamicdata.artid_base),BitwiseAND(dynamicdata.artid_base,hex2num("=
0x8000")))
 	=

-	-- newitem.artid_addstack : The number to add to the item's artwork when =
Amount > 1.
-	if (TestBit(newitem.artid,hex2num("0x8000"))) then =

-			newitem.artid_addstack =3D input:PopNetUint8() =

-	else	newitem.artid_addstack =3D 0 end
+	-- dynamicdata.artid_addstack : The number to add to the item's artwork w=
hen Amount > 1.
+	if (TestBit(dynamicdata.artid_base,hex2num("0x8000"))) then =

+			dynamicdata.artid_addstack =3D input:PopNetUint8() =

+	else	dynamicdata.artid_addstack =3D 0 end
 =

-	newitem.xloc =3D input:PopNetUint16() --only use lowest significant 15 bi=
ts)
-	newitem.yloc =3D input:PopNetUint16()
+	dynamicdata.xloc =3D input:PopNetUint16() --only use lowest significant 1=
5 bits)
+	dynamicdata.yloc =3D input:PopNetUint16()
 =

-	if (TestBit(newitem.xloc,hex2num("0x8000"))) then
-		newitem.dir =3D input:PopNetUint8()
+	if (TestBit(dynamicdata.xloc,hex2num("0x8000"))) then
+		dynamicdata.dir =3D input:PopNetUint8()
 	else	=

-		newitem.dir =3D 0
+		dynamicdata.dir =3D 0
 	end
 =

-	newitem.zloc =3D input:PopInt8()
+	dynamicdata.zloc =3D input:PopInt8()
 =

-	newitem.hue =3D 0
-	newitem.flag =3D 0
+	dynamicdata.hue =3D 0
+	dynamicdata.flag =3D 0
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 2) then
-		if (TestBit(newitem.yloc,hex2num("0x8000"))) then
-			newitem.hue =3D input:PopNetUint16()
+		if (TestBit(dynamicdata.yloc,hex2num("0x8000"))) then
+			dynamicdata.hue =3D input:PopNetUint16()
 		end
 	end
 	if (iPacketSize - (input:GetTotalPopped() - popped_start) >=3D 1) then
-		if (TestBit(newitem.yloc,hex2num("0x4000"))) then
-			newitem.flag =3D input:PopNetUint8()
+		if (TestBit(dynamicdata.yloc,hex2num("0x4000"))) then
+			dynamicdata.flag =3D input:PopNetUint8()
 		end
 	end
-	-- item_flag : some kind of status or flags, usage unknown
 	=

-	newitem.serial	=3D BitwiseAND(newitem.serial,hex2num("0x7fffffff"))
-	newitem.artid	=3D BitwiseAND(newitem.artid,hex2num("0x7fff"))
-	newitem.xloc	=3D BitwiseAND(newitem.xloc,hex2num("0x7fff"))
-	newitem.yloc	=3D BitwiseAND(newitem.yloc,hex2num("0x3fff"))
+	dynamicdata.serial		=3D BitwiseAND(dynamicdata.serial,hex2num("0x7fffffff=
"))
+	dynamicdata.artid_base	=3D BitwiseAND(dynamicdata.artid_base,hex2num("0x7=
fff"))
+	dynamicdata.xloc		=3D BitwiseAND(dynamicdata.xloc,hex2num("0x7fff"))
+	dynamicdata.yloc		=3D BitwiseAND(dynamicdata.yloc,hex2num("0x3fff"))
+	dynamicdata.iContainerSerial =3D 0
 	=

-	-- TODO : corpse is spawned
-	if (newitem.artid =3D=3D hex2num("0x2006")) then
-		print("TODO: char died. sethue,setdirection,setascorpse")
-	end
-
-	ApplyArtidStackManipulation(newitem)
-	=

-	CreateOrUpdateDynamic(newitem)
+	CreateOrUpdateDynamic(dynamicdata)
 end
 =

 -- AddItemToContainer (0x3C)
 -- pol sends this after kPacket_Open_Container, runuo before, see also kPa=
cket_Object_to_Object
 function gPacketHandler.kPacket_Container_Contents() -- 0x3c
 	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local size =3D input:PopNetUint16()
-	local itemcount =3D input:PopNetUint16()
+	local id		=3D input:PopNetUint8()
+	local size		=3D input:PopNetUint16()
+	local itemcount	=3D input:PopNetUint16()
 =

 	for i=3D1,itemcount do
-		local item =3D {}
-		item.serial =3D input:PopNetUint32()
-		item.artid =3D input:PopNetUint16()
-		item.artid_addstack =3D input:PopNetUint8()	--unknown1 (alyways 0x00) !?
-		item.amount =3D input:PopNetUint16()
-		item.xloc =3D input:PopNetInt16()
-		item.yloc =3D input:PopNetInt16()
-		item.zloc =3D 0
-		item.iContainerSerial =3D input:PopNetUint32()
-		item.hue =3D input:PopNetUint16()
+		local dynamicdata =3D {}
+		dynamicdata.serial				=3D input:PopNetUint32()
+		dynamicdata.artid_base			=3D input:PopNetUint16()
+		dynamicdata.artid_addstack		=3D input:PopNetUint8()
+		dynamicdata.amount				=3D input:PopNetUint16()
+		dynamicdata.xloc				=3D input:PopNetInt16()
+		dynamicdata.yloc				=3D input:PopNetInt16()
+		dynamicdata.zloc				=3D 0
+		dynamicdata.iContainerSerial 	=3D input:PopNetUint32()
+		dynamicdata.hue 				=3D input:PopNetUint16()
 =

-		ContainerSetContentItem(item)
+		CreateOrUpdateDynamic(dynamicdata)
 	end
 end
 =

@@ -126,17 +122,16 @@
 function gPacketHandler.kPacket_Object_to_Object() -- 0x25
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
-	local item =3D {}
-	item.serial =3D input:PopNetUint32()
-	item.artid =3D input:PopNetUint16()
-	item.artid_addstack =3D input:PopNetUint8()
-	item.amount =3D input:PopNetUint16()
-	item.xloc =3D input:PopNetInt16()
-	item.yloc =3D input:PopNetInt16()
-	item.iContainerSerial =3D input:PopNetUint32()
-	item.hue =3D input:PopNetUint16()
-	printdebug("net",sprintf("NET : kPacket_Object_to_Object : container=3D0x=
%08x item=3D0x%08x artid=3D0x%04x amount=3D%d\n",
-				item.iContainerSerial,item.serial,item.artid,item.amount))
-				=

-	ContainerObjectToObject(item)
+	local dynamicdata =3D {}
+	dynamicdata.serial				=3D input:PopNetUint32()
+	dynamicdata.artid_base			=3D input:PopNetUint16()
+	dynamicdata.artid_addstack		=3D input:PopNetUint8()
+	dynamicdata.amount				=3D input:PopNetUint16()
+	dynamicdata.xloc				=3D input:PopNetInt16()
+	dynamicdata.yloc				=3D input:PopNetInt16()
+	dynamicdata.zloc				=3D 0
+	dynamicdata.iContainerSerial	=3D input:PopNetUint32()
+	dynamicdata.hue					=3D input:PopNetUint16()
+	=

+	CreateOrUpdateDynamic(dynamicdata)
 end

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Thu Aug 30 21:17:18 2007
@@ -55,20 +55,20 @@
 	while true do =

 		if ( iPacketSize < (fifolen_start - input:Size()+4) ) then break end
 		=

-		local itemdata =3D {}
-		itemdata.serial =3D input:PopNetUint32()
-		if (itemdata.serial =3D=3D 0) then break end
+		local dynamicdata =3D {}
+		dynamicdata.serial =3D input:PopNetUint32()
+		if (dynamicdata.serial =3D=3D 0) then break end
 		=

 		if ( iPacketSize < (fifolen_start - input:Size()+3) ) then break end
-		itemdata.artid =3D input:PopNetUint16()
-		itemdata.layer =3D input:PopNetUint8()
-		if (TestBit(itemdata.artid,hex2num("0x8000")) and ( iPacketSize >=3D (fi=
folen_start - input:Size()+2) )) then
-				itemdata.hue =3D input:PopNetUint16()
-		else	itemdata.hue =3D 0 -- TODO : default value ?
+		dynamicdata.artid_base =3D input:PopNetUint16()
+		dynamicdata.layer =3D input:PopNetUint8()
+		if (TestBit(dynamicdata.artid_base,hex2num("0x8000")) and ( iPacketSize =
>=3D (fifolen_start - input:Size()+2) )) then
+				dynamicdata.hue =3D input:PopNetUint16()
+		else	dynamicdata.hue =3D 0 -- TODO : default value ?
 		end
-		itemdata.artid =3D BitwiseAND(itemdata.artid,hex2num("0x7fff"))
-		if (equipmentdata[itemdata.layer]) then print("warning ! Equipped_MOB : =
layer contains more than one item",itemdata.layer) end
-		equipmentdata[itemdata.layer] =3D itemdata
+		dynamicdata.artid_base =3D BitwiseAND(dynamicdata.artid_base,hex2num("0x=
7fff"))
+		if (equipmentdata[dynamicdata.layer]) then print("warning ! Equipped_MOB=
 : layer contains more than one item",dynamicdata.layer) end
+		equipmentdata[dynamicdata.layer] =3D dynamicdata
 	end
 	=

 	CreateOrUpdateMobile(mobiledata,equipmentdata)
@@ -256,3 +256,26 @@
 	=

 	gCurrentRenderer:NotifyHPChange( serial, damage, 0 )
 end
+
+
+-- Fighting - Swing [0x2F] 10bytes
+-- TODO : handle animation
+-- TODO : is this packet actually used ?
+function gPacketHandler.kPacket_Swing()
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local unknown1 =3D input:PopNetUint8()
+	local attacker_serial =3D input:PopNetUint32()
+	local defender_serial =3D input:PopNetUint32()
+	printf("NET: Swing Attack Animation, attacker=3D0x%08x defender=3D0x%08x\=
n",attacker_serial,defender_serial)
+end
+
+-- TODO : what is the result of this packet?
+--BYTE cmd =

+--BYTE action (2=3Dghost, 1=3Dresurrect, 0=3Dfrom server)
+function gPacketHandler.kPacket_Death()
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local action =3D input:PopNetUint8()
+	print("NET: Server sends, that player is now (2=3Dghost, 1=3Dresurrect, 0=
=3Dfrom server)=3D"..action)
+end

Modified: trunk/data/lua/net/net.packethandlers.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.packethandlers.lua (original)
+++ trunk/data/lua/net/net.packethandlers.lua Thu Aug 30 21:17:18 2007
@@ -9,27 +9,7 @@
 	containerdata =3D {}
 	containerdata.serial =3D input:PopNetUint32()
 	containerdata.gumpid =3D input:PopNetUint16()
-	=

-	print("# kPacket_Open_Container",containerdata.serial,containerdata.gumpi=
d)
-	=

-	--Ignore Shop container - created somewhere else
-	if (containerdata.gumpid =3D=3D kGumpIDShopContainer) then
-		AddFadeLines(sprintf("Open_ShopContainer id=3D0x%08x",containerdata.seri=
al))
-	--Old_Spellbook Container (Pol,Sphere,Lonewolf,RunUO1 etc.)
-	elseif ((containerdata.gumpid =3D=3D kGumpIDSpellbookContainer) and (not =
IsContainerAlreadyOpen(containerdata.serial))) then
-		local spellbook =3D {}
-		spellbook.old=3Dtrue
-		spellbook.serial =3D containerdata.serial
-		spellbook.itemid =3D containerdata.gumpid
-		spellbook.scrolloffset =3D 0
-		spellbook.matrix =3D {}
-		for i=3D1, 8 do spellbook.matrix[i] =3D 0 end
-		-- container with spell is already created (invisible)
-		Open_Spellbook(spellbook)
-		printf("NET: Old_Spellbook: serial=3D0x%08x itemId=3D0x%04x offset=3D0x%=
04x\n",spellbook.serial, spellbook.itemid, spellbook.scrolloffset)
-	else
-		HandleOpenContainer(containerdata)
-	end
+	HandleOpenContainer(containerdata)
 end
 =

 function gPacketHandler.kPacket_Open_Paperdoll() -- 0x88

Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Thu Aug 30 21:17:18 2007
@@ -1,175 +1,252 @@
 -- handles dynamic items (lamps,doors,inventory,...)
-
--- called from kPacket_Show_Item
-function CreateOrUpdateDynamic	(newitem)
-	-- TODO : if (newitem.artid >=3D gMulti_ID +100) .. model is multi
+-- see also obj.container.lua
+
+-- NOTE : pre-knut old-trunk-dynamics were ONLY objects in world, =

+-- new/post-knut dynamics are containers, items inside container and mobil=
e equipment as well
+
+--[[
+dynamic.serial				=

+dynamic.artid	-- see ApplyArtidStackManipulation
+dynamic.artid_base			=

+dynamic.artid_addstack		=

+dynamic.amount				=

+dynamic.layer	-- only if dynamic is mobile equipment from kPacket_Equipped=
_MOB	 or from kPacket_Equip_Item	=

+dynamic.xloc				=

+dynamic.yloc				=

+dynamic.zloc	-- only nonzero if in world : kPacket_Show_Item				=

+dynamic.dir		-- only nonzero if in world : kPacket_Show_Item				=

+dynamic.iContainerSerial 	=

+dynamic.hue 				=

+dynamic.flag	-- only nonzero if in world : kPacket_Show_Item -- some kind =
of status or flags, usage unknown	=

+
+CreateOrUpdateDynamic(dynamicdata)
+]]--
+
+gDynamicPrototype =3D {}
+
+function GetDynamic (dynamic_or_serial) =

+	if (not dynamic_or_serial) then return nil end
+	if (type(dynamic_or_serial) =3D=3D "table") then return dynamic_or_serial=
 end
+	return gDynamics[dynamic_or_serial] -- look up by serial
+end
+
+
+-- constructor, don't call directly, use CreateOrUpdateDynamic() instead
+function InitializeDynamic	(serial)
+	assert(serial ~=3D 0)
+	=

+	-- create base object and register in mobile-list
+	local dynamic =3D InitializeObject(serial)
+	gDynamics[serial] =3D dynamic
+	=

+	-- install methods
+	ArrayOverwrite(dynamic,gContainerPrototype)
+	ArrayOverwrite(dynamic,gDynamicPrototype)
+	=

+	dynamic.content =3D {}
+	dynamic.isdynamic =3D true -- needed to identify type in 2d renderer and =
for asserts
+	dynamic.artid =3D 0		=

+	dynamic.artid_base =3D 0			=

+	dynamic.artid_addstack =3D 0		=

+	dynamic.amount =3D 0					=

+	dynamic.xloc =3D 0				=

+	dynamic.yloc =3D 0				=

+	dynamic.zloc =3D 0			=

+	dynamic.dir =3D 0				=

+	dynamic.iContainerSerial =3D 0 	=

+	dynamic.hue =3D 0 				=

+	dynamic.flag =3D 0
+	=

+	return dynamic
+end
+
+
+
+-- called from kPacket_Show_Item,kPacket_Object_to_Object,kPacket_Containe=
r_Contents
+-- mobile is only set if called from mobile:Update with equipmentdata , e.=
g. from kPacket_Equipped_MOB or kPacket_Equip_Item
+function CreateOrUpdateDynamic	(dynamicdata,mobile)
+	local dynamic =3D GetDynamic(dynamicdata.serial)
+	if (not dynamic) then dynamic =3D InitializeDynamic(dynamicdata.serial) e=
nd
+	dynamic:Update(dynamicdata,mobile)
+	return dynamic
+end
+
+
+-- see also CreateOrUpdateDynamic
+function gDynamicPrototype:Update (dynamicdata,mobile)
+	if (self.bDestructionInProgress) then return end -- avoid updates during =
destruction
+	--print("gDynamicPrototype:Update",self,self.serial,_TRACEBACK())
+	=

+	if (dynamicdata) then =

+		assert(not dynamicdata.artid,"this shouldn't be set from dynamicdata, re=
placed by artid_base") -- bugcheck
+		for k,v in pairs(dynamicdata) do self[k] =3D v end =

+	end
+	self:ApplyArtidStackManipulation()
+	=

+	=

+	-- TODO : corpse is spawned
+	if (dynamicdata and dynamicdata.artid_base =3D=3D hex2num("0x2006")) then
+		print("TODO: char died. sethue,setdirection,setascorpse")
+	end =

+	=

+	-- self is mobile equipment
+	local mobile =3D mobile or GetMobile(self.iContainerSerial)
+	if (mobile and mobile.ismobile)  then
+		-- kPacket_Equipped_MOB : =

+		-- dynamicdata.serial =

+		-- dynamicdata.artid
+		-- dynamicdata.layer
+		-- dynamicdata.hue
+		=

+		-- kPacket_Equip_Item : =

+		-- dynamicdata.serial  		=

+		-- dynamicdata.artid_base		=

+		-- dynamicdata.layer			=

+		-- dynamicdata.iContainerSerial -- mobile serial
+		-- dynamicdata.hue	=

+		=

+		self.iContainerSerial =3D mobile.serial
+		=

+		self.mobile =3D mobile 					-- TODO : knutmerge : should this be removed=
 ?
+		self.mobile_serial =3D mobile.serial		-- TODO : knutmerge : should this =
be removed ?
+		=

+		-- destroy old item on layer, if any
+		if (self.layer) then =

+			local old =3D mobile:GetEquipmentAtLayer(self.layer)
+			if (old and old ~=3D self) then old:Destroy() end
+		end
+		-- self:SetContainer(self.iContainerSerial) is called later and tiggers =
mobile:Update()
+	end
+	=

+	local bIsInWorld =3D self.iContainerSerial =3D=3D 0
+	-- i think bIsInWorld is only true if the object was initially created us=
ing kPacket_Show_Item
+	-- or is it possible for object_to_object/equip_item to set iContainerSer=
ial to zero ?
+
+	if (not bIsInWorld) then =

+		-- TODO : burn in gumpyoffset if dynamicdata contains position ?? =

+		-- self.yloc =3D self.yloc+self.gumpyoffset
+	end
+
+
+	-- TODO : if (self.artid >=3D gMulti_ID +100) .. model is multi
 	-- gMulti_ID =3D hex2num("0x4000")
-	-- TODO : check newitem.artid for boat
+	-- TODO : check self.artid for boat
 	=

 	if (gTileTypeLoader) then
-		local miFlags,miWeight,miQuality,miUnknown,miUnknown1,miQuantity,miAnimI=
D,miUnknown2,miHue,miUnknown3,miHeight,msName =3D gTileTypeLoader:GetStatic=
TileType(newitem.artid+32*512) -- add 0x00004000
-		newitem.z_typename =3D msName
-	end
-	=

-	printdebug("mobile","ShowItem "..vardump(newitem))
-	=

-	newitem.isdynamic =3D true -- needed to identify the dynamic in 2d render=
er
-	=

-	local bCreateNew =3D true
-	=

-	local olditem =3D GetDynamic(newitem.serial)
-	if (olditem) then
-		-- if only the position changed we can just update the old one
-		if (	newitem.artid =3D=3D olditem.artid and =

-				newitem.amount =3D=3D olditem.amount and =

-				newitem.flag =3D=3D olditem.flag and =

-				newitem.hue =3D=3D olditem.hue and =

-				newitem.dir =3D=3D olditem.dir and =

-				newitem.artid_addstack =3D=3D olditem.artid_addstack ) then
-			-- update old item
-			bCreateNew =3D false
-			olditem.xloc =3D newitem.xloc
-			olditem.yloc =3D newitem.yloc
-			olditem.zloc =3D newitem.zloc
-			newitem =3D olditem
-		else
-			gCurrentRenderer:RemoveDynamicItem( olditem )
-		end
-	end
-	=

-	if (bCreateNew) then gCurrentRenderer:AddDynamicItem( newitem ) end
-	=

-	gCurrentRenderer:UpdateDynamicItemPos(newitem)
-	gDynamics[newitem.serial] =3D newitem	=

-	gObjectList[newitem.serial] =3D newitem	 -- TODO : fix this like in mobile
-end
-
-
--- called from kPacket_Object_to_Object
-function ContainerObjectToObject	(item)
-	ApplyArtidStackManipulation(item)
-	RefreshContainerItem(item)
-end
-
--- called from kPacket_Container_Contents
-function ContainerSetContentItem	(item)
-	ApplyArtidStackManipulation(item)
-	RefreshContainerItem(item)
-	--printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_st=
ack=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,i=
tem.artid_addstack,item.amount)
-	--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticTi=
leTypeName(item.artid)))
-end
-
--- called from kPacket_Equip_Item
-function ContainerEquipItem(item,container_serial)
-	--print("NET : Equip_Item",vardump(item))
-	=

-	item.mobile_serial =3D container_serial
-	local mobile =3D GetMobile(item.mobile_serial)
-	if (mobile) then
-		item.mobile =3D mobile
-		if (mobile.equipment[item.layer]) then
-			DestroyMobileItem(mobile.equipment[item.layer])
-		end
-		mobile.equipment[item.layer] =3D item
-		gMobileItemsBySerial[item.serial] =3D item
-		--printf("NET : kPacket_Equip_Item mobile=3D0x%08x item=3D0x%08x\n",item=
.mobile_serial,item.serial)
-		mobile:Update()
-	else =

-		print("WARNING ! mobile update for unknown mobile received, update lost =
!")
-
-		-- don't crash on UOX3, Lonewolf (this servers sends unknown Equip messa=
ges)
-		if ((gServerType[gServerEmulator] ~=3D "Lonewolf") and (gServerType[gSer=
verEmulator] ~=3D "SpherePolUox3")) then
-			print("Crash Client here!"..gServerType[gServerEmulator])
-			Crash()
-		end
-
-		-- the client state would loose sync with server, this is fatal, =

-		-- but should never happen for correct server implementation ? (there ar=
e strange servers however...)
-		-- an alternative would be to create the mobile if unknown , something l=
ike GetOrCreateMobile like in net.container.lua
-	end
-end
-
--- called from kPacket_Open_Container
-function IsContainerAlreadyOpen (containerserial) =

-	local container =3D GetOrCreateContainer(containerdata.serial)
-	return container.dialog ~=3D nil
-end
-
-
--- called from kPacket_Open_Container
-function HandleOpenContainer	(containerdata)
-
-	local container =3D GetOrCreateContainer(containerdata.serial)
-	container.gumpid =3D containerdata.gumpid
-	=

-	-- 0x003c =3D backpack
-	-- 0x0030 =3D shopcontainer
-	--AddFadeLines(sprintf("Open_Container gumpid=3D%d",container.gumpid))
-	if (not container.dialog) then
-		-- create dialog from scratch
-		local dialog =3D guimaker.MakeSortedDialog()
-		container.dialog =3D dialog
-		dialog.uoContainer =3D container
-		dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
-		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
-		dialog.backpane.mbIgnoreMouseOver =3D false
-		dialog.backpane.onMouseDown =3D function (widget,mousebutton)
-										if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoCo=
ntainer.serial) end
-										if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.=
StartMoveDialog(widget.dialog.rootwidget) end
-									  end
-	end
-	RefreshContainerItemWidgets(container)
-
-	SecureTradeRebuildContainerHook(container)
-end
-
-
-
+		local miFlags,miWeight,miQuality,miUnknown,miUnknown1,miQuantity,miAnimI=
D,miUnknown2,miHue,miUnknown3,miHeight,msName =3D gTileTypeLoader:GetStatic=
TileType(self.artid+32*512) -- add 0x00004000
+		self.z_typename =3D msName
+	end
+	=

+	-- update container
+	self:SetContainer(self.iContainerSerial)
+	=

+	-- secure trade hook (new here since knut merge)
+	SecureTradeRebuildContainerHook(self)
+	=

+	-- update stuff if self is container
+	RefreshContainerItemWidgets(self)
+	=

+	self:NotifyListener("Dynamic_Update")
+	=

+	-- destroy old world gfx
+	if (self.bWorldGfxInitialised) then =

+		self.bWorldGfxInitialised =3D false
+		gCurrentRenderer:RemoveDynamicItem(self) =

+	end
+	=

+	-- only create WorldGfx if item IS IN WORLD (and not in inside a containe=
r, or being a container itself like shop stuff)
+	if (bIsInWorld) then =

+		self.bWorldGfxInitialised =3D true
+		gCurrentRenderer:AddDynamicItem(self) -- create new gfx
+		gCurrentRenderer:UpdateDynamicItemPos(self)
+	end
+end
+
+function gDynamicPrototype:UpdateContent () self:Update() end
+
+function gDynamicPrototype:Destroy	()
+	self.bDestructionInProgress =3D true
+	--print("gDynamicPrototype:Destroy",self,self.serial,_TRACEBACK())
+	if (self.bIsDead) then print("warning, double free dyamic") return end --=
 already destroyed before
+	self:NotifyListener("Dynamic_Destroy")
+	self:SetContainer(nil) -- calls self.mobile:Update() if self is equipment=
 item in mobile
+	=

+	-- paperdoll widgets (and maybe others?)
+	-- TODO : knutmerge : check me
+	if (self.widget) then self.widget:Destroy() self.widget =3D nil end
+	=

+	-- destroy old world gfx
+	if (self.bWorldGfxInitialised) then =

+		self.bWorldGfxInitialised =3D false
+		gCurrentRenderer:RemoveDynamicItem(self) =

+	end
+	=

+	gDynamics[self.serial] =3D nil
+	CleanupObject(self)
+end
+
+-- updates widgets automatically through old,new:UpdateContent() message
+function gDynamicPrototype:SetContainer	(newcontainer_or_serial)
+	newcontainer =3D GetContainer(newcontainer_or_serial)
+	if (self.container =3D=3D newcontainer) then return end
+	if (self.container) then self.container:RemoveContentObject(self) end -- =
remove from old
+	if (newcontainer) then newcontainer:AddContentObject(self) end -- add to =
new (sets self.container)
+end
+
+function gDynamicPrototype:NotifyListener	(eventname)
+	NotifyListener(eventname..self.serial,self)
+	NotifyListener(eventname,self)
+end
+
+-- only called from dynamic:Update
 -- TODO : Add sepearate FILTER : for several Clientside GFX manipulation (=
Game Pieces & Gold,Silver,...)
-function ApplyArtidStackManipulation (item)
-	item.baseartid =3D item.artid
+-- calculates artid from artid_base,artid_addstack and several special cas=
es (coins,chess pieces..)
+-- chess pieces etc have an y offset : self.yloc =3D self.yloc+self.gumpyo=
ffset, but don't change the original y here, =

+-- as this method is called for every update. also DON'T DO THIS FOR DYNAM=
ICS IN WORLD ! (offset 20 tiles is deadly)
+function gDynamicPrototype:ApplyArtidStackManipulation ()
 	local custom_artid =3D false
+	self.artid =3D self.artid_base
+	self.usegump =3D false
+	self.gumpyoffset =3D 0
 	=

 	-- from varan
 	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEE") custom_artid =3D true end
-	if (item.baseartid =3D=3D hex2num("0xEED") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEF") custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0xEED") and self.amount >=3D 2) then =
self.artid =3D hex2num("0xEEE") custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0xEED") and self.amount >=3D 6) then =
self.artid =3D hex2num("0xEEF") custom_artid =3D true end
 	-- gold
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEEB") custom_artid =3D true end
-	if (item.baseartid =3D=3D hex2num("0xEEA") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEEC") custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0xEEA") and self.amount >=3D 2) then =
self.artid =3D hex2num("0xEEB") custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0xEEA") and self.amount >=3D 6) then =
self.artid =3D hex2num("0xEEC") custom_artid =3D true end
 	-- Silver
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 2) then i=
tem.artid =3D hex2num("0xEF1") custom_artid =3D true end
-	if (item.baseartid =3D=3D hex2num("0xEF0") and item.amount >=3D 6) then i=
tem.artid =3D hex2num("0xEF2") custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0xEF0") and self.amount >=3D 2) then =
self.artid =3D hex2num("0xEF1") custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0xEF0") and self.amount >=3D 6) then =
self.artid =3D hex2num("0xEF2") custom_artid =3D true end
 	-- cannonball
-	if (item.baseartid =3D=3D hex2num("0xE73") and item.amount >=3D 4) then i=
tem.artid =3D hex2num("0xE74") custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0xE73") and self.amount >=3D 4) then =
self.artid =3D hex2num("0xE74") custom_artid =3D true end
 =

 	--TODO : if not in this list, and amount > 0 : draw the graphic 2 times
-	--for example: if (item.baseartid =3D=3D hex2num("0xE73") and item.amount=
 > 0) then item.artid =3D hex2num("0xE74") item.drawcount=3D2 end
+	--for example: if (self.artid_base =3D=3D hex2num("0xE73") and self.amoun=
t > 0) then self.artid =3D hex2num("0xE74") self.drawcount=3D2 end
 =

 	-- ART -> GUMP
 	-- white backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x3584")) then item.artid =3D hex2num(=
"0x91B") item.usegump=3Dtrue custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0x3584")) then self.artid =3D hex2num=
("0x91B") self.usegump=3Dtrue custom_artid =3D true end
 	-- brown backgammon game piece
-	if (item.baseartid =3D=3D hex2num("0x358b")) then item.artid =3D hex2num(=
"0x922") item.usegump=3Dtrue custom_artid =3D true end
+	if (self.artid_base =3D=3D hex2num("0x358b")) then self.artid =3D hex2num=
("0x922") self.usegump=3Dtrue custom_artid =3D true end
 	-- brown chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3590")) then item.artid =3D hex2num(=
"0x927") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x358d")) then item.artid =3D hex2num(=
"0x924") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x358f")) then item.artid =3D hex2num(=
"0x926") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x358c")) then item.artid =3D hex2num(=
"0x923") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x3591")) then item.artid =3D hex2num(=
"0x928") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x358e")) then item.artid =3D hex2num(=
"0x925") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
+	if (self.artid_base =3D=3D hex2num("0x3590")) then self.artid =3D hex2num=
("0x927") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x358d")) then self.artid =3D hex2num=
("0x924") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x358f")) then self.artid =3D hex2num=
("0x926") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x358c")) then self.artid =3D hex2num=
("0x923") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x3591")) then self.artid =3D hex2num=
("0x928") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x358e")) then self.artid =3D hex2num=
("0x925") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
 	-- white chess pieces
-	if (item.baseartid =3D=3D hex2num("0x3589")) then item.artid =3D hex2num(=
"0x920") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x3586")) then item.artid =3D hex2num(=
"0x91D") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x3588")) then item.artid =3D hex2num(=
"0x91F") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x3585")) then item.artid =3D hex2num(=
"0x91C") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x358a")) then item.artid =3D hex2num(=
"0x921") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-	if (item.baseartid =3D=3D hex2num("0x3587")) then item.artid =3D hex2num(=
"0x91E") item.yloc=3Ditem.yloc-20 item.usegump=3Dtrue custom_artid =3D true=
 end
-
-	if ((not custom_artid) and item.artid_addstack and item.amount > 1) then =

-		item.artid =3D item.artid + item.artid_addstack =

-		item.artid_addstack =3D 0 -- avoid bad errors if this function is applie=
d more than once
-	end
-	-- just for testing, remove me
-	--if (item.artid_addstack ~=3D 0) then print("unexpected item.artid_addst=
ack",item.artid_addstack) Crash() end
-end
+	if (self.artid_base =3D=3D hex2num("0x3589")) then self.artid =3D hex2num=
("0x920") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x3586")) then self.artid =3D hex2num=
("0x91D") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x3588")) then self.artid =3D hex2num=
("0x91F") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x3585")) then self.artid =3D hex2num=
("0x91C") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x358a")) then self.artid =3D hex2num=
("0x921") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+	if (self.artid_base =3D=3D hex2num("0x3587")) then self.artid =3D hex2num=
("0x91E") self.gumpyoffset =3D -20 self.usegump=3Dtrue custom_artid =3D tru=
e end
+
+	-- self.yloc =3D self.yloc+self.gumpyoffset =

+	if ((not custom_artid) and self.artid_addstack and self.amount > 1) then =

+		self.artid =3D self.artid + self.artid_addstack =

+	end
+end

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Thu Aug 30 21:17:18 2007
@@ -1,64 +1,64 @@
 dofile(libpath .. "obj/obj.mobile.lua")
 dofile(libpath .. "obj/obj.dynamic.lua")
-dofile(libpath .. "obj/obj.player.lua")
+dofile(libpath .. "obj/obj.player.lua")
+dofile(libpath .. "obj/obj.container.lua")
 =

 gObjectList =3D {}
 gDynamics =3D {}
 gMobiles =3D {}
-gMobileItemsBySerial =3D {} -- items equipped on mobiles TODO : killme !
 =

 function GetDynamic (serial) return gDynamics[serial] end
-function GetMobileEquipmentItem (mobile,layer) return mobile.equipment[lay=
er] end
-function GetMobileEquipmentList (mobile) return mobile.equipment end
-function GetContainerContentList (container) return container.items end
-function GetObjectBySerial (serial) return gMobileItemsBySerial[serial] or=
 GetMobile(serial) or gDynamics[serial] end
+function GetMobileEquipmentItem (mobile,layer) return mobile:GetEquipmentA=
tLayer(layer) end
+function GetMobileEquipmentList (mobile) return mobile:GetContent() end
+function GetContainerContentList (container) return container:GetContent()=
 end
+function GetObjectBySerial (serial) return GetObject(serial) end
+function GetObject (object_or_serial) =

+	if (not object_or_serial) then return nil end
+	if (type(object_or_serial) =3D=3D "table") then return object_or_serial e=
nd
+	return gObjectList[object_or_serial] -- look up by serial
+end
 =

-function DynamicIsInWorld (dynamic) return not dynamic.container end  -- T=
ODO : spelling of container correct ???
+function DynamicIsInWorld (dynamic) return not dynamic.container end  -- d=
oes not have parent container
 =

 function GetDynamicList	() return gDynamics end
 function GetMobileList	() return gMobiles end
 =

--- temporary knut merge wrappers for syncing, naming will be fixed as the =
merge progresses
-function KNUTMERGETEMP_CREATE_EMPTY_OBJECT	(serial) =

-	local newitem =3D {serial=3Dserial} =

-	gObjectList[serial] =3D newitem
-	return newitem
-end
-function KNUTMERGETEMP_CREATE_EMPTY_ITEM	(serial) return KNUTMERGETEMP_CRE=
ATE_EMPTY_OBJECT(serial) end
-
-function DestroyDynamicItemBySerial (serial) =

-	local dynamic =3D GetDynamic(serial)
-	if (dynamic) then
-		gCurrentRenderer:RemoveDynamicItem( dynamic )
-		gDynamics[dynamic.serial] =3D nil
-	end
+function InitializeObject	(serial) =

+	local object =3D {serial=3Dserial} =

+	gObjectList[serial] =3D object
+	return object
 end
 =

+
+
+-- don't call directly, called from object:Destroy()
+function CleanupObject	(object)
+	local serial =3D object.serial
+	=

+	CloseContainer(serial)
+	object:DestroyContent()
+	=

+	-- TODO : knutmerge : check which of these is obsolete
+	DestroyPaperdollByMobileSerial(serial)
+	DestroyDragDropItemBySerial(serial)
+	gCurrentRenderer:DestroyMousePickItemBySerial(serial)
+	=

+	gObjectList[object.serial] =3D nil =

+	--object.serial =3D nil -- seems to cause a lot of trouble, e.g. dragdrop
+	object.bIsDead =3D true
+end
+
+
+
 function DestroyObjectBySerial (serial) =

-	-- destroy items in containers
-	DestroyContainerItemBySerial(serial)
-	-- destroy items in mobiles
-	DestroyMobileItemBySerial(serial)
-	-- destroy dynamics
-	DestroyDynamicItemBySerial(serial)
-	-- destroy mobiles (npcs, monsters,...)
-	Mobile_Destroy(serial)
-	DestroyPaperdollByMobileSerial(serial)
-	-- TODO : destroy container
-	gCurrentRenderer:DestroyMousePickItemBySerial(serial)
-	DestroyDragDropItemBySerial(serial)
+	local object =3D GetObject(serial)
+	if (object) then object:Destroy() end
 end
 =

 -- needed for mapchange
 function DestroyAllObjects () =

 	CancelUODragDrop()
-	for serial,v in pairs(gContainer) do 			CloseContainer(serial) end
-	for serial,v in pairs(gMobileItemsBySerial) do 	DestroyMobileItemBySerial=
(serial) end
-	for serial,v in pairs(GetMobileList()) do 		Mobile_Destroy(serial) end
-	for serial,v in pairs(GetDynamicList()) do 		DestroyDynamicItemBySerial(s=
erial) end
-	for serial,v in pairs(gPaperdolls) do 			DestroyPaperdollByMobileSerial(s=
erial) end
-	-- TODO : gCurrentRenderer:DestroyMousePickItemBySerial(serial)
-	-- TODO : DestroyDragDropItemBySerial ?? done by CancelUODragDrop
+	for k,object in pairs(gObjectList) do object:Destroy() end
 end
 =

 =


Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Thu Aug 30 21:17:18 2007
@@ -16,8 +16,8 @@
 mobile.amount	-- only kPacket_Equipped_MOB, corpse related ?
 mobile.dir2		-- only kPacket_Equipped_MOB, unknown
 =

-Mobile_GetEquipmentList 	(mobile_or_serial)
-Mobile_NotifyListener		(mobile_or_serial,eventname)
+CreateOrUpdateMobile (mobiledata,equipmentdata)
+
 Mobile_Update 				(mobile_or_serial,mobiledata,equipmentdata)
 Mobile_UpdateFlags			(mobile_or_serial)
 Mobile_UpdateStats 			(mobile_or_serial,stats)
@@ -28,22 +28,27 @@
 Mobile_Destroy				(mobile_or_serial)
 Mobile_DisplayTextOverHead	(mobile_or_serial,message,r,g,b)
 =

-each of those is also available as method you can call like mobile:(...) w=
ithout the first param
+each of those is also available as method you can call like mobile:(...) w=
ithout the first param and without the Mobile_
 ]]--
 =

 =

 gMobilePrototype =3D {}
-gbMobileMethodWrappersInitialised =3D false
+gbMobileMethodWrappersInitialized =3D false
 =

 function GetMobile (mobile_or_serial) =

+	if (not mobile_or_serial) then return nil end
 	if (type(mobile_or_serial) =3D=3D "table") then return mobile_or_serial e=
nd
 	return gMobiles[mobile_or_serial] -- look up by serial
 end
 =

-function KNUTMERGETEMP_CREATE_EMPTY_MOBILE	(serial)
+
+-- constructor, don't call directly, use CreateOrUpdateMobile() instead
+function InitializeMobile	(serial)
+	assert(serial ~=3D 0)
+	=

 	-- create method wrapppers, e.g. Mobile_UpdateFlags(serial) calls mobile:=
UpdateFlags()
-	if (not gbMobileMethodWrappersInitialised) then =

-		gbMobileMethodWrappersInitialised =3D true
+	if (not gbMobileMethodWrappersInitialized) then =

+		gbMobileMethodWrappersInitialized =3D true
 		for method_name,method_impl in pairs(gMobilePrototype) do
 			local mymethod_impl =3D method_impl
 			_G["Mobile_"..method_name] =3D function (mobile_or_serial,...)
@@ -54,23 +59,29 @@
 	end
 	=

 	-- create base object and register in mobile-list
-	local newmobile =3D KNUTMERGETEMP_CREATE_EMPTY_OBJECT(serial)
-	gMobiles[serial] =3D newmobile
-	=

-	-- install methods and call constructor
-	ArrayOverwrite(newmobile,gMobilePrototype)
-	newmobile:Construct()
-	=

-	return newmobile
-end
-
-
--- constructor, don't call directly, use CreateOrUpdateMobile() instead
-function gMobilePrototype:Construct () =

-	self.equipment =3D {} -- TODO : rename to content to share code with cont=
ainer stuff ??
-	self.ismobile =3D true -- needed to identify the mobile in 2d renderer --=
 TODO : is this obsolete since knut ?
-	self.flag =3D 0
-	self:UpdateFlags()
+	local mobile =3D InitializeObject(serial)
+	gMobiles[serial] =3D mobile
+	=

+	-- install methods
+	ArrayOverwrite(mobile,gContainerPrototype)
+	ArrayOverwrite(mobile,gMobilePrototype)
+	=

+	mobile.content =3D {}
+	mobile.stats =3D {}
+	mobile.serial =3D 0		=

+	mobile.artid =3D 0		=

+	mobile.xloc =3D 0
+	mobile.yloc =3D 0
+	mobile.zloc =3D 0		=

+	mobile.dir =3D 0			=

+	mobile.hue =3D 0			=

+	mobile.flag =3D 0			=

+	mobile.notoriety =3D 0	=

+	mobile.amount =3D 0
+	mobile.ismobile =3D true -- needed to identify type in 2d renderer and fo=
r asserts
+	mobile:UpdateFlags()
+	=

+	return mobile
 end
 =

 =

@@ -78,16 +89,15 @@
 -- called from kPacket_Naked_MOB kPacket_Equipped_MOB kPacket_Teleport
 function CreateOrUpdateMobile (mobiledata,equipmentdata)
 	local mobile =3D GetMobile(mobiledata.serial)
-	if (not mobile) then mobile =3D KNUTMERGETEMP_CREATE_EMPTY_MOBILE(mobiled=
ata.serial) end
+	if (not mobile) then mobile =3D InitializeMobile(mobiledata.serial) end
 	mobile:Update(mobiledata,equipmentdata)
 	return mobile
 end
 =

 =

-function gMobilePrototype:GetEquipmentList () return self.equipment end
-
 function gMobilePrototype:NotifyListener	(eventname)
 	NotifyListener(eventname..self.serial,self)
+	NotifyListener(eventname,self)
 end
 =

 =

@@ -97,33 +107,29 @@
 =

 =

 =

+
+function gMobilePrototype:UpdateContent () self:Update() end
 =

 =

 -- updates mobile status, and the position of the graphical representation=
 and other things
 function gMobilePrototype:Update (mobiledata,equipmentdata)
-	if (mobiledata) then
-		for k,v in pairs(mobiledata) do self[k] =3D v end
-	end
+	if (self.bDestructionInProgress) then return end -- avoid updates during =
destruction
+	if (mobiledata) then for k,v in pairs(mobiledata) do self[k] =3D v end end
 	self:UpdateFlags()
 	=

-	=

-	-- create empty stats if there is not stats table
-	self.stats =3D self.stats or {} -- TODO : needs to be adjusted for knut m=
erge ?
-	=

 	-- request basic stats info
-	if (not self.state_request_sent) then  =

-			self.state_request_sent =3D true
+	if (not self.stat_request_sent) then  =

+			self.stat_request_sent =3D true
 		Send_ClientQuery(gRequest_States,self.serial)
 	end
 	=

-	-- TODO : needs to be adjusted for knut merge ?
 	-- update life stats in gui elements
 	if (self.stats.curHits and self.stats.maxHits) then
 		if (self.serial =3D=3D gPlayerBodySerial) then
 			-- for player
 			gui.SetHitpoints(self.stats.curHits/self.stats.maxHits)
-			if (self.stats.curMana) then gui.SetMana(self.stats.curMana/self.stats.=
maxMana) end
-			if (self.stats.curStamina) then gui.SetStamina(self.stats.curStamina/se=
lf.stats.maxStamina) end
+			if (self.stats.curMana)		then gui.SetMana(	self.stats.curMana		/self.st=
ats.maxMana		) end
+			if (self.stats.curStamina)	then gui.SetStamina(self.stats.curStamina	/s=
elf.stats.maxStamina	) end
 			-- update big_stats window
 			UpdateStatusAos()
 		else
@@ -132,34 +138,26 @@
 		end
 	end
 	=

-	-- TODO : needs to be adjusted for knut merge ?
+	-- full equipment overwrite
 	if (equipmentdata) then
-		self.equipment =3D {} -- todo : knut merge : KILL old equipment items ???
-
-		for layer,itemdata in pairs(equipmentdata) do
-			local item =3D KNUTMERGETEMP_CREATE_EMPTY_ITEM(itemdata.serial) -- dyna=
mic ? =

-			=

-			for k,v in pairs(itemdata) do item[k] =3D v end
-			-- item.serial
-			-- item.artid
-			-- item.layer
-			-- item.hue
-			=

-			item.mobile =3D self
-			item.mobile_serial =3D self.serial
-			self.equipment[item.layer] =3D item
-			gMobileItemsBySerial[item.serial] =3D item -- TODO : obsoleted by knut =
merge ??
+		self:DestroyContent() -- destroy old equipment items
+
+		for layer,dynamicdata in pairs(equipmentdata) do
+			CreateOrUpdateDynamic(dynamicdata,self)
 		end
 	end
 	=

 	-- if something related to equipment might have changed =

+	-- this can also have happened if equipmentdata=3Dnil, e.g. when an equip=
ment item was destroyed directly
+	-- maybe only in UpdateContent and/or if equipmentdata is set ?
 	if (true) then
-		if (self.serial =3D=3D gPlayerBodySerial and self.equipment) then Player=
EquipmentUpdated() end
+		if (self.serial =3D=3D gPlayerBodySerial) then PlayerEquipmentUpdated() =
end
 		local paperdoll =3D gPaperdolls[self.serial]
 		if (paperdoll) then RebuildPaperdoll(paperdoll) end
 		=

-		-- TODO : does check for changes, but still a little expensive, only cal=
l if neccessary
+		-- TODO : UpdateMobileModel does check for changes, but still a little e=
xpensive, only call if neccessary ?
 		if (gCurrentRenderer =3D=3D Renderer3D) then UpdateMobileModel(self) end =

+		if (gCurrentRenderer =3D=3D Renderer2D) then assert(false,"FIXME?") gCur=
rentRenderer:UpdateMobileEquipment(self) end
 	end
 		=

 	self:NotifyListener("Mobile_Update")
@@ -194,7 +192,7 @@
 	self:NotifyListener("Mobile_UpdateStats")
 	-- not needed due to normal damage packet
 	-- TODO is this ok for every server?
-	-- gCurrentRenderer:NotifyHPChange(mobileserial, oldhp, mobile.stats.curH=
its)
+	-- gCurrentRenderer:NotifyHPChange(self.serial, oldhp, mobile.stats.curHi=
ts)
 	self:Update()
 end
 =

@@ -211,7 +209,7 @@
 		self.stats.curHits =3D curvalue
 		self.stats.maxHits =3D maxvalue
 =

-		self:NotifyListener("Mobile_UpdateHealth")
+		self:NotifyListener("Mobile_UpdateStats")
 		self:Update()
 	end
 end
@@ -229,7 +227,7 @@
 			UpdateStatusAos()
 		end
 =

-		self:NotifyListener("Mobile_UpdateMana")
+		self:NotifyListener("Mobile_UpdateStats")
 		self:Update()
 	end
 end
@@ -247,7 +245,7 @@
 			UpdateStatusAos()
 		end
 =

-		self:NotifyListener("Mobile_UpdateStamina")
+		self:NotifyListener("Mobile_UpdateStats")
 		self:Update()
 	end
 end
@@ -279,43 +277,29 @@
 =

 =

 function gMobilePrototype:Destroy ()
-	-- clean up equipment  -- TODO : has to be adjusted for knut merge
-	for k,item in pairs(self:GetEquipmentList()) do DestroyMobileItem(item) e=
nd
-	=

+	self.bDestructionInProgress =3D true
+	if (self.bIsDead) then print("warning, double free mobile") return end --=
 already destroyed before
 	self:NotifyListener("Mobile_Destroy")
-	=

-	gCurrentRenderer:RemoveMobile( self )
 	=

 	-- destroy Status Gump from NPC
 	CloseStatus(self)
 	=

-	gObjectList[self.serial] =3D nil =

+	self:DestroyContent() -- warning, triggers self:Update()
+	=

+	gCurrentRenderer:RemoveMobile( self )
+	=

 	gMobiles[self.serial] =3D nil
-	self.serial =3D nil
-end
-
--- note : modifying existing elements and removing from a lua table while =
iterating is save, only inserting is dangerous
-function DestroyMobileItemBySerial (serial) =

-	local item =3D gMobileItemsBySerial[serial]
-	if (item) then DestroyMobileItem(item) end
-end
-
-
--- TODO : has to be adjusted for knut merge
-function DestroyMobileItem (item) =

-	item.mobile.equipment[item.layer] =3D nil
-	gMobileItemsBySerial[item.serial] =3D nil
-	if (item.widget) then item.widget:Destroy()  item.widget =3D nil end -- p=
aperdoll widgets
-	item.mobile:Update() =

-end
-
-
+	CleanupObject(self)
+end
 =

 =

 =

 -- ##### ##### ##### ##### ##### the rest =

 =

 =

+function gMobilePrototype:GetEquipmentAtLayer(layer)
+	for k,dynamic in pairs(self:GetContent()) do if (dynamic.layer =3D=3D lay=
er) then return dynamic end end
+end
 =

 =

 =

@@ -335,23 +319,6 @@
 	gCurrentRenderer:MobileStartServerSideAnim(animdata)
 end
 =

-
--- called from kPacket_Open_Paperdoll
-function HandleOpenPaperdoll	(paperdoll)
-	paperdoll.mobileserial	=3D paperdoll.serial
-	paperdoll.Close =3D ClosePaperdoll
-	=

-	-- close old paperdoll
-	local oldpaperdoll =3D gPaperdolls[paperdoll.mobileserial]
-	if (oldpaperdoll) then oldpaperdoll:Close() end =

-	=

-	-- register paperdoll
-	gPaperdolls[paperdoll.mobileserial] =3D paperdoll
-	=

-	--AddFadeLines("Open Paperdoll for ["..(paperdoll.mobileserial).."] "..(p=
aperdoll.name or ""))
-	=

-	RebuildPaperdoll(paperdoll)
-end
 =

 =

 =

@@ -398,26 +365,3 @@
 	if (n =3D=3D  7) then return 1.0 , 0.0 , 1.0 end -- 7 =3D unknown use (tr=
anslucent (like 0x4000 hue)) =

 	return 0.5,0.5,0.5
 end
-
-
--- Fighting - Swing [0x2F] 10bytes
--- TODO : handle animation
--- TODO : is this packet actually used ?
-function gPacketHandler.kPacket_Swing()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local unknown1 =3D input:PopNetUint8()
-	local attacker_serial =3D input:PopNetUint32()
-	local defender_serial =3D input:PopNetUint32()
-	printf("NET: Swing Attack Animation, attacker=3D0x%08x defender=3D0x%08x\=
n",attacker_serial,defender_serial)
-end
-
--- TODO : what is the result of this packet?
---BYTE cmd =

---BYTE action (2=3Dghost, 1=3Dresurrect, 0=3Dfrom server)
-function gPacketHandler.kPacket_Death()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local action =3D input:PopNetUint8()
-	print("NET: Server sends, that player is now (2=3Dghost, 1=3Dresurrect, 0=
=3Dfrom server)=3D"..action)
-end

Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Thu Aug 30 21:17:18 2007
@@ -23,7 +23,6 @@
 		if ((not gPlayerBackPack) or (gPlayerBackPack.serial ~=3D backpack.seria=
l)) then
 			-- backpack item changed
 			gPlayerBackPack =3D backpack
-			-- RegisterStepper(function ()  return true end) -- only performs one s=
tep
 		end
 	-- else TODO : maybe check if backpack was removed ? must look if playeri=
d is available so far
 	end
@@ -50,16 +49,14 @@
 end
 =

 function GetPlayerBackPackItem ()
-	local res =3D nil
 	local playermobile =3D GetPlayerMobile()
-	if (playermobile) then res =3D playermobile.equipment and playermobile.eq=
uipment[kLayer_Backpack] end
-	return res
+	if (playermobile) then return GetMobileEquipmentItem(playermobile,kLayer_=
Backpack) end
 end
 =

 -- only available some time after login, see PlayerEquipmentUpdated()
 function TogglePlayerBackpack ()
 	if (gPlayerBackPack) then
-		if (IsContainerOpen(gPlayerBackPack.serial)) then
+		if (IsContainerAlreadyOpen(gPlayerBackPack)) then
 			-- close backpack
 			CloseContainer(gPlayerBackPack.serial)
 		else
@@ -111,13 +108,13 @@
 	=

 	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
 =

-	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XLoc: =
%i YLoc: %i ZLoc: %i Dir: [%s]\n",
-			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gPlaye=
rDir or 0] or ""))
+--~ 	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XL=
oc: %i YLoc: %i ZLoc: %i Dir: [%s]\n",
+--~ 			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gP=
layerDir or 0] or ""))
 	=

 	-- TODO : (Check if char is in Boat!)
 =

-	printdebug("login",sprintf("NET: Draw_Player: mobiledata.serial: %i body:=
 %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
-			mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yloc, =
mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
+--~ 	printdebug("login",sprintf("NET: Draw_Player: mobiledata.serial: %i b=
ody: %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
+--~ 			mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yl=
oc, mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
 =

 	-- Check if Player is already on Teleported Pos
 	if (gPlayerXLoc ~=3D mobiledata.xloc or gPlayerYLoc ~=3D mobiledata.yloc =
or



From no-reply at zwischenwelt.org  Fri Aug 31 01:21:54 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 30 Aug 2007 23:21:54 -0000
Subject: [Iris-commit] [IRIS] r1367 - in /trunk/data/lua: lib.debugmenu.lua
 obj/obj.container.lua obj/obj.dynamic.lua obj/obj.main.lua
 obj/obj.player.lua
Message-ID: <20070830232159.7453C1524003@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Aug 31 01:21:54 2007
New Revision: 1367

Log:
merge complete :)

Modified:
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/obj/obj.container.lua
    trunk/data/lua/obj/obj.dynamic.lua
    trunk/data/lua/obj/obj.main.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Fri Aug 31 01:21:54 2007
@@ -16,12 +16,11 @@
 gDebugMenuModelIndex =3D 1
 gDebugMenuMainGfxPos =3D {-0.5,0.5,-0.15}
 =

--- TODO : might have to be adjusted for knut merge
 function RepairEquipIndex (arr) =

-	for k,item in pairs(arr) do =

+	for k,v in pairs(arr) do =

 		local layer =3D GetPaperdollLayerFromTileType(v.artid)
 		if (not layer) then print("could't get layer for artid ",v.artid) end
-		item.layer =3D layer or (1000 + k)
+		v.layer =3D layer or (1000 + k)
 	end
 end
 =


Modified: trunk/data/lua/obj/obj.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.container.lua (original)
+++ trunk/data/lua/obj/obj.container.lua Fri Aug 31 01:21:54 2007
@@ -36,7 +36,6 @@
 =

 =

 -- called from kPacket_Equip_Item
--- TODO : knutmerge : fix/adjust/check me
 function HandleEquipItem	(dynamicdata)
 	local mobile =3D GetMobile(dynamicdata.iContainerSerial)
 	if (not mobile) then =


Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Fri Aug 31 01:21:54 2007
@@ -107,8 +107,8 @@
 		=

 		self.iContainerSerial =3D mobile.serial
 		=

-		self.mobile =3D mobile 					-- TODO : knutmerge : should this be removed=
 ?
-		self.mobile_serial =3D mobile.serial		-- TODO : knutmerge : should this =
be removed ?
+		self.mobile =3D mobile 				=

+		self.mobile_serial =3D mobile.serial	=

 		=

 		-- destroy old item on layer, if any
 		if (self.layer) then =

@@ -140,7 +140,7 @@
 	-- update container
 	self:SetContainer(self.iContainerSerial)
 	=

-	-- secure trade hook (new here since knut merge)
+	-- secure trade hook
 	SecureTradeRebuildContainerHook(self)
 	=

 	-- update stuff if self is container
@@ -171,8 +171,7 @@
 	self:NotifyListener("Dynamic_Destroy")
 	self:SetContainer(nil) -- calls self.mobile:Update() if self is equipment=
 item in mobile
 	=

-	-- paperdoll widgets (and maybe others?)
-	-- TODO : knutmerge : check me
+	-- paperdoll widgets (and maybe container content things)
 	if (self.widget) then self.widget:Destroy() self.widget =3D nil end
 	=

 	-- destroy old world gfx

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Fri Aug 31 01:21:54 2007
@@ -38,13 +38,12 @@
 	CloseContainer(serial)
 	object:DestroyContent()
 	=

-	-- TODO : knutmerge : check which of these is obsolete
 	DestroyPaperdollByMobileSerial(serial)
 	DestroyDragDropItemBySerial(serial)
 	gCurrentRenderer:DestroyMousePickItemBySerial(serial)
 	=

 	gObjectList[object.serial] =3D nil =

-	--object.serial =3D nil -- seems to cause a lot of trouble, e.g. dragdrop
+	--object.serial =3D nil -- seems to cause a lot of trouble if set to nil,=
 e.g. dragdrop
 	object.bIsDead =3D true
 end
 =


Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Fri Aug 31 01:21:54 2007
@@ -97,7 +97,6 @@
 	--mobiledata.teleport_unknown2	=

 	--mobiledata.dir 					=

 	--mobiledata.zloc
-	-- TODO : knutmerge ??  : local mobile =3D CreateOrUpdateMobile(mobiledat=
a)	=

 	=

 	local bPlayerRunning =3D TestBit(mobiledata.dir,kWalkFlag_Run)
 	local fullplayerdir =3D mobiledata.dir



From no-reply at zwischenwelt.org  Fri Aug 31 01:24:01 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 30 Aug 2007 23:24:01 -0000
Subject: [Iris-commit] [IRIS] r1368 - /trunk/data/lua/obj/obj.main.lua
Message-ID: <20070830232401.E02FF1524003@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Aug 31 01:24:01 2007
New Revision: 1368

Log:
forgot one line

Modified:
    trunk/data/lua/obj/obj.main.lua

Modified: trunk/data/lua/obj/obj.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.main.lua (original)
+++ trunk/data/lua/obj/obj.main.lua Fri Aug 31 01:24:01 2007
@@ -7,7 +7,6 @@
 gDynamics =3D {}
 gMobiles =3D {}
 =

-function GetDynamic (serial) return gDynamics[serial] end
 function GetMobileEquipmentItem (mobile,layer) return mobile:GetEquipmentA=
tLayer(layer) end
 function GetMobileEquipmentList (mobile) return mobile:GetContent() end
 function GetContainerContentList (container) return container:GetContent()=
 end



From no-reply at zwischenwelt.org  Fri Aug 31 01:25:07 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 30 Aug 2007 23:25:07 -0000
Subject: [Iris-commit] [IRIS] r1369 -
	/branches/knut_merge_complete_ghoulsblade_31_08_2007/
Message-ID: <20070830232507.C3B541524003@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Aug 31 01:25:06 2007
New Revision: 1369

Log:
backup


Added:
    branches/knut_merge_complete_ghoulsblade_31_08_2007/
      - copied from r1368, trunk/



From no-reply at zwischenwelt.org  Fri Aug 31 13:09:41 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 31 Aug 2007 11:09:41 -0000
Subject: [Iris-commit] [IRIS] r1370 -
 /branches/knut_merge_complete_ghoulsblade_31_08_2007/
 /tags/knut_merge_complete_ghoulsblade_31_08_2007/
Message-ID: <20070831110941.112811C18159@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Aug 31 13:09:40 2007
New Revision: 1370

Log:
should be in tags

Added:
    tags/knut_merge_complete_ghoulsblade_31_08_2007/
      - copied from r1369, branches/knut_merge_complete_ghoulsblade_31_08_2=
007/
Removed:
    branches/knut_merge_complete_ghoulsblade_31_08_2007/



From no-reply at zwischenwelt.org  Fri Aug 31 13:11:47 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 31 Aug 2007 11:11:47 -0000
Subject: [Iris-commit] [IRIS] r1371 - /branches/porting_to_eihort/
Message-ID: <20070831111147.CEE9B1C18159@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Aug 31 13:11:47 2007
New Revision: 1371

Log:
obsolete =



Removed:
    branches/porting_to_eihort/



From no-reply at zwischenwelt.org  Fri Aug 31 21:42:48 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 31 Aug 2007 19:42:48 -0000
Subject: [Iris-commit] [IRIS] r1372 - in /trunk/bin: OgreMain.dll
 Plugin_CgProgramManager.dll Plugin_OctreeSceneManager.dll
 Plugin_ParticleFX.dll RenderSystem_Direct3D9.dll RenderSystem_GL.dll
 iris2.exe
Message-ID: <20070831200002.B29391C18159@zwischenwelt.org>

Author: sience
Date: Fri Aug 31 21:42:47 2007
New Revision: 1372

Log:
-new executable
-update to Ogre 1.4.4

Modified:
    trunk/bin/OgreMain.dll
    trunk/bin/Plugin_CgProgramManager.dll
    trunk/bin/Plugin_OctreeSceneManager.dll
    trunk/bin/Plugin_ParticleFX.dll
    trunk/bin/RenderSystem_Direct3D9.dll
    trunk/bin/RenderSystem_GL.dll
    trunk/bin/iris2.exe

Modified: trunk/bin/OgreMain.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_CgProgramManager.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_OctreeSceneManager.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_ParticleFX.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_Direct3D9.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_GL.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Fri Aug 24 19:51:01 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 24 Aug 2007 17:51:01 -0000
Subject: [Iris-commit] [IRIS] r1359 - /trunk/data/meshtextureusage.lua
Message-ID: <20070824175115.AD8451C182C3@zwischenwelt.org>

Author: sience
Date: Fri Aug 24 19:51:13 2007
New Revision: 1359

Log:
-new version

Modified:
    trunk/data/meshtextureusage.lua

Modified: trunk/data/meshtextureusage.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/meshtextureusage.lua (original)
+++ trunk/data/meshtextureusage.lua Fri Aug 24 19:51:13 2007
@@ -1,2582 +1,2567 @@
-gDevToolTexCache =3D {
-uo_art_19776=3D{3392},
-uo_art_21782=3D{5398},
-uo_art_21494=3D{5110},
-uo_art_21325=3D{4941},
-uo_art_23946=3D{7562},
-uo_art_20026=3D{3642},
-uo_art_24427=3D{8043},
-uo_art_21270=3D{4886},
-uo_art_20521=3D{4137},
-uo_art_21288=3D{4904},
-tex_549=3D{4802},
-tex_114=3D{26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,12583},
-tex_458=3D{1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,177=
7,1778,1779,1780},
-uo_art_20103=3D{3719},
-uo_art_19597=3D{3213},
-uo_art_19945=3D{3561},
-uo_art_23790=3D{7406},
-uo_art_21442=3D{5058},
-uo_art_19645=3D{3261},
-tex_388=3D{2795},
-tex_90=3D{314,315},
-uo_art_25211=3D{8827},
-uo_art_20005=3D{3621},
-uo_art_20404=3D{4020},
-uo_art_18875=3D{2491},
-uo_art_29361=3D{12977},
-tex_172=3D{2979,2980},
-tex_433=3D{4308,4309},
-uo_art_23791=3D{7407},
-uo_art_21508=3D{5124},
-uo_art_21816=3D{5432},
-uo_art_30501=3D{14117},
-tex_493=3D{6013,6014,6015,6016,6017},
-uo_art_20023=3D{3639},
-uo_art_19998=3D{3614},
-uo_art_21440=3D{5056},
-uo_art_20248=3D{3864},
-uo_art_26220=3D{9836},
-uo_art_23171=3D{6787},
-uo_art_17746=3D{1362},
-uo_art_22407=3D{6023},
-uo_art_25718=3D{9334},
-uo_art_21472=3D{5088},
-uo_art_23517=3D{7133},
-uo_art_20706=3D{4322},
-uo_art_26534=3D{10150},
-tex_214=3D{1276,1277,1278,1279,1407,1408,1409,1410,1411,1412,1413},
-uo_art_21255=3D{4871},
-tex_254=3D{2255,2260,2347,2352,2357,2359,2360,2361,2362,2363,2364,2371,237=
3,2374,2375,2376,2377,2378},
-tex_533=3D{2684,2690},
-tex_451=3D{5396},
-uo_art_20537=3D{4153},
-uo_art_24378=3D{7994},
-uo_art_23323=3D{6939},
-uo_art_20515=3D{4131},
-uo_art_30394=3D{14010},
-uo_art_24480=3D{8096},
-uo_art_20355=3D{3971},
-uo_art_22126=3D{5742},
-uo_art_19598=3D{3214},
-uo_art_24036=3D{7652},
-uo_art_21758=3D{5374},
-uo_art_23495=3D{7111},
-uo_art_24479=3D{8095},
-uo_art_20526=3D{4142},
-uo_art_21305=3D{4921},
-uo_art_24407=3D{8023},
-uo_art_20175=3D{3791},
-uo_art_19719=3D{3335},
-uo_art_21507=3D{5123},
-tex_366=3D{3818},
-tex_542=3D{5367,5369},
-uo_art_24050=3D{7666},
-tex_77=3D{429,430,431,432},
-uo_art_24426=3D{8042},
-tex_185=3D{1360,1368,1370,1371,1392,1393,1394,1395,1396,1397,1398,1399,140=
0,1519,1581,1628,1629},
-uo_art_26672=3D{10288},
-tex_496=3D{4963,4964,4965,4966,4967,4968,4969,4970,4971,4972,4973},
-uo_art_21813=3D{5429},
-uo_art_24326=3D{7942},
-uo_art_24397=3D{8013},
-uo_art_21449=3D{5065},
-uo_art_26250=3D{9866},
-tex_357=3D{2754,2755,2756,2757},
-uo_art_23259=3D{6875},
-uo_art_26605=3D{10221},
-uo_art_21566=3D{5182},
-uo_art_22288=3D{5904},
-uo_art_21807=3D{5423},
-uo_art_25188=3D{8804},
-tex_381=3D{4191,4193,4195,4197},
-tex_320=3D{6140,6143,6145,6148},
-uo_art_22310=3D{5926},
-uo_art_21251=3D{4867},
-uo_art_20511=3D{4127},
-uo_art_19119=3D{2735},
-uo_art_19626=3D{3242},
-tex_125=3D{3077,3078,3079,3080},
-uo_art_23258=3D{6874},
-uo_art_21113=3D{4729},
-uo_art_23256=3D{6872},
-uo_art_20261=3D{3877},
-uo_art_23410=3D{7026},
-uo_art_20427=3D{4043},
-uo_art_26606=3D{10222},
-uo_art_23511=3D{7127},
-uo_art_19575=3D{3191},
-uo_art_32025=3D{15641},
-uo_art_26186=3D{9802},
-uo_art_23783=3D{7399},
-uo_art_25154=3D{8770},
-uo_art_20223=3D{3839},
-uo_art_21824=3D{5440},
-uo_art_21446=3D{5062},
-uo_art_21239=3D{4855},
-uo_art_20232=3D{3848},
-tex_113=3D{45,46,47,48,49,50},
-tex_571=3D{1838,1839,1840,1841,1842,1843,1844,1845},
-uo_art_21322=3D{4938},
-uo_art_18910=3D{2526},
-uo_art_19522=3D{3138},
-uo_art_23193=3D{6809},
-tex_126=3D{3075,3076},
-uo_art_19902=3D{3518},
-uo_art_23505=3D{7121},
-uo_art_21254=3D{4870},
-uo_art_21530=3D{5146},
-uo_art_20194=3D{3810},
-uo_art_26309=3D{9925},
-uo_art_24811=3D{8427},
-uo_art_18894=3D{2510},
-uo_art_20072=3D{3688},
-uo_art_25968=3D{9584},
-tex_476=3D{2599,2601,2845,2846,2847,2854,2855,2856},
-uo_art_32023=3D{15639},
-uo_art_23510=3D{7126},
-uo_art_23781=3D{7397},
-tex_495=3D{1545,1546},
-uo_art_30572=3D{14188},
-uo_art_21108=3D{4724},
-uo_art_18872=3D{2488},
-uo_art_20613=3D{4229},
-uo_art_26181=3D{9797},
-uo_art_24432=3D{8048},
-uo_art_21258=3D{4874},
-uo_art_23953=3D{7569},
-uo_art_25203=3D{8819},
-uo_art_30401=3D{14017},
-uo_art_19919=3D{3535},
-tex_240=3D{1230,1231,1240,1241,1242,1243},
-uo_art_21429=3D{5045},
-uo_art_24031=3D{7647},
-tex_248=3D{2015,2016,2100,2166},
-uo_art_23251=3D{6867},
-uo_art_20426=3D{4042},
-uo_art_26085=3D{9701},
-tex_459=3D{3316,3318},
-uo_art_23507=3D{7123},
-uo_art_21781=3D{5397},
-uo_art_20464=3D{4080},
-uo_art_29351=3D{12967},
-uo_art_20425=3D{4041},
-uo_art_24324=3D{7940},
-tex_488=3D{7145,7146,7147,7148,7149,7150},
-uo_art_19545=3D{3161},
-uo_art_19653=3D{3269},
-uo_art_22317=3D{5933},
-uo_art_21536=3D{5152},
-uo_art_22657=3D{6273},
-tex_79=3D{371,373,374,375,376,377,378,379,380,381,420},
-uo_art_20302=3D{3918},
-tex_352=3D{5279,5280,5281,5282,5283,5284,5285,5286},
-uo_art_20969=3D{4585},
-uo_art_26536=3D{10152},
-uo_art_23513=3D{7129},
-uo_art_25831=3D{9447},
-tex_526=3D{1996,2000},
-tex_468=3D{2851},
-uo_art_21478=3D{5094},
-uo_art_24047=3D{7663},
-tex_415=3D{1414,1415,1416,1417,1421},
-uo_art_21298=3D{4914},
-uo_art_30386=3D{14002},
-uo_art_17741=3D{1357},
-uo_art_26086=3D{9702},
-tex_96=3D{202,203},
-tex_100=3D{144,145,146,148,149,150,151,154,155,156,158,159,160,161,162,163=
,164,165,8645,8646,8647,8648,8649,8650,8651,8652},
-uo_art_23415=3D{7031},
-uo_art_24587=3D{8203},
-tex_186=3D{1591,1592,1593,1594,1626,1627},
-uo_art_23985=3D{7601},
-tex_473=3D{919,920,921,922,923,928},
-uo_art_21820=3D{5436},
-tex_317=3D{6149,6152,6154,6157},
-uo_art_20214=3D{3830},
-uo_art_23994=3D{7610},
-uo_art_20527=3D{4143},
-uo_art_27471=3D{11087},
-uo_art_19637=3D{3253},
-uo_art_24104=3D{7720},
-uo_art_21819=3D{5435},
-uo_art_20269=3D{3885},
-tex_326=3D{6127},
-uo_art_18934=3D{2550},
-uo_art_19736=3D{3352},
-uo_art_19525=3D{3141},
-uo_art_20256=3D{3872},
-tex_413=3D{1419,1420,1421,1422,1424,1427},
-uo_art_30599=3D{14215},
-uo_art_20283=3D{3899},
-uo_art_30550=3D{14166},
-tex_265=3D{3952},
-uo_art_20316=3D{3932},
-uo_art_26180=3D{9796},
-uo_art_17724=3D{1340},
-tex_2=3D{3215,3216,3217,3218,3512,3513},
-tex_370=3D{3824},
-uo_art_20533=3D{4149},
-uo_art_23570=3D{7186},
-uo_art_21490=3D{5106},
-uo_art_24358=3D{7974},
-uo_art_21447=3D{5063},
-uo_art_19649=3D{3265},
-uo_art_20027=3D{3643},
-uo_art_27507=3D{11123},
-uo_art_29333=3D{12949},
-uo_art_21279=3D{4895},
-tex_406=3D{2914,2915,2916,2920,2921,2922,2923,2942,6414,6415,6416,6417,641=
8,6419,6424,6425,6426,6427,6428,6429,6430,6431},
-tex_73=3D{411,412,413,414,415,416,417,418,419,421,422,423,424,425,426,427,=
428,429,430,431,432,437,438,439,440,441,442,443,448,449,459,460,461,462,168=
5,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,170=
0},
-uo_art_22408=3D{6024},
-uo_art_29179=3D{12795},
-tex_263=3D{3950},
-uo_art_18918=3D{2534},
-tex_132=3D{3063,3064},
-uo_art_30476=3D{14092},
-tex_234=3D{1267},
-uo_art_30510=3D{14126},
-uo_art_24323=3D{7939},
-uo_art_21470=3D{5086},
-uo_art_20101=3D{3717},
-tex_65=3D{541,542,543,544},
-uo_art_24032=3D{7648},
-uo_art_20512=3D{4128},
-tex_346=3D{5327,5328,5329,5330,5331,5332,5333,5334},
-uo_art_19667=3D{3283},
-uo_art_24034=3D{7650},
-uo_art_24046=3D{7662},
-uo_art_19596=3D{3212},
-uo_art_19759=3D{3375},
-uo_art_24026=3D{7642},
-uo_art_29347=3D{12963},
-tex_7=3D{4106,4107},
-uo_art_23982=3D{7598},
-uo_art_21520=3D{5136},
-uo_art_18873=3D{2489},
-uo_art_21457=3D{5073},
-tex_525=3D{1994,1995,1998,1999},
-uo_art_23514=3D{7130},
-uo_art_26239=3D{9855},
-uo_art_21577=3D{5193},
-uo_art_20359=3D{3975},
-tex_138=3D{3051,3052},
-uo_art_30412=3D{14028},
-tex_486=3D{7151,7152,7153,7154,7155,7156},
-tex_150=3D{3023,3024},
-uo_art_24376=3D{7992},
-uo_art_24088=3D{7704},
-uo_art_21365=3D{4981},
-tex_536=3D{2704,3508},
-tex_479=3D{7807},
-uo_art_32103=3D{15719},
-uo_art_24412=3D{8028},
-uo_art_21514=3D{5130},
-tex_198=3D{1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,153=
2,1533,1534,11330,11331,11332,11333,11334,11335,11336,11337,11338,11339,113=
40,11341,11342,11343,11344},
-uo_art_26284=3D{9900},
-uo_art_20617=3D{4233},
-uo_art_20253=3D{3869},
-uo_art_29341=3D{12957},
-tex_442=3D{3294},
-uo_art_21483=3D{5099},
-tex_396=3D{1193,1196,1205,1208,2170,2171,2172,2173},
-uo_art_24329=3D{7945},
-uo_art_21448=3D{5064},
-uo_art_20163=3D{3779},
-uo_art_20546=3D{4162},
-uo_art_24041=3D{7657},
-uo_art_23197=3D{6813},
-uo_art_20170=3D{3786},
-uo_art_20541=3D{4157},
-tex_23=3D{1978,1979,1980,1991,1992},
-uo_art_26249=3D{9865},
-tex_456=3D{4826,4827,4828,4829,4830,4831,4832,4833,4834,4835,4836,4837,483=
8,4839,4840,4841,4842,4843,4844,4845},
-tex_8=3D{4015,4016},
-uo_art_19504=3D{3120},
-uo_art_26518=3D{10134},
-uo_art_19938=3D{3554},
-uo_art_23491=3D{7107},
-uo_art_29354=3D{12970},
-uo_art_19906=3D{3522},
-uo_art_21817=3D{5433},
-uo_art_20363=3D{3979},
-uo_art_20067=3D{3683},
-uo_art_19607=3D{3223},
-uo_art_26092=3D{9708},
-uo_art_21565=3D{5181},
-uo_art_21314=3D{4930},
-uo_art_20303=3D{3919},
-tex_316=3D{6173},
-uo_art_19592=3D{3208},
-uo_art_18829=3D{2445},
-uo_art_21246=3D{4862},
-uo_art_20584=3D{4200},
-tex_384=3D{1062,1067},
-tex_534=3D{2672,2676,4558,4562},
-tex_30=3D{1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818=
,1819,1820,1821},
-uo_art_21523=3D{5139},
-uo_art_19965=3D{3581},
-uo_art_25976=3D{9592},
-tex_194=3D{1367,1586},
-uo_art_24814=3D{8430},
-uo_art_23560=3D{7176},
-uo_art_29355=3D{12971},
-uo_art_25350=3D{8966},
-uo_art_19547=3D{3163},
-uo_art_20524=3D{4140},
-uo_art_20264=3D{3880},
-uo_art_20637=3D{4253},
-uo_art_17742=3D{1358},
-uo_art_20611=3D{4227},
-uo_art_21506=3D{5122},
-uo_art_23949=3D{7565},
-uo_art_20177=3D{3793},
-uo_art_18874=3D{2490},
-uo_art_32104=3D{15720},
-uo_art_29321=3D{12937},
-tex_11=3D{3670,3671,3672,3673},
-uo_art_26185=3D{9801},
-uo_art_30482=3D{14098},
-uo_art_21518=3D{5134},
-uo_art_30500=3D{14116},
-uo_art_20252=3D{3868},
-uo_art_18881=3D{2497},
-uo_art_24639=3D{8255},
-tex_71=3D{344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,=
360,361,362,363,364,365,366,367,368,369,370,372,382,383,384,385,386,387,388=
,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,40=
7,408,409,410,433,434,435,436,458,492,493,494,495,2291,2292,2293,2294},
-uo_art_19515=3D{3131},
-uo_art_23260=3D{6876},
-uo_art_19557=3D{3173},
-uo_art_22760=3D{6376},
-uo_art_20069=3D{3685},
-uo_art_19603=3D{3219},
-uo_art_24385=3D{8001},
-uo_art_19898=3D{3514},
-uo_art_20102=3D{3718},
-uo_art_27472=3D{11088},
-uo_art_20535=3D{4151},
-tex_31=3D{1818,1819,1820,1821},
-uo_art_25966=3D{9582},
-uo_art_20266=3D{3882},
-uo_art_20639=3D{4255},
-tex_67=3D{521,522},
-uo_art_26213=3D{9829},
-uo_art_20244=3D{3860},
-uo_art_20243=3D{3859},
-uo_art_19661=3D{3277},
-uo_art_24051=3D{7667},
-tex_15=3D{3894,4108,4109,7869},
-uo_art_26537=3D{10153},
-uo_art_19606=3D{3222},
-uo_art_25504=3D{9120},
-tex_309=3D{6180},
-tex_207=3D{1459,1467,1468,1469,1470,1471,1789,1790,1791,1792},
-uo_art_25170=3D{8786},
-uo_art_26581=3D{10197},
-uo_art_19903=3D{3519},
-uo_art_22296=3D{5912},
-tex_398=3D{1206,1207},
-tex_102=3D{144,145,146,150,151,152,153,154,155,156,158,159,160,161,162,163=
,164,165},
-uo_art_21362=3D{4978},
-tex_507=3D{3297,3399,3406,3421,3429,3445,3464,3469},
-uo_art_19605=3D{3221},
-tex_43=3D{6,9,10,11,12,13,30,31,32,33,55,56,57,58,170,171,172,173,178,179,=
180,181,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312=
,313,314,315,316,317,318,319,320,321,322,323,329,332,333,334,335,336,337,33=
8,339,340,341,342,343,429,430,431,432,496,497,498,499,500,501,502,503,553,5=
60,561,562,563,564,565,566,567,734,735,736,737,738,739,740,741,744,745,746,=
747,748,872,873,874,875,876,877,878,879,895,896,897,898,899,900,901,902,903=
,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,92=
2,923,924,925,926,927,928,933,938,939,940,941,942,943,944,950,2104,2140,214=
1,2142,2143,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,215=
8,2159,2160,2161,2162,2163,2164,2165,2167,2168,2186,2187,2591,2592,2967,296=
8,2969,2970,4758,5510,5511,5512,5513,5514,5515,5516,5517,5518,5520,5521,552=
2,5523,5524,5525,5526,5527,5661,5662,5663,5664,5665,5666,5667,5668,5669,567=
1,5672,5673,5674,5675,5676,5677},
-uo_art_20982=3D{4598},
-uo_art_30036=3D{13652},
-uo_art_20610=3D{4226},
-tex_353=3D{14000,14013,14036,14037,14038,14039,14040,14041,14042,14043,140=
44,14045,14046,14047,14048,14049,14050,14051},
-uo_art_21036=3D{4652},
-uo_art_29357=3D{12973},
-uo_art_20292=3D{3908},
-uo_art_29344=3D{12960},
-uo_art_19647=3D{3263},
-uo_art_19052=3D{2668},
-uo_art_21561=3D{5177},
-tex_258=3D{2474,3709},
-uo_art_19540=3D{3156},
-tex_171=3D{2981,2982},
-uo_art_23782=3D{7398},
-uo_art_18908=3D{2524},
-uo_art_18811=3D{2427},
-uo_art_21441=3D{5057},
-uo_art_21496=3D{5112},
-uo_art_19656=3D{3272},
-uo_art_20247=3D{3863},
-uo_art_21243=3D{4859},
-tex_450=3D{2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,256=
7,2568,2569,2570,2571,2572,2573,2574,2578,2579,2580},
-uo_art_23554=3D{7170},
-tex_45=3D{6,7,8,10,11,12,13,14,15,820,821,822,823,824,825,826,827,828,829,=
830,831,832,833,834,835},
-uo_art_27461=3D{11077},
-uo_art_20212=3D{3828},
-tex_435=3D{2140,2141,2142,2144,2145,2167,2168},
-uo_art_26299=3D{9915},
-uo_art_19511=3D{3127},
-uo_art_24392=3D{8008},
-uo_art_24367=3D{7983},
-uo_art_19548=3D{3164},
-uo_art_30502=3D{14118},
-uo_art_20304=3D{3920},
-uo_art_30542=3D{14158},
-tex_58=3D{591,592,593,600},
-uo_art_20709=3D{4325},
-tex_14=3D{3989,3990,3991,3992,3993,3994,3995,3996},
-uo_art_21515=3D{5131},
-uo_art_19962=3D{3578},
-uo_art_24037=3D{7653},
-uo_art_19608=3D{3224},
-tex_165=3D{2993,2994},
-uo_art_20568=3D{4184},
-uo_art_24087=3D{7703},
-uo_art_24372=3D{7988},
-uo_art_26307=3D{9923},
-uo_art_24388=3D{8004},
-uo_art_20467=3D{4083},
-uo_art_21037=3D{4653},
-uo_art_21304=3D{4920},
-uo_art_29339=3D{12955},
-tex_57=3D{597,598,599,601},
-tex_332=3D{6113,6116,6118,6121},
-uo_art_19535=3D{3151},
-uo_art_21821=3D{5437},
-uo_art_20348=3D{3964},
-uo_art_30396=3D{14012},
-tex_547=3D{5384,5385,5404,5405},
-tex_109=3D{51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77},
-uo_art_21744=3D{5360},
-tex_505=3D{5536,5537,5647,5648},
-uo_art_24058=3D{7674},
-uo_art_21318=3D{4934},
-uo_art_20352=3D{3968},
-tex_382=3D{4201,4203,4205,4218,4220,4221},
-uo_art_21315=3D{4931},
-uo_art_23195=3D{6811},
-uo_art_21308=3D{4924},
-tex_321=3D{6141,6142,6146,6147},
-uo_art_30530=3D{14146},
-uo_art_21756=3D{5372},
-uo_art_24418=3D{8034},
-uo_art_19566=3D{3182},
-uo_art_25163=3D{8779},
-uo_art_26202=3D{9818},
-uo_art_19718=3D{3334},
-uo_art_21299=3D{4915},
-uo_art_20635=3D{4251},
-uo_art_24089=3D{7705},
-uo_art_20516=3D{4132},
-uo_art_30527=3D{14143},
-tex_443=3D{3295},
-tex_18=3D{3801,3802,4453,4454},
-uo_art_24085=3D{7701},
-uo_art_26305=3D{9921},
-tex_224=3D{1297,1298,1299,1300},
-tex_544=3D{7857,7858,7859,7860},
-uo_art_19868=3D{3484},
-uo_art_19990=3D{3606},
-uo_art_20282=3D{3898},
-tex_322=3D{6144},
-uo_art_19674=3D{3290},
-uo_art_25972=3D{9588},
-uo_art_20711=3D{4327},
-uo_art_20523=3D{4139},
-uo_art_20421=3D{4037},
-uo_art_23990=3D{7606},
-uo_art_26523=3D{10139},
-uo_art_26238=3D{9854},
-tex_191=3D{1557,1558,1563,1564,1565,1566,1567,1568,1569,1570,1575,1576,157=
7,1578,1589,1590,1615,1616,1617},
-uo_art_20265=3D{3881},
-uo_art_20070=3D{3686},
-tex_37=3D{951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,=
967,968,969,970,989,990,991,1006},
-uo_art_29172=3D{12788},
-uo_art_21039=3D{4655},
-uo_art_19576=3D{3192},
-tex_261=3D{3948},
-tex_537=3D{2692,2696},
-uo_art_20528=3D{4144},
-uo_art_19623=3D{3239},
-uo_art_21738=3D{5354},
-uo_art_18706=3D{2322},
-uo_art_25153=3D{8769},
-tex_267=3D{2475,3708},
-tex_104=3D{152,153},
-tex_472=3D{895,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911=
,912,913,914,915,916,917,918},
-tex_119=3D{2902,2903,2904,2905},
-uo_art_20020=3D{3636},
-tex_457=3D{2440,2442,2443},
-tex_210=3D{1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,144=
1,1442,1443,8568,8569,8570,8571,8572,8573,8574,8575},
-uo_art_21828=3D{5444},
-tex_238=3D{1232,1233,1234,1235,1246,1247,1248,1249},
-uo_art_20532=3D{4148},
-uo_art_18877=3D{2493},
-tex_422=3D{2201,2202,2203,2204,2205,2206},
-uo_art_30475=3D{14091},
-uo_art_20346=3D{3962},
-uo_art_24373=3D{7989},
-uo_art_24020=3D{7636},
-tex_110=3D{65,66,67,68},
-uo_art_19954=3D{3570},
-uo_art_19117=3D{2733},
-tex_130=3D{3067,3068},
-uo_art_19131=3D{2747},
-uo_art_24413=3D{8029},
-uo_art_21526=3D{5142},
-uo_art_22312=3D{5928},
-uo_art_20572=3D{4188},
-uo_art_20362=3D{3978},
-tex_122=3D{3085,3086},
-tex_438=3D{3823},
-uo_art_30569=3D{14185},
-uo_art_19126=3D{2742},
-uo_art_21475=3D{5091},
-tex_386=3D{2101,2102,2103},
-uo_art_21237=3D{4853},
-uo_art_20713=3D{4329},
-uo_art_19957=3D{3573},
-uo_art_20255=3D{3871},
-tex_362=3D{2802,2803,2804,2805},
-uo_art_18896=3D{2512},
-uo_art_21757=3D{5373},
-uo_art_25159=3D{8775},
-uo_art_21451=3D{5067},
-uo_art_19710=3D{3326},
-uo_art_19989=3D{3605},
-uo_art_21587=3D{5203},
-uo_art_25420=3D{9036},
-uo_art_19120=3D{2736},
-uo_art_25974=3D{9590},
-uo_art_29177=3D{12793},
-uo_art_21739=3D{5355},
-tex_60=3D{560,561,562,564,565,566,567,568,569},
-uo_art_22307=3D{5923},
-uo_art_23956=3D{7572},
-uo_art_19959=3D{3575},
-uo_art_22301=3D{5917},
-tex_417=3D{2971,2972},
-tex_410=3D{1055,1064},
-tex_560=3D{3286,3288},
-uo_art_21584=3D{5200},
-tex_462=3D{4173,4174},
-uo_art_22374=3D{5990},
-uo_art_17737=3D{1353},
-uo_art_30541=3D{14157},
-uo_art_23412=3D{7028},
-uo_art_26629=3D{10245},
-uo_art_22297=3D{5913},
-uo_art_21582=3D{5198},
-uo_art_30584=3D{14200},
-uo_art_25285=3D{8901},
-uo_art_23784=3D{7400},
-uo_art_21319=3D{4935},
-uo_art_22076=3D{5692},
-uo_art_20324=3D{3940},
-uo_art_21306=3D{4922},
-tex_546=3D{5394,5395,5402,5403},
-uo_art_21586=3D{5202},
-uo_art_17011=3D{627},
-uo_art_23562=3D{7178},
-uo_art_18883=3D{2499},
-uo_art_30413=3D{14029},
-tex_287=3D{6657,6658,6659,6660,6667,6668,7036,7037,7039,7040},
-tex_517=3D{1251,1252,1253},
-tex_337=3D{6108},
-tex_188=3D{1364,1365,1366,1372,1373,1374,1375,1376,1377,1378,1379,1380,158=
5,1622,1623},
-uo_art_21568=3D{5184},
-uo_art_17010=3D{626},
-uo_art_19634=3D{3250},
-uo_art_21103=3D{4719},
-uo_art_21525=3D{5141},
-uo_art_23520=3D{7136},
-uo_art_30032=3D{13648},
-uo_art_24053=3D{7669},
-uo_art_24414=3D{8030},
-tex_226=3D{1293,1294},
-uo_art_18705=3D{2321},
-uo_art_19886=3D{3502},
-uo_art_29178=3D{12794},
-uo_art_23267=3D{6883},
-uo_art_21510=3D{5126},
-uo_art_21517=3D{5133},
-tex_297=3D{5513,5515,5664,5666},
-tex_510=3D{3104,3106},
-uo_art_25150=3D{8766},
-uo_art_22289=3D{5905},
-uo_art_21560=3D{5176},
-uo_art_20987=3D{4603},
-uo_art_26302=3D{9918},
-uo_art_20962=3D{4578},
-uo_art_20616=3D{4232},
-uo_art_20710=3D{4326},
-tex_39=3D{979,980,981,982,983,984,992,993,994},
-uo_art_20323=3D{3939},
-tex_552=3D{4786,4809},
-uo_art_21263=3D{4879},
-tex_97=3D{187,188},
-uo_art_19904=3D{3520},
-uo_art_23991=3D{7607},
-tex_390=3D{2749,2751,2752,2753},
-uo_art_21746=3D{5362},
-uo_art_24415=3D{8031},
-uo_art_18892=3D{2508},
-uo_art_21461=3D{5077},
-tex_376=3D{3936,3937},
-tex_360=3D{2774,2775,2776,2777},
-tex_229=3D{1220,1221,1285,1288,4572,4573,4574,4575,4576,4577},
-uo_art_30392=3D{14008},
-uo_art_18810=3D{2426},
-uo_art_21297=3D{4913},
-uo_art_26684=3D{10300},
-tex_283=3D{3383,3384},
-uo_art_24380=3D{7996},
-uo_art_26287=3D{9903},
-uo_art_19516=3D{3132},
-uo_art_26182=3D{9798},
-uo_art_18708=3D{2324},
-tex_512=3D{7617,7618,7619,7620,7621,7622},
-uo_art_30507=3D{14123},
-uo_art_23775=3D{7391},
-uo_art_17735=3D{1351},
-uo_art_21278=3D{4894},
-uo_art_19997=3D{3613},
-uo_art_19638=3D{3254},
-uo_art_18914=3D{2530},
-uo_art_21281=3D{4897},
-uo_art_19639=3D{3255},
-uo_art_20929=3D{4545},
-uo_art_20549=3D{4165},
-tex_400=3D{1201,1202,1203,1204,1213,1214,1215,1216},
-tex_421=3D{4006},
-tex_176=3D{1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,176=
1,1762,1763,1764,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,211=
6,2117,2118,2119,2120},
-uo_art_19531=3D{3147},
-tex_318=3D{6150,6151,6155,6156},
-tex_95=3D{252,253},
-tex_120=3D{2894,2895,2896,2897,2898,2899,2900,2901},
-tex_323=3D{6130},
-uo_art_19648=3D{3264},
-uo_art_18707=3D{2323},
-uo_art_20384=3D{4000},
-uo_art_20534=3D{4150},
-uo_art_21567=3D{5183},
-uo_art_21815=3D{5431},
-uo_art_21104=3D{4720},
-tex_141=3D{3027,3028,3045,3046},
-tex_166=3D{2991,2992},
-uo_art_30576=3D{14192},
-uo_art_21241=3D{4857},
-uo_art_26222=3D{9838},
-uo_art_21236=3D{4852},
-uo_art_19773=3D{3389},
-uo_art_32028=3D{15644},
-uo_art_19595=3D{3211},
-uo_art_20296=3D{3912},
-uo_art_18813=3D{2429},
-tex_477=3D{3745,3746,3747,3748},
-uo_art_24056=3D{7672},
-uo_art_27478=3D{11094},
-uo_art_26258=3D{9874},
-uo_art_20364=3D{3980},
-uo_art_19707=3D{3323},
-uo_art_21302=3D{4918},
-uo_art_23984=3D{7600},
-uo_art_20641=3D{4257},
-tex_62=3D{545,546,547,556,557,558,559,1057,1058,1059,1060,1061,1072,1073,1=
074,1077},
-uo_art_26286=3D{9902},
-uo_art_21242=3D{4858},
-uo_art_26683=3D{10299},
-uo_art_22656=3D{6272},
-uo_art_18878=3D{2494},
-tex_538=3D{2682,2689},
-uo_art_22371=3D{5987},
-uo_art_21157=3D{4773},
-uo_art_18912=3D{2528},
-uo_art_22804=3D{6420},
-tex_432=3D{4622,4623,4624,4625,4626,4627,4628,4629,4630},
-uo_art_30495=3D{14111},
-uo_art_23257=3D{6873},
-uo_art_23506=3D{7122},
-uo_art_21310=3D{4926},
-tex_508=3D{3298},
-uo_art_20382=3D{3998},
-tex_5=3D{2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,=
2094,2095,2096,2097,2098,2099,2121,2122,2123,2124,2125,2126,2127,2128,2129,=
2130,2131,2132,2133,2134,2135,2136,2137,2138,2139},
-tex_361=3D{2770,2771,2772,2773},
-uo_art_22655=3D{6271},
-uo_art_22311=3D{5927},
-tex_295=3D{5516,5518,5667,5669},
-uo_art_21505=3D{5121},
-uo_art_18854=3D{2470},
-uo_art_20066=3D{3682},
-uo_art_21423=3D{5039},
-uo_art_21149=3D{4765},
-uo_art_18808=3D{2424},
-tex_68=3D{519,520},
-uo_art_20411=3D{4027},
-uo_art_22316=3D{5932},
-uo_art_21745=3D{5361},
-uo_art_24025=3D{7641},
-uo_art_30508=3D{14124},
-uo_art_30418=3D{14034},
-uo_art_21101=3D{4717},
-uo_art_19628=3D{3244},
-uo_art_20412=3D{4028},
-tex_285=3D{3633,3634,3635,6570,6587,7979},
-tex_380=3D{4117,4118,4119,4121,4122,4123,4124,4125,4126,4260,4261,4262},
-uo_art_26491=3D{10107},
-uo_art_19589=3D{3205},
-uo_art_26204=3D{9820},
-tex_152=3D{3019,3020},
-uo_art_26506=3D{10122},
-uo_art_22763=3D{6379},
-uo_art_21321=3D{4937},
-uo_art_24625=3D{8241},
-uo_art_21294=3D{4910},
-uo_art_25349=3D{8965},
-uo_art_25158=3D{8774},
-tex_441=3D{3287,3289},
-uo_art_22294=3D{5910},
-tex_469=3D{2852,2853},
-uo_art_20254=3D{3870},
-tex_402=3D{1198,1200,1209,1211},
-uo_art_30511=3D{14127},
-tex_177=3D{1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,176=
1,1762,1763,1764,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,211=
6,2117,2118,2119,2120},
-uo_art_17728=3D{1344},
-uo_art_21303=3D{4919},
-tex_514=3D{3395,3417,3440,3461},
-tex_241=3D{1185,1186,1187,1188,1226,1228,1239},
-uo_art_18929=3D{2545},
-uo_art_23993=3D{7609},
-uo_art_23411=3D{7027},
-tex_391=3D{2769},
-uo_art_30571=3D{14187},
-uo_art_26242=3D{9858},
-uo_art_26539=3D{10155},
-uo_art_24419=3D{8035},
-uo_art_21444=3D{5060},
-uo_art_23788=3D{7404},
-tex_478=3D{7848,7849,7850,7851,7852,7853,7854,7855},
-uo_art_19992=3D{3608},
-uo_art_21240=3D{4856},
-uo_art_22291=3D{5907},
-tex_559=3D{2007,2008,2285,2286,2289,2290,2293,2294,2297,2298,2299,2300},
-uo_art_18915=3D{2531},
-tex_221=3D{1309,1310,1311,1312},
-uo_art_24040=3D{7656},
-uo_art_17747=3D{1363},
-uo_art_19872=3D{3488},
-tex_155=3D{3013,3014},
-uo_art_25193=3D{8809},
-uo_art_17727=3D{1343},
-uo_art_26243=3D{9859},
-uo_art_20547=3D{4163},
-tex_244=3D{1225},
-uo_art_24048=3D{7664},
-uo_art_20970=3D{4586},
-tex_153=3D{3017,3018},
-uo_art_24029=3D{7645},
-uo_art_17733=3D{1349},
-uo_art_21295=3D{4911},
-uo_art_22318=3D{5934},
-uo_art_22756=3D{6372},
-uo_art_30408=3D{14024},
-uo_art_22969=3D{6585},
-uo_art_24319=3D{7935},
-uo_art_25963=3D{9579},
-tex_269=3D{5950,6608},
-uo_art_30534=3D{14150},
-uo_art_19917=3D{3533},
-uo_art_24481=3D{8097},
-uo_art_25160=3D{8776},
-uo_art_21527=3D{5143},
-tex_183=3D{1608,1609,1610,1611,1630,1631,1632,1633,1634,1635,1636,1637,163=
8,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652},
-tex_139=3D{3049,3050},
-uo_art_18853=3D{2469},
-uo_art_19032=3D{2648},
-uo_art_21419=3D{5035},
-uo_art_19652=3D{3268},
-tex_219=3D{1317,1318,1319,1320,1321,1322,1323,1324,2077},
-uo_art_20273=3D{3889},
-uo_art_30513=3D{14129},
-uo_art_23557=3D{7173},
-tex_98=3D{185,186,187,188},
-uo_art_21317=3D{4933},
-uo_art_24393=3D{8009},
-tex_262=3D{3949,8148,8149,8150,8151,8152,8167,8168,8169,8170,8171},
-uo_art_26301=3D{9917},
-tex_148=3D{3029,3030},
-tex_338=3D{6095,6098,6100,6103},
-uo_art_20238=3D{3854},
-uo_art_19627=3D{3243},
-uo_art_20540=3D{4156},
-tex_204=3D{1477,1478,1479,1480},
-tex_555=3D{9153,9154,9155,9156,9157,9158,9159,9160},
-uo_art_18803=3D{2419},
-tex_284=3D{6608},
-uo_art_21783=3D{5399},
-uo_art_21436=3D{5052},
-uo_art_30402=3D{14018},
-uo_art_21378=3D{4994},
-uo_art_20559=3D{4175},
-uo_art_21485=3D{5101},
-tex_394=3D{2778},
-uo_art_27465=3D{11081},
-uo_art_22379=3D{5995},
-uo_art_25352=3D{8968},
-uo_art_25484=3D{9100},
-uo_art_18889=3D{2505},
-uo_art_23780=3D{7396},
-tex_531=3D{2584,2589,2597},
-tex_434=3D{4310,4311},
-tex_29=3D{248,249,250,251,260,261,262,263,266,267,268,269,270,271,272,273,=
274,275,276,277,278,279,280,281,282,289,290,291,292,293,294,1085,1089,1090,=
1091,1092,1093,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,=
1813,1814,1815,1816,1817,1818,1819,1820,1821},
-uo_art_19132=3D{2748},
-uo_art_19591=3D{3207},
-uo_art_21522=3D{5138},
-uo_art_20356=3D{3972},
-tex_94=3D{258,259},
-uo_art_25952=3D{9568},
-uo_art_30417=3D{14033},
-uo_art_19737=3D{3353},
-uo_art_20522=3D{4138},
-uo_art_30560=3D{14176},
-tex_340=3D{6099},
-uo_art_22970=3D{6586},
-uo_art_20387=3D{4003},
-uo_art_19553=3D{3169},
-uo_art_22378=3D{5994},
-uo_art_23561=3D{7177},
-uo_art_19991=3D{3607},
-uo_art_24405=3D{8021},
-uo_art_20369=3D{3985},
-uo_art_21809=3D{5425},
-uo_art_19955=3D{3571},
-uo_art_20564=3D{4180},
-uo_art_20295=3D{3911},
-uo_art_21248=3D{4864},
-uo_art_20294=3D{3910},
-tex_54=3D{87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,1=
06,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,631,632,633,=
634,635,636,641,642,2007,2008,2295,2296,2297,2298},
-tex_428=3D{3547},
-uo_art_21489=3D{5105},
-uo_art_23186=3D{6802},
-uo_art_23419=3D{7035},
-uo_art_26682=3D{10298},
-tex_272=3D{1113,1114,7629,7630,7631,7632,7633,7634},
-uo_art_20305=3D{3921},
-tex_112=3D{59,60},
-uo_art_20200=3D{3816},
-tex_163=3D{2997,2998},
-tex_55=3D{588,589,590,603},
-uo_art_20640=3D{4256},
-uo_art_19588=3D{3204},
-uo_art_24369=3D{7985},
-uo_art_21503=3D{5119},
-uo_art_23564=3D{7180},
-uo_art_21430=3D{5046},
-uo_art_30573=3D{14189},
-tex_298=3D{5514,5665},
-uo_art_20259=3D{3875},
-uo_art_19680=3D{3296},
-uo_art_21324=3D{4940},
-uo_art_25086=3D{8702},
-uo_art_19916=3D{3532},
-uo_art_17743=3D{1359},
-tex_140=3D{3047,3048},
-uo_art_19512=3D{3128},
-tex_289=3D{5524,5526,5527,5675,5677},
-uo_art_21484=3D{5100},
-uo_art_21836=3D{5452},
-tex_175=3D{1781,1782},
-uo_art_16955=3D{571},
-uo_art_19549=3D{3165},
-uo_art_19113=3D{2729},
-tex_82=3D{354,355},
-tex_522=3D{5502,5503},
-uo_art_26681=3D{10297},
-tex_527=3D{7230,7232,7237,7239,7244,7246,7251,7255,7258,7262,7508,7511,753=
9,7542},
-uo_art_22287=3D{5903},
-uo_art_19864=3D{3480},
-uo_art_22366=3D{5982},
-tex_364=3D{2791,2792,2793,2794},
-uo_art_24832=3D{8448},
-uo_art_30480=3D{14096},
-tex_404=3D{2926,2927,2928,2929,2930,2931,2932,2945,2946,2947,2948,2949,295=
0,2951},
-uo_art_20983=3D{4599},
-tex_419=3D{2975,2976},
-uo_art_20299=3D{3915},
-uo_art_17736=3D{1352},
-uo_art_18836=3D{2452},
-uo_art_24055=3D{7671},
-uo_art_20001=3D{3617},
-tex_494=3D{1539,1555,1556},
-uo_art_20234=3D{3850},
-uo_art_20351=3D{3967},
-tex_74=3D{442,443,446,447,448,449,450,451,456,457},
-uo_art_19587=3D{3203},
-uo_art_29358=3D{12974},
-uo_art_29322=3D{12938},
-uo_art_19769=3D{3385},
-uo_art_21501=3D{5117},
-uo_art_20073=3D{3689},
-uo_art_23416=3D{7032},
-tex_255=3D{2266,2270,2385,2387,2388,2389,2390,2391,2392,2399,2401,2402,240=
3,2404,2405,2406},
-uo_art_19612=3D{3228},
-uo_art_24368=3D{7984},
-uo_art_22376=3D{5992},
-uo_art_20383=3D{3999},
-uo_art_22285=3D{5901},
-uo_art_20272=3D{3888},
-tex_25=3D{1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967=
},
-tex_540=3D{3699,3700},
-uo_art_20271=3D{3887},
-uo_art_27488=3D{11104},
-uo_art_24092=3D{7708},
-uo_art_30411=3D{14027},
-uo_art_25155=3D{8771},
-uo_art_20361=3D{3977},
-uo_art_24341=3D{7957},
-uo_art_17734=3D{1350},
-uo_art_30586=3D{14202},
-uo_art_32105=3D{15721},
-uo_art_20494=3D{4110},
-uo_art_19031=3D{2647},
-uo_art_20465=3D{4081},
-tex_170=3D{2983,2984},
-tex_28=3D{197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,=
213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231=
,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,1822,2287,=
2288,2289,2290,4483,4484,7103,8706},
-uo_art_19657=3D{3273},
-uo_art_25189=3D{8805},
-uo_art_23265=3D{6881},
-uo_art_25198=3D{8814},
-uo_art_24023=3D{7639},
-uo_art_23268=3D{6884},
-tex_211=3D{1436,1437,1438,1439,1440},
-uo_art_23972=3D{7588},
-uo_art_20583=3D{4199},
-uo_art_18930=3D{2546},
-uo_art_20216=3D{3832},
-uo_art_21364=3D{4980},
-uo_art_24052=3D{7668},
-uo_art_23954=3D{7570},
-tex_159=3D{3005,3006},
-tex_454=3D{3478,3482},
-tex_282=3D{3365},
-uo_art_21742=3D{5358},
-tex_385=3D{1068,1070},
-uo_art_20236=3D{3852},
-uo_art_24321=3D{7937},
-uo_art_30416=3D{14032},
-uo_art_24603=3D{8219},
-uo_art_21275=3D{4891},
-uo_art_26972=3D{10588},
-tex_40=3D{983,984,992,993,994},
-uo_art_21825=3D{5441},
-uo_art_22404=3D{6020},
-uo_art_30598=3D{14214},
-uo_art_21488=3D{5104},
-uo_art_19534=3D{3150},
-uo_art_20497=3D{4113},
-uo_art_21323=3D{4939},
-uo_art_30532=3D{14148},
-uo_art_20063=3D{3679},
-uo_art_22750=3D{6366},
-uo_art_19960=3D{3576},
-uo_art_26973=3D{10589},
-uo_art_22647=3D{6263},
-uo_art_20931=3D{4547},
-uo_art_32456=3D{16072},
-tex_356=3D{2806,2807,2808,2809},
-uo_art_21112=3D{4728},
-uo_art_19115=3D{2731},
-uo_art_24422=3D{8038},
-tex_66=3D{295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,=
312,313,314,315,330,332,333,334,335,336,337,338,339,340,341,342,343,511,512=
,513,515,516,517,518,519,520,521,522,523,524,9373,9374},
-uo_art_30588=3D{14204},
-uo_art_26285=3D{9901},
-tex_482=3D{7776,7783},
-uo_art_26093=3D{9709},
-tex_190=3D{1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,156=
9,1570,1571,1572,1573,1574,1575,1576,1577,1578,1589,1590,1615,1616,1617},
-uo_art_26294=3D{9910},
-uo_art_19915=3D{3531},
-uo_art_24334=3D{7950},
-tex_509=3D{2620,2628,11223},
-uo_art_26245=3D{9861},
-tex_330=3D{6123},
-uo_art_22367=3D{5983},
-uo_art_27493=3D{11109},
-tex_106=3D{91,92,93,94},
-tex_371=3D{3825},
-uo_art_21521=3D{5137},
-uo_art_21591=3D{5207},
-tex_567=3D{663,664,665,666,667,668,1099,1100,1101,1102,1103},
-tex_345=3D{5347},
-uo_art_30518=3D{14134},
-tex_217=3D{1384,1385},
-tex_264=3D{3951},
-uo_art_21452=3D{5068},
-uo_art_23778=3D{7394},
-uo_art_21257=3D{4873},
-uo_art_21454=3D{5070},
-uo_art_18876=3D{2492},
-uo_art_23417=3D{7033},
-tex_307=3D{6182},
-tex_56=3D{588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603},
-uo_art_27384=3D{11000},
-uo_art_21482=3D{5098},
-tex_373=3D{2849,2853},
-tex_491=3D{2480,3705},
-uo_art_21524=3D{5140},
-uo_art_21307=3D{4923},
-tex_85=3D{340,341},
-uo_art_26543=3D{10159},
-uo_art_19501=3D{3117},
-uo_art_25945=3D{9561},
-uo_art_20347=3D{3963},
-uo_art_23175=3D{6791},
-tex_160=3D{3003,3004},
-uo_art_26087=3D{9703},
-uo_art_30499=3D{14115},
-tex_34=3D{657,658,659,660,669,671,672,673,674,675,676,677,678,688,689,690,=
691,692,693,694,695,696,697,698,699,700,701,702,703,704,1104,1105,1106,1107=
},
-uo_art_22314=3D{5930},
-tex_143=3D{3041,3042},
-uo_art_19518=3D{3134},
-uo_art_24197=3D{7813},
-tex_61=3D{545,546,547,550,551,552,554,555,556,557,558,559,1057,1058,1059,1=
060,1061,1072,1073,1074,1077},
-uo_art_20933=3D{4549},
-tex_416=3D{7774,7775,8977,8978},
-uo_art_24096=3D{7712},
-uo_art_20417=3D{4033},
-tex_377=3D{3934,3935,5047,5048,5049,5050},
-uo_art_20250=3D{3866},
-uo_art_21283=3D{4899},
-tex_411=3D{1056,1065},
-uo_art_20609=3D{4225},
-uo_art_19124=3D{2740},
-uo_art_25982=3D{9598},
-uo_art_17729=3D{1345},
-tex_304=3D{2758,2759},
-uo_art_21361=3D{4977},
-uo_art_26316=3D{9932},
-uo_art_20366=3D{3982},
-uo_art_19704=3D{3320},
-tex_17=3D{4459,4460},
-uo_art_20980=3D{4596},
-tex_327=3D{6126},
-uo_art_20293=3D{3909},
-uo_art_30509=3D{14125},
-uo_art_30512=3D{14128},
-uo_art_24359=3D{7975},
-uo_art_19601=3D{3217},
-uo_art_21827=3D{5443},
-tex_91=3D{295,296,297,299,300,301,302,303,304,305},
-tex_256=3D{2473,3644,3645,3646,3647,3710},
-uo_art_32027=3D{15643},
-tex_290=3D{5525,5676},
-uo_art_30556=3D{14172},
-uo_art_20496=3D{4112},
-uo_art_30409=3D{14025},
-uo_art_18923=3D{2539},
-uo_art_19956=3D{3572},
-tex_393=3D{2810},
-tex_528=3D{7229,7234,7243,7248,7257,7261,7506},
-uo_art_23190=3D{6806},
-uo_art_20174=3D{3790},
-uo_art_19551=3D{3167},
-uo_art_24416=3D{8032},
-tex_499=3D{5476,5477,5478,5479},
-uo_art_23983=3D{7599},
-uo_art_18917=3D{2533},
-uo_art_18868=3D{2484},
-uo_art_21289=3D{4905},
-tex_474=3D{975,976,977,978},
-tex_115=3D{34,35},
-uo_art_24602=3D{8218},
-uo_art_24105=3D{7721},
-uo_art_22755=3D{6371},
-uo_art_20981=3D{4597},
-uo_art_26183=3D{9799},
-uo_art_19121=3D{2737},
-uo_art_21562=3D{5178},
-uo_art_21834=3D{5450},
-tex_266=3D{3648,3649},
-tex_481=3D{7781,7788},
-uo_art_20423=3D{4039},
-tex_437=3D{3820},
-tex_276=3D{2654,2656},
-uo_art_20545=3D{4161},
-uo_art_24394=3D{8010},
-uo_art_21740=3D{5356},
-uo_art_21564=3D{5180},
-uo_art_30580=3D{14196},
-uo_art_19964=3D{3580},
-tex_414=3D{1418,1419,1420,1422},
-uo_art_18828=3D{2444},
-uo_art_23989=3D{7605},
-tex_543=3D{4009},
-uo_art_18913=3D{2529},
-uo_art_20239=3D{3855},
-uo_art_21268=3D{4884},
-uo_art_20358=3D{3974},
-uo_art_30406=3D{14022},
-uo_art_25357=3D{8973},
-uo_art_22402=3D{6018},
-uo_art_23785=3D{7401},
-uo_art_20614=3D{4230},
-uo_art_20965=3D{4581},
-uo_art_19914=3D{3530},
-tex_128=3D{3071,3072},
-uo_art_19758=3D{3374},
-uo_art_23187=3D{6803},
-uo_art_30547=3D{14163},
-tex_286=3D{7808,7809},
-uo_art_20165=3D{3781},
-uo_art_30557=3D{14173},
-uo_art_22752=3D{6368},
-uo_art_20466=3D{4082},
-tex_305=3D{6184},
-tex_557=3D{9349,9350,9351},
-uo_art_24024=3D{7640},
-uo_art_20276=3D{3892},
-uo_art_21479=3D{5095},
-uo_art_20985=3D{4601},
-uo_art_24425=3D{8041},
-uo_art_21749=3D{5365},
-tex_189=3D{1595,1596,1597,1598,1618,1619},
-uo_art_22309=3D{5925},
-uo_art_21244=3D{4860},
-uo_art_21376=3D{4992},
-uo_art_21296=3D{4912},
-tex_368=3D{3821},
-tex_149=3D{3025,3026},
-uo_art_23968=3D{7584},
-tex_235=3D{1266},
-uo_art_23065=3D{6681},
-uo_art_25949=3D{9565},
-uo_art_22372=3D{5988},
-uo_art_20986=3D{4602},
-tex_184=3D{1608,1609,1610,1634,1635,1636,1637,1638,1639,1640,1641,1645,164=
6,1647,1648,1649,1650,1651,1652},
-tex_513=3D{7611,7612,7613,7614,7615,7616},
-uo_art_30600=3D{14216},
-tex_253=3D{4632,4633,4634,4635},
-uo_art_19860=3D{3476},
-uo_art_24317=3D{7933},
-uo_art_24401=3D{8017},
-uo_art_22286=3D{5902},
-uo_art_21285=3D{4901},
-tex_275=3D{2651,2660},
-tex_359=3D{2779,2780,2781,2782},
-uo_art_20345=3D{3961},
-tex_134=3D{3059,3060},
-uo_art_21458=3D{5074},
-tex_225=3D{1295,1296},
-uo_art_26609=3D{10225},
-tex_301=3D{2765,2766,2767,2768},
-uo_art_20428=3D{4044},
-uo_art_22308=3D{5924},
-uo_art_24398=3D{8014},
-tex_383=3D{4202,4207,4219,4223},
-uo_art_26935=3D{10551},
-tex_178=3D{1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,176=
1,1762,1763,1764,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,211=
6,2117,2118,2119,2120},
-uo_art_23522=3D{7138},
-uo_art_21111=3D{4727},
-uo_art_19517=3D{3133},
-uo_art_26194=3D{9810},
-uo_art_19539=3D{3155},
-uo_art_26270=3D{9886},
-uo_art_23516=3D{7132},
-uo_art_26198=3D{9814},
-uo_art_19722=3D{3338},
-uo_art_19542=3D{3158},
-uo_art_20560=3D{4176},
-uo_art_23559=3D{7175},
-uo_art_25956=3D{9572},
-tex_518=3D{8756,8757},
-uo_art_21249=3D{4865},
-uo_art_21741=3D{5357},
-uo_art_29327=3D{12943},
-uo_art_26673=3D{10289},
-tex_111=3D{61,62,63,64},
-tex_425=3D{3811,3812,3813,3814,4306,4307},
-uo_art_21427=3D{5043},
-tex_515=3D{1250,1254,1255},
-uo_art_21252=3D{4868},
-uo_art_21831=3D{5447},
-uo_art_27474=3D{11090},
-tex_399=3D{1197,1199,1210,1212},
-uo_art_21818=3D{5434},
-uo_art_25955=3D{9571},
-tex_444=3D{3278,3300,3303,3481,3493},
-uo_art_24365=3D{7981},
-uo_art_19532=3D{3148},
-uo_art_18897=3D{2513},
-uo_art_23409=3D{7025},
-uo_art_20211=3D{3827},
-uo_art_21469=3D{5085},
-uo_art_20262=3D{3878},
-tex_84=3D{342,343},
-tex_561=3D{1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,183=
6,1837,1838,1839,1840,1841,1842,1843,1844,1845},
-uo_art_20394=3D{4010},
-uo_art_25185=3D{8801},
-tex_529=3D{7449,7452,7478,7481,7512},
-uo_art_24611=3D{8227},
-uo_art_21487=3D{5103},
-tex_545=3D{3740},
-tex_424=3D{2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282},
-uo_art_21502=3D{5118},
-uo_art_19761=3D{3377},
-uo_art_22751=3D{6367},
-uo_art_25959=3D{9575},
-tex_20=3D{2862,2863,2864,2865},
-uo_art_20267=3D{3883},
-tex_302=3D{2761,2762,2763,2764},
-uo_art_19633=3D{3249},
-uo_art_19618=3D{3234},
-uo_art_26291=3D{9907},
-uo_art_21100=3D{4716},
-tex_252=3D{4824,4825,5018},
-uo_art_23493=3D{7109},
-uo_art_26607=3D{10223},
-uo_art_26255=3D{9871},
-uo_art_26311=3D{9927},
-uo_art_19528=3D{3144},
-tex_405=3D{2941,2960,4491,4492,4493,4494,7591,7595},
-uo_art_19619=3D{3235},
-tex_335=3D{6104,6107,6109,6112},
-uo_art_21835=3D{5451},
-tex_331=3D{6122},
-uo_art_21312=3D{4928},
-uo_art_19929=3D{3545},
-tex_246=3D{1173,1174,1175,1176},
-uo_art_21266=3D{4882},
-uo_art_26688=3D{10304},
-tex_107=3D{85,86},
-uo_art_26618=3D{10234},
-uo_art_20350=3D{3966},
-uo_art_27484=3D{11100},
-uo_art_19632=3D{3248},
-tex_27=3D{1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885=
,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896},
-uo_art_20178=3D{3794},
-tex_101=3D{144,145,146,148,149,150,151,152,153,154,155,156,158,159,160,161=
,162,163,164,165,8645,8646,8647,8648,8649,8650,8651,8652},
-uo_art_26191=3D{9807},
-tex_306=3D{6183},
-uo_art_19130=3D{2746},
-uo_art_23789=3D{7405},
-uo_art_21808=3D{5424},
-tex_440=3D{3232,3233},
-tex_492=3D{3702},
-uo_art_17731=3D{1347},
-uo_art_20567=3D{4183},
-uo_art_24898=3D{8514},
-uo_art_21543=3D{5159},
-uo_art_22373=3D{5989},
-uo_art_22283=3D{5899},
-uo_art_29360=3D{12976},
-tex_116=3D{14,15},
-uo_art_21150=3D{4766},
-uo_art_32343=3D{15959},
-uo_art_18902=3D{2518},
-uo_art_20237=3D{3853},
-uo_art_21833=3D{5449},
-uo_art_22284=3D{5900},
-uo_art_21287=3D{4903},
-uo_art_26193=3D{9809},
-uo_art_20246=3D{3862},
-tex_131=3D{3065,3066},
-uo_art_20268=3D{3884},
-uo_art_30391=3D{14007},
-uo_art_30488=3D{14104},
-uo_art_20306=3D{3922},
-uo_art_20538=3D{4154},
-uo_art_19763=3D{3379},
-uo_art_30597=3D{14213},
-uo_art_19594=3D{3210},
-tex_568=3D{2,3,4,5,7575,7576,7772,7773},
-uo_art_23263=3D{6879},
-uo_art_29331=3D{12947},
-uo_art_20468=3D{4084},
-uo_art_24320=3D{7936},
-uo_art_19609=3D{3225},
-uo_art_19753=3D{3369},
-uo_art_19621=3D{3237},
-uo_art_32482=3D{16098},
-uo_art_21829=3D{5445},
-uo_art_20274=3D{3890},
-uo_art_32477=3D{16093},
-uo_art_32464=3D{16080},
-tex_288=3D{2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,209=
6,2097,2098,2099,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,213=
5,2136,2137,2138,2139},
-uo_art_19963=3D{3579},
-uo_art_21109=3D{4725},
-uo_art_21274=3D{4890},
-tex_403=3D{16010,16049},
-uo_art_21231=3D{4847},
-uo_art_32370=3D{15986},
-uo_art_21399=3D{5015},
-uo_art_32346=3D{15962},
-uo_art_32106=3D{15722},
-uo_art_20569=3D{4185},
-uo_art_32026=3D{15642},
-uo_art_24019=3D{7635},
-uo_art_32024=3D{15640},
-uo_art_30596=3D{14212},
-uo_art_26494=3D{10110},
-uo_art_25965=3D{9581},
-uo_art_21038=3D{4654},
-uo_art_21465=3D{5081},
-uo_art_30594=3D{14210},
-tex_548=3D{5468,5469,5470,5471},
-uo_art_26200=3D{9816},
-uo_art_21542=3D{5158},
-uo_art_30593=3D{14209},
-uo_art_30592=3D{14208},
-tex_379=3D{4291},
-uo_art_30591=3D{14207},
-uo_art_30590=3D{14206},
-uo_art_30589=3D{14205},
-tex_501=3D{5481,5482},
-uo_art_23787=3D{7403},
-uo_art_30587=3D{14203},
-uo_art_21477=3D{5093},
-uo_art_30583=3D{14199},
-uo_art_30582=3D{14198},
-uo_art_30581=3D{14197},
-uo_art_20708=3D{4324},
-uo_art_30579=3D{14195},
-uo_art_24231=3D{7847},
-uo_art_20235=3D{3851},
-uo_art_25355=3D{8971},
-uo_art_21161=3D{4777},
-uo_art_30577=3D{14193},
-uo_art_26530=3D{10146},
-uo_art_21476=3D{5092},
-uo_art_21571=3D{5187},
-uo_art_24330=3D{7946},
-uo_art_20984=3D{4600},
-uo_art_30568=3D{14184},
-uo_art_20171=3D{3787},
-uo_art_30567=3D{14183},
-uo_art_24335=3D{7951},
-tex_293=3D{5520,5672},
-uo_art_20164=3D{3780},
-uo_art_30566=3D{14182},
-uo_art_24331=3D{7947},
-uo_art_30565=3D{14181},
-uo_art_30564=3D{14180},
-tex_354=3D{4012},
-uo_art_24399=3D{8015},
-uo_art_21539=3D{5155},
-uo_art_24417=3D{8033},
-uo_art_22749=3D{6365},
-tex_215=3D{1381,1391},
-uo_art_30561=3D{14177},
-uo_art_19615=3D{3231},
-uo_art_30559=3D{14175},
-uo_art_26209=3D{9825},
-uo_art_19664=3D{3280},
-uo_art_30555=3D{14171},
-uo_art_20562=3D{4178},
-uo_art_26227=3D{9843},
-uo_art_30486=3D{14102},
-uo_art_30553=3D{14169},
-uo_art_30552=3D{14168},
-uo_art_30551=3D{14167},
-uo_art_23262=3D{6878},
-uo_art_20463=3D{4079},
-uo_art_21260=3D{4876},
-uo_art_20930=3D{4546},
-uo_art_24400=3D{8016},
-tex_230=3D{1217,1218,1219,1284,1286,1287},
-uo_art_30548=3D{14164},
-uo_art_18830=3D{2446},
-uo_art_23776=3D{7392},
-tex_342=3D{5350},
-tex_281=3D{3365,3366,3367,7964,7965,7966},
-uo_art_30545=3D{14161},
-uo_art_30544=3D{14160},
-uo_art_24375=3D{7991},
-uo_art_30540=3D{14156},
-tex_460=3D{4208,4209,4210,4211,4212,4213,4214,4215},
-uo_art_24318=3D{7934},
-tex_427=3D{3546},
-uo_art_30537=3D{14153},
-uo_art_30536=3D{14152},
-uo_art_30535=3D{14151},
-uo_art_24895=3D{8511},
-tex_179=3D{1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,166=
5,1666,1667,1668,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,174=
4,1745,1746,1747,1748},
-uo_art_24424=3D{8040},
-uo_art_26207=3D{9823},
-uo_art_23558=3D{7174},
-tex_358=3D{2783,2784,2785,2786},
-uo_art_30533=3D{14149},
-uo_art_30531=3D{14147},
-tex_470=3D{1117,1119,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,115=
1,1152},
-tex_504=3D{5540,5541,5651,5652},
-uo_art_24616=3D{8232},
-uo_art_23189=3D{6805},
-uo_art_22290=3D{5906},
-uo_art_30526=3D{14142},
-uo_art_30525=3D{14141},
-uo_art_30524=3D{14140},
-uo_art_19713=3D{3329},
-uo_art_26096=3D{9712},
-uo_art_30521=3D{14137},
-tex_418=3D{2977,2978},
-uo_art_30519=3D{14135},
-uo_art_30517=3D{14133},
-tex_72=3D{467,468},
-uo_art_30516=3D{14132},
-uo_art_30515=3D{14131},
-uo_art_23779=3D{7395},
-uo_art_30514=3D{14130},
-tex_117=3D{2866,2867},
-uo_art_20408=3D{4024},
-tex_311=3D{6178},
-uo_art_19771=3D{3387},
-uo_art_30505=3D{14121},
-uo_art_19630=3D{3246},
-uo_art_30498=3D{14114},
-uo_art_20298=3D{3914},
-uo_art_19641=3D{3257},
-uo_art_30497=3D{14113},
-uo_art_25190=3D{8806},
-uo_art_26205=3D{9821},
-uo_art_18919=3D{2535},
-uo_art_30494=3D{14110},
-uo_art_30493=3D{14109},
-uo_art_19590=3D{3206},
-uo_art_19738=3D{3354},
-uo_art_19912=3D{3528},
-uo_art_30491=3D{14107},
-uo_art_26685=3D{10301},
-uo_art_23992=3D{7608},
-uo_art_30389=3D{14005},
-uo_art_30487=3D{14103},
-tex_564=3D{1834,1835,1836,1837,1842,1843,1844,1845},
-uo_art_20368=3D{3984},
-uo_art_21414=3D{5030},
-uo_art_30485=3D{14101},
-uo_art_19610=3D{3226},
-tex_347=3D{5319,5320,5321,5322,5323,5324,5325,5326},
-uo_art_30484=3D{14100},
-uo_art_20126=3D{3742},
-uo_art_25186=3D{8802},
-uo_art_30481=3D{14097},
-uo_art_21583=3D{5199},
-uo_art_26212=3D{9828},
-uo_art_30479=3D{14095},
-uo_art_30474=3D{14090},
-uo_art_18847=3D{2463},
-uo_art_30473=3D{14089},
-uo_art_20162=3D{3778},
-uo_art_25196=3D{8812},
-uo_art_18814=3D{2430},
-uo_art_30415=3D{14031},
-uo_art_30414=3D{14030},
-uo_art_30410=3D{14026},
-uo_art_30407=3D{14023},
-uo_art_21234=3D{4850},
-uo_art_30405=3D{14021},
-uo_art_18815=3D{2431},
-uo_art_19527=3D{3143},
-uo_art_30403=3D{14019},
-uo_art_25354=3D{8970},
-uo_art_30400=3D{14016},
-uo_art_19966=3D{3582},
-tex_41=3D{971,972,973,974,985,986,987,988},
-uo_art_30399=3D{14015},
-uo_art_20574=3D{4190},
-tex_452=3D{5414},
-uo_art_21459=3D{5075},
-tex_16=3D{3798},
-uo_art_30395=3D{14011},
-uo_art_21282=3D{4898},
-uo_art_30393=3D{14009},
-uo_art_20300=3D{3916},
-uo_art_30390=3D{14006},
-uo_art_20231=3D{3847},
-uo_art_30388=3D{14004},
-uo_art_30387=3D{14003},
-uo_art_30385=3D{14001},
-uo_art_21313=3D{4929},
-uo_art_30045=3D{13661},
-uo_art_18937=3D{2553},
-uo_art_20619=3D{4235},
-tex_497=3D{5538,5539,5649,5650},
-uo_art_24057=3D{7673},
-uo_art_24196=3D{7812},
-uo_art_30042=3D{13658},
-uo_art_30041=3D{13657},
-uo_art_30035=3D{13651},
-tex_344=3D{5348},
-uo_art_30034=3D{13650},
-uo_art_20331=3D{3947},
-uo_art_30033=3D{13649},
-uo_art_30031=3D{13647},
-uo_art_26257=3D{9873},
-uo_art_30030=3D{13646},
-uo_art_30029=3D{13645},
-uo_art_29359=3D{12975},
-uo_art_25960=3D{9576},
-uo_art_23196=3D{6812},
-uo_art_29349=3D{12965},
-uo_art_26631=3D{10247},
-uo_art_19686=3D{3302},
-uo_art_29348=3D{12964},
-uo_art_29345=3D{12961},
-uo_art_20064=3D{3680},
-uo_art_29343=3D{12959},
-uo_art_19555=3D{3171},
-uo_art_19541=3D{3157},
-uo_art_20191=3D{3807},
-tex_44=3D{122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,=
138,139,140,141,142,143,711,712,713,714,715,716,717,718,719,720,721,722,723=
,724,725,726,727,728,729,852,853,854,855,856,857,858,859,860,861,862,863,86=
4,865,866,867,868,869},
-uo_art_29340=3D{12956},
-uo_art_29338=3D{12954},
-uo_art_24386=3D{8002},
-tex_167=3D{2989,2990},
-uo_art_29337=3D{12953},
-uo_art_20074=3D{3690},
-tex_83=3D{348,349},
-uo_art_19585=3D{3201},
-uo_art_29335=3D{12951},
-uo_art_29334=3D{12950},
-uo_art_26216=3D{9832},
-uo_art_29332=3D{12948},
-uo_art_23518=3D{7134},
-uo_art_29330=3D{12946},
-uo_art_19559=3D{3175},
-uo_art_29329=3D{12945},
-uo_art_19762=3D{3378},
-uo_art_23955=3D{7571},
-uo_art_29328=3D{12944},
-uo_art_29326=3D{12942},
-uo_art_19660=3D{3276},
-uo_art_29325=3D{12941},
-uo_art_29324=3D{12940},
-uo_art_26276=3D{9892},
-uo_art_21545=3D{5161},
-uo_art_26975=3D{10591},
-uo_art_29320=3D{12936},
-uo_art_19720=3D{3336},
-uo_art_29319=3D{12935},
-uo_art_29318=3D{12934},
-uo_art_22303=3D{5919},
-uo_art_24434=3D{8050},
-uo_art_20021=3D{3637},
-uo_art_25187=3D{8803},
-uo_art_21473=3D{5089},
-tex_133=3D{3061,3062},
-uo_art_29175=3D{12791},
-uo_art_29174=3D{12790},
-uo_art_26211=3D{9827},
-uo_art_29076=3D{12692},
-uo_art_29063=3D{12679},
-uo_art_29034=3D{12650},
-uo_art_27998=3D{11614},
-uo_art_27993=3D{11609},
-uo_art_27492=3D{11108},
-uo_art_27491=3D{11107},
-uo_art_20062=3D{3678},
-uo_art_26298=3D{9914},
-uo_art_26208=3D{9824},
-uo_art_27489=3D{11105},
-uo_art_27486=3D{11102},
-uo_art_21311=3D{4927},
-uo_art_27476=3D{11092},
-uo_art_24390=3D{8006},
-uo_art_27475=3D{11091},
-uo_art_27469=3D{11085},
-uo_art_27467=3D{11083},
-uo_art_21486=3D{5102},
-uo_art_27464=3D{11080},
-uo_art_20161=3D{3777},
-uo_art_20025=3D{3641},
-uo_art_21544=3D{5160},
-tex_161=3D{3001,3002},
-uo_art_25201=3D{8817},
-uo_art_25208=3D{8824},
-uo_art_27463=3D{11079},
-uo_art_27460=3D{11076},
-tex_466=3D{2604,2612},
-uo_art_27458=3D{11074},
-uo_art_27456=3D{11072},
-tex_127=3D{3073,3074},
-uo_art_27454=3D{11070},
-uo_art_29323=3D{12939},
-uo_art_26974=3D{10590},
-uo_art_26934=3D{10550},
-uo_art_26689=3D{10305},
-uo_art_20615=3D{4231},
-uo_art_26687=3D{10303},
-tex_145=3D{3037,3038},
-uo_art_24411=3D{8027},
-uo_art_24382=3D{7998},
-uo_art_24094=3D{7710},
-uo_art_30490=3D{14106},
-uo_art_20638=3D{4254},
-uo_art_23967=3D{7583},
-uo_art_26614=3D{10230},
-uo_art_19546=3D{3162},
-uo_art_26612=3D{10228},
-uo_art_26611=3D{10227},
-uo_art_26610=3D{10226},
-uo_art_24102=3D{7718},
-uo_art_21456=3D{5072},
-uo_art_25147=3D{8763},
-tex_369=3D{3822},
-uo_art_25719=3D{9335},
-uo_art_26588=3D{10204},
-uo_art_21569=3D{5185},
-uo_art_20570=3D{4186},
-tex_303=3D{2760,13639,13640,13641,13642,13643,13644},
-tex_249=3D{1871,2015,2016,2100,2166},
-uo_art_19752=3D{3368},
-uo_art_25148=3D{8764},
-tex_250=3D{1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,186=
0,1861,1862,1863,1864},
-tex_168=3D{2987,2988},
-uo_art_20550=3D{4166},
-uo_art_24383=3D{7999},
-uo_art_26579=3D{10195},
-tex_201=3D{1523,1524,1525,1526,11333,11334,11335,11336},
-uo_art_19543=3D{3159},
-uo_art_23413=3D{7029},
-tex_524=3D{1993,1997},
-uo_art_24389=3D{8005},
-uo_art_19029=3D{2645},
-uo_art_26566=3D{10182},
-uo_art_26535=3D{10151},
-uo_art_26532=3D{10148},
-uo_art_26531=3D{10147},
-uo_art_22298=3D{5914},
-uo_art_23170=3D{6786},
-uo_art_30575=3D{14191},
-uo_art_26513=3D{10129},
-uo_art_26504=3D{10120},
-uo_art_26499=3D{10115},
-uo_art_26385=3D{10001},
-uo_art_26384=3D{10000},
-uo_art_26319=3D{9935},
-uo_art_26318=3D{9934},
-uo_art_24045=3D{7661},
-uo_art_26317=3D{9933},
-uo_art_26315=3D{9931},
-uo_art_26314=3D{9930},
-uo_art_26313=3D{9929},
-uo_art_21164=3D{4780},
-uo_art_25983=3D{9599},
-uo_art_26310=3D{9926},
-uo_art_26308=3D{9924},
-uo_art_26190=3D{9806},
-uo_art_26306=3D{9922},
-uo_art_26304=3D{9920},
-uo_art_18899=3D{2515},
-uo_art_26303=3D{9919},
-tex_521=3D{5504,5505},
-uo_art_25419=3D{9035},
-uo_art_27490=3D{11106},
-uo_art_26296=3D{9912},
-uo_art_20249=3D{3865},
-uo_art_26295=3D{9911},
-uo_art_26293=3D{9909},
-uo_art_19922=3D{3538},
-uo_art_26292=3D{9908},
-tex_63=3D{438,439,440,444,445,556,557,558,559,1074,1077},
-uo_art_26290=3D{9906},
-uo_art_26289=3D{9905},
-uo_art_24374=3D{7990},
-tex_446=3D{3282,3292,3325,3483,3495,3499},
-uo_art_26288=3D{9904},
-tex_292=3D{5523,5673},
-tex_500=3D{5472,5473,5474,5475,5480,5483},
-uo_art_20317=3D{3933},
-uo_art_26275=3D{9891},
-uo_art_26274=3D{9890},
-uo_art_24381=3D{7997},
-uo_art_26273=3D{9889},
-uo_art_26269=3D{9885},
-uo_art_26256=3D{9872},
-uo_art_26254=3D{9870},
-uo_art_18938=3D{2554},
-uo_art_25971=3D{9587},
-uo_art_20705=3D{4321},
-uo_art_26251=3D{9867},
-uo_art_26197=3D{9813},
-uo_art_26246=3D{9862},
-tex_436=3D{2146,2147,2148,2186,2187},
-uo_art_26244=3D{9860},
-uo_art_23048=3D{6664},
-uo_art_26240=3D{9856},
-uo_art_19644=3D{3260},
-uo_art_19556=3D{3172},
-uo_art_26236=3D{9852},
-uo_art_22368=3D{5984},
-tex_535=3D{2702,3506},
-uo_art_21464=3D{5080},
-uo_art_30574=3D{14190},
-uo_art_26232=3D{9848},
-uo_art_21143=3D{4759},
-uo_art_26231=3D{9847},
-uo_art_26228=3D{9844},
-uo_art_26226=3D{9842},
-uo_art_26225=3D{9841},
-uo_art_26221=3D{9837},
-tex_162=3D{2999,3000},
-uo_art_26219=3D{9835},
-uo_art_19581=3D{3197},
-uo_art_22759=3D{6375},
-tex_70=3D{511,512,513,517,518},
-uo_art_21269=3D{4885},
-uo_art_20263=3D{3879},
-uo_art_26214=3D{9830},
-uo_art_24027=3D{7643},
-tex_24=3D{166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,=
182,183,184,185,186,187,188,189,190,191,192,193,194,836,837,838,839,840,841=
,842,843,844,845,846,847,848,849,850,851,1981,1982,1983,1984,1985,1986,1987=
,1988,1989,1990},
-tex_81=3D{344,345,346,347,348,349,356,357,358,359,394,395,396,397},
-uo_art_20230=3D{3846},
-uo_art_21497=3D{5113},
-uo_art_30478=3D{14094},
-uo_art_29173=3D{12789},
-uo_art_26210=3D{9826},
-uo_art_20360=3D{3976},
-uo_art_19654=3D{3270},
-uo_art_26206=3D{9822},
-uo_art_26203=3D{9819},
-uo_art_26201=3D{9817},
-uo_art_20201=3D{3817},
-uo_art_19122=3D{2738},
-uo_art_26199=3D{9815},
-uo_art_26196=3D{9812},
-uo_art_26195=3D{9811},
-uo_art_24328=3D{7944},
-uo_art_26192=3D{9808},
-uo_art_18802=3D{2418},
-uo_art_26189=3D{9805},
-uo_art_20563=3D{4179},
-uo_art_26188=3D{9804},
-uo_art_26187=3D{9803},
-uo_art_21162=3D{4778},
-tex_339=3D{6096,6097,6101,6102},
-uo_art_26179=3D{9795},
-tex_158=3D{3007,3008},
-tex_243=3D{1223,1237},
-tex_233=3D{1268,1269,1270,1271},
-uo_art_26177=3D{9793},
-uo_art_19554=3D{3170},
-uo_art_26099=3D{9715},
-tex_310=3D{6179},
-uo_art_26098=3D{9714},
-uo_art_23202=3D{6818},
-uo_art_20643=3D{4259},
-uo_art_19537=3D{3153},
-uo_art_20245=3D{3861},
-uo_art_30523=3D{14139},
-uo_art_21512=3D{5128},
-uo_art_26095=3D{9711},
-uo_art_20241=3D{3857},
-uo_art_26094=3D{9710},
-uo_art_19683=3D{3299},
-uo_art_20642=3D{4258},
-uo_art_26090=3D{9706},
-uo_art_19918=3D{3534},
-uo_art_25171=3D{8787},
-uo_art_19689=3D{3305},
-uo_art_18900=3D{2516},
-uo_art_26088=3D{9704},
-uo_art_26084=3D{9700},
-uo_art_23786=3D{7402},
-tex_566=3D{36,37,38,39},
-uo_art_25177=3D{8793},
-uo_art_19631=3D{3247},
-uo_art_26070=3D{9686},
-tex_197=3D{1389,1390,1579,1580},
-tex_89=3D{144,147,150,151,154,157,160,161,325,326,327,328},
-uo_art_26312=3D{9928},
-uo_art_21316=3D{4932},
-tex_260=3D{2881,2882,2883,2884,3707,5465,6039,6040,6041,6042,6043,6044,134=
22,13423,13424,13425,13426,13427,13428,13429,13430,13431,13432,13433,13434,=
13435,13436,13437,13438,13439,13440,13441,13442,13443,13444,13445,13456,134=
57,13458,13459,13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,=
13470,13471,13472,13473,13474,13475,13476,13477,13478,13479,13480,13481,134=
82,13483,13493,13494,13496,13497,13498,13499,13501,13502,13503,13504,13506,=
13507,13508,13509,13511,13512,13513,13514,13521,13522,13523,13524,13525,135=
49,13550,13551,13552,13553,13554,13555,13556,13557,13558,13559,13560,13561,=
13562,13563,13564,13565,13566,13567,13568,13569,13570,13571,13572,13573,135=
74,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586,=
13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,135=
99,13600,13601,13602,13603,13604,13605,13606,13607,13608},
-uo_art_25981=3D{9597},
-uo_art_25980=3D{9596},
-uo_art_25979=3D{9595},
-uo_art_25978=3D{9594},
-uo_art_25977=3D{9593},
-tex_10=3D{3796,3797},
-uo_art_25975=3D{9591},
-uo_art_25973=3D{9589},
-uo_art_24339=3D{7955},
-uo_art_19030=3D{2646},
-uo_art_25970=3D{9586},
-tex_431=3D{3550},
-uo_art_25969=3D{9585},
-uo_art_21481=3D{5097},
-tex_363=3D{2798,2799,2800,2801},
-uo_art_18869=3D{2485},
-uo_art_20349=3D{3965},
-tex_430=3D{3549},
-uo_art_21480=3D{5096},
-uo_art_25967=3D{9583},
-uo_art_24255=3D{7871},
-uo_art_30595=3D{14211},
-uo_art_19538=3D{3154},
-uo_art_19530=3D{3146},
-uo_art_25961=3D{9577},
-uo_art_21541=3D{5157},
-tex_213=3D{1429},
-uo_art_25957=3D{9573},
-tex_193=3D{1539,1540,1541,1542,1543,1544,1545,1546,1551,1552,1553,1554,155=
5,1556,1587,1588,1612,1613,1614},
-uo_art_21106=3D{4722},
-uo_art_18834=3D{2450},
-uo_art_25954=3D{9570},
-uo_art_25953=3D{9569},
-uo_art_25951=3D{9567},
-uo_art_23521=3D{7137},
-uo_art_25948=3D{9564},
-uo_art_25191=3D{8807},
-tex_401=3D{1189,1190,1191,1192},
-uo_art_25947=3D{9563},
-uo_art_22306=3D{5922},
-uo_art_25946=3D{9562},
-uo_art_25944=3D{9560},
-uo_art_25943=3D{9559},
-uo_art_25942=3D{9558},
-uo_art_20525=3D{4141},
-tex_349=3D{5303,5304,5305,5306,5307,5308,5309,5310},
-uo_art_21261=3D{4877},
-uo_art_25941=3D{9557},
-uo_art_25940=3D{9556},
-uo_art_25835=3D{9451},
-uo_art_25833=3D{9449},
-uo_art_25832=3D{9448},
-uo_art_25830=3D{9446},
-tex_389=3D{2750},
-uo_art_25825=3D{9441},
-tex_556=3D{9150},
-uo_art_25421=3D{9037},
-uo_art_21420=3D{5036},
-tex_372=3D{2848,2852},
-uo_art_26300=3D{9916},
-uo_art_25360=3D{8976},
-uo_art_25359=3D{8975},
-uo_art_25358=3D{8974},
-uo_art_25356=3D{8972},
-uo_art_25353=3D{8969},
-uo_art_17745=3D{1361},
-uo_art_20561=3D{4177},
-tex_21=3D{1823,1846,1847,1865,1866,1867,1868,1869,1870,1871,1922,1923,1952=
,1953,1954,2015,2016,2100,2166},
-uo_art_20071=3D{3687},
-uo_art_22305=3D{5921},
-uo_art_20566=3D{4182},
-uo_art_25351=3D{8967},
-uo_art_25212=3D{8828},
-uo_art_22315=3D{5931},
-uo_art_27480=3D{11096},
-uo_art_25207=3D{8823},
-uo_art_21163=3D{4779},
-uo_art_18898=3D{2514},
-tex_308=3D{6181},
-uo_art_25206=3D{8822},
-uo_art_26234=3D{9850},
-tex_202=3D{1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,148=
6,1487,1488,11316,11317},
-uo_art_25205=3D{8821},
-uo_art_21238=3D{4854},
-uo_art_25204=3D{8820},
-uo_art_21822=3D{5438},
-uo_art_26097=3D{9713},
-uo_art_17723=3D{1339},
-tex_429=3D{3548},
-tex_53=3D{661,662},
-uo_art_22764=3D{6380},
-uo_art_25202=3D{8818},
-uo_art_19582=3D{3198},
-uo_art_18801=3D{2417},
-uo_art_17726=3D{1342},
-uo_art_21358=3D{4974},
-uo_art_30404=3D{14020},
-uo_art_23492=3D{7108},
-uo_art_25156=3D{8772},
-uo_art_25199=3D{8815},
-tex_461=3D{4171,4172},
-tex_192=3D{1535,1536,1537,1538,1539,1540,1541,1542,1543,1545,1546,1547,154=
8,1549,1550,1551,1552,1553,1554,1555,1556,1587,1588,1612,1613,1614},
-uo_art_25195=3D{8811},
-uo_art_21585=3D{5201},
-uo_art_25194=3D{8810},
-uo_art_20539=3D{4155},
-uo_art_25151=3D{8767},
-uo_art_21570=3D{5186},
-uo_art_24387=3D{8003},
-uo_art_30496=3D{14112},
-tex_274=3D{2207,2208,2209,2210,2211,2212},
-uo_art_26178=3D{9794},
-uo_art_29176=3D{12792},
-tex_506=3D{2482,3701},
-uo_art_21814=3D{5430},
-uo_art_20513=3D{4129},
-uo_art_30483=3D{14099},
-uo_art_25184=3D{8800},
-uo_art_21737=3D{5353},
-uo_art_19584=3D{3200},
-uo_art_24391=3D{8007},
-uo_art_25176=3D{8792},
-uo_art_25172=3D{8788},
-uo_art_21743=3D{5359},
-uo_art_26574=3D{10190},
-uo_art_25162=3D{8778},
-tex_32=3D{1802,1803,1804,1805},
-uo_art_25161=3D{8777},
-tex_374=3D{3713,3714,3721,3722,5108,5109},
-uo_art_21425=3D{5041},
-uo_art_25157=3D{8773},
-uo_art_30563=3D{14179},
-tex_239=3D{1222,1227,1236,1244,1245},
-uo_art_30558=3D{14174},
-uo_art_21110=3D{4726},
-uo_art_20251=3D{3867},
-tex_146=3D{3035,3036},
-uo_art_25152=3D{8768},
-uo_art_18922=3D{2538},
-uo_art_25192=3D{8808},
-uo_art_19550=3D{3166},
-uo_art_22300=3D{5916},
-uo_art_21509=3D{5125},
-tex_453=3D{12813,12814,12826,12832,12833,12834,12835,12836,12838,12839,128=
40,12841,12842,12854,12865,12906,12907,12908,12909,12910,12911},
-uo_art_21499=3D{5115},
-uo_art_20024=3D{3640},
-uo_art_25146=3D{8762},
-tex_69=3D{512,513,514,517,518},
-uo_art_19756=3D{3372},
-uo_art_24095=3D{7711},
-uo_art_24899=3D{8515},
-uo_art_19770=3D{3386},
-uo_art_21159=3D{4775},
-tex_291=3D{5522,5674},
-uo_art_19721=3D{3337},
-uo_art_18807=3D{2423},
-tex_294=3D{5521,5671},
-uo_art_20367=3D{3983},
-uo_art_23414=3D{7030},
-uo_art_24896=3D{8512},
-uo_art_19116=3D{2732},
-uo_art_24858=3D{8474},
-uo_art_19993=3D{3609},
-uo_art_18812=3D{2428},
-uo_art_19533=3D{3149},
-uo_art_23565=3D{7181},
-uo_art_30492=3D{14108},
-uo_art_21450=3D{5066},
-tex_187=3D{1401,1402,1403,1404,1405,1406,1620,1621,1624,1625},
-tex_407=3D{2940,2959},
-uo_art_24366=3D{7982},
-uo_art_19593=3D{3209},
-uo_art_24783=3D{8399},
-uo_art_24654=3D{8270},
-tex_257=3D{3644,3645},
-uo_art_21230=3D{4846},
-tex_487=3D{7139,7140,7141,7142,7143,7144},
-uo_art_24610=3D{8226},
-uo_art_26091=3D{9707},
-uo_art_30529=3D{14145},
-uo_art_24608=3D{8224},
-uo_art_18833=3D{2449},
-tex_271=3D{2711,2712,2713,2714,2715,2716,2717,2718},
-uo_art_25964=3D{9580},
-uo_art_23515=3D{7131},
-uo_art_24600=3D{8216},
-uo_art_24433=3D{8049},
-uo_art_23509=3D{7125},
-uo_art_24586=3D{8202},
-uo_art_24582=3D{8198},
-uo_art_24579=3D{8195},
-uo_art_24573=3D{8189},
-uo_art_19552=3D{3168},
-uo_art_24482=3D{8098},
-uo_art_20213=3D{3829},
-uo_art_20495=3D{4111},
-tex_562=3D{254,255,256,257,258,259,1085,1086,1087,1088},
-uo_art_24443=3D{8059},
-uo_art_18895=3D{2511},
-uo_art_24384=3D{8000},
-uo_art_24431=3D{8047},
-uo_art_24430=3D{8046},
-uo_art_18916=3D{2532},
-uo_art_24428=3D{8044},
-tex_52=3D{667,668},
-uo_art_24337=3D{7953},
-uo_art_26233=3D{9849},
-uo_art_19754=3D{3370},
-tex_279=3D{2663,2666},
-uo_art_24423=3D{8039},
-uo_art_20172=3D{3788},
-uo_art_25200=3D{8816},
-uo_art_24421=3D{8037},
-uo_art_24420=3D{8036},
-uo_art_26089=3D{9705},
-uo_art_21245=3D{4861},
-uo_art_19624=3D{3240},
-uo_art_19734=3D{3350},
-uo_art_20257=3D{3873},
-uo_art_20618=3D{4234},
-uo_art_21826=3D{5442},
-uo_art_19735=3D{3351},
-uo_art_21267=3D{4883},
-tex_420=3D{2973,2974},
-uo_art_24410=3D{8026},
-uo_art_24409=3D{8025},
-uo_art_24408=3D{8024},
-uo_art_21755=3D{5371},
-uo_art_17739=3D{1355},
-uo_art_20968=3D{4584},
-tex_395=3D{2797},
-uo_art_24406=3D{8022},
-uo_art_24404=3D{8020},
-uo_art_22313=3D{5929},
-uo_art_22026=3D{5642},
-tex_447=3D{3230,3281,3284,3291,3321,3324,3327,3330,3477,3485,3489,3497},
-tex_42=3D{872,873,874,876,877,878,879,880,881},
-tex_270=3D{5950},
-uo_art_24403=3D{8019},
-uo_art_24402=3D{8018},
-uo_art_24325=3D{7941},
-uo_art_24195=3D{7811},
-uo_art_24395=3D{8011},
-tex_300=3D{5511,5662},
-uo_art_21460=3D{5076},
-uo_art_20967=3D{4583},
-uo_art_21537=3D{5153},
-uo_art_20065=3D{3681},
-tex_105=3D{131,133,141,143},
-uo_art_26237=3D{9853},
-tex_1=3D{3512,3513},
-uo_art_25209=3D{8825},
-uo_art_21233=3D{4849},
-uo_art_21504=3D{5120},
-tex_259=3D{2472,3712},
-tex_88=3D{316,317,318,319,320,329},
-uo_art_24900=3D{8516},
-tex_375=3D{3568,3569},
-uo_art_19876=3D{3492},
-uo_art_21495=3D{5111},
-tex_169=3D{2985,2986},
-tex_277=3D{2653,2659},
-uo_art_19580=3D{3196},
-uo_art_21102=3D{4718},
-tex_408=3D{2478,2479,2519,2520,2521,2522,2523,2585},
-tex_206=3D{1462,1463,1464,1465,1467,1468,1469,1470},
-uo_art_19887=3D{3503},
-uo_art_30549=3D{14165},
-uo_art_22299=3D{5915},
-uo_art_21513=3D{5129},
-uo_art_24379=3D{7995},
-tex_523=3D{330,331},
-uo_art_24377=3D{7993},
-uo_art_24370=3D{7986},
-uo_art_30043=3D{13659},
-uo_art_30543=3D{14159},
-tex_199=3D{1520,1532,11330,11342},
-uo_art_19125=3D{2741},
-tex_530=3D{2420,2421,8296,8314},
-tex_0=3D{669,2868,2869,2870,2871,2872,2873,2874,2876,2877,2878,2879,2880,2=
881,2882,2883,2884,2911,2912,2913,2917,2918,2919,2928,2929,2930,2933,2934,2=
935,2936,2937,2938,2939,2947,2948,2949,2952,2953,2954,2955,2956,2957,2958,4=
495,4496,4497,4498,16004,16005,16006,16007,16009,16050,16083,16084,16085},
-uo_art_20090=3D{3706},
-tex_314=3D{6175},
-tex_47=3D{577,578,579,580,581,582,583,584,585,586,761,762,763,764,765,766,=
767,768,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803},
-uo_art_19521=3D{3137},
-uo_art_24371=3D{7987},
-uo_art_21437=3D{5053},
-tex_136=3D{3055,3056},
-uo_art_26593=3D{10209},
-tex_49=3D{685,686},
-uo_art_19999=3D{3615},
-uo_art_20529=3D{4145},
-tex_572=3D{1842,1843,1844,1845},
-tex_490=3D{3903,3904,3905,3906,7163,7164,7165,7166},
-uo_art_30562=3D{14178},
-uo_art_21443=3D{5059},
-uo_art_21466=3D{5082},
-tex_51=3D{679,680,681,682,683,684},
-uo_art_19958=3D{3574},
-tex_99=3D{174,175,176,177,178,179,180,181},
-uo_art_19629=3D{3245},
-uo_art_24357=3D{7973},
-uo_art_18871=3D{2487},
-uo_art_24098=3D{7714},
-uo_art_19651=3D{3267},
-uo_art_24042=3D{7658},
-uo_art_20233=3D{3849},
-uo_art_24396=3D{8012},
-uo_art_23971=3D{7587},
-uo_art_24355=3D{7971},
-uo_art_19128=3D{2744},
-uo_art_24343=3D{7959},
-tex_80=3D{371,373,374,375,376,377,378,379,380,381,420},
-uo_art_24342=3D{7958},
-uo_art_18809=3D{2425},
-uo_art_19880=3D{3496},
-tex_449=3D{4609,4610,4611,4612,4613,4614,4615,4616,4617,4618,4619,4620},
-tex_367=3D{3819},
-uo_art_19625=3D{3241},
-uo_art_30506=3D{14122},
-tex_350=3D{5295,5296,5297,5298,5299,5300,5301,5302},
-uo_art_20422=3D{4038},
-uo_art_21300=3D{4916},
-uo_art_24336=3D{7952},
-uo_art_19033=3D{2649},
-uo_art_21467=3D{5083},
-uo_art_19536=3D{3152},
-uo_art_19924=3D{3540},
-uo_art_24333=3D{7949},
-tex_268=3D{3650,3651},
-tex_445=3D{3279,3285,3301,3304,3322,3328,3331,3479,3487,3491},
-uo_art_23508=3D{7124},
-uo_art_23988=3D{7604},
-uo_art_22292=3D{5908},
-uo_art_19114=3D{2730},
-uo_art_20193=3D{3809},
-uo_art_21511=3D{5127},
-tex_3=3D{1880},
-tex_228=3D{1289,1290},
-uo_art_20173=3D{3789},
-uo_art_19896=3D{3512},
-uo_art_30539=3D{14155},
-uo_art_24254=3D{7870},
-uo_art_19640=3D{3256},
-uo_art_20634=3D{4250},
-uo_art_24252=3D{7868},
-uo_art_24240=3D{7856},
-uo_art_30578=3D{14194},
-uo_art_20406=3D{4022},
-tex_129=3D{3031,3032,3069,3070},
-uo_art_18800=3D{2416},
-tex_498=3D{5546,5547,5657,5658},
-tex_554=3D{7777,7784},
-uo_art_19775=3D{3391},
-uo_art_19716=3D{3332},
-tex_483=3D{7754,7764},
-tex_484=3D{7735,7745},
-uo_art_20519=3D{4135},
-uo_art_20964=3D{4580},
-tex_485=3D{7726,7727,7728,7729,7730,7731},
-tex_558=3D{511,512,513,517,518},
-tex_220=3D{1313,1314,1315,1316},
-uo_art_20573=3D{4189},
-uo_art_21363=3D{4979},
-uo_art_24103=3D{7719},
-uo_art_26598=3D{10214},
-uo_art_24099=3D{7715},
-uo_art_24356=3D{7972},
-uo_art_24097=3D{7713},
-uo_art_26686=3D{10302},
-uo_art_24093=3D{7709},
-uo_art_19129=3D{2745},
-tex_50=3D{661,662,663,664,665,666,667,668,679,680,681,682,683,684,685,686},
-uo_art_24091=3D{7707},
-uo_art_19529=3D{3145},
-tex_4=3D{16,17,18,20,21,22,24,25,506,507,508,509,947,948,949,2719,2720,272=
1,2722,2723,2724,2725,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,282=
3,2824,2825,2826,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,284=
0,8657,8658,8659,8660},
-tex_212=3D{1432,1433,1434,1435},
-uo_art_20217=3D{3833},
-uo_art_24090=3D{7706},
-uo_art_19764=3D{3380},
-uo_art_20104=3D{3720},
-uo_art_18880=3D{2496},
-uo_art_19127=3D{2743},
-tex_313=3D{6176},
-tex_180=3D{1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,171=
3,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,172=
8,1729,1730,1731,1732,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,216=
0,2161,2162,2163,2164,2165},
-uo_art_19920=3D{3536},
-uo_art_24086=3D{7702},
-tex_519=3D{299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314=
,315,321,322,323,324,329,333,334,336,337,342,343,924,925,926},
-tex_426=3D{3307,3308,3309,3311,3312,3313},
-uo_art_24059=3D{7675},
-uo_art_20215=3D{3831},
-tex_48=3D{496,497,498,500,501,502,503,504,505,734,735,736,738,739,740,741,=
742,743,744,745,746,747,748},
-tex_236=3D{1262,1263,1264,1265},
-uo_art_24054=3D{7670},
-uo_art_22967=3D{6583},
-uo_art_21374=3D{4990},
-tex_319=3D{6153},
-uo_art_22024=3D{5640},
-tex_86=3D{335,338,339},
-uo_art_21474=3D{5090},
-uo_art_21115=3D{4731},
-tex_439=3D{3826},
-uo_art_24049=3D{7665},
-uo_art_21445=3D{5061},
-uo_art_17008=3D{624},
-uo_art_19905=3D{3521},
-uo_art_19925=3D{3541},
-uo_art_21424=3D{5040},
-uo_art_22370=3D{5986},
-uo_art_19646=3D{3262},
-uo_art_24044=3D{7660},
-uo_art_21292=3D{4908},
-uo_art_24043=3D{7659},
-tex_278=3D{2662,2665},
-uo_art_19579=3D{3195},
-tex_489=3D{7157,7158,7159,7160,7161,7162},
-tex_181=3D{1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,169=
7,1698,1699,1700},
-uo_art_17012=3D{628},
-uo_art_24038=3D{7654},
-uo_art_24444=3D{8060},
-tex_471=3D{895,896,897,899,900,901,902,903,904,905},
-uo_art_20405=3D{4021},
-uo_art_19123=3D{2739},
-uo_art_25197=3D{8813},
-uo_art_19526=3D{3142},
-uo_art_23519=3D{7135},
-tex_19=3D{2860,2861,4169,4170,15871,15872},
-uo_art_23986=3D{7602},
-tex_551=3D{1872,2325,2326,2327,2328},
-uo_art_24033=3D{7649},
-uo_art_24030=3D{7646},
-uo_art_24028=3D{7644},
-tex_200=3D{1527,1528,1529,1530,1531,11337,11338,11339,11340,11341},
-uo_art_20386=3D{4002},
-uo_art_24022=3D{7638},
-tex_570=3D{3293},
-uo_art_24021=3D{7637},
-uo_art_19907=3D{3523},
-tex_59=3D{594,595,596},
-uo_art_30489=3D{14105},
-tex_351=3D{5287,5288,5289,5290,5291,5292,5293,5294},
-tex_532=3D{2581,2582,2583,2586,2587,2588,2594,2595,2596},
-uo_art_19899=3D{3515},
-uo_art_17732=3D{1348},
-uo_art_24039=3D{7655},
-uo_art_20270=3D{3886},
-uo_art_17730=3D{1346},
-uo_art_22295=3D{5911},
-uo_art_26569=3D{10185},
-tex_280=3D{2887,2888},
-uo_art_20240=3D{3856},
-uo_art_23047=3D{6663},
-uo_art_26252=3D{9868},
-uo_art_19502=3D{3118},
-uo_art_20260=3D{3876},
-uo_art_23981=3D{7597},
-tex_196=3D{1369,1582},
-tex_13=3D{3612,4013},
-uo_art_19478=3D{3094},
-uo_art_23970=3D{7586},
-uo_art_23969=3D{7585},
-uo_art_29342=3D{12958},
-tex_242=3D{1224,1229,1238},
-uo_art_23957=3D{7573},
-tex_329=3D{6124},
-uo_art_23952=3D{7568},
-uo_art_20413=3D{4029},
-uo_art_23951=3D{7567},
-uo_art_23950=3D{7566},
-uo_art_19643=3D{3259},
-uo_art_23188=3D{6804},
-uo_art_19604=3D{3220},
-uo_art_23948=3D{7564},
-uo_art_23947=3D{7563},
-uo_art_17738=3D{1354},
-tex_157=3D{3009,3010},
-uo_art_24338=3D{7954},
-uo_art_23792=3D{7408},
-uo_art_25950=3D{9566},
-uo_art_29356=3D{12972},
-uo_art_19927=3D{3543},
-uo_art_21256=3D{4872},
-uo_art_21538=3D{5154},
-uo_art_23777=3D{7393},
-tex_93=3D{264,265},
-uo_art_30546=3D{14162},
-uo_art_21455=3D{5071},
-uo_art_23774=3D{7390},
-tex_565=3D{248,249,250,251,252,253,258,259,264,265,270,271,272,273,283,284=
,285,669,1080,1081,1082,1083,1084,7978},
-uo_art_19659=3D{3275},
-uo_art_21290=3D{4906},
-tex_142=3D{3043,3044},
-uo_art_23563=3D{7179},
-tex_273=3D{1115,1116,7623,7624,7625,7626,7627,7628},
-uo_art_23555=3D{7171},
-uo_art_23553=3D{7169},
-uo_art_20060=3D{3676},
-uo_art_21293=3D{4909},
-uo_art_23552=3D{7168},
-uo_art_19937=3D{3553},
-uo_art_20179=3D{3795},
-uo_art_22293=3D{5909},
-tex_38=3D{983,984,993,994},
-tex_33=3D{1182,1184},
-uo_art_30520=3D{14136},
-uo_art_20530=3D{4146},
-uo_art_21273=3D{4889},
-uo_art_20291=3D{3907},
-uo_art_20123=3D{3739},
-uo_art_19897=3D{3513},
-uo_art_23266=3D{6882},
-uo_art_20002=3D{3618},
-uo_art_17740=3D{1356},
-uo_art_17009=3D{625},
-tex_182=3D{1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,168=
1,1682,1683,1684,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,818=
4,8185,8186,8187,8188},
-tex_553=3D{7038},
-uo_art_19757=3D{3373},
-uo_art_23418=3D{7034},
-uo_art_32459=3D{16075},
-tex_92=3D{252,253,254,255,256,257,258,259,264,265,283,284,285,286,287,288,=
7978},
-tex_64=3D{545,546,547,550,551,552,553,554,555,1057,1058,1059,1060,1061,107=
2,1073},
-tex_223=3D{1301,1302,1303,1304},
-tex_154=3D{3015,3016},
-uo_art_23324=3D{6940},
-tex_144=3D{3039,3040},
-uo_art_24327=3D{7943},
-tex_232=3D{1272,1273,1274,1275},
-uo_art_24574=3D{8190},
-uo_art_19503=3D{3119},
-uo_art_23264=3D{6880},
-uo_art_18852=3D{2468},
-uo_art_23261=3D{6877},
-uo_art_18909=3D{2525},
-uo_art_23571=3D{7187},
-tex_87=3D{332,333,334,336,337},
-uo_art_21276=3D{4892},
-tex_35=3D{661,662,667,668,669,671,672,679,680,681,685,686,697,698,699,700,=
1094,1095,1096,1097,1098},
-tex_6=3D{3703,3707,3711,3715,4011,4014,5453,7861},
-tex_448=3D{6522,6523,6524,6525,6530,6531,6532,6533,6534,6535,6536,6537,654=
2,6543,6544,6545,6546,6547,6548,6549,6554,6555,6556,6557,6558,6559,6560,656=
1,6566,6567,6568,6569},
-uo_art_20548=3D{4164},
-uo_art_19921=3D{3537},
-uo_art_20068=3D{3684},
-uo_art_18974=3D{2590},
-uo_art_21105=3D{4721},
-uo_art_30528=3D{14144},
-uo_art_23176=3D{6792},
-tex_511=3D{2961,2964},
-uo_art_20932=3D{4548},
-uo_art_20004=3D{3620},
-uo_art_26241=3D{9857},
-tex_123=3D{3083,3084},
-uo_art_24897=3D{8513},
-uo_art_21250=3D{4866},
-tex_245=3D{1169,1170,1171,1172,1179,1180},
-tex_227=3D{1291,1292},
-uo_art_20281=3D{3897},
-uo_art_24060=3D{7676},
-tex_247=3D{1952,1953,1954,2010,2015,2016,2100,2166},
-uo_art_23958=3D{7574},
-uo_art_20633=3D{4249},
-tex_151=3D{3021,3022},
-uo_art_24322=3D{7938},
-tex_173=3D{2965,2966},
-uo_art_21034=3D{4650},
-uo_art_26215=3D{9831},
-tex_355=3D{527,530,531,532,533,535,537},
-uo_art_21320=3D{4936},
-uo_art_21590=3D{5206},
-tex_75=3D{454,455},
-tex_26=3D{1181,1183,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907=
,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921},
-uo_art_21262=3D{4878},
-uo_art_20301=3D{3917},
-uo_art_22654=3D{6270},
-tex_423=3D{1949,1950,1951,1968,1969,1970,1975,1976,1977},
-uo_art_20365=3D{3981},
-uo_art_21519=3D{5135},
-uo_art_20407=3D{4023},
-tex_520=3D{5484,5485},
-uo_art_22968=3D{6584},
-uo_art_19520=3D{3136},
-tex_475=3D{2555,2557,2558,2559,2560,2562,2563,2564,2575,2576,2577,2598,260=
0,2842,2843,2844,2845,2846,2847,2854,2855,2856},
-tex_324=3D{6129},
-tex_118=3D{2906,2907,2908,2909,3088,3089,3097,3098},
-tex_325=3D{6128},
-uo_art_21462=3D{5078},
-tex_328=3D{6125},
-tex_334=3D{6117},
-tex_333=3D{6114,6115,6119,6120},
-tex_216=3D{1387,1388},
-uo_art_20297=3D{3913},
-uo_art_19578=3D{3194},
-uo_art_25958=3D{9574},
-tex_336=3D{6105,6106,6110,6111},
-uo_art_26184=3D{9800},
-uo_art_22409=3D{6025},
-uo_art_19118=3D{2734},
-tex_409=3D{5264},
-uo_art_20218=3D{3834},
-uo_art_22405=3D{6021},
-uo_art_22403=3D{6019},
-uo_art_21232=3D{4848},
-tex_465=3D{6009,6010,6011,6012},
-tex_463=3D{6005,6006,6007,6008,13446,13451,13484,13488},
-uo_art_21463=3D{5079},
-tex_464=3D{6001,6002,6003,6004},
-tex_387=3D{4070,4071,4072,4073,4074,4075,4076,4077,4078},
-uo_art_20963=3D{4579},
-tex_203=3D{1481,1482,1483,1484,1485},
-uo_art_19690=3D{3306},
-tex_195=3D{1382,1383,1583,1584},
-uo_art_22377=3D{5993},
-uo_art_21500=3D{5116},
-uo_art_19923=3D{3539},
-uo_art_22375=3D{5991},
-uo_art_19635=3D{3251},
-uo_art_20385=3D{4001},
-uo_art_21286=3D{4902},
-uo_art_20544=3D{4160},
-uo_art_21540=3D{5156},
-uo_art_18935=3D{2551},
-uo_art_20061=3D{3677},
-uo_art_19723=3D{3339},
-uo_art_26235=3D{9851},
-uo_art_25210=3D{8826},
-uo_art_20571=3D{4187},
-uo_art_20277=3D{3893},
-uo_art_21099=3D{4715},
-tex_237=3D{1258,1259,1260,1261},
-uo_art_22304=3D{5920},
-uo_art_22302=3D{5918},
-tex_348=3D{5311,5312,5313,5314,5315,5316,5317,5318},
-uo_art_20192=3D{3808},
-uo_art_20022=3D{3638},
-uo_art_23194=3D{6810},
-uo_art_19586=3D{3202},
-uo_art_24035=3D{7651},
-uo_art_20565=3D{4181},
-uo_art_21468=3D{5084},
-uo_art_18806=3D{2422},
-uo_art_19655=3D{3271},
-uo_art_22127=3D{5743},
-uo_art_19602=3D{3218},
-uo_art_24429=3D{8045},
-uo_art_19614=3D{3230},
-uo_art_22085=3D{5701},
-uo_art_20322=3D{3938},
-uo_art_30477=3D{14093},
-uo_art_21309=3D{4925},
-uo_art_26680=3D{10296},
-tex_480=3D{7778,7785},
-uo_art_19519=3D{3135},
-uo_art_21301=3D{4917},
-tex_455=3D{3486,3490,3494,3498},
-uo_art_18901=3D{2517},
-tex_296=3D{5517,5668},
-tex_392=3D{2796},
-tex_299=3D{5510,5512,5661,5663},
-tex_502=3D{5508,5509,5686,5687},
-tex_12=3D{3670,3672},
-uo_art_23987=3D{7603},
-tex_503=3D{5506,5507,5684,5685},
-uo_art_19913=3D{3529},
-uo_art_25149=3D{8765},
-uo_art_21529=3D{5145},
-uo_art_18911=3D{2527},
-uo_art_18882=3D{2498},
-uo_art_21832=3D{5448},
-uo_art_20258=3D{3874},
-uo_art_19620=3D{3236},
-tex_550=3D{4793},
-uo_art_21435=3D{5051},
-uo_art_21830=3D{5446},
-uo_art_20000=3D{3616},
-uo_art_21823=3D{5439},
-uo_art_21806=3D{5422},
-tex_124=3D{3081,3082},
-tex_135=3D{3057,3058},
-uo_art_30398=3D{14014},
-uo_art_21784=3D{5400},
-tex_341=3D{5386,5387,5388,5389,5390,5391,5392,5393},
-uo_art_20536=3D{4152},
-tex_541=3D{5368,5370},
-uo_art_21750=3D{5366},
-tex_121=3D{2602,2603,2910},
-uo_art_19658=3D{3274},
-uo_art_23494=3D{7110},
-uo_art_21035=3D{4651},
-uo_art_20712=3D{4328},
-tex_343=3D{5349},
-tex_76=3D{452,453},
-uo_art_20125=3D{3741},
-uo_art_20514=3D{4130},
-uo_art_20284=3D{3900},
-uo_art_22406=3D{6022},
-uo_art_21589=3D{5205},
-uo_art_21588=3D{5204},
-uo_art_21563=3D{5179},
-uo_art_21438=3D{5054},
-uo_art_21528=3D{5144},
-uo_art_21516=3D{5132},
-uo_art_24332=3D{7948},
-tex_46=3D{463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,=
479,480,481,482,483,484,485,486,487,488,489,490,491,804,805,806,807,808,809=
,810,811,812,813,814,815,816,817,818,819,2283,2284,2285,2286},
-uo_art_19928=3D{3544},
-uo_art_20499=3D{4115},
-uo_art_19642=3D{3258},
-uo_art_19611=3D{3227},
-uo_art_20966=3D{4582},
-uo_art_18870=3D{2486},
-uo_art_23773=3D{7389},
-uo_art_18936=3D{2552},
-tex_22=3D{19,23,1852,1971,1972,1973,1974},
-uo_art_21291=3D{4907},
-uo_art_19583=3D{3199},
-uo_art_20242=3D{3858},
-uo_art_20357=3D{3973},
-uo_art_24198=3D{7814},
-uo_art_22369=3D{5985},
-uo_art_18893=3D{2509},
-tex_467=3D{2850},
-uo_art_19544=3D{3160},
-uo_art_20636=3D{4252},
-uo_art_21453=3D{5069},
-uo_art_29336=3D{12952},
-uo_art_21439=3D{5055},
-tex_36=3D{1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019=
,1020,1021,1022,1023,1024,1025,1026},
-uo_art_21428=3D{5044},
-tex_164=3D{2995,2996},
-uo_art_21426=3D{5042},
-uo_art_19613=3D{3229},
-tex_569=3D{283,284,285,286,287,288,7978},
-uo_art_32364=3D{15980},
-uo_art_19926=3D{3542},
-uo_art_20971=3D{4587},
-uo_art_21360=3D{4976},
-uo_art_20517=3D{4133},
-uo_art_18851=3D{2467},
-uo_art_22365=3D{5981},
-tex_539=3D{3692,3693,3696,3697,3724,3726,3729,3734,5709,5750,5781,5818},
-tex_412=3D{1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,142=
6,1427,1428,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,8576,857=
7,8578,8579,8580,8581,8582,8583},
-uo_art_21284=3D{4900},
-uo_art_21280=3D{4896},
-uo_art_21272=3D{4888},
-uo_art_21264=3D{4880},
-uo_art_19636=3D{3252},
-uo_art_19558=3D{3174},
-tex_222=3D{1305,1306,1307,1308},
-uo_art_21160=3D{4776},
-uo_art_20928=3D{4544},
-uo_art_23556=3D{7172},
-uo_art_20520=3D{4136},
-uo_art_21158=3D{4774},
-tex_209=3D{1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,145=
6,1457,1458,8524,8525,11346,11357,11358,11359},
-tex_147=3D{3033,3034},
-uo_art_20632=3D{4248},
-uo_art_19622=3D{3238},
-tex_78=3D{421,422,423,425,426,427,428,429,430,431,432,934,935,936,937,938,=
939,940,941},
-tex_137=3D{3053,3054},
-uo_art_20344=3D{3960},
-tex_516=3D{1256,1257,1335,1336,1337,1338},
-tex_156=3D{3011,3012},
-uo_art_20531=3D{4147},
-tex_218=3D{1327,1328,1329,1330,1331,1332,1333,1334},
-uo_art_19577=3D{3193},
-uo_art_20518=3D{4134},
-tex_365=3D{2787,2788,2789,2790},
-uo_art_20498=3D{4114},
-tex_108=3D{78,79,80,81,82,83,84},
-uo_art_20424=3D{4040},
-uo_art_24340=3D{7956},
-uo_art_17725=3D{1341},
-tex_378=3D{4282},
-tex_397=3D{1194,1195},
-uo_art_21498=3D{5114},
-uo_art_20176=3D{3792},
-uo_art_20420=3D{4036},
-tex_103=3D{144,147,150,151,154,157,160,161},
-uo_art_20414=3D{4030},
-tex_315=3D{6174},
-tex_208=3D{1466,1467,1468,1469,1470},
-tex_174=3D{1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,166=
5,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,168=
0,1681,1682,1683,1684,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,174=
3,1744,1745,1746,1747,1748,1781,1782,8173,8174,8175,8176,8177,8178,8179,818=
0,8181,8182,8183,8184,8185,8186,8187,8188},
-tex_205=3D{1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1472,147=
3,8681,8682,8683,8684,8685,8686,8687,8688},
-tex_9=3D{4017},
-tex_563=3D{1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,193=
6,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948},
-uo_art_19961=3D{3577},
-uo_art_21471=3D{5087},
-uo_art_20381=3D{3997},
-uo_art_18933=3D{2549},
-uo_art_20354=3D{3970},
-uo_art_20353=3D{3969},
-uo_art_18932=3D{2548},
-uo_art_23512=3D{7128},
-tex_251=3D{1861,1862,1863,1864},
-uo_art_19772=3D{3388},
-tex_231=3D{1280,1281,1282,1283},
-uo_art_26253=3D{9869},
-uo_art_19755=3D{3371},
-tex_312=3D{6177},
-uo_art_18843=3D{2459},
-}
-
+gDevToolTexCache =3D {
+uo_art_19776=3D{3392},
+uo_art_21782=3D{5398},
+uo_art_21494=3D{5110},
+uo_art_21325=3D{4941},
+uo_art_23946=3D{7562},
+uo_art_20026=3D{3642},
+uo_art_24427=3D{8043},
+uo_art_21270=3D{4886},
+uo_art_20521=3D{4137},
+uo_art_21288=3D{4904},
+tex_549=3D{4802},
+tex_114=3D{26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,12583},
+tex_458=3D{1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,177=
7,1778,1779,1780},
+uo_art_20103=3D{3719},
+uo_art_19597=3D{3213},
+uo_art_19945=3D{3561},
+uo_art_23790=3D{7406},
+uo_art_21442=3D{5058},
+uo_art_19645=3D{3261},
+tex_388=3D{2795},
+tex_90=3D{314,315},
+uo_art_25211=3D{8827},
+uo_art_20005=3D{3621},
+uo_art_20404=3D{4020},
+uo_art_18875=3D{2491},
+uo_art_29361=3D{12977},
+tex_172=3D{2979,2980},
+uo_art_23981=3D{7597},
+uo_art_23791=3D{7407},
+uo_art_21508=3D{5124},
+uo_art_21816=3D{5432},
+uo_art_30501=3D{14117},
+tex_493=3D{6013,6014,6015,6016,6017},
+uo_art_20023=3D{3639},
+uo_art_19998=3D{3614},
+uo_art_21440=3D{5056},
+uo_art_20248=3D{3864},
+uo_art_26220=3D{9836},
+uo_art_23171=3D{6787},
+uo_art_17746=3D{1362},
+uo_art_22407=3D{6023},
+uo_art_25718=3D{9334},
+uo_art_21472=3D{5088},
+uo_art_23517=3D{7133},
+uo_art_20706=3D{4322},
+uo_art_26534=3D{10150},
+tex_214=3D{1276,1277,1278,1279,1407,1408,1409,1410,1411,1412,1413},
+uo_art_21255=3D{4871},
+tex_254=3D{2255,2260,2347,2352,2357,2359,2360,2361,2362,2363,2364,2371,237=
3,2374,2375,2376,2377,2378},
+tex_533=3D{2684,2690},
+tex_451=3D{5396},
+uo_art_20537=3D{4153},
+uo_art_24378=3D{7994},
+uo_art_23323=3D{6939},
+uo_art_20515=3D{4131},
+uo_art_30394=3D{14010},
+uo_art_24480=3D{8096},
+uo_art_20355=3D{3971},
+uo_art_22126=3D{5742},
+uo_art_19598=3D{3214},
+uo_art_24036=3D{7652},
+uo_art_21758=3D{5374},
+uo_art_23495=3D{7111},
+uo_art_24479=3D{8095},
+uo_art_20526=3D{4142},
+uo_art_21305=3D{4921},
+uo_art_24407=3D{8023},
+uo_art_18933=3D{2549},
+uo_art_19719=3D{3335},
+uo_art_21507=3D{5123},
+tex_366=3D{3818},
+tex_542=3D{5367,5369},
+uo_art_24050=3D{7666},
+tex_77=3D{429,430,431,432},
+uo_art_24426=3D{8042},
+tex_185=3D{1360,1368,1370,1371,1392,1393,1394,1395,1396,1397,1398,1399,140=
0,1519,1581,1628,1629},
+uo_art_26672=3D{10288},
+tex_496=3D{4963,4964,4965,4966,4967,4968,4969,4970,4971,4972,4973},
+uo_art_21813=3D{5429},
+uo_art_24326=3D{7942},
+uo_art_24397=3D{8013},
+uo_art_21449=3D{5065},
+uo_art_26250=3D{9866},
+tex_357=3D{2754,2755,2756,2757},
+uo_art_23259=3D{6875},
+uo_art_26605=3D{10221},
+uo_art_21566=3D{5182},
+uo_art_22288=3D{5904},
+uo_art_21807=3D{5423},
+uo_art_25188=3D{8804},
+tex_381=3D{4191,4193,4195,4197},
+tex_320=3D{6140,6143,6145,6148},
+uo_art_22310=3D{5926},
+uo_art_21251=3D{4867},
+uo_art_20511=3D{4127},
+uo_art_19119=3D{2735},
+uo_art_19626=3D{3242},
+tex_125=3D{3077,3078,3079,3080},
+uo_art_23258=3D{6874},
+uo_art_21113=3D{4729},
+uo_art_23256=3D{6872},
+uo_art_20261=3D{3877},
+uo_art_23410=3D{7026},
+uo_art_20427=3D{4043},
+uo_art_26606=3D{10222},
+uo_art_23511=3D{7127},
+uo_art_19575=3D{3191},
+uo_art_32025=3D{15641},
+uo_art_26186=3D{9802},
+uo_art_23783=3D{7399},
+uo_art_25154=3D{8770},
+uo_art_20223=3D{3839},
+uo_art_21824=3D{5440},
+uo_art_21446=3D{5062},
+uo_art_21239=3D{4855},
+uo_art_20232=3D{3848},
+tex_113=3D{45,46,47,48,49,50},
+tex_571=3D{1838,1839,1840,1841,1842,1843,1844,1845},
+uo_art_21322=3D{4938},
+uo_art_18910=3D{2526},
+uo_art_19522=3D{3138},
+uo_art_23193=3D{6809},
+tex_126=3D{3075,3076},
+uo_art_19902=3D{3518},
+uo_art_23505=3D{7121},
+uo_art_21254=3D{4870},
+uo_art_21530=3D{5146},
+uo_art_20194=3D{3810},
+uo_art_26309=3D{9925},
+uo_art_24811=3D{8427},
+uo_art_18894=3D{2510},
+uo_art_20072=3D{3688},
+uo_art_25968=3D{9584},
+tex_476=3D{2599,2601,2845,2846,2847,2854,2855,2856},
+uo_art_32023=3D{15639},
+uo_art_23510=3D{7126},
+uo_art_23781=3D{7397},
+tex_495=3D{1545,1546},
+uo_art_30572=3D{14188},
+uo_art_21108=3D{4724},
+tex_408=3D{2478,2479,2519,2520,2521,2522,2523,2585},
+uo_art_20613=3D{4229},
+uo_art_26181=3D{9797},
+uo_art_24432=3D{8048},
+uo_art_21258=3D{4874},
+uo_art_23953=3D{7569},
+uo_art_25203=3D{8819},
+uo_art_30401=3D{14017},
+uo_art_19919=3D{3535},
+tex_240=3D{1230,1231,1240,1241,1242,1243},
+uo_art_21429=3D{5045},
+uo_art_24031=3D{7647},
+tex_248=3D{2015,2016,2100,2166},
+uo_art_23251=3D{6867},
+uo_art_20426=3D{4042},
+uo_art_26085=3D{9701},
+tex_459=3D{3316,3318},
+uo_art_23507=3D{7123},
+uo_art_21781=3D{5397},
+uo_art_20464=3D{4080},
+uo_art_29351=3D{12967},
+uo_art_20425=3D{4041},
+uo_art_24324=3D{7940},
+tex_488=3D{7145,7146,7147,7148,7149,7150},
+uo_art_19545=3D{3161},
+uo_art_19653=3D{3269},
+uo_art_22317=3D{5933},
+uo_art_21536=3D{5152},
+uo_art_22657=3D{6273},
+tex_79=3D{371,373,374,375,376,377,378,379,380,381,420},
+uo_art_20302=3D{3918},
+tex_352=3D{5279,5280,5281,5282,5283,5284,5285,5286},
+uo_art_20969=3D{4585},
+uo_art_26536=3D{10152},
+uo_art_23513=3D{7129},
+uo_art_25831=3D{9447},
+tex_526=3D{1996,2000},
+uo_art_19629=3D{3245},
+uo_art_21478=3D{5094},
+uo_art_24047=3D{7663},
+tex_415=3D{1414,1415,1416,1417,1421},
+uo_art_21298=3D{4914},
+uo_art_30386=3D{14002},
+uo_art_17741=3D{1357},
+uo_art_26086=3D{9702},
+tex_96=3D{202,203},
+tex_100=3D{144,145,146,148,149,150,151,154,155,156,158,159,160,161,162,163=
,164,165,8645,8646,8647,8648,8649,8650,8651,8652},
+tex_300=3D{5511,5662},
+uo_art_24587=3D{8203},
+tex_186=3D{1591,1592,1593,1594,1626,1627},
+uo_art_23985=3D{7601},
+tex_473=3D{919,920,921,922,923,928},
+uo_art_21820=3D{5436},
+tex_317=3D{6149,6152,6154,6157},
+uo_art_20214=3D{3830},
+uo_art_23994=3D{7610},
+uo_art_20527=3D{4143},
+uo_art_27471=3D{11087},
+uo_art_19637=3D{3253},
+uo_art_20367=3D{3983},
+uo_art_21819=3D{5435},
+uo_art_20269=3D{3885},
+tex_326=3D{6127},
+uo_art_18934=3D{2550},
+uo_art_19736=3D{3352},
+uo_art_19525=3D{3141},
+uo_art_20256=3D{3872},
+tex_413=3D{1419,1420,1421,1422,1424,1427},
+uo_art_30599=3D{14215},
+uo_art_20283=3D{3899},
+uo_art_30550=3D{14166},
+tex_265=3D{3952},
+uo_art_20316=3D{3932},
+uo_art_26180=3D{9796},
+uo_art_17724=3D{1340},
+tex_2=3D{3215,3216,3217,3218,3512,3513},
+tex_370=3D{3824},
+uo_art_20533=3D{4149},
+uo_art_23570=3D{7186},
+uo_art_21490=3D{5106},
+uo_art_24358=3D{7974},
+uo_art_21447=3D{5063},
+uo_art_19649=3D{3265},
+uo_art_20027=3D{3643},
+uo_art_27507=3D{11123},
+uo_art_29333=3D{12949},
+uo_art_22749=3D{6365},
+tex_406=3D{2914,2915,2916,2920,2921,2922,2923,2942,6414,6415,6416,6417,641=
8,6419,6424,6425,6426,6427,6428,6429,6430,6431},
+tex_73=3D{411,412,413,414,415,416,417,418,419,421,422,423,424,425,426,427,=
428,429,430,431,432,437,438,439,440,441,442,443,448,449,459,460,461,462,168=
5,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,170=
0},
+uo_art_22408=3D{6024},
+tex_263=3D{3950},
+uo_art_18918=3D{2534},
+tex_132=3D{3063,3064},
+uo_art_30476=3D{14092},
+tex_234=3D{1267},
+uo_art_30510=3D{14126},
+uo_art_24323=3D{7939},
+uo_art_21470=3D{5086},
+uo_art_20101=3D{3717},
+tex_65=3D{541,542,543,544},
+uo_art_24032=3D{7648},
+uo_art_20512=3D{4128},
+tex_346=3D{5327,5328,5329,5330,5331,5332,5333,5334},
+uo_art_19999=3D{3615},
+uo_art_24034=3D{7650},
+uo_art_24046=3D{7662},
+uo_art_19596=3D{3212},
+uo_art_19759=3D{3375},
+uo_art_24026=3D{7642},
+uo_art_29347=3D{12963},
+tex_7=3D{4106,4107},
+uo_art_23982=3D{7598},
+uo_art_21520=3D{5136},
+uo_art_18873=3D{2489},
+uo_art_21457=3D{5073},
+tex_525=3D{1994,1995,1998,1999},
+tex_181=3D{1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,169=
7,1698,1699,1700},
+uo_art_26239=3D{9855},
+uo_art_21577=3D{5193},
+uo_art_20359=3D{3975},
+tex_138=3D{3051,3052},
+uo_art_30412=3D{14028},
+tex_486=3D{7151,7152,7153,7154,7155,7156},
+tex_150=3D{3023,3024},
+uo_art_24376=3D{7992},
+uo_art_24088=3D{7704},
+uo_art_21365=3D{4981},
+tex_536=3D{2704,3508},
+tex_479=3D{7807},
+uo_art_32103=3D{15719},
+uo_art_24412=3D{8028},
+uo_art_21514=3D{5130},
+tex_198=3D{1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,153=
2,1533,1534,11330,11331,11332,11333,11334,11335,11336,11337,11338,11339,113=
40,11341,11342,11343,11344},
+uo_art_26284=3D{9900},
+uo_art_20617=3D{4233},
+uo_art_20253=3D{3869},
+uo_art_29341=3D{12957},
+uo_art_23509=3D{7125},
+uo_art_21483=3D{5099},
+tex_396=3D{1193,1196,1205,1208,2170,2171,2172,2173},
+uo_art_24329=3D{7945},
+uo_art_21448=3D{5064},
+uo_art_20163=3D{3779},
+uo_art_20546=3D{4162},
+uo_art_24041=3D{7657},
+uo_art_23197=3D{6813},
+uo_art_20170=3D{3786},
+uo_art_20541=3D{4157},
+tex_23=3D{1978,1979,1980,1991,1992},
+uo_art_26249=3D{9865},
+tex_456=3D{4826,4827,4828,4829,4830,4831,4832,4833,4834,4835,4836,4837,483=
8,4839,4840,4841,4842,4843,4844,4845},
+tex_8=3D{4015,4016},
+uo_art_19504=3D{3120},
+uo_art_26518=3D{10134},
+uo_art_19938=3D{3554},
+uo_art_23491=3D{7107},
+uo_art_29354=3D{12970},
+uo_art_19906=3D{3522},
+uo_art_21817=3D{5433},
+uo_art_20363=3D{3979},
+uo_art_22300=3D{5916},
+uo_art_19607=3D{3223},
+uo_art_26092=3D{9708},
+uo_art_21300=3D{4916},
+uo_art_21314=3D{4930},
+uo_art_20303=3D{3919},
+tex_316=3D{6173},
+uo_art_19592=3D{3208},
+uo_art_22295=3D{5911},
+uo_art_21246=3D{4862},
+uo_art_20584=3D{4200},
+tex_384=3D{1062,1067},
+tex_534=3D{2672,2676,4558,4562},
+tex_30=3D{1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818=
,1819,1820,1821},
+uo_art_21523=3D{5139},
+uo_art_19965=3D{3581},
+uo_art_25976=3D{9592},
+tex_194=3D{1367,1586},
+uo_art_24814=3D{8430},
+uo_art_23560=3D{7176},
+uo_art_29355=3D{12971},
+uo_art_25350=3D{8966},
+uo_art_19547=3D{3163},
+uo_art_20524=3D{4140},
+uo_art_20264=3D{3880},
+uo_art_20637=3D{4253},
+uo_art_17742=3D{1358},
+uo_art_20611=3D{4227},
+uo_art_21506=3D{5122},
+uo_art_23949=3D{7565},
+uo_art_20177=3D{3793},
+tex_273=3D{1115,1116,7623,7624,7625,7626,7627,7628},
+uo_art_32104=3D{15720},
+uo_art_29321=3D{12937},
+tex_11=3D{3670,3671,3672,3673},
+uo_art_26185=3D{9801},
+uo_art_30482=3D{14098},
+uo_art_21518=3D{5134},
+uo_art_30500=3D{14116},
+uo_art_20252=3D{3868},
+uo_art_18881=3D{2497},
+uo_art_24639=3D{8255},
+tex_71=3D{344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,=
360,361,362,363,364,365,366,367,368,369,370,372,382,383,384,385,386,387,388=
,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,40=
7,408,409,410,433,434,435,436,458,492,493,494,495,2291,2292,2293,2294},
+uo_art_19515=3D{3131},
+uo_art_23260=3D{6876},
+uo_art_19557=3D{3173},
+uo_art_22760=3D{6376},
+uo_art_20069=3D{3685},
+uo_art_19603=3D{3219},
+uo_art_24385=3D{8001},
+uo_art_19898=3D{3514},
+uo_art_20102=3D{3718},
+uo_art_27472=3D{11088},
+uo_art_20535=3D{4151},
+tex_31=3D{1818,1819,1820,1821},
+uo_art_25966=3D{9582},
+uo_art_20266=3D{3882},
+uo_art_20639=3D{4255},
+tex_67=3D{521,522},
+uo_art_26213=3D{9829},
+uo_art_20244=3D{3860},
+uo_art_20243=3D{3859},
+uo_art_19661=3D{3277},
+uo_art_24051=3D{7667},
+tex_15=3D{3894,4108,4109,7869},
+uo_art_26537=3D{10153},
+uo_art_19606=3D{3222},
+uo_art_25504=3D{9120},
+tex_309=3D{6180},
+tex_207=3D{1459,1467,1468,1469,1470,1471,1789,1790,1791,1792},
+uo_art_25170=3D{8786},
+uo_art_26581=3D{10197},
+uo_art_19903=3D{3519},
+uo_art_22296=3D{5912},
+tex_398=3D{1206,1207},
+tex_102=3D{144,145,146,150,151,152,153,154,155,156,158,159,160,161,162,163=
,164,165},
+uo_art_21362=3D{4978},
+tex_507=3D{3297,3399,3406,3421,3429,3445,3464,3469},
+uo_art_19605=3D{3221},
+tex_43=3D{6,9,10,11,12,13,30,31,32,33,55,56,57,58,170,171,172,173,178,179,=
180,181,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312=
,313,314,315,316,317,318,319,320,321,322,323,329,332,333,334,335,336,337,33=
8,339,340,341,342,343,429,430,431,432,496,497,498,499,500,501,502,503,553,5=
60,561,562,563,564,565,566,567,734,735,736,737,738,739,740,741,744,745,746,=
747,748,872,873,874,875,876,877,878,879,895,896,897,898,899,900,901,902,903=
,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,92=
2,923,924,925,926,927,928,933,938,939,940,941,942,943,944,950,2104,2140,214=
1,2142,2143,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,215=
8,2159,2160,2161,2162,2163,2164,2165,2167,2168,2186,2187,2591,2592,2967,296=
8,2969,2970,4758,5510,5511,5512,5513,5514,5515,5516,5517,5518,5520,5521,552=
2,5523,5524,5525,5526,5527,5661,5662,5663,5664,5665,5666,5667,5668,5669,567=
1,5672,5673,5674,5675,5676,5677},
+uo_art_19114=3D{2730},
+uo_art_30036=3D{13652},
+uo_art_20610=3D{4226},
+tex_353=3D{14000,14013,14036,14037,14038,14039,14040,14041,14042,14043,140=
44,14045,14046,14047,14048,14049,14050,14051},
+tex_328=3D{6125},
+uo_art_29357=3D{12973},
+uo_art_20292=3D{3908},
+uo_art_29344=3D{12960},
+uo_art_19647=3D{3263},
+uo_art_19052=3D{2668},
+uo_art_21561=3D{5177},
+tex_258=3D{2474,3709},
+uo_art_19540=3D{3156},
+tex_171=3D{2981,2982},
+uo_art_23782=3D{7398},
+uo_art_18908=3D{2524},
+uo_art_18811=3D{2427},
+uo_art_21441=3D{5057},
+uo_art_21496=3D{5112},
+tex_227=3D{1291,1292},
+uo_art_20247=3D{3863},
+uo_art_21243=3D{4859},
+tex_450=3D{2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,256=
7,2568,2569,2570,2571,2572,2573,2574,2578,2579,2580},
+uo_art_23554=3D{7170},
+tex_45=3D{6,7,8,10,11,12,13,14,15,820,821,822,823,824,825,826,827,828,829,=
830,831,832,833,834,835},
+uo_art_27461=3D{11077},
+uo_art_21513=3D{5129},
+tex_435=3D{2140,2141,2142,2144,2145,2167,2168},
+uo_art_26299=3D{9915},
+uo_art_19511=3D{3127},
+uo_art_24392=3D{8008},
+uo_art_24367=3D{7983},
+uo_art_19548=3D{3164},
+uo_art_30502=3D{14118},
+uo_art_20304=3D{3920},
+uo_art_30542=3D{14158},
+tex_58=3D{591,592,593,600},
+uo_art_20709=3D{4325},
+tex_14=3D{3989,3990,3991,3992,3993,3994,3995,3996},
+uo_art_21515=3D{5131},
+uo_art_19962=3D{3578},
+uo_art_24037=3D{7653},
+uo_art_19608=3D{3224},
+tex_165=3D{2993,2994},
+uo_art_20568=3D{4184},
+uo_art_24087=3D{7703},
+uo_art_24372=3D{7988},
+uo_art_26307=3D{9923},
+uo_art_24388=3D{8004},
+uo_art_20467=3D{4083},
+uo_art_23952=3D{7568},
+uo_art_21304=3D{4920},
+uo_art_29339=3D{12955},
+tex_57=3D{597,598,599,601},
+tex_332=3D{6113,6116,6118,6121},
+uo_art_19535=3D{3151},
+uo_art_21821=3D{5437},
+uo_art_20348=3D{3964},
+uo_art_30396=3D{14012},
+tex_547=3D{5384,5385,5404,5405},
+tex_109=3D{51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77},
+uo_art_21744=3D{5360},
+tex_505=3D{5536,5537,5647,5648},
+uo_art_24058=3D{7674},
+tex_387=3D{4070,4071,4072,4073,4074,4075,4076,4077,4078},
+uo_art_20352=3D{3968},
+tex_382=3D{4201,4203,4205,4218,4220,4221},
+uo_art_21315=3D{4931},
+uo_art_23195=3D{6811},
+uo_art_21308=3D{4924},
+tex_321=3D{6141,6142,6146,6147},
+uo_art_30530=3D{14146},
+uo_art_21756=3D{5372},
+uo_art_24418=3D{8034},
+uo_art_19566=3D{3182},
+uo_art_25163=3D{8779},
+uo_art_26202=3D{9818},
+uo_art_19718=3D{3334},
+uo_art_21299=3D{4915},
+uo_art_20635=3D{4251},
+uo_art_24089=3D{7705},
+uo_art_20516=3D{4132},
+uo_art_30527=3D{14143},
+tex_443=3D{3295},
+tex_18=3D{3801,3802,4453,4454},
+uo_art_24085=3D{7701},
+uo_art_26305=3D{9921},
+tex_224=3D{1297,1298,1299,1300},
+tex_544=3D{7857,7858,7859,7860},
+uo_art_19868=3D{3484},
+uo_art_19990=3D{3606},
+uo_art_20282=3D{3898},
+tex_322=3D{6144},
+uo_art_19674=3D{3290},
+uo_art_25972=3D{9588},
+uo_art_20711=3D{4327},
+uo_art_20523=3D{4139},
+uo_art_20421=3D{4037},
+uo_art_23990=3D{7606},
+uo_art_26523=3D{10139},
+uo_art_26238=3D{9854},
+tex_191=3D{1557,1558,1563,1564,1565,1566,1567,1568,1569,1570,1575,1576,157=
7,1578,1589,1590,1615,1616,1617},
+uo_art_20265=3D{3881},
+uo_art_20070=3D{3686},
+tex_37=3D{951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,=
967,968,969,970,989,990,991,1006},
+uo_art_19519=3D{3135},
+tex_174=3D{1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,166=
5,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,168=
0,1681,1682,1683,1684,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,174=
3,1744,1745,1746,1747,1748,1781,1782,8173,8174,8175,8176,8177,8178,8179,818=
0,8181,8182,8183,8184,8185,8186,8187,8188},
+tex_261=3D{3948},
+tex_537=3D{2692,2696},
+uo_art_20528=3D{4144},
+uo_art_19623=3D{3239},
+uo_art_21738=3D{5354},
+uo_art_18706=3D{2322},
+uo_art_25153=3D{8769},
+tex_267=3D{2475,3708},
+tex_104=3D{152,153},
+tex_472=3D{895,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911=
,912,913,914,915,916,917,918},
+tex_119=3D{2902,2903,2904,2905},
+uo_art_21583=3D{5199},
+tex_457=3D{2440,2442,2443},
+tex_210=3D{1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,144=
1,1442,1443,8568,8569,8570,8571,8572,8573,8574,8575},
+uo_art_21828=3D{5444},
+tex_238=3D{1232,1233,1234,1235,1246,1247,1248,1249},
+uo_art_20532=3D{4148},
+uo_art_18877=3D{2493},
+tex_422=3D{2201,2202,2203,2204,2205,2206},
+uo_art_30475=3D{14091},
+tex_3=3D{1880},
+uo_art_24373=3D{7989},
+uo_art_24020=3D{7636},
+tex_110=3D{65,66,67,68},
+uo_art_19954=3D{3570},
+uo_art_19117=3D{2733},
+tex_130=3D{3067,3068},
+uo_art_19131=3D{2747},
+uo_art_24413=3D{8029},
+uo_art_21526=3D{5142},
+uo_art_22312=3D{5928},
+uo_art_20572=3D{4188},
+uo_art_20362=3D{3978},
+tex_122=3D{3085,3086},
+tex_438=3D{3823},
+uo_art_30569=3D{14185},
+uo_art_19126=3D{2742},
+uo_art_21475=3D{5091},
+tex_386=3D{2101,2102,2103},
+uo_art_21237=3D{4853},
+uo_art_20713=3D{4329},
+uo_art_19957=3D{3573},
+uo_art_20255=3D{3871},
+tex_362=3D{2802,2803,2804,2805},
+uo_art_18896=3D{2512},
+uo_art_21757=3D{5373},
+uo_art_25159=3D{8775},
+uo_art_21451=3D{5067},
+uo_art_19710=3D{3326},
+uo_art_19989=3D{3605},
+uo_art_21587=3D{5203},
+uo_art_25420=3D{9036},
+uo_art_19120=3D{2736},
+uo_art_25974=3D{9590},
+uo_art_21739=3D{5355},
+tex_60=3D{560,561,562,564,565,566,567,568,569},
+uo_art_22307=3D{5923},
+uo_art_23956=3D{7572},
+uo_art_19959=3D{3575},
+uo_art_22301=3D{5917},
+tex_417=3D{2971,2972},
+tex_410=3D{1055,1064},
+tex_560=3D{3286,3288},
+uo_art_21584=3D{5200},
+tex_462=3D{4173,4174},
+uo_art_22374=3D{5990},
+uo_art_20125=3D{3741},
+uo_art_30541=3D{14157},
+uo_art_23412=3D{7028},
+uo_art_26629=3D{10245},
+uo_art_22297=3D{5913},
+uo_art_21582=3D{5198},
+uo_art_30584=3D{14200},
+uo_art_25285=3D{8901},
+uo_art_23784=3D{7400},
+uo_art_21319=3D{4935},
+uo_art_22076=3D{5692},
+uo_art_20324=3D{3940},
+uo_art_21306=3D{4922},
+tex_546=3D{5394,5395,5402,5403},
+uo_art_21586=3D{5202},
+uo_art_17011=3D{627},
+uo_art_23562=3D{7178},
+uo_art_18883=3D{2499},
+uo_art_30413=3D{14029},
+tex_287=3D{6657,6658,6659,6660,6667,6668,7036,7037,7039,7040},
+tex_517=3D{1251,1252,1253},
+tex_337=3D{6108},
+tex_188=3D{1364,1365,1366,1372,1373,1374,1375,1376,1377,1378,1379,1380,158=
5,1622,1623},
+uo_art_21568=3D{5184},
+uo_art_17010=3D{626},
+uo_art_19634=3D{3250},
+uo_art_21103=3D{4719},
+uo_art_21525=3D{5141},
+uo_art_23520=3D{7136},
+uo_art_30032=3D{13648},
+uo_art_24053=3D{7669},
+uo_art_24414=3D{8030},
+tex_226=3D{1293,1294},
+uo_art_18705=3D{2321},
+uo_art_19886=3D{3502},
+uo_art_23267=3D{6883},
+uo_art_21510=3D{5126},
+uo_art_21517=3D{5133},
+tex_297=3D{5513,5515,5664,5666},
+tex_510=3D{3104,3106},
+uo_art_25150=3D{8766},
+armoire-2637=3D{2637,2637},
+uo_art_22289=3D{5905},
+uo_art_21560=3D{5176},
+uo_art_18893=3D{2509},
+uo_art_26302=3D{9918},
+uo_art_20962=3D{4578},
+uo_art_20616=3D{4232},
+uo_art_20710=3D{4326},
+tex_39=3D{979,980,981,982,983,984,992,993,994},
+uo_art_20565=3D{4181},
+tex_552=3D{4786,4809},
+uo_art_21263=3D{4879},
+tex_97=3D{187,188},
+uo_art_19904=3D{3520},
+uo_art_23991=3D{7607},
+uo_art_19622=3D{3238},
+uo_art_21746=3D{5362},
+uo_art_24415=3D{8031},
+uo_art_18892=3D{2508},
+uo_art_21461=3D{5077},
+tex_376=3D{3936,3937},
+tex_360=3D{2774,2775,2776,2777},
+tex_229=3D{1220,1221,1285,1288,4572,4573,4574,4575,4576,4577},
+uo_art_30392=3D{14008},
+uo_art_18810=3D{2426},
+uo_art_21297=3D{4913},
+uo_art_26684=3D{10300},
+tex_283=3D{3383,3384},
+uo_art_24380=3D{7996},
+uo_art_26287=3D{9903},
+uo_art_19516=3D{3132},
+uo_art_26182=3D{9798},
+uo_art_18708=3D{2324},
+tex_512=3D{7617,7618,7619,7620,7621,7622},
+uo_art_30507=3D{14123},
+uo_art_23775=3D{7391},
+uo_art_17735=3D{1351},
+uo_art_21278=3D{4894},
+uo_art_19997=3D{3613},
+uo_art_19638=3D{3254},
+uo_art_18914=3D{2530},
+uo_art_21281=3D{4897},
+uo_art_19639=3D{3255},
+uo_art_20929=3D{4545},
+uo_art_20549=3D{4165},
+tex_400=3D{1201,1202,1203,1204,1213,1214,1215,1216},
+tex_421=3D{4006},
+tex_176=3D{1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,176=
1,1762,1763,1764,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,211=
6,2117,2118,2119,2120},
+uo_art_19531=3D{3147},
+tex_318=3D{6150,6151,6155,6156},
+uo_art_20284=3D{3900},
+tex_120=3D{2894,2895,2896,2897,2898,2899,2900,2901},
+uo_art_19896=3D{3512},
+uo_art_19648=3D{3264},
+uo_art_18707=3D{2323},
+uo_art_20384=3D{4000},
+tex_569=3D{283,284,285,286,287,288,7978},
+uo_art_21567=3D{5183},
+uo_art_21815=3D{5431},
+tex_999=3D{19999},
+uo_art_21104=3D{4720},
+tex_144=3D{3039,3040},
+tex_166=3D{2991,2992},
+uo_art_30576=3D{14192},
+uo_art_21241=3D{4857},
+uo_art_26222=3D{9838},
+uo_art_21236=3D{4852},
+uo_art_19773=3D{3389},
+uo_art_32028=3D{15644},
+uo_art_19595=3D{3211},
+uo_art_20296=3D{3912},
+uo_art_18813=3D{2429},
+tex_477=3D{3745,3746,3747,3748},
+uo_art_24056=3D{7672},
+uo_art_27478=3D{11094},
+uo_art_26258=3D{9874},
+uo_art_20364=3D{3980},
+uo_art_19707=3D{3323},
+tex_539=3D{3692,3693,3696,3697,3724,3726,3729,3734,5709,5750,5781,5818},
+uo_art_23984=3D{7600},
+uo_art_20641=3D{4257},
+tex_62=3D{545,546,547,556,557,558,559,1057,1058,1059,1060,1061,1072,1073,1=
074,1077},
+uo_art_26286=3D{9902},
+uo_art_21242=3D{4858},
+uo_art_26683=3D{10299},
+uo_art_22656=3D{6272},
+uo_art_18878=3D{2494},
+tex_538=3D{2682,2689},
+uo_art_22371=3D{5987},
+uo_art_21157=3D{4773},
+uo_art_18895=3D{2511},
+uo_art_22804=3D{6420},
+tex_432=3D{4622,4623,4624,4625,4626,4627,4628,4629,4630},
+uo_art_30495=3D{14111},
+uo_art_23257=3D{6873},
+uo_art_23506=3D{7122},
+uo_art_21310=3D{4926},
+tex_508=3D{3298},
+uo_art_20382=3D{3998},
+tex_5=3D{2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,=
2094,2095,2096,2097,2098,2099,2121,2122,2123,2124,2125,2126,2127,2128,2129,=
2130,2131,2132,2133,2134,2135,2136,2137,2138,2139},
+tex_361=3D{2770,2771,2772,2773},
+tex_142=3D{3043,3044},
+uo_art_22311=3D{5927},
+tex_295=3D{5516,5518,5667,5669},
+uo_art_21267=3D{4883},
+uo_art_18854=3D{2470},
+uo_art_20066=3D{3682},
+uo_art_21423=3D{5039},
+uo_art_21149=3D{4765},
+uo_art_18808=3D{2424},
+tex_68=3D{519,520},
+uo_art_20411=3D{4027},
+uo_art_22316=3D{5932},
+uo_art_21745=3D{5361},
+uo_art_24025=3D{7641},
+uo_art_30508=3D{14124},
+uo_art_30418=3D{14034},
+uo_art_21101=3D{4717},
+uo_art_19628=3D{3244},
+uo_art_20412=3D{4028},
+tex_285=3D{3633,3634,3635,6570,6587,7979},
+tex_380=3D{4117,4118,4119,4121,4122,4123,4124,4125,4126,4260,4261,4262},
+uo_art_26491=3D{10107},
+uo_art_19589=3D{3205},
+uo_art_26204=3D{9820},
+tex_152=3D{3019,3020},
+uo_art_26506=3D{10122},
+uo_art_22763=3D{6379},
+uo_art_21321=3D{4937},
+uo_art_24625=3D{8241},
+uo_art_21294=3D{4910},
+uo_art_25349=3D{8965},
+uo_art_25158=3D{8774},
+tex_441=3D{3287,3289},
+uo_art_22294=3D{5910},
+tex_469=3D{2852,2853},
+uo_art_20254=3D{3870},
+tex_402=3D{1198,1200,1209,1211},
+uo_art_30511=3D{14127},
+tex_177=3D{1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,176=
1,1762,1763,1764,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,211=
6,2117,2118,2119,2120},
+uo_art_17728=3D{1344},
+uo_art_21303=3D{4919},
+tex_514=3D{3395,3417,3440,3461},
+tex_241=3D{1185,1186,1187,1188,1226,1228,1239},
+uo_art_18929=3D{2545},
+uo_art_23993=3D{7609},
+uo_art_23411=3D{7027},
+tex_391=3D{2769},
+uo_art_30571=3D{14187},
+uo_art_26242=3D{9858},
+uo_art_26539=3D{10155},
+uo_art_24419=3D{8035},
+uo_art_21444=3D{5060},
+uo_art_23788=3D{7404},
+tex_478=3D{7848,7849,7850,7851,7852,7853,7854,7855},
+uo_art_19992=3D{3608},
+uo_art_21240=3D{4856},
+uo_art_22291=3D{5907},
+tex_559=3D{2007,2008,2285,2286,2289,2290,2293,2294,2297,2298,2299,2300},
+uo_art_18915=3D{2531},
+tex_221=3D{1309,1310,1311,1312},
+uo_art_24040=3D{7656},
+uo_art_17747=3D{1363},
+uo_art_19872=3D{3488},
+tex_155=3D{3013,3014},
+uo_art_25193=3D{8809},
+uo_art_17727=3D{1343},
+uo_art_26243=3D{9859},
+uo_art_20547=3D{4163},
+tex_244=3D{1225},
+uo_art_24048=3D{7664},
+uo_art_20970=3D{4586},
+tex_153=3D{3017,3018},
+uo_art_24029=3D{7645},
+uo_art_17733=3D{1349},
+uo_art_21295=3D{4911},
+uo_art_22318=3D{5934},
+uo_art_22756=3D{6372},
+uo_art_30408=3D{14024},
+uo_art_22969=3D{6585},
+uo_art_24319=3D{7935},
+uo_art_25963=3D{9579},
+tex_269=3D{5950,6608},
+uo_art_30534=3D{14150},
+uo_art_19917=3D{3533},
+uo_art_24481=3D{8097},
+uo_art_25160=3D{8776},
+uo_art_21527=3D{5143},
+tex_183=3D{1608,1609,1610,1611,1630,1631,1632,1633,1634,1635,1636,1637,163=
8,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652},
+tex_139=3D{3049,3050},
+uo_art_18853=3D{2469},
+uo_art_19032=3D{2648},
+uo_art_21419=3D{5035},
+uo_art_19652=3D{3268},
+tex_219=3D{1317,1318,1319,1320,1321,1322,1323,1324,2077},
+uo_art_20273=3D{3889},
+uo_art_30513=3D{14129},
+uo_art_23557=3D{7173},
+tex_98=3D{185,186,187,188},
+uo_art_21317=3D{4933},
+uo_art_24393=3D{8009},
+tex_262=3D{3949,8148,8149,8150,8151,8152,8167,8168,8169,8170,8171},
+uo_art_26301=3D{9917},
+tex_148=3D{3029,3030},
+tex_338=3D{6095,6098,6100,6103},
+uo_art_20238=3D{3854},
+uo_art_19627=3D{3243},
+uo_art_20540=3D{4156},
+tex_204=3D{1477,1478,1479,1480},
+tex_555=3D{9153,9154,9155,9156,9157,9158,9159,9160},
+uo_art_18803=3D{2419},
+tex_284=3D{6608},
+uo_art_21783=3D{5399},
+uo_art_21436=3D{5052},
+uo_art_30402=3D{14018},
+uo_art_21378=3D{4994},
+uo_art_20559=3D{4175},
+uo_art_21485=3D{5101},
+tex_394=3D{2778},
+uo_art_27465=3D{11081},
+uo_art_22379=3D{5995},
+uo_art_25352=3D{8968},
+uo_art_25484=3D{9100},
+uo_art_18889=3D{2505},
+uo_art_23780=3D{7396},
+tex_531=3D{2584,2589,2597},
+tex_434=3D{4310,4311},
+uo_art_20242=3D{3858},
+uo_art_19132=3D{2748},
+uo_art_19591=3D{3207},
+uo_art_21522=3D{5138},
+uo_art_20356=3D{3972},
+tex_94=3D{258,259},
+uo_art_25952=3D{9568},
+uo_art_30417=3D{14033},
+uo_art_19737=3D{3353},
+uo_art_20522=3D{4138},
+uo_art_30560=3D{14176},
+tex_340=3D{6099},
+uo_art_22970=3D{6586},
+uo_art_20387=3D{4003},
+uo_art_19553=3D{3169},
+uo_art_22378=3D{5994},
+uo_art_23561=3D{7177},
+uo_art_19991=3D{3607},
+uo_art_24405=3D{8021},
+uo_art_20369=3D{3985},
+uo_art_21809=3D{5425},
+uo_art_19955=3D{3571},
+uo_art_20564=3D{4180},
+uo_art_20295=3D{3911},
+uo_art_21248=3D{4864},
+uo_art_20294=3D{3910},
+tex_54=3D{87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,1=
06,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,631,632,633,=
634,635,636,641,642,2007,2008,2295,2296,2297,2298},
+tex_428=3D{3547},
+uo_art_21489=3D{5105},
+uo_art_23186=3D{6802},
+uo_art_23419=3D{7035},
+uo_art_26682=3D{10298},
+tex_272=3D{1113,1114,7629,7630,7631,7632,7633,7634},
+uo_art_20305=3D{3921},
+tex_112=3D{59,60},
+uo_art_20200=3D{3816},
+tex_163=3D{2997,2998},
+tex_55=3D{588,589,590,603},
+uo_art_20640=3D{4256},
+uo_art_19588=3D{3204},
+uo_art_24369=3D{7985},
+uo_art_21503=3D{5119},
+uo_art_23564=3D{7180},
+uo_art_21430=3D{5046},
+uo_art_30573=3D{14189},
+tex_298=3D{5514,5665},
+uo_art_20259=3D{3875},
+uo_art_19680=3D{3296},
+uo_art_21324=3D{4940},
+uo_art_25086=3D{8702},
+uo_art_19916=3D{3532},
+uo_art_17743=3D{1359},
+tex_140=3D{3047,3048},
+uo_art_19512=3D{3128},
+tex_289=3D{5524,5526,5527,5675,5677},
+uo_art_21484=3D{5100},
+uo_art_21836=3D{5452},
+tex_175=3D{1781,1782},
+uo_art_16955=3D{571},
+uo_art_19549=3D{3165},
+uo_art_19113=3D{2729},
+tex_82=3D{354,355},
+tex_522=3D{5502,5503},
+uo_art_26681=3D{10297},
+tex_527=3D{7230,7232,7237,7239,7244,7246,7251,7255,7258,7262,7508,7511,753=
9,7542},
+uo_art_22287=3D{5903},
+uo_art_19864=3D{3480},
+uo_art_22366=3D{5982},
+tex_364=3D{2791,2792,2793,2794},
+uo_art_24832=3D{8448},
+uo_art_30480=3D{14096},
+uo_art_19655=3D{3271},
+uo_art_20983=3D{4599},
+tex_419=3D{2975,2976},
+uo_art_20299=3D{3915},
+uo_art_17736=3D{1352},
+uo_art_18836=3D{2452},
+uo_art_24055=3D{7671},
+uo_art_20001=3D{3617},
+tex_494=3D{1539,1555,1556},
+uo_art_20234=3D{3850},
+uo_art_20351=3D{3967},
+tex_74=3D{442,443,446,447,448,449,450,451,456,457},
+uo_art_19587=3D{3203},
+uo_art_29358=3D{12974},
+uo_art_29322=3D{12938},
+uo_art_19769=3D{3385},
+uo_art_21501=3D{5117},
+uo_art_20073=3D{3689},
+uo_art_23416=3D{7032},
+tex_255=3D{2266,2270,2385,2387,2388,2389,2390,2391,2392,2399,2401,2402,240=
3,2404,2405,2406},
+uo_art_19612=3D{3228},
+uo_art_24368=3D{7984},
+uo_art_22376=3D{5992},
+uo_art_20383=3D{3999},
+uo_art_22285=3D{5901},
+uo_art_20272=3D{3888},
+tex_25=3D{1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967=
},
+tex_540=3D{3699,3700},
+uo_art_20271=3D{3887},
+uo_art_27488=3D{11104},
+uo_art_24092=3D{7708},
+uo_art_30411=3D{14027},
+uo_art_25155=3D{8771},
+uo_art_20361=3D{3977},
+uo_art_24341=3D{7957},
+uo_art_17734=3D{1350},
+uo_art_30586=3D{14202},
+uo_art_32105=3D{15721},
+uo_art_20494=3D{4110},
+uo_art_19031=3D{2647},
+uo_art_20465=3D{4081},
+tex_170=3D{2983,2984},
+tex_28=3D{197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,=
213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231=
,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,1822,2287,=
2288,2289,2290,4483,4484,7103,8706},
+uo_art_19657=3D{3273},
+uo_art_25189=3D{8805},
+uo_art_23265=3D{6881},
+uo_art_25198=3D{8814},
+uo_art_24023=3D{7639},
+uo_art_23268=3D{6884},
+tex_211=3D{1436,1437,1438,1439,1440},
+uo_art_23972=3D{7588},
+uo_art_20583=3D{4199},
+uo_art_18930=3D{2546},
+uo_art_20216=3D{3832},
+uo_art_21364=3D{4980},
+uo_art_24052=3D{7668},
+uo_art_23954=3D{7570},
+tex_159=3D{3005,3006},
+tex_454=3D{3478,3482},
+tex_282=3D{3365},
+uo_art_21742=3D{5358},
+tex_385=3D{1068,1070},
+uo_art_20236=3D{3852},
+uo_art_24321=3D{7937},
+uo_art_30416=3D{14032},
+uo_art_24603=3D{8219},
+uo_art_21275=3D{4891},
+uo_art_26972=3D{10588},
+tex_40=3D{983,984,992,993,994},
+uo_art_21825=3D{5441},
+uo_art_22404=3D{6020},
+uo_art_30598=3D{14214},
+uo_art_21488=3D{5104},
+uo_art_19534=3D{3150},
+uo_art_20497=3D{4113},
+uo_art_21323=3D{4939},
+uo_art_30532=3D{14148},
+uo_art_17725=3D{1341},
+uo_art_22750=3D{6366},
+uo_art_19960=3D{3576},
+uo_art_26973=3D{10589},
+uo_art_22647=3D{6263},
+uo_art_20931=3D{4547},
+tex_356=3D{2806,2807,2808,2809},
+uo_art_21112=3D{4728},
+uo_art_19115=3D{2731},
+uo_art_24422=3D{8038},
+tex_66=3D{295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,=
312,313,314,315,330,332,333,334,335,336,337,338,339,340,341,342,343,511,512=
,513,515,516,517,518,519,520,521,522,523,524,9373,9374},
+uo_art_30588=3D{14204},
+uo_art_26285=3D{9901},
+tex_482=3D{7776,7783},
+uo_art_26093=3D{9709},
+tex_190=3D{1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,156=
9,1570,1571,1572,1573,1574,1575,1576,1577,1578,1589,1590,1615,1616,1617},
+uo_art_26294=3D{9910},
+uo_art_19915=3D{3531},
+uo_art_24334=3D{7950},
+tex_509=3D{2620,2628,11223},
+uo_art_26245=3D{9861},
+tex_330=3D{6123},
+uo_art_22367=3D{5983},
+uo_art_27493=3D{11109},
+tex_106=3D{91,92,93,94},
+tex_371=3D{3825},
+uo_art_21521=3D{5137},
+uo_art_21591=3D{5207},
+tex_567=3D{663,664,665,666,667,668,1099,1100,1101,1102,1103},
+tex_345=3D{5347},
+uo_art_30518=3D{14134},
+tex_217=3D{1384,1385},
+tex_264=3D{3951},
+uo_art_21452=3D{5068},
+uo_art_23778=3D{7394},
+uo_art_21257=3D{4873},
+uo_art_21454=3D{5070},
+tex_324=3D{6129},
+uo_art_23417=3D{7033},
+tex_307=3D{6182},
+tex_56=3D{588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603},
+uo_art_27384=3D{11000},
+uo_art_21482=3D{5098},
+tex_373=3D{2849,2853},
+tex_491=3D{2480,3705},
+tex_498=3D{5546,5547,5657,5658},
+uo_art_21307=3D{4923},
+tex_85=3D{340,341},
+uo_art_26543=3D{10159},
+uo_art_19501=3D{3117},
+uo_art_25945=3D{9561},
+uo_art_20347=3D{3963},
+uo_art_23175=3D{6791},
+tex_160=3D{3003,3004},
+uo_art_26087=3D{9703},
+uo_art_30499=3D{14115},
+tex_34=3D{657,658,659,660,669,671,672,673,674,675,676,677,678,688,689,690,=
691,692,693,694,695,696,697,698,699,700,701,702,703,704,1104,1105,1106,1107=
},
+uo_art_22314=3D{5930},
+tex_143=3D{3041,3042},
+uo_art_19518=3D{3134},
+uo_art_24197=3D{7813},
+tex_61=3D{545,546,547,550,551,552,554,555,556,557,558,559,1057,1058,1059,1=
060,1061,1072,1073,1074,1077},
+uo_art_20933=3D{4549},
+tex_416=3D{7774,7775,8977,8978},
+uo_art_24096=3D{7712},
+uo_art_21570=3D{5186},
+tex_377=3D{3934,3935,5047,5048,5049,5050},
+uo_art_20250=3D{3866},
+uo_art_21283=3D{4899},
+tex_411=3D{1056,1065},
+uo_art_20609=3D{4225},
+uo_art_19124=3D{2740},
+uo_art_25982=3D{9598},
+uo_art_17729=3D{1345},
+tex_304=3D{2758,2759},
+uo_art_21361=3D{4977},
+uo_art_26316=3D{9932},
+uo_art_20366=3D{3982},
+uo_art_19704=3D{3320},
+tex_17=3D{4459,4460},
+uo_art_20980=3D{4596},
+tex_327=3D{6126},
+uo_art_20293=3D{3909},
+uo_art_30509=3D{14125},
+uo_art_30512=3D{14128},
+uo_art_24359=3D{7975},
+uo_art_19601=3D{3217},
+uo_art_21827=3D{5443},
+tex_91=3D{295,296,297,299,300,301,302,303,304,305},
+tex_256=3D{2473,3644,3645,3646,3647,3710},
+uo_art_32027=3D{15643},
+tex_290=3D{5525,5676},
+uo_art_30556=3D{14172},
+uo_art_20496=3D{4112},
+uo_art_30409=3D{14025},
+uo_art_18923=3D{2539},
+uo_art_19956=3D{3572},
+tex_393=3D{2810},
+tex_528=3D{7229,7234,7243,7248,7257,7261,7506},
+uo_art_23190=3D{6806},
+uo_art_20174=3D{3790},
+uo_art_19551=3D{3167},
+uo_art_24416=3D{8032},
+tex_499=3D{5476,5477,5478,5479},
+uo_art_23983=3D{7599},
+uo_art_18917=3D{2533},
+uo_art_18868=3D{2484},
+uo_art_21289=3D{4905},
+tex_105=3D{131,133,141,143},
+uo_art_19644=3D{3260},
+uo_art_24602=3D{8218},
+uo_art_24105=3D{7721},
+uo_art_22755=3D{6371},
+uo_art_20981=3D{4597},
+uo_art_26183=3D{9799},
+uo_art_19121=3D{2737},
+uo_art_21562=3D{5178},
+uo_art_21834=3D{5450},
+tex_277=3D{2653,2659},
+tex_481=3D{7781,7788},
+uo_art_20423=3D{4039},
+tex_437=3D{3820},
+tex_276=3D{2654,2656},
+uo_art_20545=3D{4161},
+uo_art_24394=3D{8010},
+uo_art_21740=3D{5356},
+uo_art_21245=3D{4861},
+uo_art_30580=3D{14196},
+uo_art_19964=3D{3580},
+tex_414=3D{1418,1419,1420,1422},
+uo_art_18828=3D{2444},
+uo_art_23989=3D{7605},
+tex_543=3D{4009},
+uo_art_18913=3D{2529},
+uo_art_20239=3D{3855},
+uo_art_21268=3D{4884},
+uo_art_20358=3D{3974},
+uo_art_30406=3D{14022},
+armoire-2639=3D{2639,2639},
+uo_art_25357=3D{8973},
+uo_art_22402=3D{6018},
+uo_art_23785=3D{7401},
+uo_art_20614=3D{4230},
+uo_art_20965=3D{4581},
+uo_art_19914=3D{3530},
+tex_128=3D{3071,3072},
+uo_art_19758=3D{3374},
+uo_art_23187=3D{6803},
+uo_art_30547=3D{14163},
+tex_286=3D{7808,7809},
+uo_art_19958=3D{3574},
+uo_art_30557=3D{14173},
+uo_art_22752=3D{6368},
+uo_art_20466=3D{4082},
+tex_305=3D{6184},
+tex_557=3D{9349,9350,9351},
+uo_art_19880=3D{3496},
+uo_art_20276=3D{3892},
+uo_art_21479=3D{5095},
+uo_art_20985=3D{4601},
+uo_art_24425=3D{8041},
+uo_art_21749=3D{5365},
+tex_189=3D{1595,1596,1597,1598,1618,1619},
+uo_art_22309=3D{5925},
+uo_art_21244=3D{4860},
+uo_art_21376=3D{4992},
+uo_art_21296=3D{4912},
+tex_368=3D{3821},
+tex_149=3D{3025,3026},
+uo_art_23968=3D{7584},
+tex_235=3D{1266},
+uo_art_23065=3D{6681},
+uo_art_25949=3D{9565},
+uo_art_22372=3D{5988},
+uo_art_20986=3D{4602},
+tex_184=3D{1608,1609,1610,1634,1635,1636,1637,1638,1639,1640,1641,1645,164=
6,1647,1648,1649,1650,1651,1652},
+tex_513=3D{7611,7612,7613,7614,7615,7616},
+uo_art_30600=3D{14216},
+tex_253=3D{4632,4633,4634,4635},
+uo_art_19860=3D{3476},
+uo_art_24317=3D{7933},
+uo_art_24401=3D{8017},
+uo_art_22286=3D{5902},
+uo_art_21285=3D{4901},
+tex_275=3D{2651,2660},
+tex_359=3D{2779,2780,2781,2782},
+uo_art_20345=3D{3961},
+tex_134=3D{3059,3060},
+uo_art_21458=3D{5074},
+tex_225=3D{1295,1296},
+uo_art_26609=3D{10225},
+tex_301=3D{2765,2766,2767,2768},
+uo_art_20428=3D{4044},
+uo_art_22308=3D{5924},
+uo_art_24398=3D{8014},
+tex_383=3D{4202,4207,4219,4223},
+uo_art_26935=3D{10551},
+tex_178=3D{1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,176=
1,1762,1763,1764,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,211=
6,2117,2118,2119,2120},
+uo_art_23522=3D{7138},
+uo_art_21111=3D{4727},
+uo_art_19517=3D{3133},
+uo_art_26194=3D{9810},
+uo_art_19539=3D{3155},
+uo_art_26270=3D{9886},
+uo_art_23516=3D{7132},
+uo_art_26198=3D{9814},
+uo_art_19722=3D{3338},
+uo_art_19542=3D{3158},
+uo_art_20560=3D{4176},
+uo_art_23559=3D{7175},
+uo_art_25956=3D{9572},
+tex_518=3D{8756,8757},
+uo_art_21249=3D{4865},
+uo_art_21741=3D{5357},
+uo_art_29327=3D{12943},
+uo_art_26673=3D{10289},
+tex_111=3D{61,62,63,64},
+tex_425=3D{3811,3812,3813,3814,4306,4307},
+uo_art_21427=3D{5043},
+tex_515=3D{1250,1254,1255},
+uo_art_21252=3D{4868},
+tex_236=3D{1262,1263,1264,1265},
+uo_art_27474=3D{11090},
+tex_399=3D{1197,1199,1210,1212},
+uo_art_21818=3D{5434},
+uo_art_25955=3D{9571},
+tex_444=3D{3278,3300,3303,3481,3493},
+uo_art_24365=3D{7981},
+uo_art_19532=3D{3148},
+uo_art_18897=3D{2513},
+uo_art_23409=3D{7025},
+uo_art_20211=3D{3827},
+uo_art_21469=3D{5085},
+uo_art_20262=3D{3878},
+tex_84=3D{342,343},
+tex_561=3D{1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,183=
6,1837,1838,1839,1840,1841,1842,1843,1844,1845},
+uo_art_20394=3D{4010},
+uo_art_25185=3D{8801},
+tex_529=3D{7449,7452,7478,7481,7512},
+uo_art_24611=3D{8227},
+uo_art_21487=3D{5103},
+tex_545=3D{3740},
+tex_424=3D{2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282},
+uo_art_21502=3D{5118},
+uo_art_19526=3D{3142},
+uo_art_22751=3D{6367},
+uo_art_25959=3D{9575},
+tex_20=3D{2862,2863,2864,2865},
+uo_art_20267=3D{3883},
+tex_302=3D{2761,2762,2763,2764},
+uo_art_19633=3D{3249},
+tex_299=3D{5510,5512,5661,5663},
+uo_art_26291=3D{9907},
+uo_art_21100=3D{4716},
+tex_252=3D{4824,4825,5018},
+uo_art_23493=3D{7109},
+uo_art_26607=3D{10223},
+uo_art_26255=3D{9871},
+uo_art_26311=3D{9927},
+uo_art_19528=3D{3144},
+tex_405=3D{2941,2960,4491,4492,4493,4494,7591,7595},
+uo_art_19619=3D{3235},
+tex_335=3D{6104,6107,6109,6112},
+uo_art_21835=3D{5451},
+tex_331=3D{6122},
+uo_art_21312=3D{4928},
+uo_art_19929=3D{3545},
+tex_246=3D{1173,1174,1175,1176},
+tex_524=3D{1993,1997},
+uo_art_26688=3D{10304},
+tex_107=3D{85,86},
+uo_art_26618=3D{10234},
+uo_art_23515=3D{7131},
+uo_art_27484=3D{11100},
+uo_art_19632=3D{3248},
+tex_27=3D{1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885=
,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896},
+uo_art_20178=3D{3794},
+uo_art_19478=3D{3094},
+uo_art_26191=3D{9807},
+tex_306=3D{6183},
+uo_art_19130=3D{2746},
+uo_art_23789=3D{7405},
+uo_art_21808=3D{5424},
+tex_440=3D{3232,3233},
+tex_492=3D{3702},
+uo_art_17731=3D{1347},
+uo_art_20567=3D{4183},
+uo_art_24898=3D{8514},
+uo_art_21543=3D{5159},
+uo_art_22373=3D{5989},
+uo_art_22283=3D{5899},
+uo_art_29360=3D{12976},
+tex_116=3D{14,15},
+uo_art_21150=3D{4766},
+uo_art_32343=3D{15959},
+uo_art_18902=3D{2518},
+uo_art_20237=3D{3853},
+uo_art_21833=3D{5449},
+uo_art_22284=3D{5900},
+uo_art_21287=3D{4903},
+uo_art_26193=3D{9809},
+uo_art_20246=3D{3862},
+tex_131=3D{3065,3066},
+uo_art_20268=3D{3884},
+uo_art_30391=3D{14007},
+uo_art_30488=3D{14104},
+uo_art_20306=3D{3922},
+uo_art_20538=3D{4154},
+uo_art_19763=3D{3379},
+uo_art_30597=3D{14213},
+uo_art_19594=3D{3210},
+tex_568=3D{2,3,4,5,7575,7576,7772,7773},
+uo_art_23263=3D{6879},
+uo_art_29331=3D{12947},
+uo_art_20468=3D{4084},
+uo_art_24320=3D{7936},
+uo_art_19609=3D{3225},
+uo_art_19753=3D{3369},
+uo_art_19621=3D{3237},
+uo_art_21829=3D{5445},
+uo_art_20274=3D{3890},
+tex_288=3D{2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,209=
6,2097,2098,2099,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,213=
5,2136,2137,2138,2139},
+uo_art_19963=3D{3579},
+uo_art_21109=3D{4725},
+uo_art_21231=3D{4847},
+uo_art_20569=3D{4185},
+uo_art_24019=3D{7635},
+uo_art_26494=3D{10110},
+uo_art_20060=3D{3676},
+uo_art_21465=3D{5081},
+tex_403=3D{16010,16049},
+tex_548=3D{5468,5469,5470,5471},
+uo_art_26200=3D{9816},
+uo_art_21542=3D{5158},
+uo_art_32370=3D{15986},
+uo_art_32346=3D{15962},
+tex_379=3D{4291},
+uo_art_32106=3D{15722},
+uo_art_32026=3D{15642},
+uo_art_32024=3D{15640},
+tex_501=3D{5481,5482},
+uo_art_23787=3D{7403},
+uo_art_30596=3D{14212},
+uo_art_21477=3D{5093},
+uo_art_25977=3D{9593},
+uo_art_30594=3D{14210},
+uo_art_30593=3D{14209},
+uo_art_20708=3D{4324},
+uo_art_30592=3D{14208},
+uo_art_30591=3D{14207},
+uo_art_20235=3D{3851},
+uo_art_25355=3D{8971},
+uo_art_21161=3D{4777},
+uo_art_30590=3D{14206},
+uo_art_30589=3D{14205},
+uo_art_30587=3D{14203},
+uo_art_21571=3D{5187},
+uo_art_24330=3D{7946},
+uo_art_20984=3D{4600},
+uo_art_30583=3D{14199},
+uo_art_20171=3D{3787},
+uo_art_30582=3D{14198},
+uo_art_24335=3D{7951},
+tex_293=3D{5520,5672},
+uo_art_20164=3D{3780},
+uo_art_30581=3D{14197},
+uo_art_24331=3D{7947},
+uo_art_30579=3D{14195},
+uo_art_24254=3D{7870},
+tex_354=3D{4012},
+uo_art_24399=3D{8015},
+uo_art_21539=3D{5155},
+uo_art_30577=3D{14193},
+uo_art_25176=3D{8792},
+tex_215=3D{1381,1391},
+tex_6=3D{3703,3707,3711,3715,4011,4014,5453,7861},
+uo_art_19615=3D{3231},
+uo_art_30568=3D{14184},
+uo_art_26209=3D{9825},
+uo_art_30567=3D{14183},
+uo_art_30566=3D{14182},
+uo_art_20562=3D{4178},
+uo_art_26227=3D{9843},
+uo_art_30486=3D{14102},
+uo_art_30565=3D{14181},
+uo_art_30564=3D{14180},
+uo_art_21425=3D{5041},
+uo_art_23262=3D{6878},
+uo_art_20539=3D{4155},
+uo_art_21260=3D{4876},
+uo_art_20930=3D{4546},
+uo_art_24400=3D{8016},
+uo_art_21437=3D{5053},
+uo_art_30561=3D{14177},
+uo_art_18830=3D{2446},
+uo_art_30559=3D{14175},
+tex_342=3D{5350},
+uo_art_19755=3D{3371},
+uo_art_25161=3D{8777},
+uo_art_30555=3D{14171},
+uo_art_30553=3D{14169},
+uo_art_30552=3D{14168},
+tex_460=3D{4208,4209,4210,4211,4212,4213,4214,4215},
+uo_art_30551=3D{14167},
+tex_427=3D{3546},
+tex_259=3D{2472,3712},
+uo_art_30548=3D{14164},
+uo_art_21743=3D{5359},
+uo_art_24895=3D{8511},
+tex_179=3D{1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,166=
5,1666,1667,1668,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,174=
4,1745,1746,1747,1748},
+uo_art_24424=3D{8040},
+uo_art_26207=3D{9823},
+uo_art_23558=3D{7174},
+uo_art_21455=3D{5071},
+uo_art_30545=3D{14161},
+uo_art_30544=3D{14160},
+tex_470=3D{1117,1119,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,115=
1,1152},
+tex_504=3D{5540,5541,5651,5652},
+uo_art_22302=3D{5918},
+uo_art_30540=3D{14156},
+uo_art_22290=3D{5906},
+uo_art_20173=3D{3789},
+uo_art_30537=3D{14153},
+uo_art_30536=3D{14152},
+tex_87=3D{332,333,334,336,337},
+uo_art_30535=3D{14151},
+uo_art_30533=3D{14149},
+uo_art_30531=3D{14147},
+uo_art_24384=3D{8000},
+uo_art_23324=3D{6940},
+tex_72=3D{467,468},
+uo_art_30526=3D{14142},
+uo_art_30525=3D{14141},
+uo_art_23779=3D{7395},
+uo_art_30524=3D{14140},
+tex_117=3D{2866,2867},
+uo_art_20408=3D{4024},
+tex_311=3D{6178},
+uo_art_26179=3D{9795},
+uo_art_30521=3D{14137},
+uo_art_19630=3D{3246},
+uo_art_23563=3D{7179},
+uo_art_20298=3D{3914},
+uo_art_19641=3D{3257},
+uo_art_30519=3D{14135},
+uo_art_30517=3D{14133},
+uo_art_26205=3D{9821},
+uo_art_18919=3D{2535},
+uo_art_30516=3D{14132},
+uo_art_30515=3D{14131},
+uo_art_19590=3D{3206},
+uo_art_30514=3D{14130},
+uo_art_19912=3D{3528},
+uo_art_24343=3D{7959},
+uo_art_30505=3D{14121},
+uo_art_30498=3D{14114},
+uo_art_30389=3D{14005},
+uo_art_30497=3D{14113},
+tex_564=3D{1834,1835,1836,1837,1842,1843,1844,1845},
+uo_art_20368=3D{3984},
+uo_art_21414=3D{5030},
+uo_art_21565=3D{5181},
+uo_art_19610=3D{3226},
+tex_347=3D{5319,5320,5321,5322,5323,5324,5325,5326},
+uo_art_30494=3D{14110},
+uo_art_20126=3D{3742},
+uo_art_30493=3D{14109},
+uo_art_18812=3D{2428},
+uo_art_30491=3D{14107},
+uo_art_26975=3D{10591},
+uo_art_30479=3D{14095},
+uo_art_24021=3D{7637},
+uo_art_18847=3D{2463},
+uo_art_30487=3D{14103},
+uo_art_20162=3D{3778},
+uo_art_25196=3D{8812},
+uo_art_18814=3D{2430},
+uo_art_30485=3D{14101},
+uo_art_30484=3D{14100},
+tex_243=3D{1223,1237},
+uo_art_30481=3D{14097},
+tex_329=3D{6124},
+uo_art_26226=3D{9842},
+uo_art_18815=3D{2431},
+uo_art_22127=3D{5743},
+uo_art_30474=3D{14090},
+uo_art_25354=3D{8970},
+uo_art_30473=3D{14089},
+uo_art_19966=3D{3582},
+tex_355=3D{527,530,531,532,533,535,537},
+uo_art_30415=3D{14031},
+uo_art_20574=3D{4190},
+uo_art_30414=3D{14030},
+uo_art_21459=3D{5075},
+tex_16=3D{3798},
+uo_art_30410=3D{14026},
+uo_art_21282=3D{4898},
+uo_art_30407=3D{14023},
+uo_art_20300=3D{3916},
+uo_art_30405=3D{14021},
+uo_art_20231=3D{3847},
+uo_art_19537=3D{3153},
+uo_art_30403=3D{14019},
+uo_art_30400=3D{14016},
+uo_art_21313=3D{4929},
+uo_art_30399=3D{14015},
+uo_art_21784=3D{5400},
+uo_art_20619=3D{4235},
+tex_497=3D{5538,5539,5649,5650},
+uo_art_24057=3D{7673},
+uo_art_24196=3D{7812},
+uo_art_30395=3D{14011},
+tex_997=3D{4650},
+uo_art_30393=3D{14009},
+tex_344=3D{5348},
+uo_art_30390=3D{14006},
+uo_art_20331=3D{3947},
+uo_art_30388=3D{14004},
+uo_art_30387=3D{14003},
+uo_art_26257=3D{9873},
+uo_art_26225=3D{9841},
+uo_art_30045=3D{13661},
+tex_230=3D{1217,1218,1219,1284,1286,1287},
+uo_art_25960=3D{9576},
+uo_art_30042=3D{13658},
+uo_art_30041=3D{13657},
+uo_art_26631=3D{10247},
+uo_art_19686=3D{3302},
+uo_art_30035=3D{13651},
+uo_art_30034=3D{13650},
+uo_art_20064=3D{3680},
+uo_art_30033=3D{13649},
+uo_art_19555=3D{3171},
+uo_art_19541=3D{3157},
+tex_475=3D{2555,2557,2558,2559,2560,2562,2563,2564,2575,2576,2577,2598,260=
0,2842,2843,2844,2845,2846,2847,2854,2855,2856},
+uo_art_30031=3D{13647},
+uo_art_30030=3D{13646},
+uo_art_30029=3D{13645},
+uo_art_24386=3D{8002},
+tex_167=3D{2989,2990},
+uo_art_29359=3D{12975},
+uo_art_20074=3D{3690},
+tex_83=3D{348,349},
+uo_art_23950=3D{7566},
+uo_art_29349=3D{12965},
+uo_art_29348=3D{12964},
+uo_art_26216=3D{9832},
+uo_art_29345=3D{12961},
+uo_art_23518=3D{7134},
+uo_art_29343=3D{12959},
+uo_art_19559=3D{3175},
+uo_art_21309=3D{4925},
+uo_art_19762=3D{3378},
+uo_art_23955=3D{7571},
+uo_art_29340=3D{12956},
+uo_art_29338=3D{12954},
+uo_art_19660=3D{3276},
+uo_art_29337=3D{12953},
+uo_art_21439=3D{5055},
+uo_art_26276=3D{9892},
+uo_art_21545=3D{5161},
+uo_art_29335=3D{12951},
+uo_art_29334=3D{12950},
+uo_art_19720=3D{3336},
+uo_art_29332=3D{12948},
+uo_art_29330=3D{12946},
+uo_art_29329=3D{12945},
+uo_art_24434=3D{8050},
+uo_art_20021=3D{3637},
+uo_art_29328=3D{12944},
+uo_art_21473=3D{5089},
+tex_133=3D{3061,3062},
+uo_art_29326=3D{12942},
+uo_art_29325=3D{12941},
+uo_art_29324=3D{12940},
+uo_art_27464=3D{11080},
+uo_art_29320=3D{12936},
+uo_art_29319=3D{12935},
+uo_art_29318=3D{12934},
+uo_art_25152=3D{8768},
+tex_998=3D{12788},
+uo_art_29076=3D{12692},
+uo_art_20062=3D{3678},
+uo_art_29063=3D{12679},
+uo_art_26208=3D{9824},
+uo_art_29034=3D{12650},
+uo_art_27998=3D{11614},
+uo_art_27993=3D{11609},
+uo_art_27492=3D{11108},
+tex_192=3D{1535,1536,1537,1538,1539,1540,1541,1542,1543,1545,1546,1547,154=
8,1549,1550,1551,1552,1553,1554,1555,1556,1587,1588,1612,1613,1614},
+uo_art_27491=3D{11107},
+uo_art_26310=3D{9926},
+uo_art_27489=3D{11105},
+uo_art_21486=3D{5102},
+uo_art_27486=3D{11102},
+uo_art_20161=3D{3777},
+uo_art_20025=3D{3641},
+uo_art_21544=3D{5160},
+tex_161=3D{3001,3002},
+uo_art_25201=3D{8817},
+uo_art_25208=3D{8824},
+uo_art_25358=3D{8974},
+uo_art_27476=3D{11092},
+tex_466=3D{2604,2612},
+uo_art_27475=3D{11091},
+uo_art_27469=3D{11085},
+tex_127=3D{3073,3074},
+uo_art_27467=3D{11083},
+uo_art_29323=3D{12939},
+uo_art_27463=3D{11079},
+uo_art_27460=3D{11076},
+uo_art_27458=3D{11074},
+uo_art_20615=3D{4231},
+uo_art_27456=3D{11072},
+tex_145=3D{3037,3038},
+uo_art_24411=3D{8027},
+uo_art_24382=3D{7998},
+uo_art_27454=3D{11070},
+uo_art_30490=3D{14106},
+uo_art_26974=3D{10590},
+uo_art_23967=3D{7583},
+uo_art_26934=3D{10550},
+uo_art_19546=3D{3162},
+uo_art_26689=3D{10305},
+uo_art_26687=3D{10303},
+uo_art_24102=3D{7718},
+uo_art_26685=3D{10301},
+uo_art_21456=3D{5072},
+uo_art_25147=3D{8763},
+uo_art_21588=3D{5204},
+uo_art_25719=3D{9335},
+uo_art_26614=3D{10230},
+uo_art_21569=3D{5185},
+uo_art_20570=3D{4186},
+tex_303=3D{2760,13639,13640,13641,13642,13643,13644},
+tex_249=3D{1871,2015,2016,2100,2166},
+uo_art_19752=3D{3368},
+uo_art_25148=3D{8764},
+tex_250=3D{1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,186=
0,1861,1862,1863,1864},
+tex_168=3D{2987,2988},
+uo_art_20550=3D{4166},
+uo_art_24383=3D{7999},
+uo_art_26612=3D{10228},
+tex_201=3D{1523,1524,1525,1526,11333,11334,11335,11336},
+uo_art_19543=3D{3159},
+uo_art_26611=3D{10227},
+uo_art_26610=3D{10226},
+uo_art_24389=3D{8005},
+uo_art_19029=3D{2645},
+tex_484=3D{7735,7745},
+uo_art_24033=3D{7649},
+uo_art_26588=3D{10204},
+uo_art_26579=3D{10195},
+uo_art_22298=3D{5914},
+uo_art_23170=3D{6786},
+uo_art_30575=3D{14191},
+tex_532=3D{2581,2582,2583,2586,2587,2588,2594,2595,2596},
+uo_art_26566=3D{10182},
+uo_art_26535=3D{10151},
+uo_art_26532=3D{10148},
+uo_art_26531=3D{10147},
+uo_art_26530=3D{10146},
+uo_art_26513=3D{10129},
+uo_art_24045=3D{7661},
+uo_art_26504=3D{10120},
+uo_art_26499=3D{10115},
+uo_art_26385=3D{10001},
+uo_art_26384=3D{10000},
+uo_art_21164=3D{4780},
+uo_art_26319=3D{9935},
+uo_art_26318=3D{9934},
+uo_art_26317=3D{9933},
+uo_art_26190=3D{9806},
+uo_art_26315=3D{9931},
+uo_art_26314=3D{9930},
+uo_art_18899=3D{2515},
+uo_art_26313=3D{9929},
+tex_521=3D{5504,5505},
+uo_art_18880=3D{2496},
+uo_art_27490=3D{11106},
+uo_art_26308=3D{9924},
+uo_art_20249=3D{3865},
+uo_art_26306=3D{9922},
+uo_art_26304=3D{9920},
+uo_art_19922=3D{3538},
+uo_art_26303=3D{9919},
+tex_63=3D{438,439,440,444,445,556,557,558,559,1074,1077},
+uo_art_25833=3D{9449},
+uo_art_26298=3D{9914},
+uo_art_24374=3D{7990},
+tex_446=3D{3282,3292,3325,3483,3495,3499},
+uo_art_26296=3D{9912},
+tex_292=3D{5523,5673},
+tex_500=3D{5472,5473,5474,5475,5480,5483},
+uo_art_20317=3D{3933},
+uo_art_26295=3D{9911},
+uo_art_26293=3D{9909},
+uo_art_24381=3D{7997},
+uo_art_26292=3D{9908},
+uo_art_26290=3D{9906},
+uo_art_26289=3D{9905},
+uo_art_26288=3D{9904},
+uo_art_26275=3D{9891},
+uo_art_25971=3D{9587},
+uo_art_26274=3D{9890},
+uo_art_26273=3D{9889},
+uo_art_26197=3D{9813},
+uo_art_26269=3D{9885},
+tex_436=3D{2146,2147,2148,2186,2187},
+uo_art_26256=3D{9872},
+uo_art_26254=3D{9870},
+uo_art_18938=3D{2554},
+uo_art_23992=3D{7608},
+uo_art_19556=3D{3172},
+uo_art_26251=3D{9867},
+uo_art_26246=3D{9862},
+tex_535=3D{2702,3506},
+uo_art_26244=3D{9860},
+uo_art_30574=3D{14190},
+uo_art_26240=3D{9856},
+uo_art_21143=3D{4759},
+tex_553=3D{7038},
+uo_art_26236=3D{9852},
+uo_art_20385=3D{4001},
+uo_art_25212=3D{8828},
+tex_52=3D{667,668},
+tex_162=3D{2999,3000},
+uo_art_26232=3D{9848},
+uo_art_19581=3D{3197},
+uo_art_26231=3D{9847},
+tex_70=3D{511,512,513,517,518},
+uo_art_21269=3D{4885},
+uo_art_20263=3D{3879},
+uo_art_26228=3D{9844},
+uo_art_24027=3D{7643},
+tex_24=3D{166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,=
182,183,184,185,186,187,188,189,190,191,192,193,194,836,837,838,839,840,841=
,842,843,844,845,846,847,848,849,850,851,1981,1982,1983,1984,1985,1986,1987=
,1988,1989,1990},
+tex_81=3D{344,345,346,347,348,349,356,357,358,359,394,395,396,397},
+uo_art_20230=3D{3846},
+uo_art_21497=3D{5113},
+uo_art_30478=3D{14094},
+uo_art_30385=3D{14001},
+uo_art_26221=3D{9837},
+uo_art_20360=3D{3976},
+uo_art_19654=3D{3270},
+uo_art_26219=3D{9835},
+uo_art_20633=3D{4249},
+uo_art_26214=3D{9830},
+uo_art_20201=3D{3817},
+uo_art_19122=3D{2738},
+uo_art_26212=3D{9828},
+uo_art_26211=3D{9827},
+uo_art_26210=3D{9826},
+uo_art_24328=3D{7944},
+uo_art_26206=3D{9822},
+uo_art_18802=3D{2418},
+uo_art_26203=3D{9819},
+uo_art_20563=3D{4179},
+uo_art_26201=3D{9817},
+uo_art_26199=3D{9815},
+uo_art_20967=3D{4583},
+uo_art_26196=3D{9812},
+uo_art_26195=3D{9811},
+tex_158=3D{3007,3008},
+uo_art_26192=3D{9808},
+tex_233=3D{1268,1269,1270,1271},
+uo_art_26189=3D{9805},
+uo_art_19554=3D{3170},
+uo_art_26188=3D{9804},
+tex_310=3D{6179},
+uo_art_26187=3D{9803},
+uo_art_23202=3D{6818},
+uo_art_20643=3D{4259},
+tex_323=3D{6130},
+uo_art_20245=3D{3861},
+uo_art_30523=3D{14139},
+uo_art_21512=3D{5128},
+uo_art_20534=3D{4150},
+uo_art_20241=3D{3857},
+uo_art_26177=3D{9793},
+uo_art_19683=3D{3299},
+uo_art_26099=3D{9715},
+uo_art_26098=3D{9714},
+uo_art_20090=3D{3706},
+uo_art_25171=3D{8787},
+uo_art_19689=3D{3305},
+uo_art_18900=3D{2516},
+uo_art_26096=3D{9712},
+uo_art_26095=3D{9711},
+uo_art_23786=3D{7402},
+tex_566=3D{36,37,38,39},
+uo_art_25177=3D{8793},
+uo_art_19631=3D{3247},
+uo_art_26094=3D{9710},
+tex_197=3D{1389,1390,1579,1580},
+tex_89=3D{144,147,150,151,154,157,160,161,325,326,327,328},
+uo_art_26312=3D{9928},
+tex_76=3D{452,453},
+tex_260=3D{2881,2882,2883,2884,3707,5465,6039,6040,6041,6042,6043,6044,134=
22,13423,13424,13425,13426,13427,13428,13429,13430,13431,13432,13433,13434,=
13435,13436,13437,13438,13439,13440,13441,13442,13443,13444,13445,13456,134=
57,13458,13459,13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,=
13470,13471,13472,13473,13474,13475,13476,13477,13478,13479,13480,13481,134=
82,13483,13493,13494,13496,13497,13498,13499,13501,13502,13503,13504,13506,=
13507,13508,13509,13511,13512,13513,13514,13521,13522,13523,13524,13525,135=
49,13550,13551,13552,13553,13554,13555,13556,13557,13558,13559,13560,13561,=
13562,13563,13564,13565,13566,13567,13568,13569,13570,13571,13572,13573,135=
74,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586,=
13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,135=
99,13600,13601,13602,13603,13604,13605,13606,13607,13608},
+uo_art_26090=3D{9706},
+tex_468=3D{2851},
+uo_art_26088=3D{9704},
+uo_art_26084=3D{9700},
+uo_art_26070=3D{9686},
+tex_10=3D{3796,3797},
+uo_art_25983=3D{9599},
+uo_art_25981=3D{9597},
+uo_art_24339=3D{7955},
+uo_art_19030=3D{2646},
+uo_art_25980=3D{9596},
+tex_431=3D{3550},
+uo_art_25979=3D{9595},
+uo_art_21481=3D{5097},
+tex_363=3D{2798,2799,2800,2801},
+uo_art_18869=3D{2485},
+uo_art_20349=3D{3965},
+tex_430=3D{3549},
+uo_art_21480=3D{5096},
+uo_art_25978=3D{9594},
+uo_art_24255=3D{7871},
+uo_art_30595=3D{14211},
+uo_art_19538=3D{3154},
+uo_art_25975=3D{9591},
+uo_art_25973=3D{9589},
+uo_art_25970=3D{9586},
+tex_213=3D{1429},
+uo_art_25969=3D{9585},
+tex_193=3D{1539,1540,1541,1542,1543,1544,1545,1546,1551,1552,1553,1554,155=
5,1556,1587,1588,1612,1613,1614},
+uo_art_21106=3D{4722},
+uo_art_18834=3D{2450},
+uo_art_25967=3D{9583},
+uo_art_25965=3D{9581},
+uo_art_20642=3D{4258},
+uo_art_25961=3D{9577},
+uo_art_19520=3D{3136},
+uo_art_25191=3D{8807},
+tex_401=3D{1189,1190,1191,1192},
+uo_art_25957=3D{9573},
+uo_art_22306=3D{5922},
+uo_art_25954=3D{9570},
+uo_art_25953=3D{9569},
+uo_art_25951=3D{9567},
+uo_art_23951=3D{7567},
+uo_art_20525=3D{4141},
+tex_349=3D{5303,5304,5305,5306,5307,5308,5309,5310},
+uo_art_21261=3D{4877},
+uo_art_25948=3D{9564},
+uo_art_25947=3D{9563},
+uo_art_25946=3D{9562},
+uo_art_25944=3D{9560},
+uo_art_25943=3D{9559},
+uo_art_25942=3D{9558},
+tex_389=3D{2750},
+uo_art_25941=3D{9557},
+uo_art_25940=3D{9556},
+uo_art_25835=3D{9451},
+uo_art_21420=3D{5036},
+tex_372=3D{2848,2852},
+uo_art_26300=3D{9916},
+uo_art_25832=3D{9448},
+uo_art_25830=3D{9446},
+uo_art_25825=3D{9441},
+tex_556=3D{9150},
+uo_art_25421=3D{9037},
+uo_art_17745=3D{1361},
+uo_art_20561=3D{4177},
+tex_21=3D{1823,1846,1847,1865,1866,1867,1868,1869,1870,1871,1922,1923,1952=
,1953,1954,2015,2016,2100,2166},
+uo_art_20071=3D{3687},
+uo_art_22305=3D{5921},
+uo_art_20566=3D{4182},
+uo_art_25419=3D{9035},
+uo_art_25360=3D{8976},
+uo_art_25359=3D{8975},
+uo_art_27480=3D{11096},
+uo_art_25356=3D{8972},
+uo_art_25353=3D{8969},
+uo_art_18898=3D{2514},
+tex_308=3D{6181},
+uo_art_25351=3D{8967},
+uo_art_26234=3D{9850},
+tex_202=3D{1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,148=
6,1487,1488,11316,11317},
+uo_art_25195=3D{8811},
+uo_art_21238=3D{4854},
+uo_art_21163=3D{4779},
+uo_art_21822=3D{5438},
+uo_art_26097=3D{9713},
+uo_art_17723=3D{1339},
+uo_art_21464=3D{5080},
+tex_53=3D{661,662},
+uo_art_22764=3D{6380},
+uo_art_21279=3D{4895},
+uo_art_19582=3D{3198},
+uo_art_18801=3D{2417},
+uo_art_17726=3D{1342},
+uo_art_25207=3D{8823},
+uo_art_30404=3D{14020},
+uo_art_23492=3D{7108},
+uo_art_25156=3D{8772},
+tex_429=3D{3548},
+uo_art_25206=3D{8822},
+uo_art_25205=3D{8821},
+uo_art_25204=3D{8820},
+uo_art_21585=3D{5201},
+uo_art_19527=3D{3143},
+uo_art_25202=3D{8818},
+uo_art_20518=3D{4134},
+uo_art_25199=3D{8815},
+uo_art_24387=3D{8003},
+uo_art_30496=3D{14112},
+uo_art_25194=3D{8810},
+uo_art_26178=3D{9794},
+tex_274=3D{2207,2208,2209,2210,2211,2212},
+tex_506=3D{2482,3701},
+uo_art_19664=3D{3280},
+uo_art_20513=3D{4129},
+uo_art_30483=3D{14099},
+uo_art_25190=3D{8806},
+uo_art_21814=3D{5430},
+uo_art_19584=3D{3200},
+uo_art_24391=3D{8007},
+uo_art_25187=3D{8803},
+uo_art_25186=3D{8802},
+uo_art_25184=3D{8800},
+uo_art_26574=3D{10190},
+uo_art_25172=3D{8788},
+uo_art_21302=3D{4918},
+tex_32=3D{1802,1803,1804,1805},
+uo_art_19659=3D{3275},
+tex_374=3D{3713,3714,3721,3722,5108,5109},
+uo_art_20982=3D{4598},
+uo_art_30563=3D{14179},
+uo_art_25162=3D{8778},
+uo_art_30558=3D{14174},
+uo_art_21110=3D{4726},
+uo_art_25157=3D{8773},
+tex_146=3D{3035,3036},
+tex_239=3D{1222,1227,1236,1244,1245},
+uo_art_18922=3D{2538},
+uo_art_25192=3D{8808},
+uo_art_20251=3D{3867},
+uo_art_24420=3D{8036},
+uo_art_21509=3D{5125},
+tex_453=3D{12813,12814,12826,12832,12833,12834,12835,12836,12838,12839,128=
40,12841,12842,12854,12865,12906,12907,12908,12909,12910,12911},
+uo_art_21499=3D{5115},
+uo_art_25151=3D{8767},
+uo_art_20024=3D{3640},
+tex_69=3D{512,513,514,517,518},
+uo_art_19550=3D{3166},
+uo_art_19756=3D{3372},
+uo_art_22303=3D{5919},
+uo_art_25146=3D{8762},
+uo_art_20175=3D{3791},
+tex_291=3D{5522,5674},
+uo_art_24098=3D{7714},
+uo_art_18807=3D{2423},
+tex_294=3D{5521,5671},
+uo_art_19770=3D{3386},
+uo_art_23414=3D{7030},
+uo_art_21159=3D{4775},
+uo_art_19721=3D{3337},
+uo_art_24899=3D{8515},
+uo_art_19116=3D{2732},
+uo_art_18876=3D{2492},
+uo_art_19533=3D{3149},
+uo_art_24896=3D{8512},
+uo_art_30492=3D{14108},
+uo_art_21450=3D{5066},
+tex_187=3D{1401,1402,1403,1404,1405,1406,1620,1621,1624,1625},
+uo_art_19738=3D{3354},
+uo_art_24366=3D{7982},
+uo_art_19593=3D{3209},
+uo_art_24858=3D{8474},
+tex_407=3D{2940,2959},
+uo_art_21286=3D{4902},
+tex_36=3D{1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019=
,1020,1021,1022,1023,1024,1025,1026},
+tex_278=3D{2662,2665},
+uo_art_24610=3D{8226},
+uo_art_26091=3D{9707},
+uo_art_30529=3D{14145},
+uo_art_24783=3D{8399},
+uo_art_18833=3D{2449},
+tex_271=3D{2711,2712,2713,2714,2715,2716,2717,2718},
+uo_art_25964=3D{9580},
+uo_art_24654=3D{8270},
+uo_art_23553=3D{7169},
+uo_art_24433=3D{8049},
+tex_48=3D{496,497,498,500,501,502,503,504,505,734,735,736,738,739,740,741,=
742,743,744,745,746,747,748},
+uo_art_24616=3D{8232},
+uo_art_19530=3D{3146},
+uo_art_24608=3D{8224},
+tex_314=3D{6175},
+uo_art_19552=3D{3168},
+uo_art_24600=3D{8216},
+uo_art_20213=3D{3829},
+tex_325=3D{6128},
+uo_art_24586=3D{8202},
+uo_art_24582=3D{8198},
+uo_art_24579=3D{8195},
+uo_art_24573=3D{8189},
+tex_562=3D{254,255,256,257,258,259,1085,1086,1087,1088},
+uo_art_24482=3D{8098},
+tex_461=3D{4171,4172},
+uo_art_24443=3D{8059},
+tex_339=3D{6096,6097,6101,6102},
+uo_art_24431=3D{8047},
+uo_art_26233=3D{9849},
+uo_art_19754=3D{3370},
+tex_279=3D{2663,2666},
+uo_art_24430=3D{8046},
+uo_art_20172=3D{3788},
+uo_art_25200=3D{8816},
+uo_art_21476=3D{5092},
+uo_art_20417=3D{4033},
+uo_art_26089=3D{9705},
+uo_art_24428=3D{8044},
+uo_art_19618=3D{3234},
+uo_art_19734=3D{3350},
+uo_art_20257=3D{3873},
+uo_art_20618=3D{4234},
+uo_art_23413=3D{7029},
+uo_art_19735=3D{3351},
+uo_art_24423=3D{8039},
+uo_art_19918=3D{3534},
+uo_art_24421=3D{8037},
+uo_art_19624=3D{3240},
+uo_art_24417=3D{8033},
+uo_art_21755=3D{5371},
+uo_art_17739=3D{1355},
+uo_art_20968=3D{4584},
+uo_art_23508=3D{7124},
+tex_420=3D{2973,2974},
+uo_art_21831=3D{5447},
+uo_art_22313=3D{5929},
+uo_art_22026=3D{5642},
+tex_447=3D{3230,3281,3284,3291,3321,3324,3327,3330,3477,3485,3489,3497},
+uo_art_24024=3D{7640},
+tex_270=3D{5950},
+tex_395=3D{2797},
+uo_art_24410=3D{8026},
+uo_art_24409=3D{8025},
+uo_art_24408=3D{8024},
+tex_42=3D{872,873,874,876,877,878,879,880,881},
+uo_art_24406=3D{8022},
+uo_art_24404=3D{8020},
+uo_art_24403=3D{8019},
+uo_art_24402=3D{8018},
+uo_art_20065=3D{3681},
+uo_art_21806=3D{5422},
+uo_art_26237=3D{9853},
+tex_1=3D{3512,3513},
+uo_art_25209=3D{8825},
+uo_art_21233=3D{4849},
+uo_art_21504=3D{5120},
+uo_art_24090=3D{7706},
+uo_art_21460=3D{5076},
+uo_art_24900=3D{8516},
+uo_art_24395=3D{8011},
+uo_art_19876=3D{3492},
+tex_474=3D{975,976,977,978},
+tex_169=3D{2985,2986},
+tex_115=3D{34,35},
+uo_art_19580=3D{3196},
+uo_art_21102=3D{4718},
+uo_art_24390=3D{8006},
+tex_206=3D{1462,1463,1464,1465,1467,1468,1469,1470},
+uo_art_19887=3D{3503},
+uo_art_30549=3D{14165},
+tex_88=3D{316,317,318,319,320,329},
+tex_375=3D{3568,3569},
+uo_art_21495=3D{5111},
+tex_266=3D{3648,3649},
+uo_art_18872=3D{2488},
+uo_art_24370=3D{7986},
+uo_art_30043=3D{13659},
+uo_art_30543=3D{14159},
+tex_199=3D{1520,1532,11330,11342},
+uo_art_19125=3D{2741},
+tex_523=3D{330,331},
+tex_0=3D{669,2868,2869,2870,2871,2872,2873,2874,2876,2877,2878,2879,2880,2=
881,2882,2883,2884,2911,2912,2913,2917,2918,2919,2928,2929,2930,2933,2934,2=
935,2936,2937,2938,2939,2947,2948,2949,2952,2953,2954,2955,2956,2957,2958,4=
495,4496,4497,4498,16004,16005,16006,16007,16009,16050,16083,16084,16085},
+uo_art_21266=3D{4882},
+uo_art_24379=3D{7995},
+uo_art_18937=3D{2553},
+uo_art_19521=3D{3137},
+uo_art_24377=3D{7993},
+tex_530=3D{2420,2421,8296,8314},
+tex_136=3D{3055,3056},
+uo_art_26593=3D{10209},
+tex_49=3D{685,686},
+uo_art_24375=3D{7991},
+tex_47=3D{577,578,579,580,581,582,583,584,585,586,761,762,763,764,765,766,=
767,768,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803},
+tex_572=3D{1842,1843,1844,1845},
+tex_490=3D{3903,3904,3905,3906,7163,7164,7165,7166},
+uo_art_30562=3D{14178},
+uo_art_20004=3D{3620},
+tex_369=3D{3822},
+uo_art_20529=3D{4145},
+uo_art_24371=3D{7987},
+uo_art_21276=3D{4892},
+uo_art_21466=3D{5082},
+tex_51=3D{679,680,681,682,683,684},
+uo_art_18871=3D{2487},
+uo_art_20165=3D{3781},
+tex_12=3D{3670,3672},
+uo_art_24042=3D{7658},
+uo_art_19558=3D{3174},
+uo_art_24396=3D{8012},
+uo_art_23971=3D{7587},
+tex_99=3D{174,175,176,177,178,179,180,181},
+uo_art_20323=3D{3939},
+tex_483=3D{7754,7764},
+tex_80=3D{371,373,374,375,376,377,378,379,380,381,420},
+uo_art_19128=3D{2744},
+uo_art_24357=3D{7973},
+uo_art_24104=3D{7720},
+tex_449=3D{4609,4610,4611,4612,4613,4614,4615,4616,4617,4618,4619,4620},
+tex_367=3D{3819},
+uo_art_24355=3D{7971},
+uo_art_30506=3D{14122},
+uo_art_19771=3D{3387},
+uo_art_20422=3D{4038},
+uo_art_24342=3D{7958},
+uo_art_18806=3D{2422},
+uo_art_24337=3D{7953},
+uo_art_21467=3D{5083},
+uo_art_19033=3D{2649},
+uo_art_19536=3D{3152},
+uo_art_19924=3D{3540},
+uo_art_24336=3D{7952},
+tex_445=3D{3279,3285,3301,3304,3322,3328,3331,3479,3487,3491},
+uo_art_23514=3D{7130},
+uo_art_24333=3D{7949},
+tex_38=3D{983,984,993,994},
+uo_art_22292=3D{5908},
+uo_art_20193=3D{3809},
+uo_art_21511=3D{5127},
+uo_art_21505=3D{5121},
+tex_228=3D{1289,1290},
+uo_art_20634=3D{4250},
+uo_art_24325=3D{7941},
+uo_art_30539=3D{14155},
+tex_123=3D{3083,3084},
+uo_art_24318=3D{7934},
+tex_343=3D{5349},
+uo_art_19640=3D{3256},
+tex_350=3D{5295,5296,5297,5298,5299,5300,5301,5302},
+uo_art_30578=3D{14194},
+uo_art_20406=3D{4022},
+uo_art_24252=3D{7868},
+uo_art_24240=3D{7856},
+tex_129=3D{3031,3032,3069,3070},
+uo_art_24231=3D{7847},
+uo_art_19775=3D{3391},
+uo_art_18800=3D{2416},
+uo_art_24195=3D{7811},
+uo_art_19716=3D{3332},
+uo_art_20519=3D{4135},
+uo_art_18901=3D{2517},
+tex_554=3D{7777,7784},
+uo_art_20964=3D{4580},
+tex_220=3D{1313,1314,1315,1316},
+uo_art_20573=3D{4189},
+uo_art_21363=3D{4979},
+tex_558=3D{511,512,513,517,518},
+uo_art_26598=3D{10214},
+tex_485=3D{7726,7727,7728,7729,7730,7731},
+uo_art_24356=3D{7972},
+uo_art_24103=3D{7719},
+uo_art_26686=3D{10302},
+uo_art_24099=3D{7715},
+uo_art_19129=3D{2745},
+tex_50=3D{661,662,663,664,665,666,667,668,679,680,681,682,683,684,685,686},
+uo_art_24097=3D{7713},
+uo_art_24095=3D{7711},
+tex_4=3D{16,17,18,20,21,22,24,25,506,507,508,509,947,948,949,2719,2720,272=
1,2722,2723,2724,2725,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,282=
3,2824,2825,2826,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,284=
0,8657,8658,8659,8660},
+tex_212=3D{1432,1433,1434,1435},
+uo_art_20217=3D{3833},
+uo_art_24094=3D{7710},
+uo_art_19529=3D{3145},
+uo_art_20104=3D{3720},
+uo_art_24093=3D{7709},
+uo_art_19127=3D{2743},
+uo_art_19764=3D{3380},
+uo_art_24091=3D{7707},
+uo_art_19920=3D{3536},
+tex_180=3D{1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,171=
3,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,172=
8,1729,1730,1731,1732,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,216=
0,2161,2162,2163,2164,2165},
+tex_519=3D{299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314=
,315,321,322,323,324,329,333,334,336,337,342,343,924,925,926},
+tex_412=3D{1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,142=
6,1427,1428,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,8576,857=
7,8578,8579,8580,8581,8582,8583},
+uo_art_24030=3D{7646},
+tex_426=3D{3307,3308,3309,3311,3312,3313},
+tex_209=3D{1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,145=
6,1457,1458,8524,8525,11346,11357,11358,11359},
+uo_art_24086=3D{7702},
+uo_art_24059=3D{7675},
+uo_art_20215=3D{3831},
+uo_art_21374=3D{4990},
+tex_319=3D{6153},
+uo_art_22024=3D{5640},
+tex_86=3D{335,338,339},
+uo_art_21474=3D{5090},
+uo_art_21115=3D{4731},
+tex_465=3D{6009,6010,6011,6012},
+uo_art_21318=3D{4934},
+uo_art_22967=3D{6583},
+tex_439=3D{3826},
+uo_art_19905=3D{3521},
+uo_art_24054=3D{7670},
+uo_art_21424=3D{5040},
+uo_art_19667=3D{3283},
+uo_art_21445=3D{5061},
+uo_art_17008=3D{624},
+uo_art_21292=3D{4908},
+uo_art_24049=3D{7665},
+uo_art_19925=3D{3541},
+uo_art_20520=3D{4136},
+tex_489=3D{7157,7158,7159,7160,7161,7162},
+uo_art_22370=3D{5986},
+uo_art_19646=3D{3262},
+uo_art_19579=3D{3195},
+uo_art_24444=3D{8060},
+tex_471=3D{895,896,897,899,900,901,902,903,904,905},
+uo_art_20405=3D{4021},
+uo_art_19123=3D{2739},
+uo_art_25197=3D{8813},
+uo_art_24044=3D{7660},
+uo_art_23519=3D{7135},
+tex_19=3D{2860,2861,4169,4170,15871,15872},
+uo_art_24043=3D{7659},
+uo_art_17012=3D{628},
+uo_art_19761=3D{3377},
+tex_551=3D{1872,2325,2326,2327,2328},
+uo_art_24038=3D{7654},
+uo_art_20233=3D{3849},
+tex_200=3D{1527,1528,1529,1530,1531,11337,11338,11339,11340,11341},
+uo_art_20386=3D{4002},
+tex_570=3D{3293},
+uo_art_24028=3D{7644},
+uo_art_21823=3D{5439},
+uo_art_24022=3D{7638},
+uo_art_30489=3D{14105},
+tex_59=3D{594,595,596},
+uo_art_18882=3D{2498},
+uo_art_19899=3D{3515},
+uo_art_17732=3D{1348},
+uo_art_24039=3D{7655},
+tex_442=3D{3294},
+uo_art_17730=3D{1346},
+tex_351=3D{5287,5288,5289,5290,5291,5292,5293,5294},
+uo_art_26569=3D{10185},
+tex_433=3D{4308,4309},
+uo_art_20240=3D{3856},
+uo_art_23047=3D{6663},
+uo_art_26252=3D{9868},
+uo_art_19502=3D{3118},
+uo_art_20260=3D{3876},
+uo_art_22299=3D{5915},
+tex_196=3D{1369,1582},
+uo_art_23988=3D{7604},
+uo_art_20179=3D{3795},
+uo_art_20350=3D{3966},
+uo_art_23986=3D{7602},
+uo_art_29342=3D{12958},
+tex_242=3D{1224,1229,1238},
+tex_13=3D{3612,4013},
+tex_101=3D{144,145,146,148,149,150,151,152,153,154,155,156,158,159,160,161=
,162,163,164,165,8645,8646,8647,8648,8649,8650,8651,8652},
+tex_44=3D{122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,=
138,139,140,141,142,143,711,712,713,714,715,716,717,718,719,720,721,722,723=
,724,725,726,727,728,729,852,853,854,855,856,857,858,859,860,861,862,863,86=
4,865,866,867,868,869},
+uo_art_20413=3D{4029},
+uo_art_23970=3D{7586},
+uo_art_23969=3D{7585},
+uo_art_19643=3D{3259},
+uo_art_23188=3D{6804},
+uo_art_19604=3D{3220},
+uo_art_23957=3D{7573},
+uo_art_21737=3D{5353},
+uo_art_17738=3D{1354},
+uo_art_18936=3D{2552},
+uo_art_24338=3D{7954},
+uo_art_20067=3D{3683},
+uo_art_25950=3D{9566},
+uo_art_29356=3D{12972},
+uo_art_23948=3D{7564},
+uo_art_21256=3D{4872},
+uo_art_21538=3D{5154},
+uo_art_23947=3D{7563},
+uo_art_23792=3D{7408},
+uo_art_30546=3D{14162},
+uo_art_20531=3D{4147},
+uo_art_23189=3D{6805},
+tex_565=3D{248,249,250,251,252,253,258,259,264,265,270,271,272,273,283,284=
,285,669,1080,1081,1082,1083,1084,7978},
+uo_art_19927=3D{3543},
+uo_art_21290=3D{4906},
+tex_390=3D{2749,2751,2752,2753},
+tex_93=3D{264,265},
+uo_art_18829=3D{2445},
+uo_art_23777=3D{7393},
+uo_art_23776=3D{7392},
+uo_art_21230=3D{4846},
+uo_art_23774=3D{7390},
+uo_art_18932=3D{2548},
+uo_art_19937=3D{3553},
+uo_art_20191=3D{3807},
+uo_art_23565=3D{7181},
+uo_art_19993=3D{3609},
+tex_33=3D{1182,1184},
+uo_art_30520=3D{14136},
+uo_art_20530=3D{4146},
+uo_art_21273=3D{4889},
+uo_art_18874=3D{2490},
+uo_art_20123=3D{3739},
+uo_art_19713=3D{3329},
+uo_art_23266=3D{6882},
+uo_art_20002=3D{3618},
+uo_art_17740=3D{1356},
+uo_art_17009=3D{625},
+tex_182=3D{1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,168=
1,1682,1683,1684,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,818=
4,8185,8186,8187,8188},
+uo_art_21293=3D{4909},
+uo_art_19757=3D{3373},
+uo_art_23555=3D{7171},
+uo_art_23552=3D{7168},
+tex_487=3D{7139,7140,7141,7142,7143,7144},
+uo_art_23521=3D{7137},
+tex_418=3D{2977,2978},
+tex_154=3D{3015,3016},
+uo_art_20291=3D{3907},
+uo_art_20514=3D{4130},
+uo_art_24327=3D{7943},
+tex_232=3D{1272,1273,1274,1275},
+uo_art_24574=3D{8190},
+uo_art_19503=3D{3119},
+uo_art_21274=3D{4890},
+uo_art_18852=3D{2468},
+uo_art_23418=3D{7034},
+uo_art_18909=3D{2525},
+uo_art_23571=3D{7187},
+tex_92=3D{252,253,254,255,256,257,258,259,264,265,283,284,285,286,287,288,=
7978},
+tex_64=3D{545,546,547,550,551,552,553,554,555,1057,1058,1059,1060,1061,107=
2,1073},
+tex_35=3D{661,662,667,668,669,671,672,679,680,681,685,686,697,698,699,700,=
1094,1095,1096,1097,1098},
+uo_art_23415=3D{7031},
+tex_448=3D{6522,6523,6524,6525,6530,6531,6532,6533,6534,6535,6536,6537,654=
2,6543,6544,6545,6546,6547,6548,6549,6554,6555,6556,6557,6558,6559,6560,656=
1,6566,6567,6568,6569},
+uo_art_20548=3D{4164},
+tex_223=3D{1301,1302,1303,1304},
+uo_art_20068=3D{3684},
+tex_358=3D{2783,2784,2785,2786},
+uo_art_21105=3D{4721},
+uo_art_30528=3D{14144},
+uo_art_23264=3D{6880},
+tex_511=3D{2961,2964},
+uo_art_20932=3D{4548},
+uo_art_23261=3D{6877},
+uo_art_26241=3D{9857},
+uo_art_19921=3D{3537},
+uo_art_24897=3D{8513},
+uo_art_21250=3D{4866},
+tex_245=3D{1169,1170,1171,1172,1179,1180},
+uo_art_18974=3D{2590},
+uo_art_23196=3D{6812},
+uo_art_24060=3D{7676},
+tex_247=3D{1952,1953,1954,2010,2015,2016,2100,2166},
+uo_art_23958=3D{7574},
+uo_art_19656=3D{3272},
+uo_art_22304=3D{5920},
+uo_art_24322=3D{7938},
+uo_art_23176=3D{6792},
+uo_art_23048=3D{6664},
+uo_art_26215=3D{9831},
+tex_151=3D{3021,3022},
+uo_art_21320=3D{4936},
+uo_art_21590=3D{5206},
+uo_art_20424=3D{4040},
+tex_26=3D{1181,1183,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907=
,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921},
+uo_art_21262=3D{4878},
+uo_art_21234=3D{4850},
+tex_173=3D{2965,2966},
+tex_423=3D{1949,1950,1951,1968,1969,1970,1975,1976,1977},
+uo_art_20212=3D{3828},
+tex_41=3D{971,972,973,974,985,986,987,988},
+uo_art_20407=3D{4023},
+tex_520=3D{5484,5485},
+uo_art_22968=3D{6584},
+uo_art_22759=3D{6375},
+tex_75=3D{454,455},
+uo_art_20301=3D{3917},
+tex_118=3D{2906,2907,2908,2909,3088,3089,3097,3098},
+uo_art_20365=3D{3981},
+uo_art_21462=3D{5078},
+uo_art_22655=3D{6271},
+uo_art_22654=3D{6270},
+uo_art_21524=3D{5140},
+tex_313=3D{6176},
+uo_art_20297=3D{3913},
+uo_art_19578=3D{3194},
+uo_art_25958=3D{9574},
+uo_art_20638=3D{4254},
+uo_art_26184=3D{9800},
+tex_216=3D{1387,1388},
+tex_334=3D{6117},
+tex_409=3D{5264},
+uo_art_20218=3D{3834},
+tex_333=3D{6114,6115,6119,6120},
+uo_art_21563=3D{5179},
+uo_art_21232=3D{4848},
+tex_336=3D{6105,6106,6110,6111},
+tex_157=3D{3009,3010},
+uo_art_19118=3D{2734},
+uo_art_22409=3D{6025},
+uo_art_22405=3D{6021},
+uo_art_20963=3D{4579},
+tex_203=3D{1481,1482,1483,1484,1485},
+uo_art_19690=3D{3306},
+tex_195=3D{1382,1383,1583,1584},
+uo_art_22403=3D{6019},
+uo_art_21500=3D{5116},
+uo_art_19923=3D{3539},
+uo_art_21463=3D{5079},
+uo_art_19635=3D{3251},
+tex_463=3D{6005,6006,6007,6008,13446,13451,13484,13488},
+tex_464=3D{6001,6002,6003,6004},
+uo_art_22377=3D{5993},
+uo_art_21540=3D{5156},
+uo_art_18935=3D{2551},
+uo_art_19772=3D{3388},
+uo_art_19723=3D{3339},
+uo_art_26235=3D{9851},
+uo_art_25210=3D{8826},
+uo_art_20571=3D{4187},
+uo_art_20277=3D{3893},
+uo_art_21099=3D{4715},
+uo_art_22375=3D{5991},
+tex_348=3D{5311,5312,5313,5314,5315,5316,5317,5318},
+uo_art_20544=3D{4160},
+uo_art_22368=3D{5984},
+uo_art_22315=3D{5931},
+uo_art_21316=3D{4932},
+uo_art_23194=3D{6810},
+uo_art_19586=3D{3202},
+uo_art_24035=3D{7651},
+uo_art_20192=3D{3808},
+uo_art_20022=3D{3638},
+tex_280=3D{2887,2888},
+uo_art_22293=3D{5909},
+uo_art_21516=3D{5132},
+uo_art_19602=3D{3218},
+uo_art_24429=3D{8045},
+uo_art_19614=3D{3230},
+uo_art_19625=3D{3241},
+uo_art_20322=3D{3938},
+uo_art_30477=3D{14093},
+tex_996=3D{5701},
+uo_art_26680=3D{10296},
+tex_480=3D{7778,7785},
+uo_art_20636=3D{4252},
+uo_art_21301=3D{4917},
+tex_455=3D{3486,3490,3494,3498},
+tex_296=3D{5517,5668},
+uo_art_20020=3D{3636},
+tex_392=3D{2796},
+uo_art_18911=3D{2527},
+tex_502=3D{5508,5509,5686,5687},
+uo_art_20346=3D{3962},
+uo_art_23987=3D{7603},
+tex_503=3D{5506,5507,5684,5685},
+uo_art_19913=3D{3529},
+uo_art_25149=3D{8765},
+uo_art_21529=3D{5145},
+uo_art_20258=3D{3874},
+uo_art_20000=3D{3616},
+uo_art_21832=3D{5448},
+uo_art_21830=3D{5446},
+uo_art_19620=3D{3236},
+tex_550=3D{4793},
+uo_art_21435=3D{5051},
+uo_art_21826=3D{5442},
+uo_art_21519=3D{5135},
+uo_art_21428=3D{5044},
+tex_452=3D{5414},
+tex_124=3D{3081,3082},
+tex_135=3D{3057,3058},
+uo_art_30398=3D{14014},
+uo_art_20536=3D{4152},
+tex_341=3D{5386,5387,5388,5389,5390,5391,5392,5393},
+tex_541=3D{5368,5370},
+uo_art_21750=3D{5366},
+uo_art_19897=3D{3513},
+tex_121=3D{2602,2603,2910},
+uo_art_19658=3D{3274},
+uo_art_23494=3D{7110},
+uo_art_21272=3D{4888},
+uo_art_20712=3D{4328},
+uo_art_20281=3D{3897},
+uo_art_21589=3D{5205},
+uo_art_21564=3D{5180},
+uo_art_21541=3D{5157},
+uo_art_21537=3D{5153},
+uo_art_22406=3D{6022},
+uo_art_19576=3D{3192},
+uo_art_21528=3D{5144},
+tex_46=3D{463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,=
479,480,481,482,483,484,485,486,487,488,489,490,491,804,805,806,807,808,809=
,810,811,812,813,814,815,816,817,818,819,2283,2284,2285,2286},
+uo_art_21438=3D{5054},
+uo_art_21160=3D{4776},
+uo_art_20499=3D{4115},
+uo_art_24332=3D{7948},
+uo_art_19611=3D{3227},
+uo_art_20966=3D{4582},
+tex_22=3D{19,23,1852,1971,1972,1973,1974},
+uo_art_19642=3D{3258},
+uo_art_19544=3D{3160},
+uo_art_19907=3D{3523},
+uo_art_18870=3D{2486},
+uo_art_23773=3D{7389},
+tex_467=3D{2850},
+tex_147=3D{3033,3034},
+uo_art_21291=3D{4907},
+uo_art_19583=3D{3199},
+uo_art_21468=3D{5084},
+uo_art_20357=3D{3973},
+uo_art_24198=3D{7814},
+uo_art_22369=3D{5985},
+uo_art_19585=3D{3201},
+uo_art_21453=3D{5069},
+tex_257=3D{3644,3645},
+uo_art_21443=3D{5059},
+tex_95=3D{252,253},
+uo_art_29336=3D{12952},
+uo_art_21426=3D{5042},
+uo_art_20463=3D{4079},
+uo_art_19928=3D{3544},
+tex_164=3D{2995,2996},
+tex_141=3D{3027,3028,3045,3046},
+uo_art_19613=3D{3229},
+uo_art_21399=3D{5015},
+uo_art_21360=3D{4976},
+uo_art_19926=3D{3542},
+uo_art_21358=3D{4974},
+uo_art_21311=3D{4927},
+uo_art_20517=3D{4133},
+uo_art_18851=3D{2467},
+uo_art_22365=3D{5981},
+uo_art_18916=3D{2532},
+uo_art_18912=3D{2528},
+uo_art_21284=3D{4900},
+uo_art_21280=3D{4896},
+uo_art_21264=3D{4880},
+uo_art_19636=3D{3252},
+uo_art_20063=3D{3679},
+uo_art_19651=3D{3267},
+tex_222=3D{1305,1306,1307,1308},
+uo_art_21162=3D{4778},
+uo_art_20987=3D{4603},
+uo_art_23556=3D{7172},
+uo_art_20632=3D{4248},
+uo_art_21158=3D{4774},
+uo_art_20971=3D{4587},
+uo_art_20928=3D{4544},
+uo_art_20705=3D{4321},
+tex_137=3D{3053,3054},
+tex_78=3D{421,422,423,425,426,427,428,429,430,431,432,934,935,936,937,938,=
939,940,941},
+tex_237=3D{1258,1259,1260,1261},
+uo_art_20344=3D{3960},
+tex_516=3D{1256,1257,1335,1336,1337,1338},
+tex_156=3D{3011,3012},
+tex_218=3D{1327,1328,1329,1330,1331,1332,1333,1334},
+uo_art_19577=3D{3193},
+uo_art_20498=3D{4114},
+uo_art_20495=3D{4111},
+tex_108=3D{78,79,80,81,82,83,84},
+tex_365=3D{2787,2788,2789,2790},
+uo_art_20420=3D{4036},
+uo_art_20414=3D{4030},
+uo_art_24340=3D{7956},
+tex_281=3D{3365,3366,3367,7964,7965,7966},
+tex_378=3D{4282},
+tex_397=3D{1194,1195},
+uo_art_21498=3D{5114},
+uo_art_20176=3D{3792},
+tex_9=3D{4017},
+tex_103=3D{144,147,150,151,154,157,160,161},
+tex_268=3D{3650,3651},
+tex_315=3D{6174},
+tex_208=3D{1466,1467,1468,1469,1470},
+uo_art_20381=3D{3997},
+tex_205=3D{1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1472,147=
3,8681,8682,8683,8684,8685,8686,8687,8688},
+uo_art_20354=3D{3970},
+tex_563=3D{1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,193=
6,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948},
+uo_art_19961=3D{3577},
+uo_art_21471=3D{5087},
+uo_art_20353=3D{3969},
+tex_29=3D{248,249,250,251,260,261,262,263,266,267,268,269,270,271,272,273,=
274,275,276,277,278,279,280,281,282,289,290,291,292,293,294,1085,1089,1090,=
1091,1092,1093,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,=
1813,1814,1815,1816,1817,1818,1819,1820,1821},
+uo_art_20061=3D{3677},
+uo_art_17737=3D{1353},
+uo_art_18809=3D{2425},
+uo_art_23512=3D{7128},
+tex_251=3D{1861,1862,1863,1864},
+uo_art_20270=3D{3886},
+tex_231=3D{1280,1281,1282,1283},
+uo_art_26253=3D{9869},
+tex_404=3D{2926,2927,2928,2929,2930,2931,2932,2945,2946,2947,2948,2949,295=
0,2951},
+tex_312=3D{6177},
+uo_art_18843=3D{2459},
+}
+



