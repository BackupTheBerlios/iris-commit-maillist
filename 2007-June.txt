From no-reply at zwischenwelt.org  Mon Jun 11 00:35:09 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 10 Jun 2007 22:35:09 -0000
Subject: [Iris-commit] [IRIS] r1184 - in /trunk: data/lua/lib.3d.map.lua
 data/lua/lib.3d.renderer.lua data/lua/net.corpse.lua data/lua/net.login.lua
 data/skippedfallbacks.lua src/scripting.cpp vc8/iris.vcproj
Message-ID: <20070610223511.69E7D1058005@localhost.localdomain>

Author: sience
Date: Mon Jun 11 00:35:06 2007
New Revision: 1184

Log:
-vs8 project (debug) updated
-skippedfallback added
-comments removed
-corpse packet temp. fixed

Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/net.corpse.lua
    trunk/data/lua/net.login.lua
    trunk/data/skippedfallbacks.lua
    trunk/src/scripting.cpp
    trunk/vc8/iris.vcproj

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Mon Jun 11 00:35:06 2007
@@ -288,11 +288,6 @@
 						playerIsInside =3D true =

 					end
 				end
--- SiENcE: we have to include this for dynamic houses...but this slows per=
formance rapidly
---			else
---				if (x =3D=3D dynamic.xloc and y =3D=3D dynamic.yloc and dynamic.zloc=
 > playerheadpos) then
---					playerIsInside =3D true =

---				end
 			end
 		end
 =


Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Mon Jun 11 00:35:06 2007
@@ -601,7 +601,7 @@
 			end
 			item.gfx =3D rootgfx
 			self:UpdateDynamicItemPos(item)
-		--Clientside Clientside Multi
+		-- otherwise ist a Clientside Multi
 		elseif gMultiLoader then
 			local rootgfx =3D CreateRootGfx3D()
 			local id =3D item.artid - gMulti_ID

Modified: trunk/data/lua/net.corpse.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.corpse.lua (original)
+++ trunk/data/lua/net.corpse.lua Mon Jun 11 00:35:06 2007
@@ -20,10 +20,16 @@
 	local id =3D input:PopNetUint8()
 	local blocksize =3D input:PopNetUint16()
 	local corpse_serial =3D input:PopNetUint16()
+
+	for i=3D1, blocksize-5 do
+		local temp =3D input:PopNetUint8()
+	end
+--[[
 	--for =

 	local item_layer =3D input:PopNetUint8()
 	local item_serial =3D input:PopNetUint16()
 	--end
 	local terminator =3D input:PopNetUint16()
+]]--
 	printdebug("equip",sprintf("NET: kPacket_Corpse_Equipment: blocksize: %i =
corpse_serial=3D0x%04x\n",blocksize,corpse_serial))
 end

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Mon Jun 11 00:35:06 2007
@@ -110,12 +110,12 @@
 	for i =3D 0,charlist.citynumber-1 do
 		gCities[i] =3D {}
 		gCities[i].index=3Dinput:PopNetUint8()
-		gCities[i].cityname=3Dinput:PopFilledString(30)
+		gCities[i].name=3Dinput:PopFilledString(30)
 		gCities[i].terminator1=3Dinput:PopNetUint8()
 		gCities[i].tavern=3Dinput:PopFilledString(30)
 		gCities[i].terminator2=3Dinput:PopNetUint8()
 =

-		printdebug("login",sprintf("NET: Index: %i City: %s Tavern: %s\n",gCitie=
s[i].index,gCities[i].cityname,gCities[i].tavern))
+		printdebug("login",sprintf("NET: Index: %i City: %s Tavern: %s\n",gCitie=
s[i].index,gCities[i].name,gCities[i].tavern))
 	end
 	charlist.cities =3D gCities
 =


Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Mon Jun 11 00:35:06 2007
@@ -293,3 +293,11 @@
 RegisterSkippedArtBillboardFallBack(2256) -- 0x08d0 name=3Dfireplace
 RegisterSkippedArtBillboardFallBack(2259) -- 0x08d3 name=3Dfireplace
 RegisterSkippedArtBillboardFallBack(2350) -- 0x092e name=3Doven
+RegisterSkippedArtBillboardFallBack(7740) -- 0x1e3c name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7741) -- 0x1e3d name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7742) -- 0x1e3e name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7734) -- 0x1e36 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7736) -- 0x1e38 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7738) -- 0x1e3a name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7739) -- 0x1e3b name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7737) -- 0x1e39 name=3Dbearskin rug

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Mon Jun 11 00:35:06 2007
@@ -1,1544 +1,1546 @@
-#include "prefix.h"
-#include <assert.h>
-#include <stdarg.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include "net.h"
-#include "fifo.h"
-#include "game.h"
-#include "listener.h"
-#include "scripting.h"
-#include "input.h"
-#include "robstring1.2.h"
-#include "gfx3D.h"
-#include "gfx2D.h"
-#include "widget.h"
-#include "luabind.h"
-#include "data.h"
-#include "builder.h"
-#include "shell.h"
-#include "timer.h"
-#include "ogrewrapper.h"
-#include "pathsearch.h"
-#include "bitmask.h"
-#include "camera.h"
-#include "viewport.h"
-#include "rendertexture.h"
-#include "sound.h"
-#include "terrain.h"
-#include "radar.h"
-#include <Ogre.h>
-#include <OgreResourceManager.h>
-#include <OgreFontManager.h>
-#include <OgreTextAreaOverlayElement.h>
-#include <OgreMeshSerializer.h>
-#include <OgreCompositorManager.h>
-#include "luaxml.h"
-#include "spritemanager.h"
-#include "ogremanualloader.h"
-
-//#define PROFILE_LUACALLCOUNT
-#ifdef PROFILE_LUACALLCOUNT
-std::map<const char*,int> gPROFILE_LUACALLCOUNT;
-struct cPROFILE_LUACALLCOUNTSetCmp {
-  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const { =

-	return x.second > y.second; =

-  }
-};
-#endif
-
-#ifdef WIN32
-#include <windows.h>
-#else
-#include <unistd.h>
-#endif
-
-extern "C" {
-	#include "lua.h"
-	#include "lauxlib.h"
-	#include "lualib.h"
-}
-
-void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
-void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
-void	Material_LuaRegister	(void *L);
-void	Granny_LuaRegister		(void *L);
-void	PrintLuaStackTrace		();
-void	ProfileDumpCallCount	(); ///< defined in profile.cpp, only does somet=
hing if PROFILE_CALLCOUNT is enabled
-
-void	PrintLuaStackTrace		() { PROFILE
-	printf("PrintLuaStackTrace:\n");
-	// see l_TRACEBACK() : leaves a string containing the stacktrace at the t=
op of the stack
-	std::string sMyStackTrace;
-	cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
-	printf("%s\n",sMyStackTrace.c_str());
-}
-
-void	PrintLuaStackTrace		(const char *filename) { PROFILE
-	FILE *f =3D fopen(filename,"a");
-	if(f){
-		fprintf(f,"PrintLuaStackTrace:\n");
-		// see l_TRACEBACK() : leaves a string containing the stacktrace at the =
top of the stack
-		std::string sMyStackTrace;
-		cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
-		fprintf(f,"%s\n",sMyStackTrace.c_str());
-		=

-		fclose(f);
-	}
-}
-
-void	printdebug	(const char *szCategory, const char *szFormat, ...) { PROF=
ILE
-	va_list ap;
-	va_start(ap,szFormat);
-	gRobStringBuffer[0] =3D 0;
-	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,szFormat,ap);
-	cScripting::GetSingletonPtr()->LuaCall("printdebug","ss",szCategory,gRobS=
tringBuffer);
-	va_end(ap);
-}
-
-// ***** ***** global functionals exported to lua ***** *****
-
-
-cScripting*	cScripting::GetSingletonPtr	(cScripting* p) {
-	static cScripting* pSingleton =3D 0;
-	if (p) pSingleton =3D p;
-	return pSingleton;
-}
-
-
-/// called from lua : string keyname
-static int l_GetNamedKey (lua_State *L) { PROFILE
-	const char *keyname =3D luaL_checkstring(L, 1);
-	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult =

-	return 1;  // number of results =

-}
-
-/// called from lua : int keycode
-static int l_GetKeyName (lua_State *L) { PROFILE
-	int keycode =3D luaL_checkint(L, 1);
-	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult =

-	return 1;  // number of results =

-}
-
-/// terminates the application
-static int l_Terminate (lua_State *L) { PROFILE
-	cShell::mbAlive =3D false;
-	return 0;
-}
-
-/// only call this once at startup
-static int l_InitOgre (lua_State *L) { PROFILE
-	lua_pushboolean(L,cOgreWrapper::GetSingleton().Init());
-	return 1;
-}
-
-static int l_GetPointerSize (lua_State *L) { PROFILE
-	lua_pushnumber(L,sizeof(void*));
-	return 1;
-}
-
-/// only call this once at startup
-static int l_Client_IsAlive (lua_State *L) { PROFILE
-	lua_pushboolean(L,cShell::mbAlive);
-	return 1;
-}
-	=

-/// called from lua : no params, returns mousex,mousey,4xmousewheel info...
-static int l_PollInput (lua_State *L) { PROFILE
-	lua_pushnumber(L,cInput::iMouse[0]);
-	lua_pushnumber(L,cInput::iMouse[1]);
-	lua_pushnumber(L,cInput::iMouseWheel);
-	lua_pushnumber(L,cInput::iMouseWheel_pressed);
-	lua_pushnumber(L,cInput::iMouseWheel_all_since_last_step);
-	lua_pushnumber(L,cInput::iMouseWheel_pressed_since_last_step);
-	return 6;
-}
-
-
-static int l_ProfileDumpCallCount (lua_State *L) { PROFILE
-	ProfileDumpCallCount();
-	=

-	#ifdef PROFILE_LUACALLCOUNT
-	printf("LuaCallCounts:\n\n");
-	=

-	std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSetCmp> myC=
allCountProfileSet;
-	typedef std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSet=
Cmp>::iterator tLuaCallCountProfileSetItor;
-	{ for (std::map<const char*,int>::iterator itor=3DgPROFILE_LUACALLCOUNT.b=
egin();itor !=3D gPROFILE_LUACALLCOUNT.end();++itor)
-		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
)); =

-	}
-	int i=3D0;
-	for (tLuaCallCountProfileSetItor itor=3DmyCallCountProfileSet.begin();ito=
r !=3D myCallCountProfileSet.end();++itor) {
-		//if (++i > 10) break;
-		printf("LuaCallCallCount %16d %s\n",(*itor).second,(*itor).first);
-	}
-	#endif
-
-	return 0;
-}
-
-/// used as errfunc for lua_pcall, adds a callstack/backtrace/list_of_call=
ed_functions to the errormessage
-/// code from errorfb from /usr/src/lua-5.0.2/src/lua/ldblib.c
-/// "_TRACEBACK" is defined as errorfb
-/// leaves a string containing the stacktrace at the top of the stack
-#define LEVELS1	12	/* size of the first part of the stack */
-#define LEVELS2	10	/* size of the second part of the stack */
-static int l_TRACEBACK (lua_State *L) { PROFILE
-  int level =3D 1;  /* skip level 0 (it's this function) */
-  int firstpart =3D 1;  /* still before eventual `...' */
-  lua_Debug ar;
-  if (lua_gettop(L) =3D=3D 0)
-	lua_pushliteral(L, "");
-  else if (!lua_isstring(L, 1)) return 1;  /* no string message */
-  else lua_pushliteral(L, "\n");
-  lua_pushliteral(L, "LuaStackTrace:\n");
-  while (lua_getstack(L, level++, &ar)) {
-	if (level > LEVELS1 && firstpart) {
-	  /* no more than `LEVELS2' more levels? */
-	  if (!lua_getstack(L, level+LEVELS2, &ar))
-		level--;  /* keep going */
-	  else {
-		lua_pushliteral(L, "\n\t...");  /* too many levels */
-		while (lua_getstack(L, level+LEVELS2, &ar))  /* find last levels */
-		  level++;
-	  }
-	  firstpart =3D 0;
-	  continue;
-	}
-	lua_pushliteral(L, "\n\t");
-	lua_getinfo(L, "Snl", &ar);
-	lua_pushfstring(L, "%s:", ar.short_src);
-	if (ar.currentline > 0)
-	  lua_pushfstring(L, "%d:", ar.currentline);
-	switch (*ar.namewhat) {
-	  case 'g':  /* global */ =

-	  case 'l':  /* local */
-	  case 'f':  /* field */
-	  case 'm':  /* method */
-		lua_pushfstring(L, " in function `%s'", ar.name);
-		break;
-	  default: {
-		if (*ar.what =3D=3D 'm')  /* main? */
-		  lua_pushfstring(L, " in main chunk");
-		else if (*ar.what =3D=3D 'C' || *ar.what =3D=3D 't')
-		  lua_pushliteral(L, " ?");  /* C function or tail call */
-		else
-		  lua_pushfstring(L, " in function <%s:%d>",
-							 ar.short_src, ar.linedefined);
-	  }
-	}
-	lua_concat(L, lua_gettop(L));
-  }
-  lua_concat(L, lua_gettop(L));
-  return 1;
-}
-
-
-
-static int l_Client_GetCurFPS (lua_State *L) { PROFILE
-	lua_pushnumber(L, (cTimer::miTimeSinceLastFrame > 0) ? (float(1000.0) / f=
loat(cTimer::miTimeSinceLastFrame)) : 0.0 );
-	return 1;
-}
-
-static int l_Client_GetFrameNum (lua_State *L) { PROFILE
-	lua_pushnumber(L, cTimer::miCurFrameNum );
-	return 1;
-}
-
-static int l_Client_GetTicks (lua_State *L) { PROFILE
-	lua_pushnumber(L, cShell::GetTicks());
-	return 1;
-}
-
-
-/// void OgreAddCompositor(compositor script name)
-static int l_OgreAddCompositor (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	Ogre::CompositorManager::getSingleton().addCompositor(cOgreWrapper::GetSi=
ngleton().mViewport, name);
-	return 0;
-}
-
-/// void OgreRemoveCompositor(compositor script name)
-static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	Ogre::CompositorManager::getSingleton().removeCompositor(cOgreWrapper::Ge=
tSingleton().mViewport, name);
-	return 0;
-}
-
-/// int =3D OgreMemoryUsage(part)
-/// part in {compositor,font,gpuprogram,highlevelgpuprogram,material,mesh,=
skeleton,texture,all}
-/// returns memory usage in byte
-static int l_OgreMemoryUsage (lua_State *L) { PROFILE
-	std::string part(luaL_checkstring(L,1));
-	size_t mem =3D 0;
-	=

-#ifdef OGRE_VERSION_SUFFIX
-	if(part.find("compositor") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::CompositorManager::getSingleton().getM=
emoryUsage();
-	if(part.find("font") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::FontManager::getSingleton().getMemoryUsage();
-	if(part.find("gpuprogram") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::GpuProgramManager::getSingleton().getM=
emoryUsage();
-	if(part.find("highlevelgpuprogram") !=3D std::string::npos || part.find("=
all") !=3D std::string::npos)mem +=3D Ogre::HighLevelGpuProgramManager::get=
Singleton().getMemoryUsage();
-	if(part.find("material") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::MaterialManager::getSingleton().getMemoryU=
sage();
-	if(part.find("mesh") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::MeshManager::getSingleton().getMemoryUsage();
-	if(part.find("skeleton") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::SkeletonManager::getSingleton().getMemoryU=
sage();
-	if(part.find("texture") !=3D std::string::npos || part.find("all") !=3D s=
td::string::npos)mem +=3D Ogre::TextureManager::getSingleton().getMemoryUsa=
ge();
-#endif
-	=

-	lua_pushnumber(L, mem);
-	return 1;
-}
-
-/// bool =3D OgreMeshAvailable(ressourcename)
-static int l_OgreMeshAvailable (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-	=

-	try {
-		Ogre::MeshManager::getSingleton().load(name,Ogre::ResourceGroupManager::=
DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-	=

-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// see also OgreMaterialAvailable below
-/// bool =3D OgreMaterialNameKnown(ressourcename)
-/// returns false if name is empty string or nil
-static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE =

-	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
-	if (sMatName.size() > 0) { =

-		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
-		lua_pushboolean(L,!pMaterial.isNull());
-	} else {
-		lua_pushboolean(L,false);
-	}
-	return 1;
-}
-
-/// bool =3D OgreMaterialAvailable(ressourcename)
-static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
-	assert(0 && "DON'T USE ME, ALWAYS RETURNS TRUE"); =

-	// TODO, this code does not work, use l_OgreMaterialNameKnown  above
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-	=

-	try {
-		Ogre::MaterialManager::getSingleton().load(name,Ogre::ResourceGroupManag=
er::DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-	=

-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// bool =3D OgreTextureAvailable(ressourcename)
-static int l_OgreTextureAvailable (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	bool ret;
-	=

-	try {
-		Ogre::TextureManager::getSingleton().load(name,Ogre::ResourceGroupManage=
r::DEFAULT_RESOURCE_GROUP_NAME);
-		ret =3D true;
-	} catch (...) {
-			ret =3D false;
-	}
-	=

-	lua_pushboolean(L, ret);
-	return 1;
-}
-
-/// r,g,b =3D Uo16Color2Rgb(color)
-static int l_Uo16Color2Rgb (lua_State *L) { PROFILE
-	unsigned short color =3D luaL_checkint(L,1);
-	=

-	float r =3D float((color >> 10) & 0x1F)/float(0x1f);
-	float g =3D float((color >>  5) & 0x1F)/float(0x1f);
-	float b =3D float((color >>  0) & 0x1F)/float(0x1f);
-				=

-	lua_pushnumber(L, r);
-	lua_pushnumber(L, g);
-	lua_pushnumber(L, b);
-	return 3;
-}
-
-/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
-static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
-	std::string sTexturePath	=3D luaL_checkstring(L,1);
-	std::string sMaskPath		=3D luaL_checkstring(L,2);
-	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
-	int iHue					=3D luaL_checkint(L,4);
-	=

-	if (iHue =3D=3D 0 || !hueLoader) {
-		lua_pushstring(L,sTexturePath.c_str());
-		return 1;
-	}
-	=

-	// load image
-	Ogre::Image myImage;
-	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
-	=

-	// get image infos
-	Ogre::PixelFormat myFormat =3D myImage.getFormat();
-	unsigned int size =3D myImage.getSize();
-	unsigned int w =3D myImage.getWidth();
-	unsigned int h =3D myImage.getHeight();
-	unsigned int rowspan =3D myImage.getRowSpan();
-	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
-	//Ogre::uchar* dst =3D new Ogre::uchar[size];
-	Ogre::uchar* src =3D myImage.getData();
-	//Ogre::uchar* dst_start =3D dst;
-	Ogre::uchar* src_start =3D src;
-	uint8 cr,cg,cb,ca1,ca2;
-	short col;
-	=

-	// debug info
-	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
-	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
-	=

-	// hue filter
-	cHueFilter Filter;
-	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
-	=

-	// colorize the pixels
-	for(unsigned int y =3D 0; y < h; y++){
-		for(unsigned int x =3D 0; x < w; x++) {
-			// read out pixel in src graphic
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
-			// and hue the pixel
-			col =3D Filter( col, ColorTable );
-			// TODO ! respect mask instead of hueing the complete texture
-			// and store it in destination (ignoring the new alpha)
-			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
-			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
-			src +=3D pixelsize;
-			//dst +=3D pixelsize;
-		}
-		src +=3D rowspan - w*pixelsize;
-	}
-	=

-	// and make a texture
-	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
-	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
-	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
-	=

-	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
-		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
-	=

-	// free memory
-	//delete [] dst_start;
-
-	lua_pushstring(L,newtextname.c_str());
-	return 1;
-}
-	=

-/// void HueMesh(meshname, hueloader, hue)
-static int l_HueMesh (lua_State *L) { PROFILE
-	const char *meshname =3D luaL_checkstring(L,1);
-	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
-	int hue =3D luaL_checkint(L,3);
-
-	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
-	if(hueLoader && hue && meshname){
-		try	{
-			cHueFilter Filter;
-			short* ColorTable =3D hueLoader->GetHue( hue-1 )->GetColors();
-		=

-			// data seem ok, so read out the mesh
-			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-			=

-			//printf("mesh=3D%s\n",mesh->getName().c_str());
-
-			// and iterate over all submeshes
-			Ogre::Mesh::SubMeshIterator sit =3D mesh->getSubMeshIterator();
-			while(sit.hasMoreElements()){
-				Ogre::SubMesh *submesh =3D sit.getNext();
-				//printf("submesh=3D%i\n",submesh);
-				=

-				if(!submesh->isMatInitialised())continue;
-				=

-				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
-
-				// create hued texture in the current material and update the current =

-				Ogre::MaterialPtr mat =3D Ogre::MaterialManager::getSingleton().load(s=
ubmesh->getMaterialName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME);
-				if(mat.isNull()){
-					printf("ERROR HueMesh: material %s is null\n",submesh->getMaterialNam=
e().c_str());
-					continue;
-				}
-
-				// clone current material for hueing
-				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
-				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
-				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
-				mat->copyDetailsTo(mat_hue);
-
-				// iterate over all techniques
-				Ogre::Material::TechniqueIterator tit =3D mat->getTechniqueIterator();
-				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
-				while(tit.hasMoreElements()){
-					Ogre::Technique *tech =3D tit.getNext();
-					Ogre::Technique *tech_hue =3D tit_hue.getNext();
-					=

-					// iterate over all passes
-					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
-					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
-					while(pit.hasMoreElements()){
-						Ogre::Pass *pass =3D pit.getNext();
-						Ogre::Pass *pass_hue =3D pit_hue.getNext();
-						=

-						// iterate over all tex units
-						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
-						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
-						while(uit.hasMoreElements()){
-							Ogre::TextureUnitState *unit =3D uit.getNext();
-							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
-
-							// current texture
-							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
-
-							// lock and read access buffer
-							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
-							// calc size of complete texture
-							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
-							// and lock (ro)
-							const Ogre::PixelBox box =3D b->lock(area,Ogre::HardwareBuffer::HBL=
_READ_ONLY);
-							=

-							// size of one pixel in bytes
-							unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(box.for=
mat);
-							// texture size in bytes
-							unsigned int size =3D box.getConsecutiveSize();
-							=

-							char *dst =3D new char[size];
-							char *src =3D static_cast<char *>(box.data);
-
-							char *dst_start =3D dst;
-							char *src_start =3D src;
-
-							uint8 cr,cg,cb,ca1,ca2;
-							short col;
-							=

-							// colorize the pixels
-							for(unsigned int y =3D 0; y < box.getHeight(); y++){
-								for(unsigned int x =3D 0; x < box.getWidth(); x++){
-									// read out pixel in src graphic
-									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,box.format,src);
-									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
-									// and hue the pixel
-									col =3D Filter( col, ColorTable );
-									//printf("RGBA_1(%i,%i,%i,%i)\n",cr,cg,cb,ca);
-									// and store it in destination (ignoring the new alpha)
-									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,=
&col);
-									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,box.format,dst);
-									//printf("RGBA_2(%i,%i,%i,%i)\n",cr,cg,cb,ca);
-									src +=3D pixelsize;
-									dst +=3D pixelsize;
-								}
-								src +=3D box.getRowSkip();
-							}
-
-							// and make a texture
-							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
-							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
-								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-							=

-							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
-							=

-							// release the lock
-							b->unlock();
-
-							// free memory
-							delete [] dst_start;
-		=

-							// set the texture
-							unit_hue->setTextureName(tex_hue->getName());
-						}
-					}
-				}
-
-				// set new material
-				submesh->setMaterialName(mat_hue->getName());
-			}
-		} catch (Ogre::FileNotFoundException e){
-			printf("ERROR file not found, so HueMesh(%s) canceled\n",meshname);
-		}
-	}
-
-	return 0;
-}
-
-/// create a lua lookup table based on the given file
-/// usage: lookup[id] =3D new_id
-static int l_CreateLookupTableFromFile (lua_State *L) { PROFILE
-	const char *filename =3D luaL_checkstring(L, 1);
-	lua_newtable(L);
-	=

-	cFullFileLoader f(filename);
-	=

-	const uint32 *buffer =3D (const uint32 *)f.mpFullFileBuffer;
-	=

-	for(int i =3D 0;i < f.miFullFileSize / 4; ++i){
-		lua_pushnumber(L,i); lua_rawseti(L,-2,buffer[i]);
-	}
-	=

-	return 1;
-}
-
-
-static int l_Client_SetSkybox (lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().SetSkybox( (lua_gettop(L) > 0 && !lua_isnil(=
L,1)) ? luaL_checkstring(L, 1) : 0 , true );
-	return 0;
-}
-
-static int l_Client_SetFog (lua_State *L) { PROFILE
-	int i=3D0;
-	int numargs=3Dlua_gettop(L);
-	int iFogMode 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checkint(L,=
 ++i) : 0;
-	Ogre::Real r 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real g 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real b 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real a 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
-	Ogre::Real expDensity 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_chec=
knumber(L, ++i) : 0.001;
-	Ogre::Real linearStart 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_che=
cknumber(L, ++i) : 0.0;
-	Ogre::Real linearEnd 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_check=
number(L, ++i) : 1.0;
-	/*
-	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White, =

-					Real expDensity=3D0.001, Real linearStart=3D0.0, Real linearEnd=3D1.0)
-    0=3DFOG_NONE 	No fog. Duh.
-    1=3DFOG_EXP 	Fog density increases exponentially from the camera (fog =
=3D 1/e^(distance * density)).
-    2=3DFOG_EXP2 	Fog density increases at the square of FOG_EXP, i.e. eve=
n quicker (fog =3D 1/e^(distance * density)^2).
-    3=3DFOG_LINEAR 	Fog density increases linearly between the start and e=
nd distances.
-	*/
-	Ogre::FogMode      myFogMode =3D Ogre::FOG_NONE;
-	if (iFogMode =3D=3D 1) myFogMode =3D Ogre::FOG_EXP;
-	if (iFogMode =3D=3D 2) myFogMode =3D Ogre::FOG_EXP2;
-	if (iFogMode =3D=3D 3) myFogMode =3D Ogre::FOG_LINEAR;
-	cOgreWrapper::GetSingleton().mSceneMgr->setFog(myFogMode,Ogre::ColourValu=
e(r,g,b,a),expDensity,linearStart,linearEnd);
-	return 0;
-}
-
-static int l_Client_RenderOneFrame (lua_State *L) { PROFILE
-	cGame::GetSingleton().RenderOneFrame();
-	return 0;
-}
-
-/// just do nothing for x seconds
-static int l_Client_Sleep (lua_State *L) { PROFILE
-	//TODO correct win handling
-#ifndef WIN32
-	sleep(luaL_checkint(L,1));
-#else
-	Sleep(luaL_checkint(L,1)*1000); // takes milliseconds
-#endif
-	return 0;
-}
-
-/// just do nothing for x milliseconds (1000msec =3D 1sec)
-static int l_Client_USleep (lua_State *L) { PROFILE
-	//TODO correct win handling
-#ifndef WIN32
-	usleep((uint32)luaL_checkint(L,1)*(uint32)1000L); // usleep takes MICROse=
conds, where 1000 =3D 1 MILLIsecond
-#else
-	Sleep(luaL_checkint(L,1)); // takes milliseconds
-#endif
-	return 0;
-}
-
-
-
-static int l_Client_SetAmbientLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) pSceneMgr->setAmbientLight(Ogre::ColourValue(luaL_checknum=
ber(L,1),luaL_checknumber(L,2),luaL_checknumber(L,3),luaL_checknumber(L,4))=
);
-	return 0;
-}
-
-static int l_Client_ClearLights (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) pSceneMgr->destroyAllLights();
-	return 0;
-}
-
-static int l_Client_AddPointLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) {
-		Ogre::Light* pLight =3D pSceneMgr->createLight( cOgreWrapper::GetSinglet=
on().GetUniqueName() );
-		pLight->setType( Ogre::Light::LT_POINT );
-		pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_che=
cknumber(L,3));
-	}
-	return 0;
-}
-
-static int l_Client_AddDirectionalLight (lua_State *L) { PROFILE
-	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	if (pSceneMgr) {
-		Ogre::Light* pLight =3D pSceneMgr->createLight( cOgreWrapper::GetSinglet=
on().GetUniqueName() );
-		pLight->setType( Ogre::Light::LT_DIRECTIONAL );
-		pLight->setDirection(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_ch=
ecknumber(L,3));
-	}
-	return 0;
-}
-
-static int l_Client_GetPhysStepTime (lua_State *L) { PROFILE
-	lua_pushnumber(L,cTimer::mfPhysStepTime);
-	return 1;
-}
-
-/// saved in main directory
-static int l_Client_TakeGridScreenshot (lua_State *L) { PROFILE
-	std::string filename =3D strprintf( "%shighres_%d", "../screenshots/", cS=
hell::GetTicks() );
-	std::string ext =3D ".jpg";
-	cOgreWrapper::GetSingleton().TakeGridScreenshot(3,filename,ext,true);
-	return 0;
-}
-
-/// saved in main directory
-static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
-	cOgreWrapper::GetSingleton().TakeScreenshot();
-	return 0;
-}
-
-void	OgreForceCloseFullscreen ();
-
-/// shows ogre config dialog
-static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
-	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
-	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
-	bIsFullscreen =3D true; // detection fails in linux ?
-	if (bIsFullscreen) {
-		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
-		OgreForceCloseFullscreen();
-	}
-	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
-	if (bIsFullscreen) cShell::mbAlive =3D false;
-	// the application shoudl terminate after this
-	// terminates the game if changes were made
-	return 1;
-}
-
-static int l_BuildTerrainEntity_Simple (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-	int i=3D5;
-	bool bGenerateNormals=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : true;
-	std::string meshname =3D BuildTerrainEntity_Simple(
-		pGroundBlockLoader,
-		luaL_checkint(L,2),luaL_checkint(L,3),
-		luaL_checkint(L,4),luaL_checkint(L,5),bGenerateNormals);
-	if (meshname.length() =3D=3D 0) return 0;
-	lua_pushstring(L,meshname.c_str());
-	return 1;
-}
-
-static int l_BuildTerrainEntity_Shaded (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-	std::string meshname =3D BuildTerrainEntity_Shaded(
-		pGroundBlockLoader,
-		luaL_checkint(L,2),luaL_checkint(L,3),
-		luaL_checkint(L,4),luaL_checkint(L,5));
-	if (meshname.length() =3D=3D 0) return 0;
-	lua_pushstring(L,meshname.c_str());
-	return 1;
-}
-
-/// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
-/// for lua : TerrainRayPick(GroundBlockLoader,blockx,blocky,vBlockPosX,vB=
lockPosY,vBlockPosZ,rx,ry,rz,rvx,rvy,rvz)  -- mainly for mousepicking
-static int l_TerrainRayPick (lua_State *L) { PROFILE
-	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
-	if (!pGroundBlockLoader) return 0;
-	=

-	// don't use ++i or something here, the compiler might mix the order
-	Ogre::Vector3 	vBlockPos(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
-	Ogre::Vector3	vRayPos(luaL_checknumber(L,7),luaL_checknumber(L,8),luaL_ch=
ecknumber(L,9));
-	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
-	=

-	// feedback via lua callback TerrainRayIntersect_Hit()
-	TerrainRayIntersect(pGroundBlockLoader,luaL_checkint(L,2),luaL_checkint(L=
,3),vRayPos-vBlockPos,vRayDir);
-	return 0;
-}
-
-/// for lua : dist =3D SphereRayPick(x,y,z,rad,rx,ry,rz,rvx,rvy,rvz)  -- m=
ainly for mousepicking, dist=3Dnil if not hit
-static int l_SphereRayPick (lua_State *L) { PROFILE
-	// don't use ++i or something here, the compiler might mix the order
-	Ogre::Vector3 	vSpherePos(	luaL_checknumber(L,1),luaL_checknumber(L,2),lu=
aL_checknumber(L,3));
-	float			fSphereRad =3D luaL_checknumber(L,4);
-	Ogre::Vector3	vRayPos(	luaL_checknumber(L,5),luaL_checknumber(L,6),luaL_c=
hecknumber(L,7));
-	Ogre::Vector3	vRayDir(	luaL_checknumber(L,8),luaL_checknumber(L,9),luaL_c=
hecknumber(L,10));
-	=

-	std::pair<bool, Real> hit =3D Ogre::Ray(vRayPos,vRayDir).intersects(Ogre:=
:Sphere(vSpherePos,fSphereRad));
-	if (!hit.first) return 0;
-	lua_pushnumber(L,hit.second);
-	return 1;
-}
-
-
-static int l_UnloadMeshName (lua_State *L) { PROFILE
-	Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
-	return 0;
-}
-
-static int l_CountMeshTriangles (lua_State *L) { PROFILE
-	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
-					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
-	int res =3D 0;
-	for (int i=3D0;i<pMesh->getNumSubMeshes();++i) {
-		Ogre::SubMesh *pSub =3D pMesh->getSubMesh(i);
-		if (pSub && pSub->indexData) res +=3D pSub->indexData->indexCount / 3;
-	}
-	lua_pushnumber(L,res);
-	return 1;
-}
-
-static int l_getUOPath(lua_State *L) { PROFILE
-	std::string res =3D getUOPath();
-	if (res.length() =3D=3D 0) return 0;
-	lua_pushstring(L,res.c_str());
-	return 1;
-}
-
-/// attempts to correct case-sensitivity for filepaths
-static int l_PathSearch (lua_State *L) { PROFILE
-	std::string res =3D rob_pathsearch(luaL_checkstring(L,1));
-	if (res.length() =3D=3D 0) return 0;
-	lua_pushstring(L,res.c_str());
-	return 1;
-}
-
-static int l_file_exists (lua_State *L) { PROFILE
-	std::ifstream	myFileStream(luaL_checkstring(L,1));
-	lua_pushboolean(L,myFileStream?true:false);
-	return 1;
-}
-
-static int l_file_size (lua_State *L) { PROFILE
-	std::ifstream	myFileStream(luaL_checkstring(L,1));
-	int iFileSize =3D 0;
-	if (myFileStream) {
-		myFileStream.seekg(0, std::ios::end);
-		iFileSize =3D myFileStream.tellg();
-	}
-	lua_pushnumber(L,iFileSize);
-	return 1;
-}
-
-
-// for testing bitwise ops
-static int l_GetRandomHexString 	(lua_State *L) { PROFILE lua_pushstring( =
L, strprintf("0x%08x",rand()).c_str()); return 1; }
-
-/// converts "0x1234" to a number
-static int l_Hex2Num 	(lua_State *L) { PROFILE =

-	std::string hexcode =3D luaL_checkstring(L,1);
-	uint32 res =3D 0;
-	sscanf(hexcode.c_str(),"0x%x",&res);
-	lua_pushnumber(L, res); =

-	return 1; =

-}
-
-// bitwise operations, used for networking, packet manipulation etc
-static int l_BitwiseAND 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);	=

-	uint32 c =3D a & b;
-	lua_pushnumber( L, c); =

-	return 1;
-}
-static int l_BitwiseOR 		(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);	=

-	uint32 c =3D a | b;
-	lua_pushnumber( L, c); =

-	return 1;
-}
-
-
-static int l_BitwiseXOR 	(lua_State *L) { PROFILE
-	// keep this spread out like this to avoid strange, 32 bi
-	double g =3D luaL_checknumber(L,1);
-	double h =3D luaL_checknumber(L,2);
-	uint32 a =3D uint32(g);
-	uint32 b =3D uint32(h);	=

-	uint32 c =3D a ^ b;
-	lua_pushnumber( L, c); =

-	return 1;
-}
-
-// bitwise operations, used for networking, packet manipulation etc =

-static int l_BitwiseSHL 	(lua_State *L) { PROFILE =

-	// keep this spread out like this to avoid strange, 32 bi =

-	double g =3D luaL_checknumber(L,1); =

-	double h =3D luaL_checknumber(L,2); =

-	uint32 a =3D uint32(g); =

-	uint32 b =3D uint32(h);	 =

-	uint32 c =3D a << b; =

-	lua_pushnumber( L, c);  =

-	return 1; =

-} =

-// bitwise operations, used for networking, packet manipulation etc =

-static int l_BitwiseSHR 	(lua_State *L) { PROFILE =

-	// keep this spread out like this to avoid strange, 32 bi =

-	double g =3D luaL_checknumber(L,1); =

-	double h =3D luaL_checknumber(L,2); =

-	uint32 a =3D uint32(g); =

-	uint32 b =3D uint32(h);	 =

-	uint32 c =3D a >> b; =

-	lua_pushnumber( L, c);  =

-	return 1; =

-}
-
-
-static int l_TestBit 		(lua_State *L) { PROFILE lua_pushboolean(L,(uint32(=
luaL_checknumber(L,1)) & (uint32(1) << luaL_checkint(L,2))) !=3D 0); return=
 1; }
-static int l_SetBit 		(lua_State *L) { PROFILE lua_pushnumber( L,(uint32(l=
uaL_checknumber(L,1)) | (uint32(1) << luaL_checkint(L,2)))); return 1; }
-static int l_ClearBit 		(lua_State *L) { PROFILE =

-	uint32 input =3D uint32(luaL_checknumber(L,1));
-	uint32 mask =3D 1L << uint32(luaL_checknumber(L,2));
-	lua_pushnumber(L,(input & mask)?(input ^ mask):(input));  // XOR =3D ^ =
=3D toggle bit... toggle only if set (&) to clear
-	return 1; =

-}
-
-
-static int l_Exit		 		(lua_State *L) { PROFILE =

-	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0); =

-	return 0; =

-}
-
-static int l_Crash		 		(lua_State *L) { PROFILE =

-	DisplayErrorMessage("CRASH triggered from script, see console for info (s=
tart with commandline option -c)");
-	exit(88); =

-	return 0; =

-}
-
-/// triggers a segfault, for testing our segfault handlers lua stacktrace
-static int l_CrashSegFault		 		(lua_State *L) { PROFILE =

-	DisplayErrorMessage("testing segfault handler...");
-	*((char*)0) =3D 0; // trigger segfault
-	return 0; =

-}
-
-
-static int l_DisplayNotice	(lua_State *L) { PROFILE =

-	DisplayNotice(luaL_checkstring(L,1));
-	return 0;
-}
-
-
-static int l_FatalErrorMessage	(lua_State *L) { PROFILE =

-	DisplayErrorMessage(luaL_checkstring(L,1));
-	exit(77);
-	return 0;
-}
-
-
-/// for lua :   void  ExportMesh  (meshname,filename)
-static int l_ExportMesh		(lua_State *L) { PROFILE =

-	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
-					// autodetect group location
-					//Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME );
-					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
-	Ogre::MeshSerializer myExporter;
-	//Ogre::Mesh* pMesh =3D pEntity->getMesh().get();
-	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2)); =

-	return 0;
-}
-
-/// for lua :   x,y,z,vx,vy,vz  GetMouseRay  ()
-static int l_GetMouseRay		(lua_State *L) { PROFILE =

-	cOgreWrapper& ogrewrapper =3D cOgreWrapper::GetSingleton();
-	Ogre::Ray myray(	ogrewrapper.mCamera->getCameraToViewportRay(
-				Ogre::Real(cInput::iMouse[0]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualWidth()),
-				Ogre::Real(cInput::iMouse[1]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualHeight()) ));
-	lua_pushnumber(L,myray.getOrigin().x);
-	lua_pushnumber(L,myray.getOrigin().y);
-	lua_pushnumber(L,myray.getOrigin().z);
-	lua_pushnumber(L,myray.getDirection().x);
-	lua_pushnumber(L,myray.getDirection().y);
-	lua_pushnumber(L,myray.getDirection().z);
-	return 6;
-}
-
-/// for lua :   z  GetMaxZ  ()
-static int 		l_GetMaxZ		(lua_State *L) { PROFILE =

-	lua_pushnumber(L,Ogre::Root::getSingleton().getRenderSystem()->getMaximum=
DepthInputValue());
-	return 1;
-}
-
-
-/// for lua :   bIsInFront,px,py  ProjectPos  (x,y,z)
-static int l_ProjectPos		(lua_State *L) { PROFILE =

-	bool 		bIsInFront;
-	Ogre::Real	fX,fY;
-	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectPos(
-		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY);
-	lua_pushboolean(L,bIsInFront);
-	lua_pushnumber(L,fX);
-	lua_pushnumber(L,fY);
-	return 3;
-}
-
-/// for lua :   bIsInFront,px,py,cx,cy  ProjectSizeAndPos  (x,y,z,r)
-static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE =

-	bool 		bIsInFront;
-	Ogre::Real	fX,fY,fCX,fCY;
-	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectSizeAndPos(
-		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY,luaL_checknumber(L,3),fCX,fCY);
-	lua_pushboolean(L,bIsInFront);
-	lua_pushnumber(L,fX);
-	lua_pushnumber(L,fY);
-	lua_pushnumber(L,fCX);
-	lua_pushnumber(L,fCY);
-	return 5;
-}
-
-
-
-/// for lua :   void  CreateSceneManager  (sSceneManagerName)
-static int l_CreateSceneManager		(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
-	cOgreWrapper::GetSingleton().mRoot->createSceneManager(Ogre::ST_GENERIC,l=
uaL_checkstring(L,1));
-	return 0;
-}
-
-/// for lua :   table[id=3Dtexname...]  OgreMeshTextures  (meshfile)
-static int l_OgreMeshTextures	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
-	Ogre::MeshSerializer* meshSerializer =3D new Ogre::MeshSerializer();
-	const char *szMeshName =3D luaL_checkstring(L,1);
-	=

-	lua_newtable(L);
-		=

-	//printf("open file: %s\n",szMeshName);
-	// model file
-	std::ifstream ifs;
-	ifs.open(szMeshName, std::ios_base::in | std::ios_base::binary);
-	Ogre::DataStreamPtr stream(new Ogre::FileStreamDataStream(&ifs, false));
-
-	if(ifs.is_open()){
-		//printf("create tmp mesh\n");
-		// create tmp mesh import resource
-		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion", =

-			Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-
-		//printf("import\n");
-		// import
-		meshSerializer->importMesh(stream, mesh.getPointer());
-		=

-		if(!mesh.isNull()){
-			// iterator over submeshes
-			Ogre::Mesh::SubMeshIterator it =3D mesh->getSubMeshIterator();
-			int i =3D 1;
-			while(it.hasMoreElements()){
-				Ogre::SubMesh *submesh =3D it.getNext();
-				std::string tex =3D submesh->getMaterialName();
-				//printf("material found: %s\n",tex.c_str());
-				lua_pushstring(L,tex.c_str()); lua_rawseti(L,-2,i);
-				++i;
-			}
-		}
-		=

-		// remove all stuff
-		Ogre::MeshManager::getSingleton().remove("l_OgreMeshTextureMissing_conve=
rsion");
-		=

-		ifs.close();
-	} else {
-		printf("ERROR can't open file: %s\n",szMeshName);
-	}
-
-	delete meshSerializer;
-		=

-	return 1;
-}
-
-
-/// for lua :   void OgreShadowTechnique  (string techique)
-static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
-	const char *tech =3D luaL_checkstring(L,1);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	=

-	if(p){
-		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
-		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
-		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
-		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
-		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
-		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
-		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
-	}
-		=

-	return 0;
-}
-
-
-/// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
-static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
-	float r =3D luaL_checknumber(L,1);
-	float g =3D luaL_checknumber(L,2);
-	float b =3D luaL_checknumber(L,3);
-	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
-	=

-	if(p){
-		p->setAmbientLight( ColourValue( r, g, b ) );
-	}
-	=

-	return 0;
-}
-
-/// for lua :   string  GetUniqueName  ()
-static int l_GetUniqueName	(lua_State *L) { PROFILE  // TODO : move to sep=
erate file ?
-	std::string n =3D cOgreWrapper::GetSingleton().GetUniqueName();
-	lua_pushstring(L,n.c_str());
-	return 1;
-}
-
-
-/// for lua :   number OgreLastFPS  ()
-static int l_OgreLastFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfLastFPS);return 1; }
-/// for lua :   number OgreAvgFPS  ()
-static int l_OgreAvgFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWra=
pper::GetSingleton().mfAvgFPS);return 1; }
-/// for lua :   number OgreBestFPS  ()
-static int l_OgreBestFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfBestFPS);return 1; }
-/// for lua :   number OgreWorstFPS  ()
-static int l_OgreWorstFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreW=
rapper::GetSingleton().mfWorstFPS);return 1; }
-/// for lua :   number OgreBestFrameTime  ()
-static int l_OgreBestFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miBestFrameTime);return 1; }
-/// for lua :   number OgreWorstFrameTime  ()
-static int l_OgreWorstFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,=
cOgreWrapper::GetSingleton().miWorstFrameTime);return 1; }
-/// for lua :   number OgreTriangleCount  ()
-static int l_OgreTriangleCount	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miTriangleCount);return 1; }
-/// for lua :   number OgreBatchCount  ()
-static int l_OgreBatchCount	(lua_State *L) { PROFILE lua_pushnumber(L,cOgr=
eWrapper::GetSingleton().miBatchCount);return 1; }
-
-/*
-static int l_Client_SetMouseSensitivity (lua_State *L) { PROFILE
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client) client->mfMouseSensitivity =3D luaL_checknumber(L,1);
-	return 0;
-}
-
-
-
-static int l_Client_SetInvertMouse (lua_State *L) { PROFILE
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client) client->mbInvertMouse =3D luaL_checkint(L,1) !=3D 0;
-	return 0;
-}
-
-
-static int l_Client_SetCamera (lua_State *L) { PROFILE
-	int i=3D0;
-	Real x =3D luaL_checknumber(L,++i);
-	Real y =3D luaL_checknumber(L,++i);
-	Real z =3D luaL_checknumber(L,++i);
-	Real qw =3D luaL_checknumber(L,++i);
-	Real qx =3D luaL_checknumber(L,++i);
-	Real qy =3D luaL_checknumber(L,++i);
-	Real qz =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->SetCamera(Vector3(x,y,z),Quaternion(qw,qx,qy,qz));
-	else	printf("l_Client_SetCamera called from lua on non-client");
-	return 0;
-}
-
-static int l_Client_ForceCamRot (lua_State *L) { PROFILE
-	int i=3D0;
-	Real qw =3D luaL_checknumber(L,++i);
-	Real qx =3D luaL_checknumber(L,++i);
-	Real qy =3D luaL_checknumber(L,++i);
-	Real qz =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->ForceCamRot(Quaternion(qw,qx,qy,qz));
-	else	printf("l_Client_ForceCamRot called from lua on non-client");
-	return 0;
-}
-
-static int l_Client_CameraLookAt (lua_State *L) { PROFILE
-	int i=3D0;
-	Real x =3D luaL_checknumber(L,++i);
-	Real y =3D luaL_checknumber(L,++i);
-	Real z =3D luaL_checknumber(L,++i);
-	cClient* client =3D cGame::GetSingleton().mpClient;
-	if (client)
-			client->CameraLookAt(Vector3(x,y,z));
-	else	printf("l_Client_CameraLookAt called from lua on non-client");
-	return 0;
-}
-*/
-
-
-// ***** ***** utilities and error handling ***** *****
-
-
-/// also adds a traceback to the error message in case of an error
-/// nret=3D-1 for unlimited
-/// don't use directly, used by LuaCall
-int 	PCallWithErrFuncWrapper (lua_State *L,int narg, int nret) { PROFILE
-	int status;
-	int base =3D lua_gettop(L) - narg;  // function index =

-	lua_pushliteral(L, "_TRACEBACK");
-	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function =

-	lua_insert(L, base);  // put it under chunk and args =

-	// signal(SIGINT, laction); // copyed from example, no idea what this is =
good for =3D(
-	status =3D lua_pcall(L, narg, (nret=3D=3D-1) ? LUA_MULTRET : nret, base);
-	=

-	//printf("pcall end, cleaning up....\n");
-	=

-	// signal(SIGINT, SIG_DFL); // copyed from example, no idea what this is =
good for =3D(
-	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state =

-	=

-	//printf("pcall end\n");
-	=

-	return status;
-}
-
-
-void MyCrash				(const char* szMessage);
-
-void LuaErrorHandler (lua_State *L, const char *fmt, ...) { PROFILE
-	printf("LuaErrorHandler start\n");
-	=

-	va_list argp;
-	va_start(argp, fmt);
-	gRobStringBuffer[0] =3D 0;
-	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
-	std::string s(gRobStringBuffer);
-	va_end(argp);
-	=

-	std::string mystr("LuaError\n");
-	mystr +=3D s;
-	=

-	printf("\nLuaErrorHandler end\n");
-	=

-	//lua_close(L);
-	MyCrash(mystr.c_str());
-	// todo : attempt recovery in case of protected function call ?
-	// todo : deinit ogre to free mouse here
-}
-
-
-struct luaL_reg make_luaL_reg(const char *name,lua_CFunction func){
-  struct luaL_reg s;
-  s.name =3D name;
-  s.func =3D func;
-  return s;
-}
-
-void	cScripting::Listener_Notify (cListenable* pTarget,const size_t eventc=
ode,const size_t param,const size_t userdata) { PROFILE
-	switch (userdata) {
-		case kListenerBinding_Keys:
-			switch (eventcode) {
-				case cInput::kListenerEvent_KeyPress:
-					LuaCall("KeyDown","ii",(int)(param & 255),(int)((param >> 8) & 255));
-					//printf("keydown(%d)\n",param);
-				break;
-				case cInput::kListenerEvent_KeyRelease:
-					LuaCall("KeyUp","i",(int)param);
-					//printf("keyup(%d)\n",param);
-				break;
-			}
-			//printf("event=3D%d,key=3D%d\n",eventcode,param);
-		break;
-		// TODO : maybe timer ?
-	}
-}
-
-int		cScripting::GetGlobal	(const char* name) { PROFILE
-	lua_getglobal(L,name);
-	if (!lua_isnumber(L,-1)) { lua_pop(L,1); return 0; }
-	return (int)lua_tonumber(L,-1);
-}
-
-void	cScripting::SetGlobal	(const char* name,int value) { PROFILE
-	lua_pushnumber(L,value);
-	lua_setglobal(L,name);
-}
-
-/// this is the call_va function from the Book "Programming in Lua" with a=
ltered type notation :
-/// float : f
-/// int : i
-/// const char* : s
-/// returns true on successful call
-/// warning ! maybe this cannot return more than one string ! todo : check=
 doc of lua_tostring
-bool cScripting::LuaCall (const char *func, const char *sig, ...) { PROFILE
-	#ifdef PROFILE_LUACALLCOUNT
-	++gPROFILE_LUACALLCOUNT[func];
-	#endif
-
-	bool result =3D true;
-	va_list vl;
-	int narg, nres;  /* number of arguments and results */
-
-	va_start(vl, sig);
-	lua_getglobal(L, func);  /* get function */
-
-	/* push arguments */
-	narg =3D 0;
-	while (*sig) {  /* push arguments */
-		bool endwhile =3D false;
-		switch (*sig++) {
-		  case 'f':  /* float/double argument */
-			lua_pushnumber(L, va_arg(vl, double));
-			break;
-
-		  case 'i':  /* int argument (ansi printf : also use %d) */
-			lua_pushnumber(L, va_arg(vl, int));
-			break;
-
-		  case 's':  /* string argument */
-			lua_pushstring(L, va_arg(vl, char *));
-			break;
-
-		  case '>':
-			endwhile =3D true;
-			break;
-		  default:
-			LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
-			lua_pushnil(L);
-			break;
-		}
-		if (endwhile) break;
-		narg++;
-		luaL_checkstack(L, 1, "too many arguments");
-	}
-
-	/* do the call */
-	nres =3D strlen(sig);  /* number of expected results */
-	// todo : push lua error handler function here ?!?
-	if (PCallWithErrFuncWrapper(L,narg, nres) !=3D 0) {
-	//if (lua_pcall(L, narg, nres, 0) !=3D 0)  { // old
-		/* do the call */
-		LuaErrorHandler(L, "error running function `%s': %s",func, lua_tostring(=
L, -1));
-		=

-		/*
-		doku for lua_pcall last argument (errorfunc)
-		if 0 ... else that argument should be the index in the stack where the e=
rror handler function is located. Notice that, in such cases, the handler m=
ust be pushed in the stack before the function to be called and its argumen=
ts.
-		*/
-		result =3D false;
-	} else {
-		/* retrieve results */
-		int popamount =3D nres;
-		nres =3D -nres;  /* stack index of first result */
-		while (*sig) {  /* get results */
-			switch (*sig++) {
-
-			  case 'f':  /* float / double result */
-				if (!lua_isnumber(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl, double *) =3D 0;
-				} else {
-					*va_arg(vl, double *) =3D lua_tonumber(L, nres);
-				}
-				break;
-
-			  case 'i':  /* int result */
-				if (!lua_isnumber(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl, int *) =3D 0;
-				} else {
-					*va_arg(vl, int *) =3D (int)lua_tonumber(L, nres);
-				}
-				break;
-
-			  case 's':  /* string result */
-				if (!lua_isstring(L, nres)) {
-					LuaErrorHandler(L, "wrong result type");
-					*va_arg(vl,std::string*) =3D "";
-				} else {
-					*va_arg(vl,std::string*) =3D lua_tostring(L, nres); // return as std:=
:string, as pure lua pointer becomes invalid with pop
-				}
-				break;
-
-			  default:
-				LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
-				break;
-			}
-			nres++;
-		}
-		// pop stack    =

-		lua_pop(L, popamount);
-	}
-	va_end(vl);
-	return result;
-}
-
-
-cScripting::cScripting	() : L(0) {}
-
-void	cScripting::Init () { PROFILE
-	if (sizeof(lua_Number) <=3D 4) {
-		printf("sizeof(lua_Number) =3D %d, but must be greater than 4 (32 bit) f=
or bitwise ops\n",sizeof(lua_Number));
-		DisplayErrorMessage("ERROR : lua-precision wrong");
-		exit(43);
-	}
-	=

-	L =3D lua_open();
-	assert(L);
-	luaopen_base(L);
-	luaopen_table(L);
-	luaopen_io(L);
-	luaopen_string(L);
-	luaopen_math(L);
-	luaopen_debug(L);
-	=

-	lua_register(L,"GetNamedKey",		l_GetNamedKey);
-	lua_register(L,"GetKeyName",		l_GetKeyName);
-	lua_register(L,"PollInput",			l_PollInput);
-	lua_register(L,"Terminate",			l_Terminate);
-	lua_register(L,"InitOgre",			l_InitOgre);
-	lua_register(L,"GetPointerSize",	l_GetPointerSize);
-	lua_register(L,"Client_IsAlive",	l_Client_IsAlive);
-	//lua_register(L,"ServerSendMsgToClient",			l_ServerSendMsgToClient);
-	//lua_register(L,"ClientSendMsgToServer",			l_ClientSendMsgToServer);
-	//lua_register(L,"SoundPlayAmbient",				l_SoundPlayAmbient);
-	//lua_register(L,"Server_SetMaxResyncsPerSecond",	l_Server_SetMaxResyncsP=
erSecond);
-	//lua_register(L,"Server_GetMaxResyncsPerSecond",	l_Server_GetMaxResyncsP=
erSecond);
-	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
-	lua_register(L,"Client_TakeScreenshot",			l_Client_TakeScreenshot);
-	lua_register(L,"Client_TakeGridScreenshot",			l_Client_TakeGridScreenshot=
);
-	//lua_register(L,"Client_SetCamera",				l_Client_SetCamera);
-	//lua_register(L,"Client_ForceCamRot",			l_Client_ForceCamRot);
-	//lua_register(L,"Client_CameraLookAt",			l_Client_CameraLookAt);
-	//lua_register(L,"Client_SetPlayerShip",			l_Client_SetPlayerShip);
-	//lua_register(L,"Client_SetMaxFPS",				l_Client_SetMaxFPS);
-	//lua_register(L,"Client_GetMaxFPS",				l_Client_GetMaxFPS);
-	lua_register(L,"Client_GetCurFPS",				l_Client_GetCurFPS);
-	lua_register(L,"Client_GetFrameNum",			l_Client_GetFrameNum);
-	//lua_register(L,"Client_SetMouseSensitivity",	l_Client_SetMouseSensitivi=
ty);
-	//lua_register(L,"Client_SetInvertMouse",			l_Client_SetInvertMouse);
-	//lua_register(L,"Client_ShowMessage",			l_Client_ShowMessage);
-	lua_register(L,"Client_GetTicks",				l_Client_GetTicks);
-	lua_register(L,"Client_SetSkybox",				l_Client_SetSkybox);
-	lua_register(L,"Client_SetFog",					l_Client_SetFog);
-	lua_register(L,"Client_RenderOneFrame",			l_Client_RenderOneFrame);
-	lua_register(L,"Client_Sleep",					l_Client_Sleep);
-	lua_register(L,"Client_USleep",					l_Client_USleep);
-	lua_register(L,"Client_SetAmbientLight",		l_Client_SetAmbientLight);
-	lua_register(L,"Client_ClearLights",			l_Client_ClearLights);
-	lua_register(L,"Client_AddPointLight",			l_Client_AddPointLight);
-	lua_register(L,"Client_AddDirectionalLight",	l_Client_AddDirectionalLight=
);
-	lua_register(L,"Client_GetPhysStepTime",		l_Client_GetPhysStepTime);
-	lua_register(L,"BuildTerrainEntity_Simple",		l_BuildTerrainEntity_Simple);
-	lua_register(L,"BuildTerrainEntity_Shaded",		l_BuildTerrainEntity_Shaded);
-	lua_register(L,"TerrainRayPick",				l_TerrainRayPick);
-	lua_register(L,"SphereRayPick",					l_SphereRayPick);
-	lua_register(L,"UnloadMeshName",				l_UnloadMeshName);
-	lua_register(L,"CountMeshTriangles",			l_CountMeshTriangles);
-	lua_register(L,"GetUOPath",						l_getUOPath);
-	lua_register(L,"PathSearch",					l_PathSearch);
-	lua_register(L,"file_exists",					l_file_exists);
-	lua_register(L,"file_size",						l_file_size);
-	lua_register(L,"Hex2Num",						l_Hex2Num);
-	lua_register(L,"GetRandomHexString",			l_GetRandomHexString);
-	lua_register(L,"BitwiseAND",					l_BitwiseAND);
-	lua_register(L,"BitwiseOR",						l_BitwiseOR);
-	lua_register(L,"BitwiseXOR",					l_BitwiseXOR);
-	lua_register(L,"BitwiseSHL",					l_BitwiseSHL);
-	lua_register(L,"BitwiseSHR",					l_BitwiseSHR);
-	lua_register(L,"TestBit",						l_TestBit);
-	lua_register(L,"SetBit",						l_SetBit);
-	lua_register(L,"ClearBit",						l_ClearBit);
-	lua_register(L,"Exit",							l_Exit);
-	lua_register(L,"Crash",							l_Crash);
-	lua_register(L,"CrashSegFault",					l_CrashSegFault);
-	lua_register(L,"DisplayNotice",					l_DisplayNotice);
-	lua_register(L,"FatalErrorMessage",				l_FatalErrorMessage);
-	lua_register(L,"ExportMesh",					l_ExportMesh);
-	lua_register(L,"CreateSceneManager",			l_CreateSceneManager);
-	lua_register(L,"GetUniqueName",					l_GetUniqueName);
-	lua_register(L,"GetMouseRay",					l_GetMouseRay);
-	lua_register(L,"GetMaxZ",						l_GetMaxZ);
-	lua_register(L,"ProjectPos",					l_ProjectPos);
-	lua_register(L,"ProjectSizeAndPos",				l_ProjectSizeAndPos);
-	lua_register(L,"_TRACEBACK",					l_TRACEBACK);
-	lua_register(L,"ProfileDumpCallCount",			l_ProfileDumpCallCount);
-	lua_register(L,"OgreMemoryUsage",				l_OgreMemoryUsage);
-	lua_register(L,"OgreMeshAvailable",				l_OgreMeshAvailable);
-	lua_register(L,"OgreMaterialNameKnown",			l_OgreMaterialNameKnown);
-	lua_register(L,"OgreMaterialAvailable",			l_OgreMaterialAvailable);
-	lua_register(L,"OgreTextureAvailable",			l_OgreTextureAvailable);
-	lua_register(L,"OgreMeshTextures",				l_OgreMeshTextures);
-	// some statistic stuff
-	lua_register(L,"OgreLastFPS",				l_OgreLastFPS);
-	lua_register(L,"OgreAvgFPS",				l_OgreAvgFPS);
-	lua_register(L,"OgreBestFPS",				l_OgreBestFPS);
-	lua_register(L,"OgreWorstFPS",				l_OgreWorstFPS);
-	lua_register(L,"OgreBestFrameTime",			l_OgreBestFrameTime);
-	lua_register(L,"OgreWorstFrameTime",			l_OgreWorstFrameTime);
-	lua_register(L,"OgreTriangleCount",			l_OgreTriangleCount);
-	lua_register(L,"OgreBatchCount",			l_OgreBatchCount);
-
-	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
-	lua_register(L,"HueMesh",						l_HueMesh);
-	lua_register(L,"OgreAddCompositor",						l_OgreAddCompositor);
-	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
-	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
-	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
-	// shadow stuff
-	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
-	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
-
-	// file paths for init
-	const char* szLuaUDataPath =3D "../data/lua/udata.lua";
-	const char* szLuaMainPath =3D "../data/lua/main.lua";
-
-
-	// check if lua files exist (otherwise working directory probably wrong)
-	std::ifstream myFileStream(szLuaMainPath);
-	if (!myFileStream) {
-		MyCrash(strprintf("%s cannot be found, probably the working directory is=
 wrong",szLuaMainPath).c_str());
-		exit(34);
-	}
-	myFileStream.close();
-	=

-	// load utils
-	int res;
-	res	=3D lua_dofile(L,szLuaUDataPath); // loads function used for register=
ing udatatypes
-	if (res) { =

-		MyCrash("error in udata script-initialisation\n"); =

-		exit(44); =

-	}
-
-	RegisterLuaXML(L);
-	LuaRegisterFIFO(L);
-	LuaRegisterNet(L);
-	cGfx3D::LuaRegister(L);
-	cGfx2D::LuaRegister(L);
-	cDialog::LuaRegister(L);
-	cWidget::LuaRegister(L);
-	cBitMask::LuaRegister(L);
-	cCamera::LuaRegister(L);
-	cViewport::LuaRegister(L);
-	cRenderTexture::LuaRegister(L);
-	cSoundSource::LuaRegister(L);
-	cSpriteManager::LuaRegister(L);
-	cManualArtMaterialLoader::LuaRegister(L);
-	cSprite::LuaRegister(L);
-	Material_LuaRegister(L);
-	Granny_LuaRegister(L);
-	LuaRegisterData(L);
-	LuaRegisterBuilder(L);
-	LuaRegisterRadar(L);
-
-	cInput::GetSingleton().RegisterListener(this,kListenerBinding_Keys);
-
-	res =3D lua_dofile(L,szLuaMainPath);
-	if (res) {
-		MyCrash("error in main script-initialisation\n"); =

-		exit(-1); =

-	}
-}
-
-cScripting::~cScripting	() { PROFILE
-	cInput::GetSingleton().UnRegisterListener(this,kListenerBinding_Keys);
-
-	assert(L);
-	lua_setgcthreshold(L, 0);  // collected garbage
-	lua_close(L);
-	L =3D 0;
-}
+#include "prefix.h"
+#include <assert.h>
+#include <stdarg.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include "net.h"
+#include "fifo.h"
+#include "game.h"
+#include "listener.h"
+#include "scripting.h"
+#include "input.h"
+#include "robstring1.2.h"
+#include "gfx3D.h"
+#include "gfx2D.h"
+#include "widget.h"
+#include "luabind.h"
+#include "data.h"
+#include "builder.h"
+#include "shell.h"
+#include "timer.h"
+#include "ogrewrapper.h"
+#include "pathsearch.h"
+#include "bitmask.h"
+#include "camera.h"
+#include "viewport.h"
+#include "rendertexture.h"
+#include "sound.h"
+#include "terrain.h"
+#include "radar.h"
+#include <Ogre.h>
+#include <OgreResourceManager.h>
+#include <OgreFontManager.h>
+#include <OgreTextAreaOverlayElement.h>
+#include <OgreMeshSerializer.h>
+#include <OgreCompositorManager.h>
+#include "luaxml.h"
+#include "spritemanager.h"
+#include "ogremanualloader.h"
+
+//#define PROFILE_LUACALLCOUNT
+#ifdef PROFILE_LUACALLCOUNT
+std::map<const char*,int> gPROFILE_LUACALLCOUNT;
+struct cPROFILE_LUACALLCOUNTSetCmp {
+  inline bool operator() (const std::pair<const char*,int>& x,const  std::=
pair<const char*,int>& y) const { =

+	return x.second > y.second; =

+  }
+};
+#endif
+
+#ifdef WIN32
+#include <windows.h>
+#else
+#include <unistd.h>
+#endif
+
+extern "C" {
+	#include "lua.h"
+	#include "lauxlib.h"
+	#include "lualib.h"
+}
+
+void	DisplayNotice			(const char* szMsg); ///< defined in main.cpp, OS-spe=
cific
+void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
+void	Material_LuaRegister	(void *L);
+void	Granny_LuaRegister		(void *L);
+void	PrintLuaStackTrace		();
+void	ProfileDumpCallCount	(); ///< defined in profile.cpp, only does somet=
hing if PROFILE_CALLCOUNT is enabled
+
+void	PrintLuaStackTrace		() { PROFILE
+	printf("PrintLuaStackTrace:\n");
+	// see l_TRACEBACK() : leaves a string containing the stacktrace at the t=
op of the stack
+	std::string sMyStackTrace;
+	cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
+	printf("%s\n",sMyStackTrace.c_str());
+}
+
+void	PrintLuaStackTrace		(const char *filename) { PROFILE
+	FILE *f =3D fopen(filename,"a");
+	if(f){
+		fprintf(f,"PrintLuaStackTrace:\n");
+		// see l_TRACEBACK() : leaves a string containing the stacktrace at the =
top of the stack
+		std::string sMyStackTrace;
+		cScripting::GetSingletonPtr()->LuaCall("_TRACEBACK",">s",&sMyStackTrace);
+		fprintf(f,"%s\n",sMyStackTrace.c_str());
+		=

+		fclose(f);
+	}
+}
+
+void	printdebug	(const char *szCategory, const char *szFormat, ...) { PROF=
ILE
+	va_list ap;
+	va_start(ap,szFormat);
+	gRobStringBuffer[0] =3D 0;
+	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,szFormat,ap);
+	cScripting::GetSingletonPtr()->LuaCall("printdebug","ss",szCategory,gRobS=
tringBuffer);
+	va_end(ap);
+}
+
+// ***** ***** global functionals exported to lua ***** *****
+
+
+cScripting*	cScripting::GetSingletonPtr	(cScripting* p) {
+	static cScripting* pSingleton =3D 0;
+	if (p) pSingleton =3D p;
+	return pSingleton;
+}
+
+
+/// called from lua : string keyname
+static int l_GetNamedKey (lua_State *L) { PROFILE
+	const char *keyname =3D luaL_checkstring(L, 1);
+	lua_pushnumber(L,cInput::GetSingleton().GetNamedKey(keyname));  // push r=
esult =

+	return 1;  // number of results =

+}
+
+/// called from lua : int keycode
+static int l_GetKeyName (lua_State *L) { PROFILE
+	int keycode =3D luaL_checkint(L, 1);
+	lua_pushstring(L,cInput::GetSingleton().GetKeyName(keycode));  // push re=
sult =

+	return 1;  // number of results =

+}
+
+/// terminates the application
+static int l_Terminate (lua_State *L) { PROFILE
+	cShell::mbAlive =3D false;
+	return 0;
+}
+
+/// only call this once at startup
+static int l_InitOgre (lua_State *L) { PROFILE
+	lua_pushboolean(L,cOgreWrapper::GetSingleton().Init());
+	return 1;
+}
+
+static int l_GetPointerSize (lua_State *L) { PROFILE
+	lua_pushnumber(L,sizeof(void*));
+	return 1;
+}
+
+/// only call this once at startup
+static int l_Client_IsAlive (lua_State *L) { PROFILE
+	lua_pushboolean(L,cShell::mbAlive);
+	return 1;
+}
+	=

+/// called from lua : no params, returns mousex,mousey,4xmousewheel info...
+static int l_PollInput (lua_State *L) { PROFILE
+	lua_pushnumber(L,cInput::iMouse[0]);
+	lua_pushnumber(L,cInput::iMouse[1]);
+	lua_pushnumber(L,cInput::iMouseWheel);
+	lua_pushnumber(L,cInput::iMouseWheel_pressed);
+	lua_pushnumber(L,cInput::iMouseWheel_all_since_last_step);
+	lua_pushnumber(L,cInput::iMouseWheel_pressed_since_last_step);
+	return 6;
+}
+
+
+static int l_ProfileDumpCallCount (lua_State *L) { PROFILE
+	ProfileDumpCallCount();
+	=

+	#ifdef PROFILE_LUACALLCOUNT
+	printf("LuaCallCounts:\n\n");
+	=

+	std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSetCmp> myC=
allCountProfileSet;
+	typedef std::multiset<std::pair<const char*,int>,cPROFILE_LUACALLCOUNTSet=
Cmp>::iterator tLuaCallCountProfileSetItor;
+	{ for (std::map<const char*,int>::iterator itor=3DgPROFILE_LUACALLCOUNT.b=
egin();itor !=3D gPROFILE_LUACALLCOUNT.end();++itor)
+		myCallCountProfileSet.insert(std::make_pair((*itor).first,(*itor).second=
)); =

+	}
+	int i=3D0;
+	for (tLuaCallCountProfileSetItor itor=3DmyCallCountProfileSet.begin();ito=
r !=3D myCallCountProfileSet.end();++itor) {
+		//if (++i > 10) break;
+		printf("LuaCallCallCount %16d %s\n",(*itor).second,(*itor).first);
+	}
+	#endif
+
+	return 0;
+}
+
+/// used as errfunc for lua_pcall, adds a callstack/backtrace/list_of_call=
ed_functions to the errormessage
+/// code from errorfb from /usr/src/lua-5.0.2/src/lua/ldblib.c
+/// "_TRACEBACK" is defined as errorfb
+/// leaves a string containing the stacktrace at the top of the stack
+#define LEVELS1	12	/* size of the first part of the stack */
+#define LEVELS2	10	/* size of the second part of the stack */
+static int l_TRACEBACK (lua_State *L) { PROFILE
+  int level =3D 1;  /* skip level 0 (it's this function) */
+  int firstpart =3D 1;  /* still before eventual `...' */
+  lua_Debug ar;
+  if (lua_gettop(L) =3D=3D 0)
+	lua_pushliteral(L, "");
+  else if (!lua_isstring(L, 1)) return 1;  /* no string message */
+  else lua_pushliteral(L, "\n");
+  lua_pushliteral(L, "LuaStackTrace:\n");
+  while (lua_getstack(L, level++, &ar)) {
+	if (level > LEVELS1 && firstpart) {
+	  /* no more than `LEVELS2' more levels? */
+	  if (!lua_getstack(L, level+LEVELS2, &ar))
+		level--;  /* keep going */
+	  else {
+		lua_pushliteral(L, "\n\t...");  /* too many levels */
+		while (lua_getstack(L, level+LEVELS2, &ar))  /* find last levels */
+		  level++;
+	  }
+	  firstpart =3D 0;
+	  continue;
+	}
+	lua_pushliteral(L, "\n\t");
+	lua_getinfo(L, "Snl", &ar);
+	lua_pushfstring(L, "%s:", ar.short_src);
+	if (ar.currentline > 0)
+	  lua_pushfstring(L, "%d:", ar.currentline);
+	switch (*ar.namewhat) {
+	  case 'g':  /* global */ =

+	  case 'l':  /* local */
+	  case 'f':  /* field */
+	  case 'm':  /* method */
+		lua_pushfstring(L, " in function `%s'", ar.name);
+		break;
+	  default: {
+		if (*ar.what =3D=3D 'm')  /* main? */
+		  lua_pushfstring(L, " in main chunk");
+		else if (*ar.what =3D=3D 'C' || *ar.what =3D=3D 't')
+		  lua_pushliteral(L, " ?");  /* C function or tail call */
+		else
+		  lua_pushfstring(L, " in function <%s:%d>",
+							 ar.short_src, ar.linedefined);
+	  }
+	}
+	lua_concat(L, lua_gettop(L));
+  }
+  lua_concat(L, lua_gettop(L));
+  return 1;
+}
+
+
+
+static int l_Client_GetCurFPS (lua_State *L) { PROFILE
+	lua_pushnumber(L, (cTimer::miTimeSinceLastFrame > 0) ? (float(1000.0) / f=
loat(cTimer::miTimeSinceLastFrame)) : 0.0 );
+	return 1;
+}
+
+static int l_Client_GetFrameNum (lua_State *L) { PROFILE
+	lua_pushnumber(L, cTimer::miCurFrameNum );
+	return 1;
+}
+
+static int l_Client_GetTicks (lua_State *L) { PROFILE
+	lua_pushnumber(L, cShell::GetTicks());
+	return 1;
+}
+
+
+/// void OgreAddCompositor(compositor script name)
+static int l_OgreAddCompositor (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	Ogre::CompositorManager::getSingleton().addCompositor(cOgreWrapper::GetSi=
ngleton().mViewport, name);
+//	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapp=
er::GetSingleton().mViewport, name, true);
+	return 0;
+}
+
+/// void OgreRemoveCompositor(compositor script name)
+static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+//	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapp=
er::GetSingleton().mViewport, name, false);
+	Ogre::CompositorManager::getSingleton().removeCompositor(cOgreWrapper::Ge=
tSingleton().mViewport, name);
+	return 0;
+}
+
+/// int =3D OgreMemoryUsage(part)
+/// part in {compositor,font,gpuprogram,highlevelgpuprogram,material,mesh,=
skeleton,texture,all}
+/// returns memory usage in byte
+static int l_OgreMemoryUsage (lua_State *L) { PROFILE
+	std::string part(luaL_checkstring(L,1));
+	size_t mem =3D 0;
+	=

+#ifdef OGRE_VERSION_SUFFIX
+	if(part.find("compositor") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::CompositorManager::getSingleton().getM=
emoryUsage();
+	if(part.find("font") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::FontManager::getSingleton().getMemoryUsage();
+	if(part.find("gpuprogram") !=3D std::string::npos || part.find("all") !=
=3D std::string::npos)mem +=3D Ogre::GpuProgramManager::getSingleton().getM=
emoryUsage();
+	if(part.find("highlevelgpuprogram") !=3D std::string::npos || part.find("=
all") !=3D std::string::npos)mem +=3D Ogre::HighLevelGpuProgramManager::get=
Singleton().getMemoryUsage();
+	if(part.find("material") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::MaterialManager::getSingleton().getMemoryU=
sage();
+	if(part.find("mesh") !=3D std::string::npos || part.find("all") !=3D std:=
:string::npos)mem +=3D Ogre::MeshManager::getSingleton().getMemoryUsage();
+	if(part.find("skeleton") !=3D std::string::npos || part.find("all") !=3D =
std::string::npos)mem +=3D Ogre::SkeletonManager::getSingleton().getMemoryU=
sage();
+	if(part.find("texture") !=3D std::string::npos || part.find("all") !=3D s=
td::string::npos)mem +=3D Ogre::TextureManager::getSingleton().getMemoryUsa=
ge();
+#endif
+	=

+	lua_pushnumber(L, mem);
+	return 1;
+}
+
+/// bool =3D OgreMeshAvailable(ressourcename)
+static int l_OgreMeshAvailable (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+	=

+	try {
+		Ogre::MeshManager::getSingleton().load(name,Ogre::ResourceGroupManager::=
DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+	=

+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+/// see also OgreMaterialAvailable below
+/// bool =3D OgreMaterialNameKnown(ressourcename)
+/// returns false if name is empty string or nil
+static int l_OgreMaterialNameKnown (lua_State *L) { PROFILE =

+	std::string sMatName =3D (lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL=
_checkstring(L,1) : "";
+	if (sMatName.size() > 0) { =

+		Ogre::MaterialPtr pMaterial =3D Ogre::MaterialManager::getSingleton().ge=
tByName(sMatName.c_str());
+		lua_pushboolean(L,!pMaterial.isNull());
+	} else {
+		lua_pushboolean(L,false);
+	}
+	return 1;
+}
+
+/// bool =3D OgreMaterialAvailable(ressourcename)
+static int l_OgreMaterialAvailable (lua_State *L) { PROFILE
+	assert(0 && "DON'T USE ME, ALWAYS RETURNS TRUE"); =

+	// TODO, this code does not work, use l_OgreMaterialNameKnown  above
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+	=

+	try {
+		Ogre::MaterialManager::getSingleton().load(name,Ogre::ResourceGroupManag=
er::DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+	=

+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+/// bool =3D OgreTextureAvailable(ressourcename)
+static int l_OgreTextureAvailable (lua_State *L) { PROFILE
+	const char *name =3D luaL_checkstring(L,1);
+	bool ret;
+	=

+	try {
+		Ogre::TextureManager::getSingleton().load(name,Ogre::ResourceGroupManage=
r::DEFAULT_RESOURCE_GROUP_NAME);
+		ret =3D true;
+	} catch (...) {
+			ret =3D false;
+	}
+	=

+	lua_pushboolean(L, ret);
+	return 1;
+}
+
+/// r,g,b =3D Uo16Color2Rgb(color)
+static int l_Uo16Color2Rgb (lua_State *L) { PROFILE
+	unsigned short color =3D luaL_checkint(L,1);
+	=

+	float r =3D float((color >> 10) & 0x1F)/float(0x1f);
+	float g =3D float((color >>  5) & 0x1F)/float(0x1f);
+	float b =3D float((color >>  0) & 0x1F)/float(0x1f);
+				=

+	lua_pushnumber(L, r);
+	lua_pushnumber(L, g);
+	lua_pushnumber(L, b);
+	return 3;
+}
+
+/// CreateGrannyHuedTexture(GrannyTextureHook(texturepath),GrannyTextureHo=
ok(texturepath),gHueLoader,hue)
+static int l_CreateGrannyHuedTexture (lua_State *L) { PROFILE
+	std::string sTexturePath	=3D luaL_checkstring(L,1);
+	std::string sMaskPath		=3D luaL_checkstring(L,2);
+	cHueLoader *hueLoader 		=3D cLuaBind<cHueLoader>::checkudata(L,3);
+	int iHue					=3D luaL_checkint(L,4);
+	=

+	if (iHue =3D=3D 0 || !hueLoader) {
+		lua_pushstring(L,sTexturePath.c_str());
+		return 1;
+	}
+	=

+	// load image
+	Ogre::Image myImage;
+	myImage.load(sTexturePath,Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GR=
OUP_NAME);
+	=

+	// get image infos
+	Ogre::PixelFormat myFormat =3D myImage.getFormat();
+	unsigned int size =3D myImage.getSize();
+	unsigned int w =3D myImage.getWidth();
+	unsigned int h =3D myImage.getHeight();
+	unsigned int rowspan =3D myImage.getRowSpan();
+	unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(myFormat);
+	//Ogre::uchar* dst =3D new Ogre::uchar[size];
+	Ogre::uchar* src =3D myImage.getData();
+	//Ogre::uchar* dst_start =3D dst;
+	Ogre::uchar* src_start =3D src;
+	uint8 cr,cg,cb,ca1,ca2;
+	short col;
+	=

+	// debug info
+	//printf("image size=3D%d w=3D%d h=3D%d d=3D%d f=3D%d bpp=3D%d rowspan=3D=
%d bIsNonZero2=3D%d\n",size,w,h,
+	//	myImage.getDepth(),myImage.getNumFaces(),myImage.getBPP(),rowspan,bIsN=
onZero2?1:0);
+	=

+	// hue filter
+	cHueFilter Filter;
+	short* ColorTable =3D hueLoader->GetHue( iHue-1 )->GetColors();
+	=

+	// colorize the pixels
+	for(unsigned int y =3D 0; y < h; y++){
+		for(unsigned int x =3D 0; x < w; x++) {
+			// read out pixel in src graphic
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,myFormat,src);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
+			// and hue the pixel
+			col =3D Filter( col, ColorTable );
+			// TODO ! respect mask instead of hueing the complete texture
+			// and store it in destination (ignoring the new alpha)
+			Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,&col);
+			Ogre::PixelUtil::packColour(cr,cg,cb,ca1,myFormat,src);
+			src +=3D pixelsize;
+			//dst +=3D pixelsize;
+		}
+		src +=3D rowspan - w*pixelsize;
+	}
+	=

+	// and make a texture
+	std::string newtextname =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	//Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start, siz=
e));
+	//Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadR=
awData(newtextname,
+	//	Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,texstream, w,h=
,myFormat);
+	=

+	Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().loadIma=
ge(newtextname,
+		Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,myImage,Ogre::TE=
X_TYPE_2D,-1,1.0f,true,Ogre::PF_UNKNOWN);
+	=

+	// free memory
+	//delete [] dst_start;
+
+	lua_pushstring(L,newtextname.c_str());
+	return 1;
+}
+	=

+/// void HueMesh(meshname, hueloader, hue)
+static int l_HueMesh (lua_State *L) { PROFILE
+	const char *meshname =3D luaL_checkstring(L,1);
+	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
+	int hue =3D luaL_checkint(L,3);
+
+	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
+	if(hueLoader && hue && meshname){
+		try	{
+			cHueFilter Filter;
+			short* ColorTable =3D hueLoader->GetHue( hue-1 )->GetColors();
+		=

+			// data seem ok, so read out the mesh
+			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+			=

+			//printf("mesh=3D%s\n",mesh->getName().c_str());
+
+			// and iterate over all submeshes
+			Ogre::Mesh::SubMeshIterator sit =3D mesh->getSubMeshIterator();
+			while(sit.hasMoreElements()){
+				Ogre::SubMesh *submesh =3D sit.getNext();
+				//printf("submesh=3D%i\n",submesh);
+				=

+				if(!submesh->isMatInitialised())continue;
+				=

+				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
+
+				// create hued texture in the current material and update the current =

+				Ogre::MaterialPtr mat =3D Ogre::MaterialManager::getSingleton().load(s=
ubmesh->getMaterialName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME);
+				if(mat.isNull()){
+					printf("ERROR HueMesh: material %s is null\n",submesh->getMaterialNam=
e().c_str());
+					continue;
+				}
+
+				// clone current material for hueing
+				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
+				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
+				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
+				mat->copyDetailsTo(mat_hue);
+
+				// iterate over all techniques
+				Ogre::Material::TechniqueIterator tit =3D mat->getTechniqueIterator();
+				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
+				while(tit.hasMoreElements()){
+					Ogre::Technique *tech =3D tit.getNext();
+					Ogre::Technique *tech_hue =3D tit_hue.getNext();
+					=

+					// iterate over all passes
+					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
+					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
+					while(pit.hasMoreElements()){
+						Ogre::Pass *pass =3D pit.getNext();
+						Ogre::Pass *pass_hue =3D pit_hue.getNext();
+						=

+						// iterate over all tex units
+						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
+						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
+						while(uit.hasMoreElements()){
+							Ogre::TextureUnitState *unit =3D uit.getNext();
+							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
+
+							// current texture
+							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
+
+							// lock and read access buffer
+							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
+							// calc size of complete texture
+							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
+							// and lock (ro)
+							const Ogre::PixelBox box =3D b->lock(area,Ogre::HardwareBuffer::HBL=
_READ_ONLY);
+							=

+							// size of one pixel in bytes
+							unsigned int pixelsize =3D Ogre::PixelUtil::getNumElemBytes(box.for=
mat);
+							// texture size in bytes
+							unsigned int size =3D box.getConsecutiveSize();
+							=

+							char *dst =3D new char[size];
+							char *src =3D static_cast<char *>(box.data);
+
+							char *dst_start =3D dst;
+							char *src_start =3D src;
+
+							uint8 cr,cg,cb,ca1,ca2;
+							short col;
+							=

+							// colorize the pixels
+							for(unsigned int y =3D 0; y < box.getHeight(); y++){
+								for(unsigned int x =3D 0; x < box.getWidth(); x++){
+									// read out pixel in src graphic
+									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca1,box.format,src);
+									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,Ogre::PF_A1R5G5B5,&col);
+									// and hue the pixel
+									col =3D Filter( col, ColorTable );
+									//printf("RGBA_1(%i,%i,%i,%i)\n",cr,cg,cb,ca);
+									// and store it in destination (ignoring the new alpha)
+									Ogre::PixelUtil::unpackColour(&cr,&cg,&cb,&ca2,Ogre::PF_A1R5G5B5,=
&col);
+									Ogre::PixelUtil::packColour(cr,cg,cb,ca1,box.format,dst);
+									//printf("RGBA_2(%i,%i,%i,%i)\n",cr,cg,cb,ca);
+									src +=3D pixelsize;
+									dst +=3D pixelsize;
+								}
+								src +=3D box.getRowSkip();
+							}
+
+							// and make a texture
+							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
+							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
+								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+							=

+							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
+							=

+							// release the lock
+							b->unlock();
+
+							// free memory
+							delete [] dst_start;
+		=

+							// set the texture
+							unit_hue->setTextureName(tex_hue->getName());
+						}
+					}
+				}
+
+				// set new material
+				submesh->setMaterialName(mat_hue->getName());
+			}
+		} catch (Ogre::FileNotFoundException e){
+			printf("ERROR file not found, so HueMesh(%s) canceled\n",meshname);
+		}
+	}
+
+	return 0;
+}
+
+/// create a lua lookup table based on the given file
+/// usage: lookup[id] =3D new_id
+static int l_CreateLookupTableFromFile (lua_State *L) { PROFILE
+	const char *filename =3D luaL_checkstring(L, 1);
+	lua_newtable(L);
+	=

+	cFullFileLoader f(filename);
+	=

+	const uint32 *buffer =3D (const uint32 *)f.mpFullFileBuffer;
+	=

+	for(int i =3D 0;i < f.miFullFileSize / 4; ++i){
+		lua_pushnumber(L,i); lua_rawseti(L,-2,buffer[i]);
+	}
+	=

+	return 1;
+}
+
+
+static int l_Client_SetSkybox (lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().SetSkybox( (lua_gettop(L) > 0 && !lua_isnil(=
L,1)) ? luaL_checkstring(L, 1) : 0 , true );
+	return 0;
+}
+
+static int l_Client_SetFog (lua_State *L) { PROFILE
+	int i=3D0;
+	int numargs=3Dlua_gettop(L);
+	int iFogMode 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checkint(L,=
 ++i) : 0;
+	Ogre::Real r 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real g 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real b 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real a 			=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_checknumber=
(L, ++i) : 1;
+	Ogre::Real expDensity 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_chec=
knumber(L, ++i) : 0.001;
+	Ogre::Real linearStart 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_che=
cknumber(L, ++i) : 0.0;
+	Ogre::Real linearEnd 	=3D (numargs > i && !lua_isnil(L,i+1)) ? luaL_check=
number(L, ++i) : 1.0;
+	/*
+	void 	setFog (FogMode mode=3DFOG_NONE, const ColourValue &colour=3DColour=
Value::White, =

+					Real expDensity=3D0.001, Real linearStart=3D0.0, Real linearEnd=3D1.0)
+    0=3DFOG_NONE 	No fog. Duh.
+    1=3DFOG_EXP 	Fog density increases exponentially from the camera (fog =
=3D 1/e^(distance * density)).
+    2=3DFOG_EXP2 	Fog density increases at the square of FOG_EXP, i.e. eve=
n quicker (fog =3D 1/e^(distance * density)^2).
+    3=3DFOG_LINEAR 	Fog density increases linearly between the start and e=
nd distances.
+	*/
+	Ogre::FogMode      myFogMode =3D Ogre::FOG_NONE;
+	if (iFogMode =3D=3D 1) myFogMode =3D Ogre::FOG_EXP;
+	if (iFogMode =3D=3D 2) myFogMode =3D Ogre::FOG_EXP2;
+	if (iFogMode =3D=3D 3) myFogMode =3D Ogre::FOG_LINEAR;
+	cOgreWrapper::GetSingleton().mSceneMgr->setFog(myFogMode,Ogre::ColourValu=
e(r,g,b,a),expDensity,linearStart,linearEnd);
+	return 0;
+}
+
+static int l_Client_RenderOneFrame (lua_State *L) { PROFILE
+	cGame::GetSingleton().RenderOneFrame();
+	return 0;
+}
+
+/// just do nothing for x seconds
+static int l_Client_Sleep (lua_State *L) { PROFILE
+	//TODO correct win handling
+#ifndef WIN32
+	sleep(luaL_checkint(L,1));
+#else
+	Sleep(luaL_checkint(L,1)*1000); // takes milliseconds
+#endif
+	return 0;
+}
+
+/// just do nothing for x milliseconds (1000msec =3D 1sec)
+static int l_Client_USleep (lua_State *L) { PROFILE
+	//TODO correct win handling
+#ifndef WIN32
+	usleep((uint32)luaL_checkint(L,1)*(uint32)1000L); // usleep takes MICROse=
conds, where 1000 =3D 1 MILLIsecond
+#else
+	Sleep(luaL_checkint(L,1)); // takes milliseconds
+#endif
+	return 0;
+}
+
+
+
+static int l_Client_SetAmbientLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) pSceneMgr->setAmbientLight(Ogre::ColourValue(luaL_checknum=
ber(L,1),luaL_checknumber(L,2),luaL_checknumber(L,3),luaL_checknumber(L,4))=
);
+	return 0;
+}
+
+static int l_Client_ClearLights (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) pSceneMgr->destroyAllLights();
+	return 0;
+}
+
+static int l_Client_AddPointLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) {
+		Ogre::Light* pLight =3D pSceneMgr->createLight( cOgreWrapper::GetSinglet=
on().GetUniqueName() );
+		pLight->setType( Ogre::Light::LT_POINT );
+		pLight->setPosition(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_che=
cknumber(L,3));
+	}
+	return 0;
+}
+
+static int l_Client_AddDirectionalLight (lua_State *L) { PROFILE
+	Ogre::SceneManager* pSceneMgr =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	if (pSceneMgr) {
+		Ogre::Light* pLight =3D pSceneMgr->createLight( cOgreWrapper::GetSinglet=
on().GetUniqueName() );
+		pLight->setType( Ogre::Light::LT_DIRECTIONAL );
+		pLight->setDirection(luaL_checknumber(L,1),luaL_checknumber(L,2),luaL_ch=
ecknumber(L,3));
+	}
+	return 0;
+}
+
+static int l_Client_GetPhysStepTime (lua_State *L) { PROFILE
+	lua_pushnumber(L,cTimer::mfPhysStepTime);
+	return 1;
+}
+
+/// saved in main directory
+static int l_Client_TakeGridScreenshot (lua_State *L) { PROFILE
+	std::string filename =3D strprintf( "%shighres_%d", "../screenshots/", cS=
hell::GetTicks() );
+	std::string ext =3D ".jpg";
+	cOgreWrapper::GetSingleton().TakeGridScreenshot(3,filename,ext,true);
+	return 0;
+}
+
+/// saved in main directory
+static int l_Client_TakeScreenshot (lua_State *L) { PROFILE
+	cOgreWrapper::GetSingleton().TakeScreenshot();
+	return 0;
+}
+
+void	OgreForceCloseFullscreen ();
+
+/// shows ogre config dialog
+static int l_Client_ShowOgreConfig (lua_State *L) { PROFILE
+	bool bIsFullscreen =3D cOgreWrapper::GetSingleton().mWindow->isFullScreen=
();
+	printf("Client_ShowOgreConfig fullscreen=3D%d\n",bIsFullscreen);
+	bIsFullscreen =3D true; // detection fails in linux ?
+	if (bIsFullscreen) {
+		// hide window to make config window visible in fullscreen mode, evil ha=
ck since this is not supported by ogre
+		OgreForceCloseFullscreen();
+	}
+	lua_pushboolean(L,cOgreWrapper::GetSingleton().mRoot->showConfigDialog());
+	if (bIsFullscreen) cShell::mbAlive =3D false;
+	// the application shoudl terminate after this
+	// terminates the game if changes were made
+	return 1;
+}
+
+static int l_BuildTerrainEntity_Simple (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+	int i=3D5;
+	bool bGenerateNormals=3D		(lua_gettop(L) >=3D ++i && !lua_isnil(L,i)) ? l=
ua_toboolean(L,i) : true;
+	std::string meshname =3D BuildTerrainEntity_Simple(
+		pGroundBlockLoader,
+		luaL_checkint(L,2),luaL_checkint(L,3),
+		luaL_checkint(L,4),luaL_checkint(L,5),bGenerateNormals);
+	if (meshname.length() =3D=3D 0) return 0;
+	lua_pushstring(L,meshname.c_str());
+	return 1;
+}
+
+static int l_BuildTerrainEntity_Shaded (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+	std::string meshname =3D BuildTerrainEntity_Shaded(
+		pGroundBlockLoader,
+		luaL_checkint(L,2),luaL_checkint(L,3),
+		luaL_checkint(L,4),luaL_checkint(L,5));
+	if (meshname.length() =3D=3D 0) return 0;
+	lua_pushstring(L,meshname.c_str());
+	return 1;
+}
+
+/// OBSOLETED CODE ! don't use this, hasn't been adjusted to xmirror fix
+/// for lua : TerrainRayPick(GroundBlockLoader,blockx,blocky,vBlockPosX,vB=
lockPosY,vBlockPosZ,rx,ry,rz,rvx,rvy,rvz)  -- mainly for mousepicking
+static int l_TerrainRayPick (lua_State *L) { PROFILE
+	cGroundBlockLoader* pGroundBlockLoader =3D cLuaBind<cGroundBlockLoader>::=
checkudata(L,1);
+	if (!pGroundBlockLoader) return 0;
+	=

+	// don't use ++i or something here, the compiler might mix the order
+	Ogre::Vector3 	vBlockPos(luaL_checknumber(L,4),luaL_checknumber(L,5),luaL=
_checknumber(L,6));
+	Ogre::Vector3	vRayPos(luaL_checknumber(L,7),luaL_checknumber(L,8),luaL_ch=
ecknumber(L,9));
+	Ogre::Vector3	vRayDir(luaL_checknumber(L,10),luaL_checknumber(L,11),luaL_=
checknumber(L,12));
+	=

+	// feedback via lua callback TerrainRayIntersect_Hit()
+	TerrainRayIntersect(pGroundBlockLoader,luaL_checkint(L,2),luaL_checkint(L=
,3),vRayPos-vBlockPos,vRayDir);
+	return 0;
+}
+
+/// for lua : dist =3D SphereRayPick(x,y,z,rad,rx,ry,rz,rvx,rvy,rvz)  -- m=
ainly for mousepicking, dist=3Dnil if not hit
+static int l_SphereRayPick (lua_State *L) { PROFILE
+	// don't use ++i or something here, the compiler might mix the order
+	Ogre::Vector3 	vSpherePos(	luaL_checknumber(L,1),luaL_checknumber(L,2),lu=
aL_checknumber(L,3));
+	float			fSphereRad =3D luaL_checknumber(L,4);
+	Ogre::Vector3	vRayPos(	luaL_checknumber(L,5),luaL_checknumber(L,6),luaL_c=
hecknumber(L,7));
+	Ogre::Vector3	vRayDir(	luaL_checknumber(L,8),luaL_checknumber(L,9),luaL_c=
hecknumber(L,10));
+	=

+	std::pair<bool, Real> hit =3D Ogre::Ray(vRayPos,vRayDir).intersects(Ogre:=
:Sphere(vSpherePos,fSphereRad));
+	if (!hit.first) return 0;
+	lua_pushnumber(L,hit.second);
+	return 1;
+}
+
+
+static int l_UnloadMeshName (lua_State *L) { PROFILE
+	Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
+	return 0;
+}
+
+static int l_CountMeshTriangles (lua_State *L) { PROFILE
+	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
+					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
+	int res =3D 0;
+	for (int i=3D0;i<pMesh->getNumSubMeshes();++i) {
+		Ogre::SubMesh *pSub =3D pMesh->getSubMesh(i);
+		if (pSub && pSub->indexData) res +=3D pSub->indexData->indexCount / 3;
+	}
+	lua_pushnumber(L,res);
+	return 1;
+}
+
+static int l_getUOPath(lua_State *L) { PROFILE
+	std::string res =3D getUOPath();
+	if (res.length() =3D=3D 0) return 0;
+	lua_pushstring(L,res.c_str());
+	return 1;
+}
+
+/// attempts to correct case-sensitivity for filepaths
+static int l_PathSearch (lua_State *L) { PROFILE
+	std::string res =3D rob_pathsearch(luaL_checkstring(L,1));
+	if (res.length() =3D=3D 0) return 0;
+	lua_pushstring(L,res.c_str());
+	return 1;
+}
+
+static int l_file_exists (lua_State *L) { PROFILE
+	std::ifstream	myFileStream(luaL_checkstring(L,1));
+	lua_pushboolean(L,myFileStream?true:false);
+	return 1;
+}
+
+static int l_file_size (lua_State *L) { PROFILE
+	std::ifstream	myFileStream(luaL_checkstring(L,1));
+	int iFileSize =3D 0;
+	if (myFileStream) {
+		myFileStream.seekg(0, std::ios::end);
+		iFileSize =3D myFileStream.tellg();
+	}
+	lua_pushnumber(L,iFileSize);
+	return 1;
+}
+
+
+// for testing bitwise ops
+static int l_GetRandomHexString 	(lua_State *L) { PROFILE lua_pushstring( =
L, strprintf("0x%08x",rand()).c_str()); return 1; }
+
+/// converts "0x1234" to a number
+static int l_Hex2Num 	(lua_State *L) { PROFILE =

+	std::string hexcode =3D luaL_checkstring(L,1);
+	uint32 res =3D 0;
+	sscanf(hexcode.c_str(),"0x%x",&res);
+	lua_pushnumber(L, res); =

+	return 1; =

+}
+
+// bitwise operations, used for networking, packet manipulation etc
+static int l_BitwiseAND 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);	=

+	uint32 c =3D a & b;
+	lua_pushnumber( L, c); =

+	return 1;
+}
+static int l_BitwiseOR 		(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);	=

+	uint32 c =3D a | b;
+	lua_pushnumber( L, c); =

+	return 1;
+}
+
+
+static int l_BitwiseXOR 	(lua_State *L) { PROFILE
+	// keep this spread out like this to avoid strange, 32 bi
+	double g =3D luaL_checknumber(L,1);
+	double h =3D luaL_checknumber(L,2);
+	uint32 a =3D uint32(g);
+	uint32 b =3D uint32(h);	=

+	uint32 c =3D a ^ b;
+	lua_pushnumber( L, c); =

+	return 1;
+}
+
+// bitwise operations, used for networking, packet manipulation etc =

+static int l_BitwiseSHL 	(lua_State *L) { PROFILE =

+	// keep this spread out like this to avoid strange, 32 bi =

+	double g =3D luaL_checknumber(L,1); =

+	double h =3D luaL_checknumber(L,2); =

+	uint32 a =3D uint32(g); =

+	uint32 b =3D uint32(h);	 =

+	uint32 c =3D a << b; =

+	lua_pushnumber( L, c);  =

+	return 1; =

+} =

+// bitwise operations, used for networking, packet manipulation etc =

+static int l_BitwiseSHR 	(lua_State *L) { PROFILE =

+	// keep this spread out like this to avoid strange, 32 bi =

+	double g =3D luaL_checknumber(L,1); =

+	double h =3D luaL_checknumber(L,2); =

+	uint32 a =3D uint32(g); =

+	uint32 b =3D uint32(h);	 =

+	uint32 c =3D a >> b; =

+	lua_pushnumber( L, c);  =

+	return 1; =

+}
+
+
+static int l_TestBit 		(lua_State *L) { PROFILE lua_pushboolean(L,(uint32(=
luaL_checknumber(L,1)) & (uint32(1) << luaL_checkint(L,2))) !=3D 0); return=
 1; }
+static int l_SetBit 		(lua_State *L) { PROFILE lua_pushnumber( L,(uint32(l=
uaL_checknumber(L,1)) | (uint32(1) << luaL_checkint(L,2)))); return 1; }
+static int l_ClearBit 		(lua_State *L) { PROFILE =

+	uint32 input =3D uint32(luaL_checknumber(L,1));
+	uint32 mask =3D 1L << uint32(luaL_checknumber(L,2));
+	lua_pushnumber(L,(input & mask)?(input ^ mask):(input));  // XOR =3D ^ =
=3D toggle bit... toggle only if set (&) to clear
+	return 1; =

+}
+
+
+static int l_Exit		 		(lua_State *L) { PROFILE =

+	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0); =

+	return 0; =

+}
+
+static int l_Crash		 		(lua_State *L) { PROFILE =

+	DisplayErrorMessage("CRASH triggered from script, see console for info (s=
tart with commandline option -c)");
+	exit(88); =

+	return 0; =

+}
+
+/// triggers a segfault, for testing our segfault handlers lua stacktrace
+static int l_CrashSegFault		 		(lua_State *L) { PROFILE =

+	DisplayErrorMessage("testing segfault handler...");
+	*((char*)0) =3D 0; // trigger segfault
+	return 0; =

+}
+
+
+static int l_DisplayNotice	(lua_State *L) { PROFILE =

+	DisplayNotice(luaL_checkstring(L,1));
+	return 0;
+}
+
+
+static int l_FatalErrorMessage	(lua_State *L) { PROFILE =

+	DisplayErrorMessage(luaL_checkstring(L,1));
+	exit(77);
+	return 0;
+}
+
+
+/// for lua :   void  ExportMesh  (meshname,filename)
+static int l_ExportMesh		(lua_State *L) { PROFILE =

+	Ogre::MeshPtr pMesh =3D Ogre::MeshManager::getSingleton().load(luaL_check=
string(L,1),
+					// autodetect group location
+					//Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME );
+					Ogre::ResourceGroupManager::AUTODETECT_RESOURCE_GROUP_NAME );
+	Ogre::MeshSerializer myExporter;
+	//Ogre::Mesh* pMesh =3D pEntity->getMesh().get();
+	myExporter.exportMesh(pMesh.get(),luaL_checkstring(L,2)); =

+	return 0;
+}
+
+/// for lua :   x,y,z,vx,vy,vz  GetMouseRay  ()
+static int l_GetMouseRay		(lua_State *L) { PROFILE =

+	cOgreWrapper& ogrewrapper =3D cOgreWrapper::GetSingleton();
+	Ogre::Ray myray(	ogrewrapper.mCamera->getCameraToViewportRay(
+				Ogre::Real(cInput::iMouse[0]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualWidth()),
+				Ogre::Real(cInput::iMouse[1]) / Ogre::Real(ogrewrapper.mViewport->getA=
ctualHeight()) ));
+	lua_pushnumber(L,myray.getOrigin().x);
+	lua_pushnumber(L,myray.getOrigin().y);
+	lua_pushnumber(L,myray.getOrigin().z);
+	lua_pushnumber(L,myray.getDirection().x);
+	lua_pushnumber(L,myray.getDirection().y);
+	lua_pushnumber(L,myray.getDirection().z);
+	return 6;
+}
+
+/// for lua :   z  GetMaxZ  ()
+static int 		l_GetMaxZ		(lua_State *L) { PROFILE =

+	lua_pushnumber(L,Ogre::Root::getSingleton().getRenderSystem()->getMaximum=
DepthInputValue());
+	return 1;
+}
+
+
+/// for lua :   bIsInFront,px,py  ProjectPos  (x,y,z)
+static int l_ProjectPos		(lua_State *L) { PROFILE =

+	bool 		bIsInFront;
+	Ogre::Real	fX,fY;
+	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectPos(
+		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY);
+	lua_pushboolean(L,bIsInFront);
+	lua_pushnumber(L,fX);
+	lua_pushnumber(L,fY);
+	return 3;
+}
+
+/// for lua :   bIsInFront,px,py,cx,cy  ProjectSizeAndPos  (x,y,z,r)
+static int l_ProjectSizeAndPos		(lua_State *L) { PROFILE =

+	bool 		bIsInFront;
+	Ogre::Real	fX,fY,fCX,fCY;
+	bIsInFront =3D cOgreWrapper::GetSingleton().ProjectSizeAndPos(
+		Ogre::Vector3(luaL_checknumber(L,0),luaL_checknumber(L,1),luaL_checknumb=
er(L,2)),fX,fY,luaL_checknumber(L,3),fCX,fCY);
+	lua_pushboolean(L,bIsInFront);
+	lua_pushnumber(L,fX);
+	lua_pushnumber(L,fY);
+	lua_pushnumber(L,fCX);
+	lua_pushnumber(L,fCY);
+	return 5;
+}
+
+
+
+/// for lua :   void  CreateSceneManager  (sSceneManagerName)
+static int l_CreateSceneManager		(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
+	cOgreWrapper::GetSingleton().mRoot->createSceneManager(Ogre::ST_GENERIC,l=
uaL_checkstring(L,1));
+	return 0;
+}
+
+/// for lua :   table[id=3Dtexname...]  OgreMeshTextures  (meshfile)
+static int l_OgreMeshTextures	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
+	Ogre::MeshSerializer* meshSerializer =3D new Ogre::MeshSerializer();
+	const char *szMeshName =3D luaL_checkstring(L,1);
+	=

+	lua_newtable(L);
+		=

+	//printf("open file: %s\n",szMeshName);
+	// model file
+	std::ifstream ifs;
+	ifs.open(szMeshName, std::ios_base::in | std::ios_base::binary);
+	Ogre::DataStreamPtr stream(new Ogre::FileStreamDataStream(&ifs, false));
+
+	if(ifs.is_open()){
+		//printf("create tmp mesh\n");
+		// create tmp mesh import resource
+		Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().create("l_OgreM=
eshTextureMissing_conversion", =

+			Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+
+		//printf("import\n");
+		// import
+		meshSerializer->importMesh(stream, mesh.getPointer());
+		=

+		if(!mesh.isNull()){
+			// iterator over submeshes
+			Ogre::Mesh::SubMeshIterator it =3D mesh->getSubMeshIterator();
+			int i =3D 1;
+			while(it.hasMoreElements()){
+				Ogre::SubMesh *submesh =3D it.getNext();
+				std::string tex =3D submesh->getMaterialName();
+				//printf("material found: %s\n",tex.c_str());
+				lua_pushstring(L,tex.c_str()); lua_rawseti(L,-2,i);
+				++i;
+			}
+		}
+		=

+		// remove all stuff
+		Ogre::MeshManager::getSingleton().remove("l_OgreMeshTextureMissing_conve=
rsion");
+		=

+		ifs.close();
+	} else {
+		printf("ERROR can't open file: %s\n",szMeshName);
+	}
+
+	delete meshSerializer;
+		=

+	return 1;
+}
+
+
+/// for lua :   void OgreShadowTechnique  (string techique)
+static int l_OgreShadowTechnique	(lua_State *L) { PROFILE  // TODO : move =
to seperate file ?
+	const char *tech =3D luaL_checkstring(L,1);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	=

+	if(p){
+		if(strcmp(tech,"stencil_modulative") =3D=3D 0)p->setShadowTechnique(Ogre=
::SHADOWTYPE_STENCIL_MODULATIVE);
+		else if(strcmp(tech,"stencil_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_STENCIL_ADDITIVE);
+		else if(strcmp(tech,"texture_modulative") =3D=3D 0)p->setShadowTechnique=
(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE);
+		else if(strcmp(tech,"texture_additive") =3D=3D 0)p->setShadowTechnique(O=
gre::SHADOWTYPE_TEXTURE_ADDITIVE);
+		else if(strcmp(tech,"texture_additive_integrated") =3D=3D 0)p->setShadow=
Technique(Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED);
+		else if(strcmp(tech,"texture_modulative_integrated") =3D=3D 0)p->setShad=
owTechnique(Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED);
+		else p->setShadowTechnique(Ogre::SHADOWTYPE_NONE);
+	}
+		=

+	return 0;
+}
+
+
+/// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
+static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
+	float r =3D luaL_checknumber(L,1);
+	float g =3D luaL_checknumber(L,2);
+	float b =3D luaL_checknumber(L,3);
+	Ogre::SceneManager *p =3D cOgreWrapper::GetSingleton().mSceneMgr;
+	=

+	if(p){
+		p->setAmbientLight( ColourValue( r, g, b ) );
+	}
+	=

+	return 0;
+}
+
+/// for lua :   string  GetUniqueName  ()
+static int l_GetUniqueName	(lua_State *L) { PROFILE  // TODO : move to sep=
erate file ?
+	std::string n =3D cOgreWrapper::GetSingleton().GetUniqueName();
+	lua_pushstring(L,n.c_str());
+	return 1;
+}
+
+
+/// for lua :   number OgreLastFPS  ()
+static int l_OgreLastFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfLastFPS);return 1; }
+/// for lua :   number OgreAvgFPS  ()
+static int l_OgreAvgFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWra=
pper::GetSingleton().mfAvgFPS);return 1; }
+/// for lua :   number OgreBestFPS  ()
+static int l_OgreBestFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreWr=
apper::GetSingleton().mfBestFPS);return 1; }
+/// for lua :   number OgreWorstFPS  ()
+static int l_OgreWorstFPS	(lua_State *L) { PROFILE lua_pushnumber(L,cOgreW=
rapper::GetSingleton().mfWorstFPS);return 1; }
+/// for lua :   number OgreBestFrameTime  ()
+static int l_OgreBestFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miBestFrameTime);return 1; }
+/// for lua :   number OgreWorstFrameTime  ()
+static int l_OgreWorstFrameTime	(lua_State *L) { PROFILE lua_pushnumber(L,=
cOgreWrapper::GetSingleton().miWorstFrameTime);return 1; }
+/// for lua :   number OgreTriangleCount  ()
+static int l_OgreTriangleCount	(lua_State *L) { PROFILE lua_pushnumber(L,c=
OgreWrapper::GetSingleton().miTriangleCount);return 1; }
+/// for lua :   number OgreBatchCount  ()
+static int l_OgreBatchCount	(lua_State *L) { PROFILE lua_pushnumber(L,cOgr=
eWrapper::GetSingleton().miBatchCount);return 1; }
+
+/*
+static int l_Client_SetMouseSensitivity (lua_State *L) { PROFILE
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client) client->mfMouseSensitivity =3D luaL_checknumber(L,1);
+	return 0;
+}
+
+
+
+static int l_Client_SetInvertMouse (lua_State *L) { PROFILE
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client) client->mbInvertMouse =3D luaL_checkint(L,1) !=3D 0;
+	return 0;
+}
+
+
+static int l_Client_SetCamera (lua_State *L) { PROFILE
+	int i=3D0;
+	Real x =3D luaL_checknumber(L,++i);
+	Real y =3D luaL_checknumber(L,++i);
+	Real z =3D luaL_checknumber(L,++i);
+	Real qw =3D luaL_checknumber(L,++i);
+	Real qx =3D luaL_checknumber(L,++i);
+	Real qy =3D luaL_checknumber(L,++i);
+	Real qz =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->SetCamera(Vector3(x,y,z),Quaternion(qw,qx,qy,qz));
+	else	printf("l_Client_SetCamera called from lua on non-client");
+	return 0;
+}
+
+static int l_Client_ForceCamRot (lua_State *L) { PROFILE
+	int i=3D0;
+	Real qw =3D luaL_checknumber(L,++i);
+	Real qx =3D luaL_checknumber(L,++i);
+	Real qy =3D luaL_checknumber(L,++i);
+	Real qz =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->ForceCamRot(Quaternion(qw,qx,qy,qz));
+	else	printf("l_Client_ForceCamRot called from lua on non-client");
+	return 0;
+}
+
+static int l_Client_CameraLookAt (lua_State *L) { PROFILE
+	int i=3D0;
+	Real x =3D luaL_checknumber(L,++i);
+	Real y =3D luaL_checknumber(L,++i);
+	Real z =3D luaL_checknumber(L,++i);
+	cClient* client =3D cGame::GetSingleton().mpClient;
+	if (client)
+			client->CameraLookAt(Vector3(x,y,z));
+	else	printf("l_Client_CameraLookAt called from lua on non-client");
+	return 0;
+}
+*/
+
+
+// ***** ***** utilities and error handling ***** *****
+
+
+/// also adds a traceback to the error message in case of an error
+/// nret=3D-1 for unlimited
+/// don't use directly, used by LuaCall
+int 	PCallWithErrFuncWrapper (lua_State *L,int narg, int nret) { PROFILE
+	int status;
+	int base =3D lua_gettop(L) - narg;  // function index =

+	lua_pushliteral(L, "_TRACEBACK");
+	lua_rawget(L, LUA_GLOBALSINDEX); // get traceback function =

+	lua_insert(L, base);  // put it under chunk and args =

+	// signal(SIGINT, laction); // copyed from example, no idea what this is =
good for =3D(
+	status =3D lua_pcall(L, narg, (nret=3D=3D-1) ? LUA_MULTRET : nret, base);
+	=

+	//printf("pcall end, cleaning up....\n");
+	=

+	// signal(SIGINT, SIG_DFL); // copyed from example, no idea what this is =
good for =3D(
+	lua_remove(L, base);  // remove traceback function // TODO : this might c=
rash if error handler closed the lua state =

+	=

+	//printf("pcall end\n");
+	=

+	return status;
+}
+
+
+void MyCrash				(const char* szMessage);
+
+void LuaErrorHandler (lua_State *L, const char *fmt, ...) { PROFILE
+	printf("LuaErrorHandler start\n");
+	=

+	va_list argp;
+	va_start(argp, fmt);
+	gRobStringBuffer[0] =3D 0;
+	vsnprintf(gRobStringBuffer,kRobStringBufferSize-1,fmt, argp);
+	std::string s(gRobStringBuffer);
+	va_end(argp);
+	=

+	std::string mystr("LuaError\n");
+	mystr +=3D s;
+	=

+	printf("\nLuaErrorHandler end\n");
+	=

+	//lua_close(L);
+	MyCrash(mystr.c_str());
+	// todo : attempt recovery in case of protected function call ?
+	// todo : deinit ogre to free mouse here
+}
+
+
+struct luaL_reg make_luaL_reg(const char *name,lua_CFunction func){
+  struct luaL_reg s;
+  s.name =3D name;
+  s.func =3D func;
+  return s;
+}
+
+void	cScripting::Listener_Notify (cListenable* pTarget,const size_t eventc=
ode,const size_t param,const size_t userdata) { PROFILE
+	switch (userdata) {
+		case kListenerBinding_Keys:
+			switch (eventcode) {
+				case cInput::kListenerEvent_KeyPress:
+					LuaCall("KeyDown","ii",(int)(param & 255),(int)((param >> 8) & 255));
+					//printf("keydown(%d)\n",param);
+				break;
+				case cInput::kListenerEvent_KeyRelease:
+					LuaCall("KeyUp","i",(int)param);
+					//printf("keyup(%d)\n",param);
+				break;
+			}
+			//printf("event=3D%d,key=3D%d\n",eventcode,param);
+		break;
+		// TODO : maybe timer ?
+	}
+}
+
+int		cScripting::GetGlobal	(const char* name) { PROFILE
+	lua_getglobal(L,name);
+	if (!lua_isnumber(L,-1)) { lua_pop(L,1); return 0; }
+	return (int)lua_tonumber(L,-1);
+}
+
+void	cScripting::SetGlobal	(const char* name,int value) { PROFILE
+	lua_pushnumber(L,value);
+	lua_setglobal(L,name);
+}
+
+/// this is the call_va function from the Book "Programming in Lua" with a=
ltered type notation :
+/// float : f
+/// int : i
+/// const char* : s
+/// returns true on successful call
+/// warning ! maybe this cannot return more than one string ! todo : check=
 doc of lua_tostring
+bool cScripting::LuaCall (const char *func, const char *sig, ...) { PROFILE
+	#ifdef PROFILE_LUACALLCOUNT
+	++gPROFILE_LUACALLCOUNT[func];
+	#endif
+
+	bool result =3D true;
+	va_list vl;
+	int narg, nres;  /* number of arguments and results */
+
+	va_start(vl, sig);
+	lua_getglobal(L, func);  /* get function */
+
+	/* push arguments */
+	narg =3D 0;
+	while (*sig) {  /* push arguments */
+		bool endwhile =3D false;
+		switch (*sig++) {
+		  case 'f':  /* float/double argument */
+			lua_pushnumber(L, va_arg(vl, double));
+			break;
+
+		  case 'i':  /* int argument (ansi printf : also use %d) */
+			lua_pushnumber(L, va_arg(vl, int));
+			break;
+
+		  case 's':  /* string argument */
+			lua_pushstring(L, va_arg(vl, char *));
+			break;
+
+		  case '>':
+			endwhile =3D true;
+			break;
+		  default:
+			LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
+			lua_pushnil(L);
+			break;
+		}
+		if (endwhile) break;
+		narg++;
+		luaL_checkstack(L, 1, "too many arguments");
+	}
+
+	/* do the call */
+	nres =3D strlen(sig);  /* number of expected results */
+	// todo : push lua error handler function here ?!?
+	if (PCallWithErrFuncWrapper(L,narg, nres) !=3D 0) {
+	//if (lua_pcall(L, narg, nres, 0) !=3D 0)  { // old
+		/* do the call */
+		LuaErrorHandler(L, "error running function `%s': %s",func, lua_tostring(=
L, -1));
+		=

+		/*
+		doku for lua_pcall last argument (errorfunc)
+		if 0 ... else that argument should be the index in the stack where the e=
rror handler function is located. Notice that, in such cases, the handler m=
ust be pushed in the stack before the function to be called and its argumen=
ts.
+		*/
+		result =3D false;
+	} else {
+		/* retrieve results */
+		int popamount =3D nres;
+		nres =3D -nres;  /* stack index of first result */
+		while (*sig) {  /* get results */
+			switch (*sig++) {
+
+			  case 'f':  /* float / double result */
+				if (!lua_isnumber(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl, double *) =3D 0;
+				} else {
+					*va_arg(vl, double *) =3D lua_tonumber(L, nres);
+				}
+				break;
+
+			  case 'i':  /* int result */
+				if (!lua_isnumber(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl, int *) =3D 0;
+				} else {
+					*va_arg(vl, int *) =3D (int)lua_tonumber(L, nres);
+				}
+				break;
+
+			  case 's':  /* string result */
+				if (!lua_isstring(L, nres)) {
+					LuaErrorHandler(L, "wrong result type");
+					*va_arg(vl,std::string*) =3D "";
+				} else {
+					*va_arg(vl,std::string*) =3D lua_tostring(L, nres); // return as std:=
:string, as pure lua pointer becomes invalid with pop
+				}
+				break;
+
+			  default:
+				LuaErrorHandler(L, "invalid option (%c)", *(sig - 1));
+				break;
+			}
+			nres++;
+		}
+		// pop stack    =

+		lua_pop(L, popamount);
+	}
+	va_end(vl);
+	return result;
+}
+
+
+cScripting::cScripting	() : L(0) {}
+
+void	cScripting::Init () { PROFILE
+	if (sizeof(lua_Number) <=3D 4) {
+		printf("sizeof(lua_Number) =3D %d, but must be greater than 4 (32 bit) f=
or bitwise ops\n",sizeof(lua_Number));
+		DisplayErrorMessage("ERROR : lua-precision wrong");
+		exit(43);
+	}
+	=

+	L =3D lua_open();
+	assert(L);
+	luaopen_base(L);
+	luaopen_table(L);
+	luaopen_io(L);
+	luaopen_string(L);
+	luaopen_math(L);
+	luaopen_debug(L);
+	=

+	lua_register(L,"GetNamedKey",		l_GetNamedKey);
+	lua_register(L,"GetKeyName",		l_GetKeyName);
+	lua_register(L,"PollInput",			l_PollInput);
+	lua_register(L,"Terminate",			l_Terminate);
+	lua_register(L,"InitOgre",			l_InitOgre);
+	lua_register(L,"GetPointerSize",	l_GetPointerSize);
+	lua_register(L,"Client_IsAlive",	l_Client_IsAlive);
+	//lua_register(L,"ServerSendMsgToClient",			l_ServerSendMsgToClient);
+	//lua_register(L,"ClientSendMsgToServer",			l_ClientSendMsgToServer);
+	//lua_register(L,"SoundPlayAmbient",				l_SoundPlayAmbient);
+	//lua_register(L,"Server_SetMaxResyncsPerSecond",	l_Server_SetMaxResyncsP=
erSecond);
+	//lua_register(L,"Server_GetMaxResyncsPerSecond",	l_Server_GetMaxResyncsP=
erSecond);
+	lua_register(L,"Client_ShowOgreConfig",			l_Client_ShowOgreConfig);
+	lua_register(L,"Client_TakeScreenshot",			l_Client_TakeScreenshot);
+	lua_register(L,"Client_TakeGridScreenshot",			l_Client_TakeGridScreenshot=
);
+	//lua_register(L,"Client_SetCamera",				l_Client_SetCamera);
+	//lua_register(L,"Client_ForceCamRot",			l_Client_ForceCamRot);
+	//lua_register(L,"Client_CameraLookAt",			l_Client_CameraLookAt);
+	//lua_register(L,"Client_SetPlayerShip",			l_Client_SetPlayerShip);
+	//lua_register(L,"Client_SetMaxFPS",				l_Client_SetMaxFPS);
+	//lua_register(L,"Client_GetMaxFPS",				l_Client_GetMaxFPS);
+	lua_register(L,"Client_GetCurFPS",				l_Client_GetCurFPS);
+	lua_register(L,"Client_GetFrameNum",			l_Client_GetFrameNum);
+	//lua_register(L,"Client_SetMouseSensitivity",	l_Client_SetMouseSensitivi=
ty);
+	//lua_register(L,"Client_SetInvertMouse",			l_Client_SetInvertMouse);
+	//lua_register(L,"Client_ShowMessage",			l_Client_ShowMessage);
+	lua_register(L,"Client_GetTicks",				l_Client_GetTicks);
+	lua_register(L,"Client_SetSkybox",				l_Client_SetSkybox);
+	lua_register(L,"Client_SetFog",					l_Client_SetFog);
+	lua_register(L,"Client_RenderOneFrame",			l_Client_RenderOneFrame);
+	lua_register(L,"Client_Sleep",					l_Client_Sleep);
+	lua_register(L,"Client_USleep",					l_Client_USleep);
+	lua_register(L,"Client_SetAmbientLight",		l_Client_SetAmbientLight);
+	lua_register(L,"Client_ClearLights",			l_Client_ClearLights);
+	lua_register(L,"Client_AddPointLight",			l_Client_AddPointLight);
+	lua_register(L,"Client_AddDirectionalLight",	l_Client_AddDirectionalLight=
);
+	lua_register(L,"Client_GetPhysStepTime",		l_Client_GetPhysStepTime);
+	lua_register(L,"BuildTerrainEntity_Simple",		l_BuildTerrainEntity_Simple);
+	lua_register(L,"BuildTerrainEntity_Shaded",		l_BuildTerrainEntity_Shaded);
+	lua_register(L,"TerrainRayPick",				l_TerrainRayPick);
+	lua_register(L,"SphereRayPick",					l_SphereRayPick);
+	lua_register(L,"UnloadMeshName",				l_UnloadMeshName);
+	lua_register(L,"CountMeshTriangles",			l_CountMeshTriangles);
+	lua_register(L,"GetUOPath",						l_getUOPath);
+	lua_register(L,"PathSearch",					l_PathSearch);
+	lua_register(L,"file_exists",					l_file_exists);
+	lua_register(L,"file_size",						l_file_size);
+	lua_register(L,"Hex2Num",						l_Hex2Num);
+	lua_register(L,"GetRandomHexString",			l_GetRandomHexString);
+	lua_register(L,"BitwiseAND",					l_BitwiseAND);
+	lua_register(L,"BitwiseOR",						l_BitwiseOR);
+	lua_register(L,"BitwiseXOR",					l_BitwiseXOR);
+	lua_register(L,"BitwiseSHL",					l_BitwiseSHL);
+	lua_register(L,"BitwiseSHR",					l_BitwiseSHR);
+	lua_register(L,"TestBit",						l_TestBit);
+	lua_register(L,"SetBit",						l_SetBit);
+	lua_register(L,"ClearBit",						l_ClearBit);
+	lua_register(L,"Exit",							l_Exit);
+	lua_register(L,"Crash",							l_Crash);
+	lua_register(L,"CrashSegFault",					l_CrashSegFault);
+	lua_register(L,"DisplayNotice",					l_DisplayNotice);
+	lua_register(L,"FatalErrorMessage",				l_FatalErrorMessage);
+	lua_register(L,"ExportMesh",					l_ExportMesh);
+	lua_register(L,"CreateSceneManager",			l_CreateSceneManager);
+	lua_register(L,"GetUniqueName",					l_GetUniqueName);
+	lua_register(L,"GetMouseRay",					l_GetMouseRay);
+	lua_register(L,"GetMaxZ",						l_GetMaxZ);
+	lua_register(L,"ProjectPos",					l_ProjectPos);
+	lua_register(L,"ProjectSizeAndPos",				l_ProjectSizeAndPos);
+	lua_register(L,"_TRACEBACK",					l_TRACEBACK);
+	lua_register(L,"ProfileDumpCallCount",			l_ProfileDumpCallCount);
+	lua_register(L,"OgreMemoryUsage",				l_OgreMemoryUsage);
+	lua_register(L,"OgreMeshAvailable",				l_OgreMeshAvailable);
+	lua_register(L,"OgreMaterialNameKnown",			l_OgreMaterialNameKnown);
+	lua_register(L,"OgreMaterialAvailable",			l_OgreMaterialAvailable);
+	lua_register(L,"OgreTextureAvailable",			l_OgreTextureAvailable);
+	lua_register(L,"OgreMeshTextures",				l_OgreMeshTextures);
+	// some statistic stuff
+	lua_register(L,"OgreLastFPS",				l_OgreLastFPS);
+	lua_register(L,"OgreAvgFPS",				l_OgreAvgFPS);
+	lua_register(L,"OgreBestFPS",				l_OgreBestFPS);
+	lua_register(L,"OgreWorstFPS",				l_OgreWorstFPS);
+	lua_register(L,"OgreBestFrameTime",			l_OgreBestFrameTime);
+	lua_register(L,"OgreWorstFrameTime",			l_OgreWorstFrameTime);
+	lua_register(L,"OgreTriangleCount",			l_OgreTriangleCount);
+	lua_register(L,"OgreBatchCount",			l_OgreBatchCount);
+
+	lua_register(L,"CreateGrannyHuedTexture",		l_CreateGrannyHuedTexture);
+	lua_register(L,"HueMesh",						l_HueMesh);
+	lua_register(L,"OgreAddCompositor",						l_OgreAddCompositor);
+	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
+	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
+	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
+	// shadow stuff
+	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
+	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
+
+	// file paths for init
+	const char* szLuaUDataPath =3D "../data/lua/udata.lua";
+	const char* szLuaMainPath =3D "../data/lua/main.lua";
+
+
+	// check if lua files exist (otherwise working directory probably wrong)
+	std::ifstream myFileStream(szLuaMainPath);
+	if (!myFileStream) {
+		MyCrash(strprintf("%s cannot be found, probably the working directory is=
 wrong",szLuaMainPath).c_str());
+		exit(34);
+	}
+	myFileStream.close();
+	=

+	// load utils
+	int res;
+	res	=3D lua_dofile(L,szLuaUDataPath); // loads function used for register=
ing udatatypes
+	if (res) { =

+		MyCrash("error in udata script-initialisation\n"); =

+		exit(44); =

+	}
+
+	RegisterLuaXML(L);
+	LuaRegisterFIFO(L);
+	LuaRegisterNet(L);
+	cGfx3D::LuaRegister(L);
+	cGfx2D::LuaRegister(L);
+	cDialog::LuaRegister(L);
+	cWidget::LuaRegister(L);
+	cBitMask::LuaRegister(L);
+	cCamera::LuaRegister(L);
+	cViewport::LuaRegister(L);
+	cRenderTexture::LuaRegister(L);
+	cSoundSource::LuaRegister(L);
+	cSpriteManager::LuaRegister(L);
+	cManualArtMaterialLoader::LuaRegister(L);
+	cSprite::LuaRegister(L);
+	Material_LuaRegister(L);
+	Granny_LuaRegister(L);
+	LuaRegisterData(L);
+	LuaRegisterBuilder(L);
+	LuaRegisterRadar(L);
+
+	cInput::GetSingleton().RegisterListener(this,kListenerBinding_Keys);
+
+	res =3D lua_dofile(L,szLuaMainPath);
+	if (res) {
+		MyCrash("error in main script-initialisation\n"); =

+		exit(-1); =

+	}
+}
+
+cScripting::~cScripting	() { PROFILE
+	cInput::GetSingleton().UnRegisterListener(this,kListenerBinding_Keys);
+
+	assert(L);
+	lua_setgcthreshold(L, 0);  // collected garbage
+	lua_close(L);
+	L =3D 0;
+}

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Mon Jun 11 00:35:06 2007
@@ -38,7 +38,7 @@
 			<Tool
 				Name=3D"VCCLCompilerTool"
 				Optimization=3D"0"
-				AdditionalIncludeDirectories=3D"&quot;$(INCLUDE)&quot;;&quot;$(OGRE_HO=
ME)\include\&quot;;&quot;$(OGRE_HOME)\include\OIS&quot;;..\include;..\inclu=
de\boost;..\include\fmod;..\include\lua;..\include\sdl;..\include\zlib"
+				AdditionalIncludeDirectories=3D"&quot;C:\Programme\Microsoft Platform =
SDK\Include\&quot;;&quot;$(INCLUDE)&quot;;&quot;$(OGRE_HOME)\include\&quot;=
;&quot;$(OGRE_HOME)\include\OIS&quot;;..\include;..\include\boost;..\includ=
e\fmodx;..\include\lua;..\include\sdl;..\include\zlib"
 				PreprocessorDefinitions=3D"WIN32"
 				RuntimeLibrary=3D"1"
 				RuntimeTypeInfo=3D"false"
@@ -57,11 +57,11 @@
 			/>
 			<Tool
 				Name=3D"VCLinkerTool"
-				AdditionalDependencies=3D"AdvAPI32.Lib ws2_32.lib OgreMain_d.lib OIS_d=
.lib zlibd.lib LibLua.lib LibLuaLib.lib SDL.lib fmodvc.lib"
+				AdditionalDependencies=3D"AdvAPI32.Lib User32.Lib zlibd.lib ws2_32.lib=
 LibLua.lib LibLuaLib.lib OgreMain_d.lib SDL.lib OIS_d.lib fmodex_vc.lib"
 				OutputFile=3D"$(OutDir)\..\..\bin\$(ProjectName)_d.exe"
-				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;$(OGRE_HOME)\=
lib\&quot;;..\libs\fmod;..\libs\lua;..\libs\sdl;..\libs\zlib"
+				AdditionalLibraryDirectories=3D"&quot;C:\Programme\Microsoft Platform =
SDK\Lib\&quot;;&quot;$(LIB)&quot;;&quot;$(OGRE_HOME)\lib\&quot;;..\libs\fmo=
dx;..\libs\lua;..\libs\sdl;..\libs\zlib"
 				IgnoreAllDefaultLibraries=3D"false"
-				IgnoreDefaultLibraryNames=3D"LIBCMTD.lib"
+				IgnoreDefaultLibraryNames=3D"LIBCMT.lib;LIBCMTD.lib"
 				GenerateDebugInformation=3D"true"
 				AssemblyDebug=3D"0"
 				GenerateMapFile=3D"false"
@@ -145,7 +145,7 @@
 			/>
 			<Tool
 				Name=3D"VCLinkerTool"
-				AdditionalDependencies=3D"zlib.lib LIBCMT.lib LIBCPMT.LIB User32.Lib A=
dvAPI32.Lib ws2_32.lib LibLua+CRT.lib LibLuaLib+CRT.lib OgreMain.lib SDL.li=
b OIS.lib fmodex_vc.lib"
+				AdditionalDependencies=3D"LIBCMT.lib LIBCPMT.LIB AdvAPI32.Lib User32.L=
ib zlib.lib ws2_32.lib LibLua+CRT.lib LibLuaLib+CRT.lib OgreMain.lib SDL.li=
b OIS.lib fmodex_vc.lib"
 				OutputFile=3D"$(OutDir)\..\..\bin\iris2.exe"
 				AdditionalLibraryDirectories=3D"&quot;C:\Programme\Microsoft Platform =
SDK\Lib\&quot;;&quot;$(OGRE_HOME)\lib\&quot;;..\libs\fmodx;..\libs\zlib;..\=
libs\sdl;..\libs\lua"
 				GenerateManifest=3D"true"



From no-reply at zwischenwelt.org  Mon Jun 11 01:28:36 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 10 Jun 2007 23:28:36 -0000
Subject: [Iris-commit] [IRIS] r1185 - /trunk/data/lua/lib.data.lua
Message-ID: <20070610232836.EC91DB1466D@localhost.localdomain>

Author: sience
Date: Mon Jun 11 01:28:35 2007
New Revision: 1185

Log:
-hued bug found :) (when huedid was greater then gMaxHueValue=3D2999, iris =
crashes)
-temp. fixed in lua
-should be fixed in cpp hueloader too !

Modified:
    trunk/data/lua/lib.data.lua

Modified: trunk/data/lua/lib.data.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.data.lua (original)
+++ trunk/data/lua/lib.data.lua Mon Jun 11 01:28:35 2007
@@ -45,7 +45,7 @@
 -- art material loader with caching
 gArtMatCache =3D {}
 function GetArtMat (iArtID,hueid)
-	if (not(hueid)) then hueid=3D0 end
+	if (not(hueid) or (hueid > gMaxHueValue)) then hueid=3D0 end
 	local res =3D gArtMatCache[iArtID.."_"..hueid]
 	if (not res and gArtMapLoader) then
 		res =3D {}
@@ -75,7 +75,7 @@
 -- art material loader with caching
 gArtBillBoardMatCache =3D {}
 function GetArtBillBoardMat (iArtID,hueid)
-	if (not(hueid)) then hueid=3D0 end
+	if (not(hueid) or (hueid > gMaxHueValue)) then hueid=3D0 end
 	local res =3D gArtBillBoardMatCache[iArtID.."_"..hueid]
 	if (res) then return res end
 	-- bPixelExact,bInvertY,bInvertX,bHasAlpha,bEnableLighting,bEnableDepthWr=
ite,HueLoader,iHue
@@ -114,7 +114,7 @@
 -- gump material loader with caching
 gGumpMatCache =3D {}
 function GetGumpMat (iGumpID,hueid)
-	if (not(hueid)) then hueid=3D0 end
+	if (not(hueid) or (hueid > gMaxHueValue)) then hueid=3D0 end
 	local res =3D gGumpMatCache[iGumpID.."_"..hueid]
 	if (not res and gGumpLoader) then
 		res =3D gGumpLoader:CreateMaterial(iGumpID,true,gHueLoader,hueid)



From no-reply at zwischenwelt.org  Mon Jun 11 01:37:48 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 10 Jun 2007 23:37:48 -0000
Subject: [Iris-commit] [IRIS] r1186 - /trunk/data/lua/lib.uoids.lua
Message-ID: <20070610233750.2D687B1466D@localhost.localdomain>

Author: sience
Date: Mon Jun 11 01:37:47 2007
New Revision: 1186

Log:
-file with gMaxHueValue added

Modified:
    trunk/data/lua/lib.uoids.lua

Modified: trunk/data/lua/lib.uoids.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.uoids.lua (original)
+++ trunk/data/lua/lib.uoids.lua Mon Jun 11 01:37:47 2007
@@ -6,6 +6,7 @@
 gGender =3D { [0] =3D "Male", [1] =3D "Female" } =

 gRace =3D { [1] =3D "Human", [2] =3D "Elf" }
 =

+gMaxHueValue =3D 2999 -- hues.mul has only 2999 values
 =

 -- the meaning of mobile.flag
 kMobileFlag_Unknown1		=3D hex2num("0x01")



From no-reply at zwischenwelt.org  Mon Jun 11 01:38:27 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 10 Jun 2007 23:38:27 -0000
Subject: [Iris-commit] [IRIS] r1187 - /branches/stable_release/
Message-ID: <20070610233827.1AE78B1466D@localhost.localdomain>

Author: sience
Date: Mon Jun 11 01:38:26 2007
New Revision: 1187

Log:
removing stable for trunk -> stable update

Removed:
    branches/stable_release/



From no-reply at zwischenwelt.org  Mon Jun 11 01:38:27 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 10 Jun 2007 23:38:27 -0000
Subject: [Iris-commit] [IRIS] r1188 - /branches/stable_release/
Message-ID: <20070610233830.893DFB1466D@localhost.localdomain>

Author: sience
Date: Mon Jun 11 01:38:27 2007
New Revision: 1188

Log:
copying trunk to stable

Added:
    branches/stable_release/
      - copied from r1187, trunk/



From no-reply at zwischenwelt.org  Mon Jun 11 13:56:56 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 11 Jun 2007 11:56:56 -0000
Subject: [Iris-commit] [IRIS] r1189 - /trunk/configure.ac
Message-ID: <20070611115657.99241B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Mon Jun 11 13:56:52 2007
New Revision: 1189

Log:
fixed autoconfig to report error when OIS is not availble, thx to Btbn for =
this tip

Modified:
    trunk/configure.ac

Modified: trunk/configure.ac
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/configure.ac (original)
+++ trunk/configure.ac Mon Jun 11 13:56:52 2007
@@ -90,7 +90,7 @@
         if test "x$ois_found" =3D "xyes" ; then
            AC_MSG_NOTICE([*** OIS found ***])
         else
-          AC_MSG_NOTICE([
+          AC_MSG_ERROR([
 ****************************************************************
 * You do not have OIS installed.  This is required.  Get it at *
 * http://www.sourceforge.net/projects/wgois.                   *



From no-reply at zwischenwelt.org  Mon Jun 11 20:38:46 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 11 Jun 2007 18:38:46 -0000
Subject: [Iris-commit] [IRIS] r1190 - in /trunk: bin/ data/ data/lua/
Message-ID: <20070611183847.0D0FBB1466D@localhost.localdomain>

Author: sience
Date: Mon Jun 11 20:38:45 2007
New Revision: 1190

Log:
-UPDATE to OGRE 1.4.2
-skybackground added again to mainmenu
-models added to debugmenu (wrong models)
-config.lua.dist: Renderer3D.gMapUpdateInterval set to 50

Modified:
    trunk/bin/OgreMain.dll
    trunk/bin/Plugin_CgProgramManager.dll
    trunk/bin/Plugin_OctreeSceneManager.dll
    trunk/bin/Plugin_ParticleFX.dll
    trunk/bin/RenderSystem_Direct3D9.dll
    trunk/bin/RenderSystem_GL.dll
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.mainmenu.lua

Modified: trunk/bin/OgreMain.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_CgProgramManager.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_OctreeSceneManager.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_ParticleFX.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_Direct3D9.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_GL.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Mon Jun 11 20:38:45 2007
@@ -79,7 +79,7 @@
 gCurrentRenderer =3D Renderer3D	-- Renderer2D
 gbUseStaticGeometryForTerrain =3D false -- don't use it with OpenGL->crash=
! setting this to true might speed up rendering but causes lags on mapblock=
-loading
 =

-Renderer3D.gMapUpdateInterval =3D 100 -- update the map not every frame, d=
ecrease for free-flight-videos
+Renderer3D.gMapUpdateInterval =3D 50 -- update the map not every frame, de=
crease for free-flight-videos
 Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 1 -- increase for free-flight-=
videos
 =

 -- Server Emulator Configuration

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Mon Jun 11 20:38:45 2007
@@ -26,6 +26,8 @@
 end
 =

 gDebugTestMobiles =3D {
+	{artid=3D 169 , equipment=3D{}},
+	{artid=3D 791 , equipment=3D{}},
 	{artid=3D hex2num("0x123") , equipment=3D{}}, =

 	{artid=3D hex2num("0xD5") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xF1") , equipment=3D{}}, =


Modified: trunk/data/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mainmenu.lua (original)
+++ trunk/data/lua/lib.mainmenu.lua Mon Jun 11 20:38:45 2007
@@ -252,6 +252,8 @@
 	table.insert(rows,{ {type=3D"Button",text=3D"#exit",onLeftClick=3Dfunctio=
n () Terminate() end } })
 	=

 --	gMainMenuDialog =3D guimaker.MakeTableDlg(rows,10,10)
+
+	MainMenuSetBackground_Sky()
 =

 	if (not(gMainMenuDialog)) then
 		gMainMenuDialog=3Dguimaker.MakeSortedDialog()				--CreateGumpDlgFromGfm(=
datapath.."gfm/main_menu.gfm")
@@ -318,7 +320,6 @@
 	end
 end
 =

---[[
 function MainMenuSetBackground_Sky ()
 	local cam =3D GetMainCam()
 	cam:SetFOVy(gfDeg2Rad*45)
@@ -328,9 +329,10 @@
 	Client_ClearLights()
 	Client_AddDirectionalLight(1,1,-1)
 	Client_SetAmbientLight(0.4, 0.4, 0.4, 1)
-	Client_SetSkybox("cube") -- cube skybox sunset darksun =

-	=

-	SetMainMenuCam(0,(90 + 10) * gfDeg2Rad)
+	Client_SetSkybox("sunset") -- cleansky skybox sunset darksun =

+	=

+--	SetMainMenuCam(0,(90 + 10) * gfDeg2Rad)
+	SetMainMenuCam(0,gfDeg2Rad)
 end
 =

 function SetMainMenuCam (roth,rotv)
@@ -342,4 +344,3 @@
 	local w,x,y,z =3D Quaternion.Mul(w4,x4,y4,z4, w3,x3,y3,z3)
 	GetMainCam():SetRot(w,x,y,z)	=

 end
-]]--



From no-reply at zwischenwelt.org  Wed Jun 13 01:30:35 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 12 Jun 2007 23:30:35 -0000
Subject: [Iris-commit] [IRIS] r1191 - in /trunk: README data/config.lua.dist
 data/lua/lib.debugmenu.lua data/lua/lib.input.lua data/lua/lib.mainmenu.lua
 data/lua/lib.net.lua data/lua/lib.terrain.lua data/lua/main.lua
 data/lua/net.login.lua data/lua/net.securetrade.lua
Message-ID: <20070612233040.DDBEBB1466C@localhost.localdomain>

Author: sience
Date: Wed Jun 13 01:30:15 2007
New Revision: 1191

Log:
-several updates to login procedure (relating Seed) (defiance is working no=
w)
-keybinds isolated to every single mode
-gServerSeed set to hex2num("0xFFFFFFFF")
-SystemSpecs packet added (not active)

Modified:
    trunk/README
    trunk/data/config.lua.dist
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.input.lua
    trunk/data/lua/lib.mainmenu.lua
    trunk/data/lua/lib.net.lua
    trunk/data/lua/lib.terrain.lua
    trunk/data/lua/main.lua
    trunk/data/lua/net.login.lua
    trunk/data/lua/net.securetrade.lua

Modified: trunk/README
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/README (original)
+++ trunk/README Wed Jun 13 01:30:15 2007
@@ -15,7 +15,9 @@
 =

 3. Run Iris2_Setup.exe
 =

-4. Run the Iris2 updater.exe
+4. Install Visual Studio 8 Sp1 redistributional (done during Setup)
+
+5. Run the Iris2 updater.exe
 =

 =3D=3D How to get Ultima Online data =3D=3D
 =

@@ -49,7 +51,7 @@
 tab : toggle warmode
 l	: hold to show iris logo
 r	: say "vendor buy" (opens buymenus of nearby traders on most servers)
-c	: toggle cam mode (free,ego,3rdperson)
+c	: toggle cam mode (freefly,ego,3rdperson)
 x,z : zoom camera
 t	: toggle Stats
 k	: toggle Skills
@@ -83,16 +85,18 @@
 R=C3=BCdiger Pakmor (Varan)
 =

 =3D=3D=3D debug mode =3D=3D=3D
-f1 : granny debug mode
-h : first model and anim =

-f : param1 -=3D 1
-g : param1 +=3D 1
+a : show first model and anim =

+
+f : param1 -=3D 1 (one model back)
+g : param1 +=3D 1 (one model ffw)
+j : param2 -=3D 1 (one anim back)
+k : param2 +=3D 1 (one anim ffw)
+
+f1 : switch to Granny debug mode
 f2 : param1 -=3D 64
 f3 : param1 +=3D 64
 f4 : param1 -=3D 4096
 f5 : param1 +=3D 4096
-j : param2 -=3D 1
-k : param2 +=3D 1
 =

 =3D=3D=3D=3D granny debug mode =3D=3D=3D=3D
 =


Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Wed Jun 13 01:30:15 2007
@@ -92,7 +92,7 @@
 		gLoginServerPort =3D 2593,
 		gGameServerSlot =3D 0,
 		gCharacterSlotAdd =3D 0,
-		gServerSeed =3D 1,
+		gServerSeed =3D hex2num("0xFFFFFFFF"),
 		gPolServer =3D false
 	}
 	=

@@ -103,7 +103,7 @@
 		gLoginServerPort =3D 2593,
 		gGameServerSlot =3D 0,
 		gCharacterSlotAdd =3D 0,
-		gServerSeed =3D 1,
+		gServerSeed =3D hex2num("0xFFFFFFFF"),
 		gPolServer =3D false
 	}
 =

@@ -114,7 +114,7 @@
 		gLoginServerPort =3D 2593,
 		gGameServerSlot =3D 0,
 		gCharacterSlotAdd =3D 0,
-		gServerSeed =3D 1,
+		gServerSeed =3D hex2num("0xFFFFFFFF"),
 		gPolServer =3D false
 	}
 =

@@ -156,7 +156,7 @@
 gLoginServerPort =3D 2593		-- runuos standard loginserver port
 gGameServerSlot =3D 0			-- choose gameserver from gameserverlist
 gCharacterSlotAdd =3D 0			-- choose character from characterlist
-gServerSeed =3D 1				-- used for simple login compression
+gServerSeed =3D hex2num("0xFFFFFFFF")	-- should be the IP of the User
 gPolServer =3D false			-- is it a Pol (Penultima Online) server?
 =

 -- Standard GameServer Settings (this settings are received from Login Ser=
ver)

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Wed Jun 13 01:30:15 2007
@@ -26,8 +26,11 @@
 end
 =

 gDebugTestMobiles =3D {
-	{artid=3D 169 , equipment=3D{}},
-	{artid=3D 791 , equipment=3D{}},
+	{artid=3D hex2num("0xA9") , equipment=3D{}}, --169 broken horse
+	{artid=3D hex2num("0x317"), equipment=3D{}}, --791 broken horse
+	{artid=3D	hex2num("0x76") , equipment=3D{}}, --horse ok
+	{artid=3D	hex2num("0x78") , equipment=3D{}}, --horse ok
+
 	{artid=3D hex2num("0x123") , equipment=3D{}}, =

 	{artid=3D hex2num("0xD5") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xF1") , equipment=3D{}}, =

@@ -47,14 +50,12 @@
 	{artid=3D	hex2num("0x72") , equipment=3D{}}, -- 114 broken =

 	{artid=3D	hex2num("0x73") , equipment=3D{}},  -- 115 broken
 	{artid=3D	hex2num("0xC8") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x78") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x79") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x77") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x90") , equipment=3D{}}, =

 	{artid=3D	hex2num("0x74") , equipment=3D{}},  -- 116 broken
 	{artid=3D	hex2num("0xB2") , equipment=3D{}},  -- 178 broken
 	{artid=3D	hex2num("0x84") , equipment=3D{}}, =

-	{artid=3D	hex2num("0x76") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xB3") , equipment=3D{}},  -- 179 broken
 	{artid=3D	hex2num("0xBB") , equipment=3D{}}, =

 	{artid=3D	hex2num("0xBC") , equipment=3D{}}, =

@@ -227,7 +228,16 @@
 	=

 	DebugMenuShowModel()
 	=

-	UnBindArr({"f","g","j","k","h","f1","f2","f3","f4","f5","t","b"})
+	UnbindAll()
+
+	Bind("wheelup",		function (state) if (not gActiveEditText) then if (state=
 > 0) then gCurrentRenderer:CamChangeZoom( 0.3) end end end)
+	Bind("wheeldown",	function (state) if (not gActiveEditText) then if (stat=
e > 0) then gCurrentRenderer:CamChangeZoom(-0.3) end end end)
+	Bind("c",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:ChangeCamMode() end end end)
+
+	Bind("a", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

+		gDebugMenuAnimIndex =3D 0 gDebugMenuModelIndex =3D 1 DebugMenuShowModel()
+		end end end)
+
 	Bind("f", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		DebugMenuChangeParam1(-1)
 		end end end)
@@ -241,10 +251,6 @@
 		end end end)
 	Bind("k", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		gDebugMenuAnimIndex =3D gDebugMenuAnimIndex + 1  DebugMenuShowModel()
-		end end end)
-		=

-	Bind("h", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

-		gDebugMenuAnimIndex =3D 0 gDebugMenuModelIndex =3D 1 DebugMenuShowModel()
 		end end end)
 		=

 	Bind("f1", function (state) if (not gActiveEditText) then if (state > 0) =
then =


Modified: trunk/data/lua/lib.input.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.input.lua (original)
+++ trunk/data/lua/lib.input.lua Wed Jun 13 01:30:15 2007
@@ -175,81 +175,93 @@
 	if bind then bind[1](bind[2]) end
 end
 =

-UnbindAll()
-gLastCursor =3D 0
-
--- soemthing
-Bind("return",	function (state) if (state > 0) then gui.ToggleChatLineActi=
ve() end end)
-Bind("n",		function (state) if (not gActiveEditText) then ToggleCompass(st=
ate > 0) end end)
-Bind("komma",	function (state) if (not gActiveEditText) then if (state > 0=
) then ZoomCompass(gCompassZoomFactor) end end end)
-Bind("point",	function (state) if (not gActiveEditText) then if (state > 0=
) then ZoomCompass(1.0/gCompassZoomFactor) end end end)
-Bind("z",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ActivateNextRenderer() end end end)
-Bind("l",		function (state) if (not gActiveEditText) then gDialog_IrisLogo=
:SetVisible(state > 0) end end)
-Bind("escape",	function (state) =

-	if (state > 0) then =

-	if (not gActiveEditText) then =

-		if gTargetModeActive then CancelTargetMode() else Terminate() end =

-	else
-		DeactivateCurEditText()
-	end =

-	end =

-end)
-Bind("v",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen Client_TakeScreenshot() end end end)
-Bind("f12",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Client_TakeGridScreenshot() end end end)
-
--- additional movement key handling in WalkStep() (for pressed keys)
-Bind("right",   function (state) if (not gActiveEditText) then if (state >=
 0) then CancelAutoWalk() end end end) =

-Bind("left",    function (state) if (not gActiveEditText) then if (state >=
 0) then CancelAutoWalk() end end end) =

-Bind("down",    function (state) if (not gActiveEditText) then if (state >=
 0) then CancelAutoWalk() end else if (state > 0) then gui.HistoryUpDown(-1=
) end end end) =

-Bind("up",              function (state) if (not gActiveEditText) then if =
(state > 0) then CancelAutoWalk() end else if (state > 0) then gui.HistoryU=
pDown(1) end end end) =

-Bind("u",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen SetAutoWalkTarget() end end end)
-
--- toggel gumps
-Bind("t",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ToggleStatusAos() end end end)
-Bind("k",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ToggleSkill() end end end)
-Bind("j",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen ToggleJournal() end end end)
-Bind("b",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen TogglePlayerBackpack() end end end)
-Bind("p",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen TogglePlayerPaperdoll() end end end)
-
--- camera controlling
-Bind("c",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gCurrentRenderer:ChangeCamMode() end end end)
-Bind("x",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gCurrentRenderer:CamChangeZoom( 1) end end end)
-Bind("y",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gCurrentRenderer:CamChangeZoom(-1) end end end)
-Bind("wheelup",		function (state) if (not gActiveEditText) then if (state =
> 0) then gCurrentRenderer:CamChangeZoom( 0.3) end end end)
-Bind("wheeldown",	function (state) if (not gActiveEditText) then if (state=
 > 0) then gCurrentRenderer:CamChangeZoom(-0.3) end end end)
-
--- repeat last command
-Bind("g",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen gui.RepeatLastChatLine() end end end)
-Bind("h",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen RepeatLastDoubleClick() end end end)
-
--- select commands
-Bind("q",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen SelectNearestMobile() end end end)
-Bind("e",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen SelectNextMobile() end end end)
-Bind("space",	function (state) if (not gActiveEditText) then if (state > 0=
) then AttackSelectedMobile() end end end)
-
---
-Bind("f10",		function (state) if (not gActiveEditText) then if (state > 0)=
 then ShowDevTool() end end end)
-Bind("f11",		function (state) if (not gActiveEditText) then if (state > 0)=
 then ShowFallBackTool() end end end)
-Bind("tab",		function (state) if (state > 0) then if (gActWarmode=3D=3DgWa=
rmode_Normal) then Send_CombatMode(gWarmode_Combat) else Send_CombatMode(gW=
armode_Normal) end end end)
-Bind("m",		function (state) if (not gActiveEditText) then if (state > 0) t=
hen MobileDisplayTextOverHead(gPlayerBodySerial,"bla bla bla") end end end)
-
-if (false) then
-	local commandchar =3D "["
-	-- runuo macros useful for testing
-	Bind("f1",		function (state) if (not gActiveEditText) then if (state > 0)=
 then =

-		--Send_Speech("[set Hits 12000 self") =

-		Send_Speech(commandchar.."self set Hits 12000") =

-		--local playermobile =3D GetPlayerMobile()
-		--if (playermobile) then  gAutoTargetMobile =3D playermobile  end =

-	end end end)
-	Bind("f2",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."self resurrect") end end end)
-	Bind("f3",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."add wallofstoneeast") end end end)
-	Bind("f4",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."remove") end end end)
-	Bind("f5",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."tele") end end end)
-	Bind("f6",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."set Hits 12000") end end end)
-	Bind("f7",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."resurrect") end end end)
-	Bind("f8",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."kill") end end end)
-	Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0)=
 then Send_Speech(commandchar.."admin") end end end)
-	--Bind("f10",		function (state) if (not gActiveEditText) then if (state >=
 0) then Send_Speech(commandchar.."props") end end end)
-	--Bind("f11",		function (state) if (not gActiveEditText) then if (state >=
 0) then Send_Speech(commandchar.."add") end end end)
-end
+function BindInGameKeys()
+	UnbindAll()
+	gLastCursor =3D 0
+	=

+	-- soemthing
+	Bind("return",	function (state) if (state > 0) then gui.ToggleChatLineAct=
ive() end end)
+	Bind("n",		function (state) if (not gActiveEditText) then ToggleCompass(s=
tate > 0) end end)
+	Bind("komma",	function (state) if (not gActiveEditText) then if (state > =
0) then ZoomCompass(gCompassZoomFactor) end end end)
+	Bind("point",	function (state) if (not gActiveEditText) then if (state > =
0) then ZoomCompass(1.0/gCompassZoomFactor) end end end)
+	Bind("z",		function (state) if (not gActiveEditText) then if (state > 0) =
then ActivateNextRenderer() end end end)
+	Bind("l",		function (state) if (not gActiveEditText) then gDialog_IrisLog=
o:SetVisible(state > 0) end end)
+	Bind("escape",	function (state) =

+		if (state > 0) then =

+		if (not gActiveEditText) then =

+			if gTargetModeActive then CancelTargetMode() else Terminate() end =

+		else
+			DeactivateCurEditText()
+		end =

+		end =

+	end)
+	Bind("v",		function (state) if (not gActiveEditText) then if (state > 0) =
then Client_TakeScreenshot() end end end)
+	Bind("f12",		function (state) if (not gActiveEditText) then if (state > 0=
) then Client_TakeGridScreenshot() end end end)
+	=

+	-- additional movement key handling in WalkStep() (for pressed keys)
+	Bind("right",   function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end end end) =

+	Bind("left",    function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end end end) =

+	Bind("down",    function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end else if (state > 0) then gui.HistoryUpDown(-=
1) end end end) =

+	Bind("up",              function (state) if (not gActiveEditText) then if=
 (state > 0) then CancelAutoWalk() end else if (state > 0) then gui.History=
UpDown(1) end end end) =

+	Bind("u",		function (state) if (not gActiveEditText) then if (state > 0) =
then SetAutoWalkTarget() end end end)
+	=

+	-- toggel gumps
+	Bind("t",		function (state) if (not gActiveEditText) then if (state > 0) =
then ToggleStatusAos() end end end)
+	Bind("k",		function (state) if (not gActiveEditText) then if (state > 0) =
then ToggleSkill() end end end)
+	Bind("j",		function (state) if (not gActiveEditText) then if (state > 0) =
then ToggleJournal() end end end)
+	Bind("b",		function (state) if (not gActiveEditText) then if (state > 0) =
then TogglePlayerBackpack() end end end)
+	Bind("p",		function (state) if (not gActiveEditText) then if (state > 0) =
then TogglePlayerPaperdoll() end end end)
+	=

+	-- camera controlling
+	Bind("c",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:ChangeCamMode() end end end)
+	Bind("x",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:CamChangeZoom( 1) end end end)
+	Bind("y",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:CamChangeZoom(-1) end end end)
+	Bind("wheelup",		function (state) if (not gActiveEditText) then if (state=
 > 0) then gCurrentRenderer:CamChangeZoom( 0.3) end end end)
+	Bind("wheeldown",	function (state) if (not gActiveEditText) then if (stat=
e > 0) then gCurrentRenderer:CamChangeZoom(-0.3) end end end)
+	=

+	-- repeat last command
+	Bind("g",		function (state) if (not gActiveEditText) then if (state > 0) =
then gui.RepeatLastChatLine() end end end)
+	Bind("h",		function (state) if (not gActiveEditText) then if (state > 0) =
then RepeatLastDoubleClick() end end end)
+	=

+	-- select commands
+	Bind("q",		function (state) if (not gActiveEditText) then if (state > 0) =
then SelectNearestMobile() end end end)
+	Bind("e",		function (state) if (not gActiveEditText) then if (state > 0) =
then SelectNextMobile() end end end)
+	Bind("space",	function (state) if (not gActiveEditText) then if (state > =
0) then AttackSelectedMobile() end end end)
+	=

+	--
+	Bind("f10",		function (state) if (not gActiveEditText) then if (state > 0=
) then ShowDevTool() end end end)
+	Bind("f11",		function (state) if (not gActiveEditText) then if (state > 0=
) then ShowFallBackTool() end end end)
+	Bind("tab",		function (state) if (state > 0) then if (gActWarmode=3D=3DgW=
armode_Normal) then Send_CombatMode(gWarmode_Combat) else Send_CombatMode(g=
Warmode_Normal) end end end)
+	Bind("m",		function (state) if (not gActiveEditText) then if (state > 0) =
then MobileDisplayTextOverHead(gPlayerBodySerial,"bla bla bla") end end end)
+
+	--[[
+	Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0)=
 then =

+		print("rebuild all securetrades")
+		for k,mysectrade in pairs(gSecureTrades) do =

+			print("rebuild sectrade",mysectrade.id)
+			SecureTradeRebuildContainers(mysectrade)
+		end
+	 end end end)
+	]]--
+
+	if (false) then
+		local commandchar =3D "["
+		-- runuo macros useful for testing
+		Bind("f1",		function (state) if (not gActiveEditText) then if (state > 0=
) then =

+			--Send_Speech("[set Hits 12000 self") =

+			Send_Speech(commandchar.."self set Hits 12000") =

+			--local playermobile =3D GetPlayerMobile()
+			--if (playermobile) then  gAutoTargetMobile =3D playermobile  end =

+		end end end)
+		Bind("f2",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."self resurrect") end end end)
+		Bind("f3",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."add wallofstoneeast") end end end)
+		Bind("f4",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."remove") end end end)
+		Bind("f5",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."tele") end end end)
+		Bind("f6",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."set Hits 12000") end end end)
+		Bind("f7",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."resurrect") end end end)
+		Bind("f8",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."kill") end end end)
+		Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0=
) then Send_Speech(commandchar.."admin") end end end)
+		--Bind("f10",		function (state) if (not gActiveEditText) then if (state =
> 0) then Send_Speech(commandchar.."props") end end end)
+		--Bind("f11",		function (state) if (not gActiveEditText) then if (state =
> 0) then Send_Speech(commandchar.."add") end end end)
+	end
+end

Modified: trunk/data/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mainmenu.lua (original)
+++ trunk/data/lua/lib.mainmenu.lua Wed Jun 13 01:30:15 2007
@@ -54,7 +54,7 @@
 		return
 	end
 	=

-	ProtocolSend_Account_Login_Request(gLoginname,gPassword,gServerSeed) -- 0=
x80 kPacket_Account_Login_Request
+	ProtocolSend_Account_Login_Request(gLoginname,gPassword) -- 0x80 kPacket_=
Account_Login_Request
 	-- answered by 0xA8 kPacket_Server_List which calls MainMenuShowServerList
 end
 =

@@ -65,6 +65,9 @@
 	local MySelectServer =3D function(server) =

 		AddFadeLines(sprintf("connecting to server %s[%d]",server.name or "???",=
server.index or 0))
 		printdebug("login","NET: select gameserver",server.name,server.index,gGa=
meServerSlot)
+		=

+--		ProtocolSend_SystemSpecs()
+		=

 		ProtocolSend_GameServer_Select(server.index or 0) -- 0xA0 kPacket_Server=
_Select =

 		-- answered by kPacket_Server_Redirect 0x8C, =

 		-- which calls ProtocolSend_GameServer_PostLogin kPacket_Post_Login 0x91 =

@@ -225,7 +228,13 @@
 function StartOfflineMode ()
 	gStartGameWithoutNetwork =3D true
 	InitPlainGUI()
+
+	-- Binds key and Inits all InGame-Data
 	StartInGame() -- otherwise handled by the serverpacket (kPacket_Login_Com=
plete)
+
+	-- Unbind some keys only for offline mode (rest is the same as InGame)
+	UnBindArr({"u","q","e","tab","r","c","t","k","j","b","p","g","h","y"})
+
 	gCurrentRenderer:InitLocalCam()
 end
 =


Modified: trunk/data/lua/lib.net.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.net.lua (original)
+++ trunk/data/lua/lib.net.lua Wed Jun 13 01:30:15 2007
@@ -30,8 +30,10 @@
 	NetDisconnect()							-- close old connection
 	gMainConnection =3D NetConnect(host,port)
 	if (not gMainConnection) then return false end
-	gSendFifo:PushUint32(key)				--norm. IP from Client, only required for os=
i servers (uncompressed/unencrypted)
 	NetTrafficStep()
+	local out =3D GetSendFIFO()
+	out:PushNetUint32(key)		--IP from Client/or GameAccount, only required fo=
r osi servers (uncompressed/unencrypted)
+	out:SendPacket()
 	return true
 end
 =


Modified: trunk/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.terrain.lua (original)
+++ trunk/data/lua/lib.terrain.lua Wed Jun 13 01:30:15 2007
@@ -18,6 +18,11 @@
 =

 gTerrainMaterialCache =3D {}
 function GetTerrainMaterial (iTileTypeID,bLighting)
+	--temporary for testing material/shader use for tiles (mystiqq) =

+	if (OgreMaterialNameKnown("tileid_" .. iTileTypeID)) then  =

+		return "tileid_" .. iTileTypeID  =

+	end
+
 	local matname =3D gTerrainMaterialCache[iTileTypeID]
 	if ((not matname) and gTexMapLoader) then
 	=


Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Wed Jun 13 01:30:15 2007
@@ -146,6 +146,8 @@
 	-- if (false) then MeshExporter() end
 	-- TestZLib()
 	-- if (false) then TestUniFontLoader() end
+	--TestUOP()
+	=

 	=

 	gMyTicks =3D Client_GetTicks()
 	=

@@ -194,7 +196,10 @@
 	ExecuteMapChangeIfNeeded()
 	gCurrentRenderer:Init()
 	gCurrentRenderer:BlendOutLayersAbovePlayer()
-	=

+
+	-- Binds all InGame-Keys
+	BindInGameKeys()
+
 	print("Welcome to Iris")
 =

 	gInGameStarted =3D true
@@ -206,8 +211,10 @@
 	-- UpdateFPS(curticks)
 	UpdateStats(curticks)
 	StepTimer(curticks)
-	=

+
 	NetStep()
+
+--	OgreAddCompositor("Ogre/Compositor/BlackAndWhite")
 	if (gInGameStarted) then
 		gCurrentRenderer:UpdateMap()
 		gCurrentRenderer:MousePickStep()
@@ -220,6 +227,8 @@
 	else
 		StepMainMenu()
 	end
+--	OgreRemoveCompositor("Ogre/Compositor/BlackAndWhite")
+
 	StepDebugMenu()
 	gui.Step()
 	Client_RenderOneFrame()

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Wed Jun 13 01:30:15 2007
@@ -34,6 +34,44 @@
 	MainMenuShowServerList(serverlist)
 end
 =

+-- len: 0x10C
+function ProtocolSend_SystemSpecs()
+	print("NET: Send_SystemSpecs:")
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Metrics)
+	out:PushNetUint8(hex2num("0x02"))
+	out:PushNetUint32(hex2num("0x442C637A"))
+	out:PushNetUint32(hex2num("0x00000005"))
+	out:PushNetUint32(hex2num("0x00000001"))
+	out:PushNetUint32(hex2num("0x00000A28"))
+	out:PushNetUint8(hex2num("0x02"))
+	out:PushNetUint32(hex2num("0x00000006"))
+	out:PushNetUint32(hex2num("0x0000000F"))
+	out:PushNetUint32(hex2num("0x0000095A"))
+	out:PushNetUint8(hex2num("0x02"))
+	out:PushNetUint32(hex2num("0x00000600"))
+	out:PushNetUint32(hex2num("0x00000500"))
+	out:PushNetUint32(hex2num("0x00000400"))
+	out:PushNetUint16(hex2num("0x0000"))
+	out:PushNetUint16(hex2num("0x0020")) -- 48
+	for i=3D1, 76 do
+		out:PushNetUint8(0)
+	end	-- 124
+	out:PushNetUint32(hex2num("0x10020000"))
+	out:PushNetUint32(hex2num("0x71C20000"))
+	out:PushNetUint32(hex2num("0x01080002"))
+	out:PushNetUint8(hex2num("0x06"))
+	out:PushNetUint8(hex2num("0x10"))
+	out:PushNetUint8(hex2num("0x64"))
+	out:PushNetUint8(hex2num("0x00"))
+	out:PushNetUint8(hex2num("0x65"))
+	out:PushNetUint32(hex2num("0x00750000")) -- 145
+	for i=3D1, 123 do
+		out:PushNetUint8(0)
+	end
+	out:SendPacket()
+end
+
 -- Recieve Serverredirect from LoginServer (0x8c)
 function gPacketHandler.kPacket_Server_Redirect ()
 	local input =3D GetRecvFIFO()
@@ -44,14 +82,15 @@
 	printdebug("login",sprintf("NET: server redirect: id=3D%i ip=3D%x port=3D=
%i AccountNr.:0x%08x\n",
 			id,gGameServerIP,gGameServerPort,gGameServerAccount))
 =

-	--wait redirect is received
-	if ( gServerType[gServerEmulator]~=3D"RunUO" ) then
+	-- login & gameserver are not the same: redirect is received
+--	if (gGameServerIP ~=3D gLoginServerIP) then -- <- this check should be =
used but currently crashes
+	if ( (gServerType[gServerEmulator]~=3D"RunUO") or gPolServer ) then
 		--disconnect from Loginserver
 		printdebug("login","NET: disconnect from loginserver")
 		NetDisconnect()
 		--connect to gameserver
 		printdebug("login","NET: connect to gameserver")
-		local res =3D NetConnectWithKey(NtoA(gGameServerIP),gGameServerPort,gSer=
verSeed)
+		local res =3D NetConnectWithKey(NtoA(gGameServerIP),gGameServerPort,gGam=
eServerAccount)
 		if (not res) then
 			FatalErrorMessage("kPacket_Server_Redirect : login server redirect fail=
ed")
 		end
@@ -224,13 +263,13 @@
 =

 -- send login server request 0x80
 -- answered by 0xA8 kPacket_Server_List which calls MainMenuShowServerList
-function ProtocolSend_Account_Login_Request	(sName,sPassword,iSeed)
-	printdebug("login",sprintf("NET: Account_Login_Request: Name: %s Password=
: %s Seed: %i\n",sName,sPassword,iSeed))
+function ProtocolSend_Account_Login_Request	(sName,sPassword)
+	printdebug("login",sprintf("NET: Account_Login_Request: Name: %s Password=
: %s\n",sName,sPassword))
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Account_Login_Request)
 	out:PushFilledString(sName,30)
 	out:PushFilledString(sPassword,30)
-	out:PushNetUint8(iSeed)
+	out:PushNetUint8(hex2num("0x5D"))
 	out:SendPacket()
 end
 =


Modified: trunk/data/lua/net.securetrade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.securetrade.lua (original)
+++ trunk/data/lua/net.securetrade.lua Wed Jun 13 01:30:15 2007
@@ -105,16 +105,6 @@
 	end
 end
 =

---[[
-Bind("f9",		function (state) if (not gActiveEditText) then if (state > 0) =
then =

-	print("rebuild all securetrades")
-	for k,mysectrade in pairs(gSecureTrades) do =

-		print("rebuild sectrade",mysectrade.id)
-		SecureTradeRebuildContainers(mysectrade)
-	end
- end end end)
-]]--	=

-
 function SecureTradeRebuildContainers (mysectrade)
 	local container_my =3D gContainer[mysectrade.myContainerID]
 	if (container_my) then SecureTradeRebuildContainerWidgets(mysectrade,cont=
ainer_my,true) end



From no-reply at zwischenwelt.org  Wed Jun 13 02:31:55 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 13 Jun 2007 00:31:55 -0000
Subject: [Iris-commit] [IRIS] r1192 - /trunk/data/config.lua.dist
Message-ID: <20070613003155.E36351058005@localhost.localdomain>

Author: sience
Date: Wed Jun 13 02:31:54 2007
New Revision: 1192

Log:
-definance added to known servers

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Wed Jun 13 02:31:54 2007
@@ -118,6 +118,17 @@
 		gPolServer =3D false
 	}
 =

+gShardList["defianceuo.com"] =3D { =

+		gLoginname =3D "",	-- Loginname
+		gPassword =3D "",		-- Password
+		gLoginServerIP =3D "dfi.defianceuo.com", =

+		gLoginServerPort =3D 2593,
+		gGameServerSlot =3D 0,
+		gCharacterSlotAdd =3D 0,
+		gServerSeed =3D hex2num("0xFFFFFFFF"),
+		gPolServer =3D true						--must be true for Definance regardless if its =
PolServer
+	}
+
 -- in config.lua you can add shards like this: 	=

 -- gShardList["myshard"] =3D { ..... } =

 =




From no-reply at zwischenwelt.org  Thu Jun 14 00:37:29 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 13 Jun 2007 22:37:29 -0000
Subject: [Iris-commit] [IRIS] r1193 - in /trunk: data/lua/net.login.lua
 include/net.h src/net.cpp src/net_L.cpp src/sound_fmod.cpp
Message-ID: <20070613223729.61AB6B1466D@localhost.localdomain>

Author: hagish
Date: Thu Jun 14 00:37:28 2007
New Revision: 1193

Log:
hostname to ip resolver to compare number based ip and string based ips

Modified:
    trunk/data/lua/net.login.lua
    trunk/include/net.h
    trunk/src/net.cpp
    trunk/src/net_L.cpp
    trunk/src/sound_fmod.cpp

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Thu Jun 14 00:37:28 2007
@@ -81,7 +81,7 @@
 	gGameServerAccount =3D input:PopNetUint32()
 	printdebug("login",sprintf("NET: server redirect: id=3D%i ip=3D%x port=3D=
%i AccountNr.:0x%08x\n",
 			id,gGameServerIP,gGameServerPort,gGameServerAccount))
-
+	print("DEBUG IP STRINGS",NtoA(gGameServerIP),GetHostByName(gLoginServerIP=
))
 	-- login & gameserver are not the same: redirect is received
 --	if (gGameServerIP ~=3D gLoginServerIP) then -- <- this check should be =
used but currently crashes
 	if ( (gServerType[gServerEmulator]~=3D"RunUO") or gPolServer ) then

Modified: trunk/include/net.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/net.h (original)
+++ trunk/include/net.h Thu Jun 14 00:37:28 2007
@@ -61,6 +61,8 @@
 =

 	cNet	();
 	~cNet	();
+
+	static unsigned int GetHostByName	(const char *szHost);
 };
 =

 =


Modified: trunk/src/net.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/net.cpp (original)
+++ trunk/src/net.cpp Thu Jun 14 00:37:28 2007
@@ -108,6 +108,21 @@
 =

 const bool	cConnection::IsConnected(){
 	return miSocket !=3D INVALID_SOCKET;
+}
+
+
+// resolves hostname to nummeric ip, 0 on error
+unsigned int cNet::GetHostByName	(const char *szHost) { PROFILE
+	// gethostbyname
+	hostent*		h;
+	h =3D gethostbyname(szHost);
+	if(h){
+		return *((uint32 *)h->h_addr);
+	} else if(inet_addr(szHost) !=3D INADDR_NONE){
+		return inet_addr(szHost);
+	} else {
+		return 0;
+	}
 }
 =

 /// outgoing connection

Modified: trunk/src/net_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/net_L.cpp (original)
+++ trunk/src/net_L.cpp Thu Jun 14 00:37:28 2007
@@ -17,7 +17,8 @@
 		virtual void RegisterMethods	(lua_State *L) { PROFILE
 			lua_register(L,"NetConnect",		&cConnection_L::NetConnect);
 			lua_register(L,"NetReadAndWrite",	&cConnection_L::NetReadAndWrite);
-			lua_register(L,"NtoA",				&cConnection_L::NtoA);
+			lua_register(L,"NtoA",			&cConnection_L::NtoA);
+			lua_register(L,"GetHostByName",		&cConnection_L::GetHostByName);
 			=

 			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cConnection_L::methodname));
 			REGISTER_METHOD(Destroy);
@@ -51,6 +52,24 @@
 			snprintf(buffer,16,"%i.%i.%i.%i",(int)h[3],(int)h[2],(int)h[1],(int)h[0=
]);
 			lua_pushstring(L,buffer);
 			return 1;
+		}
+
+		/// converts a hostname to a ip as string or nil on error
+		/// for lua : int 	GetHostByName	(string hostname)
+		static int				GetHostByName	(lua_State *L) { PROFILE
+			unsigned int ip =3D cNet::GetHostByName(luaL_checkstring(L,1));
+			if(ip){
+				// TODO this could be system dependant, due to endianess
+				// probably use inet_ntop() ?
+				=

+				static char buffer[32];
+				unsigned char *h =3D (unsigned char *)&ip;
+				snprintf(buffer,16,"%i.%i.%i.%i",(int)h[0],(int)h[1],(int)h[2],(int)h[=
3]);
+				lua_pushstring(L,buffer);
+				return 1;
+			} else {
+				return 0;
+			}
 		}
 =

 	// object methods exported to lua

Modified: trunk/src/sound_fmod.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/sound_fmod.cpp (original)
+++ trunk/src/sound_fmod.cpp Thu Jun 14 00:37:28 2007
@@ -312,6 +312,8 @@
 			printf("Error!  You are using an old version of FMOD %08x.  This progra=
m requires %08x\n", version, FMOD_VERSION);
 		}
 =

+		//result =3D FMOD_System_SetDriver(mpSystem,0);
+		//ERRCHECK(result);
 		result =3D FMOD_System_Init(mpSystem, miMaxChannels, FMOD_INIT_NORMAL, 0=
);
 		ERRCHECK(result);
 	}



From no-reply at zwischenwelt.org  Thu Jun 14 20:05:42 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Jun 2007 18:05:42 -0000
Subject: [Iris-commit] [IRIS] r1194 - /tools/installer/ /tools/updater/
 /trunk/bin/ /trunk/data/ /trunk/data/lua/ /trunk/src/
Message-ID: <20070614180552.06877B1466B@localhost.localdomain>

Author: sience
Date: Thu Jun 14 20:05:29 2007
New Revision: 1194

Log:
-gTerrainShader option added to config.lua.dist
-new binary
-login procedure are now correct (gamerserverip vs loginserverip)
-corpse packets are now correct
-Compositor enable added
-Updater script updated

Modified:
    tools/installer/Iris_Setup.iss
    tools/updater/updater.vcproj
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist
    trunk/data/lua/lib.corpse.lua
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.terrain.lua
    trunk/data/lua/main.lua
    trunk/data/lua/net.container.lua
    trunk/data/lua/net.corpse.lua
    trunk/data/lua/net.login.lua
    trunk/data/lua/net.objects.lua
    trunk/src/scripting.cpp

Modified: tools/installer/Iris_Setup.iss
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- tools/installer/Iris_Setup.iss (original)
+++ tools/installer/Iris_Setup.iss Thu Jun 14 20:05:29 2007
@@ -24,7 +24,7 @@
 InfoBeforeFile=3DData\README
 OutputDir=3DOutput
 OutputBaseFilename=3D{#AppName}_Setup
-Compression=3Dlzma
+Compression=3Dlzma/normal
 SolidCompression=3Dtrue
 WizardImageFile=3DWizImage.bmp
 WizardSmallImageFile=3DWizSmallImage.bmp
@@ -46,6 +46,7 @@
 [Files]
 Source: Data\*; DestDir: {app}; Flags: recursesubdirs createallsubdirs
 Source: SplashScreen.bmp; Flags: dontcopy
+Source: vcredist_x86.exe; DestDir: {app}; Flags: deleteafterinstall
 =

 [INI]
 Filename: {app}\{#AppUrlName}; Section: InternetShortcut; Key: URL; String=
: {#AppURL}
@@ -61,6 +62,7 @@
 =

 [Run]
 Filename: {app}\bin\{#UpdaterExeName}; WorkingDir: {app}\bin\; Flags: post=
install; Description: {cm:ConfigureIris}
+Filename: {app}\vcredist_x86.exe; WorkingDir: {app}; StatusMsg: Installing=
 Visual C++ 8 SP1 Runtime; Flags: runhidden
 ;Filename: {app}\{#AppExeName}; Description: {cm:LaunchProgram,{#AppName}}=
; Flags: nowait postinstall skipifsilent
 =

 [UninstallDelete]

Modified: tools/updater/updater.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- tools/updater/updater.vcproj (original)
+++ tools/updater/updater.vcproj Thu Jun 14 20:05:29 2007
@@ -97,7 +97,7 @@
 			OutputDirectory=3D"$(SolutionDir)$(ConfigurationName)"
 			IntermediateDirectory=3D"$(ConfigurationName)"
 			ConfigurationType=3D"1"
-			UseOfMFC=3D"2"
+			UseOfMFC=3D"0"
 			CharacterSet=3D"0"
 			WholeProgramOptimization=3D"1"
 			>

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Thu Jun 14 20:05:29 2007
@@ -232,3 +232,6 @@
 =

 gDisableSmoothWalk =3D false
 gDisableHumanClientSideAnim =3D false
+
+-- activate Shader 2.0 for Terrainengine (true/false)
+gTerrainShader =3D false

Modified: trunk/data/lua/lib.corpse.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.corpse.lua (original)
+++ trunk/data/lua/lib.corpse.lua Thu Jun 14 20:05:29 2007
@@ -29,3 +29,25 @@
 BYTE[1] itemLayer =

 BYTE[4] itemID
 ]]--
+
+--[[
+function Update_CorpseContainer(container_serial)
+	local container =3D GetOrCreateContainer(container_serial)
+	container.gumpid =3D hex2num("0x09") --hier muss ne gumpid rein
+	=

+	if (not container.dialog) then
+		-- create dialog from scratch
+		local dialog =3D guimaker.MakeSortedDialog()
+		container.dialog =3D dialog
+		dialog.uoContainer =3D container
+		dialog.rootwidget.gfx:SetPos(200,100) -- TODO : choose position
+		dialog.backpane =3D MakeBorderGumpPart(dialog.rootwidget,container.gumpi=
d,0,0)
+		dialog.backpane.mbIgnoreMouseOver =3D false
+		dialog.backpane.onMouseDown =3D function (widget,mousebutton)
+				if (mousebutton =3D=3D 2) then CloseContainer(widget.dialog.uoContaine=
r.serial) end
+				if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.StartM=
oveDialog(widget.dialog.rootwidget) end
+			end
+	end
+	RefreshContainerItemWidgets(container)
+end
+]]--

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Thu Jun 14 20:05:29 2007
@@ -273,7 +273,7 @@
 	Bind("f5", function (state) if (not gActiveEditText) then if (state > 0) =
then =

 		DebugMenuChangeParam1( 4096)
 		end end end)
-		=

+--[[	=

 	Bind("t", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		if (gCurDebugMode =3D=3D kDebugMode_Static) then
 			if (gEnableSVNRemoveInStaticDebug) then -- BE CAREFUL WITH THAT !!!!  g=
EnableSVNRemoveInStaticDebug
@@ -283,7 +283,7 @@
 			end	=

 		end	=

 		end end end)
-		=

+]]--	=

 	Bind("b", function (state) if (not gActiveEditText) then if (state > 0) t=
hen =

 		if (gCurDebugMode =3D=3D kDebugMode_Static) then
 			local i =3D gDebugMenuModelIndex

Modified: trunk/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.terrain.lua (original)
+++ trunk/data/lua/lib.terrain.lua Thu Jun 14 20:05:29 2007
@@ -7,7 +7,6 @@
 	if (translator) then return translator[iTileTypeID] or iTileTypeID else r=
eturn iTileTypeID end
 end
 =

-
 -- called by the c function BuildTerrainEntity_Shaded, has to return a mat=
erial name for a tiletypeid, used for terrain
 function BuildTerrainEntity_Shaded_GetMaterial (iTileTypeID) return GetTer=
rainMaterial(iTileTypeID,true) end
 =

@@ -15,20 +14,18 @@
 function BuildTerrainEntity_Simple_GetMaterial (iTileTypeID) return GetTer=
rainMaterial(iTileTypeID,false) end
 =

 =

-
 gTerrainMaterialCache =3D {}
 function GetTerrainMaterial (iTileTypeID,bLighting)
+	--Seasonal Translation
+	local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSet=
ting)
+
 	--temporary for testing material/shader use for tiles (mystiqq) =

-	if (OgreMaterialNameKnown("tileid_" .. iTileTypeID)) then  =

-		return "tileid_" .. iTileTypeID  =

+	if (gTerrainShader and OgreMaterialNameKnown("tileid_" .. iTranslatedTile=
TypeID)) then  =

+		return "tileid_" .. iTranslatedTileTypeID  =

 	end
 =

 	local matname =3D gTerrainMaterialCache[iTileTypeID]
 	if ((not matname) and gTexMapLoader) then
-	=

-		--Seasonal Translation
-		local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSe=
tting)
-		=

 		local miFlags,miTexID,msName =3D gTileTypeLoader:GetGroundTileType(iTran=
slatedTileTypeID)
 		-- only if miTexID is !=3D 0 take tiledata value for iTranslatedTileType=
ID
 		if (miTexID ~=3D 0) then

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Thu Jun 14 20:05:29 2007
@@ -78,6 +78,7 @@
 dofile(libpath .. "lib.devtool.lua")
 dofile(libpath .. "lib.3d.mobileanim.lua")
 dofile(libpath .. "lib.mount.lua")
+dofile(libpath .. "lib.corpse.lua")
 =

 --can be removed with gamerelease
 dofile(libpath .. "lib.meshexporter.lua")

Modified: trunk/data/lua/net.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.container.lua (original)
+++ trunk/data/lua/net.container.lua Thu Jun 14 20:05:29 2007
@@ -46,7 +46,7 @@
 	local container_serial =3D input:PopNetUint32()
 	local container_gumpid =3D input:PopNetUint16()
 	=

-	--print("# kPacket_Open_Container",container_serial,container_gumpid)
+	print("# kPacket_Open_Container",container_serial,container_gumpid)
 	=

 	local container =3D GetOrCreateContainer(container_serial)
 	container.gumpid =3D container_gumpid
@@ -107,7 +107,7 @@
 =

 		ApplyArtidStackManipulation(item)
 		RefreshContainerItem(item)
---		printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_s=
tack=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,=
item.artid_addstack,item.amount)
+		printf("container=3D0x%08x item.serial=3D0x%08x artid=3D0x%04x artid_sta=
ck=3D%i item.amount=3D%d\n",item.iContainerSerial,item.serial,item.artid,it=
em.artid_addstack,item.amount)
 		--AddFadeLines(sprintf("kPacket_Container_Contents type=3D%s",GetStaticT=
ileTypeName(item.artid)))
 	end
 end
@@ -170,7 +170,7 @@
 	--print("kPacket_Object_to_Object",item.xloc,item.yloc)
 	item.iContainerSerial =3D input:PopNetUint32()
 	item.hue =3D input:PopNetUint16()
---	printf("NET : kPacket_Object_to_Object : container=3D0x%08x item=3D0x%0=
8x artid=3D0x%04x amount=3D%d\n",item.iContainerSerial,item.serial,item.art=
id,item.amount)
+	printf("NET : kPacket_Object_to_Object : container=3D0x%08x item=3D0x%08x=
 artid=3D0x%04x amount=3D%d\n",item.iContainerSerial,item.serial,item.artid=
,item.amount)
 =

 	ApplyArtidStackManipulation(item)
 	RefreshContainerItem(item)

Modified: trunk/data/lua/net.corpse.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.corpse.lua (original)
+++ trunk/data/lua/net.corpse.lua Thu Jun 14 20:05:29 2007
@@ -1,5 +1,4 @@
 -- handles special cases for corpses
-
 --[[
 Packet Build:
 BYTE[1] cmd
@@ -15,21 +14,53 @@
 Followed by a 0x3C message with the contents.
 ]]--
 =

+--Packet [89], Length: 13, Type: Server
+--89, 00 0d, 40 02 37 3c, 0c, 7f fd f9 95, 00
+--died anim ids:
+--21	Die_Hard_Fwd_01
+--22	Die_Hard_Back_01
+--sit anim id: 76
+--0x2006 - corpse schrift
+-- TODO : what is the result of this packet?
 function  gPacketHandler.kPacket_Corpse_Equipment() -- [0x89]
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local blocksize =3D input:PopNetUint16()
-	local corpse_serial =3D input:PopNetUint16()
+	local container_serial =3D input:PopNetUint32()
 =

-	for i=3D1, blocksize-5 do
-		local temp =3D input:PopNetUint8()
+	printdebug("equip",sprintf("NET: kPacket_Corpse_Equipment: blocksize: %i =
container_serial=3D0x%08x\n",blocksize,container_serial))
+
+	blocksize=3Dblocksize-7
+	=

+	while (blocksize >=3D 5) do
+		local item_layer =3D input:PopNetUint8()
+		local item_serial =3D input:PopNetUint32()
+		printdebug("equip",sprintf("NET: kPacket_Corpse_Equipment_Items: item_la=
yer: %i item_serial=3D0x%08x\n",item_layer,item_serial))
+		blocksize=3Dblocksize-5
 	end
+
+	local terminator =3D input:PopNetUint8()	--always 0x00
+--	Update_CorpseContainer(container_serial)
+end
+
+--Packet Name: Display Death Action | Packet Size: 13 Bytes
+-- TODO : what is the result of this packet?
+function  gPacketHandler.kPacket_Death_Animation() -- [0xAF]
+	local input =3D GetRecvFIFO()
+	local id =3D input:PopNetUint8()
+	local player_serial =3D input:PopNetUint32()
+	local corpse_serial =3D input:PopNetUint32()
+	local terminator =3D input:PopNetUint32()
+	printdebug("animation",sprintf("NET: kPacket_Death_Animation: player_seri=
al: 0x%08x corpse_serial=3D0x%08x\n",player_serial,corpse_serial))
 --[[
-	--for =

-	local item_layer =3D input:PopNetUint8()
-	local item_serial =3D input:PopNetUint16()
-	--end
-	local terminator =3D input:PopNetUint16()
+	local anim =3D {}
+	anim.mobileserial	=3D corpse_serial
+	anim.m_animation	=3D 21
+	anim.m_framecount	=3D 120
+	anim.m_repeat		=3D 1
+	anim.m_animForward	=3D 0
+	anim.m_repeatFlag	=3D 0
+	anim.m_frameDelay	=3D hex2num("0x80")
+	gCurrentRenderer:MobileStartServerSideAnim(anim)
 ]]--
-	printdebug("equip",sprintf("NET: kPacket_Corpse_Equipment: blocksize: %i =
corpse_serial=3D0x%04x\n",blocksize,corpse_serial))
 end

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Thu Jun 14 20:05:29 2007
@@ -81,10 +81,10 @@
 	gGameServerAccount =3D input:PopNetUint32()
 	printdebug("login",sprintf("NET: server redirect: id=3D%i ip=3D%x port=3D=
%i AccountNr.:0x%08x\n",
 			id,gGameServerIP,gGameServerPort,gGameServerAccount))
-	print("DEBUG IP STRINGS",NtoA(gGameServerIP),GetHostByName(gLoginServerIP=
))
+	printdebug("login",sprintf("DEBUG IP STRINGS %s <> %s\n",NtoA(gGameServer=
IP),GetHostByName(gLoginServerIP)))
+
 	-- login & gameserver are not the same: redirect is received
---	if (gGameServerIP ~=3D gLoginServerIP) then -- <- this check should be =
used but currently crashes
-	if ( (gServerType[gServerEmulator]~=3D"RunUO") or gPolServer ) then
+	if (NtoA(gGameServerIP) ~=3D GetHostByName(gLoginServerIP)) then
 		--disconnect from Loginserver
 		printdebug("login","NET: disconnect from loginserver")
 		NetDisconnect()

Modified: trunk/data/lua/net.objects.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.objects.lua (original)
+++ trunk/data/lua/net.objects.lua Thu Jun 14 20:05:29 2007
@@ -141,7 +141,7 @@
 	if (newitem.amount > 1) then newitem.artid =3D newitem.artid + newitem.ar=
tid_addstack end
 	=

 	=

-	-- TODO : ?!?
+	-- TODO : corpse is spawned
 	if (newitem.artid =3D=3D hex2num("0x2006")) then
 		print("TODO: char died. sethue,setdirection,setascorpse")
 	end

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Thu Jun 14 20:05:29 2007
@@ -254,14 +254,14 @@
 static int l_OgreAddCompositor (lua_State *L) { PROFILE
 	const char *name =3D luaL_checkstring(L,1);
 	Ogre::CompositorManager::getSingleton().addCompositor(cOgreWrapper::GetSi=
ngleton().mViewport, name);
-//	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapp=
er::GetSingleton().mViewport, name, true);
+	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapper=
::GetSingleton().mViewport, name, true);
 	return 0;
 }
 =

 /// void OgreRemoveCompositor(compositor script name)
 static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
 	const char *name =3D luaL_checkstring(L,1);
-//	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapp=
er::GetSingleton().mViewport, name, false);
+	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapper=
::GetSingleton().mViewport, name, false);
 	Ogre::CompositorManager::getSingleton().removeCompositor(cOgreWrapper::Ge=
tSingleton().mViewport, name);
 	return 0;
 }



From no-reply at zwischenwelt.org  Thu Jun 14 23:17:37 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Jun 2007 21:17:37 -0000
Subject: [Iris-commit] [IRIS] r1195 - /trunk/src/scripting.cpp
Message-ID: <20070614211738.8B924B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Thu Jun 14 23:17:36 2007
New Revision: 1195

Log:
shadow stuff for mystiq

Modified:
    trunk/src/scripting.cpp

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Thu Jun 14 23:17:36 2007
@@ -1074,7 +1074,30 @@
 		=

 	return 0;
 }
-
+
+/// for lua :   void	  OgreSetShadowTexturePixelFormat  ()
+static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(Ogre:=
:PF_FLOAT16_R);
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
+static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
+	return 0;
+}
+
+/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
+	return 0;
+}
+	=

+/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
+	return 0;
+}
 =

 /// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
 static int l_OgreAmbientLight	(lua_State *L) { PROFILE  // TODO : move to =
seperate file ?
@@ -1482,6 +1505,10 @@
 	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
 	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
 	// shadow stuff
+	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
+	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
+	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
+	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
 	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
 	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
 =




From no-reply at zwischenwelt.org  Thu Jun 14 23:25:31 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Jun 2007 21:25:31 -0000
Subject: [Iris-commit] [IRIS] r1196 - /trunk/src/scripting.cpp
Message-ID: <20070614212531.687D0B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Thu Jun 14 23:25:31 2007
New Revision: 1196

Log:
more shadow stuff for mystiq

Modified:
    trunk/src/scripting.cpp

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Thu Jun 14 23:25:31 2007
@@ -1073,6 +1073,12 @@
 	}
 		=

 	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureSize  (int size)
+static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
+	return 0;
 }
 =

 /// for lua :   void	  OgreSetShadowTexturePixelFormat  ()
@@ -1504,7 +1510,8 @@
 	lua_register(L,"OgreRemoveCompositor",						l_OgreRemoveCompositor);
 	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
 	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
-	// shadow stuff
+	// shadow stuff	=

+	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
 	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
 	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
 	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);



From no-reply at zwischenwelt.org  Thu Jun 14 23:40:51 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Jun 2007 21:40:51 -0000
Subject: [Iris-commit] [IRIS] r1197 - in /trunk: bin/iris2.exe
	src/scripting.cpp
Message-ID: <20070614214055.00767B1466D@localhost.localdomain>

Author: sience
Date: Thu Jun 14 23:40:47 2007
New Revision: 1197

Log:
-new binary

Modified:
    trunk/bin/iris2.exe
    trunk/src/scripting.cpp

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Thu Jun 14 23:40:47 2007
@@ -1074,35 +1074,35 @@
 		=

 	return 0;
 }
-
-/// for lua :   void	  OgreSetShadowTextureSize  (int size)
-static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE  =

-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
-	return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTexturePixelFormat  ()
-static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE  =

-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(Ogre:=
:PF_FLOAT16_R);
-	return 0;
-}
-
-/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
-static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE  =

-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
-	return 0;
-}
-
-/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
-static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE =

-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
-	return 0;
-}
-	=

-/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
-static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
-	return 0;
+
+/// for lua :   void	  OgreSetShadowTextureSize  (int size)
+static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTexturePixelFormat  ()
+static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(Ogre:=
:PF_FLOAT16_R);
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
+static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSelfShadow(lua_to=
boolean(L,1));
+	return 0;
+}
+
+/// for lua :   void 	  OgreSetShadowTextureCasterMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureCasterMaterial			(lua_State *L) { PRO=
FILE =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureCasterMaterial(lu=
aL_checkstring(L,1));
+	return 0;
+}
+	=

+/// for lua :   void	  OgreSetShadowTextureReceiverMaterial  (sMatName)
+static int 				l_OgreSetShadowTextureReceiverMaterial	(lua_State *L) { PRO=
FILE  // TODO : move to seperate file ?
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureReceiverMaterial(=
luaL_checkstring(L,1));
+	return 0;
 }
 =

 /// for lua :   void OgreAmbientLight  (r,g,b) [color value 0..1 each]
@@ -1511,11 +1511,11 @@
 	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
 	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
 	// shadow stuff	=

-	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
-	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
-	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
-	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
-	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
+	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
+	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
+	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
+	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
+	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);
 	lua_register(L,"OgreShadowTechnique",				l_OgreShadowTechnique);
 	lua_register(L,"OgreAmbientLight",				l_OgreAmbientLight);
 =




From no-reply at zwischenwelt.org  Fri Jun 15 01:21:30 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 14 Jun 2007 23:21:30 -0000
Subject: [Iris-commit] [IRIS] r1198 - in /trunk/data: lua/lib.3d.map.lua
 lua/lib.static.lua lua/lib.terrain.lua models/textures/tex_260.png
 skippedfallbacks.lua
Message-ID: <20070614232131.4CF8CB1466D@localhost.localdomain>

Author: sience
Date: Fri Jun 15 01:21:27 2007
New Revision: 1198

Log:
-water texture changed
-static water fallbacks added to skippedfallbacks.lua
-watergroundfilter added - water looks now ok
-(pre) static to map water filter added


Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.static.lua
    trunk/data/lua/lib.terrain.lua
    trunk/data/models/textures/tex_260.png
    trunk/data/skippedfallbacks.lua

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Fri Jun 15 01:21:27 2007
@@ -167,7 +167,6 @@
 					entity.id =3D i
 					entity.iTileTypeID =3D iTileTypeID
 					entity.iHue =3D iHue
-					=

 					=

 					meshname =3D (not gForceFallBackBillboards_Statics) and GetStaticMesh=
Name(iTileTypeID,iHue)
 					if (meshname and meshname ~=3D "" and (not MeshIsPseudoBillBoard(iTil=
eTypeID))) then

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Fri Jun 15 01:21:27 2007
@@ -60,13 +60,23 @@
 function GetStaticMeshName (iTileTypeID,iHue)
 	-- hue default value is 0
 	iHue =3D iHue or 0
-	=

+
+--[[
+	-- filter static water
+	if ( ((iTileTypeID  >=3D 6038) and (iTileTypeID <=3D 6066)) or
+		 ((iTileTypeID  >=3D 13422) and (iTileTypeID <=3D 13445)) or
+		 ((iTileTypeID  >=3D 13460) and (iTileTypeID <=3D 13483)) or
+		 ((iTileTypeID  >=3D 13496) and (iTileTypeID <=3D 13514)) ) then
+		meshname=3Dnil
+		--map[(int)statics_p->y][(int) statics_p->x] =3D (int) statics_p->z + 12=
8 | 1024;
+	end
+]]--
+
 	local meshname =3D gLegacyModelCache[iTileTypeID.."_"..iHue]
 	if (meshname =3D=3D nil) then
-		=

 		--Seasonal Translation
 		local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeason=
Setting)
-		=

+
 		-- try to load the new models
 		if gUseNewModelLoader then
 			meshname =3D GetModelName(iTranslatedTileTypeID) -- "mdl_"..iTileTypeID=
..".mesh"

Modified: trunk/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.terrain.lua (original)
+++ trunk/data/lua/lib.terrain.lua Fri Jun 15 01:21:27 2007
@@ -18,6 +18,9 @@
 function GetTerrainMaterial (iTileTypeID,bLighting)
 	--Seasonal Translation
 	local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSet=
ting)
+
+	-- filter waterground
+	if ( (iTranslatedTileTypeID  >=3D 76) and (iTranslatedTileTypeID <=3D 112=
)) then return "" end
 =

 	--temporary for testing material/shader use for tiles (mystiqq) =

 	if (gTerrainShader and OgreMaterialNameKnown("tileid_" .. iTranslatedTile=
TypeID)) then  =


Modified: trunk/data/models/textures/tex_260.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Fri Jun 15 01:21:27 2007
@@ -301,3 +301,9 @@
 RegisterSkippedArtBillboardFallBack(7738) -- 0x1e3a name=3Dbearskin rug
 RegisterSkippedArtBillboardFallBack(7739) -- 0x1e3b name=3Dbearskin rug
 RegisterSkippedArtBillboardFallBack(7737) -- 0x1e39 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(6042) -- 0x179a name=3Dwater
+RegisterSkippedArtBillboardFallBack(6044) -- 0x179c name=3Dwater
+RegisterSkippedArtBillboardFallBack(6039) -- 0x1797 name=3Dwater
+RegisterSkippedArtBillboardFallBack(6041) -- 0x1799 name=3Dwater
+RegisterSkippedArtBillboardFallBack(6040) -- 0x1798 name=3Dwater
+RegisterSkippedArtBillboardFallBack(6043) -- 0x179b name=3Dwater



From no-reply at zwischenwelt.org  Fri Jun 15 21:58:05 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Jun 2007 19:58:05 -0000
Subject: [Iris-commit] [IRIS] r1199 - in /trunk/data: lua/lib.static.lua
 lua/lib.terrain.lua skippedfallbacks.lua
Message-ID: <20070615195806.16A95B1466C@localhost.localdomain>

Author: sience
Date: Fri Jun 15 21:58:04 2007
New Revision: 1199

Log:
-support for custom_models added (thx to ghouly)
-waterfilter added (coasts should look good now)
-skippedfallbacks added

Modified:
    trunk/data/lua/lib.static.lua
    trunk/data/lua/lib.terrain.lua
    trunk/data/skippedfallbacks.lua

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Fri Jun 15 21:58:04 2007
@@ -8,10 +8,19 @@
 end
 =

 -- returns path to the model file, for importing
--- TODO handle custom stuff?
-function GetModelPath(id)
+gCustomModelCache =3D {}
+function GetModelPath(id) =

+	local cached =3D gCustomModelCache[id]
+	if (cached) then return cached end
+
 	local base =3D id - math.mod(id,1000) + 1000
-	return sprintf(datapath.."models/models/to_%06d/mdl_%06d.mesh",base,id)
+	local relpath  =3D sprintf("models/to_%06d/mdl_%06d.mesh",base,id)
+	local custompath =3D datapath.."custom/"..relpath
+	if file_exists(custompath) then gCustomModelCache[id] =3D custompath  ret=
urn custompath end
+
+	local meshpath =3D datapath.."models/"..relpath
+	gCustomModelCache[id] =3D meshpath  =

+	return meshpath
 end
 =

 gHasModelOnlyOneUoArtCache =3D {}
@@ -54,29 +63,32 @@
 	end
 end
 =

--- generates or retrieves mehsname for static model
+-- generates or retrieves meshname for static model
 -- TODO : not flexible enough, what if model should be skipped, or multipl=
e models set ? or model depending on surrounding ?
 gLegacyModelCache =3D {}
 function GetStaticMeshName (iTileTypeID,iHue)
+	--Seasonal Translation
+	local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeasonS=
etting)
+
 	-- hue default value is 0
 	iHue =3D iHue or 0
 =

---[[
-	-- filter static water
-	if ( ((iTileTypeID  >=3D 6038) and (iTileTypeID <=3D 6066)) or
-		 ((iTileTypeID  >=3D 13422) and (iTileTypeID <=3D 13445)) or
-		 ((iTileTypeID  >=3D 13460) and (iTileTypeID <=3D 13483)) or
-		 ((iTileTypeID  >=3D 13496) and (iTileTypeID <=3D 13514)) ) then
-		meshname=3Dnil
+	-- FILTER: static water and map to extra material (one for shaders and on=
e for normal mode (because we dont have coastline models))
+	if (((iTranslatedTileTypeID  >=3D  6038) and (iTranslatedTileTypeID <=3D =
 6066)) or
+		((iTranslatedTileTypeID  >=3D 13422) and (iTranslatedTileTypeID <=3D 134=
45)) or
+		((iTranslatedTileTypeID  >=3D 13460) and (iTranslatedTileTypeID <=3D 134=
83)) or
+		((iTranslatedTileTypeID  >=3D 13496) and (iTranslatedTileTypeID <=3D 135=
14))) then
+		--return nil
 		--map[(int)statics_p->y][(int) statics_p->x] =3D (int) statics_p->z + 12=
8 | 1024;
+		if (gTerrainShader) then
+			iTranslatedTileTypeID=3D19999
+		else
+			iTranslatedTileTypeID=3D6040
+		end
 	end
-]]--
 =

 	local meshname =3D gLegacyModelCache[iTileTypeID.."_"..iHue]
 	if (meshname =3D=3D nil) then
-		--Seasonal Translation
-		local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeason=
Setting)
-
 		-- try to load the new models
 		if gUseNewModelLoader then
 			meshname =3D GetModelName(iTranslatedTileTypeID) -- "mdl_"..iTileTypeID=
..".mesh"
@@ -108,7 +120,7 @@
 			printdebug("static","used OLD model loader:",iTranslatedTileTypeID,iHue=
,meshname)
 		end
 		=

-		if (meshname =3D=3D "") then meshname =3D false end
+		if (meshname =3D=3D "") then meshname =3D nil end
 		gLegacyModelCache[iTileTypeID.."_"..iHue] =3D meshname
 	end
 	return meshname
@@ -116,7 +128,7 @@
 =

 -- called by the c methods of LegacyModelAndTextureLoader, has to return a=
 material name, used for statics
 gLegacyModelMaterialCache =3D {}
-function LegacyModelLoader_GetMaterial (iModelID,iTextureID) =

+function LegacyModelLoader_GetMaterial (iModelID,iTextureID)
 	local matname =3D gLegacyModelMaterialCache[iTextureID]
 	if ((not matname)) then =

 		if (iTextureID >=3D 0) then =


Modified: trunk/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.terrain.lua (original)
+++ trunk/data/lua/lib.terrain.lua Fri Jun 15 21:58:04 2007
@@ -19,12 +19,12 @@
 	--Seasonal Translation
 	local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSet=
ting)
 =

-	-- filter waterground
-	if ( (iTranslatedTileTypeID  >=3D 76) and (iTranslatedTileTypeID <=3D 112=
)) then return "" end
+	-- FILTER: Groundmaptiles (not really needed)
+--	if ( gTerrainShader and (iTranslatedTileTypeID  >=3D 76) and (iTranslat=
edTileTypeID <=3D 112)) then return "" end
 =

 	--temporary for testing material/shader use for tiles (mystiqq) =

 	if (gTerrainShader and OgreMaterialNameKnown("tileid_" .. iTranslatedTile=
TypeID)) then  =

-		return "tileid_" .. iTranslatedTileTypeID  =

+		return "tileid_" .. iTranslatedTileTypeID
 	end
 =

 	local matname =3D gTerrainMaterialCache[iTileTypeID]

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Fri Jun 15 21:58:04 2007
@@ -307,3 +307,6 @@
 RegisterSkippedArtBillboardFallBack(6041) -- 0x1799 name=3Dwater
 RegisterSkippedArtBillboardFallBack(6040) -- 0x1798 name=3Dwater
 RegisterSkippedArtBillboardFallBack(6043) -- 0x179b name=3Dwater
+RegisterSkippedArtBillboardFallBack(6065) -- 0x17b1 name=3Dwater
+RegisterSkippedArtBillboardFallBack(6795) -- 0x1a8b name=3Dore cart
+RegisterSkippedArtBillboardFallBack(6790) -- 0x1a86 name=3Dore cart



From no-reply at zwischenwelt.org  Sat Jun 16 00:38:09 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 15 Jun 2007 22:38:09 -0000
Subject: [Iris-commit] [IRIS] r1200 - in /trunk/bin: d3dx9_33.dll iris2.exe
Message-ID: <20070615223809.521D5B1466D@localhost.localdomain>

Author: sience
Date: Sat Jun 16 00:38:09 2007
New Revision: 1200

Log:
-temp. i add d3dx9_33.dll to unstable (without it users have problems)
-new binary

Added:
    trunk/bin/d3dx9_33.dll   (with props)
Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat Jun 16 13:20:49 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 16 Jun 2007 11:20:49 -0000
Subject: [Iris-commit] [IRIS] r1201 - in /trunk: data/lua/main.lua
 src/ogrewrapper.cpp src/scripting.cpp
Message-ID: <20070616112050.4339EB1466D@localhost.localdomain>

Author: sience
Date: Sat Jun 16 13:20:48 2007
New Revision: 1201

Log:
-just a little compositor test (currently doesn't work)

Modified:
    trunk/data/lua/main.lua
    trunk/src/ogrewrapper.cpp
    trunk/src/scripting.cpp

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Sat Jun 16 13:20:48 2007
@@ -202,9 +202,13 @@
 	BindInGameKeys()
 =

 	print("Welcome to Iris")
+--	OgreAddCompositor(GetMainViewport(), "Ogre/Compositor/BlackAndWhite")
 =

 	gInGameStarted =3D true
 end
+-- currently no deinit of compositor test
+-- OgreRemoveCompositor(GetMainViewport() , "Ogre/Compositor/BlackAndWhite=
")
+
 =

 -- called every frame, after all timer-steppers, see Step() in lib.time.lua
 function MainStep (curticks)
@@ -215,7 +219,6 @@
 =

 	NetStep()
 =

---	OgreAddCompositor("Ogre/Compositor/BlackAndWhite")
 	if (gInGameStarted) then
 		gCurrentRenderer:UpdateMap()
 		gCurrentRenderer:MousePickStep()
@@ -228,7 +231,6 @@
 	else
 		StepMainMenu()
 	end
---	OgreRemoveCompositor("Ogre/Compositor/BlackAndWhite")
 =

 	StepDebugMenu()
 	gui.Step()

Modified: trunk/src/ogrewrapper.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/ogrewrapper.cpp (original)
+++ trunk/src/ogrewrapper.cpp Sat Jun 16 13:20:48 2007
@@ -638,7 +638,7 @@
 }
 =

 void	cOgreWrapper::TakeScreenshot	(const char* szDirPath) {PROFILE
-	mWindow->writeContentsToFile( strprintf( "%s%d.jpg", szDirPath, cShell::G=
etTicks() ) );
+	mWindow->writeContentsToFile( strprintf( "%s%d.png", szDirPath, cShell::G=
etTicks() ) );
 }
 =

 std::string		cOgreWrapper::GetUniqueName () {PROFILE

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Sat Jun 16 13:20:48 2007
@@ -252,18 +252,35 @@
 =

 /// void OgreAddCompositor(compositor script name)
 static int l_OgreAddCompositor (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	Ogre::CompositorManager::getSingleton().addCompositor(cOgreWrapper::GetSi=
ngleton().mViewport, name);
-	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapper=
::GetSingleton().mViewport, name, true);
-	return 0;
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+//	printf("pViewport=3D%08x\n",pViewport);
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().addCompositor(pViewport, name);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, true);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
 }
 =

 /// void OgreRemoveCompositor(compositor script name)
 static int l_OgreRemoveCompositor (lua_State *L) { PROFILE
-	const char *name =3D luaL_checkstring(L,1);
-	Ogre::CompositorManager::getSingleton().setCompositorEnabled(cOgreWrapper=
::GetSingleton().mViewport, name, false);
-	Ogre::CompositorManager::getSingleton().removeCompositor(cOgreWrapper::Ge=
tSingleton().mViewport, name);
-	return 0;
+	Ogre::Viewport* pViewport =3D cLuaBind<cViewport>::checkudata_alive(L,1)-=
>mpViewport;
+	if (pViewport)
+	{
+		const char *name =3D luaL_checkstring(L,2);
+		Ogre::CompositorManager::getSingleton().setCompositorEnabled(pViewport, =
name, false);
+		Ogre::CompositorManager::getSingleton().removeCompositor(pViewport, name=
);
+	}
+	else
+	{
+		return false;
+	}
+	return true;
 }
 =

 /// int =3D OgreMemoryUsage(part)



From no-reply at zwischenwelt.org  Sat Jun 16 13:34:55 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 16 Jun 2007 11:34:55 -0000
Subject: [Iris-commit] [IRIS] r1202 - in /trunk/include: data.h
	spritemanager.h
Message-ID: <20070616113456.0AEC8B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Sat Jun 16 13:34:54 2007
New Revision: 1202

Log:
ported secure-memory-write for dataloaders from knut branch

Modified:
    trunk/include/data.h
    trunk/include/spritemanager.h

Modified: trunk/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data.h (original)
+++ trunk/include/data.h Sat Jun 16 13:34:54 2007
@@ -34,10 +34,23 @@
 #define STRUCT_PACKED	__attribute__ ((packed))
 #endif
 =

- =

 class FileNotFoundException : public std::runtime_error { public:
 	FileNotFoundException(const std::string& sFilePath) : std::runtime_error(=
"FileNotFoundException : "+sFilePath) { }
 };
+
+
+/// use this to prevent access violations during decoding
+/// destbuf_size is in bytes
+inline	bool	SecureWrite	(short* destpos,short value,const short* destbuf_s=
tart,const int destbuf_size,const char* szErrorMsg,const int iErrorID) {
+	static int iLastErrorID =3D -1;
+	if (destpos < destbuf_start || destpos >=3D (short*)(((char*)destbuf_star=
t) + destbuf_size)) {
+		if (iLastErrorID !=3D iErrorID) printf("Warning ! access violation %s fo=
r id %d\n",szErrorMsg,iErrorID);
+		iLastErrorID =3D iErrorID; // only print one error per id
+		return false;
+	}
+	*destpos =3D value;
+	return true;
+}
  =

 class TiXmlHandle;
 =

@@ -546,7 +559,7 @@
 		if ((value >> 10) & 0x1F =3D=3D (value >> 5) & 0x1F && (value >> 10) & 0=
x1F =3D=3D value & 0x1F) {
 			return ColorTable[(value >> 10) & 0x1F] | 0x8000;
 		} else {
-			return value;
+			return value | 0x8000;
 		}
 	} };
 =

@@ -598,6 +611,8 @@
 		int	GetHeight	();
 		void	SearchCursorHotspot		(int& iX,int& iY); ///< returns hotspot coords=
 in iX,iY. search using different pixel on image border
 		template <class _T> void Decode( short *pBuffer, const int iPitch, _T& f=
ilter, short* ColorTable ) { PROFILE	///< decodes the art image into a pixe=
lbuffer (1short/pixel), pitch=3DLength of a surface scanline in bytes
+			int		iBufferSize =3D iPitch*GetHeight();
+			=

 			if( miID < 0x4000 ){
 				//map tile format, 44x44 pixel
 				short *dst =3D pBuffer;
@@ -609,7 +624,7 @@
 				for(int pixelsInHalfRow =3D 1;pixelsInHalfRow <=3D 22;++pixelsInHalfRo=
w){
 					dst +=3D 22-pixelsInHalfRow;
 					for( int i=3D0; i < pixelsInHalfRow*2; i++ ) {
-						*dst =3D filter( *src, ColorTable );
+						SecureWrite(dst,filter( *src, ColorTable ),pBuffer,iBufferSize,"cArt=
Map::Decode_A",miID);
 						dst++;
 						src++;
 					}
@@ -620,7 +635,7 @@
 				for(int pixelsInHalfRow =3D 22;pixelsInHalfRow >=3D 1;--pixelsInHalfRo=
w){
 					dst +=3D 22-pixelsInHalfRow;
 					for( int i=3D0; i < pixelsInHalfRow*2; i++ ) {
-						*dst =3D filter( *src, ColorTable );
+						SecureWrite(dst,filter( *src, ColorTable ),pBuffer,iBufferSize,"cArt=
Map::Decode_B",miID);
 						dst++;
 						src++;
 					}
@@ -660,7 +675,7 @@
 								++index;
 								short *pixel =3D (short *) (((char *)(pBuffer + X)) + (Y*iPitch));
 								if ( runColor !=3D 0 ) //is this check really necessary?
-									*pixel =3D filter( runColor, ColorTable );
+									SecureWrite(pixel,filter( runColor, ColorTable ),pBuffer,iBufferS=
ize,"cArtMap::Decode_C",miID);
 								++X;
 							}
 						}
@@ -716,29 +731,34 @@
 		template <class _T> void Decode(short *pBuffer, const int iPitch, _T& fi=
lter, short* ColorTable) { PROFILE	//< decodes the gump image into a pixelb=
uffer (1short/pixel), pitch=3DLength of a surface scanline in bytes
 			int w =3D GetWidth();
 			int h =3D GetHeight();
-
-			// run length encoded: COL RUN COL RUN ...
+			int	iBufferSize =3D iPitch*GetHeight();
+
+			long *LookupList =3D (long *)mpRawData;
+			char *pStart =3D mpRawData;
 				=

-			int len =3D mpRawIndex->miLength/2;
-			short *pstart =3D (short *)mpRawData;
-			short col,run;
-			short *rowStart =3D pBuffer;
-			short *rowPos =3D pBuffer;
-			for(short *p =3D pstart; p-pstart < len; p+=3D2){
-				col =3D *p;
-				run =3D *(p+1);
-				if(run > w-(rowPos-rowStart))run =3D w-(rowPos-rowStart);
-
-				for(int i=3D0;i<run;++i){
-					if( col > 0 )
-						*rowPos =3D filter( col, ColorTable );
-					++rowPos;
+			for(int Y =3D 0; Y < h; Y++) {
+				int Size;
+				if (Y < h-1) {
+					Size =3D LookupList[Y+1] - LookupList[Y];
+				} else {
+					Size =3D mpRawIndex->miLength / 4 - LookupList[Y];
 				}
 	=

-				// buffer line end? need to pitch?
-				if( (w-(rowPos-rowStart)) =3D=3D 0){
-					rowStart =3D (short *)(((char *)rowStart)+iPitch);
-					rowPos =3D rowStart;
+				int X =3D 0;
+				short *Value	=3D (short *)(pStart + LookupList[Y]*4);
+				short *Run		=3D (short *)(pStart + LookupList[Y]*4 + 2);
+				for(int i =3D 0; i < Size; i++) {
+					if (*Value > 0) {
+						for(int j =3D 0; j < *Run; j++) {
+							SecureWrite( (short *)(((char*)(pBuffer + X)) + Y*iPitch), filter( =
*Value, ColorTable ), pBuffer, iBufferSize, "cGump::Decode", miID );
+							X++;
+						}
+					} else {
+						X +=3D *Run;
+					}
+
+					Value +=3D 2;
+					Run +=3D 2;
 				}
 			}
 		}
@@ -822,28 +842,29 @@
 			=

 			/// allocates and returns a buffer in the pBuffer param
 			template <class _T> bool Decode(short* &pBuffer, const int iFrame, _T& =
filter, short* ColorTable) { PROFILE
-				uint16* Palette =3D (uint16 *)mpRawData;
-				mpRawData +=3D 512;
-
-				mFrames =3D *(uint32 *)mpRawData;
-				mpRawData +=3D 4;
-
-				uint32* LookupList =3D (uint32 *)mpRawData;
+				const char*	pMyRawData =3D mpRawData;
+				uint16* Palette =3D (uint16 *)pMyRawData;
+				pMyRawData +=3D 512;
+
+				mFrames =3D *(uint32 *)pMyRawData;
+				pMyRawData +=3D 4;
+
+				uint32* LookupList =3D (uint32 *)pMyRawData;
 				=

 				if (iFrame >=3D mFrames) {
 					return false;
 				}
 =

-				mpRawData +=3D LookupList[ iFrame ] - 4;
-
-				mCenterX =3D *(int16 *)mpRawData;
-				mpRawData +=3D 2;
-				mCenterY =3D *(int16 *)mpRawData;
-				mpRawData +=3D 2;
-				mWidth =3D *(uint16 *)mpRawData;
-				mpRawData +=3D 2;
-				mHeight =3D *(uint16 *)mpRawData;
-				mpRawData +=3D 2;
+				pMyRawData +=3D LookupList[ iFrame ] - 4;
+
+				mCenterX =3D *(int16 *)pMyRawData;
+				pMyRawData +=3D 2;
+				mCenterY =3D *(int16 *)pMyRawData;
+				pMyRawData +=3D 2;
+				mWidth =3D *(uint16 *)pMyRawData;
+				pMyRawData +=3D 2;
+				mHeight =3D *(uint16 *)pMyRawData;
+				pMyRawData +=3D 2;
 				=

 				mTexWidth =3D 1;
 				while (mTexWidth < mWidth) {
@@ -855,15 +876,16 @@
 				}
 =

 				pBuffer =3D new short[mTexWidth*mTexHeight];
-				memset( pBuffer, 0, mTexWidth*mTexHeight*2 );
-
-				uint32 Header =3D *(uint32 *)mpRawData;
-				mpRawData +=3D 4;
+				int		iBufferSize =3D 2*mTexWidth*mTexHeight;
+				memset( pBuffer, 0, iBufferSize );
+
+				uint32 Header =3D *(uint32 *)pMyRawData;
+				pMyRawData +=3D 4;
 =

 				while (Header !=3D 0x7FFF7FFF) {
 					uint16 xRun =3D Header & 0xFFF;
-					uint32 xOffset =3D ( Header >> 22 ) & 1023;
-					uint32 yOffset =3D ( Header >> 12 ) & 1023;
+					int32 xOffset =3D ( Header >> 22 ) & 1023;
+					int32 yOffset =3D ( Header >> 12 ) & 1023;
 =

 					if (xOffset & 0x200) {
 						xOffset =3D xOffset | ( 0xFFFFFFFF - 511 );
@@ -873,20 +895,21 @@
 						yOffset =3D yOffset | ( 0xFFFFFFFF - 511 );
 					}
 =

-					uint16 PX =3D xOffset + mCenterX;
-					uint16 PY =3D yOffset + mCenterY + mHeight;
-
-					char* RunPixels =3D (char*)mpRawData;
-					mpRawData +=3D xRun;
+					int16 PX =3D xOffset + mCenterX;
+					int16 PY =3D yOffset + mCenterY + mHeight;
+
+					unsigned char* RunPixels =3D (unsigned char*)pMyRawData;
+					pMyRawData +=3D xRun;
 =

 					for ( int k=3D0; k < xRun; k++ ) {
 						if ( ((PX+k) >=3D 0) && (PY >=3D 0) && ((PX+k) < mTexWidth) && (PY <=
 mTexHeight) ) {
-							pBuffer[ PY*mTexWidth + PX + k ] =3D filter( Palette[ RunPixels[k] =
], ColorTable );
+							SecureWrite(&pBuffer[ PY*mTexWidth + PX + k ],filter( Palette[ RunP=
ixels[k] ], ColorTable ),pBuffer,iBufferSize,"cAnim::Decode",miID);
+							//SecureWrite(&pBuffer[ PY*mTexWidth + PX + k ],0x1F,pBuffer,iBuffe=
rSize,"cAnim::Decode",miID);
 						}
 					}
 =

-					Header =3D *(uint32 *)mpRawData;
-					mpRawData +=3D 4;
+					Header =3D *(uint32 *)pMyRawData;
+					pMyRawData +=3D 4;
 				}
 				=

 				return true;

Modified: trunk/include/spritemanager.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/spritemanager.h (original)
+++ trunk/include/spritemanager.h Sat Jun 16 13:34:54 2007
@@ -4,38 +4,38 @@
 #include "smartptr.h"
 #include "robrenderable.h"
 =

-#include <Ogre.h>
+#include <Ogre.h>
 #include <OgreRenderQueueListener.h>
 #include <OgreFontManager.h>
 =

-#include <string>
-#include <list>
-
-class cSpriteManager;
-class cSpriteQueue;
-class lua_State;
-
-struct Normal {
-	double x, y, z;
-};
-
-class cBaseSprite : public cSmartPointable {
+#include <string>
+#include <list>
+
+class cSpriteManager;
+class cSpriteQueue;
+class lua_State;
+
+struct Normal {
+	double x, y, z;
+};
+
+class cBaseSprite : public cSmartPointable {
 	protected :
-		cSpriteQueue* mSpriteQueue;
+		cSpriteQueue* mSpriteQueue;
 		int mPrio[6];
-		int mPos;
-	public :
-		cBaseSprite( cSpriteQueue* SpriteQueue ) {
-			mSpriteQueue =3D SpriteQueue;
-
+		int mPos;
+	public :
+		cBaseSprite( cSpriteQueue* SpriteQueue ) {
+			mSpriteQueue =3D SpriteQueue;
+
 			for (int i=3D0; i < 6; i++)
 				mPrio[i] =3D 0;
-			mPos =3D 0;
-		}
-		virtual ~cBaseSprite() {};
-
-		void SetPrio( int i, int Prio );
-
+			mPos =3D 0;
+		}
+		virtual ~cBaseSprite() {};
+
+		void SetPrio( int i, int Prio );
+
 		inline int GetPrio( int i ) {
 			return i < 6 ? mPrio[i] : 0;
 		}
@@ -46,12 +46,12 @@
 =

 		inline void SetPosition( int Pos ) {
 			mPos =3D Pos;
-		}
-
-		inline int GetQueueId();
-
-		virtual void Execute( double ViewPortWidthHalf, double ViewPortHeightHal=
f, double xOffset, double yOffset );
-};
+		}
+
+		inline int GetQueueId();
+
+		virtual void Execute( double ViewPortWidthHalf, double ViewPortHeightHal=
f, double xOffset, double yOffset );
+};
 =

 class cSprite : public cBaseSprite {
 	private :		=

@@ -308,8 +308,8 @@
 		cSpriteQueue( cSpriteManager* SpriteManager, int QueueId );
 		virtual ~cSpriteQueue();
 =

-		inline void SetSortList() {
-			mListSorted =3D false;
+		inline void SetSortList() {
+			mListSorted =3D false;
 		}
 =

 		inline bool GetResorted() {
@@ -344,11 +344,11 @@
 		bool mUseWorldCam;
 =

 		void prepareForRender();
-		void renderBuffer();		=

+		void renderBuffer();		=

 =

 		Ogre::SceneManager* mSceneMan;
 		Ogre::Camera* mCam;
-		Ogre::uint8 mTargetQueue;
+		Ogre::uint8 mTargetQueue;
 		bool mAfterQueue;
 		bool mLightningEnabled;
 =

@@ -362,6 +362,9 @@
 		void RemoveSprite( cBaseSprite* Sprite );
 =

 		inline bool GetResorted( int iQueueId ) {
+			if (mSpriteQueues.find(iQueueId) =3D=3D mSpriteQueues.end()) {
+				return false;
+			}
 			cSpriteQueue* SpriteQueue =3D mSpriteQueues[ iQueueId ];
 			if (SpriteQueue) {
 				return SpriteQueue->GetResorted();
@@ -385,10 +388,10 @@
 			return mCam;
 		}
 =

-		/// Called by Ogre, for being a render queue listener
-		virtual void renderQueueStarted( =

-			Ogre::uint8 queueGroupId, const Ogre::String &invocation, bool &skipThi=
sInvocation);
-		/// Called by Ogre, for being a render queue listener
+		/// Called by Ogre, for being a render queue listener
+		virtual void renderQueueStarted( =

+			Ogre::uint8 queueGroupId, const Ogre::String &invocation, bool &skipThi=
sInvocation);
+		/// Called by Ogre, for being a render queue listener
 		virtual void renderQueueEnded(
 			Ogre::uint8 queueGroupId, const Ogre::String &invocation, bool &repeatT=
hisInvocation);
 =




From no-reply at zwischenwelt.org  Sat Jun 16 13:49:27 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 16 Jun 2007 11:49:27 -0000
Subject: [Iris-commit] [IRIS] r1203 - in /trunk: bin/iris2.exe
	src/ogrewrapper.cpp
Message-ID: <20070616114931.67167B1466D@localhost.localdomain>

Author: sience
Date: Sat Jun 16 13:49:25 2007
New Revision: 1203

Log:
-screenshots are now PNG
-new namebuild added for screenshots
-new binary

Modified:
    trunk/bin/iris2.exe
    trunk/src/ogrewrapper.cpp

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/src/ogrewrapper.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/ogrewrapper.cpp (original)
+++ trunk/src/ogrewrapper.cpp Sat Jun 16 13:49:25 2007
@@ -1,766 +1,770 @@
-#include "prefix.h"
-#include "ogrewrapper.h"
-#include "input.h"
-#include "robstring1.2.h"
-#include <Ogre.h>
-/*
-#include <OgreInput.h>
-#include <OgreInputEvent.h>
-#include <OgreEventListeners.h>
-#include <OgreKeyEvent.h>
-#include <OgreOverlay.h>
-#include <OgreOverlayManager.h>
-#include <OgrePanelOverlayElement.h>
-#include <OgreTextAreaOverlayElement.h>
-#include <OgreWireBoundingBox.h>
-#include <SDL/SDL.h>
-*/
-#include <OIS/OIS.h>
-#include <map>
-#include "shell.h"
-#include "timer.h"
-#include "ColourClipPaneOverlay.h"
-#include "ColourClipTextOverlay.h"
-#include "BorderColourClipPaneOverlay.h"
-#include "SortedOverlayContainer.h"
-#include "RobRenderableOverlay.h"
-#include "widget.h"
-#include "meshshape.h"
-#include "game.h"
-
-#include "CompassOverlay.h"
-
-using namespace OIS;
-using namespace Ogre;
-Ogre::LogManager* gLogMan =3D 0;
-
-
-void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
-
-cOgreUserObjectWrapper::cOgreUserObjectWrapper() : mpEntity(0), miType(0) =
{}
-cOgreUserObjectWrapper::~cOgreUserObjectWrapper() {}
-long cOgreUserObjectWrapper::getTypeID(void) const { return 23; }
-const Ogre::String& cOgreUserObjectWrapper::getTypeName(void) const { stat=
ic Ogre::String eris("shiva"); return eris; }
-
-
-cOgreWrapper::cOgreWrapper() : mRoot(0) {PROFILE
-    mCamera =3D 0;
-    mViewport =3D 0;
-    mSceneMgr =3D 0;
-    mWindow =3D 0;
-	mInputManager =3D 0;
-	mMouse =3D 0;
-	mKeyboard =3D 0;
-	mJoy =3D 0;
-}
-
-int gLastWinLeft =3D 0;
-int gLastWinTop =3D 0;
-
-/// warning, evil hack, since this is not really supported by ogre
-void	OgreForceCloseFullscreen () {
-	// found no other way to hide the window, setVisible and mWindow->destroy=
() didn't work
-	// arg, even mRoot->shutdown() didn't work
-	delete cOgreWrapper::GetSingleton().mRoot;
-    cOgreWrapper::GetSingleton().mCamera =3D 0;
-    cOgreWrapper::GetSingleton().mViewport =3D 0;
-    cOgreWrapper::GetSingleton().mSceneMgr =3D 0;
-    cOgreWrapper::GetSingleton().mWindow =3D 0;
-	cOgreWrapper::GetSingleton().mInputManager =3D 0;
-	cOgreWrapper::GetSingleton().mMouse =3D 0;
-	cOgreWrapper::GetSingleton().mKeyboard =3D 0;
-	cOgreWrapper::GetSingleton().mJoy =3D 0;
-
-	char* szPluginCfgPath =3D "plugins.cfg";
-	#ifdef WIN32
-	#else
-	szPluginCfgPath =3D "plugins_linux.cfg";
-	#endif
-	printf("ogre deinit ok, reinit...\n");
-	cOgreWrapper::GetSingleton().mRoot =3D new Root(szPluginCfgPath);
-}
-
-/// only call this once at startup
-bool	cOgreWrapper::Init			() {PROFILE
-	static bool bInitialised =3D false;
-	if (bInitialised) return false;
-	bInitialised =3D true;
-
-	// create custom logmanager so ogre doesn't dump all that junk onto the c=
onsole
-	gLogMan =3D new LogManager();
-	bool suppressFileOutput =3D false;
-	gLogMan->createLog("Ogre.log", true, false,suppressFileOutput);
-	//gLogMan->createLog(logFileName, true, true);
-
-	char* szPluginCfgPath =3D "plugins.cfg";
-	#ifdef WIN32
-	#else
-	szPluginCfgPath =3D "plugins_linux.cfg";
-	#endif
-	mRoot =3D new Root(szPluginCfgPath);
-
-
-
-	//setupResources();
-	{
-        // Load resource paths from config file
-        ConfigFile cf;
-        cf.load("resources.cfg");
-
-        // Go through all sections & settings in the file
-        ConfigFile::SectionIterator seci =3D cf.getSectionIterator();
-
-        String secName, typeName, archName;
-        while (seci.hasMoreElements())
-        {
-            secName =3D seci.peekNextKey();
-            ConfigFile::SettingsMultiMap *settings =3D seci.getNext();
-            ConfigFile::SettingsMultiMap::iterator i;
-            for (i =3D settings->begin(); i !=3D settings->end(); ++i)
-            {
-                typeName =3D i->first;
-                archName =3D i->second;
-                ResourceGroupManager::getSingleton().addResourceLocation(
-                    archName, typeName, secName);
-            }
-        }
-	}
-
-	bool bWinDebug =3D false;
-	//bool carryOn =3D configure();
-	//if (!carryOn) return false;
-	if (!mRoot->restoreConfig() && !mRoot->showConfigDialog()) return false;
-//	mRoot->getRenderSystem()->setConfigOption("RTT Preferred Mode","Copy");=
 // todo : set via lua ?
-	if (bWinDebug) printf("windebug safepoint -2\n");
-	mRoot->getRenderSystem()->setWaitForVerticalBlank(false);
-	mWindow =3D mRoot->initialise(true,"Iris2");
-	if (bWinDebug) printf("windebug safepoint -1\n");
-
-	//printf("\n\n Ogre Root-Init Successful\n\n");
-
-	if (1) {
-		bool bufferedKeys =3D true;
-		bool bufferedMouse =3D true;
-		bool bufferedJoy =3D true;
-		ParamList pl;
-		size_t windowHnd =3D 0;
-		std::ostringstream windowHndStr;
-
-		mWindow->getCustomAttribute("WINDOW", &windowHnd);
-		windowHndStr << windowHnd;
-		pl.insert(std::make_pair(std::string("WINDOW"), windowHndStr.str()));
-		#if defined OIS_WIN32_PLATFORM
-		//Default mode is foreground exclusive..but, we want to show mouse - so =
nonexclusive
-		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_FO=
REGROUND" )));
-		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_NO=
NEXCLUSIVE")));
-		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_FOREGROUND")));
-		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_NONEXCLUSIVE")));
-		/*
-		temp["DISCL_BACKGROUND"]	=3D DISCL_BACKGROUND;
-		temp["DISCL_EXCLUSIVE"]		=3D DISCL_EXCLUSIVE;
-		temp["DISCL_FOREGROUND"]	=3D DISCL_FOREGROUND;
-		temp["DISCL_NONEXCLUSIVE"]	=3D DISCL_NONEXCLUSIVE;
-		temp["DISCL_NOWINKEY"]		=3D DISCL_NOWINKEY;
-		*/
-		#elif defined OIS_LINUX_PLATFORM
-		//For this demo, show mouse and do not grab (confine to window)
-		pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("fal=
se")));
-		pl.insert(std::make_pair(std::string("x11_mouse_hide"), std::string("fal=
se")));
-		pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("=
false")));
-		pl.insert(std::make_pair(std::string("XAutoRepeatOn"), std::string("true=
")));
-		#endif
-
-		mInputManager =3D InputManager::createInputSystem( pl );
-
-		//Create all devices (We only catch joystick exceptions here, as, most p=
eople have Key/Mouse)
-		mKeyboard =3D static_cast<Keyboard*>(mInputManager->createInputObject( O=
ISKeyboard, bufferedKeys ));
-		// init tranlation mode (Unicode or Ascii)
-		if (mKeyboard) {
-			OIS::Keyboard::TextTranslationMode myTextTranslationMode =3D OIS::Keybo=
ard::Ascii;
-			mKeyboard->setTextTranslation(myTextTranslationMode);
-			if (mKeyboard->getTextTranslation() !=3D myTextTranslationMode) {
-				DisplayErrorMessage(strprintf("failed initialising OIS TextTranslation=
Mode : %s\n",(myTextTranslationMode=3D=3DOIS::Keyboard::Ascii)?"asci":"unic=
ode").c_str());
-				exit(12);
-			}
-		}
-		mMouse =3D static_cast<Mouse*>(mInputManager->createInputObject( OISMous=
e, bufferedMouse ));
-		/*
-		try {
-			mJoy =3D static_cast<JoyStick*>(mInputManager->createInputObject( OISJo=
yStick, bufferedJoy ));
-		}
-		catch(...) {
-			mJoy =3D 0;
-		}
-		*/
-
-		class cMyOISListener : public KeyListener, public MouseListener { public:
-			cInput& input;
-			cMyOISListener() : input(cInput::GetSingleton()) {}
-
-			bool keyPressed( const KeyEvent &arg ) {
-				if (0) std::cout << "\nKeyPressed {" << arg.key
-					<< ", " << ((Keyboard*)(arg.device))->getAsString(arg.key)
-					<< "} || Character (" << (char)arg.text << ")" << std::endl;
-
-				input.KeyDown(input.KeyConvertOIS(arg.key),(char)arg.text);
-
-
-				return true;
-			}
-			bool keyReleased( const KeyEvent &arg ) {
-				input.KeyUp( input.KeyConvertOIS(arg.key));
-				return true;
-			}
-			bool mouseMoved( const MouseEvent &arg ) {
-				const OIS::MouseState& s =3D arg.state;
-				if (0) std::cout << "\nMouseMoved: Abs("
-						  << s.X.abs << ", " << s.Y.abs << ", " << s.Z.abs << ") Abs2("
-						  << (s.X.abs-gLastWinLeft) << ", " << (s.Y.abs-gLastWinTop) << ", "=
 << s.Z.abs << ") Rel("
-						  << s.X.rel << ", " << s.Y.rel << ", " << s.Z.rel << ")";
-
-				cInput::iMouse[0] =3D s.X.abs; //-gLastWinLeft;
-				cInput::iMouse[1] =3D s.Y.abs; //-gLastWinTop;
-				if (s.Z.rel < 0) { input.KeyDown(cInput::kkey_wheelup); input.KeyUp(cI=
nput::kkey_wheelup); }
-				if (s.Z.rel > 0) { input.KeyDown(cInput::kkey_wheeldown); input.KeyUp(=
cInput::kkey_wheeldown); }
-				return true;
-			}
-			bool mousePressed( const MouseEvent &arg, MouseButtonID id ) {
-				if (0) std::cout << "\nMousePressed: " << id;
-
-				switch (id) {
-					case MB_Left: input.KeyDown(cInput::kkey_mouse1); break;
-					case MB_Right: input.KeyDown(cInput::kkey_mouse2); break;
-					case MB_Middle: input.KeyDown(cInput::kkey_mouse3); break;
-				}
-
-				return true;
-			}
-			bool mouseReleased( const MouseEvent &arg, MouseButtonID id ) {
-				if (0) std::cout << "\nMouseReleased: " << id;
-
-				switch (id) {
-					case MB_Left: input.KeyUp(cInput::kkey_mouse1); break;
-					case MB_Right: input.KeyUp(cInput::kkey_mouse2); break;
-					case MB_Middle: input.KeyUp(cInput::kkey_mouse3); break;
-				}
-
-				return true;
-			}
-		};
-		cMyOISListener* pMyOISListener =3D new cMyOISListener();
-
-		mKeyboard->setEventCallback(pMyOISListener);
-		mMouse->setEventCallback(pMyOISListener);
-
-		class cMyWindowListener : public Ogre::WindowEventListener { public:
-			virtual void windowMoved(RenderWindow* rw) {
-				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
-				unsigned int width, height, depth;
-				int left, top;
-				rw->getMetrics(width, height, depth, left, top);
-				gLastWinLeft =3D left;
-				gLastWinTop =3D top;
-				//printf("windowMoved, l,t=3D%d,%d\n",left,top); commented out by spam=
filter...
-			}
-
-			//Adjust mouse clipping area
-			virtual void windowResized(RenderWindow* rw)
-			{
-				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
-				unsigned int width, height, depth;
-				int left, top;
-				rw->getMetrics(width, height, depth, left, top);
-
-				const OIS::MouseState &ms =3D cOgreWrapper::GetSingleton().mMouse->get=
MouseState();
-				ms.width =3D width;
-				ms.height =3D height;
-
-				// notify game that window was resized
-				cGame::GetSingleton().NotifyMainWindowResized(width,height);
-			}
-
-			//Unattach OIS before window shutdown (very important under Linux)
-			virtual void windowClosed(RenderWindow* rw)
-			{
-				//Only close for window that created OIS (the main window in these dem=
os)
-				if( rw =3D=3D cOgreWrapper::GetSingleton().mWindow )
-				{
-					cShell::mbAlive =3D false;
-					if( cOgreWrapper::GetSingleton().mInputManager )
-					{
-						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mMouse );
-						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mKeyboard );
-						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mJoy );
-						cOgreWrapper::GetSingleton().mMouse =3D 0;
-						cOgreWrapper::GetSingleton().mKeyboard =3D 0;
-						cOgreWrapper::GetSingleton().mJoy =3D 0;
-
-						OIS::InputManager::destroyInputSystem(cOgreWrapper::GetSingleton().m=
InputManager);
-						cOgreWrapper::GetSingleton().mInputManager =3D 0;
-					}
-				}
-			}
-		};
-		cMyWindowListener* pMyWindowListener =3D new cMyWindowListener();
-
-		//Set initial mouse clipping size
-		pMyWindowListener->windowResized(mWindow);
-
-		//Register as a Window listener
-		// ogrenew/OgreMain/include/OgreWindowEventUtilities.h
-		// static void Ogre::WindowEventUtilities::addWindowEventListener(Ogre::=
RenderWindow*, Ogre::WindowEventListener*)
-		WindowEventUtilities::addWindowEventListener(mWindow, pMyWindowListener);
-	}
-
-
-	//printf("\n\n Ogre Event-Init Successful\n\n");
-
-	//chooseSceneManager();
-	//for ogre 1.0
-	//mSceneMgr =3D mRoot->getSceneManager(ST_GENERIC);
-	//for ogre 1.2
-	if (bWinDebug) printf("windebug safepoint 0\n");
-	mSceneMgr =3D mRoot->createSceneManager(ST_GENERIC,"main");
-	if (!mSceneMgr) { printf("COULDN'T CREATE SCENEMANAGER\n"); exit(3); }
-	if (bWinDebug) printf("windebug safepoint 1\n");
-
-
-	mpCamHolderSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneN=
ode("CamHolder");
-	mpCamPosSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneNode=
("CamPos");
-
-	//printf("\n\n Ogre SceneManager-Init Successful\n\n");
-
-	//createCamera();
-	{
-		// Create the camera
-		mCamera =3D mSceneMgr->createCamera("PlayerCam");
-
-		// Position it at 500 in Z direction
-		mCamera->setPosition(Ogre::Vector3(0,0,40));
-		// Look back along -Z
-		//mCamera->lookAt(Vector3(0,0,0));
-		mCamera->setNearClipDistance(1);
-		//mCamera->setPolygonMode(PM_WIREFRAME);
-	}
-	if (bWinDebug) printf("windebug safepoint 2\n");
-
-	//printf("\n\n Ogre Camera-Init Successful\n\n");
-
-	// TODO : redesign this for lua cam handling
-	mpCamHolderSceneNode->attachObject(mCamera);
-	// Create one viewport, entire window
-	mViewport =3D mWindow->addViewport(mCamera);
-	mViewport->setBackgroundColour(ColourValue(0,0,0));
-
-	if (bWinDebug) printf("windebug safepoint 3\n");
-	// Alter the camera aspect ratio to match the viewport
-	mCamera->setAspectRatio(Real(mViewport->getActualWidth()) / Real(mViewpor=
t->getActualHeight()));
-
-
-	if (bWinDebug) printf("windebug safepoint 4\n");
-	//printf("\n\n Ogre Viewport-Init Successful\n\n");
-
-
-	if (0) { // mbRttHack
-		// render to texture hack, required for hagish's weird gfx-setup only =
=3D)
-		RenderTexture* rttTex =3D mRoot->getRenderSystem()->createRenderTexture(=
 "RttTex", 512, 512, TEX_TYPE_2D, PF_R8G8B8 );
-		Viewport* vp =3D rttTex->addViewport( mCamera );
-		vp->setOverlaysEnabled( false );
-		vp->setClearEveryFrame( true );
-		vp->setBackgroundColour( ColourValue::Black );
-
-		//printf("\n\n Ogre RTT-HACK-Init Successful\n\n");
-	}
-
-	if (bWinDebug) printf("windebug safepoint 5\n");
-	// Set default mipmap level (NB some APIs ignore this)
-	TextureManager::getSingleton().setDefaultNumMipmaps(5);
-	Animation::setDefaultInterpolationMode(Animation::IM_SPLINE);
-
-	/*
-	mFiltering =3D TFO_TRILINEAR; mAniso =3D 1;
-	mFiltering =3D TFO_ANISOTROPIC; mAniso =3D 8;
-	mFiltering =3D TFO_BILINEAR; mAniso =3D 1;
-	MaterialManager::getSingleton().setDefaultTextureFiltering(mFiltering);
-	MaterialManager::getSingleton().setDefaultAnisotropy(mAniso);
-	*/
-
-	// TODO : Create any resource listeners (for loading screens)
-
-	// Load resources
-	// loadResources();
-	// Initialise, parse scripts etc
-	if (bWinDebug) printf("windebug safepoint 6\n");
-	ResourceGroupManager::getSingleton().initialiseAllResourceGroups();
-
-	if (bWinDebug) printf("windebug safepoint 7\n");
-
-	cCompassOverlay::RegisterFactory();
-	cRobRenderableOverlay::RegisterFactory();
-	cColourClipPaneOverlay::RegisterFactory();
-	cColourClipTextOverlay::RegisterFactory();
-	cBorderColourClipPaneOverlay::RegisterFactory();
-	cSortedOverlayContainer::RegisterFactory();
-
-	// sfzgui
-	if (1) {
-		class cSFZGUIEventPump : public cListener { public:
-			cDialogManager* mpDialogMan;
-			cSFZGUIEventPump() {
-				mpDialogMan =3D &cDialogManager::GetSingleton();
-			}
-
-			enum {
-				kEventBinding_InputEvent,
-				kEventBinding_EveryFrame,
-			};
-			virtual	void	Listener_Notify (cListenable* pTarget,const size_t eventco=
de =3D 0,const size_t param =3D 0,const size_t userdata =3D 0) {
-				size_t key,c;
-				switch (userdata) {
-					case kEventBinding_EveryFrame:	// time,mousemovement
-						cDialogManager::GetSingleton().OnEnterFrame(cTimer::miCurFrameNum,cI=
nput::iMouse[0],cInput::iMouse[1]);
-					break;
-					case kEventBinding_InputEvent:
-						key =3D (size_t)(param & 255);
-						c =3D (size_t)((param >> 8) & 255);
-						switch (eventcode) {
-							case cInput::kListenerEvent_KeyPress:
-								mpDialogMan->InjectKey(key,c,true);
-							break;
-							case cInput::kListenerEvent_KeyRelease:
-								mpDialogMan->InjectKey(key,c,false);
-							break;
-						}
-					break;
-				}
-			}
-		};
-		cSFZGUIEventPump* pump =3D new cSFZGUIEventPump();
-		cInput::GetSingleton().RegisterListener(pump,(int)cSFZGUIEventPump::kEve=
ntBinding_InputEvent);
-		cTimer::GetSingletonPtr()->RegisterFrameIntervalListener(pump,0,(int)cSF=
ZGUIEventPump::kEventBinding_EveryFrame);
-	}
-
-	if (bWinDebug) printf("windebug safepoint 12\n");
-
-	return true;
-}
-
-void	cOgreWrapper::RenderOneFrame	() {PROFILE
-	if (!mRoot) return;
-
-	// draw one frame
-	mRoot->renderOneFrame();
-
-	// update input
-	Ogre::WindowEventUtilities::messagePump();
-	if (mKeyboard) mKeyboard->capture();
-	if (mMouse) mMouse->capture();
-
-
-	if (0) {
-		// terminate the application after a few seconds, useful for experimenti=
ng with input
-		static int iDeadTime =3D 0;
-		if (iDeadTime =3D=3D 0) iDeadTime =3D cShell::GetTicks() + 1000*20;
-		if (iDeadTime < cShell::GetTicks()) cShell::mbAlive =3D false;
-	}
-
-	if(1) {
-		// read out some statistics
-		const RenderTarget::FrameStats& stats =3D mWindow->getStatistics();
-		mfLastFPS =3D stats.lastFPS;
-		mfAvgFPS =3D stats.avgFPS;
-		mfBestFPS =3D stats.bestFPS;
-		mfWorstFPS =3D stats.worstFPS;
-		miBestFrameTime =3D stats.bestFrameTime;
-		miWorstFrameTime =3D stats.worstFrameTime;
-		miTriangleCount =3D stats.triangleCount;
-		miBatchCount =3D stats.batchCount;
-	}
-}
-
-void	cOgreWrapper::DeInit		() {PROFILE
-	if (mRoot) delete mRoot; mRoot =3D 0;
-}
-
-void	cOgreWrapper::SetSkybox	(const char* szMatName,const bool bFlip) { PR=
OFILE
-	// setSkyBox (bool enable, const String &materialName, Real distance=3D50=
00, bool drawFirst=3Dtrue, const Quaternion &orientation=3DQuaternion::IDEN=
TITY, const String &groupName=3DResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME)
- 	if (szMatName) {
-		if (bFlip)
-				mSceneMgr->setSkyBox(true,szMatName,1000,true,Quaternion(Degree(90),Og=
re::Vector3(1,0,0)));
-		else	mSceneMgr->setSkyBox(true,szMatName);
-	} else {
-		mSceneMgr->setSkyBox(false,"");
-	}
-}
-
-Ogre::SceneManager*	cOgreWrapper::GetSceneManager	(const char* szSceneMgrN=
ame) {
-	return mRoot->getSceneManager(szSceneMgrName);
-}
-
-void	cOgreWrapper::AttachCamera	(SceneNode* pSceneNode) {PROFILE
-	if (pSceneNode)
-			pSceneNode->attachObject(mCamera);
-	else	mSceneMgr->getRootSceneNode()->attachObject(mCamera);
-}
-
-void	cOgreWrapper::SetCameraPos		(const Ogre::Vector3 vPos) {PROFILE
-	mCamera->setPosition(vPos);
-}
-
-void	cOgreWrapper::SetCameraRot		(const Quaternion qRot) {PROFILE
-	mCamera->setOrientation(qRot);
-}
-
-void	cOgreWrapper::CameraLookAt		(const Ogre::Vector3 vPos) { PROFILE
-	mCamera->lookAt(vPos);
-}
-
-/// highres screenshot from wiki
-/// http://www.ogre3d.org/wiki/index.php/High_resolution_screenshots
-void cOgreWrapper::TakeGridScreenshot(/*Ogre::RenderWindow* mWindow, Ogre:=
:Camera* mCamera, */const int& pGridSize, const Ogre::String& pFileName, co=
nst Ogre::String& pFileExtention, const bool& pStitchGridImages)
-{
-  /* Parameters:
-   *  mWindow:    Pointer to the render window.  This could be "mWindow" f=
rom the ExampleApplication,
-   *              the window automatically created obtained when calling
-   *              Ogre::Root::getSingletonPtr()->initialise(false) and ret=
rieved by calling
-   *              "Ogre::Root::getSingletonPtr()->getAutoCreatedWindow()",=
 or the manually created
-   *              window from calling "mRoot->createRenderWindow()".
-   *  mCamera:      Pointer to the camera "looking at" the scene of intere=
st
-   *  pGridSize:      The magnification factor.  A 2 will create a 2x2 gri=
d, doubling the size of the
-                screenshot.  A 3 will create a 3x3 grid, tripling the size=
 of the screenshot.
-   *  pFileName:      The filename to generate, without an extention.  To =
generate "MyScreenshot.png" this
-   *              parameter would contain the value "MyScreenshot".
-   *  pFileExtention:    The extention of the screenshot file name, hence =
the type of graphics file to generate.
-   *              To generate "MyScreenshot.pnh" this parameter would cont=
ain ".png".
-   *  pStitchGridImages:  Determines whether the grid screenshots are (tru=
e) automatically stitched into a single
-   *              image (and discarded) or whether they should (false) rem=
ain in their unstitched
-   *              form.  In that case they are sequentially numbered from =
0 to
-   *              pGridSize * pGridSize - 1 (if pGridSize is 3 then from 0=
 to 8).
-   *
-  */
-	bool overlaysEnabled =3D mViewport->getOverlaysEnabled();
-	mViewport->setOverlaysEnabled(false);
-
-  Ogre::String gridFilename;
-
-  if(pGridSize <=3D 1)
-  {
-    // Simple case where the contents of the screen are taken directly
-    // Also used when an invalid value is passed within pGridSize (zero or=
 negative grid size)
-    gridFilename =3D pFileName + pFileExtention;
-
-    mWindow->writeContentsToFile(gridFilename);
-  }
-  else
-  {
-    // Generate a grid of screenshots
-    mCamera->setCustomProjectionMatrix(false); // reset projection matrix
-    Ogre::Matrix4 standard =3D mCamera->getProjectionMatrix();
-    double nearDist =3D mCamera->getNearClipDistance();
-    double nearWidth =3D (mCamera->getWorldSpaceCorners()[0] - mCamera->ge=
tWorldSpaceCorners()[1]).length();
-    double nearHeight =3D (mCamera->getWorldSpaceCorners()[1] - mCamera->g=
etWorldSpaceCorners()[2]).length();
-    Ogre::Image sourceImage;
-    Ogre::uchar* stitchedImageData;
-
-    // Process each grid
-    for (int nbScreenshots =3D 0; nbScreenshots < pGridSize * pGridSize; n=
bScreenshots++)
-    {
-      // Use asymmetrical perspective projection. For more explanations ch=
eck out:
-      // http://www.cs.kuleuven.ac.be/cwis/research/graphics/INFOTEC/viewi=
ng-in-3d/node8.html
-      int y =3D nbScreenshots / pGridSize;
-      int x =3D nbScreenshots - y * pGridSize;
-      Ogre::Matrix4 shearing(
-        1, 0,(x - (pGridSize - 1) * 0.5) * nearWidth / nearDist, 0,
-        0, 1, -(y - (pGridSize - 1) * 0.5) * nearHeight / nearDist, 0,
-        0, 0, 1, 0,
-        0, 0, 0, 1);
-      Ogre::Matrix4 scale(
-        pGridSize, 0, 0, 0,
-        0, pGridSize, 0, 0,
-        0, 0, 1, 0,
-        0, 0, 0, 1);
-      mCamera->setCustomProjectionMatrix(true, standard * shearing * scale=
);
-      Ogre::Root::getSingletonPtr()->renderOneFrame();
-      gridFilename =3D pFileName + Ogre::StringConverter::toString(nbScree=
nshots) + pFileExtention;
-
-
-      // Screenshot of the current grid
-      mWindow->writeContentsToFile(gridFilename);
-
-      if(pStitchGridImages)
-      {
-        // Automatically stitch the grid screenshots
-        sourceImage.load(gridFilename, "General"); // Assumes that the cur=
rent directory is within the "General" resource group
-        int sourceWidth =3D (int) sourceImage.getWidth();
-        int sourceHeight =3D (int) sourceImage.getHeight();
-        Ogre::ColourValue colourValue;
-        int stitchedX, stitchedY, stitchedIndex;
-
-        // Allocate memory for the stitched image when processing the scre=
enshot of the first grid
-        if(nbScreenshots =3D=3D 0)
-          stitchedImageData =3D new Ogre::uchar[(sourceImage.getWidth() * =
pGridSize) * (sourceImage.getHeight() * pGridSize) * 3]; // 3 colors per pi=
xel
-
-        // Copy each pixel within the grid screenshot to the proper positi=
on within the stitched image
-        for(int rawY =3D 0; rawY < sourceHeight; rawY++)
-        {
-          for(int rawX =3D 0; rawX < sourceWidth; rawX++)
-          {
-            colourValue =3D sourceImage.getColourAt(rawX, rawY, 0);
-            stitchedX =3D x * sourceWidth + rawX;
-            stitchedY =3D y * sourceHeight + rawY;
-            stitchedIndex =3D stitchedY * sourceWidth * pGridSize + stitch=
edX;
-            Ogre::PixelUtil::packColour(colourValue,
-                          Ogre::PF_R8G8B8,
-                          (void*) &stitchedImageData[stitchedIndex * 3]);
-          }
-        }
-        // The screenshot of the grid is no longer needed
-        remove(gridFilename.c_str());
-      }
-    }
-    mCamera->setCustomProjectionMatrix(false); // reset projection matrix
-
-    if(pStitchGridImages)
-    {
-      // Save the stitched image to a file
-      Ogre::Image targetImage;
-      targetImage.loadDynamicImage(stitchedImageData,
-                    sourceImage.getWidth() * pGridSize,
-                    sourceImage.getHeight() * pGridSize,
-                    1, // depth
-                    Ogre::PF_R8G8B8,
-                    false);
-      targetImage.save(pFileName + pFileExtention);
-      delete[] stitchedImageData;
-    }
-  }
-	mViewport->setOverlaysEnabled(overlaysEnabled);
-}
-
-void	cOgreWrapper::TakeScreenshot	(const char* szDirPath) {PROFILE
-	mWindow->writeContentsToFile( strprintf( "%s%d.png", szDirPath, cShell::G=
etTicks() ) );
-}
-
-std::string		cOgreWrapper::GetUniqueName () {PROFILE
-	static int iLastName =3D 0;
-	return strprintf("n%04d",++iLastName);
-}
-
-/// avoid using OverlayManager::getSingleton().GetViewportHeight() as it i=
s one frame late
-int		cOgreWrapper::GetViewportHeight	() { return mViewport->getActualHeigh=
t(); }
-int		cOgreWrapper::GetViewportWidth	() { return mViewport->getActualWidth(=
); }
-
-bool	cOgreWrapper::RayAABBQuery	(const Ogre::Vector3& vRayPos,const Ogre::=
Vector3& vRayDir,const Ogre::AxisAlignedBox &aabb,float* pfHitDist) { PROFI=
LE
-	static Ogre::Vector3 mlVertices[8];
-	static Ogre::Vector3 d,p000,p111,p100,p010,p001,p011,p101,p110;
-	p000 =3D aabb.getMinimum();
-	p111 =3D aabb.getMaximum();
-	d =3D p111-p000;
-	p100 =3D p000 + Ogre::Vector3(d.x,0,0);
-	p010 =3D p000 + Ogre::Vector3(0,d.y,0);
-	p001 =3D p000 + Ogre::Vector3(0,0,d.z);
-	p011 =3D p000 + Ogre::Vector3(0,d.y,d.z);
-	p101 =3D p000 + Ogre::Vector3(d.x,0,d.z);
-	p110 =3D p000 + Ogre::Vector3(d.x,d.y,0);
-
-	static int mlIndices[] =3D {
-		0,1,2, 3,1,2,	4,5,6, 7,5,6, // front, back
-		0,1,4, 5,1,4,	2,3,6, 7,3,6, // top, bottom
-		0,2,4, 6,2,4,	1,3,5, 7,3,5, // left, right
-		};
-	mlVertices[0] =3D p000;	mlVertices[1] =3D p100; // front
-	mlVertices[2] =3D p010;	mlVertices[3] =3D p110;
-
-	mlVertices[4] =3D p001;	mlVertices[5] =3D p101; // back
-	mlVertices[6] =3D p011;	mlVertices[7] =3D p111;
-
-	bool bHit =3D false;
-	float myHitDist;
-
-	for (int i=3D0;i<6*6;i+=3D3) {
-		if (IntersectRayTriangle(vRayPos,vRayDir,
-			mlVertices[mlIndices[i+0]],
-			mlVertices[mlIndices[i+1]],
-			mlVertices[mlIndices[i+2]],&myHitDist)) {
-			if (!bHit || myHitDist < *pfHitDist) *pfHitDist =3D myHitDist;
-			bHit =3D true;
-		}
-	}
-	return bHit;
-}
-
-/// returns true if the ray intersects the entities triangles
-/// the resulting distance in the case of a hit is stored into pfHitDist
-/// see also OgreOpCode for more complex collision/intersection detection
-bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,const Ogre::Vector3& vPos,const Og=
re::Quaternion& qRot,const Ogre::Vector3& vScale,float* pfHitDist) { PROFILE
-	if (!pEntity) return false;
-	if (!pEntity->isVisible()) return false;
-
-	// get origin & dir in coordinates local to the entity
-	MeshShape* myshape =3D MeshShape::GetMeshShape(pEntity);
-	if (!myshape) return false;
-	Ogre::Quaternion invrot =3D qRot.Inverse();
-	return myshape->RayIntersect((invrot*(vRayPos - vPos))/vScale,(invrot * v=
RayDir)/ vScale,pfHitDist);
-}
-
-/// extracs pos & rot from scenenode, DOESNT WORK FOR entities in static g=
eometry (no scenenode)
-bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,float* pfHitDist) { PROFILE
-	SceneNode* scenenode =3D pEntity ? pEntity->getParentSceneNode() : 0;
-	if (!scenenode) return false; // TODO : tagpoint (like knife in hand) att=
achment currently not supported...
-	return RayEntityQuery(vRayPos,vRayDir,pEntity,scenenode->_getDerivedPosit=
ion(),scenenode->_getDerivedOrientation(),scenenode->_getDerivedScale(),pfH=
itDist);
-}
-
-/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
-/// and fills cx,cy with projected size on screen in [0;1]
-// cam->getProjectionMatrix() is cached inside ogre
-bool	cOgreWrapper::ProjectPos	(const Ogre::Vector3& pos,Ogre::Real& x,Ogre=
::Real& y) { PROFILE
-	Camera* cam =3D mCamera;
-	Ogre::Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
-	// z < 0 means in front of cam
-	if (eyeSpacePos.z < 0) {
-		Ogre::Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePo=
s;
-		x =3D screenSpacePos.x;
-		y =3D screenSpacePos.y;
-		bool bIsOnSreen =3D true;
-		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
-		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
-		return bIsOnSreen;
-	} else {
-		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
-		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
-		return false;
-	}
-}
-
-/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
-/// and fills cx,cy with projected size on screen in [0;1]
-// cam->getProjectionMatrix() is cached inside ogre
-bool	cOgreWrapper::ProjectSizeAndPos	(const Ogre::Vector3& pos,Ogre::Real&=
 x,Ogre::Real& y,const Ogre::Real rad,Ogre::Real& cx,Ogre::Real& cy) { PROF=
ILE
-	Camera* cam =3D mCamera;
-	Ogre::Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
-	// z < 0 means in front of cam
-	if (eyeSpacePos.z < 0) {
-		Ogre::Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePo=
s;
-		x =3D screenSpacePos.x;
-		y =3D screenSpacePos.y;
-		bool bIsOnSreen =3D true;
-		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
-		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
-		if (bIsOnSreen) {
-			Ogre::Vector3 spheresize(rad, rad, eyeSpacePos.z);
-			spheresize =3D cam->getProjectionMatrix() * spheresize;
-			cx =3D spheresize.x;
-			cy =3D spheresize.y;
-		} else {
-			cx =3D 0;
-			cy =3D 0;
-		}
-		return bIsOnSreen;
-	} else {
-		cx =3D 0;
-		cy =3D 0;
-		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
-		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
-		return false;
-	}
-}
+#include "prefix.h"
+#include "ogrewrapper.h"
+#include "input.h"
+#include "robstring1.2.h"
+#include <Ogre.h>
+/*
+#include <OgreInput.h>
+#include <OgreInputEvent.h>
+#include <OgreEventListeners.h>
+#include <OgreKeyEvent.h>
+#include <OgreOverlay.h>
+#include <OgreOverlayManager.h>
+#include <OgrePanelOverlayElement.h>
+#include <OgreTextAreaOverlayElement.h>
+#include <OgreWireBoundingBox.h>
+#include <SDL/SDL.h>
+*/
+#include <OIS/OIS.h>
+#include <map>
+#include "shell.h"
+#include "timer.h"
+#include "ColourClipPaneOverlay.h"
+#include "ColourClipTextOverlay.h"
+#include "BorderColourClipPaneOverlay.h"
+#include "SortedOverlayContainer.h"
+#include "RobRenderableOverlay.h"
+#include "widget.h"
+#include "meshshape.h"
+#include "game.h"
+
+#include "CompassOverlay.h"
+
+using namespace OIS;
+using namespace Ogre;
+Ogre::LogManager* gLogMan =3D 0;
+
+
+void	DisplayErrorMessage		(const char* szMsg); ///< defined in main.cpp, O=
S-specific
+
+cOgreUserObjectWrapper::cOgreUserObjectWrapper() : mpEntity(0), miType(0) =
{}
+cOgreUserObjectWrapper::~cOgreUserObjectWrapper() {}
+long cOgreUserObjectWrapper::getTypeID(void) const { return 23; }
+const Ogre::String& cOgreUserObjectWrapper::getTypeName(void) const { stat=
ic Ogre::String eris("shiva"); return eris; }
+
+
+cOgreWrapper::cOgreWrapper() : mRoot(0) {PROFILE
+    mCamera =3D 0;
+    mViewport =3D 0;
+    mSceneMgr =3D 0;
+    mWindow =3D 0;
+	mInputManager =3D 0;
+	mMouse =3D 0;
+	mKeyboard =3D 0;
+	mJoy =3D 0;
+}
+
+int gLastWinLeft =3D 0;
+int gLastWinTop =3D 0;
+
+/// warning, evil hack, since this is not really supported by ogre
+void	OgreForceCloseFullscreen () {
+	// found no other way to hide the window, setVisible and mWindow->destroy=
() didn't work
+	// arg, even mRoot->shutdown() didn't work
+	delete cOgreWrapper::GetSingleton().mRoot;
+    cOgreWrapper::GetSingleton().mCamera =3D 0;
+    cOgreWrapper::GetSingleton().mViewport =3D 0;
+    cOgreWrapper::GetSingleton().mSceneMgr =3D 0;
+    cOgreWrapper::GetSingleton().mWindow =3D 0;
+	cOgreWrapper::GetSingleton().mInputManager =3D 0;
+	cOgreWrapper::GetSingleton().mMouse =3D 0;
+	cOgreWrapper::GetSingleton().mKeyboard =3D 0;
+	cOgreWrapper::GetSingleton().mJoy =3D 0;
+
+	char* szPluginCfgPath =3D "plugins.cfg";
+	#ifdef WIN32
+	#else
+	szPluginCfgPath =3D "plugins_linux.cfg";
+	#endif
+	printf("ogre deinit ok, reinit...\n");
+	cOgreWrapper::GetSingleton().mRoot =3D new Root(szPluginCfgPath);
+}
+
+/// only call this once at startup
+bool	cOgreWrapper::Init			() {PROFILE
+	static bool bInitialised =3D false;
+	if (bInitialised) return false;
+	bInitialised =3D true;
+
+	// create custom logmanager so ogre doesn't dump all that junk onto the c=
onsole
+	gLogMan =3D new LogManager();
+	bool suppressFileOutput =3D false;
+	gLogMan->createLog("Ogre.log", true, false,suppressFileOutput);
+	//gLogMan->createLog(logFileName, true, true);
+
+	char* szPluginCfgPath =3D "plugins.cfg";
+	#ifdef WIN32
+	#else
+	szPluginCfgPath =3D "plugins_linux.cfg";
+	#endif
+	mRoot =3D new Root(szPluginCfgPath);
+
+
+
+	//setupResources();
+	{
+        // Load resource paths from config file
+        ConfigFile cf;
+        cf.load("resources.cfg");
+
+        // Go through all sections & settings in the file
+        ConfigFile::SectionIterator seci =3D cf.getSectionIterator();
+
+        String secName, typeName, archName;
+        while (seci.hasMoreElements())
+        {
+            secName =3D seci.peekNextKey();
+            ConfigFile::SettingsMultiMap *settings =3D seci.getNext();
+            ConfigFile::SettingsMultiMap::iterator i;
+            for (i =3D settings->begin(); i !=3D settings->end(); ++i)
+            {
+                typeName =3D i->first;
+                archName =3D i->second;
+                ResourceGroupManager::getSingleton().addResourceLocation(
+                    archName, typeName, secName);
+            }
+        }
+	}
+
+	bool bWinDebug =3D false;
+	//bool carryOn =3D configure();
+	//if (!carryOn) return false;
+	if (!mRoot->restoreConfig() && !mRoot->showConfigDialog()) return false;
+//	mRoot->getRenderSystem()->setConfigOption("RTT Preferred Mode","Copy");=
 // todo : set via lua ?
+	if (bWinDebug) printf("windebug safepoint -2\n");
+	mRoot->getRenderSystem()->setWaitForVerticalBlank(false);
+	mWindow =3D mRoot->initialise(true,"Iris2");
+	if (bWinDebug) printf("windebug safepoint -1\n");
+
+	//printf("\n\n Ogre Root-Init Successful\n\n");
+
+	if (1) {
+		bool bufferedKeys =3D true;
+		bool bufferedMouse =3D true;
+		bool bufferedJoy =3D true;
+		ParamList pl;
+		size_t windowHnd =3D 0;
+		std::ostringstream windowHndStr;
+
+		mWindow->getCustomAttribute("WINDOW", &windowHnd);
+		windowHndStr << windowHnd;
+		pl.insert(std::make_pair(std::string("WINDOW"), windowHndStr.str()));
+		#if defined OIS_WIN32_PLATFORM
+		//Default mode is foreground exclusive..but, we want to show mouse - so =
nonexclusive
+		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_FO=
REGROUND" )));
+		pl.insert(std::make_pair(std::string("w32_mouse"), std::string("DISCL_NO=
NEXCLUSIVE")));
+		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_FOREGROUND")));
+		pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL=
_NONEXCLUSIVE")));
+		/*
+		temp["DISCL_BACKGROUND"]	=3D DISCL_BACKGROUND;
+		temp["DISCL_EXCLUSIVE"]		=3D DISCL_EXCLUSIVE;
+		temp["DISCL_FOREGROUND"]	=3D DISCL_FOREGROUND;
+		temp["DISCL_NONEXCLUSIVE"]	=3D DISCL_NONEXCLUSIVE;
+		temp["DISCL_NOWINKEY"]		=3D DISCL_NOWINKEY;
+		*/
+		#elif defined OIS_LINUX_PLATFORM
+		//For this demo, show mouse and do not grab (confine to window)
+		pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("fal=
se")));
+		pl.insert(std::make_pair(std::string("x11_mouse_hide"), std::string("fal=
se")));
+		pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("=
false")));
+		pl.insert(std::make_pair(std::string("XAutoRepeatOn"), std::string("true=
")));
+		#endif
+
+		mInputManager =3D InputManager::createInputSystem( pl );
+
+		//Create all devices (We only catch joystick exceptions here, as, most p=
eople have Key/Mouse)
+		mKeyboard =3D static_cast<Keyboard*>(mInputManager->createInputObject( O=
ISKeyboard, bufferedKeys ));
+		// init tranlation mode (Unicode or Ascii)
+		if (mKeyboard) {
+			OIS::Keyboard::TextTranslationMode myTextTranslationMode =3D OIS::Keybo=
ard::Ascii;
+			mKeyboard->setTextTranslation(myTextTranslationMode);
+			if (mKeyboard->getTextTranslation() !=3D myTextTranslationMode) {
+				DisplayErrorMessage(strprintf("failed initialising OIS TextTranslation=
Mode : %s\n",(myTextTranslationMode=3D=3DOIS::Keyboard::Ascii)?"asci":"unic=
ode").c_str());
+				exit(12);
+			}
+		}
+		mMouse =3D static_cast<Mouse*>(mInputManager->createInputObject( OISMous=
e, bufferedMouse ));
+		/*
+		try {
+			mJoy =3D static_cast<JoyStick*>(mInputManager->createInputObject( OISJo=
yStick, bufferedJoy ));
+		}
+		catch(...) {
+			mJoy =3D 0;
+		}
+		*/
+
+		class cMyOISListener : public KeyListener, public MouseListener { public:
+			cInput& input;
+			cMyOISListener() : input(cInput::GetSingleton()) {}
+
+			bool keyPressed( const KeyEvent &arg ) {
+				if (0) std::cout << "\nKeyPressed {" << arg.key
+					<< ", " << ((Keyboard*)(arg.device))->getAsString(arg.key)
+					<< "} || Character (" << (char)arg.text << ")" << std::endl;
+
+				input.KeyDown(input.KeyConvertOIS(arg.key),(char)arg.text);
+
+
+				return true;
+			}
+			bool keyReleased( const KeyEvent &arg ) {
+				input.KeyUp( input.KeyConvertOIS(arg.key));
+				return true;
+			}
+			bool mouseMoved( const MouseEvent &arg ) {
+				const OIS::MouseState& s =3D arg.state;
+				if (0) std::cout << "\nMouseMoved: Abs("
+						  << s.X.abs << ", " << s.Y.abs << ", " << s.Z.abs << ") Abs2("
+						  << (s.X.abs-gLastWinLeft) << ", " << (s.Y.abs-gLastWinTop) << ", "=
 << s.Z.abs << ") Rel("
+						  << s.X.rel << ", " << s.Y.rel << ", " << s.Z.rel << ")";
+
+				cInput::iMouse[0] =3D s.X.abs; //-gLastWinLeft;
+				cInput::iMouse[1] =3D s.Y.abs; //-gLastWinTop;
+				if (s.Z.rel < 0) { input.KeyDown(cInput::kkey_wheelup); input.KeyUp(cI=
nput::kkey_wheelup); }
+				if (s.Z.rel > 0) { input.KeyDown(cInput::kkey_wheeldown); input.KeyUp(=
cInput::kkey_wheeldown); }
+				return true;
+			}
+			bool mousePressed( const MouseEvent &arg, MouseButtonID id ) {
+				if (0) std::cout << "\nMousePressed: " << id;
+
+				switch (id) {
+					case MB_Left: input.KeyDown(cInput::kkey_mouse1); break;
+					case MB_Right: input.KeyDown(cInput::kkey_mouse2); break;
+					case MB_Middle: input.KeyDown(cInput::kkey_mouse3); break;
+				}
+
+				return true;
+			}
+			bool mouseReleased( const MouseEvent &arg, MouseButtonID id ) {
+				if (0) std::cout << "\nMouseReleased: " << id;
+
+				switch (id) {
+					case MB_Left: input.KeyUp(cInput::kkey_mouse1); break;
+					case MB_Right: input.KeyUp(cInput::kkey_mouse2); break;
+					case MB_Middle: input.KeyUp(cInput::kkey_mouse3); break;
+				}
+
+				return true;
+			}
+		};
+		cMyOISListener* pMyOISListener =3D new cMyOISListener();
+
+		mKeyboard->setEventCallback(pMyOISListener);
+		mMouse->setEventCallback(pMyOISListener);
+
+		class cMyWindowListener : public Ogre::WindowEventListener { public:
+			virtual void windowMoved(RenderWindow* rw) {
+				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
+				unsigned int width, height, depth;
+				int left, top;
+				rw->getMetrics(width, height, depth, left, top);
+				gLastWinLeft =3D left;
+				gLastWinTop =3D top;
+				//printf("windowMoved, l,t=3D%d,%d\n",left,top); commented out by spam=
filter...
+			}
+
+			//Adjust mouse clipping area
+			virtual void windowResized(RenderWindow* rw)
+			{
+				if ( !cOgreWrapper::GetSingleton().mInputManager ) return;
+				unsigned int width, height, depth;
+				int left, top;
+				rw->getMetrics(width, height, depth, left, top);
+
+				const OIS::MouseState &ms =3D cOgreWrapper::GetSingleton().mMouse->get=
MouseState();
+				ms.width =3D width;
+				ms.height =3D height;
+
+				// notify game that window was resized
+				cGame::GetSingleton().NotifyMainWindowResized(width,height);
+			}
+
+			//Unattach OIS before window shutdown (very important under Linux)
+			virtual void windowClosed(RenderWindow* rw)
+			{
+				//Only close for window that created OIS (the main window in these dem=
os)
+				if( rw =3D=3D cOgreWrapper::GetSingleton().mWindow )
+				{
+					cShell::mbAlive =3D false;
+					if( cOgreWrapper::GetSingleton().mInputManager )
+					{
+						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mMouse );
+						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mKeyboard );
+						cOgreWrapper::GetSingleton().mInputManager->destroyInputObject( cOgr=
eWrapper::GetSingleton().mJoy );
+						cOgreWrapper::GetSingleton().mMouse =3D 0;
+						cOgreWrapper::GetSingleton().mKeyboard =3D 0;
+						cOgreWrapper::GetSingleton().mJoy =3D 0;
+
+						OIS::InputManager::destroyInputSystem(cOgreWrapper::GetSingleton().m=
InputManager);
+						cOgreWrapper::GetSingleton().mInputManager =3D 0;
+					}
+				}
+			}
+		};
+		cMyWindowListener* pMyWindowListener =3D new cMyWindowListener();
+
+		//Set initial mouse clipping size
+		pMyWindowListener->windowResized(mWindow);
+
+		//Register as a Window listener
+		// ogrenew/OgreMain/include/OgreWindowEventUtilities.h
+		// static void Ogre::WindowEventUtilities::addWindowEventListener(Ogre::=
RenderWindow*, Ogre::WindowEventListener*)
+		WindowEventUtilities::addWindowEventListener(mWindow, pMyWindowListener);
+	}
+
+
+	//printf("\n\n Ogre Event-Init Successful\n\n");
+
+	//chooseSceneManager();
+	//for ogre 1.0
+	//mSceneMgr =3D mRoot->getSceneManager(ST_GENERIC);
+	//for ogre 1.2
+	if (bWinDebug) printf("windebug safepoint 0\n");
+	mSceneMgr =3D mRoot->createSceneManager(ST_GENERIC,"main");
+	if (!mSceneMgr) { printf("COULDN'T CREATE SCENEMANAGER\n"); exit(3); }
+	if (bWinDebug) printf("windebug safepoint 1\n");
+
+
+	mpCamHolderSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneN=
ode("CamHolder");
+	mpCamPosSceneNode =3D mSceneMgr->getRootSceneNode()->createChildSceneNode=
("CamPos");
+
+	//printf("\n\n Ogre SceneManager-Init Successful\n\n");
+
+	//createCamera();
+	{
+		// Create the camera
+		mCamera =3D mSceneMgr->createCamera("PlayerCam");
+
+		// Position it at 500 in Z direction
+		mCamera->setPosition(Ogre::Vector3(0,0,40));
+		// Look back along -Z
+		//mCamera->lookAt(Vector3(0,0,0));
+		mCamera->setNearClipDistance(1);
+		//mCamera->setPolygonMode(PM_WIREFRAME);
+	}
+	if (bWinDebug) printf("windebug safepoint 2\n");
+
+	//printf("\n\n Ogre Camera-Init Successful\n\n");
+
+	// TODO : redesign this for lua cam handling
+	mpCamHolderSceneNode->attachObject(mCamera);
+	// Create one viewport, entire window
+	mViewport =3D mWindow->addViewport(mCamera);
+	mViewport->setBackgroundColour(ColourValue(0,0,0));
+
+	if (bWinDebug) printf("windebug safepoint 3\n");
+	// Alter the camera aspect ratio to match the viewport
+	mCamera->setAspectRatio(Real(mViewport->getActualWidth()) / Real(mViewpor=
t->getActualHeight()));
+
+
+	if (bWinDebug) printf("windebug safepoint 4\n");
+	//printf("\n\n Ogre Viewport-Init Successful\n\n");
+
+
+	if (0) { // mbRttHack
+		// render to texture hack, required for hagish's weird gfx-setup only =
=3D)
+		RenderTexture* rttTex =3D mRoot->getRenderSystem()->createRenderTexture(=
 "RttTex", 512, 512, TEX_TYPE_2D, PF_R8G8B8 );
+		Viewport* vp =3D rttTex->addViewport( mCamera );
+		vp->setOverlaysEnabled( false );
+		vp->setClearEveryFrame( true );
+		vp->setBackgroundColour( ColourValue::Black );
+
+		//printf("\n\n Ogre RTT-HACK-Init Successful\n\n");
+	}
+
+	if (bWinDebug) printf("windebug safepoint 5\n");
+	// Set default mipmap level (NB some APIs ignore this)
+	TextureManager::getSingleton().setDefaultNumMipmaps(5);
+	Animation::setDefaultInterpolationMode(Animation::IM_SPLINE);
+
+	/*
+	mFiltering =3D TFO_TRILINEAR; mAniso =3D 1;
+	mFiltering =3D TFO_ANISOTROPIC; mAniso =3D 8;
+	mFiltering =3D TFO_BILINEAR; mAniso =3D 1;
+	MaterialManager::getSingleton().setDefaultTextureFiltering(mFiltering);
+	MaterialManager::getSingleton().setDefaultAnisotropy(mAniso);
+	*/
+
+	// TODO : Create any resource listeners (for loading screens)
+
+	// Load resources
+	// loadResources();
+	// Initialise, parse scripts etc
+	if (bWinDebug) printf("windebug safepoint 6\n");
+	ResourceGroupManager::getSingleton().initialiseAllResourceGroups();
+
+	if (bWinDebug) printf("windebug safepoint 7\n");
+
+	cCompassOverlay::RegisterFactory();
+	cRobRenderableOverlay::RegisterFactory();
+	cColourClipPaneOverlay::RegisterFactory();
+	cColourClipTextOverlay::RegisterFactory();
+	cBorderColourClipPaneOverlay::RegisterFactory();
+	cSortedOverlayContainer::RegisterFactory();
+
+	// sfzgui
+	if (1) {
+		class cSFZGUIEventPump : public cListener { public:
+			cDialogManager* mpDialogMan;
+			cSFZGUIEventPump() {
+				mpDialogMan =3D &cDialogManager::GetSingleton();
+			}
+
+			enum {
+				kEventBinding_InputEvent,
+				kEventBinding_EveryFrame,
+			};
+			virtual	void	Listener_Notify (cListenable* pTarget,const size_t eventco=
de =3D 0,const size_t param =3D 0,const size_t userdata =3D 0) {
+				size_t key,c;
+				switch (userdata) {
+					case kEventBinding_EveryFrame:	// time,mousemovement
+						cDialogManager::GetSingleton().OnEnterFrame(cTimer::miCurFrameNum,cI=
nput::iMouse[0],cInput::iMouse[1]);
+					break;
+					case kEventBinding_InputEvent:
+						key =3D (size_t)(param & 255);
+						c =3D (size_t)((param >> 8) & 255);
+						switch (eventcode) {
+							case cInput::kListenerEvent_KeyPress:
+								mpDialogMan->InjectKey(key,c,true);
+							break;
+							case cInput::kListenerEvent_KeyRelease:
+								mpDialogMan->InjectKey(key,c,false);
+							break;
+						}
+					break;
+				}
+			}
+		};
+		cSFZGUIEventPump* pump =3D new cSFZGUIEventPump();
+		cInput::GetSingleton().RegisterListener(pump,(int)cSFZGUIEventPump::kEve=
ntBinding_InputEvent);
+		cTimer::GetSingletonPtr()->RegisterFrameIntervalListener(pump,0,(int)cSF=
ZGUIEventPump::kEventBinding_EveryFrame);
+	}
+
+	if (bWinDebug) printf("windebug safepoint 12\n");
+
+	return true;
+}
+
+void	cOgreWrapper::RenderOneFrame	() {PROFILE
+	if (!mRoot) return;
+
+	// draw one frame
+	mRoot->renderOneFrame();
+
+	// update input
+	Ogre::WindowEventUtilities::messagePump();
+	if (mKeyboard) mKeyboard->capture();
+	if (mMouse) mMouse->capture();
+
+
+	if (0) {
+		// terminate the application after a few seconds, useful for experimenti=
ng with input
+		static int iDeadTime =3D 0;
+		if (iDeadTime =3D=3D 0) iDeadTime =3D cShell::GetTicks() + 1000*20;
+		if (iDeadTime < cShell::GetTicks()) cShell::mbAlive =3D false;
+	}
+
+	if(1) {
+		// read out some statistics
+		const RenderTarget::FrameStats& stats =3D mWindow->getStatistics();
+		mfLastFPS =3D stats.lastFPS;
+		mfAvgFPS =3D stats.avgFPS;
+		mfBestFPS =3D stats.bestFPS;
+		mfWorstFPS =3D stats.worstFPS;
+		miBestFrameTime =3D stats.bestFrameTime;
+		miWorstFrameTime =3D stats.worstFrameTime;
+		miTriangleCount =3D stats.triangleCount;
+		miBatchCount =3D stats.batchCount;
+	}
+}
+
+void	cOgreWrapper::DeInit		() {PROFILE
+	if (mRoot) delete mRoot; mRoot =3D 0;
+}
+
+void	cOgreWrapper::SetSkybox	(const char* szMatName,const bool bFlip) { PR=
OFILE
+	// setSkyBox (bool enable, const String &materialName, Real distance=3D50=
00, bool drawFirst=3Dtrue, const Quaternion &orientation=3DQuaternion::IDEN=
TITY, const String &groupName=3DResourceGroupManager::DEFAULT_RESOURCE_GROU=
P_NAME)
+ 	if (szMatName) {
+		if (bFlip)
+				mSceneMgr->setSkyBox(true,szMatName,1000,true,Quaternion(Degree(90),Og=
re::Vector3(1,0,0)));
+		else	mSceneMgr->setSkyBox(true,szMatName);
+	} else {
+		mSceneMgr->setSkyBox(false,"");
+	}
+}
+
+Ogre::SceneManager*	cOgreWrapper::GetSceneManager	(const char* szSceneMgrN=
ame) {
+	return mRoot->getSceneManager(szSceneMgrName);
+}
+
+void	cOgreWrapper::AttachCamera	(SceneNode* pSceneNode) {PROFILE
+	if (pSceneNode)
+			pSceneNode->attachObject(mCamera);
+	else	mSceneMgr->getRootSceneNode()->attachObject(mCamera);
+}
+
+void	cOgreWrapper::SetCameraPos		(const Ogre::Vector3 vPos) {PROFILE
+	mCamera->setPosition(vPos);
+}
+
+void	cOgreWrapper::SetCameraRot		(const Quaternion qRot) {PROFILE
+	mCamera->setOrientation(qRot);
+}
+
+void	cOgreWrapper::CameraLookAt		(const Ogre::Vector3 vPos) { PROFILE
+	mCamera->lookAt(vPos);
+}
+
+/// highres screenshot from wiki
+/// http://www.ogre3d.org/wiki/index.php/High_resolution_screenshots
+void cOgreWrapper::TakeGridScreenshot(/*Ogre::RenderWindow* mWindow, Ogre:=
:Camera* mCamera, */const int& pGridSize, const Ogre::String& pFileName, co=
nst Ogre::String& pFileExtention, const bool& pStitchGridImages)
+{
+  /* Parameters:
+   *  mWindow:    Pointer to the render window.  This could be "mWindow" f=
rom the ExampleApplication,
+   *              the window automatically created obtained when calling
+   *              Ogre::Root::getSingletonPtr()->initialise(false) and ret=
rieved by calling
+   *              "Ogre::Root::getSingletonPtr()->getAutoCreatedWindow()",=
 or the manually created
+   *              window from calling "mRoot->createRenderWindow()".
+   *  mCamera:      Pointer to the camera "looking at" the scene of intere=
st
+   *  pGridSize:      The magnification factor.  A 2 will create a 2x2 gri=
d, doubling the size of the
+                screenshot.  A 3 will create a 3x3 grid, tripling the size=
 of the screenshot.
+   *  pFileName:      The filename to generate, without an extention.  To =
generate "MyScreenshot.png" this
+   *              parameter would contain the value "MyScreenshot".
+   *  pFileExtention:    The extention of the screenshot file name, hence =
the type of graphics file to generate.
+   *              To generate "MyScreenshot.pnh" this parameter would cont=
ain ".png".
+   *  pStitchGridImages:  Determines whether the grid screenshots are (tru=
e) automatically stitched into a single
+   *              image (and discarded) or whether they should (false) rem=
ain in their unstitched
+   *              form.  In that case they are sequentially numbered from =
0 to
+   *              pGridSize * pGridSize - 1 (if pGridSize is 3 then from 0=
 to 8).
+   *
+  */
+	bool overlaysEnabled =3D mViewport->getOverlaysEnabled();
+	mViewport->setOverlaysEnabled(false);
+
+  Ogre::String gridFilename;
+
+  if(pGridSize <=3D 1)
+  {
+    // Simple case where the contents of the screen are taken directly
+    // Also used when an invalid value is passed within pGridSize (zero or=
 negative grid size)
+    gridFilename =3D pFileName + pFileExtention;
+
+    mWindow->writeContentsToFile(gridFilename);
+  }
+  else
+  {
+    // Generate a grid of screenshots
+    mCamera->setCustomProjectionMatrix(false); // reset projection matrix
+    Ogre::Matrix4 standard =3D mCamera->getProjectionMatrix();
+    double nearDist =3D mCamera->getNearClipDistance();
+    double nearWidth =3D (mCamera->getWorldSpaceCorners()[0] - mCamera->ge=
tWorldSpaceCorners()[1]).length();
+    double nearHeight =3D (mCamera->getWorldSpaceCorners()[1] - mCamera->g=
etWorldSpaceCorners()[2]).length();
+    Ogre::Image sourceImage;
+    Ogre::uchar* stitchedImageData;
+
+    // Process each grid
+    for (int nbScreenshots =3D 0; nbScreenshots < pGridSize * pGridSize; n=
bScreenshots++)
+    {
+      // Use asymmetrical perspective projection. For more explanations ch=
eck out:
+      // http://www.cs.kuleuven.ac.be/cwis/research/graphics/INFOTEC/viewi=
ng-in-3d/node8.html
+      int y =3D nbScreenshots / pGridSize;
+      int x =3D nbScreenshots - y * pGridSize;
+      Ogre::Matrix4 shearing(
+        1, 0,(x - (pGridSize - 1) * 0.5) * nearWidth / nearDist, 0,
+        0, 1, -(y - (pGridSize - 1) * 0.5) * nearHeight / nearDist, 0,
+        0, 0, 1, 0,
+        0, 0, 0, 1);
+      Ogre::Matrix4 scale(
+        pGridSize, 0, 0, 0,
+        0, pGridSize, 0, 0,
+        0, 0, 1, 0,
+        0, 0, 0, 1);
+      mCamera->setCustomProjectionMatrix(true, standard * shearing * scale=
);
+      Ogre::Root::getSingletonPtr()->renderOneFrame();
+      gridFilename =3D pFileName + Ogre::StringConverter::toString(nbScree=
nshots) + pFileExtention;
+
+
+      // Screenshot of the current grid
+      mWindow->writeContentsToFile(gridFilename);
+
+      if(pStitchGridImages)
+      {
+        // Automatically stitch the grid screenshots
+        sourceImage.load(gridFilename, "General"); // Assumes that the cur=
rent directory is within the "General" resource group
+        int sourceWidth =3D (int) sourceImage.getWidth();
+        int sourceHeight =3D (int) sourceImage.getHeight();
+        Ogre::ColourValue colourValue;
+        int stitchedX, stitchedY, stitchedIndex;
+
+        // Allocate memory for the stitched image when processing the scre=
enshot of the first grid
+        if(nbScreenshots =3D=3D 0)
+          stitchedImageData =3D new Ogre::uchar[(sourceImage.getWidth() * =
pGridSize) * (sourceImage.getHeight() * pGridSize) * 3]; // 3 colors per pi=
xel
+
+        // Copy each pixel within the grid screenshot to the proper positi=
on within the stitched image
+        for(int rawY =3D 0; rawY < sourceHeight; rawY++)
+        {
+          for(int rawX =3D 0; rawX < sourceWidth; rawX++)
+          {
+            colourValue =3D sourceImage.getColourAt(rawX, rawY, 0);
+            stitchedX =3D x * sourceWidth + rawX;
+            stitchedY =3D y * sourceHeight + rawY;
+            stitchedIndex =3D stitchedY * sourceWidth * pGridSize + stitch=
edX;
+            Ogre::PixelUtil::packColour(colourValue,
+                          Ogre::PF_R8G8B8,
+                          (void*) &stitchedImageData[stitchedIndex * 3]);
+          }
+        }
+        // The screenshot of the grid is no longer needed
+        remove(gridFilename.c_str());
+      }
+    }
+    mCamera->setCustomProjectionMatrix(false); // reset projection matrix
+
+    if(pStitchGridImages)
+    {
+      // Save the stitched image to a file
+      Ogre::Image targetImage;
+      targetImage.loadDynamicImage(stitchedImageData,
+                    sourceImage.getWidth() * pGridSize,
+                    sourceImage.getHeight() * pGridSize,
+                    1, // depth
+                    Ogre::PF_R8G8B8,
+                    false);
+      targetImage.save(pFileName + pFileExtention);
+      delete[] stitchedImageData;
+    }
+  }
+	mViewport->setOverlaysEnabled(overlaysEnabled);
+}
+
+void cOgreWrapper::TakeScreenshot (const char* szDirPath) {PROFILE
+ char mybuf[256];
+ time_t mytime;
+ time(&mytime);
+ strftime(mybuf,255,"%Y%m%d%H%M%S",localtime(&mytime));
+ mWindow->writeContentsToFile( strprintf( "%siris_%s_%03d.png", szDirPath,=
mybuf,cShell::GetTicks() % 1000 ) );
+} =

+
+std::string		cOgreWrapper::GetUniqueName () {PROFILE
+	static int iLastName =3D 0;
+	return strprintf("n%04d",++iLastName);
+}
+
+/// avoid using OverlayManager::getSingleton().GetViewportHeight() as it i=
s one frame late
+int		cOgreWrapper::GetViewportHeight	() { return mViewport->getActualHeigh=
t(); }
+int		cOgreWrapper::GetViewportWidth	() { return mViewport->getActualWidth(=
); }
+
+bool	cOgreWrapper::RayAABBQuery	(const Ogre::Vector3& vRayPos,const Ogre::=
Vector3& vRayDir,const Ogre::AxisAlignedBox &aabb,float* pfHitDist) { PROFI=
LE
+	static Ogre::Vector3 mlVertices[8];
+	static Ogre::Vector3 d,p000,p111,p100,p010,p001,p011,p101,p110;
+	p000 =3D aabb.getMinimum();
+	p111 =3D aabb.getMaximum();
+	d =3D p111-p000;
+	p100 =3D p000 + Ogre::Vector3(d.x,0,0);
+	p010 =3D p000 + Ogre::Vector3(0,d.y,0);
+	p001 =3D p000 + Ogre::Vector3(0,0,d.z);
+	p011 =3D p000 + Ogre::Vector3(0,d.y,d.z);
+	p101 =3D p000 + Ogre::Vector3(d.x,0,d.z);
+	p110 =3D p000 + Ogre::Vector3(d.x,d.y,0);
+
+	static int mlIndices[] =3D {
+		0,1,2, 3,1,2,	4,5,6, 7,5,6, // front, back
+		0,1,4, 5,1,4,	2,3,6, 7,3,6, // top, bottom
+		0,2,4, 6,2,4,	1,3,5, 7,3,5, // left, right
+		};
+	mlVertices[0] =3D p000;	mlVertices[1] =3D p100; // front
+	mlVertices[2] =3D p010;	mlVertices[3] =3D p110;
+
+	mlVertices[4] =3D p001;	mlVertices[5] =3D p101; // back
+	mlVertices[6] =3D p011;	mlVertices[7] =3D p111;
+
+	bool bHit =3D false;
+	float myHitDist;
+
+	for (int i=3D0;i<6*6;i+=3D3) {
+		if (IntersectRayTriangle(vRayPos,vRayDir,
+			mlVertices[mlIndices[i+0]],
+			mlVertices[mlIndices[i+1]],
+			mlVertices[mlIndices[i+2]],&myHitDist)) {
+			if (!bHit || myHitDist < *pfHitDist) *pfHitDist =3D myHitDist;
+			bHit =3D true;
+		}
+	}
+	return bHit;
+}
+
+/// returns true if the ray intersects the entities triangles
+/// the resulting distance in the case of a hit is stored into pfHitDist
+/// see also OgreOpCode for more complex collision/intersection detection
+bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,const Ogre::Vector3& vPos,const Og=
re::Quaternion& qRot,const Ogre::Vector3& vScale,float* pfHitDist) { PROFILE
+	if (!pEntity) return false;
+	if (!pEntity->isVisible()) return false;
+
+	// get origin & dir in coordinates local to the entity
+	MeshShape* myshape =3D MeshShape::GetMeshShape(pEntity);
+	if (!myshape) return false;
+	Ogre::Quaternion invrot =3D qRot.Inverse();
+	return myshape->RayIntersect((invrot*(vRayPos - vPos))/vScale,(invrot * v=
RayDir)/ vScale,pfHitDist);
+}
+
+/// extracs pos & rot from scenenode, DOESNT WORK FOR entities in static g=
eometry (no scenenode)
+bool	cOgreWrapper::RayEntityQuery	(const Ogre::Vector3& vRayPos,const Ogre=
::Vector3& vRayDir,Ogre::Entity* pEntity,float* pfHitDist) { PROFILE
+	SceneNode* scenenode =3D pEntity ? pEntity->getParentSceneNode() : 0;
+	if (!scenenode) return false; // TODO : tagpoint (like knife in hand) att=
achment currently not supported...
+	return RayEntityQuery(vRayPos,vRayDir,pEntity,scenenode->_getDerivedPosit=
ion(),scenenode->_getDerivedOrientation(),scenenode->_getDerivedScale(),pfH=
itDist);
+}
+
+/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
+/// and fills cx,cy with projected size on screen in [0;1]
+// cam->getProjectionMatrix() is cached inside ogre
+bool	cOgreWrapper::ProjectPos	(const Ogre::Vector3& pos,Ogre::Real& x,Ogre=
::Real& y) { PROFILE
+	Camera* cam =3D mCamera;
+	Ogre::Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
+	// z < 0 means in front of cam
+	if (eyeSpacePos.z < 0) {
+		Ogre::Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePo=
s;
+		x =3D screenSpacePos.x;
+		y =3D screenSpacePos.y;
+		bool bIsOnSreen =3D true;
+		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
+		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
+		return bIsOnSreen;
+	} else {
+		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
+		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
+		return false;
+	}
+}
+
+/// returns true if in front of cam, and fills x,y with clamped screencoor=
ds in [-1;1]
+/// and fills cx,cy with projected size on screen in [0;1]
+// cam->getProjectionMatrix() is cached inside ogre
+bool	cOgreWrapper::ProjectSizeAndPos	(const Ogre::Vector3& pos,Ogre::Real&=
 x,Ogre::Real& y,const Ogre::Real rad,Ogre::Real& cx,Ogre::Real& cy) { PROF=
ILE
+	Camera* cam =3D mCamera;
+	Ogre::Vector3 eyeSpacePos =3D cam->getViewMatrix(true) * pos;
+	// z < 0 means in front of cam
+	if (eyeSpacePos.z < 0) {
+		Ogre::Vector3 screenSpacePos =3D cam->getProjectionMatrix() * eyeSpacePo=
s;
+		x =3D screenSpacePos.x;
+		y =3D screenSpacePos.y;
+		bool bIsOnSreen =3D true;
+		if (x < -1.0) { x =3D -1.0; bIsOnSreen =3D false; } if (x > 1.0) { x =3D=
 1.0; bIsOnSreen =3D false; }
+		if (y < -1.0) { y =3D -1.0; bIsOnSreen =3D false; } if (y > 1.0) { y =3D=
 1.0; bIsOnSreen =3D false; }
+		if (bIsOnSreen) {
+			Ogre::Vector3 spheresize(rad, rad, eyeSpacePos.z);
+			spheresize =3D cam->getProjectionMatrix() * spheresize;
+			cx =3D spheresize.x;
+			cy =3D spheresize.y;
+		} else {
+			cx =3D 0;
+			cy =3D 0;
+		}
+		return bIsOnSreen;
+	} else {
+		cx =3D 0;
+		cy =3D 0;
+		x =3D (-eyeSpacePos.x > 0) ? -1 : 1;
+		y =3D (-eyeSpacePos.y > 0) ? -1 : 1;
+		return false;
+	}
+}



From no-reply at zwischenwelt.org  Sun Jun 17 15:56:30 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 13:56:30 -0000
Subject: [Iris-commit] [IRIS] r1204 - in /trunk/data/lua:
 lib.3d.renderer.lua lib.models.lua lib.skill.lua lib.terrain.lua
 net.container.lua net.customhouse.lua net.mobile.lua net.objects.lua
Message-ID: <20070617135632.D004AB1466D@localhost.localdomain>

Author: sience
Date: Sun Jun 17 15:56:22 2007
New Revision: 1204

Log:
-coastwaterground filtered
-several console outputs converted to debugoutput

Modified:
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.models.lua
    trunk/data/lua/lib.skill.lua
    trunk/data/lua/lib.terrain.lua
    trunk/data/lua/net.container.lua
    trunk/data/lua/net.customhouse.lua
    trunk/data/lua/net.mobile.lua
    trunk/data/lua/net.objects.lua

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Sun Jun 17 15:56:22 2007
@@ -300,7 +300,6 @@
 		local r,g,b =3D 0.0, 1.0, 0.0
 		local a =3D 0.3
 		local e =3D 1.0
-
 		mobile.selection =3D CreateRootGfx3D()
 		mobile.selection:SetSimpleRenderable()
 		mobile.selection:SetMaterial("aura_base")

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Sun Jun 17 15:56:22 2007
@@ -183,7 +183,9 @@
 =

 -- some tests if the granny model format is as expected (for models, not f=
or anims)
 function CheckGrannyModel	(granny) =

-	if (granny:GetSubMeshCount() ~=3D 1) then print("WARNING ! unexpected sum=
eshcount ",granny:GetSubMeshCount()) end
+	if (granny:GetSubMeshCount() ~=3D 1) then
+		printdebug("granny","WARNING ! unexpected sumeshcount ",granny:GetSubMes=
hCount())
+	end
 	assert(granny:GetSubMeshCount() >=3D 1,"GetSubMeshCount=3D=3D"..tostring(=
granny:GetSubMeshCount()))
 	assert(granny:GetTextureIDCount() >=3D 1,"GetTextureIDCount=3D=3D"..tostr=
ing(granny:GetTextureIDCount()))
 	if (granny:GetTextureIDCount() > 1) then
@@ -302,7 +304,10 @@
 	if (mobileartid =3D=3D  987) then return 400 end --   male admin robe
 	if (mobileartid =3D=3D 1987) then return 401 end -- female admin robe
 	=

-	if (mobileartid =3D=3D 778) then print("TODO : Mobile 778 doesn't work ->=
 mapping to modelid 16") return 16 end
+	if (mobileartid =3D=3D 778) then
+		printdebug("granny","TODO : Mobile 778 doesn't work -> mapping to modeli=
d 16")
+		return 16
+	end
 	return mobileartid
 end
 =

@@ -544,7 +549,9 @@
 			--print("equip",item.artid,tiledata and tiledata.miAnimID or 0)
 			--local mountbodyid =3D tiledata and tiledata.miAnimID  -- this fails, =
animid is often zero, seems to be hardcoded
 			local mountbodyid =3D gMountTranslate[mount.artid]
-			print("MOUNT",mountbodyid,mount.artid)
+
+			printdebug("granny","MOUNT ",mountbodyid,mount.artid)
+
 			if ((not mountbodyid) or mountbodyid =3D=3D 0) then mountbodyid =3D gSt=
andardHorse end
 			--print("mountbodyid",mountbodyid,mount.artid)
 			--print("mount",mountbodyid,vardump2(mount),tiledata and vardump2(tiled=
ata))
@@ -554,7 +561,7 @@
 				=

 				-- fallback to standard horse mount
 				if (not meshname) then
-					print("warning, broken mountid, falling back to horse",mountbodyid)
+					printdebug("granny","warning, broken mountid, falling back to horse "=
,mountbodyid)
 					mountbodyid =3D gStandardHorse
 					mountskeleton =3D GetOrCreateSkeleton(mountbodyid) -- skeleton is det=
ermined by the bodyid, not possible from the wearables
 					meshname =3D GetGrannyMeshName(mountbodyid,mountskeleton.name,mount.h=
ue)					=


Modified: trunk/data/lua/lib.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.skill.lua (original)
+++ trunk/data/lua/lib.skill.lua Sun Jun 17 15:56:22 2007
@@ -262,7 +262,7 @@
 				skill.index =3D listindex	-- index in the skilllist
 				listindex =3D listindex + 1
 				=

-				vardump(skill)
+				printdebug("skill","Skill "..vardump(skill))
 				table.insert(dialog.lSkill,skill)
 			end
 		end

Modified: trunk/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.terrain.lua (original)
+++ trunk/data/lua/lib.terrain.lua Sun Jun 17 15:56:22 2007
@@ -20,7 +20,7 @@
 	local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSet=
ting)
 =

 	-- FILTER: Groundmaptiles (not really needed)
---	if ( gTerrainShader and (iTranslatedTileTypeID  >=3D 76) and (iTranslat=
edTileTypeID <=3D 112)) then return "" end
+	if ( gTerrainShader and (iTranslatedTileTypeID  >=3D 76) and (iTranslated=
TileTypeID <=3D 112)) then return "" end
 =

 	--temporary for testing material/shader use for tiles (mystiqq) =

 	if (gTerrainShader and OgreMaterialNameKnown("tileid_" .. iTranslatedTile=
TypeID)) then  =


Modified: trunk/data/lua/net.container.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.container.lua (original)
+++ trunk/data/lua/net.container.lua Sun Jun 17 15:56:22 2007
@@ -170,7 +170,8 @@
 	--print("kPacket_Object_to_Object",item.xloc,item.yloc)
 	item.iContainerSerial =3D input:PopNetUint32()
 	item.hue =3D input:PopNetUint16()
-	printf("NET : kPacket_Object_to_Object : container=3D0x%08x item=3D0x%08x=
 artid=3D0x%04x amount=3D%d\n",item.iContainerSerial,item.serial,item.artid=
,item.amount)
+	printdebug("net",sprintf("NET : kPacket_Object_to_Object : container=3D0x=
%08x item=3D0x%08x artid=3D0x%04x amount=3D%d\n",
+				item.iContainerSerial,item.serial,item.artid,item.amount))
 =

 	ApplyArtidStackManipulation(item)
 	RefreshContainerItem(item)

Modified: trunk/data/lua/net.customhouse.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.customhouse.lua (original)
+++ trunk/data/lua/net.customhouse.lua Sun Jun 17 15:56:22 2007
@@ -55,8 +55,9 @@
 	local bufferlen =3D input:PopNetUint16()	--components.size() * 5		(item l=
ist, compressed?)
 	local planecount =3D input:PopNetUint8()
 =

-	printf("NET: Custom_House: iPacketSize=3D%d compresstype=3D0x%02x unknown=
1=3D0x%02x customhouseserial=3D%d customhouserevision=3D0x%08x tilecount=3D=
%d bufferlen=3D%d planecount=3D%d\n",
-			iPacketSize, compresstype, unknown1, customhouseserial, customhouserevi=
sion, tilecount, bufferlen, planecount)
+	=

+	printdebug("net",sprintf("NET: Custom_House: iPacketSize=3D%d compresstyp=
e=3D0x%02x unknown1=3D0x%02x customhouseserial=3D%d customhouserevision=3D0=
x%08x tilecount=3D%d bufferlen=3D%d planecount=3D%d\n",
+			iPacketSize, compresstype, unknown1, customhouseserial, customhouserevi=
sion, tilecount, bufferlen, planecount))
 =

 	local s0,s1
 	=

@@ -82,8 +83,8 @@
 			uncompressedsize =3D uncompressedsize + BitwiseSHL(BitwiseAND(bothsizes=
,hex2num("0xF0")),4)
 			compressedsize =3D compressedsize + BitwiseSHL(BitwiseAND(bothsizes,hex=
2num("0xF")),8)
 		=

-			printf("NET: Custom_House2: planeid=3D%d planetype=3D0x%02x uncompresse=
dsize=3D0x%02x compressedsize=3D0x%02x bothsizes=3D0x%02x\n",
-					planeid,planetype,uncompressedsize,compressedsize,bothsizes)
+			printdebug("net",sprintf("NET: Custom_House2: planeid=3D%d planetype=3D=
0x%02x uncompressedsize=3D0x%02x compressedsize=3D0x%02x bothsizes=3D0x%02x=
\n",
+					planeid,planetype,uncompressedsize,compressedsize,bothsizes))
 		=

 			-- switch between stair and plane buffers
 			if planetype =3D=3D hex2num("0x20") then
@@ -109,7 +110,7 @@
 				-- Stairplane Tilenumber - save for later use
 				local tilenum =3D uncompressedsize / 5
 				=

-				print("tilenum for stairlayer=3D"..tilenum)
+				--print("tilenum for stairlayer=3D"..tilenum)
 =

 				-- layer position correction
 				local staircorr =3D 0	--0.5
@@ -122,7 +123,8 @@
 					tile.z =3D lStairLayer:PopNetInt8()
 	=

 					if (tile.artid > 0) then
-						printf("NET: Custom_House Stairs: artid=3D0x%04x x=3D%i y=3D%i z=3D%=
i\n", tile.artid, tile.x, tile.y, tile.z)
+						printdebug("net",sprintf("NET: Custom_House Stairs: artid=3D0x%04x x=
=3D%i y=3D%i z=3D%i\n",
+								tile.artid, tile.x, tile.y, tile.z))
 						table.insert(lTile,tile)
 					end
 				end
@@ -156,7 +158,8 @@
 			printf("w1=3D%.1f h1=3D%.1f  |  w2=3D%.1f h2=3D%.1f\n",w1,h1,w2,h2)
 		end
 =

-		printf("w=3D%d h=3D%d\n",width,height)
+		printdebug("net",sprintf("NET: Custom_House Width&Height: w=3D%d h=3D%d\=
n",
+				width,height))
 =

 		-- ---------------------------------------------------------------------=
-----
 		-- Parse remaining unparsed planelayers -----------------
@@ -193,7 +196,8 @@
 					h =3D height -1
 				end
 				=

-				printf("LAYER %d w=3D%d h=3D%d\n",i,w,h)
+				printdebug("net",sprintf("NET: Custom_House LAYER: %d w=3D%d h=3D%d\n",
+						i,w,h))
 =

 				if (i > 0) then z =3D math.mod(i-1,4) * 20 + 7 end
 				=

@@ -206,7 +210,8 @@
 					tile.z =3D z + dz
 					=

 					if (tile.artid > 0) then =

-						-- printf("NET: Custom_House Plane: artid=3D0x%04x x=3D%i y=3D%i z=
=3D%i\n", tile.artid, tile.x, tile.y, tile.z)
+						printdebug("net",sprintf("NET: Custom_House Plane: artid=3D0x%04x x=
=3D%i y=3D%i z=3D%i\n",
+								tile.artid, tile.x, tile.y, tile.z))
 						table.insert(lTile,tile)
 					end	=

 					=

@@ -236,7 +241,8 @@
 					tile.z =3D hex2num("0xFF") + (tile.z + 1);
 				end
 =

-				-- printf("NET: Custom_House Plane: artid=3D0x%04x x=3D%i y=3D%i z=3D%=
i\n", tile.artid, tile.x, tile.y, tile.z)
+				printdebug("net",sprintf("NET: Custom_House Plane: artid=3D0x%04x x=3D=
%i y=3D%i z=3D%i\n",
+						tile.artid, tile.x, tile.y, tile.z))
 				table.insert(lTile,tile)
 			else
 				printf("NET: TileID too low -> Custom_House Plane: artid=3D0x%04x x=3D=
%i y=3D%i z=3D%i\n", tile.artid, tile.x, tile.y, tile.z)
@@ -254,11 +260,11 @@
 =

 	-- if dynamic-customhouse-multi alreay exists
 	if (dyn) then
-		print("CH: Old custom house found")
+		--print("CH: Old custom house found")
 		-- check if customhousemulti already exists
 		if (dyn.customhouserevision) then
 			if (customhouserevision~=3Ddyn.customhouserevision) then
-				print("CH: Houserevision not equal -> reset")
+				--print("CH: Houserevision not equal -> reset")
 				-- update revision
 				dyn.customhouserevision=3Dcustomhouserevision
 				--create a new house
@@ -271,7 +277,7 @@
 				end
 			end
 		else
-			print("CH: No Houserevision found (only Clientside Stairs found)) -> ne=
w")
+			--print("CH: No Houserevision found (only Clientside Stairs found)) -> =
new")
 			--if not add revision to dynamic-multi
 			dyn.customhouserevision=3Dcustomhouserevision
 			-- create a new house

Modified: trunk/data/lua/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.mobile.lua (original)
+++ trunk/data/lua/net.mobile.lua Sun Jun 17 15:56:22 2007
@@ -539,13 +539,15 @@
 =

 	local mobile =3D gMobiles[serial]
 	=

-	print("TEXT MobileDisplayTextOverHead",serial,message,color)
+	printdebug("mobile","TEXT MobileDisplayTextOverHead",serial,message,color)
 	=

 	if mobile then
 		mobile.mlastChatText =3D message
 		mobile.mlastChatTime =3D gMyTicks
 		mobile.mlastChatColor =3D {r =3D r,g =3D g,b =3D b}
-		print("TEXT",vardump2(mobile))
+
+		printdebug("mobile","TEXT "..vardump2(mobile))
+
 		gCurrentRenderer:UpdateMobile(mobile)
 	end
 end

Modified: trunk/data/lua/net.objects.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.objects.lua (original)
+++ trunk/data/lua/net.objects.lua Sun Jun 17 15:56:22 2007
@@ -155,9 +155,7 @@
 		newitem.z_typename =3D msName
 	end
 	=

-	local info =3D "ShowItem"
-	info =3D info..vardump(newitem)
-	--print("\t\t"..info)
+	printdebug("mobile","ShowItem "..vardump(newitem))
 	=

 	newitem.isdynamic =3D true -- needed to identify the dynamic in 2d render=
er
 	=




From no-reply at zwischenwelt.org  Sun Jun 17 19:40:34 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 17:40:34 -0000
Subject: [Iris-commit] [IRIS] r1205 - in /trunk: bin/ data/ data/lua/
 data/models/models/to_019000/ data/terrain/ data/terrain/materials/
 data/terrain/programs/ data/terrain/textures/
Message-ID: <20070617174036.115E8B1466D@localhost.localdomain>

Author: sience
Date: Sun Jun 17 19:40:32 2007
New Revision: 1205

Log:
-Terrainshader (beta) support added (only some Tilegroups are working)
-Camera Rotation set to Mouse1 (left mouse key)
-new binary
-Terrain Materials/Textures and Shaders added

Added:
    trunk/data/models/models/to_019000/mdl_019999.mesh   (with props)
    trunk/data/terrain/
    trunk/data/terrain/materials/
    trunk/data/terrain/materials/terrain.material
    trunk/data/terrain/materials/water.material
    trunk/data/terrain/programs/
    trunk/data/terrain/programs/terrain.program
    trunk/data/terrain/programs/terrainBase_ps.glsl
    trunk/data/terrain/programs/terrainBase_ps.hlsl
    trunk/data/terrain/programs/terrainBase_vs.glsl
    trunk/data/terrain/programs/terrainBase_vs.hlsl
    trunk/data/terrain/programs/terrainBlend_ps.glsl
    trunk/data/terrain/programs/terrainBlend_ps.hlsl
    trunk/data/terrain/textures/
    trunk/data/terrain/textures/Dirt_large_pattern_1024.jpg   (with props)
    trunk/data/terrain/textures/Forest_large_pattern_512.dds   (with props)
    trunk/data/terrain/textures/Grass_large_pattern_1024.jpg   (with props)
    trunk/data/terrain/textures/Mountain_large_pattern_512.jpg   (with prop=
s)
    trunk/data/terrain/textures/Water01.png   (with props)
    trunk/data/terrain/textures/multitiletex_numbers.png   (with props)
    trunk/data/terrain/textures/tex_blend_e_side.png   (with props)
    trunk/data/terrain/textures/tex_blend_n_side.png   (with props)
    trunk/data/terrain/textures/tex_blend_ne_corner_cross.png   (with props)
    trunk/data/terrain/textures/tex_blend_ne_corner_in.png   (with props)
    trunk/data/terrain/textures/tex_blend_ne_corner_out.png   (with props)
    trunk/data/terrain/textures/tex_blend_nw_corner_cross.png   (with props)
    trunk/data/terrain/textures/tex_blend_nw_corner_in.png   (with props)
    trunk/data/terrain/textures/tex_blend_nw_corner_out.png   (with props)
    trunk/data/terrain/textures/tex_blend_s_side.png   (with props)
    trunk/data/terrain/textures/tex_blend_se_corner_cross.png   (with props)
    trunk/data/terrain/textures/tex_blend_se_corner_in.png   (with props)
    trunk/data/terrain/textures/tex_blend_se_corner_out.png   (with props)
    trunk/data/terrain/textures/tex_blend_sw_corner_cross.png   (with props)
    trunk/data/terrain/textures/tex_blend_sw_corner_in.png   (with props)
    trunk/data/terrain/textures/tex_blend_sw_corner_out.png   (with props)
    trunk/data/terrain/textures/tex_blend_w_side.png   (with props)
Modified:
    trunk/bin/iris2.exe
    trunk/bin/resources.cfg
    trunk/data/config.lua.dist
    trunk/data/lua/lib.static.lua
    trunk/data/lua/lib.terrain.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/resources.cfg
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/bin/resources.cfg (original)
+++ trunk/bin/resources.cfg Sun Jun 17 19:40:32 2007
@@ -11,6 +11,7 @@
 FileSystem=3D../data/particles/materials
 FileSystem=3D../data/particles/particles
 FileSystem=3D../data/particles/textures
+#FileSystem=3D../data/compositor
 =

 # distributet models
 FileSystem=3D../data/models/materials
@@ -64,10 +65,7 @@
 FileSystem=3D../data/custom/programs
 FileSystem=3D../data/custom/textures
 =

-# old entries
-#FileSystem=3D./data/meshes
-#FileSystem=3D./data/models_uim/models/mesh
-#FileSystem=3D./data/models_uim/textures
-#FileSystem=3D./data/programs
-#FileSystem=3D./data/textures
-#FileSystem=3D./data/materials
+# new Terrain Shaderengine
+FileSystem=3D../data/terrain/materials
+FileSystem=3D../data/terrain/programs
+FileSystem=3D../data/terrain/textures

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sun Jun 17 19:40:32 2007
@@ -8,8 +8,9 @@
 =

 gUseNewModelLoader =3D true -- use old (models.uim) or new (many mesh file=
s) model loader
 =

--- input stuff
-gInput_CamMouseButton =3D GetNamedKey("mouse3")
+-- Camera Rotation - Input stuff use: "mouse1", "mouse2" or "mouse3"
+gInput_CamMouseButton =3D GetNamedKey("mouse1")
+
 -- todo : invert mouse, mouse sensitivity
 =

 -- your UO-Path (if not automatically detected)
@@ -230,8 +231,8 @@
 	gMobileCastShadows =3D true
 end
 =

+-- activate Shader 2.0 for Terrainengine (true/false)
+gTerrainShader =3D false
+
 gDisableSmoothWalk =3D false
 gDisableHumanClientSideAnim =3D false
-
--- activate Shader 2.0 for Terrainengine (true/false)
-gTerrainShader =3D false

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Sun Jun 17 19:40:32 2007
@@ -79,10 +79,11 @@
 		((iTranslatedTileTypeID  >=3D 13460) and (iTranslatedTileTypeID <=3D 134=
83)) or
 		((iTranslatedTileTypeID  >=3D 13496) and (iTranslatedTileTypeID <=3D 135=
14))) then
 		--return nil
-		--map[(int)statics_p->y][(int) statics_p->x] =3D (int) statics_p->z + 12=
8 | 1024;
 		if (gTerrainShader) then
+			-- assosiate to different tile, because we have already a shader materi=
al for all static tiles
 			iTranslatedTileTypeID=3D19999
 		else
+			-- assosiate to one all static water to one tileid (we don't have all s=
tatic water tiles as meshes)
 			iTranslatedTileTypeID=3D6040
 		end
 	end

Modified: trunk/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.terrain.lua (original)
+++ trunk/data/lua/lib.terrain.lua Sun Jun 17 19:40:32 2007
@@ -20,7 +20,15 @@
 	local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSet=
ting)
 =

 	-- FILTER: Groundmaptiles (not really needed)
-	if ( gTerrainShader and (iTranslatedTileTypeID  >=3D 76) and (iTranslated=
TileTypeID <=3D 112)) then return "" end
+	if ( gTerrainShader and (iTranslatedTileTypeID  >=3D 76) and (iTranslated=
TileTypeID <=3D 112)) then
+		--iTranslatedTileTypeID=3D168
+		return ""
+	end
+	-- FILTER: Watermaptiles
+--	if ( gTerrainShader and ((iTranslatedTileTypeID  >=3D 168) and (iTransl=
atedTileTypeID <=3D 171)) or
+--		 ((iTranslatedTileTypeID  >=3D 310) and (iTranslatedTileTypeID <=3D 31=
1)) ) then
+--		return ""
+--	end
 =

 	--temporary for testing material/shader use for tiles (mystiqq) =

 	if (gTerrainShader and OgreMaterialNameKnown("tileid_" .. iTranslatedTile=
TypeID)) then  =




From no-reply at zwischenwelt.org  Sun Jun 17 21:30:05 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 19:30:05 -0000
Subject: [Iris-commit] [IRIS] r1206 - /trunk/src/data_L.cpp
Message-ID: <20070617193007.8C253B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Sun Jun 17 21:30:02 2007
New Revision: 1206

Log:
added some small security checks

Modified:
    trunk/src/data_L.cpp

Modified: trunk/src/data_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_L.cpp (original)
+++ trunk/src/data_L.cpp Sun Jun 17 21:30:02 2007
@@ -162,6 +162,7 @@
 			if (!target) return 0;
 			=

 			RawUniFontFileLetterHeader *h =3D target->GetLetterHeader(luaL_checkint=
(L,2));
+			if (!h) return 0;
 =

 			lua_pushnumber(L,h->miXOffset);
 			lua_pushnumber(L,h->miYOffset);
@@ -175,10 +176,10 @@
 			cUniFontFileLoader* target =3D checkudata_alive(L);
 			if (!target) return 0;
 			=

-			const char *szFontName =3D luaL_checkstring(L,2);
+			std::string sFontName =3D luaL_checkstring(L,2);
 			=

 			// load only ascii atm
-			GenerateUniFont(*target,szFontName,0,255);
+			GenerateUniFont(*target,sFontName.c_str(),0,255);
 			=

 			return 0; =

 		}	=

@@ -657,7 +658,7 @@
 		static int	GetStatic		(lua_State *L) { PROFILE =

 			cStaticBlock* pLastBlock =3D mLastBlock[checkudata_alive(L)];
 			int i =3D luaL_checkint(L,2);
-			if (!pLastBlock || i < 0 || i > pLastBlock->Count()) return 0;
+			if (!pLastBlock || i < 0 || i >=3D pLastBlock->Count()) return 0;
 			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miTileID); =

 			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miX); =

 			lua_pushnumber(L,pLastBlock->mpRawStaticList[i].miY); =




From no-reply at zwischenwelt.org  Sun Jun 17 21:35:34 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 19:35:34 -0000
Subject: [Iris-commit] [IRIS] r1207 - in /trunk/data/lua: lib.compass.lua
 lib.static.lua lib.terrain.lua
Message-ID: <20070617193535.00EBBB1466D@localhost.localdomain>

Author: sience
Date: Sun Jun 17 21:35:33 2007
New Revision: 1207

Log:
-checks added to disable some loaders

Modified:
    trunk/data/lua/lib.compass.lua
    trunk/data/lua/lib.static.lua
    trunk/data/lua/lib.terrain.lua

Modified: trunk/data/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.compass.lua (original)
+++ trunk/data/lua/lib.compass.lua Sun Jun 17 21:35:33 2007
@@ -16,7 +16,7 @@
 		gIrisCompassDialog.mapdot 				=3D gIrisCompassDialog.rootwidget:CreateCh=
ild()
 		gIrisCompassDialog.compassframe_static	=3D gIrisCompassDialog.rootwidget=
:CreateChild()
 		gIrisCompassDialog.compassframe_rot		=3D gIrisCompassDialog.rootwidget:C=
reateChild()
-		if (gGroundBlockLoader and gStaticBlockLoader) then
+		if (gGroundBlockLoader and gStaticBlockLoader and gRadarColorLoader) then
 			gIrisCompassDialog.radar			=3D CreateRadar( gGroundBlockLoader, gStatic=
BlockLoader, gRadarColorLoader )
 		end
 		=

@@ -100,7 +100,7 @@
 	gCompassMapH =3D gGroundBlockLoader and gGroundBlockLoader:GetMapH() or 1
 	ZoomCompass(1.0)
 	=

-	if (gGroundBlockLoader and gStaticBlockLoader) then
+	if (gGroundBlockLoader and gStaticBlockLoader and gRadarColorLoader) then
 		gIrisCompassDialog.radar:Destroy()
 		gIrisCompassDialog.radar =3D CreateRadar( gGroundBlockLoader, gStaticBlo=
ckLoader, gRadarColorLoader )
 	end

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Sun Jun 17 21:35:33 2007
@@ -111,8 +111,8 @@
 						gManualArtMaterialLoader:CreateMatchingIfUnavailable(v)
 					end
 				end
-				=

-				HueMesh(meshname,gHueLoader,iHue)
+				-- Hue this Model
+				if (gHueLoader) then HueMesh(meshname,gHueLoader,iHue) end
 			end
 		end
 		=


Modified: trunk/data/lua/lib.terrain.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.terrain.lua (original)
+++ trunk/data/lua/lib.terrain.lua Sun Jun 17 21:35:33 2007
@@ -20,17 +20,17 @@
 	local iTranslatedTileTypeID=3DTranslateTileTypeID(iTileTypeID, gSeasonSet=
ting)
 =

 	-- FILTER: Groundmaptiles (not really needed)
-	if ( gTerrainShader and (iTranslatedTileTypeID  >=3D 76) and (iTranslated=
TileTypeID <=3D 112)) then
-		--iTranslatedTileTypeID=3D168
-		return ""
-	end
+--	if ( gTerrainShader and (iTranslatedTileTypeID  >=3D 76) and (iTranslat=
edTileTypeID <=3D 112)) then
+--		--iTranslatedTileTypeID=3D168
+--		return ""
+--	end
 	-- FILTER: Watermaptiles
 --	if ( gTerrainShader and ((iTranslatedTileTypeID  >=3D 168) and (iTransl=
atedTileTypeID <=3D 171)) or
 --		 ((iTranslatedTileTypeID  >=3D 310) and (iTranslatedTileTypeID <=3D 31=
1)) ) then
 --		return ""
 --	end
 =

-	--temporary for testing material/shader use for tiles (mystiqq) =

+	--temporary for testing material/shader use for tiles (mystiqq)
 	if (gTerrainShader and OgreMaterialNameKnown("tileid_" .. iTranslatedTile=
TypeID)) then  =

 		return "tileid_" .. iTranslatedTileTypeID
 	end



From no-reply at zwischenwelt.org  Sun Jun 17 21:54:44 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 19:54:44 -0000
Subject: [Iris-commit] [IRIS] r1208 - in /trunk: include/data.h
	src/scripting.cpp
Message-ID: <20070617195446.00702B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Sun Jun 17 21:54:38 2007
New Revision: 1208

Log:
added security to huefilters and HueMesh

Modified:
    trunk/include/data.h
    trunk/src/scripting.cpp

Modified: trunk/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data.h (original)
+++ trunk/include/data.h Sun Jun 17 21:54:38 2007
@@ -552,12 +552,12 @@
 	class cSetHighBitFilter { public : inline short operator () (short value,=
 short* ColorTable) { return value | 0x8000; } }; =

 =

 	class cHueFilter { public : inline short operator () (short value, short*=
 ColorTable) {
-		return ColorTable[(value >> 10) & 0x1F] | 0x8000; =

+		return ColorTable[mymax(0,mymin(31,(value >> 10) & 0x1F))] | 0x8000; =

 	} };
 =

 	class cPartialHueFilter { public : inline short operator () (short value,=
 short* ColorTable) { =

 		if ((value >> 10) & 0x1F =3D=3D (value >> 5) & 0x1F && (value >> 10) & 0=
x1F =3D=3D value & 0x1F) {
-			return ColorTable[(value >> 10) & 0x1F] | 0x8000;
+			return ColorTable[mymax(0,mymin(31,(value >> 10) & 0x1F))] | 0x8000;
 		} else {
 			return value | 0x8000;
 		}

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Sun Jun 17 21:54:38 2007
@@ -457,18 +457,23 @@
 	=

 /// void HueMesh(meshname, hueloader, hue)
 static int l_HueMesh (lua_State *L) { PROFILE
-	const char *meshname =3D luaL_checkstring(L,1);
+	std::string sMeshName =3D luaL_checkstring(L,1);
+	const char *meshname =3D sMeshName.c_str();
 	cHueLoader *hueLoader =3D cLuaBind<cHueLoader>::checkudata(L,2);
 	int hue =3D luaL_checkint(L,3);
 =

 	//printf("HueMesh(%s,%i,%i)\n",meshname,hueLoader,hue);
 	if(hueLoader && hue && meshname){
 		try	{
-			cHueFilter Filter;
-			short* ColorTable =3D hueLoader->GetHue( hue-1 )->GetColors();
-		=

+			cHueFilter Filter;
+			cHue* pMyHue =3D hueLoader->GetHue( hue-1 );
+			if (!pMyHue) return 0;
+			short* ColorTable =3D pMyHue->GetColors();
+			if (!ColorTable) return 0;
+				=

 			// data seem ok, so read out the mesh
 			Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(meshname,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+			if (mesh.isNull()) return 0;
 			=

 			//printf("mesh=3D%s\n",mesh->getName().c_str());
 =

@@ -478,6 +483,7 @@
 				Ogre::SubMesh *submesh =3D sit.getNext();
 				//printf("submesh=3D%i\n",submesh);
 				=

+				if(!submesh) continue;
 				if(!submesh->isMatInitialised())continue;
 				=

 				//printf("matname=3D%s\n",submesh->getMaterialName().c_str());
@@ -493,6 +499,7 @@
 				std::string newname =3D cOgreWrapper::GetSingleton().GetUniqueName();
 				Ogre::MaterialPtr mat_hue =3D Ogre::MaterialManager::getSingleton().cr=
eate(newname, mat->getGroup());
 				//printf("mat=3D%s mat_hue=3D%s\n",mat->getName().c_str(),mat_hue->get=
Name().c_str());
+				if (mat_hue.isNull()) return 0;
 				mat->copyDetailsTo(mat_hue);
 =

 				// iterate over all techniques
@@ -500,27 +507,32 @@
 				Ogre::Material::TechniqueIterator tit_hue =3D mat_hue->getTechniqueIte=
rator();
 				while(tit.hasMoreElements()){
 					Ogre::Technique *tech =3D tit.getNext();
-					Ogre::Technique *tech_hue =3D tit_hue.getNext();
+					Ogre::Technique *tech_hue =3D tit_hue.getNext();
+					if (!tech || !tech_hue) continue;
 					=

 					// iterate over all passes
 					Ogre::Technique::PassIterator pit =3D tech->getPassIterator();
 					Ogre::Technique::PassIterator pit_hue =3D tech_hue->getPassIterator();
 					while(pit.hasMoreElements()){
 						Ogre::Pass *pass =3D pit.getNext();
-						Ogre::Pass *pass_hue =3D pit_hue.getNext();
+						Ogre::Pass *pass_hue =3D pit_hue.getNext();
+						if (!pass || !pass_hue) continue;
 						=

 						// iterate over all tex units
 						Ogre::Pass::TextureUnitStateIterator uit =3D pass->getTextureUnitSta=
teIterator();
 						Ogre::Pass::TextureUnitStateIterator uit_hue =3D pass_hue->getTextur=
eUnitStateIterator();
 						while(uit.hasMoreElements()){
 							Ogre::TextureUnitState *unit =3D uit.getNext();
-							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
+							Ogre::TextureUnitState *unit_hue =3D uit_hue.getNext();
+							if (!unit || !unit_hue) continue;
 =

 							// current texture
 							Ogre::TexturePtr tex =3D Ogre::TextureManager::getSingleton().load(=
unit->getTextureName(),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_N=
AME);
-
+							if (tex.isNull()) continue;
+							=

 							// lock and read access buffer
-							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
+							Ogre::HardwarePixelBufferSharedPtr b =3D tex->getBuffer();
+							if (b.isNull()) continue;
 							// calc size of complete texture
 							Ogre::Image::Box area(0, 0, b->getWidth(), b->getHeight());
 							// and lock (ro)
@@ -531,14 +543,15 @@
 							// texture size in bytes
 							unsigned int size =3D box.getConsecutiveSize();
 							=

-							char *dst =3D new char[size];
+							char *dst =3D new char[size+1024*32]; // add a little security over=
size
 							char *src =3D static_cast<char *>(box.data);
 =

 							char *dst_start =3D dst;
 							char *src_start =3D src;
 =

 							uint8 cr,cg,cb,ca1,ca2;
-							short col;
+							short col;
+							int dummy =3D 0;
 							=

 							// colorize the pixels
 							for(unsigned int y =3D 0; y < box.getHeight(); y++){
@@ -563,22 +576,23 @@
 							Ogre::DataStreamPtr texstream(new Ogre::MemoryDataStream(dst_start,=
 size));
 							Ogre::TexturePtr tex_hue =3D Ogre::TextureManager::getSingleton().c=
reate(cOgreWrapper::GetSingleton().GetUniqueName(),
 								Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
-							=

+							assert(!tex_hue.isNull() && "HueMesh bug");
 							tex_hue->loadRawData(texstream,box.getWidth(),box.getHeight(),box.f=
ormat);
 							=

 							// release the lock
 							b->unlock();
-
-							// free memory
-							delete [] dst_start;
 		=

 							// set the texture
-							unit_hue->setTextureName(tex_hue->getName());
+							unit_hue->setTextureName(tex_hue->getName());
+
+							// free memory
+							delete [] dst_start;
 						}
 					}
 				}
 =

-				// set new material
+				// set new material
+				if (mat_hue.isNull()) continue;
 				submesh->setMaterialName(mat_hue->getName());
 			}
 		} catch (Ogre::FileNotFoundException e){



From no-reply at zwischenwelt.org  Sun Jun 17 22:54:43 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 20:54:43 -0000
Subject: [Iris-commit] [IRIS] r1209 - in /trunk/data/lua: lib.3d.map.lua
	main.lua
Message-ID: <20070617205445.A6921B1466D@localhost.localdomain>

Author: sience
Date: Sun Jun 17 22:54:41 2007
New Revision: 1209

Log:
-memdisplay activated
-unloadmeshname disabled

Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Sun Jun 17 22:54:41 2007
@@ -348,7 +348,7 @@
 		end =

 		chunk.lStaticEntities =3D {}
 		for k,v in pairs(chunk.pStaticGeometryLayers) do v:Destroy() end chunk.p=
StaticGeometryLayers =3D {}
-		if (chunk.sTerrainMeshName) then UnloadMeshName(chunk.sTerrainMeshName) =
chunk.sTerrainMeshName =3D nil end -- unload terrain mesh
+--		if (chunk.sTerrainMeshName) then UnloadMeshName(chunk.sTerrainMeshName=
) chunk.sTerrainMeshName =3D nil end -- unload terrain mesh
 		-- TODO : release anything else that was allocated in CreateMapChunk
 	end
 end

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Sun Jun 17 22:54:41 2007
@@ -213,7 +213,7 @@
 -- called every frame, after all timer-steppers, see Step() in lib.time.lua
 function MainStep (curticks)
 	gMyTicks =3D curticks
-	-- UpdateFPS(curticks)
+	UpdateFPS(curticks)
 	UpdateStats(curticks)
 	StepTimer(curticks)
 =




From no-reply at zwischenwelt.org  Sun Jun 17 23:08:12 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 21:08:12 -0000
Subject: [Iris-commit] [IRIS] r1210 - in /trunk: data/lua/lib.3d.map.lua
	src/scripting.cpp
Message-ID: <20070617210813.AF91CB1466D@localhost.localdomain>

Author: ghoulsblade
Date: Sun Jun 17 23:08:11 2007
New Revision: 1210

Log:
maybe fixed unloadmesh, needs testing

Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/src/scripting.cpp

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Sun Jun 17 23:08:11 2007
@@ -348,7 +348,7 @@
 		end =

 		chunk.lStaticEntities =3D {}
 		for k,v in pairs(chunk.pStaticGeometryLayers) do v:Destroy() end chunk.p=
StaticGeometryLayers =3D {}
---		if (chunk.sTerrainMeshName) then UnloadMeshName(chunk.sTerrainMeshName=
) chunk.sTerrainMeshName =3D nil end -- unload terrain mesh
+		if (chunk.sTerrainMeshName) then UnloadMeshName(chunk.sTerrainMeshName) =
chunk.sTerrainMeshName =3D nil end -- unload terrain mesh
 		-- TODO : release anything else that was allocated in CreateMapChunk
 	end
 end

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Sun Jun 17 23:08:11 2007
@@ -808,8 +808,11 @@
 }
 =

 =

-static int l_UnloadMeshName (lua_State *L) { PROFILE
-	Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
+static int l_UnloadMeshName (lua_State *L) { PROFILE
+	Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(luaL_checks=
tring(L,1),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+	if (mesh.isNull()) return 0;
+	mesh->unload();
+	//Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
 	return 0;
 }
 =




From no-reply at zwischenwelt.org  Mon Jun 18 00:07:11 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 17 Jun 2007 22:07:11 -0000
Subject: [Iris-commit] [IRIS] r1211 - in /trunk: bin/iris2.exe
	data/skippedfallbacks.lua
Message-ID: <20070617220714.9E7E410701CE@localhost.localdomain>

Author: sience
Date: Mon Jun 18 00:07:08 2007
New Revision: 1211

Log:
-new binary

Modified:
    trunk/bin/iris2.exe
    trunk/data/skippedfallbacks.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Mon Jun 18 00:07:08 2007
@@ -310,3 +310,4 @@
 RegisterSkippedArtBillboardFallBack(6065) -- 0x17b1 name=3Dwater
 RegisterSkippedArtBillboardFallBack(6795) -- 0x1a8b name=3Dore cart
 RegisterSkippedArtBillboardFallBack(6790) -- 0x1a86 name=3Dore cart
+RegisterSkippedArtBillboardFallBack(8611) -- 0x21a3 name=3Dnodraw



From no-reply at zwischenwelt.org  Mon Jun 18 11:06:57 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Jun 2007 09:06:57 -0000
Subject: [Iris-commit] [IRIS] r1212 - in /trunk: include/meshshape.h
 src/meshshape.cpp src/scripting.cpp
Message-ID: <20070618090658.6A6FEB1466D@localhost.localdomain>

Author: ghoulsblade
Date: Mon Jun 18 11:06:55 2007
New Revision: 1212

Log:
fixed mousepicking terrain-mesh memleak

Modified:
    trunk/include/meshshape.h
    trunk/src/meshshape.cpp
    trunk/src/scripting.cpp

Modified: trunk/include/meshshape.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/meshshape.h (original)
+++ trunk/include/meshshape.h Mon Jun 18 11:06:55 2007
@@ -4,6 +4,8 @@
 #include <vector>
 #include <Ogre.h>
 #include <OgreVector3.h>
+
+void	UnloadMeshShape		(const char* szMeshName);
 =

 /// used for polygon exact ray-intersection
 class MeshShape	{ public :

Modified: trunk/src/meshshape.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/meshshape.cpp (original)
+++ trunk/src/meshshape.cpp Mon Jun 18 11:06:55 2007
@@ -7,6 +7,11 @@
 using namespace Ogre;
 =

 std::map<std::string,MeshShape*>	gMeshShapeCache;
+
+void	UnloadMeshShape		(const char* szMeshName) {
+	MeshShape*& pShape =3D gMeshShapeCache[szMeshName];
+	if (pShape) { delete pShape; pShape =3D 0; }
+}
 =

 MeshShape*	MeshShape::GetMeshShape				(Ogre::Entity* pEntity) {
 	if (!pEntity) return 0;

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Mon Jun 18 11:06:55 2007
@@ -24,7 +24,8 @@
 #include "camera.h"
 #include "viewport.h"
 #include "rendertexture.h"
-#include "sound.h"
+#include "sound.h"
+#include "meshshape.h"
 #include "terrain.h"
 #include "radar.h"
 #include <Ogre.h>
@@ -809,9 +810,11 @@
 =

 =

 static int l_UnloadMeshName (lua_State *L) { PROFILE
-	Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(luaL_checks=
tring(L,1),Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+	const char* szMeshName =3D luaL_checkstring(L,1);
+	Ogre::MeshPtr mesh =3D Ogre::MeshManager::getSingleton().load(szMeshName,=
Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
 	if (mesh.isNull()) return 0;
-	mesh->unload();
+	mesh->unload();
+	UnloadMeshShape(szMeshName);
 	//Ogre::MeshManager::getSingleton().unload(luaL_checkstring(L,1));
 	return 0;
 }



From no-reply at zwischenwelt.org  Mon Jun 18 20:18:30 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Jun 2007 18:18:30 -0000
Subject: [Iris-commit] [IRIS] r1213 - in /trunk: bin/iris2.exe
 data/models/models/to_019000/mdl_019999.mesh
 data/models/models/to_020000/mdl_019999.mesh
Message-ID: <20070618181831.102E1B1466D@localhost.localdomain>

Author: sience
Date: Mon Jun 18 20:18:28 2007
New Revision: 1213

Log:
-new binary
-fixed static water path

Added:
    trunk/data/models/models/to_020000/mdl_019999.mesh   (with props)
Removed:
    trunk/data/models/models/to_019000/mdl_019999.mesh
Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Mon Jun 18 21:35:44 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Jun 2007 19:35:44 -0000
Subject: [Iris-commit] [IRIS] r1214 - in /trunk/data/lua: lib.packet.lua
	lib.protocol.lua
Message-ID: <20070618193545.77E13B1466D@localhost.localdomain>

Author: sience
Date: Mon Jun 18 21:35:42 2007
New Revision: 1214

Log:
-packet 223 (0xDF) fix

Modified:
    trunk/data/lua/lib.packet.lua
    trunk/data/lua/lib.protocol.lua

Modified: trunk/data/lua/lib.packet.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.packet.lua (original)
+++ trunk/data/lua/lib.packet.lua Mon Jun 18 21:35:42 2007
@@ -232,16 +232,14 @@
 gPacketType.kPacket_Mahjong											=3D { id=3Dhex2num("0xDA") }
 gPacketType.kPacket_Character_Transfer_Log							=3D { id=3Dhex2num("0xDB"=
) }
 gPacketType.kPacket_AOSObjProp										=3D { id=3Dhex2num("0xDC") } -- si=
ze was not in necro list
-
 -- dd df (compressed gump und buff system)
 gPacketType.kPacket_Compressed_Gump									=3D { id=3Dhex2num("0xDD") }
+-- unknown yet
+gPacketType.kPacket_unknownDEpacket									=3D { id=3Dhex2num("0xDE") }
+-- buff/debuff packet
+gPacketType.kPacket_BuffDebuff_System								=3D { id=3Dhex2num("0xDF") }
 =

 --[[
-
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xDD") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xDE") }
-gPacketType.kPacket_								=3D { id=3Dhex2num("0xDF") }
-
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xE0") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xE1") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xE2") }
@@ -275,5 +273,4 @@
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xFD") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xFE") }
 gPacketType.kPacket_								=3D { id=3Dhex2num("0xFF") }
-
 ]]--

Modified: trunk/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.protocol.lua (original)
+++ trunk/data/lua/lib.protocol.lua Mon Jun 18 21:35:42 2007
@@ -6,9 +6,9 @@
 -- changed NecroPacketData - (0x0B oldsize=3D"0x010A" , damage packet)
 -- packet sizes from necrotoolz.sourceforge.net/kairpacketguide/index.html=
 (0 means dynamic) contains all sizes from 0x00 to 0xDB
 gNecroPacketData_ID 	=3D {  "0x00",  "0x01",  "0x02",  "0x03",  "0x04",  "=
0x05",  "0x06",  "0x07",  "0x08",  "0x09",  "0x0A",  "0x0B",  "0x0C",  "0x0=
D",  "0x0E",  "0x0F",  "0x10",  "0x11",  "0x12",  "0x13",  "0x14",  "0x15",=
  "0x16",  "0x17",  "0x18",  "0x19",  "0x1A",  "0x1B",  "0x1C",  "0x1D",  "=
0x1E",  "0x1F",  "0x20",  "0x21",  "0x22",  "0x23",  "0x24",  "0x25",  "0x2=
6",  "0x27",  "0x28",  "0x29",  "0x2A",  "0x2B",  "0x2C",  "0x2D",  "0x2E",=
  "0x2F",  "0x30",  "0x31",  "0x32",  "0x33",  "0x34",  "0x35",  "0x36",  "=
0x37",  "0x38",  "0x39",  "0x3A",  "0x3B",  "0x3C",  "0x3D",  "0x3E",  "0x3=
F",  "0x40",  "0x41",  "0x42",  "0x43",  "0x44",  "0x45",  "0x46",  "0x47",=
  "0x48",  "0x49",  "0x4A",  "0x4B",  "0x4C",  "0x4D",  "0x4E",  "0x4F",  "=
0x50",  "0x51",  "0x52",  "0x53",  "0x54",  "0x55",  "0x56",  "0x57",  "0x5=
8",  "0x59",  "0x5A",  "0x5B",  "0x5C",  "0x5D",  "0x5E",  "0x5F",  "0x60",=
  "0x61",  "0x62",  "0x63",  "0x64",  "0x65",  "0x66",  "0x67",  "0x68",  "=
0x69",  "0x6A",  "0x6B",  "0x6C",  "0x6D",  "0x6E",  "0x6F",  "0x70",  "0x7=
1",  "0x72",  "0x73",  "0x74",  "0x75",  "0x76",  "0x77",  "0x78",  "0x79",=
  "0x7A",  "0x7B",  "0x7C",  "0x7D",  "0x7E",  "0x7F",  "0x80",  "0x81",  "=
0x82",  "0x83",  "0x84",  "0x85",  "0x86",  "0x87",  "0x88",  "0x89",  "0x8=
A",  "0x8B",  "0x8C",  "0x8D",  "0x8E",  "0x8F",  "0x90",  "0x91",  "0x92",=
  "0x93",  "0x94",  "0x95",  "0x96",  "0x97",  "0x98",  "0x99",  "0x9A",  "=
0x9B",  "0x9C",  "0x9D",  "0x9E",  "0x9F",  "0xA0",  "0xA1",  "0xA2",  "0xA=
3",  "0xA4",  "0xA5",  "0xA6",  "0xA7",  "0xA8",  "0xA9",  "0xAA",  "0xAB",=
  "0xAC",  "0xAD",  "0xAE",  "0xAF",  "0xB0",  "0xB1",  "0xB2",  "0xB3",  "=
0xB4",  "0xB5",  "0xB6",  "0xB7",  "0xB8",  "0xB9",  "0xBA",  "0xBB",  "0xB=
C",  "0xBD",  "0xBE",  "0xBF",  "0xC0",  "0xC1",  "0xC2",  "0xC3",  "0xC4",=
  "0xC5",  "0xC6",  "0xC7",  "0xC8",  "0xC9",  "0xCA",  "0xCB",  "0xCC",  "=
0xCD",  "0xCE",  "0xCF",  "0xD0",  "0xD1",  "0xD2",  "0xD3",  "0xD4",  "0xD=
5",  "0xD6",  "0xD7",  "0xD8",  "0xD9",  "0xDA",  "0xDB",  "0xDC",
-"0xDD"}
+"0xDD", "0xDE", "0xDF"}
 gNecroPacketData_Size 	=3D {"0x0068","0x0005","0x0007",     "0","0x0002","=
0x0005","0x0005","0x0007","0x000E","0x0005","0x000B","0x0007",     "0","0x0=
003",     "0","0x003D","0x00D7",     "0",     "0","0x000A","0x0006","0x0009=
","0x0001",     "0",     "0",     "0",     "0","0x0025",     "0","0x0005","=
0x0004","0x0008","0x0013","0x0008","0x0003","0x001A","0x0007","0x0014","0x0=
005","0x0002","0x0005","0x0001","0x0005","0x0002","0x0002","0x0011","0x000F=
","0x000A","0x0005","0x0001","0x0002","0x0002","0x000A","0x028D",     "0","=
0x0008","0x0007","0x0009",     "0",     "0",     "0","0x0002","0x0025",    =
 "0","0x00C9",     "0",     "0","0x0229","0x02C9","0x0005",     "0","0x000B=
","0x0049","0x005D","0x0005","0x0009",     "0",     "0","0x0006","0x0002", =
    "0",     "0",     "0","0x0002","0x000C","0x0001","0x000B","0x006E","0x0=
06A",     "0",     "0","0x0004","0x0002","0x0049",     "0","0x0031","0x0005=
","0x0009","0x000F","0x000D","0x0001","0x0004",     "0","0x0015",     "0", =
    "0","0x0003","0x0009","0x0013","0x0003","0x000E",     "0","0x001C",    =
 "0","0x0005","0x0002",     "0","0x0023","0x0010","0x0011",     "0","0x0009=
",     "0","0x0002",     "0","0x000D","0x0002",     "0","0x003E",     "0","=
0x0002","0x0027","0x0045","0x0002",     "0",     "0","0x0042",     "0",    =
 "0",     "0","0x000B",     "0",     "0",     "0","0x0013","0x0041",     "0=
","0x0063",     "0","0x0009",     "0","0x0002",     "0","0x001A",     "0","=
0x0102","0x0135","0x0033",     "0",     "0","0x0003","0x0009","0x0009","0x0=
009","0x0095",     "0",     "0","0x0004",     "0",     "0","0x0005",     "0=
",     "0",     "0",     "0","0x000D",     "0",     "0",     "0",     "0", =
    "0","0x0040","0x0009",     "0",     "0","0x0003","0x0006","0x0009","0x0=
003",     "0",     "0",     "0","0x0024",     "0",     "0",     "0","0x0006=
","0x00CB","0x0001","0x0031","0x0002","0x0006","0x0006","0x0007",     "0","=
0x0001",     "0","0x004E",     "0","0x0002","0x0019",     "0",     "0",    =
 "0",     "0",     "0",     "0","0x010C",     "0",     "0","0x0009",
-"0"}
+"0", "0", "0"}
 gNecroPacketSize =3D {}
 for i =3D 1,table.getn(gNecroPacketData_ID) do =

 	gNecroPacketSize[hex2num(gNecroPacketData_ID[i])] =3D hex2num(gNecroPacke=
tData_Size[i]) =




From no-reply at zwischenwelt.org  Tue Jun 19 00:10:06 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 18 Jun 2007 22:10:06 -0000
Subject: [Iris-commit] [IRIS] r1215 - /trunk/data/config.lua.dist
Message-ID: <20070618221014.2B0E510701CE@localhost.localdomain>

Author: sience
Date: Tue Jun 19 00:10:04 2007
New Revision: 1215

Log:
-small config.lua.dist fix

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Tue Jun 19 00:10:04 2007
@@ -127,7 +127,6 @@
 		gGameServerSlot =3D 0,
 		gCharacterSlotAdd =3D 0,
 		gServerSeed =3D hex2num("0xFFFFFFFF"),
-		gPolServer =3D true						--must be true for Definance regardless if its =
PolServer
 	}
 =

 -- in config.lua you can add shards like this: 	=




From no-reply at zwischenwelt.org  Tue Jun 19 19:21:10 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Jun 2007 17:21:10 -0000
Subject: [Iris-commit] [IRIS] r1216 - /trunk/data/lua/lib.mount.lua
Message-ID: <20070619172110.6AB13B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Tue Jun 19 19:21:09 2007
New Revision: 1216

Log:
added comment about mount ids, some of them missing in our translation table

Modified:
    trunk/data/lua/lib.mount.lua

Modified: trunk/data/lua/lib.mount.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mount.lua (original)
+++ trunk/data/lua/lib.mount.lua Tue Jun 19 19:21:09 2007
@@ -68,3 +68,48 @@
 gMountGrannyOverride[hex2num("0x31F")] =3D gStandardHorse
 gMountGrannyOverride[hex2num("0x11C")] =3D gStandardHorse
 for k,v in pairs(gMountTranslate) do if (gMountGrannyOverride[v]) then gMo=
untTranslate[k] =3D gMountGrannyOverride[v] end end
+
+--[[
+(tipp from btbn from uox3 code)
+skeletalmount=3D0x3EBB
+darksteed=3D0x3EA9
+etherealhorse=3D0x3EAA
+nightmare=3D0x3EB5
+silversteed=3D0x3EA8
+britwarhorse=3D0x3EB2
+comwarhorse=3D0x3EB1
+minaxwarhorse=3D0x3EAF
+slwarhorse=3D0x3EB0
+unicorn=3D0x3EB4
+kirin=3D0x3EAD
+seahorse=3D0x3EB3
+giantfirebeetle=3D0x3E95
+ethereal_llama=3D0x3EAB
+etherealostard=3D0x3EAC
+nightmare2=3D0x3EA7
+nightmare3=3D0x3EA9
+tdnightmare=3D0x3EB7
+ridgeback=3D0x3EB8
+firesteed=3D0x3E9E
+etherealkirin=3D0x3E9C
+horse1=3D0x3EA2
+etherealunicorn=3D0x3EB4
+etherealridgeback=3D0x3E9A
+etherealswampdragon=3D0x3E98
+etherealbeetle=3D0x3E97
+horse2=3D0x3E9F
+desertostard=3D0x3EA3
+frenziedostard=3D0x3EA4
+forestostard=3D0x3EA5
+llama=3D0x3EA6
+horse3=3D0x3EA0
+horse4=3D0x3EA1
+hiryu=3D0x3E94
+chimera=3D0x3E90
+cusidhe=3D0x3E91
+mondainsteed=3D0x3E92
+giantbeetle=3D0x3EBC
+swampdragon=3D0x3EBD
+armorswampdragon=3D0x3EBE
+kirin=3D0x3EAD
+]]--



From no-reply at zwischenwelt.org  Tue Jun 19 19:21:54 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Jun 2007 17:21:54 -0000
Subject: [Iris-commit] [IRIS] r1217 - /trunk/data/lua/lib.mount.lua
Message-ID: <20070619172154.AE451B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Tue Jun 19 19:21:54 2007
New Revision: 1217

Log:
added comment about mount ids

Modified:
    trunk/data/lua/lib.mount.lua

Modified: trunk/data/lua/lib.mount.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mount.lua (original)
+++ trunk/data/lua/lib.mount.lua Tue Jun 19 19:21:54 2007
@@ -105,7 +105,7 @@
 horse3=3D0x3EA0
 horse4=3D0x3EA1
 hiryu=3D0x3E94
-chimera=3D0x3E90
+chimera=3D0x3E90  -- also known as reptalon/raptalon ?
 cusidhe=3D0x3E91
 mondainsteed=3D0x3E92
 giantbeetle=3D0x3EBC



From no-reply at zwischenwelt.org  Tue Jun 19 20:06:42 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Jun 2007 18:06:42 -0000
Subject: [Iris-commit] [IRIS] r1218 - in /trunk/data/lua:
 lib.3d.mobileanim.lua lib.charcreate.lua lib.models.lua
Message-ID: <20070619180642.D6941B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Tue Jun 19 20:06:41 2007
New Revision: 1218

Log:
fixed char creation on wolfpack and 2 small lua crashes due to different pa=
cket order

Modified:
    trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.charcreate.lua
    trunk/data/lua/lib.models.lua

Modified: trunk/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobileanim.lua (original)
+++ trunk/data/lua/lib.3d.mobileanim.lua Tue Jun 19 20:06:41 2007
@@ -55,6 +55,7 @@
 =

 -- calling this interrupts any playing serverside anim
 function Renderer3D:MobileStartClientSideAnim (mobile)
+	if (not mobile.equipment) then return end
 	mobile.animinit =3D true
 	local bodyid =3D MobileArtId2BodyId(mobile.artid)
 	=


Modified: trunk/data/lua/lib.charcreate.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.charcreate.lua (original)
+++ trunk/data/lua/lib.charcreate.lua Tue Jun 19 20:06:41 2007
@@ -125,9 +125,9 @@
 	chardata.skill2value 	=3D hex2num("0x32")
 	chardata.skill3 		=3D hex2num("0x2B")
 	chardata.skill3value 	=3D hex2num("0x00")
-	chardata.skinColor		=3D hex2num("0x00BF")
-	chardata.hairStyle		=3D hex2num("0x2FC1")
-	chardata.hairColor		=3D hex2num("0x0034")
+	chardata.skinColor		=3D hex2num("0x03EA") -- 0x03EA(human) 0x00BF(elf)
+	chardata.hairStyle		=3D hex2num("0x203B") -- 0x2fcc 0x2044 0x2fbf 0x203B(=
human) 0x2FC1  =

+	chardata.hairColor		=3D hex2num("0x044E") -- 0x044E(human) 0x0034(elf)
 	chardata.facialHair		=3D hex2num("0x0000")
 	chardata.facialHairColor=3D hex2num("0x0000")
 	chardata.location		=3D hex2num("0x0003")
@@ -149,6 +149,60 @@
 	]]--
 	return chardata
 end
+
+--[[
+btbn tipps : wolfpack source
+haircolor human : return ( ( color >=3D 0x44E ) && ( color <=3D 0x47D ) ) =
? true : false;
+haircolor elf : if ( ( color >=3D 0x34 ) && ( color <=3D 0x39 ) )
+
+ skin color human : return ( ( color >=3D 0x3EA ) && ( color <=3D 0x422 ) =
) ? true : false;
+
+inline bool isHairsByRace( quint16 model, bool race )
+{
+    if (!race)    // Human's Hairs
+    {
+        return    ( ( ( model >=3D 0x203B ) && ( model <=3D 0x203D ) ) || =
( ( model >=3D 0x2044 ) && ( model <=3D 0x204A ) ) ) ? true : false;
+    }
+    else        // Elf's Hairs
+    {
+        return  ( ( ( model >=3D 0x2fbf ) && ( model <=3D 0x2fc2 ) ) || ( =
( model >=3D 0x2fcc ) && ( model <=3D 0x2fd1 ) ) ) ? true : false;
+    }
+}
+
+inline bool isHairsByRaceColor( quint16 color, bool race )
+{
+    if (!race)    // Human's Hairs
+    {
+        return ( ( color >=3D 0x44E ) && ( color <=3D 0x47D ) ) ? true : f=
alse;
+    }
+    else        // Elf's Hairs
+    {
+        // Line 1 of Colors
+        if ( ( color >=3D 0x34 ) && ( color <=3D 0x39 ) )
+            return true;
+        // Line 2 of Colors
+        else if ( ( color =3D=3D 0x101 ) || ( color =3D=3D 0x6b8 ) || ( co=
lor =3D=3D 0x207 ) || ( color =3D=3D 0x211 ) || ( color =3D=3D 0x26c ) || (=
 color =3D=3D 0x2c3 ) )
+            return true;
+        // Line 3 of Colors
+        else if ( ( color =3D=3D 0x2c9 ) || ( color =3D=3D 0x1e4 ) || ( co=
lor =3D=3D 0x239 ) || ( color =3D=3D 0x369 ) || ( color =3D=3D 0x59d ) || (=
 color =3D=3D 0x853 ) )
+            return true;
+        // Line 4 of Colors
+        else if ( ( ( color >=3D 0x8e ) && ( color <=3D 0x92 ) ) || ( colo=
r =3D=3D 0x159 ) )
+            return true;
+        // Line 5 of Colors
+        else if ( ( ( color >=3D 0x15a ) && ( color <=3D 0x15e ) ) || ( co=
lor =3D=3D 0x1bd ) )
+            return true;
+        // Line 6 of Colors
+        else if ( ( color =3D=3D 0x725 ) || ( color =3D=3D 0x58 ) || ( col=
or =3D=3D 0x128 ) || ( color =3D=3D 0x12f ) || ( color =3D=3D 0x1f3 ) || ( =
color =3D=3D 0x251 ) )
+            return true;
+        // Last Lines
+        else if ( ( ( color >=3D 0x31d ) && ( color <=3D 0x322 ) ) || ( ( =
color >=3D 0x323 ) && ( color <=3D 0x326 ) ) || ( ( color >=3D 0x386 ) && (=
 color <=3D 0x38a ) ) )
+            return true;
+        else
+            return false;
+    }
+}
+]]--
 	=

 --[[
 Note: Client Message

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Tue Jun 19 20:06:41 2007
@@ -500,6 +500,7 @@
 =

 	-- TODO: Debug and check why RunUO sends kPacket_Equipped_MOB with artid =
=3D=3D Zero
 	if (mobile.artid =3D=3D 0) then return end
+	if (not mobile.equipment) then return end -- happens when being teleported
 	=

 	local mount =3D mobile.equipment[kLayer_Mount]
 	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelPa=
rtModelIDs(mobile)



From no-reply at zwischenwelt.org  Tue Jun 19 23:38:07 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Jun 2007 21:38:07 -0000
Subject: [Iris-commit] [IRIS] r1219 - in /trunk/data/lua: net.other.lua
	net.paperdoll.lua
Message-ID: <20070619213808.6F36AB1466D@localhost.localdomain>

Author: sience
Date: Tue Jun 19 23:38:06 2007
New Revision: 1219

Log:
-Virtues added (not fully wroking, but a step into the right direction)

Modified:
    trunk/data/lua/net.other.lua
    trunk/data/lua/net.paperdoll.lua

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Tue Jun 19 23:38:06 2007
@@ -564,7 +564,7 @@
 BYTE[4]	-Beheld Serial (Only if (Gump ID =3D 461 && Button ID =3D 1 && Swi=
tches Count > 0))
 ]]--
 --TODO : readout checkboxes,radiobuttons and edit text fields
-function GumpReturnMsg(playerserial, gumpserial, ret_value, params)	-- len=
 0x17
+function GumpReturnMsg(playerserial, gumpserial, ret_value, params, switch=
count, textcount)	-- len 0x17
 	local packetlen =3D 1 + 2 + 4*5 -- size for empty params
 	if (params) then
 		packetlen =3D packetlen + 4 * table.getn(params.switches)
@@ -583,13 +583,13 @@
 	=

 	=

 	if (params) then
-		out:PushNetUint32(table.getn(params.switches))	--switchcount =

+		out:PushNetUint32(table.getn(params.switches))	--switchcount
 		for k,v in pairs(params.switches) do =

 			out:PushNetUint32(v) =

 			--print("GumpReturnMsg switch:",v) =

 		end
 		=

-		out:PushNetUint32(table.getn(params.texts))	--textcount =

+		out:PushNetUint32(table.getn(params.texts))	--textcount
 		for k,v in pairs(params.texts) do =

 			local len =3D string.len(v.text)
 			out:PushNetUint16(v.id) =

@@ -598,8 +598,13 @@
 			--print("GumpReturnMsg text:",v.id,len,v.text)
 		end
 	else
-		out:PushNetUint32(0)	--switchcount =

-		out:PushNetUint32(0)	--textcount
+		if (switchcount and textcount) then
+			out:PushNetUint32(switchcount)	--switchcount
+			out:PushNetUint32(textcount)	--textcount
+		else
+			out:PushNetUint32(0)	--switchcount
+			out:PushNetUint32(0)	--textcount
+		end
 	end
 =

 	out:SendPacket()
@@ -969,6 +974,7 @@
 	end
 end =

 =

+
 --[[
 Packet ID: 0xAD
 Packet Name: Unicode/Ascii speech request

Modified: trunk/data/lua/net.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.paperdoll.lua (original)
+++ trunk/data/lua/net.paperdoll.lua Tue Jun 19 23:38:06 2007
@@ -63,6 +63,16 @@
 		end
 =

 		if (paperdoll.bIsPlayer) then
+			-- requests VirtuesGump
+			dialog.controls["btn_virtues"].onMouseDown =3D function (widget,mousebu=
tton)
+														if (mousebutton =3D=3D 1) then
+															widget.gfx:SetMaterial(widget.mat_pressed)
+															GumpReturnMsg(hex2num("0x0000809A"), hex2num("0x000001CD"),
+																		  hex2num("0x00000001"), nil,
+																		  hex2num("0x00000001"), hex2num("0x0000809A"))
+														end
+													end
+			-- requests AosStats		=

 			dialog.controls["btn_status"].onMouseDown =3D function (widget,mousebut=
ton)
 														if (mousebutton =3D=3D 1) then
 															widget.gfx:SetMaterial(widget.mat_pressed)



From no-reply at zwischenwelt.org  Wed Jun 20 01:06:06 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Jun 2007 23:06:06 -0000
Subject: [Iris-commit] [IRIS] r1220 - in /trunk: include/data.h src/data.cpp
Message-ID: <20070619230606.A0B5F109007F@localhost.localdomain>

Author: ghoulsblade
Date: Wed Jun 20 01:06:04 2007
New Revision: 1220

Log:
secured hueloader

Modified:
    trunk/include/data.h
    trunk/src/data.cpp

Modified: trunk/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data.h (original)
+++ trunk/include/data.h Wed Jun 20 01:06:04 2007
@@ -456,6 +456,7 @@
 	class cHueLoader : public cSmartPointable, public cFullFileLoader { publi=
c :
 		cHue		mLastHue;
 		cHueLoader		(const char* szDataFile);
+		int		GetMaxHueID		();
 		cHue*	GetHue	(const int iID); ///< result of Get is only valid until nex=
t Get call
 	};
 	=


Modified: trunk/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data.cpp (original)
+++ trunk/src/data.cpp Wed Jun 20 01:06:04 2007
@@ -592,7 +592,15 @@
 =

 cHueLoader	::cHueLoader	(const char* szDataFile) : cFullFileLoader(szDataF=
ile) {}
 	=

+int		cHueLoader::GetMaxHueID		() { =

+	// miFullFileSize =3D 265500
+	int eightblocks =3D (miFullFileSize - 4) / 708; // (265500 - 4) / 708 =3D=
 374.99...
+	int singles =3D ((miFullFileSize - 4) - 708*eightblocks) / 88;// ((265500=
 - 4) - 708*374)/ 88 =3D 704 / 88 =3D 8
+	return eightblocks*8 + singles; // 374*8 + 8 =3D 3000
+}
+
 cHue*	cHueLoader	::GetHue	(const int iID){
+	if (iID < 0 || iID >=3D GetMaxHueID()) return GetHue(0); // illegal hue a=
sked
 	mLastHue.miID =3D iID;
 	mLastHue.mpRawData =3D mpFullFileBuffer+((((8*88)+4)*(iID/8)) + 4 + (88*(=
iID%8)));
 	return &mLastHue;



From no-reply at zwischenwelt.org  Wed Jun 20 01:29:03 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Jun 2007 23:29:03 -0000
Subject: [Iris-commit] [IRIS] r1221 - in /trunk/data:
 gfm/player_paperdoll.gfm lua/lib.3d.map.lua lua/lib.gumpparser.lua
 lua/net.other.lua lua/net.paperdoll.lua
Message-ID: <20070619232904.271FF109007F@localhost.localdomain>

Author: sience
Date: Wed Jun 20 01:29:02 2007
New Revision: 1221

Log:
-virtues update

Modified:
    trunk/data/gfm/player_paperdoll.gfm
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.gumpparser.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net.paperdoll.lua

Modified: trunk/data/gfm/player_paperdoll.gfm
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/gfm/player_paperdoll.gfm (original)
+++ trunk/data/gfm/player_paperdoll.gfm Wed Jun 20 01:29:02 2007
@@ -50,4 +50,8 @@
  <event onclick=3D'' onclose=3D'' onmouseup=3D'' onmousedown=3D'' onkeypre=
ssed=3D''/>
  <gump normal=3D'0x7D2' over=3D'0x7D2' pressed=3D'0x7D2'/>
 </control>
+<control class=3D'button' name=3D'btn_virtues' left=3D'80' top=3D'3' width=
=3D'32' height=3D'32' freezed=3D'0' visible=3D'1' alpha=3D'0' flags=3D'0'>
+ <event onclick=3D'' onclose=3D'' onmouseup=3D'' onmousedown=3D'' onkeypre=
ssed=3D''/>
+ <gump normal=3D'0x71' over=3D'0x71' pressed=3D'0x71'/>
+</control>
 </form>

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Wed Jun 20 01:29:02 2007
@@ -181,6 +181,7 @@
 						entity.sy =3D sy
 						entity.sz =3D sz
 						=

+						-- obsolete ??
 						-- ApplyStaticEntityHue(entity,iHue)		=

 						=

 						local myLayer =3D iZ

Modified: trunk/data/lua/lib.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.gumpparser.lua (original)
+++ trunk/data/lua/lib.gumpparser.lua Wed Jun 20 01:29:02 2007
@@ -186,10 +186,12 @@
 				--				Optionaly there is a color parameter. =

 				-- TODO : HUE
 				elseif ((command =3D=3D "gumppic") and (table.getn(bToken)>=3D 4)) then
-					local widget =3D MakeBorderGumpPart(curparent,bToken[4],bToken[2],bTo=
ken[3])
+					local huenumber=3DbToken[6] or 0
+					local widget =3D MakeBorderGumpPart( curparent, bToken[4], bToken[2],=
 bToken[3], 0, 0, 0, tonumber(huenumber) )
 					widget.mbIgnoreMouseOver =3D false
-					if (bToken[5]=3D=3D"hue" and bToken[6]) then
-						print("gumppic hue: "..tonumber(bToken[6]))
+					if (bToken[8]) then
+						print("gumppic class=3D"..bToken[8])
+						--B1, 0F 00 gPlayerBodySerial, 00 00 01 CD, 00 00 00 70
 					end
 				--gumppictiled <x> <y> <width> <height> <gumpid>
 				--Description:  Similar to GumpPic, but the gumppic is tiled to the gi=
ven <height> and <width>.

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Wed Jun 20 01:29:02 2007
@@ -799,6 +799,10 @@
 =

 	decompressed:Destroy()
 =

+	if (input:Size() >=3D 4) then
+		local unknownterminator=3Dinput:PopNetUint32()
+	end
+
 	GumpParser(newgump)
 end
 =


Modified: trunk/data/lua/net.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.paperdoll.lua (original)
+++ trunk/data/lua/net.paperdoll.lua Wed Jun 20 01:29:02 2007
@@ -4,7 +4,7 @@
 -- mobileserial : also known as character/player id
 =

 gLayerOrder =3D {
-	hex2num("0x09"),    -- - N/A (not used)
+	hex2num("0x09"),					   -- - N/A (not used)
     hex2num("0x14"),                       -- - Back (Cloak)
     hex2num("0x10"),                       -- - Facial Hair
     hex2num("0x12"),                       -- - Earrings
@@ -67,9 +67,9 @@
 			dialog.controls["btn_virtues"].onMouseDown =3D function (widget,mousebu=
tton)
 														if (mousebutton =3D=3D 1) then
 															widget.gfx:SetMaterial(widget.mat_pressed)
-															GumpReturnMsg(hex2num("0x0000809A"), hex2num("0x000001CD"),
+															GumpReturnMsg(gPlayerBodySerial, hex2num("0x000001CD"),
 																		  hex2num("0x00000001"), nil,
-																		  hex2num("0x00000001"), hex2num("0x0000809A"))
+																		  hex2num("0x00000001"), gPlayerBodySerial)
 														end
 													end
 			-- requests AosStats		=




From no-reply at zwischenwelt.org  Wed Jun 20 01:33:58 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 19 Jun 2007 23:33:58 -0000
Subject: [Iris-commit] [IRIS] r1222 - /trunk/bin/iris2.exe
Message-ID: <20070619233358.6708D109007F@localhost.localdomain>

Author: sience
Date: Wed Jun 20 01:33:57 2007
New Revision: 1222

Log:
-new binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Thu Jun 21 01:09:51 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 20 Jun 2007 23:09:51 -0000
Subject: [Iris-commit] [IRIS] r1223 - in /trunk: bin/ data/ data/lua/
 data/terrain/materials/ data/terrain/textures/
Message-ID: <20070620230952.23065B1466D@localhost.localdomain>

Author: sience
Date: Thu Jun 21 01:09:50 2007
New Revision: 1223

Log:
-directx redist file deleted ...eula
-new binary
-checks added
-sand+cobblestone added for terrainshaders
-particle option added to config.lua.dist

Added:
    trunk/data/terrain/textures/Sand_large_pattern_512.dds   (with props)
    trunk/data/terrain/textures/cobblestone_large_pattern_512.dds   (with p=
rops)
Removed:
    trunk/bin/d3dx9_33.dll
Modified:
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist
    trunk/data/lua/lib.gumpparser.lua
    trunk/data/lua/lib.walking2.lua
    trunk/data/lua/main.lua
    trunk/data/lua/net.objects.lua
    trunk/data/skippedfallbacks.lua
    trunk/data/terrain/materials/terrain.material

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Thu Jun 21 01:09:50 2007
@@ -233,5 +233,8 @@
 -- activate Shader 2.0 for Terrainengine (true/false)
 gTerrainShader =3D false
 =

+-- huedfx
+gParticleEffects =3D true
+
 gDisableSmoothWalk =3D false
 gDisableHumanClientSideAnim =3D false

Modified: trunk/data/lua/lib.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.gumpparser.lua (original)
+++ trunk/data/lua/lib.gumpparser.lua Thu Jun 21 01:09:50 2007
@@ -189,10 +189,7 @@
 					local huenumber=3DbToken[6] or 0
 					local widget =3D MakeBorderGumpPart( curparent, bToken[4], bToken[2],=
 bToken[3], 0, 0, 0, tonumber(huenumber) )
 					widget.mbIgnoreMouseOver =3D false
-					if (bToken[8]) then
-						print("gumppic class=3D"..bToken[8])
-						--B1, 0F 00 gPlayerBodySerial, 00 00 01 CD, 00 00 00 70
-					end
+					if (bToken[8]) then print("gumppic class=3D"..bToken[8]) end
 				--gumppictiled <x> <y> <width> <height> <gumpid>
 				--Description:  Similar to GumpPic, but the gumppic is tiled to the gi=
ven <height> and <width>.
 				elseif ((command =3D=3D "gumppictiled") and (table.getn(bToken)>=3D 6)=
) then

Modified: trunk/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.walking2.lua (original)
+++ trunk/data/lua/lib.walking2.lua Thu Jun 21 01:09:50 2007
@@ -1,10 +1,10 @@
 -- Walking Implementation for PC
 -- thx for helping to Arahil
 =

-gDebugWalkingDetailed =3D true =

+gDebugWalkingDetailed =3D true =

 =

 function printwalkdebug (...) if (gDebugWalkingDetailed) then printdebug("=
walking",unpack(arg)) end end =

-
+
 -- returns tiletype,zloc
 function GetAbsTile (xloc,yloc) =

 	return gGroundBlockLoader:GetTile(	math.floor(xloc/8), =

@@ -82,7 +82,7 @@
 			end
 			=

 			flaglist[zloc].bSurface =3D flaglist[zloc].bSurface or isSurface(t.miFl=
ags)
-			flaglist[zloc].bBridge =3D flaglist[zloc].bBridge or isBridge (t.miFlag=
s)
+			flaglist[zloc].bBridge =3D flaglist[zloc].bBridge or isBridge (t.miFlag=
s)
 			=

 			if (iHeight > 0) then
 				flaglist[zloc].bImpassable =3D flaglist[zloc].bImpassable or isImpassa=
ble(t.miFlags)
@@ -91,14 +91,14 @@
 						flaglist[zloc + j] =3D { }
 					end
 					flaglist[zloc + j].bImpassable =3D flaglist[zloc + j].bImpassable or =
isImpassable(t.miFlags)
-					flaglist[zloc + j].bSurface =3D flaglist[zloc + j].bSurface or isSurf=
ace(t.miFlags)
+					flaglist[zloc + j].bSurface =3D flaglist[zloc + j].bSurface or isSurf=
ace(t.miFlags)
 					flaglist[zloc + j].bBridge =3D flaglist[zloc + j].bBridge or isBridge=
 (t.miFlags) =

 				end
 				=

 				if (flaglist[zloc + iHeight] =3D=3D nil) then
 					flaglist[zloc + iHeight] =3D { }
 				end
-				flaglist[zloc + iHeight].bSurface =3D flaglist[zloc + iHeight].bSurfac=
e or isSurface(t.miFlags)
+				flaglist[zloc + iHeight].bSurface =3D flaglist[zloc + iHeight].bSurfac=
e or isSurface(t.miFlags)
 				flaglist[zloc + iHeight].bBridge =3D flaglist[zloc + iHeight].bBridge =
or isBridge(t.miFlags) =

 			end
 			=

@@ -109,7 +109,7 @@
 =

 -- returns an array of flags (impassable, surface, maptile)
 -- array might contain empty entries (meaning on the specific z level is n=
either something blocking nor a surface/maptile)
-function GetWalkingBlockFlags(bx, by, tx, ty)
+function GetWalkingBlockFlags(bx, by, tx, ty)
 	printwalkdebug("--GetWalkingBlockFlags() for bx=3D"..bx.."  by=3D"..by.."=
  tx=3D"..tx.."  ty=3D"..ty.."  ("..(bx*8 + tx).."/"..(by*8+ty)..")") =

 	=

 	if ( not(gTileTypeLoader) ) then return {} end
@@ -161,30 +161,35 @@
 	local yloc=3Dby*8+ty
 	for k,dynamic in pairs(gDynamics) do =

 		-- is this a multi?
-		if(dynamic.artid < gMulti_ID + 100) then
-			-- no mulit just a normal tile
-			if (dynamic.xloc =3D=3D xloc and dynamic.yloc =3D=3D yloc) then
-				printwalkdebug("----new dynamic ID=3D" .. dynamic.artid)
-				GetWalkingBlockFlagsHelper(dynamic.zloc,dynamic.artid,flaglist)
-			end
-		else
-			-- multi found, special collision handling
-			local id =3D dynamic.artid - gMulti_ID
-			local parts =3D gMultiLoader:CountMultiParts(id)
-			printwalkdebug("---Dynamics multi id=3D" .. id .. " parts=3D" .. parts)
-			for p =3D 0, parts-1 do
-				local blocknum,x,y,z,flags
-				blocknum,x,y,z,flags =3D gMultiLoader:GetMultiParts(id,p)
-				=

-				local pxloc,pyloc,pzloc
-				pxloc =3D dynamic.xloc + x
-				pyloc =3D dynamic.yloc + y
-				pzloc =3D dynamic.zloc + z
-				=

-				if (flags =3D=3D 1 and pxloc =3D=3D xloc and pyloc =3D=3D yloc) then
-					printwalkdebug("----new dynamic ID=3D" .. blocknum)
-					GetWalkingBlockFlagsHelper(pzloc,blocknum,flaglist)
-				end						=

+		if(dynamic.artid) then
+			if(dynamic.artid < gMulti_ID + 100) then
+				-- no mulit just a normal tile
+				if (dynamic.xloc =3D=3D xloc and dynamic.yloc =3D=3D yloc) then
+					printwalkdebug("----new dynamic ID=3D" .. dynamic.artid)
+					GetWalkingBlockFlagsHelper(dynamic.zloc,dynamic.artid,flaglist)
+				end
+			else
+
+				-- multi found, special collision handling
+				if (gMultiLoader) then
+					local id =3D dynamic.artid - gMulti_ID
+					local parts =3D gMultiLoader:CountMultiParts(id)
+					printwalkdebug("---Dynamics multi id=3D" .. id .. " parts=3D" .. part=
s)
+					for p =3D 0, parts-1 do
+						local blocknum,x,y,z,flags
+						blocknum,x,y,z,flags =3D gMultiLoader:GetMultiParts(id,p)
+						=

+						local pxloc,pyloc,pzloc
+						pxloc =3D dynamic.xloc + x
+						pyloc =3D dynamic.yloc + y
+						pzloc =3D dynamic.zloc + z
+						=

+						if (flags =3D=3D 1 and pxloc =3D=3D xloc and pyloc =3D=3D yloc) then
+							printwalkdebug("----new dynamic ID=3D" .. blocknum)
+							GetWalkingBlockFlagsHelper(pzloc,blocknum,flaglist)
+						end						=

+					end
+				end
 			end
 		end
 	end
@@ -194,112 +199,112 @@
 end
 =

 =

--- check for free space (!impassable), char is 15 zlevels tall
+-- check for free space (!impassable), char is 15 zlevels tall
 -- if diagonalCheck is true land tiles above zloc+gMaxZ_Climb (resp. +5 fo=
r maptiles) are blocking, underneath they are ignored
--- returns true or false
-function CheckZSpace(flaglist, zloc, diagonalCheck, height)  =

+-- returns true or false
+function CheckZSpace(flaglist, zloc, diagonalCheck, height)  =

 	diagonalCheck =3D diagonalCheck or false =

 	height =3D height or 15
 	for i=3D1, height, 1 do
-		if (flaglist[zloc+i] ~=3D nil) then
-			if (diagonalCheck) then
-				if (flaglist[zloc+i].bImpassable
-					or (flaglist[zloc+i].bMaptile and (i > gMaxZ_Climb + 5)) =

-					or (flaglist[zloc+i].bSurface and (i > gMaxZ_Climb))
-				) then
-					return false =

-				end
-			elseif (flaglist[zloc+i].bImpassable or flaglist[zloc+i].bSurface) then =

-				return false
+		if (flaglist[zloc+i] ~=3D nil) then
+			if (diagonalCheck) then
+				if (flaglist[zloc+i].bImpassable
+					or (flaglist[zloc+i].bMaptile and (i > gMaxZ_Climb + 5)) =

+					or (flaglist[zloc+i].bSurface and (i > gMaxZ_Climb))
+				) then
+					return false =

+				end
+			elseif (flaglist[zloc+i].bImpassable or flaglist[zloc+i].bSurface) then =

+				return false
 			end
 		end
 	end
 	=

 	return true
 end
-
-
--- check adjacent coordinates when walking diagonally
--- OSI is not looking for a surface on those tiles, it only checks that th=
ere is nothing blocking
--- OSI takes the current z level to check for that, not the z level of the=
 target tile
--- returns true or false
-function CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
-	local bDiagonal
-	local diagonalFlagList1, diagonalFlagList2
-	printwalkdebug("------direction: "..iDir)
-	if (iDir =3D=3D 1) then --northeast (right)
-		bDiagonal =3D true
-		if (tx =3D=3D 0) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
-		end
-		=

-		if (ty =3D=3D 7) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
-		end
-							=

-	elseif (iDir =3D=3D 3) then --southeast (down)
-		bDiagonal =3D true
-		if (tx =3D=3D 0) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
-		end
-		=

-		if (ty =3D=3D 0) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
-		end
-		=

-	elseif (iDir =3D=3D 5) then --southwest (left)
-		bDiagonal =3D true
-		if (tx =3D=3D 7) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
-		end
-		=

-		if (ty =3D=3D 0) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
-		end
-		=

-	elseif (iDir =3D=3D 7) then --northwest (up)
-		bDiagonal =3D true
-		if (tx =3D=3D 7) then
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
-		else
-			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
-		end
-		=

-		if (ty =3D=3D 7) then
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
-		else
-			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
-		end
-	end
-			=

-	if (bDiagonal) then
-		printwalkdebug("------walking diagonally")
-				=

-		if (CheckZSpace(diagonalFlagList1, iStartZ, true) and CheckZSpace(diagon=
alFlagList2, iStartZ, true)) then
-			printwalkdebug("-------no obstacles on adjacent coordinates")
-			return true
-		else
-			printwalkdebug("-------adjacent tiles are not free to walk, blocking")
-			return false
-		end
-	else
-		return true
-	end
-end
-
-
+
+
+-- check adjacent coordinates when walking diagonally
+-- OSI is not looking for a surface on those tiles, it only checks that th=
ere is nothing blocking
+-- OSI takes the current z level to check for that, not the z level of the=
 target tile
+-- returns true or false
+function CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+	local bDiagonal
+	local diagonalFlagList1, diagonalFlagList2
+	printwalkdebug("------direction: "..iDir)
+	if (iDir =3D=3D 1) then --northeast (right)
+		bDiagonal =3D true
+		if (tx =3D=3D 0) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
+		end
+		=

+		if (ty =3D=3D 7) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
+		end
+							=

+	elseif (iDir =3D=3D 3) then --southeast (down)
+		bDiagonal =3D true
+		if (tx =3D=3D 0) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx-1, by, 7, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx-1, ty)
+		end
+		=

+		if (ty =3D=3D 0) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
+		end
+		=

+	elseif (iDir =3D=3D 5) then --southwest (left)
+		bDiagonal =3D true
+		if (tx =3D=3D 7) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
+		end
+		=

+		if (ty =3D=3D 0) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by-1, tx, 7)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty-1)
+		end
+		=

+	elseif (iDir =3D=3D 7) then --northwest (up)
+		bDiagonal =3D true
+		if (tx =3D=3D 7) then
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx+1, by, 0, ty)
+		else
+			diagonalFlagList1 =3D GetWalkingBlockFlags(bx, by, tx+1, ty)
+		end
+		=

+		if (ty =3D=3D 7) then
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by+1, tx, 0)
+		else
+			diagonalFlagList2 =3D GetWalkingBlockFlags(bx, by, tx, ty+1)
+		end
+	end
+			=

+	if (bDiagonal) then
+		printwalkdebug("------walking diagonally")
+				=

+		if (CheckZSpace(diagonalFlagList1, iStartZ, true) and CheckZSpace(diagon=
alFlagList2, iStartZ, true)) then
+			printwalkdebug("-------no obstacles on adjacent coordinates")
+			return true
+		else
+			printwalkdebug("-------adjacent tiles are not free to walk, blocking")
+			return false
+		end
+	else
+		return true
+	end
+end
+
+
 =

 -- Can walk the tile, the tile's height and if the tile's a stair
 -- (about 30 in int, or 3.0 in float (*0.1) is the height of a door)
@@ -336,20 +341,20 @@
 			printwalkdebug("-----iCur=3D" .. iCur)
 			if (i < gMaxZ_Climb or (i < (gMaxZ_Climb + 5) and (flaglist[iCur].bMapt=
ile or flaglist[iCur].bBridge))) then
 				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
-					printwalkdebug("------found Surface");
-					if (CheckZSpace(flaglist, iCur)) then
+					printwalkdebug("------found Surface");
+					if (CheckZSpace(flaglist, iCur)) then
 						printwalkdebug("------checkSpace successful")
-						=

-						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+						=

+						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
 						=

 						printwalkdebug("End GetNearestGroundLevel()")
 						printwalkdebug("----------------------------")
 						printwalkdebug()
-						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
-						if (bAdjacent) then
-							return true, iCur
-						else
-							return false, 255
+						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
+						if (bAdjacent) then
+							return true, iCur
+						else
+							return false, 255
 						end
 					end
 				end
@@ -364,18 +369,18 @@
 				if ((not flaglist[iCur].bImpassable) and flaglist[iCur].bSurface) then
 					printwalkdebug("------found Surface");
 					if (CheckZSpace(flaglist, iCur)) then
-						printwalkdebug("------ checkSpace successful")
-						=

-						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
+						printwalkdebug("------ checkSpace successful")
+						=

+						local bAdjacent =3D CheckAdjacentTiles(bx, by, tx, ty, iDir, iStartZ)
 						=

 						printwalkdebug("End GetNearestGroundLevel()")
 						printwalkdebug("----------------------------")
 						printwalkdebug()
-						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
-						if (bAdjacent) then
-							return true, iCur
-						else
-							return false, 255
+						printdebug("walking",sprintf( "Walking calculations took %d msec.\n"=
, Client_GetTicks() - Walking_Start ))
+						if (bAdjacent) then
+							return true, iCur
+						else
+							return false, 255
 						end
 					end
 				end

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Thu Jun 21 01:09:50 2007
@@ -179,6 +179,7 @@
 =

 	MainMenuFinishedPreLoading()
 	StartMainMenu()
+
 	if (gStartInDebugMode) then StopMainMenu() StartDebugMenu() end
 =

 	-- mainloop

Modified: trunk/data/lua/net.objects.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.objects.lua (original)
+++ trunk/data/lua/net.objects.lua Thu Jun 21 01:09:50 2007
@@ -217,5 +217,5 @@
 			effect.itemid, effect.source_locx, effect.source_locy, effect.source_lo=
cz,
 			effect.target_locx, effect.target_locy, effect.target_locz, gEffectType=
s[effect.effect_type] or "")
 	=

-	gCurrentRenderer:AddEffect( effect )
-end
+	if (gParticleEffects) then gCurrentRenderer:AddEffect( effect ) end
+end

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Thu Jun 21 01:09:50 2007
@@ -311,3 +311,4 @@
 RegisterSkippedArtBillboardFallBack(6795) -- 0x1a8b name=3Dore cart
 RegisterSkippedArtBillboardFallBack(6790) -- 0x1a86 name=3Dore cart
 RegisterSkippedArtBillboardFallBack(8611) -- 0x21a3 name=3Dnodraw
+RegisterSkippedArtBillboardFallBack(3698) -- 0x0e72 name=3Dcannon

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Thu Jun 21 01:09:50 2007
@@ -154,6 +154,43 @@
 		}
 	}
 }
+//sand tiles
+material base_sand : terrain_base
+{
+	technique
+	{
+		pass base
+		{
+			vertex_program_ref terrainBase_vs
+			{
+				param_named materialDiffuse float3 1.0 1.0 1.0
+				param_named materialSpecular float4 0.10 0.10 0 35.0
+				param_named worldScale float 15
+			}
+			fragment_program_ref terrainBase_ps
+			{
+			}
+			texture_unit
+			{
+				texture Sand_large_pattern_512.dds
+			}
+		}
+	}
+}
+//cobblestone tiles
+material base_cobblestone : terrain_base
+{
+	technique
+	{
+		pass base
+		{
+			texture_unit
+			{
+				texture cobblestone_large_pattern_512.dds
+			}
+		}
+	}
+}
 =

 //###########################################
 // TRANSITION TILES
@@ -359,6 +396,118 @@
 //material tileid_3254 : base_forest
 //{
 //}
+//__________________________________________________________
+//Sand
+material tileid_22 : base_sand
+{
+}
+material tileid_23 : base_sand
+{
+}
+material tileid_24 : base_sand
+{
+}
+material tileid_25 : base_sand
+{
+}
+material tileid_26 : base_sand
+{
+}
+material tileid_27 : base_sand
+{
+}
+material tileid_28 : base_sand
+{
+}
+material tileid_441 : base_sand
+{
+}
+material tileid_442 : base_sand
+{
+}
+material tileid_443 : base_sand
+{
+}
+material tileid_444 : base_sand
+{
+}
+material tileid_445 : base_sand
+{
+}
+material tileid_446 : base_sand
+{
+}
+material tileid_447 : base_sand
+{
+}
+material tileid_448 : base_sand
+{
+}
+material tileid_449 : base_sand
+{
+}
+material tileid_450 : base_sand
+{
+}
+material tileid_451 : base_sand
+{
+}
+material tileid_452 : base_sand
+{
+}
+material tileid_453 : base_sand
+{
+}
+material tileid_454 : base_sand
+{
+}
+material tileid_455 : base_sand
+{
+}
+material tileid_456 : base_sand
+{
+}
+material tileid_457 : base_sand
+{
+}
+material tileid_458 : base_sand
+{
+}
+material tileid_459 : base_sand
+{
+}
+material tileid_460 : base_sand
+{
+}
+material tileid_461 : base_sand
+{
+}
+material tileid_462 : base_sand
+{
+}
+material tileid_463 : base_sand
+{
+}
+material tileid_464 : base_sand
+{
+}
+material tileid_465 : base_sand
+{
+}
+//__________________________________________________________
+//cobblestone
+material tileid_1001 : base_cobblestone
+{
+}
+material tileid_1002 : base_cobblestone
+{
+}
+material tileid_1003 : base_cobblestone
+{
+}
+material tileid_1004 : base_cobblestone
+{
+}
 =

 // Transitions:
 //__________________________________________________________



From no-reply at zwischenwelt.org  Thu Jun 21 19:35:09 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 21 Jun 2007 17:35:09 -0000
Subject: [Iris-commit] [IRIS] r1224 - /trunk/src/scripting.cpp
Message-ID: <20070621173509.EE920B1466B@localhost.localdomain>

Author: ghoulsblade
Date: Thu Jun 21 19:35:08 2007
New Revision: 1224

Log:
added shadow bindings for mystiq

Modified:
    trunk/src/scripting.cpp

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Thu Jun 21 19:35:08 2007
@@ -1116,6 +1116,32 @@
 static int 				l_OgreSetShadowTextureSize	(lua_State *L) { PROFILE  =

 	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureSize(luaL_checkin=
t(L,1));
 	return 0;
+}
+
+
+
+/// for lua :   void	  OgreSetShadowFarDistance	(float x)
+static int 				l_OgreSetShadowFarDistance	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowFarDistance(luaL_checknu=
mber(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowDirLightTextureOffset	(float x)
+static int 				l_OgreSetShadowDirLightTextureOffset	(lua_State *L) { PROFI=
LE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowDirLightTextureOffset(lu=
aL_checknumber(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureFadeStart	(float x)
+static int 				l_OgreSetShadowTextureFadeStart	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureFadeStart(luaL_ch=
ecknumber(L,1));
+	return 0;
+}
+
+/// for lua :   void	  OgreSetShadowTextureFadeEnd	(float x)
+static int 				l_OgreSetShadowTextureFadeEnd	(lua_State *L) { PROFILE  =

+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTextureFadeEnd(luaL_chec=
knumber(L,1));
+	return 0;
 }
 =

 /// for lua :   void	  OgreSetShadowTexturePixelFormat  ()
@@ -1548,6 +1574,10 @@
 	lua_register(L,"CreateLookupTableFromFile",			l_CreateLookupTableFromFile=
);
 	lua_register(L,"Uo16Color2Rgb",			l_Uo16Color2Rgb);
 	// shadow stuff	=

+	lua_register(L,"OgreSetShadowTextureFadeStart",						l_OgreSetShadowTextu=
reFadeStart);
+	lua_register(L,"OgreSetShadowTextureFadeEnd",						l_OgreSetShadowTexture=
FadeEnd);
+	lua_register(L,"OgreSetShadowDirLightTextureOffset",				l_OgreSetShadowDi=
rLightTextureOffset);
+	lua_register(L,"OgreSetShadowFarDistance",							l_OgreSetShadowFarDistan=
ce);
 	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
 	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
 	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);



From no-reply at zwischenwelt.org  Thu Jun 21 19:56:55 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 21 Jun 2007 17:56:55 -0000
Subject: [Iris-commit] [IRIS] r1225 - /trunk/bin/iris2.exe
Message-ID: <20070621175657.5D4ADB1466B@localhost.localdomain>

Author: sience
Date: Thu Jun 21 19:56:53 2007
New Revision: 1225

Log:
-new binary (for mystiq ;)

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Thu Jun 21 22:35:58 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 21 Jun 2007 20:35:58 -0000
Subject: [Iris-commit] [IRIS] r1226 - in /trunk/data: config.lua.dist
 lua/lib.packet.lua lua/net.objects.lua
Message-ID: <20070621203559.19060B1466D@localhost.localdomain>

Author: sience
Date: Thu Jun 21 22:35:57 2007
New Revision: 1226

Log:
-ParticleSystemBug fix (thanks to PMouse for fast Reporting)

Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.packet.lua
    trunk/data/lua/net.objects.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Thu Jun 21 22:35:57 2007
@@ -234,7 +234,7 @@
 gTerrainShader =3D false
 =

 -- huedfx
-gParticleEffects =3D true
+gParticleEffectSystem =3D true
 =

 gDisableSmoothWalk =3D false
 gDisableHumanClientSideAnim =3D false

Modified: trunk/data/lua/lib.packet.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.packet.lua (original)
+++ trunk/data/lua/lib.packet.lua Thu Jun 21 22:35:57 2007
@@ -9,7 +9,6 @@
 gPacketType.kPacket_Drop_Object										=3D { id=3Dhex2num("0x08") }
 gPacketType.kPacket_Single_Click									=3D { id=3Dhex2num("0x09") }
 gPacketType.kPacket_Edit											=3D { id=3Dhex2num("0x0A") }
---gPacketType.kPacket_Edit_Area										=3D { id=3Dhex2num("0x0B") } -- o=
ld client packet, not used anymore since 4.0.7a
 gPacketType.kPacket_Damage											=3D { id=3Dhex2num("0x0B") }
 gPacketType.kPacket_Tile_Data										=3D { id=3Dhex2num("0x0C") }
 gPacketType.kPacket_NPC_Data										=3D { id=3Dhex2num("0x0D") }

Modified: trunk/data/lua/net.objects.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.objects.lua (original)
+++ trunk/data/lua/net.objects.lua Thu Jun 21 22:35:57 2007
@@ -217,5 +217,5 @@
 			effect.itemid, effect.source_locx, effect.source_locy, effect.source_lo=
cz,
 			effect.target_locx, effect.target_locy, effect.target_locz, gEffectType=
s[effect.effect_type] or "")
 	=

-	if (gParticleEffects) then gCurrentRenderer:AddEffect( effect ) end
-end
+	if (gParticleEffectSystem) then gCurrentRenderer:AddEffect( effect ) end
+end



From no-reply at zwischenwelt.org  Fri Jun 22 00:24:34 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 21 Jun 2007 22:24:34 -0000
Subject: [Iris-commit] [IRIS] r1227 - in /branches/knut/data/lua/gui:
	gui.quit.lua gui.status.lua
Message-ID: <20070621222435.7BFD4B1466D@localhost.localdomain>

Author: varan
Date: Fri Jun 22 00:24:33 2007
New Revision: 1227

Log:
disconnect confirm gump added

Added:
    branches/knut/data/lua/gui/gui.status.lua
Modified:
    branches/knut/data/lua/gui/gui.quit.lua

Modified: branches/knut/data/lua/gui/gui.quit.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.quit.lua (original)
+++ branches/knut/data/lua/gui/gui.quit.lua Fri Jun 22 00:24:33 2007
@@ -1,2 +1,20 @@
 function OpenQuit()
+	local Gump =3D gGumpmanager.CreateGump( 100, 100 )
+	Gump.name =3D "quit"
+	=

+	Gump:addImage( 0, 0, hex2num("0x816"), 0, 0 )
+	Gump:addButton( 36, 78, hex2num("0x817"), hex2num("0x818"), hex2num("0x81=
9"), 0, 0 )
+	Gump:addButton( 99, 78, hex2num("0x81A"), hex2num("0x81B"), hex2num("0x81=
C"), 1, 0 )
+	Gump:addText( 35, 27, 'Quit', 0, 0, 0 )
+	Gump:addText( 35, 42, 'Ultima Online?', 0, 0, 0 )
+	=

+	Gump.onLeftClick =3D function( Gump, GumpObject )
+		if GumpObject.type =3D=3D gGumpmanager.gumpObjectType_Button then
+			if GumpObject.buttonid =3D=3D 0 then
+				Gump:destroy()
+			elseif GumpObject.buttonid =3D=3D 1 then
+				Terminate()
+			end
+		end
+	end
 end



From no-reply at zwischenwelt.org  Sat Jun 23 00:07:19 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 22 Jun 2007 22:07:19 -0000
Subject: [Iris-commit] [IRIS] r1228 - in /trunk: bin/ cb/
Message-ID: <20070622220720.6D1E410701CE@localhost.localdomain>

Author: sience
Date: Sat Jun 23 00:07:18 2007
New Revision: 1228

Log:
-vs8 binarys deleted (migration to MingW)

Removed:
    trunk/bin/OIS.dll
    trunk/bin/OgreMain.dll
    trunk/bin/Plugin_CgProgramManager.dll
    trunk/bin/Plugin_OctreeSceneManager.dll
    trunk/bin/Plugin_ParticleFX.dll
    trunk/bin/RenderSystem_Direct3D9.dll
    trunk/bin/RenderSystem_GL.dll
    trunk/bin/cg.dll
    trunk/bin/iris2.exe
    trunk/bin/msvcp60.dll
Modified:
    trunk/cb/iris 7.1.cbp

Modified: trunk/cb/iris 7.1.cbp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/cb/iris 7.1.cbp (original)
+++ trunk/cb/iris 7.1.cbp Sat Jun 23 00:07:18 2007
@@ -1,874 +1,666 @@
-<?xml version=3D"1.0"?>
-<!DOCTYPE CodeBlocks_project_file>
+<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes" ?>
 <CodeBlocks_project_file>
-	<FileVersion major=3D"1" minor=3D"1"/>
+	<FileVersion major=3D"1" minor=3D"6" />
 	<Project>
-		<Option title=3D"iris"/>
-		<Option makefile=3D"Makefile"/>
-		<Option makefile_is_custom=3D"0"/>
-		<Option active_target=3D"0"/>
-		<Option compiler=3D"0"/>
+		<Option title=3D"iris" />
+		<Option pch_mode=3D"0" />
+		<Option compiler=3D"gcc" />
 		<Build>
 			<Target title=3D"Release">
-				<Option output=3D"..\bin_cb\iris2_cb.exe"/>
-				<Option working_dir=3D"."/>
-				<Option object_output=3D"Release"/>
-				<Option deps_output=3D".deps"/>
-				<Option external_deps=3D"$(OGRE_HOME)\bin\release\OgreMain.dll;$(OGRE_=
HOME)\bin\release\OIS.dll;"/>
-				<Option type=3D"1"/>
-				<Option compiler=3D"0"/>
-				<Option projectResourceIncludeDirsRelation=3D"1"/>
+				<Option output=3D"..\bin_cb\iris2_cb.exe" prefix_auto=3D"0" extension_=
auto=3D"0" />
+				<Option object_output=3D"Release" />
+				<Option external_deps=3D"$(OGRE_HOME)\bin\release\OgreMain.dll;$(OGRE_=
HOME)\bin\release\OIS.dll;" />
+				<Option type=3D"1" />
+				<Option compiler=3D"gcc" />
+				<Option projectResourceIncludeDirsRelation=3D"1" />
 				<Compiler>
-					<Add option=3D"-march=3Dpentium3"/>
-					<Add option=3D"-fexpensive-optimizations"/>
-					<Add option=3D"-O3"/>
-					<Add option=3D"-frtti"/>
-					<Add option=3D"-DNDEBUG"/>
-					<Add option=3D"-D_CONSOLE"/>
-					<Add option=3D"-D_MT"/>
-					<Add directory=3D"..\include\boost"/>
-					<Add directory=3D"..\include\fmodx"/>
-					<Add directory=3D"..\include\lua"/>
-					<Add directory=3D"..\include\sdl"/>
-					<Add directory=3D"..\include\zlib"/>
+					<Add option=3D"-march=3Dpentium3" />
+					<Add option=3D"-fexpensive-optimizations" />
+					<Add option=3D"-O3" />
+					<Add option=3D"-frtti" />
+					<Add option=3D"-DNDEBUG" />
+					<Add option=3D"-D_CONSOLE" />
+					<Add option=3D"-D_MT" />
+					<Add directory=3D"..\include\boost" />
+					<Add directory=3D"..\include\fmodx" />
+					<Add directory=3D"..\include\lua" />
+					<Add directory=3D"..\include\sdl" />
+					<Add directory=3D"..\include\zlib" />
 				</Compiler>
 				<Linker>
-					<Add option=3D"-s"/>
-					<Add library=3D"ws2_32"/>
-					<Add library=3D"OgreMain"/>
-					<Add library=3D"OIS"/>
-					<Add library=3D"..\libs\sdl\SDL.lib"/>
-					<Add library=3D"..\libs\fmodx\libfmodex.a"/>
-					<Add library=3D"..\libs\lua\LibLua.lib"/>
-					<Add library=3D"..\libs\lua\LibLuaLib.lib"/>
-					<Add library=3D"..\libs\zlib\libz.a"/>
-					<Add directory=3D"$(OGRE_HOME)\bin\release"/>
-					<Add directory=3D"..\libs"/>
-					<Add directory=3D"..\libs\fmodx"/>
-					<Add directory=3D"..\libs\lua"/>
-					<Add directory=3D"..\libs\sdl"/>
-					<Add directory=3D"..\libs\zlib"/>
+					<Add option=3D"-s" />
+					<Add library=3D"ws2_32" />
+					<Add library=3D"OgreMain" />
+					<Add library=3D"OIS" />
+					<Add library=3D"..\libs\sdl\SDL.lib" />
+					<Add library=3D"..\libs\fmodx\libfmodex.a" />
+					<Add library=3D"..\libs\lua\LibLua.lib" />
+					<Add library=3D"..\libs\lua\LibLuaLib.lib" />
+					<Add library=3D"..\libs\zlib\libz.a" />
+					<Add directory=3D"$(OGRE_HOME)\bin\release" />
+					<Add directory=3D"..\libs" />
+					<Add directory=3D"..\libs\fmodx" />
+					<Add directory=3D"..\libs\lua" />
+					<Add directory=3D"..\libs\sdl" />
+					<Add directory=3D"..\libs\zlib" />
 				</Linker>
 			</Target>
 			<Target title=3D"Debug">
-				<Option output=3D"..\bin_cb\iris2_debug.exe"/>
-				<Option working_dir=3D"."/>
-				<Option object_output=3D"Debug"/>
-				<Option deps_output=3D".deps"/>
-				<Option external_deps=3D"$(OGRE_HOME)\bin\debug\OgreMain_d.dll;"/>
-				<Option type=3D"1"/>
-				<Option compiler=3D"0"/>
-				<Option projectResourceIncludeDirsRelation=3D"1"/>
+				<Option output=3D"..\bin_cb\iris2_debug.exe" prefix_auto=3D"0" extensi=
on_auto=3D"0" />
+				<Option object_output=3D"Debug" />
+				<Option external_deps=3D"$(OGRE_HOME)\bin\debug\OgreMain_d.dll;" />
+				<Option type=3D"1" />
+				<Option compiler=3D"gcc" />
+				<Option projectResourceIncludeDirsRelation=3D"1" />
 				<Compiler>
-					<Add option=3D"-Wfatal-errors"/>
-					<Add option=3D"-Wall"/>
-					<Add option=3D"-g"/>
-					<Add option=3D"-O0"/>
-					<Add option=3D"-frtti"/>
-					<Add option=3D"-D_DEBUG"/>
-					<Add option=3D"-D_CONSOLE"/>
-					<Add option=3D"-DZC_BUILDING_ZBASE"/>
-					<Add option=3D"-DZC_BUILDING_ZCSL"/>
-					<Add directory=3D"..\include\boost"/>
-					<Add directory=3D"..\include\fmodx"/>
-					<Add directory=3D"..\include\lua"/>
-					<Add directory=3D"..\include\sdl"/>
-					<Add directory=3D"..\include\zlib"/>
+					<Add option=3D"-Wfatal-errors" />
+					<Add option=3D"-Wall" />
+					<Add option=3D"-g" />
+					<Add option=3D"-O0" />
+					<Add option=3D"-frtti" />
+					<Add option=3D"-D_DEBUG" />
+					<Add option=3D"-D_CONSOLE" />
+					<Add option=3D"-DZC_BUILDING_ZBASE" />
+					<Add option=3D"-DZC_BUILDING_ZCSL" />
+					<Add directory=3D"..\include\boost" />
+					<Add directory=3D"..\include\fmodx" />
+					<Add directory=3D"..\include\lua" />
+					<Add directory=3D"..\include\sdl" />
+					<Add directory=3D"..\include\zlib" />
 				</Compiler>
 				<Linker>
-					<Add library=3D"ws2_32"/>
-					<Add library=3D"OgreMain_d"/>
-					<Add library=3D"OIS_d"/>
-					<Add library=3D"..\libs\sdl\SDL.lib"/>
-					<Add library=3D"..\libs\fmodx\libfmodex.a"/>
-					<Add library=3D"..\libs\lua\LibLua.lib"/>
-					<Add library=3D"..\libs\lua\LibLuaLib.lib"/>
-					<Add library=3D"..\libs\zlib\libz.a"/>
-					<Add directory=3D"$(OGRE_HOME)\bin\debug"/>
-					<Add directory=3D"..\libs"/>
-					<Add directory=3D"..\libs\fmodx"/>
-					<Add directory=3D"..\libs\lua"/>
-					<Add directory=3D"..\libs\sdl"/>
-					<Add directory=3D"..\libs\zlib"/>
+					<Add library=3D"ws2_32" />
+					<Add library=3D"OgreMain_d" />
+					<Add library=3D"OIS_d" />
+					<Add library=3D"..\libs\sdl\SDL.lib" />
+					<Add library=3D"..\libs\fmodx\libfmodex.a" />
+					<Add library=3D"..\libs\lua\LibLua.lib" />
+					<Add library=3D"..\libs\lua\LibLuaLib.lib" />
+					<Add library=3D"..\libs\zlib\libz.a" />
+					<Add directory=3D"$(OGRE_HOME)\bin\debug" />
+					<Add directory=3D"..\libs" />
+					<Add directory=3D"..\libs\fmodx" />
+					<Add directory=3D"..\libs\lua" />
+					<Add directory=3D"..\libs\sdl" />
+					<Add directory=3D"..\libs\zlib" />
 				</Linker>
 			</Target>
 		</Build>
+		<VirtualTargets>
+			<Add alias=3D"All" targets=3D"Release;Debug;" />
+		</VirtualTargets>
 		<Compiler>
-			<Add option=3D"-W"/>
-			<Add option=3D"-mthreads"/>
-			<Add option=3D"-fmessage-length=3D0"/>
-			<Add option=3D"-fexceptions"/>
-			<Add option=3D"-fident"/>
-			<Add option=3D"-pipe"/>
-			<Add option=3D"-DWIN32"/>
-			<Add option=3D"-D_WINDOWS"/>
-			<Add option=3D"-DMINGW"/>
-			<Add directory=3D"..\include"/>
-			<Add directory=3D"$(OGRE_HOME)\include"/>
-			<Add directory=3D"$(OGRE_HOME)\include\ois"/>
+			<Add option=3D"-W" />
+			<Add option=3D"-mthreads" />
+			<Add option=3D"-fmessage-length=3D0" />
+			<Add option=3D"-fexceptions" />
+			<Add option=3D"-fident" />
+			<Add option=3D"-pipe" />
+			<Add option=3D"-DWIN32" />
+			<Add option=3D"-D_WINDOWS" />
+			<Add option=3D"-DMINGW" />
+			<Add directory=3D"..\include" />
+			<Add directory=3D"$(OGRE_HOME)\include" />
+			<Add directory=3D"$(OGRE_HOME)\include\ois" />
 		</Compiler>
 		<ResourceCompiler>
-			<Add directory=3D"..\vc7"/>
+			<Add directory=3D"res" />
 		</ResourceCompiler>
 		<Linker>
-			<Add option=3D"-Wl,--enable-auto-image-base"/>
-			<Add option=3D"-Wl,--add-stdcall-alias"/>
-			<Add option=3D"-Wl,--enable-runtime-pseudo-reloc"/>
+			<Add option=3D"-Wl,--enable-auto-image-base" />
+			<Add option=3D"-Wl,--add-stdcall-alias" />
+			<Add option=3D"-Wl,--enable-runtime-pseudo-reloc" />
 		</Linker>
+		<Unit filename=3D"res\iris.ico" />
+		<Unit filename=3D"res\resource.rc">
+			<Option compilerVar=3D"WINDRES" />
+		</Unit>
 		<Unit filename=3D"..\include\BorderColourClipPaneOverlay.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\ColourClipPaneOverlay.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\ColourClipTextOverlay.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\CompassOverlay.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\RobRenderableOverlay.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\SortedOverlayContainer.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\bitmask.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\builder.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\camera.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\data.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\fifo.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\game.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\gfx2D.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\gfx3D.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\grannyloader_i2.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\grannyogreloader.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\grannyparser.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\huffman.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\input.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\legacydata.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\listener.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\luabind.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\luaxml.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\meshshape.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\net.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\ogremanualloader.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\ogrewrapper.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\pathsearch.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\prefix.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\profile.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\radar.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\rendertexture.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\robrenderable.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\robstring1.2.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\scripting.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\shell.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\smartptr.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\sound.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\spritemanager.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\terrain.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\timer.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\tinystr.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\tinyxml.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\viewport.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\include\widget.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\BorderColourClipPaneOverlay.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\ColourClipPaneOverlay.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\ColourClipTextOverlay.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\CompassOverlay.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\RobRenderableOverlay.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\SortedOverlayContainer.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\bitmask.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\bitmask_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\builder.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\builder_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\camera.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\camera_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\data.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\data_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\fifo_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\game.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\gfx2D.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\gfx2D_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\gfx3D.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\gfx3D_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\granny_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\grannydump.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\grannyloader_i2.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\grannyogreloader.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\grannyparser.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\huffman.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\input.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\legacydata.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\listener.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\luaxml.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\main.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\material_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\meshshape.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\net.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\net_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\ogremanualloader.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\ogremanualloader_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\ogrewrapper.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\pathsearch.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\profile.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\radar.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\radar_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\rendertexture.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\rendertexture_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\robrenderable.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\robstring1.2.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\scripting.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\shell.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\sound.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\sound_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\sound_fmod.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\spritemanager.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\spritemanager_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\terrain.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\timer.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\tinystr.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\tinyxml.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\tinyxmlerror.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\tinyxmlparser.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\viewport.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\viewport_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\widget.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\src\widget_L.cpp">
-			<Option compilerVar=3D"CPP"/>
-			<Option target=3D"Debug"/>
-			<Option target=3D"Release - not Optimized"/>
-			<Option target=3D"Release"/>
-		</Unit>
-		<Unit filename=3D"..\vc7\iris.rc">
-			<Option compilerVar=3D"WINDRES"/>
-			<Option objectName=3D"vc7\iris.res"/>
-			<Option target=3D"Release"/>
-		</Unit>
-		<Unit filename=3D"..\vc7\iris_128.ico">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Release"/>
+			<Option target=3D"Debug" />
+			<Option target=3D"Release - not Optimized" />
+			<Option target=3D"Release" />
 		</Unit>
 		<Unit filename=3D"..\vc7\resource.h">
-			<Option compilerVar=3D""/>
-			<Option compile=3D"0"/>
-			<Option link=3D"0"/>
-			<Option target=3D"Release"/>
-		</Unit>
+			<Option target=3D"Release" />
+		</Unit>
+		<Extensions>
+			<code_completion />
+			<envvars />
+		</Extensions>
 	</Project>
 </CodeBlocks_project_file>



From no-reply at zwischenwelt.org  Sat Jun 23 00:18:33 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 22 Jun 2007 22:18:33 -0000
Subject: [Iris-commit] [IRIS] r1229 - in /trunk/bin: OIS.dll OgreMain.dll
 Plugin_CgProgramManager.dll Plugin_OctreeSceneManager.dll
 Plugin_ParticleFX.dll RenderSystem_Direct3D9.dll RenderSystem_GL.dll cg.dll
 iris2.exe
Message-ID: <20070622221833.DBC4610701CE@localhost.localdomain>

Author: sience
Date: Sat Jun 23 00:18:33 2007
New Revision: 1229

Log:
-initial MingW binary release

Added:
    trunk/bin/OIS.dll   (with props)
    trunk/bin/OgreMain.dll   (with props)
    trunk/bin/Plugin_CgProgramManager.dll   (with props)
    trunk/bin/Plugin_OctreeSceneManager.dll   (with props)
    trunk/bin/Plugin_ParticleFX.dll   (with props)
    trunk/bin/RenderSystem_Direct3D9.dll   (with props)
    trunk/bin/RenderSystem_GL.dll   (with props)
    trunk/bin/cg.dll   (with props)
    trunk/bin/iris2.exe   (with props)



From no-reply at zwischenwelt.org  Sat Jun 23 00:29:46 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 22 Jun 2007 22:29:46 -0000
Subject: [Iris-commit] [IRIS] r1230 - /trunk/cb/iris 7.1.cbp
Message-ID: <20070622222946.BF98610701CE@localhost.localdomain>

Author: sience
Date: Sat Jun 23 00:29:46 2007
New Revision: 1230

Log:
-updated codeblocks project

Modified:
    trunk/cb/iris 7.1.cbp

Modified: trunk/cb/iris 7.1.cbp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/cb/iris 7.1.cbp (original)
+++ trunk/cb/iris 7.1.cbp Sat Jun 23 00:29:46 2007
@@ -7,7 +7,7 @@
 		<Option compiler=3D"gcc" />
 		<Build>
 			<Target title=3D"Release">
-				<Option output=3D"..\bin_cb\iris2_cb.exe" prefix_auto=3D"0" extension_=
auto=3D"0" />
+				<Option output=3D"..\bin\iris2.exe" prefix_auto=3D"0" extension_auto=
=3D"0" />
 				<Option object_output=3D"Release" />
 				<Option external_deps=3D"$(OGRE_HOME)\bin\release\OgreMain.dll;$(OGRE_=
HOME)\bin\release\OIS.dll;" />
 				<Option type=3D"1" />
@@ -46,7 +46,7 @@
 				</Linker>
 			</Target>
 			<Target title=3D"Debug">
-				<Option output=3D"..\bin_cb\iris2_debug.exe" prefix_auto=3D"0" extensi=
on_auto=3D"0" />
+				<Option output=3D"..\bin\iris2_debug.exe" prefix_auto=3D"0" extension_=
auto=3D"0" />
 				<Option object_output=3D"Debug" />
 				<Option external_deps=3D"$(OGRE_HOME)\bin\debug\OgreMain_d.dll;" />
 				<Option type=3D"1" />



From no-reply at zwischenwelt.org  Sat Jun 23 00:38:30 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 22 Jun 2007 22:38:30 -0000
Subject: [Iris-commit] [IRIS] r1231 - /trunk/bin/msvcp60.dll
Message-ID: <20070622223830.F1A4510701CE@localhost.localdomain>

Author: sience
Date: Sat Jun 23 00:38:26 2007
New Revision: 1231

Log:
-msvcp60.dll is not common on win2000

Added:
    trunk/bin/msvcp60.dll   (with props)



From no-reply at zwischenwelt.org  Sat Jun 23 13:21:24 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 23 Jun 2007 11:21:24 -0000
Subject: [Iris-commit] [IRIS] r1232 - in /trunk: data/lua/main.lua
	src/scripting.cpp
Message-ID: <20070623112125.16B09B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Sat Jun 23 13:21:21 2007
New Revision: 1232

Log:
bind for ogre pixel format constants for lua, can be used in OgreSetShadowT=
exturePixelFormat

Modified:
    trunk/data/lua/main.lua
    trunk/src/scripting.cpp

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Sat Jun 23 13:21:21 2007
@@ -152,6 +152,12 @@
 	=

 	gMyTicks =3D Client_GetTicks()
 	=

+	-- register pixel format constants, like PF_FLOAT16_R
+	if (OgrePixelFormatList) then
+		local mylist =3D OgrePixelFormatList()
+		for id,name in pairs(mylist) do _G[name] =3D id end
+	end
+	=

 	LoadingProfile("initializing Ogre",true)
 	gPreOgreTime =3D gLoadingProfileLastTime
 	if (not InitOgre()) then Exit() end

Modified: trunk/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/scripting.cpp (original)
+++ trunk/src/scripting.cpp Sat Jun 23 13:21:21 2007
@@ -1144,11 +1144,67 @@
 	return 0;
 }
 =

-/// for lua :   void	  OgreSetShadowTexturePixelFormat  ()
-static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE  =

-	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(Ogre:=
:PF_FLOAT16_R);
-	return 0;
-}
+/// for lua :   void	  OgreSetShadowTexturePixelFormat	()
+static int 				l_OgreSetShadowTexturePixelFormat	(lua_State *L) { PROFILE  =

+	Ogre::PixelFormat pf =3D (lua_gettop(L) >=3D 2 && !lua_isnil(L,1)) ? ((Og=
re::PixelFormat)luaL_checkint(L,1)) : Ogre::PF_FLOAT16_R;
+	cOgreWrapper::GetSingleton().mSceneMgr->setShadowTexturePixelFormat(pf);
+	return 0;
+}
+
+
+/// for lua :   table	  OgrePixelFormatList  ()
+static int 				l_OgrePixelFormatList	(lua_State *L) { PROFILE  =

+	lua_newtable(L);
+	#define OgrePixelFormatList_REGISTER(pf) lua_pushstring(L,#pf); lua_rawse=
ti(L,-2,(int)Ogre::pf);
+	OgrePixelFormatList_REGISTER(PF_UNKNOWN)		// 	Unknown pixel format.
+	OgrePixelFormatList_REGISTER(PF_L8)				// 		8-bit pixel format, all bits =
luminace.
+	OgrePixelFormatList_REGISTER(PF_BYTE_L)			// 	=

+	OgrePixelFormatList_REGISTER(PF_L16)			// 		16-bit pixel format, all bits=
 luminace.
+	OgrePixelFormatList_REGISTER(PF_SHORT_L)		// 	=

+	OgrePixelFormatList_REGISTER(PF_A8)				// 		8-bit pixel format, all bits =
alpha.
+	OgrePixelFormatList_REGISTER(PF_BYTE_A)			// 	=

+	OgrePixelFormatList_REGISTER(PF_A4L4)			// 	8-bit pixel format, 4 bits al=
pha, 4 bits luminace.
+	OgrePixelFormatList_REGISTER(PF_BYTE_LA)		// 	2 byte pixel format, 1 byte=
 luminance, 1 byte alpha
+	OgrePixelFormatList_REGISTER(PF_R5G6B5)			// 	16-bit pixel format, 5 bits=
 red, 6 bits green, 5 bits blue.
+	OgrePixelFormatList_REGISTER(PF_B5G6R5)			// 	16-bit pixel format, 5 bits=
 red, 6 bits green, 5 bits blue.
+	OgrePixelFormatList_REGISTER(PF_R3G3B2)			// 	8-bit pixel format, 2 bits =
blue, 3 bits green, 3 bits red.
+	OgrePixelFormatList_REGISTER(PF_A4R4G4B4)		// 	16-bit pixel format, 4 bit=
s for alpha, red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_A1R5G5B5)		// 	16-bit pixel format, 5 bit=
s for blue, green, red and 1 for alpha.
+	OgrePixelFormatList_REGISTER(PF_R8G8B8)			// 	24-bit pixel format, 8 bits=
 for red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_B8G8R8)			// 	24-bit pixel format, 8 bits=
 for blue, green and red.
+	OgrePixelFormatList_REGISTER(PF_A8R8G8B8)		// 	32-bit pixel format, 8 bit=
s for alpha, red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_A8B8G8R8)		// 	32-bit pixel format, 8 bit=
s for blue, green, red and alpha.
+	OgrePixelFormatList_REGISTER(PF_B8G8R8A8)		// 	32-bit pixel format, 8 bit=
s for blue, green, red and alpha.
+	OgrePixelFormatList_REGISTER(PF_R8G8B8A8)		// 	32-bit pixel format, 8 bit=
s for red, green, blue and alpha.
+	OgrePixelFormatList_REGISTER(PF_X8R8G8B8)		// 	32-bit pixel format, 8 bit=
s for red, 8 bits for green, 8 bits for blue like PF_A8R8G8B8, but alpha wi=
ll get discarded
+	OgrePixelFormatList_REGISTER(PF_X8B8G8R8)		// 	32-bit pixel format, 8 bit=
s for blue, 8 bits for green, 8 bits for red like PF_A8B8G8R8, but alpha wi=
ll get discarded
+	OgrePixelFormatList_REGISTER(PF_BYTE_RGB)		// 	3 byte pixel format, 1 byt=
e for red, 1 byte for green, 1 byte for blue
+	OgrePixelFormatList_REGISTER(PF_BYTE_BGR)		// 	3 byte pixel format, 1 byt=
e for blue, 1 byte for green, 1 byte for red
+	OgrePixelFormatList_REGISTER(PF_BYTE_BGRA)		// 	4 byte pixel format, 1 by=
te for blue, 1 byte for green, 1 byte for red and one byte for alpha
+	OgrePixelFormatList_REGISTER(PF_BYTE_RGBA)		// 	4 byte pixel format, 1 by=
te for red, 1 byte for green, 1 byte for blue, and one byte for alpha
+	OgrePixelFormatList_REGISTER(PF_A2R10G10B10)	// 	32-bit pixel format, 2 b=
its for alpha, 10 bits for red, green and blue.
+	OgrePixelFormatList_REGISTER(PF_A2B10G10R10)	// 	32-bit pixel format, 10 =
bits for blue, green and red, 2 bits for alpha.
+	OgrePixelFormatList_REGISTER(PF_DXT1)			// 	DDS (DirectDraw Surface) DXT1=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT2)			// 	DDS (DirectDraw Surface) DXT2=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT3)			// 	DDS (DirectDraw Surface) DXT3=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT4)			// 	DDS (DirectDraw Surface) DXT4=
 format.
+	OgrePixelFormatList_REGISTER(PF_DXT5)			// 	DDS (DirectDraw Surface) DXT5=
 format.
+	OgrePixelFormatList_REGISTER(PF_FLOAT16_R)		// 	=

+	OgrePixelFormatList_REGISTER(PF_FLOAT16_RGB)	// 	=

+	OgrePixelFormatList_REGISTER(PF_FLOAT16_RGBA)	// 	=

+	OgrePixelFormatList_REGISTER(PF_FLOAT32_R)		// 	=

+	OgrePixelFormatList_REGISTER(PF_FLOAT32_RGB)	// 	=

+	OgrePixelFormatList_REGISTER(PF_FLOAT32_RGBA)	// 	=

+	OgrePixelFormatList_REGISTER(PF_FLOAT16_GR)		// 	=

+	OgrePixelFormatList_REGISTER(PF_FLOAT32_GR)		// 	=

+	OgrePixelFormatList_REGISTER(PF_DEPTH)			// 	=

+	OgrePixelFormatList_REGISTER(PF_SHORT_RGBA)		// 	=

+	OgrePixelFormatList_REGISTER(PF_SHORT_GR)		// 	=

+	OgrePixelFormatList_REGISTER(PF_SHORT_RGB)		// 	=

+	OgrePixelFormatList_REGISTER(PF_COUNT)			// =

+	return 1;
+}
+
 =

 /// for lua :   void	  OgreSetShadowTextureSelfShadow  (bool)
 static int 				l_OgreSetShadowTextureSelfShadow	(lua_State *L) { PROFILE  =

@@ -1579,7 +1635,8 @@
 	lua_register(L,"OgreSetShadowDirLightTextureOffset",				l_OgreSetShadowDi=
rLightTextureOffset);
 	lua_register(L,"OgreSetShadowFarDistance",							l_OgreSetShadowFarDistan=
ce);
 	lua_register(L,"OgreSetShadowTextureSize",							l_OgreSetShadowTextureSi=
ze);
-	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
+	lua_register(L,"OgreSetShadowTexturePixelFormat",					l_OgreSetShadowText=
urePixelFormat);
+	lua_register(L,"OgrePixelFormatList",								l_OgrePixelFormatList);
 	lua_register(L,"OgreSetShadowTextureSelfShadow",					l_OgreSetShadowTextu=
reSelfShadow);
 	lua_register(L,"OgreSetShadowTextureCasterMaterial",				l_OgreSetShadowTe=
xtureCasterMaterial);
 	lua_register(L,"OgreSetShadowTextureReceiverMaterial",				l_OgreSetShadow=
TextureReceiverMaterial);



From no-reply at zwischenwelt.org  Sun Jun 24 02:09:08 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 00:09:08 -0000
Subject: [Iris-commit] [IRIS] r1233 - in /trunk/data: lua/lib.gui.lua
 lua/lib.time.lua lua/main.lua skippedfallbacks.lua
 terrain/materials/terrain.material
Message-ID: <20070624000908.746CAB1466D@localhost.localdomain>

Author: sience
Date: Sun Jun 24 02:09:05 2007
New Revision: 1233

Log:
-several updates to terrainshader (dirt - cobblestone combos)
-skippedfallbacks added
-display fps/mem/stats combined

Modified:
    trunk/data/lua/lib.gui.lua
    trunk/data/lua/lib.time.lua
    trunk/data/lua/main.lua
    trunk/data/skippedfallbacks.lua
    trunk/data/terrain/materials/terrain.material

Modified: trunk/data/lua/lib.gui.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.gui.lua (original)
+++ trunk/data/lua/lib.gui.lua Sun Jun 24 02:09:05 2007
@@ -43,25 +43,6 @@
 	else =

 		gBottomLine.text.gfx:SetText(text)
 	end
-end
-
-function DisplayFPS (fps)
-	if (gHideFPS) then return end
-	local text =3D sprintf("%0.0f",fps)
-	if (not gFPSField) then
-		local vw,vh =3D GetViewportSize()
-		local w,h =3D 0,12
-		local x,y =3D vw-w,0
-		local col_back =3D {0,0,0,0}
-		local col_text =3D {1,0,0,1}
-		gFPSField =3D guimaker.MyCreateDialog()
-		gFPSField.panel	=3D guimaker.MakeBorderPanel(gFPSField,x,y,w,h,col_back)
-		gFPSField.text	=3D guimaker.MakeText(gFPSField.panel,0,0,text,16,col_tex=
t)
-	else
-		gFPSField.text.gfx:SetText(text)
-	end
-	local tw,th =3D gFPSField.text.gfx:GetTextBounds()
-	gFPSField.text.gfx:SetPos(-tw,0)
 end
 =

 function DisplayMemoryUsage (memoryusage)

Modified: trunk/data/lua/lib.time.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.time.lua (original)
+++ trunk/data/lua/lib.time.lua Sun Jun 24 02:09:05 2007
@@ -1,25 +1,6 @@
 gTimerEveryFrame =3D {}
 gTimerEveryFrame_New =3D {}
 gMyTicks =3D 0
-
-gFPS_NextCalc =3D 0
-gFPS_Counter =3D 0
-gFPS =3D 0
-
--- called from main.lua
-function UpdateFPS (ticks)
-	-- calc fps
-	gFPS_Counter =3D gFPS_Counter + 1
-	if (gFPS_NextCalc < ticks) then =

-		DisplayFPS(gFPS_Counter)
-		gFPS_NextCalc =3D ticks + 1000
-		gFPS_Counter =3D 0
-		gFPS =3D gFPS_Counter
-		=

-		-- also update memory usage
-		DisplayMemoryUsage(OgreMemoryUsage("all"))
-	end
-end
 =

 gStats_NextUpdate =3D 0
 -- called from main.lua
@@ -42,6 +23,8 @@
 		end
 		local tw,th =3D gStatsField.text.gfx:GetTextBounds()
 		gStatsField.text.gfx:SetPos(-tw,0)
+		-- also update memory usage
+		DisplayMemoryUsage(OgreMemoryUsage("all"))
 	end
 end
 =


Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Sun Jun 24 02:09:05 2007
@@ -220,7 +220,6 @@
 -- called every frame, after all timer-steppers, see Step() in lib.time.lua
 function MainStep (curticks)
 	gMyTicks =3D curticks
-	UpdateFPS(curticks)
 	UpdateStats(curticks)
 	StepTimer(curticks)
 =


Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Sun Jun 24 02:09:05 2007
@@ -312,3 +312,13 @@
 RegisterSkippedArtBillboardFallBack(6790) -- 0x1a86 name=3Dore cart
 RegisterSkippedArtBillboardFallBack(8611) -- 0x21a3 name=3Dnodraw
 RegisterSkippedArtBillboardFallBack(3698) -- 0x0e72 name=3Dcannon
+RegisterSkippedArtBillboardFallBack(8601) -- 0x2199 name=3Dnodraw
+RegisterSkippedArtBillboardFallBack(7770) -- 0x1e5a name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7771) -- 0x1e5b name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7763) -- 0x1e53 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7765) -- 0x1e55 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7766) -- 0x1e56 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7767) -- 0x1e57 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7768) -- 0x1e58 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7769) -- 0x1e59 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(4808) -- 0x12c8 name=3Dscaffold

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Sun Jun 24 02:09:05 2007
@@ -281,6 +281,27 @@
 		}
 	}
 }
+//dirt - cobblestone transition
+material transition_dirt_cobblestone : terrain_transition
+{
+	technique
+	{
+		pass base
+		{
+			texture_unit
+			{
+				texture Dirt_large_pattern_1024.jpg
+			}
+		}
+		pass blend
+		{
+			texture_unit
+			{
+				texture cobblestone_large_pattern_512.dds
+			}
+		}
+	}
+}
 //forest - grass transition
 material transition_grass_forest : terrain_transition
 {
@@ -532,7 +553,6 @@
 {
 	set_texture_alias blend_mask tex_blend_se_corner_in.png
 }
-
 // E TileA W TileB
 material tileid_135 : transition_dirt_grass
 {
@@ -868,6 +888,52 @@
 }
 material tileid_201 :tileid_200
 {
+}
+//__________________________________________________________
+//grass - cobblestone transitions
+material tileid_1017 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_se_corner_in.png
+}
+material tileid_1018 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_sw_corner_out.png
+}
+material tileid_1019 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_nw_corner_out.png
+}
+material tileid_1020 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_ne_corner_out.png
+}
+material tileid_1021 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_se_corner_out.png
+}
+material tileid_1022 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_w_side.png
+}
+material tileid_1023 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_s_side.png
+}
+material tileid_1024 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_e_side.png
+}
+material tileid_1025 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_n_side.png
+}
+material tileid_1026 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_sw_corner_in.png
+}
+material tileid_1028 : transition_dirt_cobblestone
+{
+	set_texture_alias blend_mask tex_blend_ne_corner_in.png
 }
 =

 //###########################################



From no-reply at zwischenwelt.org  Sun Jun 24 13:01:51 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 11:01:51 -0000
Subject: [Iris-commit] [IRIS] r1234 - in /trunk/data/lua: main.lua
	net.other.lua
Message-ID: <20070624110152.C8A24B1466D@localhost.localdomain>

Author: sience
Date: Sun Jun 24 13:01:48 2007
New Revision: 1234

Log:
-bug fixed in compressed gump packet (its a runuo problem, but now we handl=
e wrong sizes)

Modified:
    trunk/data/lua/main.lua
    trunk/data/lua/net.other.lua

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Sun Jun 24 13:01:48 2007
@@ -209,13 +209,9 @@
 	BindInGameKeys()
 =

 	print("Welcome to Iris")
---	OgreAddCompositor(GetMainViewport(), "Ogre/Compositor/BlackAndWhite")
 =

 	gInGameStarted =3D true
 end
--- currently no deinit of compositor test
--- OgreRemoveCompositor(GetMainViewport() , "Ogre/Compositor/BlackAndWhite=
")
-
 =

 -- called every frame, after all timer-steppers, see Step() in lib.time.lua
 function MainStep (curticks)

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Sun Jun 24 13:01:48 2007
@@ -740,6 +740,7 @@
 ]]--
 function gPacketHandler.kPacket_Compressed_Gump ()	--0xDD
 	local input =3D GetRecvFIFO()
+	local popped_start =3D input:GetTotalPopped()
 	local id =3D input:PopNetUint8()
 	local size =3D input:PopNetUint16()
 	local newgump =3D {}
@@ -751,10 +752,12 @@
 =

 	newgump.Length_CompressedData =3D input:PopNetUint32() - 4
 	newgump.Length_Data =3D input:PopNetUint32()
-	printf("NETDEBUG: Length_CompressedData=3D0x%08x Length_Data=3D0x%08x\n",=
newgump.Length_CompressedData,newgump.Length_Data)
+
+	printdebug("net",sprintf("NET: Length_CompressedData=3D%d Length_Uncompre=
ssedData=3D%d\n",newgump.Length_CompressedData,newgump.Length_Data))
 =

 	if (28 + newgump.Length_CompressedData > size) then =

-		printf("NET: broken kPacket_Compressed_Gump packet, compressed gumplen =
=3D 0x%08x\n",newgump.Length_CompressedData)
+		printf("NET: BROKEN - kPacket_Compressed_Gump packet, compressed gumplen=
 =3D 0x%08x\n",newgump.Length_CompressedData)
+		print("Error: Server Sends bad COmpressed Gumpdata ! Please report.")
 		Crash()
 	end
 =

@@ -772,16 +775,16 @@
 	--- Textlines Part ---
 	newgump.numTextLines =3D input:PopNetUint32()
 =

-	if (newgump.numTextLines ~=3D 0 ) then
+	if (newgump.numTextLines ~=3D 0) then
 		newgump.Length_CompressedTextLines =3D input:PopNetUint32() - 4
 		newgump.Length_TextLines =3D input:PopNetUint32()
 	=

-		printf("NETDEBUG: numTextLines=3D0x%08x Length_CompressedTextLines=3D0x%=
08x\n",newgump.numTextLines,newgump.Length_CompressedTextLines,newgump.Leng=
th_TextLines)
 		-- pop and decompress data into decompress fifo
 		input:PeekDecompressIntoFifo(newgump.Length_CompressedTextLines,newgump.=
Length_TextLines,decompressed)
 		-- skip compressed part (peeked)
 		input:PopRaw(newgump.Length_CompressedTextLines)
 		=

+		-- print gumpdata
 		for k,v in pairs(newgump) do printdebug("gump",sprintf("newgump.%s =3D "=
,k),v) end
 		=

 		local totaltext =3D ""
@@ -799,7 +802,7 @@
 =

 	decompressed:Destroy()
 =

-	if (input:Size() >=3D 4) then
+	if ( (input:Size() >=3D 4) and (input:GetTotalPopped()-popped_start < siz=
e) ) then
 		local unknownterminator=3Dinput:PopNetUint32()
 	end
 =




From no-reply at zwischenwelt.org  Sun Jun 24 19:26:11 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 17:26:11 -0000
Subject: [Iris-commit] [IRIS] r1235 - in /trunk/data: lua/lib.debugmenu.lua
 lua/lib.models.lua skippedfallbacks.lua
Message-ID: <20070624172611.829C3B1466D@localhost.localdomain>

Author: sience
Date: Sun Jun 24 19:26:09 2007
New Revision: 1235

Log:
-segfault found ( http://zwischenwelt.org/trac/iris/ticket/118 ), llamas_ll=
ama_pack id: 292 crashes -> mapped to id: 220
-skippedfallbacks added

Modified:
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.models.lua
    trunk/data/skippedfallbacks.lua

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Sun Jun 24 19:26:09 2007
@@ -26,6 +26,8 @@
 end
 =

 gDebugTestMobiles =3D {
+	{artid=3D 292 , equipment=3D{}}, --broken llamas_llama_pack (crash) -> ma=
pped to id: 220
+
 	{artid=3D hex2num("0xA9") , equipment=3D{}}, --169 broken horse
 	{artid=3D hex2num("0x317"), equipment=3D{}}, --791 broken horse
 	{artid=3D	hex2num("0x76") , equipment=3D{}}, --horse ok

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Sun Jun 24 19:26:09 2007
@@ -308,6 +308,11 @@
 		printdebug("granny","TODO : Mobile 778 doesn't work -> mapping to modeli=
d 16")
 		return 16
 	end
+	if (mobileartid =3D=3D 292) then
+		printdebug("granny","TODO : Mobile 292 (llamas_llama_pack) doesn't work =
-> mapping to modelid 220")
+		return 220
+	end
+	=

 	return mobileartid
 end
 =


Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Sun Jun 24 19:26:09 2007
@@ -322,3 +322,5 @@
 RegisterSkippedArtBillboardFallBack(7768) -- 0x1e58 name=3Dbearskin rug
 RegisterSkippedArtBillboardFallBack(7769) -- 0x1e59 name=3Dbearskin rug
 RegisterSkippedArtBillboardFallBack(4808) -- 0x12c8 name=3Dscaffold
+RegisterSkippedArtBillboardFallBack(6553) -- 0x1999 name=3Dforge
+RegisterSkippedArtBillboardFallBack(6565) -- 0x19a5 name=3Dforge



From no-reply at zwischenwelt.org  Sun Jun 24 20:25:34 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 18:25:34 -0000
Subject: [Iris-commit] [IRIS] r1236 - in /branches/knut/src: data.cpp
	scripting.cpp
Message-ID: <20070624182536.0E899B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Sun Jun 24 20:25:32 2007
New Revision: 1236

Log:
fixed Crash function in scripting.cpp to output a stacktrace, secured unifo=
ntloader a little bit, still needs more

Modified:
    branches/knut/src/data.cpp
    branches/knut/src/scripting.cpp

Modified: branches/knut/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/data.cpp (original)
+++ branches/knut/src/data.cpp Sun Jun 24 20:25:32 2007
@@ -821,7 +821,9 @@
 =

 RawUniFontFileLetterHeader* cUniFontFileLoader::GetLetterHeader	(const uns=
igned int iCode){ PROFILE
 	// read out offset of letter header
-	uint32 offset =3D *((uint32 *)(mpFullFileBuffer + iCode*4));
+	int32 offset =3D ((int32 *)(mpFullFileBuffer))[iCode];
+	if (offset =3D=3D -1)return 0;
+	if (offset < 0)return 0;
 	// valid?
 	if(offset + sizeof(RawUniFontFileLetterHeader) < miFullFileSize)return (R=
awUniFontFileLetterHeader *)(mpFullFileBuffer + offset);
 	else return 0;

Modified: branches/knut/src/scripting.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/src/scripting.cpp (original)
+++ branches/knut/src/scripting.cpp Sun Jun 24 20:25:32 2007
@@ -910,10 +910,12 @@
 	exit((lua_gettop(L) >=3D 1 && !lua_isnil(L,1)) ? luaL_checkint(L,1) : 0); =

 	return 0; =

 }
+
+void MyCrash		(const char* szMessage); // see main.cpp
 =

 static int l_Crash		 		(lua_State *L) { PROFILE =

-	DisplayErrorMessage("CRASH triggered from script, see console for info (s=
tart with commandline option -c)");
-	exit(88); =

+	MyCrash("CRASH triggered from script, see console for info (start with co=
mmandline option -c)"); // does not return...
+	exit(88);  =

 	return 0; =

 }
 =




From no-reply at zwischenwelt.org  Sun Jun 24 22:26:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 20:26:16 -0000
Subject: [Iris-commit] [IRIS] r1237 - in /branches/knut/data/lua:
 gui/gui.gumpmanager.lua gui/gui.main.lua gui/gui.paperdoll.lua
 gui/gui.status.lua gui/gui.widget.lua lib.loading.lua lib.skill.lua
 net/net.mobile.lua obj/obj.mobile.lua
Message-ID: <20070624202616.92A73109007F@localhost.localdomain>

Author: varan
Date: Sun Jun 24 22:26:15 2007
New Revision: 1237

Log:
fixed many small bugs and rewrote status gump

Modified:
    branches/knut/data/lua/gui/gui.gumpmanager.lua
    branches/knut/data/lua/gui/gui.main.lua
    branches/knut/data/lua/gui/gui.paperdoll.lua
    branches/knut/data/lua/gui/gui.status.lua
    branches/knut/data/lua/gui/gui.widget.lua
    branches/knut/data/lua/lib.loading.lua
    branches/knut/data/lua/lib.skill.lua
    branches/knut/data/lua/net/net.mobile.lua
    branches/knut/data/lua/obj/obj.mobile.lua

Modified: branches/knut/data/lua/gui/gui.gumpmanager.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.gumpmanager.lua (original)
+++ branches/knut/data/lua/gui/gui.gumpmanager.lua Sun Jun 24 22:26:15 2007
@@ -413,7 +413,7 @@
 function gGumpmanager._GumpRegisterGumpObject( gump, gumpobject )
 	table.insert( gump.objectlist, gumpobject )
 	if (gumpobject.page ~=3D 0 and gumpobject.page ~=3D gump.currentpage) then
-		gumpobject.setVisible( false )
+		gumpobject:setVisible( false )
 	end
 end
 =

@@ -447,7 +447,7 @@
 =

 function gGumpmanager._SetPage( gump, page )
 	gump.currentpage =3D page
-	for i, gumpobject in table.getn( gump.objectlist ) do
+	for i, gumpobject in pairs( gump.objectlist ) do
 		if (gumpobject.page =3D=3D 0 or gumpobject.page =3D=3D gump.currentpage)=
 then
 			gumpobject:setVisible( true )
 		else
@@ -781,8 +781,8 @@
 	textfield.border =3D border
 	textfield.gump =3D gump
 	textfield.widget =3D gump.dialog:CreateText( text, x, y, "font_unifont"..=
sprintf("%d",font) )
-	textfield.widget:SetAutoWrap( w )
-	textfield.widget:SetClipAbsolute( 0, 0, w, h )
+	--textfield.widget:SetAutoWrap( w )
+	--textfield.widget:SetClipAbsolute( 0, 0, w, h )
 	textfield.widget.gumpobject =3D textfield
 	textfield.type =3D gGumpmanager.gumpObjectType_CroppedText
 	=

@@ -790,9 +790,14 @@
 		textfield.widget:SetPos( textfield.x, textfield.y )
 		textfield.widget:SetText( textfield.text )
 		textfield.widget:SetFont( "font_unifont"..sprintf("%d",textfield.font) )
-		textfield.widget:SetAutoWrap( textfield.width )
-		textfield.widget:SetClipAbsolute( 0, 0, textfield.width, textfield.heigh=
t )
-	end
+		--textfield.widget:SetAutoWrap( textfield.width )
+		--textfield.widget:SetClipAbsolute( 0, 0, textfield.width, textfield.hei=
ght )
+	end
+	=

+	textfield.settext =3D function( textfield, text )
+		textfield.text =3D text
+		textfield:update()
+	end	=

 	=

 	gump:registerGumpObject( textfield )
 	return textfield
@@ -1294,6 +1299,11 @@
 		textfield.widget:SetFont( "font_unifont"..sprintf("%d",textfield.font) )
 	end
 	=

+	textfield.settext =3D function( textfield, text )
+		textfield.text =3D text
+		textfield:update()
+	end
+	=

 	gump:registerGumpObject( textfield )
 	return textfield
 end

Modified: branches/knut/data/lua/gui/gui.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.main.lua (original)
+++ branches/knut/data/lua/gui/gui.main.lua Sun Jun 24 22:26:15 2007
@@ -4,3 +4,4 @@
 dofile(libpath .. "gui/gui.paperdoll.lua")
 dofile(libpath .. "gui/gui.journal.lua")
 dofile(libpath .. "gui/gui.quit.lua")
+dofile(libpath .. "gui/gui.status.lua")

Modified: branches/knut/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.paperdoll.lua (original)
+++ branches/knut/data/lua/gui/gui.paperdoll.lua Sun Jun 24 22:26:15 2007
@@ -35,17 +35,14 @@
 	Gump.name =3D "paperdoll"
 	Gump.mobileserial =3D packet.serial
 	=

-	local IsPlayer =3D (mobile =3D=3D GetPlayerMobile())
-	if IsPlayer then
-		Gump.background =3D Gump:addImage( 0, 0, hex2num("0x7D0"), 0, 0 )
-	else
-		Gump.background =3D Gump:addImage( 0, 0, hex2num("0x7D1"), 0, 0 )
-	end
+	local IsPlayer =3D (mobile =3D=3D GetPlayerMobile()) if IsPlayer then =

+	Gump.background =3D Gump:addImage( 0, 0, hex2num("0x7D0"), 0, 0 ) else =

+	Gump.background =3D Gump:addImage( 0, 0, hex2num("0x7D1"), 0, 0 ) end
 	=

 	Gump.chargump =3D Gump:addImage( 10, 20, GetPaperdollBodyAndBaseID( mobil=
e.body ), mobile.hue, 0 )
 	=

 	-- Name, Title
-	Gump.text =3D Gump:addCroppedText( 40, 260, 180, 40, packet.name, 0, 0, 0=
, false )
+	Gump.text =3D Gump:addCroppedText( 23, 265, 180, 40, packet.name, 0, 0, 0=
, false )
 =

 	if IsPlayer then
 		if (mobile.warmode) then
@@ -273,14 +270,14 @@
 		local paperdolls =3D gGumpmanager.GetGumpsByName( "paperdoll" )
 		local paperdoll =3D nil
 		for s, gump in pairs( paperdolls ) do
-			if (gump.serial =3D=3D player.serial) then
+			if (gump.mobileserial =3D=3D player.serial) then
 				paperdoll =3D gump
 				break
 			end
 		end
 		=

 		if (paperdoll) then
-			paperdoll.setVisible( not paperdoll.visible )
+			paperdoll:setVisible( not paperdoll.visible )
 		else
 			Send_DoubleClick( player.serial )
 		end

Modified: branches/knut/data/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.status.lua (original)
+++ branches/knut/data/lua/gui/gui.status.lua Sun Jun 24 22:26:15 2007
@@ -1,4 +1,199 @@
 gStatusAosDialog_LastPositionX =3D nil
 gStatusAosDialog_LastPositionY =3D nil
+
+function CreateStatusGump( serial )
+	local mobile =3D gObjectList[ serial ]
+	if (not mobile) then
+		return
+	end
+	=

+	local Gump =3D gGumpmanager.CreateGump( 100, 100 )
+	Gump.name =3D "status"
+	Gump.mobileserial =3D serial
+	Gump:setpage( 1 )
+	=

+	local stats =3D mobile.stats	=

+	=

+	if (not stats.flag) or (stats.flag =3D=3D 0) then
+		Gump.background =3D Gump:addImage( 0, 0, hex2num("0x804"), 0, 0 )
+		Gump.charname =3D Gump:addCroppedText( 16, 14, 100, 30, "", 0, 0, 0 )
+		Gump.healthbackground =3D Gump:addImage( 34, 38, hex2num("0x805"), 0, 0 =
) =

+                Gump.healthbar =3D Gump:addTiledImage( 34, 38, 109, 11, he=
x2num("0x806"), 0, 0 )
+	elseif (stats.flag =3D=3D 1) then
+		Gump.background =3D Gump:addImage( 0, 0, hex2num("0x802"), 0, 0 )
+                Gump.charname =3D Gump:addCroppedText( 90, 39, 100, 30, ""=
, 0, 0, 0 )
+
+                Gump.str =3D Gump:addText( 85, 57, "", 0, 0, 0 )
+                Gump.dex =3D Gump:addText( 85, 69, "", 0, 0, 0 )
+                Gump.int =3D Gump:addText( 85, 81, "", 0, 0, 0 )
+                Gump.sex =3D Gump:addText( 85, 93, "", 0, 0, 0 )
+
+                Gump.armor =3D AddText( 85, 105, "", 0, 0, 1 )
+
+                Gump.health =3D Gump:addText( 175, 57, "", 0, 0, 1 )
+                Gump.stamina =3D Gump:addText( 175, 69, "", 0, 0, 1 )
+                Gump.mana =3D Gump:addText( 175, 81, "", 0, 0, 1 )
+                Gump.gold =3D Gump:addText( 175, 93, "", 0, 0, 1 )
+                Gump.weight =3D Gump:addText( 175, 105, "", 0, 0, 1 )
+        elseif (stats.flag =3D=3D 3) or (stats.flag =3D=3D 4) then
+                Gump.background =3D Gump:addImage( 0, 0, hex2num("0x2A6C")=
, 0, 1 )
+                Gump.charname =3D Gump:addCroppedText( 80, 48, 100, 30, ""=
, 0, 0, 1 )
+
+                Gump.str =3D Gump:addText( 90, 73, "", 0, 0, 1 )
+                Gump.dex =3D Gump:addText( 90, 101, "", 0, 0, 1 )
+                Gump.int =3D Gump:addText( 90, 129, "", 0, 0, 1 )
+
+                Gump.health =3D Gump:addText( 155, 66, "", 0, 0, 1 )
+                Gump.maxhealth =3D Gump:addText( 155, 79, "", 0, 0, 1 )
+                Gump.stamina =3D Gump:addText( 155, 94, "", 0, 0, 1 )
+                Gump.maxstamina =3D Gump:addText( 155, 107, "", 0, 0, 1 )
+                Gump.mana =3D Gump:addText( 155, 122, "", 0, 0, 1 )
+                Gump.maxmana =3D Gump:addText( 155, 135, "", 0, 0, 1 )
+
+                Gump.statcap =3D Gump:addText( 222, 73, "", 0, 0, 1 )
+                Gump.weight =3D Gump:addText( 222, 122, "", 0, 0, 1 )
+                Gump.maxweight =3D Gump:addText( 222, 135, "", 0, 0, 1 )
+
+                Gump.gold =3D Gump:addText( 287, 101, "", 0, 0, 1 )
+                Gump.pets =3D Gump:addText( 287, 129, "", 0, 0, 1 )
+
+                Gump.damage =3D Gump:addText( 282, 73, '0 - 0', 0, 0, 1 )
+                Gump.luck =3D Gump:addText( 222, 101, '0', 0, 0, 1 )
+
+                Gump.armor =3D Gump:addText( 357, 70, '0', 0, 0, 1 )
+                Gump.fireresist =3D Gump:addText( 357, 87, '0', 0, 0, 1 )
+                Gump.coldresist =3D Gump:addText( 357, 102, '0', 0, 0, 1 )
+                Gump.poisonresist =3D Gump:addText( 357, 115, '0', 0, 0, 1=
 )
+                Gump.energyresist =3D Gump:addText( 357, 129, '0', 0, 0, 1=
 )
+                =

+                Gump.background =3D Gump:addImage( 0, 0, hex2num("0x803"),=
 0, 2 )
+                Gump.healthbackground =3D Gump:addImage( 34, 10, hex2num("=
0x805"), 0, 2 )
+                Gump.healthbar =3D Gump:addTiledImage( 34, 10, 109, 11, he=
x2num("0x806"), 0, 2 )
+                Gump.manabackground =3D Gump:addImage( 34, 24, hex2num("0x=
805"), 0, 2 )
+                Gump.manabar =3D Gump:addTiledImage( 34, 24, 109, 11, hex2=
num("0x806"), 0, 2 )
+                Gump.staminabackground =3D Gump:addImage( 34, 38, hex2num(=
"0x805"), 0, 2 )
+                Gump.staminabar =3D Gump:addTiledImage( 34, 38, 109, 11, h=
ex2num("0x806"), 0, 2 )
+	end
+	=

+	Gump.OnMobileStatUpdate =3D function()
+		local mobile =3D gObjectList[ Gump.mobileserial ]
+		if (not mobile) then
+			Gump:destroy()
+		end
+		=

+		UpdateStatusGump( Gump )
+	end
+	=

+	RegisterListener( "MobileStatUpdate"..sprintf("%d",Gump.mobileserial), Gu=
mp.OnMobileStatUpdate )
+	=

+	Gump.OnMobileDelete =3D function()
+		Gump:destroy()
+	end
+	=

+	RegisterListener( "DeleteMobile"..sprintf("%d",Gump.mobileserial), Gump.O=
nMobileDelete )
+	=

+	Gump.customdestroy =3D function( Gump )
+		UnregisterListener( "MobileStatUpdate"..sprintf("%d",Gump.mobileserial),=
 Gump.OnMobileStatUpdate )
+		UnregisterListener( "DeleteMobile"..sprintf("%d",Gump.mobileserial), Gum=
p.OnMobileDelete )
+	end
+	=

+	UpdateStatusGump( Gump )
+end
+
+function UpdateStatusGump( Gump )
+	local mobile =3D gObjectList[ Gump.mobileserial ]
+	if (not mobile) then
+		Gump:destroy()
+	end
+	=

+	stats =3D mobile.stats
+	=

+	if (Gump.charname) and (stats.name) then Gump.charname:settext( stats.nam=
e ) end
+	=

+	if (Gump.healthbar) and (stats.curHits) and (stats.maxHits) then
+		Gump.healthbar.width =3D math.floor( 109*math.min( stats.curHits / stats=
.maxHits, 1 ) )
+		Gump.healthbar:update()
+	end
+	if (Gump.manabar) and (stats.curMana) and (stats.maxMana) then
+		Gump.manabar.width =3D math.floor( 109*math.min( stats.curMana / stats.m=
axMana, 1 ) )
+		Gump.manabar:update()
+	end
+	if (Gump.staminabar) and (stats.curStamina) and (stats.maxStamina) then
+		Gump.staminabar.width =3D math.floor( 109*math.min( stats.curStamina / s=
tats.maxStamina, 1 ) )
+		Gump.staminabar:update()
+	end
+	=

+	if (stats.flag =3D=3D 1) then
+		if (Gump.health) and (stats.curHits) and (stats.maxHits) then Gump.healt=
h:settext( sprintf( "%d / %d", stats.curHits, stats.maxHits ) ) end
+		if (Gump.stamina) and (stats.curStamina) and (stats.maxStamina) then Gum=
p.stamina:settext( sprintf( "%d / %d", stats.curStamina, stats.maxStamina )=
 ) end
+		if (Gump.mana) and (stats.curMana) and (stats.maxMana) then Gump.mana:se=
ttext( sprintf( "%d / %d", stats.curMana, stats.maxMana ) ) end
+	end
+	=

+	if (Gump.health) and (stats.curHits) then Gump.health:settext( sprintf( "=
%d", stats.curHits ) ) end
+	if (Gump.maxhealth) and (stats.maxHits) then Gump.maxhealth:settext( spri=
ntf( "%d", stats.maxHits ) ) end
+	if (Gump.stamina) and (stats.curStamina) then Gump.stamina:settext( sprin=
tf( "%d", stats.curStamina ) ) end
+	if (Gump.maxstamina) and (stats.maxStamina) then Gump.maxstamina:settext(=
 sprintf( "%d", stats.maxStamina ) ) end
+	if (Gump.mana) and (stats.curMana) then Gump.mana:settext( sprintf( "%d",=
 stats.curMana ) ) end
+	if (Gump.maxmana) and (stats.maxMana) then Gump.maxmana:settext( sprintf(=
 "%d", stats.maxMana ) ) end
+	=

+	if (Gump.str) and (stats.str) then Gump.str:settext( sprintf( "%d", stats=
.str ) ) end
+	if (Gump.dex) and (stats.dex) then Gump.dex:settext( sprintf( "%d", stats=
.dex ) ) end
+	if (Gump.int) and (stats.int) then Gump.int:settext( sprintf( "%d", stats=
.int ) ) end
+
+	if (Gump.sex) and (stats.sex) then
+		if (stats.sex =3D=3D 0) then Gump.sex:settext( "m" )
+		else Gump.sex:settext( "w" ) end
+	end
+
+	if (Gump.armor) and (stats.armor) then Gump.armor:settext( sprintf( "%d",=
 stats.armor ) ) end
+	if (Gump.gold) and (stats.gold) then Gump.gold:settext( sprintf( "%d", st=
ats.gold ) ) end
+	if (Gump.weight) and (stats.weight) then Gump.weight:settext( sprintf( "%=
d", stats.weight ) ) end
+	if (Gump.maxweight) and (stats.str) then Gump.maxweight:settext( sprintf(=
 "%d", 40+math.floor(stats.str*35/10) ) ) end
+	if (Gump.statcap) and (stats.statcap) then Gump.statcap:settext( sprintf(=
 "%d", stats.statcap ) ) end
+	if (Gump.pets) and (stats.curPet) and (stats.maxPet) then Gump.pets:sette=
xt( sprintf( "%d / %d", stats.curPet, stats.maxPet ) ) end
+
+	if (Gump.damage) and (stats.minDamage) and (stats.maxDamage) then Gump.da=
mage:settext( sprintf( "%d - %d", stats.minDamage, stats.maxDamage ) )
+	elseif (Gump.damage) then Gump.damage:settext( "0 - 0" ) end
+	=

+	if (Gump.luck) then
+		if (stats.luck) then Gump.luck:settext( sprintf( "%d", stats.luck ) )
+		else Gump.luck:settext( "0" ) end
+	end
+	=

+	if (Gump.fireresist) then
+		if (stats.fireresist) then Gump.fireresist:settext( sprintf( "%d", stats=
.fireresist ) )
+		else Gump.fireresist:settext( "0" ) end
+	end
+	if (Gump.coldresist) then
+		if (stats.coldresist) then Gump.coldresist:settext( sprintf( "%d", stats=
.coldresist ) )
+		else Gump.coldresist:settext( "0" ) end
+	end
+	if (Gump.poisonresist) then
+		if (stats.poisonresist) then Gump.poisonresist:settext( sprintf( "%d", s=
tats.poisonresist ) )
+		else Gump.poisonresist:settext( "0" ) end
+	end
+	if (Gump.energyresist) then
+		if (stats.energyresist) then Gump.energyresist:settext( sprintf( "%d", s=
tats.energyresist ) )
+		else Gump.energyresist:settext( "0" ) end
+	end
+end
+
 function ToggleStatusAos ()
+	player =3D GetPlayerMobile()
+	if (player) then
+		local statusgumps =3D gGumpmanager.GetGumpsByName( "status" )
+		local statusgump =3D nil
+		for s, gump in pairs( statusgumps ) do
+			if (gump.mobileserial =3D=3D player.serial) then
+				statusgump =3D gump
+				break
+			end
+		end
+		=

+		if (statusgump) then
+			statusgump:setVisible( not statusgump.visible )
+		else
+			CreateStatusGump( player.serial )
+		end
+	end
 end =


Modified: branches/knut/data/lua/gui/gui.widget.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.widget.lua (original)
+++ branches/knut/data/lua/gui/gui.widget.lua Sun Jun 24 22:26:15 2007
@@ -166,6 +166,7 @@
 function gui._SecureGetMaterial			(matname) =

 	if (not OgreMaterialNameKnown(matname)) then =

 		print("WARNING ! material not found in gui._SecureGetMaterial",matname)
+		CrashSegFault()
 		return kGUISystemFallbackMaterial =

 	end		=

 	return matname

Modified: branches/knut/data/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.loading.lua (original)
+++ branches/knut/data/lua/lib.loading.lua Sun Jun 24 22:26:15 2007
@@ -95,7 +95,7 @@
 	DebugCallLogStartIgnore()
 	LoadingProfile("init unifonts")
 	if (gUniFontLoaderType) then
-		CreateUniFont(CorrectPath(gUOPath.."unifont.mul"),"font_unifont")
+		CreateUniFont(CorrectPath(gUOPath.."unifont.mul"),"font_unifont0")
 		for i=3D1,2 do
 			CreateUniFont(CorrectPath(gUOPath.."unifont"..i..".mul"),"font_unifont"=
..i)
 		end

Modified: branches/knut/data/lua/lib.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.skill.lua (original)
+++ branches/knut/data/lua/lib.skill.lua Sun Jun 24 22:26:15 2007
@@ -323,134 +323,6 @@
 	end
 end
 =

--- update the aos stats display
-function UpdateStatusAos ()
-	if gStatusAosDialog then
-		gStatusAosDialog:UpdateStats()
-	end
-end
-
-
-		=

--- toggles the display of the extended aos stats
-gStatusAosDialog_LastPositionX =3D nil
-gStatusAosDialog_LastPositionY =3D nil
-function ToggleStatusAos ()
-	if (gStatusAosDialog) then
-		-- store current positoin
-		gStatusAosDialog_LastPositionX, gStatusAosDialog_LastPositionY =3D gStat=
usAosDialog.rootwidget.gfx:GetPos()
-		-- and close
-		gStatusAosDialog:Close()
-	else
-		-- request stats update of player body
-		if gPlayerBodySerial then Send_ClientQuery(gRequest_States,gPlayerBodySe=
rial) end
-	=

-		gStatusAosDialog =3D CreateGumpDlgFromGfm(datapath.."gfm/status_aos.gfm")
-
-		-- restore last positoin if available
-		if gStatusAosDialog_LastPositionX and gStatusAosDialog_LastPositionY the=
n gStatusAosDialog.rootwidget.gfx:SetPos(gStatusAosDialog_LastPositionX, gS=
tatusAosDialog_LastPositionY) end
-		=

-		-- init StatusAos dialog
-		local dialog =3D gStatusAosDialog
-		dialog.Close =3D function (dialog)
-			gStatusAosDialog:Destroy()
-			gStatusAosDialog =3D nil
-		end
-		dialog.onMouseDown =3D function (widget,mousebutton)
-			if (mousebutton =3D=3D 2) then widget.dialog:Close() end
-			if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.StartMo=
veDialog(widget.dialog.rootwidget) end
-		end
-	=

-		--[[
-		stats.char_sex		=3D input:PopNetUint8() -- * 0x00 - Male     * 0x01 - Fe=
male
-		stats.char_gold		=3D input:PopNetUint32()
-		stats.char_armorC	=3D input:PopNetUint16() -- resistPhysical (old client=
s: AC).
-		stats.char_curWeight=3D input:PopNetUint16()
-		stats.char_maxWeight =3D input:PopNetUint16()
-		stats.char_race		 =3D input:PopNetUint8()
-		stats.char_statcap	=3D input:PopNetUint16()		-- The character's total al=
lowable sum of Strength, Intelligence, and Dexterity
-		stats.char_curPet	=3D input:PopNetUint8()			=

-		stats.char_maxPet	=3D input:PopNetUint8()
-		stats.char_fireresist	=3D input:PopNetUint16()			=

-		stats.char_coldresist	=3D input:PopNetUint16()			=

-		stats.char_poisonresist	=3D input:PopNetUint16()			=

-		stats.char_energyresist	=3D input:PopNetUint16()			=

-		stats.char_minDamage	=3D input:PopNetUint16()			=

-		stats.char_maxDamage	=3D input:PopNetUint16()			=

-		stats.char_tithing		=3D input:PopNetUint32()		=

-		]]--		=

-
-				-- stats update function
-		dialog.UpdateStats =3D function (dialog)
-			if gPlayerBodySerial and gObjectList then
-				local m =3D gObjectList[gPlayerBodySerial]
-				if m and m.stats then
-					local s =3D m.stats
-					=

-					local l =3D {	char_str =3D "status_str", char_dex =3D "status_dex", c=
har_int =3D "status_int",
-								curHits =3D "status_hits", maxHits =3D "status_maxhits",
-								char_curMana =3D "status_mana", char_maxMana =3D "status_maxmana",
-								char_curSta =3D "status_stamina", char_maxSta =3D "status_maxstami=
na",
-								char_luck =3D "status_luck", char_gold =3D "status_gold",
-								char_armorC =3D "status_armor", char_statcap =3D "status_statcap",=
 char_fireresist =3D "status_fireres",
-								char_coldresist =3D "status_coldres", char_poisonresist =3D "statu=
s_poisres",
-								char_energyresist =3D "status_energres" }
-					=

-					-- set all textfields (single)
-					for k,v in pairs(l) do
-						if s[k] then dialog.controls[v].gfx:SetText(s[k])
-						else dialog.controls[v].gfx:SetText("?") end =

-					end
-
-					local r,g,b =3D GetNotorietyColor(m.notoriety)
-			=

-					-- set name
-					if m.name then dialog.controls["status_name"].gfx:SetCharHeight(16) d=
ialog.controls["status_name"].gfx:SetColour({r,g,b,1.0}) dialog.controls["s=
tatus_name"].gfx:SetText(m.name)
-					else dialog.controls["status_name"].gfx:SetText("?") end
-
-					-- multi part textfields, like "10 / 20"
-					-- pets
-					if s["char_curPet"] and s["char_maxPet"] then =

-						dialog.controls["status_pets"].gfx:SetText(s["char_curPet"].."/"..s[=
"char_maxPet"]) =

-					else dialog.controls["status_pets"].gfx:SetText("?") end =

-					-- damage
-					if s["char_minDamage"] and s["char_maxDamage"] then =

-						dialog.controls["status_minmaxdamage"].gfx:SetText(s["char_minDamage=
"].."-"..s["char_maxDamage"]) =

-					else dialog.controls["status_minmaxdamage"].gfx:SetText("?") end =

-					-- weight
-					if s["char_curWeight"] then =

-						if s["char_maxWeight"] then =

-							-- max weight given
-							dialog.controls["status_weight"].gfx:SetText(s["char_curWeight"])
-							dialog.controls["status_maxweight"].gfx:SetText(s["char_maxWeight"])
-						else =

-							-- no maxweight present
-							dialog.controls["status_weight"].gfx:SetText(s["char_curWeight"]) =

-							-- hardcoded fallback: 40 + floor(str*35/10)
-							dialog.controls["status_maxweight"].gfx:SetText(""..
-								(40 + math.floor(s["char_str"]*35/10)))
-						end
-					else dialog.controls["status_weight"].gfx:SetText("?") end =

-				end
-			end
-		end
-		=

-		-- handle mouse events
-		for k,v in pairs(dialog.childs) do v.mbIgnoreMouseOver =3D false end
-
--- SiENcE: ??? for what ??? commented out
---		local curparent =3D dialog.rootwidget
---		local x,y =3D 40,80
-		=

-		-- set stats
-		dialog:UpdateStats()
-		=

-		dialog.lStatusAos =3D {}
-	end
-end
-
-
-
 glQuickCastDialog =3D {}
 -- creates a quickcast button at the given position
 function CreateQuickCastButton (x,y,name,fun)

Modified: branches/knut/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/net/net.mobile.lua (original)
+++ branches/knut/data/lua/net/net.mobile.lua Sun Jun 24 22:26:15 2007
@@ -166,7 +166,7 @@
 		stats.armor			=3D input:PopNetUint16()
 		stats.curWeight		=3D input:PopNetUint16()
 =

-		if (flag =3D=3D 5) then
+		if (stats.flag =3D=3D 5) then
 			stats.maxWeight	=3D input:PopNetUint16()
 			stats.race		=3D input:PopNetUint8()
 		end
@@ -191,7 +191,7 @@
 =

 	local mobile =3D gObjectList[mobileserial] =

 	if (mobile) then
-		mobile:updatestats( packet )
+		mobile:updatestats( stats )
 	end
 end
 =

@@ -245,3 +245,12 @@
 	=

 	gCurrentRenderer:NotifyHPChange( serial, damage, 0 )
 end
+
+function Send_QueryStatus( mobile )
+	local out =3D GetSendFIFO()
+	out:PushNetUint8( kPacket_Client_Query )
+	out:PushNetUint32( hex2num("0xedededed"))
+	out:PushNetUint8( hex2num("0x04") )
+	out:PushNetUint32( mobile.serial )
+	out:SendPacket()
+end

Modified: branches/knut/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/obj/obj.mobile.lua (original)
+++ branches/knut/data/lua/obj/obj.mobile.lua Sun Jun 24 22:26:15 2007
@@ -73,6 +73,8 @@
 	mobile:register()
 	gCurrentRenderer:AddMobile( mobile )
 	=

+	Send_QueryStatus( mobile )
+	=

 	return mobile
 end
 =

@@ -100,8 +102,6 @@
 	if (update) then
 		gCurrentRenderer:UpdateMobile( mobile )
 	end
-	=

-	-- Send_ClientQuery(gRequest_States,mobile.serial)
 end
 =

 function UpdateMobileFlags( mobile )
@@ -190,31 +190,35 @@
 end
 =

 function UpdateStats( mobile, stats )
-	mobile:updatehits( stats.curHits, stats.maxHits )
-	mobile:updatestamina( stats.curStamina, stats.maxStamina )
-	mobile:updatemana( stats.curMana, stats.maxMana )
-	=

 	for field, value in pairs( stats ) do
 		if (value ~=3D mobile.stats[field]) then
 			update =3D true
 			mobile.stats[field] =3D value
 		end
 	end
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
 end
 =

 function UpdateHits( mobile, curHits, maxHits )
 	mobile.stats.curHits =3D curHits
 	mobile.stats.maxHits =3D maxHits
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
 end
 =

 function UpdateMana( mobile, curStamina, maxStamina )
 	mobile.stats.curMana =3D curMana
 	mobile.stats.maxMana =3D maxMana
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
 end
 =

 function UpdateStamina( mobile, curMana, maxMana )
 	mobile.stats.curStamina =3D curStamina
 	mobile.stats.maxStamina =3D maxStamina
+	=

+	NotifyListener( "MobileStatUpdate"..sprintf("%d",mobile.serial) )
 end
 =

 function SetMobilePosition( mobile, x, y, z, dir )



From no-reply at zwischenwelt.org  Sun Jun 24 22:51:56 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 20:51:56 -0000
Subject: [Iris-commit] [IRIS] r1238 -
	/branches/knut/data/lua/2d/lib.2d.renderer.luac
Message-ID: <20070624205159.27D05B1466D@localhost.localdomain>

Author: varan
Date: Sun Jun 24 22:51:42 2007
New Revision: 1238

Log:
fixes

Modified:
    branches/knut/data/lua/2d/lib.2d.renderer.luac

Modified: branches/knut/data/lua/2d/lib.2d.renderer.luac
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sun Jun 24 23:09:20 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 21:09:20 -0000
Subject: [Iris-commit] [IRIS] r1239 -
	/branches/knut/data/lua/lib.guimaker.lua
Message-ID: <20070624210922.248CEB1466D@localhost.localdomain>

Author: ghoulsblade
Date: Sun Jun 24 23:09:18 2007
New Revision: 1239

Log:
fixed maketext

Modified:
    branches/knut/data/lua/lib.guimaker.lua

Modified: branches/knut/data/lua/lib.guimaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/lib.guimaker.lua (original)
+++ branches/knut/data/lua/lib.guimaker.lua Sun Jun 24 23:09:18 2007
@@ -417,14 +417,14 @@
 	return widget
 end
 =

-function guimaker.MakeText (parent,x,y,text,charh,col)
+function guimaker.MakeText (parent,x,y,text,charh,col,fontname)
 	assert(not parent.isDialog,"text cannot be root element of a dialog, bett=
er take a plane-widget as parent")
 	local widget =3D parent:CreateChild()
 	widget.gfx:InitCCTO(parent.gfx)
 	widget.gfx:SetCharHeight(charh or 16)
 	widget.gfx:SetColour(col)
 	widget.gfx:SetPos(x,y)
-	widget.gfx:SetFont("TrebuchetMSBold")
+	widget.gfx:SetFont(fontname or "TrebuchetMSBold")
 	widget.gfx:SetText(text)
 	widget.mbIgnoreMouseOver =3D true
 	local w,h =3D widget.gfx:GetTextBounds()



From no-reply at zwischenwelt.org  Sun Jun 24 23:52:25 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 24 Jun 2007 21:52:25 -0000
Subject: [Iris-commit] [IRIS] r1240 - in /branches/knut/data/lua/gui:
 gui.gumpmanager.lua gui.paperdoll.lua
Message-ID: <20070624215226.68C35B1466D@localhost.localdomain>

Author: varan
Date: Sun Jun 24 23:52:24 2007
New Revision: 1240

Log:
deactiveted uo unifonts in gui, until they work

Modified:
    branches/knut/data/lua/gui/gui.gumpmanager.lua
    branches/knut/data/lua/gui/gui.paperdoll.lua

Modified: branches/knut/data/lua/gui/gui.gumpmanager.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.gumpmanager.lua (original)
+++ branches/knut/data/lua/gui/gui.gumpmanager.lua Sun Jun 24 23:52:24 2007
@@ -780,18 +780,19 @@
 	textfield.page =3D page
 	textfield.border =3D border
 	textfield.gump =3D gump
-	textfield.widget =3D gump.dialog:CreateText( text, x, y, "font_unifont"..=
sprintf("%d",font) )
-	--textfield.widget:SetAutoWrap( w )
-	--textfield.widget:SetClipAbsolute( 0, 0, w, h )
+	--textfield.widget =3D gump.dialog:CreateText( text, x, y, "font_unifont"=
..sprintf("%d",font) )
+	textfield.widget =3D gump.dialog:CreateText( text, x, y )
+	textfield.widget:SetAutoWrap( w )
+	textfield.widget:SetClipRelative( 0, 0, w, h )
 	textfield.widget.gumpobject =3D textfield
 	textfield.type =3D gGumpmanager.gumpObjectType_CroppedText
 	=

 	textfield.update =3D function( textfield )
 		textfield.widget:SetPos( textfield.x, textfield.y )
 		textfield.widget:SetText( textfield.text )
-		textfield.widget:SetFont( "font_unifont"..sprintf("%d",textfield.font) )
-		--textfield.widget:SetAutoWrap( textfield.width )
-		--textfield.widget:SetClipAbsolute( 0, 0, textfield.width, textfield.hei=
ght )
+		--textfield.widget:SetFont( "font_unifont"..sprintf("%d",textfield.font)=
 )
+		textfield.widget:SetAutoWrap( textfield.width )
+		textfield.widget:SetClipRelative( 0, 0, textfield.width, textfield.heigh=
t )
 	end
 	=

 	textfield.settext =3D function( textfield, text )
@@ -1289,14 +1290,15 @@
 	textfield.page =3D page
 	textfield.border =3D border
 	textfield.gump =3D gump
-	textfield.widget =3D gump.dialog:CreateText( text, x, y, "font_unifont"..=
sprintf("%d",font) )
+	--textfield.widget =3D gump.dialog:CreateText( text, x, y, "font_unifont"=
..sprintf("%d",font) )
+	textfield.widget =3D gump.dialog:CreateText( text, x, y )
 	textfield.widget.gumpobject =3D textfield
 	textfield.type =3D gGumpmanager.gumpObjectType_Text
 	=

 	textfield.update =3D function( textfield )
 		textfield.widget:SetPos( textfield.x, textfield.y )
 		textfield.widget:SetText( textfield.text )
-		textfield.widget:SetFont( "font_unifont"..sprintf("%d",textfield.font) )
+		--textfield.widget:SetFont( "font_unifont"..sprintf("%d",textfield.font)=
 )
 	end
 	=

 	textfield.settext =3D function( textfield, text )

Modified: branches/knut/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- branches/knut/data/lua/gui/gui.paperdoll.lua (original)
+++ branches/knut/data/lua/gui/gui.paperdoll.lua Sun Jun 24 23:52:24 2007
@@ -42,7 +42,7 @@
 	Gump.chargump =3D Gump:addImage( 10, 20, GetPaperdollBodyAndBaseID( mobil=
e.body ), mobile.hue, 0 )
 	=

 	-- Name, Title
-	Gump.text =3D Gump:addCroppedText( 23, 265, 180, 40, packet.name, 0, 0, 0=
, false )
+	Gump.text =3D Gump:addCroppedText( 27, 265, 180, 40, packet.name, 0, 0, 0=
, false )
 =

 	if IsPlayer then
 		if (mobile.warmode) then



From no-reply at zwischenwelt.org  Tue Jun 26 01:11:56 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 25 Jun 2007 23:11:56 -0000
Subject: [Iris-commit] [IRIS] r1241 - in /trunk/data: ./ terrain/materials/
 terrain/misc/ terrain/textures/
Message-ID: <20070625231157.BA100B1466D@localhost.localdomain>

Author: sience
Date: Tue Jun 26 01:11:54 2007
New Revision: 1241

Log:
-skippedfallbacks added
-last terraintextures changed to dxt compressed textures (saves vram)
-dds terrain profile added (nvidia dds photoshop plugin)

Added:
    trunk/data/terrain/misc/
    trunk/data/terrain/misc/terrain_textures_dds_profile.dpf
    trunk/data/terrain/textures/Dirt_large_pattern_1024.dds   (with props)
    trunk/data/terrain/textures/Grass_large_pattern_1024.dds   (with props)
    trunk/data/terrain/textures/Mountain_large_pattern_512.dds   (with prop=
s)
    trunk/data/terrain/textures/Water01.dds   (with props)
Removed:
    trunk/data/terrain/textures/Dirt_large_pattern_1024.jpg
    trunk/data/terrain/textures/Grass_large_pattern_1024.jpg
    trunk/data/terrain/textures/Mountain_large_pattern_512.jpg
    trunk/data/terrain/textures/Water01.png
Modified:
    trunk/data/skippedfallbacks.lua
    trunk/data/terrain/materials/terrain.material
    trunk/data/terrain/materials/water.material

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Tue Jun 26 01:11:54 2007
@@ -324,3 +324,11 @@
 RegisterSkippedArtBillboardFallBack(4808) -- 0x12c8 name=3Dscaffold
 RegisterSkippedArtBillboardFallBack(6553) -- 0x1999 name=3Dforge
 RegisterSkippedArtBillboardFallBack(6565) -- 0x19a5 name=3Dforge
+RegisterSkippedArtBillboardFallBack(12430) -- 0x308e name=3Delven table se=
ts
+RegisterSkippedArtBillboardFallBack(12428) -- 0x308c name=3Delven table se=
ts
+RegisterSkippedArtBillboardFallBack(12433) -- 0x3091 name=3Delven table se=
ts
+RegisterSkippedArtBillboardFallBack(12431) -- 0x308f name=3Delven table se=
ts
+RegisterSkippedArtBillboardFallBack(8636) -- 0x21bc name=3Dnodraw
+RegisterSkippedArtBillboardFallBack(3509) -- 0x0db5 name=3Dbed
+RegisterSkippedArtBillboardFallBack(3505) -- 0x0db1 name=3Dbed
+RegisterSkippedArtBillboardFallBack(3504) -- 0x0db0 name=3Dbed

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Tue Jun 26 01:11:54 2007
@@ -107,7 +107,7 @@
 		{
 			texture_unit
 			{
-				texture Dirt_large_pattern_1024.jpg
+				texture Dirt_large_pattern_1024.dds
 			}
 		}
 	}
@@ -121,7 +121,7 @@
 		{
 			texture_unit
 			{
-				texture Grass_large_pattern_1024.jpg
+				texture Grass_large_pattern_1024.dds
 			}
 		}
 	}
@@ -135,7 +135,7 @@
 		{
 			texture_unit
 			{
-				texture Mountain_large_pattern_512.jpg
+				texture Mountain_large_pattern_512.dds
 			}
 		}
 	}
@@ -204,14 +204,14 @@
 		{
 			texture_unit
 			{
-				texture Dirt_large_pattern_1024.jpg
+				texture Dirt_large_pattern_1024.dds
 			}
 		}
 		pass blend
 		{
 			texture_unit
 			{
-				texture Grass_large_pattern_1024.jpg
+				texture Grass_large_pattern_1024.dds
 			}
 		}
 	}
@@ -226,14 +226,14 @@
 		{
 			texture_unit
 			{
-				texture Mountain_large_pattern_512.jpg
+				texture Mountain_large_pattern_512.dds
 			}
 		}
 		pass blend
 		{
 			texture_unit
 			{
-				texture Grass_large_pattern_1024.jpg
+				texture Grass_large_pattern_1024.dds
 			}
 		}
 	}
@@ -248,14 +248,14 @@
 		{
 			texture_unit
 			{
-				texture Mountain_large_pattern_512.jpg
+				texture Mountain_large_pattern_512.dds
 			}
 		}
 		pass blend
 		{
 			texture_unit
 			{
-				texture Dirt_large_pattern_1024.jpg
+				texture Dirt_large_pattern_1024.dds
 			}
 		}
 	}
@@ -269,7 +269,7 @@
 		{
 			texture_unit
 			{
-				texture Dirt_large_pattern_1024.jpg
+				texture Dirt_large_pattern_1024.dds
 			}
 		}
 		pass blend
@@ -290,7 +290,7 @@
 		{
 			texture_unit
 			{
-				texture Dirt_large_pattern_1024.jpg
+				texture Dirt_large_pattern_1024.dds
 			}
 		}
 		pass blend
@@ -318,7 +318,7 @@
 		{
 			texture_unit
 			{
-				texture Grass_large_pattern_1024.jpg
+				texture Grass_large_pattern_1024.dds
 			}
 		}
 	}

Modified: trunk/data/terrain/materials/water.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/water.material (original)
+++ trunk/data/terrain/materials/water.material Tue Jun 26 01:11:54 2007
@@ -16,7 +16,7 @@
 			}
 			texture_unit
 			{
-				texture Water01.png
+				texture Water01.dds
 			}
 		}
 	}
@@ -35,14 +35,14 @@
 		{
 			texture_unit
 			{
-				texture Water01.png
+				texture Water01.dds
 			}
 		}
 		pass blend
 		{
 			texture_unit
 			{
-				texture Water01.png
+				texture Water01.dds
 			}
 		}
 	}



From no-reply at zwischenwelt.org  Tue Jun 26 21:58:20 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 26 Jun 2007 19:58:20 -0000
Subject: [Iris-commit] [IRIS] r1242 - /trunk/data/lua/net.login.lua
Message-ID: <20070626195821.7BBB2B1466D@localhost.localdomain>

Author: sience
Date: Tue Jun 26 21:58:15 2007
New Revision: 1242

Log:
-small fix for loginserverIP <> gameserverIP check (portcheck included)

Modified:
    trunk/data/lua/net.login.lua

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Tue Jun 26 21:58:15 2007
@@ -84,7 +84,7 @@
 	printdebug("login",sprintf("DEBUG IP STRINGS %s <> %s\n",NtoA(gGameServer=
IP),GetHostByName(gLoginServerIP)))
 =

 	-- login & gameserver are not the same: redirect is received
-	if (NtoA(gGameServerIP) ~=3D GetHostByName(gLoginServerIP)) then
+	if ((NtoA(gGameServerIP) ~=3D GetHostByName(gLoginServerIP)) or (gGameSer=
verPort ~=3D gLoginServerPort)) then
 		--disconnect from Loginserver
 		printdebug("login","NET: disconnect from loginserver")
 		NetDisconnect()



From no-reply at zwischenwelt.org  Wed Jun 27 21:23:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Jun 2007 19:23:16 -0000
Subject: [Iris-commit] [IRIS] r1243 - in /trunk/data/lua:
	lib.3d.renderer.lua lib.input.lua main.lua
Message-ID: <20070627192318.9810F115002A@localhost.localdomain>

Author: sience
Date: Wed Jun 27 21:23:13 2007
New Revision: 1243

Log:
-dynamics loaded multiply times (fixed)
-keybinding for fallbacktool deactived for 2d renderer (because of crash)

Modified:
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.input.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Wed Jun 27 21:23:13 2007
@@ -573,6 +573,9 @@
 end
 =

 function Renderer3D:CreateDynamicGfx( item )
+
+	assert(not item.gfx)
+
 	item.xadd =3D 0
 	item.yadd =3D 0
 	item.zadd =3D 0

Modified: trunk/data/lua/lib.input.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.input.lua (original)
+++ trunk/data/lua/lib.input.lua Wed Jun 27 21:23:13 2007
@@ -230,7 +230,7 @@
 	=

 	--
 	Bind("f10",		function (state) if (not gActiveEditText) then if (state > 0=
) then ShowDevTool() end end end)
-	Bind("f11",		function (state) if (not gActiveEditText) then if (state > 0=
) then ShowFallBackTool() end end end)
+	Bind("f11",		function (state) if (not gActiveEditText) then if ((state > =
0) and (gCurrentRenderer =3D=3D Renderer3D)) then ShowFallBackTool() end en=
d end)
 	Bind("tab",		function (state) if (state > 0) then if (gActWarmode=3D=3DgW=
armode_Normal) then Send_CombatMode(gWarmode_Combat) else Send_CombatMode(g=
Warmode_Normal) end end end)
 	Bind("m",		function (state) if (not gActiveEditText) then if (state > 0) =
then MobileDisplayTextOverHead(gPlayerBodySerial,"bla bla bla") end end end)
 =


Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Wed Jun 27 21:23:13 2007
@@ -181,9 +181,13 @@
 	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size
 =

 	PreLoad()
+
 	gCurrentRenderer:PreInit()
 =

 	MainMenuFinishedPreLoading()
+
+	gCurrentRenderer:Init()
+
 	StartMainMenu()
 =

 	if (gStartInDebugMode) then StopMainMenu() StartDebugMenu() end
@@ -202,7 +206,7 @@
 	print("##################################")
 	=

 	ExecuteMapChangeIfNeeded()
-	gCurrentRenderer:Init()
+
 	gCurrentRenderer:BlendOutLayersAbovePlayer()
 =

 	-- Binds all InGame-Keys



From no-reply at zwischenwelt.org  Wed Jun 27 22:16:13 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Jun 2007 20:16:13 -0000
Subject: [Iris-commit] [IRIS] r1244 - in /trunk/data/lua: lib.util.lua
	main.lua
Message-ID: <20070627201613.C4146B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Wed Jun 27 22:16:11 2007
New Revision: 1244

Log:
QuaternionFromString function

Modified:
    trunk/data/lua/lib.util.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/lib.util.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.util.lua (original)
+++ trunk/data/lua/lib.util.lua Wed Jun 27 22:16:11 2007
@@ -319,6 +319,24 @@
 				aw * bz + az * bw + ax * by - ay * bx
 	end
 	=

+	-- returns qw,qx,qy,qz  , input comma seperated list "x:90,y:90,z:30" =

+	function QuaternionFromString (txt) =

+		local qw,qx,qy,qz =3D Quaternion.identity()
+		local arr =3D strsplit(",",txt)
+		for k,axis_ang in pairs(arr) do
+			local axis,ang =3D unpack(strsplit(":",axis_ang))
+			local x,y,z =3D 0,0,0
+				if (axis =3D=3D "x") then x =3D 1 =

+			elseif (axis =3D=3D "y") then y =3D 1 =

+			elseif (axis =3D=3D "z") then z =3D 1 =

+			else assert(false,"illegal axis"..tostring(axis))
+			end
+			local ow,ox,oy,oz =3D Quaternion.fromAngleAxis(tonumber(ang)*gfDeg2Rad,=
x,y,z)
+			qw,qx,qy,qz =3D Quaternion.Mul(ow,ox,oy,oz,qw,qx,qy,qz) =

+		end
+		return qw,qx,qy,qz
+	end
+	=

 	function Quaternion.lookAt (x,y,z) =

 		return Quaternion.getRotation(0,0,1,x,y,z)
 	end

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Wed Jun 27 22:16:11 2007
@@ -131,7 +131,7 @@
 function Main ()
 	local luaversion =3D string.sub(_VERSION, 5, 7)
 	print("Lua version : "..luaversion)
-
+	=

 	HandleCommandLine()
 	=

 	CheckUODir()



From no-reply at zwischenwelt.org  Wed Jun 27 22:57:03 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Jun 2007 20:57:03 -0000
Subject: [Iris-commit] [IRIS] r1245 - in /trunk/data: base/ skybox/
Message-ID: <20070627205705.050E7B1466D@localhost.localdomain>

Author: sience
Date: Wed Jun 27 22:57:01 2007
New Revision: 1245

Log:
-skyboxes updated to DDS to save Vram

Added:
    trunk/data/base/stone512.dds   (with props)
    trunk/data/skybox/cleansky_east.dds   (with props)
    trunk/data/skybox/cleansky_north.dds   (with props)
    trunk/data/skybox/cleansky_south.dds   (with props)
    trunk/data/skybox/cleansky_top.dds   (with props)
    trunk/data/skybox/cleansky_west.dds   (with props)
    trunk/data/skybox/darksun_east.dds   (with props)
    trunk/data/skybox/darksun_north.dds   (with props)
    trunk/data/skybox/darksun_south.dds   (with props)
    trunk/data/skybox/darksun_top.dds   (with props)
    trunk/data/skybox/darksun_west.dds   (with props)
    trunk/data/skybox/skybox_east.dds   (with props)
    trunk/data/skybox/skybox_north.dds   (with props)
    trunk/data/skybox/skybox_south.dds   (with props)
    trunk/data/skybox/skybox_top.dds   (with props)
    trunk/data/skybox/skybox_west.dds   (with props)
    trunk/data/skybox/sunset_east.dds   (with props)
    trunk/data/skybox/sunset_north.dds   (with props)
    trunk/data/skybox/sunset_south.dds   (with props)
    trunk/data/skybox/sunset_top.dds   (with props)
    trunk/data/skybox/sunset_west.dds   (with props)
Removed:
    trunk/data/base/stone512.png
    trunk/data/skybox/cleansky_east.png
    trunk/data/skybox/cleansky_north.png
    trunk/data/skybox/cleansky_south.png
    trunk/data/skybox/cleansky_top.png
    trunk/data/skybox/cleansky_west.png
    trunk/data/skybox/darksun_east.jpg
    trunk/data/skybox/darksun_north.jpg
    trunk/data/skybox/darksun_south.jpg
    trunk/data/skybox/darksun_top.jpg
    trunk/data/skybox/darksun_west.jpg
    trunk/data/skybox/skybox_east.jpg
    trunk/data/skybox/skybox_north.jpg
    trunk/data/skybox/skybox_south.jpg
    trunk/data/skybox/skybox_top.jpg
    trunk/data/skybox/skybox_west.jpg
    trunk/data/skybox/sunset_east.jpg
    trunk/data/skybox/sunset_north.jpg
    trunk/data/skybox/sunset_south.jpg
    trunk/data/skybox/sunset_top.jpg
    trunk/data/skybox/sunset_west.jpg
Modified:
    trunk/data/base/main.material

Modified: trunk/data/base/main.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/base/main.material (original)
+++ trunk/data/base/main.material Wed Jun 27 22:57:01 2007
@@ -141,7 +141,7 @@
 =

 			texture_unit
 			{
-				cubic_texture skybox_north.jpg skybox_south.jpg skybox_west.jpg skybox=
_east.jpg skybox_top.jpg stone512.png separateUV
+				cubic_texture skybox_north.dds skybox_south.dds skybox_west.dds skybox=
_east.dds skybox_top.dds stone512.dds separateUV
 				tex_address_mode clamp
 			}
 		}
@@ -160,7 +160,7 @@
 =

 			texture_unit
 			{
-				cubic_texture darksun_north.jpg darksun_south.jpg darksun_west.jpg dar=
ksun_east.jpg darksun_top.jpg stone512.png separateUV
+				cubic_texture darksun_north.dds darksun_south.dds darksun_west.dds dar=
ksun_east.dds darksun_top.dds stone512.dds separateUV
 				tex_address_mode clamp
 			}
 		}
@@ -179,7 +179,7 @@
 =

 			texture_unit
 			{
-				cubic_texture sunset_north.jpg sunset_south.jpg sunset_west.jpg sunset=
_east.jpg sunset_top.jpg stone512.png separateUV
+				cubic_texture sunset_north.dds sunset_south.dds sunset_west.dds sunset=
_east.dds sunset_top.dds stone512.dds separateUV
 				tex_address_mode clamp
 			}
 		}
@@ -198,7 +198,7 @@
 =

 			texture_unit
 			{
-				cubic_texture cleansky_north.png cleansky_south.png cleansky_west.png =
cleansky_east.png cleansky_top.png stone512.png separateUV
+				cubic_texture cleansky_north.dds cleansky_south.dds cleansky_west.dds =
cleansky_east.dds cleansky_top.dds stone512.dds separateUV
 				tex_address_mode clamp
 			}
 		}



From no-reply at zwischenwelt.org  Thu Jun 28 01:23:08 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 27 Jun 2007 23:23:08 -0000
Subject: [Iris-commit] [IRIS] r1246 - in /trunk/data: lua/ models/materials/
 models/models/to_003000/ models/textures/
Message-ID: <20070627232309.09C2AB1466D@localhost.localdomain>

Author: sience
Date: Thu Jun 28 01:23:07 2007
New Revision: 1246

Log:
-filter added for art models (statics, dynamics can be mapped to another me=
sh or rotated or x,y,z positioned)
-two new models added (armoire-2637 and armoire-2639 to show this new featu=
re)
-filterfile is named: filter.art.lua

Added:
    trunk/data/lua/filter.art.lua
    trunk/data/models/materials/armoire.material
    trunk/data/models/models/to_003000/mdl_002637.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002639.mesh   (with props)
    trunk/data/models/textures/armoire-2637.tga   (with props)
    trunk/data/models/textures/armoire-2639.tga   (with props)
Modified:
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.static.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Thu Jun 28 01:23:07 2007
@@ -576,9 +576,10 @@
 =

 	assert(not item.gfx)
 =

-	item.xadd =3D 0
-	item.yadd =3D 0
-	item.zadd =3D 0
+	item.xadd =3D FilterPositionX(item.artid) or 0
+	item.yadd =3D FilterPositionY(item.artid) or 0
+	item.zadd =3D FilterPositionZ(item.artid) or 0
+
 	-- Detect Multis
 	if item.artid >=3D gMulti_ID then
 		-- Check if Serverside Multi (Custom Multi)
@@ -644,6 +645,7 @@
 			item.mbIsMulti =3D true
 			=

 			item.gfx =3D rootgfx
+			for k,v in pairs(item.lMultiChildGfx) do item.gfx:SetOrientation(GetSta=
ticMeshOrientation(v.artid)) end
 			self:UpdateDynamicItemPos(item)
 			-- item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
 		else =

@@ -678,14 +680,15 @@
 			-- fallback to billboard with original art or =

 			if (not IsArtBillboardFallBackSkipped(item.artid)) then
 				item.gfx.billboard =3D item.gfx:CreateChild()
-				item.xadd =3D 0.5
-				item.yadd =3D 0.5
-				item.zadd =3D 0.5
+				item.xadd =3D item.xadd + 0.5
+				item.yadd =3D item.yadd + 0.5
+				item.zadd =3D item.zadd + 0.5
 				self:CreateArtBillBoard(item.gfx.billboard,iTranslatedTileTypeID,item.=
hue)
 				printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed load=
ing mesh for dynamic: artid=3D%i z_typename=3D%s\n",item.artid or -1,item.z=
_typename or ""))
 			end
 		end
 		item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
+		item.gfx:SetOrientation(GetStaticMeshOrientation(item.artid))
 		self:UpdateDynamicItemPos(item)
 	end
 	self:UpdateDynamicVisibility(item)

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Thu Jun 28 01:23:07 2007
@@ -67,9 +67,9 @@
 -- TODO : not flexible enough, what if model should be skipped, or multipl=
e models set ? or model depending on surrounding ?
 gLegacyModelCache =3D {}
 function GetStaticMeshName (iTileTypeID,iHue)
-	--Seasonal Translation
+	--1st: Seasonal Translation
 	local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeasonS=
etting)
-
+	=

 	-- hue default value is 0
 	iHue =3D iHue or 0
 =

@@ -92,7 +92,12 @@
 	if (meshname =3D=3D nil) then
 		-- try to load the new models
 		if gUseNewModelLoader then
-			meshname =3D GetModelName(iTranslatedTileTypeID) -- "mdl_"..iTileTypeID=
..".mesh"
+			-- Apply Filter
+			meshname =3D FilterMeshname(iTranslatedTileTypeID)
+
+			if (not meshname) then
+				meshname =3D GetModelName(iTranslatedTileTypeID) -- "mdl_"..iTileTypeI=
D..".mesh"
+			end
 			-- mesh available?
 			printdebug("static","query model",meshname)
 			if not OgreMeshAvailable(meshname) then =

@@ -149,13 +154,15 @@
 end
 =

 function GetStaticMeshOrientation (iTileTypeID)
-	local w,x,y,z =3D Quaternion.identity()
+	local w,x,y,z =3D FilterOrientation(iTileTypeID)
 =

 	-- custom Ogre Mesh Test
 	--if (iTileTypeID =3D=3D hex2num("0x0cd3")) then
 	--	w,x,y,z =3D Quaternion.fromAngleAxis (gfDeg2Rad * 90.0,1,0,0)  -- ang,=
x,y,z
 	--end
-
+	if (not w or not x or not y or not z) then
+		w,x,y,z =3D Quaternion.identity()
+	end
 	return w,x,y,z
 end
 =


Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Thu Jun 28 01:23:07 2007
@@ -79,6 +79,7 @@
 dofile(libpath .. "lib.3d.mobileanim.lua")
 dofile(libpath .. "lib.mount.lua")
 dofile(libpath .. "lib.corpse.lua")
+dofile(libpath .. "filter.art.lua")
 =

 --can be removed with gamerelease
 dofile(libpath .. "lib.meshexporter.lua")



From no-reply at zwischenwelt.org  Thu Jun 28 09:28:49 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 28 Jun 2007 07:28:49 -0000
Subject: [Iris-commit] [IRIS] r1247 - /trunk/README
Message-ID: <20070628072858.C0443B1466D@localhost.localdomain>

Author: ghoulsblade
Date: Thu Jun 28 09:28:38 2007
New Revision: 1247

Log:
added license info about closed source 2d renderer and art stuff to readme

Modified:
    trunk/README

Modified: trunk/README
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/README (original)
+++ trunk/README Thu Jun 28 09:28:38 2007
@@ -113,6 +113,17 @@
 	(this is for searching and destroying billboard-like models)
 	(careful with big changes to param1, will be slow, skipping tries to load=
 all meshes in between)
 =

+=3D=3D=3D 2d-renderer and data =3D=3D=3D
+
+the 2DRenderer is only available as compiled .luac file, =

+it is a optional closed source plugin that is not statically linked, =

+if you don't want it, you can delete the .luac file.
+
+there is currently no license for the models and textures in the data dir,
+they have been created by the iris1 team for use with the iris project.
+We are in the progress of replacing them with new art that will be made av=
ailable =

+under a creative commons license like by-nc-sa or something similar.
+
 =3D=3D=3D svn-ignore =3D=3D=3D
 to filter out uninteresting files under linux call "svn propset svn:ignore=
 -F svnignore . include/ src/"
 =




From no-reply at zwischenwelt.org  Thu Jun 28 20:45:58 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 28 Jun 2007 18:45:58 -0000
Subject: [Iris-commit] [IRIS] r1248 - in /trunk/data: lua/filter.art.lua
 lua/filter.granny.lua lua/lib.loading.lua lua/lib.meshexporter.lua
 lua/lib.models.lua lua/main.lua terrain/materials/water.material
 terrain/programs/waterBase_ps.hlsl
Message-ID: <20070628184559.D369EB1466D@localhost.localdomain>

Author: sience
Date: Thu Jun 28 20:45:54 2007
New Revision: 1248

Log:
-scrolling water shader
-filter.granny.lua added (filter file for grannys)
-mesh exportcode code moved to lib.meshexporter.lua modified
-

Added:
    trunk/data/lua/filter.granny.lua
    trunk/data/terrain/programs/waterBase_ps.hlsl
Modified:
    trunk/data/lua/filter.art.lua
    trunk/data/lua/lib.loading.lua
    trunk/data/lua/lib.meshexporter.lua
    trunk/data/lua/lib.models.lua
    trunk/data/lua/main.lua
    trunk/data/terrain/materials/water.material

Modified: trunk/data/lua/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/filter.art.lua (original)
+++ trunk/data/lua/filter.art.lua Thu Jun 28 20:45:54 2007
@@ -1,4 +1,5 @@
 --here we map ArtIDs to another ID, Model, Mesh or we change tiledata entr=
y, add particles or skeletons
+gArtFilter =3D {}
 =

 function FilterOrientation(iTranslatedTileTypeID)
 	if (gArtFilter[iTranslatedTileTypeID]) then
@@ -33,8 +34,6 @@
 	return nil
 end
 =

-gArtFilter =3D {}
-
 --armoire - links (2636 - offen)
 --2637 - geschlossen
 gArtFilter[2636]=3D{filename=3D"mdl_002637.mesh"}

Modified: trunk/data/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.loading.lua (original)
+++ trunk/data/lua/lib.loading.lua Thu Jun 28 20:45:54 2007
@@ -177,25 +177,7 @@
 		modelspath =3D datapath.."models.uim"
 		if (file_exists(modelspath)) then
 			gLegacyModelAndTextureLoader =3D CreateLegacyModelAndTextureLoader(gLeg=
acyModelAndTextureLoaderType,modelspath)
-			=

-			--[[
-			local i =3D 0
-			-- for exporting models from models.uim
-			for i=3D0,20000 do
-				local meshname =3D gLegacyModelAndTextureLoader:CreateMesh(i)
-				if meshname ~=3D nil then
-					local flags,weight,quality,unkn1,unkn2,quantity,animid,unkn3,hue,unkn=
4,height,name =3D gTileTypeLoader:GetStaticTileType(i+32*512)
-					if name =3D=3D nil then name =3D "unknown" end
-					print("name",name)
-					name =3D string.lower(name)
-					name =3D string.gsub(name,"%%[^%%]+%%","")
-					name =3D string.gsub(name,"[^a-z0-9]","_")
-					ExportMesh(meshname,GetModelPath(i))
-				end
-			end
-			Crash()
-			]]--
-			=

+			--MeshExporter()
 		else
 			--print("WARNING ! "..modelspath.." not found, please copy from old iri=
s1 binary distribution on berlios.de")
 			--print(" statics, such as houses, trees, etc will not be displayed...")
@@ -225,9 +207,6 @@
 	=

 	gLoadingProfileLastTime =3D 0
 	gLoadingProfileLastAction =3D false
-	=

-	--MeshExporter()
-	--Crash()
 end
 =

 -- don't load new map immediately, several mapchanges might be sent at log=
in quickly

Modified: trunk/data/lua/lib.meshexporter.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.meshexporter.lua (original)
+++ trunk/data/lua/lib.meshexporter.lua Thu Jun 28 20:45:54 2007
@@ -1,22 +1,22 @@
 --ModelExporter
 =

 --just a small function to export all static models from models.uim file
---Exportformat: stone_wall_0x0001.mesh (tiledataname+"_"tileid+".mesh")
---.....................................spaces exchanged to "_" and tileid =
into hex
 -- TODO : write material
 -- TODO : export textures too
 function MeshExporter()
-	for i =3D 0, 20000 do
-		--if (i=3D=3Dhex2num("0x0b59")) then
-		--	local testid =3D i
-			local meshname =3D GetStaticMeshName(i)
-			print("Export Model: ",i,meshname)
-			if (meshname) then
-				--local t =3D GetStaticTileType(testid)
-				--local staticname =3D string.gsub(t.msName,"%s","_")
-				--local filename =3D staticname.."_"..sprintf("0x%04x",(testid))..".me=
sh"
-				ExportMesh(meshname,datapath.."models_uim/models/mesh/iris_model_"..i.=
.".mesh")
-			end
-		--end
+	local i =3D 0
+	-- for exporting models from models.uim
+	for i=3D0,20000 do
+		local meshname =3D gLegacyModelAndTextureLoader:CreateMesh(i)
+		if meshname ~=3D nil then
+			local flags,weight,quality,unkn1,unkn2,quantity,animid,unkn3,hue,unkn4,=
height,name =3D gTileTypeLoader:GetStaticTileType(i+32*512)
+			if name =3D=3D nil then name =3D "unknown" end
+			print("name",name)
+			name =3D string.lower(name)
+			name =3D string.gsub(name,"%%[^%%]+%%","")
+			name =3D string.gsub(name,"[^a-z0-9]","_")
+			ExportMesh(meshname,GetModelPath(i))
+		end
 	end
+	Crash()
 end

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Thu Jun 28 20:45:54 2007
@@ -301,19 +301,7 @@
 =

 -- ID Mapping
 function MobileArtId2BodyId (mobileartid)
-	if (mobileartid =3D=3D  987) then return 400 end --   male admin robe
-	if (mobileartid =3D=3D 1987) then return 401 end -- female admin robe
-	=

-	if (mobileartid =3D=3D 778) then
-		printdebug("granny","TODO : Mobile 778 doesn't work -> mapping to modeli=
d 16")
-		return 16
-	end
-	if (mobileartid =3D=3D 292) then
-		printdebug("granny","TODO : Mobile 292 (llamas_llama_pack) doesn't work =
-> mapping to modelid 220")
-		return 220
-	end
-	=

-	return mobileartid
+	return FilterGranny(mobileartid) or mobileartid
 end
 =

 -- returns array with granny-model ids for bodyparts and clothing

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Thu Jun 28 20:45:54 2007
@@ -80,8 +80,9 @@
 dofile(libpath .. "lib.mount.lua")
 dofile(libpath .. "lib.corpse.lua")
 dofile(libpath .. "filter.art.lua")
-
---can be removed with gamerelease
+dofile(libpath .. "filter.granny.lua")
+
+--can be removed from release
 dofile(libpath .. "lib.meshexporter.lua")
 =

 dofile(gConfigPathFallback)
@@ -145,10 +146,9 @@
 	-- if (false) then ExpressionTest() end
 	-- if (false) then TestSound() end
 	-- if (false) then TestMultiLoader() end
-	-- if (false) then MeshExporter() end
-	-- TestZLib()
+	-- if (false) then TestZLib() end
 	-- if (false) then TestUniFontLoader() end
-	--TestUOP()
+	-- if (false) then TestUOP() end
 	=

 	=

 	gMyTicks =3D Client_GetTicks()

Modified: trunk/data/terrain/materials/water.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/water.material (original)
+++ trunk/data/terrain/materials/water.material Thu Jun 28 20:45:54 2007
@@ -1,27 +1,55 @@
 //###########################################
 // BASE TILES
 //###########################################
+//HLSL Pixel Shader
+fragment_program waterBase_ps_hlsl hlsl
+{
+	source waterBase_ps.hlsl
+	target ps_2_0
+	entry_point main
+}
+
+//--------------------------------------------------
+// GLSL ? needed !
+//--------------------------------------------------
+
+fragment_program waterBase_ps unified
+{
+	delegate waterBase_ps_hlsl
+}
+
 //water tiles
-material water : terrain_base
+material waterbase
 {
 	technique
 	{
 		pass base
 		{
+			cull_hardware clockwise
+			cull_software none
+			depth_check on
+			//polygon_mode wireframe
+
 			vertex_program_ref terrainBase_vs
 			{
 				param_named materialDiffuse float3 1.0 1.0 1.0
 				param_named materialSpecular float4 0.0 0.35 0.35 35.0
 				param_named worldScale float 18
 			}
+			fragment_program_ref waterBase_ps
+			{
+				param_named_auto time time 0.5
+			}
 			texture_unit
 			{
 				texture Water01.dds
+				tex_address_mode wrap
+				filtering anisotropic =

+				max_anisotropy 8
 			}
 		}
 	}
 }
-
 =

 //###########################################
 // TRANSITION TILES
@@ -51,27 +79,27 @@
 // Base-Textures:
 //__________________________________________________________
 // ground water
-material tileid_168 : water
+material tileid_168 : waterbase
 {
 }
-material tileid_169 : water
+material tileid_169 : waterbase
 {
 }
-material tileid_170 : water
+material tileid_170 : waterbase
 {
 }
-material tileid_171 : water
+material tileid_171 : waterbase
 {
 }
-material tileid_310 : water
+material tileid_310 : waterbase
 {
 }
-material tileid_311 : water
+material tileid_311 : waterbase
 {
 }
 =

 //__________________________________________________________
 // static water (coastlines)
-material tex_999 : water
+material tex_999 : waterbase
 {
 }



From no-reply at zwischenwelt.org  Thu Jun 28 22:32:51 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 28 Jun 2007 20:32:51 -0000
Subject: [Iris-commit] [IRIS] r1249 - in /trunk/data/terrain:
 materials/water.material programs/waterBase_ps.glsl
Message-ID: <20070628203251.C554BB1466D@localhost.localdomain>

Author: sience
Date: Thu Jun 28 22:32:49 2007
New Revision: 1249

Log:
-glsl watershader added

Added:
    trunk/data/terrain/programs/waterBase_ps.glsl
Modified:
    trunk/data/terrain/materials/water.material

Modified: trunk/data/terrain/materials/water.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/water.material (original)
+++ trunk/data/terrain/materials/water.material Thu Jun 28 22:32:49 2007
@@ -8,6 +8,11 @@
 	target ps_2_0
 	entry_point main
 }
+//GLSL Pixel Shader
+fragment_program waterBase_ps_glsl glsl
+{
+	source waterBase_ps.glsl
+}
 =

 //--------------------------------------------------
 // GLSL ? needed !
@@ -16,6 +21,7 @@
 fragment_program waterBase_ps unified
 {
 	delegate waterBase_ps_hlsl
+	delegate waterBase_ps_glsl
 }
 =

 //water tiles



From no-reply at zwischenwelt.org  Fri Jun 29 01:26:12 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 28 Jun 2007 23:26:12 -0000
Subject: [Iris-commit] [IRIS] r1250 - in /trunk/data/lua: lib.3d.map.lua
 lib.3d.renderer.lua lib.models.lua lib.static.lua
Message-ID: <20070628232613.58E06B1466D@localhost.localdomain>

Author: sience
Date: Fri Jun 29 01:26:11 2007
New Revision: 1250

Log:
-static fix (now x,y,zadd filter is working)
-comments added

Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.models.lua
    trunk/data/lua/lib.static.lua

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Fri Jun 29 01:26:11 2007
@@ -158,9 +158,16 @@
 				for i =3D 0,iStaticCount-1 do
 					iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- oper=
ates on the block that was last loaded using :Load()
 					local entity =3D {}
-					entity.xloc =3D (iBlockUO_X+x)*8 + iX
-					entity.yloc =3D (iBlockUO_Y+y)*8 + iY
-					entity.zloc =3D iZ -- in tilecoords from uo
+
+					-- FILTER: correction
+					entity.xadd =3D (FilterPositionX(iTileTypeID) or 0)
+					entity.yadd =3D (FilterPositionY(iTileTypeID) or 0)
+					entity.zadd =3D (FilterPositionZ(iTileTypeID) or 0)
+
+					entity.xloc =3D (iBlockUO_X+x)*8 + iX + entity.xadd
+					entity.yloc =3D (iBlockUO_Y+y)*8 + iY + entity.yadd
+					entity.zloc =3D iZ + entity.zadd -- in tilecoords from uo
+
 					entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc,entity.y=
loc,entity.zloc*0.1)
 					entity.iBlockX =3D iBlockUO_X+x
 					entity.iBlockY =3D iBlockUO_Y+y

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Fri Jun 29 01:26:11 2007
@@ -576,6 +576,7 @@
 =

 	assert(not item.gfx)
 =

+	-- FILTER: get correction
 	item.xadd =3D FilterPositionX(item.artid) or 0
 	item.yadd =3D FilterPositionY(item.artid) or 0
 	item.zadd =3D FilterPositionZ(item.artid) or 0
@@ -645,7 +646,9 @@
 			item.mbIsMulti =3D true
 			=

 			item.gfx =3D rootgfx
+			-- FILTER: correction
 			for k,v in pairs(item.lMultiChildGfx) do item.gfx:SetOrientation(GetSta=
ticMeshOrientation(v.artid)) end
+
 			self:UpdateDynamicItemPos(item)
 			-- item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
 		else =

@@ -688,7 +691,9 @@
 			end
 		end
 		item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
+		-- FILTER: correction
 		item.gfx:SetOrientation(GetStaticMeshOrientation(item.artid))
+
 		self:UpdateDynamicItemPos(item)
 	end
 	self:UpdateDynamicVisibility(item)

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Fri Jun 29 01:26:11 2007
@@ -301,6 +301,7 @@
 =

 -- ID Mapping
 function MobileArtId2BodyId (mobileartid)
+	-- FILTER: Grannys
 	return FilterGranny(mobileartid) or mobileartid
 end
 =


Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Fri Jun 29 01:26:11 2007
@@ -92,7 +92,7 @@
 	if (meshname =3D=3D nil) then
 		-- try to load the new models
 		if gUseNewModelLoader then
-			-- Apply Filter
+			-- FILER: Meshname
 			meshname =3D FilterMeshname(iTranslatedTileTypeID)
 =

 			if (not meshname) then



From no-reply at zwischenwelt.org  Fri Jun 29 17:08:05 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 29 Jun 2007 15:08:05 -0000
Subject: [Iris-commit] [IRIS] r1251 - in /trunk: cb/iris.ico cb/resource.rc
 data/lua/filter.art.lua data/lua/lib.3d.map.lua
 data/lua/lib.3d.renderer.lua data/lua/lib.static.lua
 data/terrain/materials/terrain.material
Message-ID: <20070629150805.DBA59B1466D@localhost.localdomain>

Author: sience
Date: Fri Jun 29 17:08:04 2007
New Revision: 1251

Log:
-Static Filters moved to filter.art.lua (any mod. to statics should be here)
-terrainshader fallbacks added
-comments added
-ressources for Codeblocks added

Added:
    trunk/cb/iris.ico   (with props)
    trunk/cb/resource.rc
Modified:
    trunk/data/lua/filter.art.lua
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.static.lua
    trunk/data/terrain/materials/terrain.material

Modified: trunk/data/lua/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/filter.art.lua (original)
+++ trunk/data/lua/filter.art.lua Fri Jun 29 17:08:04 2007
@@ -33,21 +33,37 @@
 	end
 	return nil
 end
+function FilterStaticWater(iTranslatedTileTypeID)
+	-- FILTER: static water and map to extra material (one for shaders and on=
e for normal mode (because we dont have coastline models))
+	if (((iTranslatedTileTypeID  >=3D  6038) and (iTranslatedTileTypeID <=3D =
 6066)) or
+		((iTranslatedTileTypeID  >=3D 13422) and (iTranslatedTileTypeID <=3D 134=
45)) or
+		((iTranslatedTileTypeID  >=3D 13460) and (iTranslatedTileTypeID <=3D 134=
83)) or
+		((iTranslatedTileTypeID  >=3D 13496) and (iTranslatedTileTypeID <=3D 135=
14))) then
+		if (gTerrainShader) then
+			-- assosiate to different tile, because we have already a shader materi=
al for all static tiles
+			iTranslatedTileTypeID=3D19999
+		else
+			-- assosiate to one all static water to one tileid (we don't have all s=
tatic water tiles as meshes)
+			iTranslatedTileTypeID=3D6040
+		end
+	end
+	return iTranslatedTileTypeID
+end
 =

---armoire - links (2636 - offen)
---2637 - geschlossen
+--armoire - links
+--offen
 gArtFilter[2636]=3D{filename=3D"mdl_002637.mesh"}
 --armoire - rechts
---2640 - offen
+--offen
 gArtFilter[2640]=3D{filename=3D"mdl_002637.mesh",rotation=3D"x:0,y:0,z:90"=
,xadd=3D0,yadd=3D1,zadd=3D0}
---2641 - geschlossen
+--geschlossen
 gArtFilter[2641]=3D{filename=3D"mdl_002637.mesh",rotation=3D"x:0,y:0,z:90"=
,xadd=3D0,yadd=3D1,zadd=3D0}
 =

---armoire - links (2638 - offen)
---2639 - geschlossen
+--armoire - links
+--geschlossen
 gArtFilter[2638]=3D{filename=3D"mdl_002639.mesh"}
 --armoire - rechts
---2642 - offen
+--offen
 gArtFilter[2642]=3D{filename=3D"mdl_002639.mesh",rotation=3D"x:0,y:0,z:90"=
,xadd=3D0,yadd=3D1,zadd=3D0}
---2643 - geschlossen
+--geschlossen
 gArtFilter[2643]=3D{filename=3D"mdl_002639.mesh",rotation=3D"x:0,y:0,z:90"=
,xadd=3D0,yadd=3D1,zadd=3D0}

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Fri Jun 29 17:08:04 2007
@@ -160,9 +160,9 @@
 					local entity =3D {}
 =

 					-- FILTER: correction
-					entity.xadd =3D (FilterPositionX(iTileTypeID) or 0)
-					entity.yadd =3D (FilterPositionY(iTileTypeID) or 0)
-					entity.zadd =3D (FilterPositionZ(iTileTypeID) or 0)
+					entity.xadd =3D FilterPositionX(iTileTypeID) or 0
+					entity.yadd =3D FilterPositionY(iTileTypeID) or 0
+					entity.zadd =3D FilterPositionZ(iTileTypeID) or 0
 =

 					entity.xloc =3D (iBlockUO_X+x)*8 + iX + entity.xadd
 					entity.yloc =3D (iBlockUO_Y+y)*8 + iY + entity.yadd
@@ -255,6 +255,7 @@
 	self:MobileSetVisible(mobile,self:IsZLayerVisible(mobile.zloc))
 end
 =

+-- TODO: blend out mounts
 function Renderer3D:BlendOutLayersAbovePlayer ()
 	local x,y,z =3D GetPlayerPos()
 	if (not z or not gStaticBlockLoader) then return end

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Fri Jun 29 17:08:04 2007
@@ -642,15 +642,13 @@
 					end
 				end
 			end
-			=

 			item.mbIsMulti =3D true
-			=

 			item.gfx =3D rootgfx
+
 			-- FILTER: correction
 			for k,v in pairs(item.lMultiChildGfx) do item.gfx:SetOrientation(GetSta=
ticMeshOrientation(v.artid)) end
 =

 			self:UpdateDynamicItemPos(item)
-			-- item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
 		else =

 			printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed loadi=
ng mesh for dynamic (multi): artid=3D%i z_typename=3D%s\n",item.artid or -1=
,item.z_typename or ""))
 		end
@@ -691,6 +689,7 @@
 			end
 		end
 		item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
+
 		-- FILTER: correction
 		item.gfx:SetOrientation(GetStaticMeshOrientation(item.artid))
 =


Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Fri Jun 29 17:08:04 2007
@@ -69,30 +69,19 @@
 function GetStaticMeshName (iTileTypeID,iHue)
 	--1st: Seasonal Translation
 	local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeasonS=
etting)
+
+	-- FILTER: static water
+	iTranslatedTileTypeID =3D FilterStaticWater(iTranslatedTileTypeID)
 	=

 	-- hue default value is 0
 	iHue =3D iHue or 0
-
-	-- FILTER: static water and map to extra material (one for shaders and on=
e for normal mode (because we dont have coastline models))
-	if (((iTranslatedTileTypeID  >=3D  6038) and (iTranslatedTileTypeID <=3D =
 6066)) or
-		((iTranslatedTileTypeID  >=3D 13422) and (iTranslatedTileTypeID <=3D 134=
45)) or
-		((iTranslatedTileTypeID  >=3D 13460) and (iTranslatedTileTypeID <=3D 134=
83)) or
-		((iTranslatedTileTypeID  >=3D 13496) and (iTranslatedTileTypeID <=3D 135=
14))) then
-		--return nil
-		if (gTerrainShader) then
-			-- assosiate to different tile, because we have already a shader materi=
al for all static tiles
-			iTranslatedTileTypeID=3D19999
-		else
-			-- assosiate to one all static water to one tileid (we don't have all s=
tatic water tiles as meshes)
-			iTranslatedTileTypeID=3D6040
-		end
-	end
 =

 	local meshname =3D gLegacyModelCache[iTileTypeID.."_"..iHue]
 	if (meshname =3D=3D nil) then
 		-- try to load the new models
 		if gUseNewModelLoader then
-			-- FILER: Meshname
+
+			-- FILTER: Meshname
 			meshname =3D FilterMeshname(iTranslatedTileTypeID)
 =

 			if (not meshname) then
@@ -155,11 +144,6 @@
 =

 function GetStaticMeshOrientation (iTileTypeID)
 	local w,x,y,z =3D FilterOrientation(iTileTypeID)
-
-	-- custom Ogre Mesh Test
-	--if (iTileTypeID =3D=3D hex2num("0x0cd3")) then
-	--	w,x,y,z =3D Quaternion.fromAngleAxis (gfDeg2Rad * 90.0,1,0,0)  -- ang,=
x,y,z
-	--end
 	if (not w or not x or not y or not z) then
 		w,x,y,z =3D Quaternion.identity()
 	end

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Fri Jun 29 17:08:04 2007
@@ -31,6 +31,25 @@
 			}
 		}
 	}
+	// Fallback technique
+	technique
+	{
+		pass
+		{
+			cull_hardware clockwise
+			cull_software none
+			depth_check on
+			//polygon_mode wireframe
+
+			texture_unit
+			{
+				texture multitiletex_numbers.png
+				tex_address_mode wrap
+                filtering anisotropic =

+                max_anisotropy 8 =

+			}
+		}
+	}
 }
 =

 material terrain_transition
@@ -93,6 +112,24 @@
 			}
 		}
 	}
+	// Fallback technique
+	technique
+	{
+		pass
+		{
+			cull_hardware clockwise
+			cull_software none
+			depth_check on
+
+			texture_unit
+			{
+				texture multitiletex_numbers.png
+				tex_address_mode wrap
+                filtering anisotropic =

+                max_anisotropy 8 =

+			}
+		}
+	}
 }
 =

 //###########################################
@@ -161,15 +198,6 @@
 	{
 		pass base
 		{
-			vertex_program_ref terrainBase_vs
-			{
-				param_named materialDiffuse float3 1.0 1.0 1.0
-				param_named materialSpecular float4 0.10 0.10 0 35.0
-				param_named worldScale float 15
-			}
-			fragment_program_ref terrainBase_ps
-			{
-			}
 			texture_unit
 			{
 				texture Sand_large_pattern_512.dds



From no-reply at zwischenwelt.org  Sat Jun 30 02:52:25 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 30 Jun 2007 00:52:25 -0000
Subject: [Iris-commit] [IRIS] r1252 - in /trunk/data: lua/lib.3d.map.lua
 lua/lib.devtool.lua lua/lib.static.lua lua/lib.walking2.lua
 skippedfallbacks.lua terrain/materials/terrain.material
Message-ID: <20070630005226.A8E24B1466D@localhost.localdomain>

Author: sience
Date: Sat Jun 30 02:52:20 2007
New Revision: 1252

Log:
-PartialHue fix for Static Models (Textures)
-some global variables defined as locals
-skippedfallbacks added
-terrainshader modified

Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.devtool.lua
    trunk/data/lua/lib.static.lua
    trunk/data/lua/lib.walking2.lua
    trunk/data/skippedfallbacks.lua
    trunk/data/terrain/materials/terrain.material

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Sat Jun 30 02:52:20 2007
@@ -278,6 +278,8 @@
 			local iStaticCount =3D gStaticBlockLoader:Count() -- operates on the bl=
ock that was last loaded using :Load()
 			local iPX =3D x - 8 * math.floor(x/8)
 			local iPY =3D y - 8 * math.floor(y/8)
+
+			local iTileTypeID,iX,iY,iZ,iHue
 			for i =3D 0,iStaticCount-1 do
 				iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- opera=
tes on the block that was last loaded using :Load()
 				if (iX =3D=3D iPX and iY =3D=3D iPY and iZ > playerheadpos) then playe=
rIsInside =3D true end

Modified: trunk/data/lua/lib.devtool.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.devtool.lua (original)
+++ trunk/data/lua/lib.devtool.lua Sat Jun 30 02:52:20 2007
@@ -188,12 +188,14 @@
 	local rx =3D math.floor(math.random()*w)
 	local ry =3D math.floor(math.random()*h)
 	=

+	local iTileTypeID,iX,iY,iZ,iHue
 	for x =3D 0,w do
 		for y =3D 0,h do
 			local bx =3D math.mod(x+rx,w)
 			local by =3D math.mod(y+ry,h)
 			gStaticBlockLoader:Load(bx,by) -- params =3D mapblock-pos
 			local iStaticCount =3D gStaticBlockLoader:Count() -- operates on the bl=
ock that was last loaded using :Load()
+
 			for i =3D 0,iStaticCount-1 do
 				iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- opera=
tes on the block that was last loaded using :Load()
 				if (iTileTypeID =3D=3D iSearchTileTypeID) then
@@ -227,13 +229,14 @@
 		local yminblock =3D math.floor( ( y - radius ) / 8 )
 		local ymaxblock =3D math.ceil( ( y + radius ) / 8 )
 		=

+		local iTileTypeID,iX,iY,iZ,iHue
 		for by=3Dyminblock, ymaxblock do
 			for bx=3Dxminblock, xmaxblock do
 				gStaticBlockLoader:Load( bx, by )
 				local iStaticCount =3D gStaticBlockLoader:Count()
-				=

+
 				for i =3D 0,iStaticCount-1 do
-					iTileTypeID, iX, iY, iZ, iHue =3D gStaticBlockLoader:GetStatic( i )
+					iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic( i )
 					local d =3D dist2(x,y,bx*8+iX,by*8+iY)
 					if (d <=3D radius) then
 						local entity =3D {}
@@ -245,7 +248,6 @@
 						entity.id =3D i
 						entity.iTileTypeID =3D iTileTypeID
 						entity.iHue =3D iHue
-					=

 						table.insert( res, entity )
 					end =

 				end

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Sat Jun 30 02:52:20 2007
@@ -105,8 +105,14 @@
 						gManualArtMaterialLoader:CreateMatchingIfUnavailable(v)
 					end
 				end
-				-- Hue this Model
-				if (gHueLoader) then HueMesh(meshname,gHueLoader,iHue) end
+				-- Hue this Model | TODO : Partitial Hue
+				if (gHueLoader) then
+					if( BitwiseAND(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTi=
leDataFlag_Partial_Hue) ~=3D 0 ) then
+						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
+					else
+						HueMesh(meshname,gHueLoader,iHue)
+					end
+				end
 			end
 		end
 		=


Modified: trunk/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.walking2.lua (original)
+++ trunk/data/lua/lib.walking2.lua Sat Jun 30 02:52:20 2007
@@ -146,8 +146,10 @@
 		iStaticCount =3D 0
 	end
 	-- TODO : maybe include Seasonal translation also here!?
+	=

+	local iTileTypeID,iX,iY,iZ,iHue
 	for i =3D 0,iStaticCount-1 do
-		local iTileTypeID,iX,iY,iZ =3D gStaticBlockLoader:GetStatic(i)
+		iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i)
 		if (iX =3D=3D tx and iY =3D=3D ty) then
 			printwalkdebug("----new Static ID=3D" .. iTileTypeID)
 			GetWalkingBlockFlagsHelper(iZ,iTileTypeID,flaglist)

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Sat Jun 30 02:52:20 2007
@@ -332,3 +332,9 @@
 RegisterSkippedArtBillboardFallBack(3509) -- 0x0db5 name=3Dbed
 RegisterSkippedArtBillboardFallBack(3505) -- 0x0db1 name=3Dbed
 RegisterSkippedArtBillboardFallBack(3504) -- 0x0db0 name=3Dbed
+RegisterSkippedArtBillboardFallBack(6629) -- 0x19e5 name=3Dfountain
+RegisterSkippedArtBillboardFallBack(6610) -- 0x19d2 name=3Dfountain
+RegisterSkippedArtBillboardFallBack(6633) -- 0x19e9 name=3Dfountain
+RegisterSkippedArtBillboardFallBack(6635) -- 0x19eb name=3Dfountain
+RegisterSkippedArtBillboardFallBack(6631) -- 0x19e7 name=3Dfountain
+RegisterSkippedArtBillboardFallBack(3105) -- 0x0c21 name=3Dbroken dresser

Modified: trunk/data/terrain/materials/terrain.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/terrain/materials/terrain.material (original)
+++ trunk/data/terrain/materials/terrain.material Sat Jun 30 02:52:20 2007
@@ -23,8 +23,8 @@
 			{
 			}
 			texture_unit
-			{ =

-				texture multitiletex_numbers.png
+			{
+				texture multitiletex_numbers.png 2d
 				tex_address_mode wrap
                 filtering anisotropic =

                 max_anisotropy 8 =

@@ -71,10 +71,11 @@
 			}
 			fragment_program_ref terrainBase_ps
 			{
+				param_named texCoordDiffuse int 0
 			}
 			texture_unit
 			{ =

-				texture multitiletex_numbers.png
+				texture multitiletex_numbers.png 2d
 				tex_address_mode wrap
                 filtering anisotropic =

                 max_anisotropy 8 =

@@ -97,17 +98,19 @@
 			}
 			fragment_program_ref terrainBlend_ps
 			{
-			}
-			texture_unit
-			{
-				texture multitiletex_numbers.png
+				param_named texCoordDiffuse int 0
+				param_named texCoordBlend int 1
+			}
+			texture_unit
+			{
+				texture multitiletex_numbers.png 2d
 				tex_address_mode wrap
-                filtering anisotropic =

-                max_anisotropy 8 =

+				filtering anisotropic =

+				max_anisotropy 8 =

 			}
 			texture_unit blend_mask
 			{
-				texture tex_blend_n_side.png
+				texture tex_blend_n_side.png 2d
 				tex_address_mode clamp
 			}
 		}



From no-reply at zwischenwelt.org  Sat Jun 30 15:04:43 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 30 Jun 2007 13:04:43 -0000
Subject: [Iris-commit] [IRIS] r1253 - in /trunk/data: ./ lua/
 particles/materials/ particles/particles/ particles/textures/
Message-ID: <20070630130444.0785CB1466D@localhost.localdomain>

Author: sience
Date: Sat Jun 30 15:04:41 2007
New Revision: 1253

Log:
-soundeffect temp. disabled (forces crash/exceptions)
-7 new Spell Particle Effects added
-some obsolete particles deleted

Added:
    trunk/data/particles/particles/ConsecrateWeapon.particle
    trunk/data/particles/particles/Fields.particle
    trunk/data/particles/particles/MindRot.particle
    trunk/data/particles/particles/PainSpike.particle
    trunk/data/particles/particles/PoisonStrike.particle
    trunk/data/particles/particles/Strangle.particle
    trunk/data/particles/particles/Wither.particle
    trunk/data/particles/textures/bigflame.png   (with props)
    trunk/data/particles/textures/flaretrail.png   (with props)
    trunk/data/particles/textures/skull.png   (with props)
    trunk/data/particles/textures/swords.png   (with props)
    trunk/data/particles/textures/twirl.png   (with props)
Removed:
    trunk/data/particles/materials/aureola.material
    trunk/data/particles/particles/aureola.particle
    trunk/data/particles/particles/moongate.particle
    trunk/data/particles/particles/walls.particle
Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/particles/materials/particles.material
    trunk/data/particles/particles/explosions.particle

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sat Jun 30 15:04:41 2007
@@ -74,7 +74,7 @@
 -- Soundeffects & Music
 -- gUseSoundSystem =3D "openal"
 gUseSoundSystem =3D "fmod"
-gUseSoundeffects =3D true
+gUseSoundeffects =3D false
 gUseMusic =3D true
 =

 gCurrentRenderer =3D Renderer3D	-- Renderer2D

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Sat Jun 30 15:04:41 2007
@@ -105,25 +105,45 @@
 --###############################
 =

 StandardEffect =3D 0
-Fireball	=3D hex2num("0x36d4")
-MagicArrow	=3D hex2num("0x36e4")
-PField		=3D hex2num("0x376a")
-PoisonWall	=3D hex2num("0x3914")
-Teleport	=3D hex2num("0x3728")
-Healing		=3D hex2num("0x376A")
-FlameStrike =3D hex2num("0x3709")
-Explosion	=3D hex2num("0x36bd")
+Fireball			=3D hex2num("0x36d4")
+MagicArrow			=3D hex2num("0x36e4")
+PoisonField			=3D hex2num("0x3914")
+Teleport			=3D hex2num("0x3728")
+Healing				=3D hex2num("0x376A")
+FlameStrike			=3D hex2num("0x3709")
+Explosion			=3D hex2num("0x36bd")
+ConsecrateWeapon1	=3D hex2num("0x3779")
+MindRot				=3D hex2num("0x373A")
+PainSpike			=3D hex2num("0x37C4")	-- needs rework
+PoisonStrike		=3D hex2num("0x36B0")
+StranglePart1		=3D hex2num("0x36CB")
+StranglePart2		=3D hex2num("0x374A")
+Wither				=3D hex2num("0x37CC")
+
+ParalyzeField		=3D hex2num("0x0001")	-- ??
+FireField			=3D hex2num("0x0002") -- ???
+ConsecrateWeapon2=3D 9501	--???
 --Fizzels		=3D hex2num("0x3735")
+
 gParticleEffects =3D {}
 gParticleEffects[StandardEffect]=3D { etype=3D0, name=3D"bluering", relx=
=3D0.5, rely=3D0.5, relz=3D0.1, scalex=3D1, scaley=3D1, scalez=3D1 }
 gParticleEffects[Fireball]		=3D { etype=3D0, name=3D"Large Fireball", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
 gParticleEffects[MagicArrow]	=3D { etype=3D2, name=3D"Magic Arrow", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
-gParticleEffects[PField]		=3D { etype=3D2, name=3D"ParalizeWall", relx=3D0=
.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
-gParticleEffects[PoisonWall]	=3D { etype=3D2, name=3D"PoisonWall", relx=3D=
0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[ParalyzeField]	=3D { etype=3D2, name=3D"ParalyzeField", r=
elx=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[PoisonField]	=3D { etype=3D2, name=3D"PoisonField", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[FireField]		=3D { etype=3D2, name=3D"FireField", relx=3D0=
.5, rely=3D0.5, relz=3D0.5, scalex=3D0.4, scaley=3D0.4, scalez=3D0.1}
 gParticleEffects[Teleport]		=3D { etype=3D2, name=3D"Teleport", relx=3D0.5=
, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
 gParticleEffects[Healing]		=3D { etype=3D3, name=3D"Healing", relx=3D0.5, =
rely=3D0.5, relz=3D0.1, scalex=3D1, scaley=3D1, scalez=3D1}
 gParticleEffects[FlameStrike]	=3D { etype=3D3, name=3D"Magic Arrow", relx=
=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
-gParticleEffects[Explosion]		=3D { etype=3D0, name=3D"Explosion (Iris)", r=
elx=3D0.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[Explosion]		=3D { etype=3D0, name=3D"Explosion", relx=3D0=
.5, rely=3D0.5, relz=3D1, scalex=3D0.2, scaley=3D0.2, scalez=3D0.2}
+gParticleEffects[ConsecrateWeapon1]=3D { etype=3D3, name=3D"ConsecrateWeap=
on1", relx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D0.2, scaley=3D0.2, scalez=
=3D0.1}
+gParticleEffects[ConsecrateWeapon2]=3D { etype=3D0, name=3D"ConsecrateWeap=
on2", relx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D0.2, scaley=3D0.2, scalez=
=3D0.1}
+gParticleEffects[MindRot]		=3D { etype=3D3, name=3D"MindRot", relx=3D0.5, =
rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[PainSpike]		=3D { etype=3D3, name=3D"PainSpike", relx=3D0=
.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[PoisonStrike]	=3D { etype=3D3, name=3D"PoisonStrike", rel=
x=3D0.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[StranglePart1]	=3D { etype=3D3, name=3D"StranglePart1", r=
elx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[StranglePart2]	=3D { etype=3D3, name=3D"StranglePart2", r=
elx=3D0.5, rely=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
+gParticleEffects[Wither]		=3D { etype=3D3, name=3D"Wither", relx=3D0.5, re=
ly=3D0.5, relz=3D3, scalex=3D1, scaley=3D1, scalez=3D1}
 =

 -- TODO: manage particle effects, esp. huedfx, decide between effecttypes
 function Renderer3D:AddEffect( effect )

Modified: trunk/data/particles/materials/particles.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/particles/materials/particles.material (original)
+++ trunk/data/particles/materials/particles.material Sat Jun 30 15:04:41 2=
007
@@ -113,4 +113,99 @@
 	}
 }
 =

-
+material Particles/Skull
+{
+	technique
+	{
+		pass
+		{
+			lighting off
+			scene_blend alpha_blend
+			depth_write off
+			cull_hardware clockwise
+			cull_software back
+
+			texture_unit
+			{
+				texture skull.png
+				tex_address_mode clamp
+			}
+		}
+	}
+}
+
+material Particles/Swords
+{
+	technique
+	{
+		pass
+		{
+			lighting off
+			scene_blend alpha_blend
+			depth_write off
+			cull_hardware clockwise
+			cull_software back
+
+			texture_unit
+			{
+				texture swords.png
+				tex_address_mode clamp
+			}
+		}
+	}
+}
+
+material Particles/Twirl
+{
+	technique
+	{
+		pass
+		{
+			lighting off
+			depth_write off
+			scene_blend add
+
+			texture_unit
+			{
+				tex_address_mode clamp
+				texture twirl.png
+			}
+		}
+	}
+}
+
+material Particles/bigFlame
+{
+	technique
+	{
+		pass
+		{
+			lighting off
+			depth_write off
+			scene_blend add
+
+			texture_unit
+			{
+				texture bigflame.png
+			}
+		}
+	}
+}
+
+material Particles/Flare
+{
+	technique
+	{
+		pass
+		{
+			lighting off
+			scene_blend add
+			depth_write off
+
+			texture_unit
+			{
+				texture flaretrail.png
+			}
+		}
+	}
+}

Modified: trunk/data/particles/particles/explosions.particle
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/particles/particles/explosions.particle (original)
+++ trunk/data/particles/particles/explosions.particle Sat Jun 30 15:04:41 =
2007
@@ -1,3 +1,4 @@
+
 Explosion
 {
 	quota	10
@@ -20,10 +21,10 @@
 	emitter Box
 	{
 		angle	47
-		colour	1 0.501961 0.25098 1
-		colour_range_start	1 0.501961 0.25098 1
+		colour	1 0.54902 0.333333 1
+		colour_range_start	1 0.54902 0.333333 1
 		colour_range_end	1 0.501961 0 1
-		direction	1 0 -0
+		direction	0 -1 0
 		emission_rate	10
 		position	0 0 0
 		velocity	0
@@ -38,9 +39,9 @@
 		repeat_delay	0
 		repeat_delay_min	0
 		repeat_delay_max	0
-		width	2
-		height	2
-		depth	2
+		width	1
+		height	1
+		depth	1
 	}
 =

 	affector Scaler
@@ -49,59 +50,3 @@
 	}
 }
 =

-
-Explosion (Iris)
-{
-	quota	10
-	material	Particles/explosion
-	particle_width	1
-	particle_height	1
-	cull_each	false
-	renderer	billboard
-	sorted	false
-	local_space	false
-	iteration_interval	0
-	nonvisible_update_timeout	0
-	billboard_type	point
-	billboard_origin	center
-	billboard_rotation_type	vertex
-	common_up_vector	0 1 0
-	point_rendering	false
-	accurate_facing	false
-
-	emitter Point
-	{
-		angle	0
-		colour	1 0.501961 0.25098 1
-		colour_range_start	1 0.501961 0.25098 1
-		colour_range_end	1 0.501961 0 1
-		direction	1 0 0
-		emission_rate	2
-		position	0 0 0
-		velocity	1
-		velocity_min	1
-		velocity_max	1
-		time_to_live	3
-		time_to_live_min	3
-		time_to_live_max	3
-		duration	0.3
-		duration_min	0.3
-		duration_max	0.3
-		repeat_delay	0
-		repeat_delay_min	0
-		repeat_delay_max	0
-	}
-
-	affector Scaler
-	{
-		rate	50
-	}
-
-	affector Rotator
-	{
-		rotation_speed_range_start	30
-		rotation_speed_range_end	20
-		rotation_range_start	360
-		rotation_range_end	0
-	}
-}



From no-reply at zwischenwelt.org  Sat Jun 30 16:56:43 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 30 Jun 2007 14:56:43 -0000
Subject: [Iris-commit] [IRIS] r1254 - in /trunk/data: lua/lib.debugmenu.lua
 particles/textures/aureola.png
Message-ID: <20070630145643.8E5FCB1466D@localhost.localdomain>

Author: sience
Date: Sat Jun 30 16:56:40 2007
New Revision: 1254

Log:
-staticdebug bugfixed
-obsolete particle texture removed

Removed:
    trunk/data/particles/textures/aureola.png
Modified:
    trunk/data/lua/lib.debugmenu.lua

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Sat Jun 30 16:56:40 2007
@@ -176,7 +176,10 @@
 		local meshname =3D GetStaticMeshName(iTileType,iHue)
 		local tricount =3D meshname and CountMeshTriangles(meshname) or 0
 		AddFadeLines(sprintf("static %04x(=3D%d) hue=3D%d tricount=3D%d %s",iTil=
eType,iTileType,iHue,tricount,GetStaticTileTypeName(iTileType) or ""))
-		if (meshname) then gDebugRootGfx:SetMesh(meshname) end
+		if (meshname) then
+			gDebugRootGfx:SetMesh(meshname)
+			gDebugRootGfx:SetOrientation(GetStaticMeshOrientation(iTileType))
+		end
 		Renderer3D:CreateArtBillBoard(gDebugRootGfx2,iTileType+16384,iHue)
 	end
 	=




