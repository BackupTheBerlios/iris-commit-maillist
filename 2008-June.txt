From no-reply at zwischenwelt.org  Sun Jun  1 16:06:05 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 01 Jun 2008 14:06:05 -0000
Subject: [Iris-commit] [IRIS] r2216 - in /trunk: data/config.lua.dist
	lua/lib.tilefreewalk.lua
Message-ID: <20080601140606.0821F1C180F2@zwischenwelt.org>

Author: hagish
Date: Sun Jun  1 16:06:00 2008
New Revision: 2216

Log:
experimental tilefree move optimization for faster diagonal movement (avoid=
s stair effect)

Modified:
    trunk/data/config.lua.dist
    trunk/lua/lib.tilefreewalk.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sun Jun  1 16:06:00 2008
@@ -478,3 +478,6 @@
 gUseWalk3 =3D false
 =

 gMarkFile =3D "../data/uoam/mark.uoam"
+
+-- experimental code for faster diagonal movement (tries to avoid stair ef=
fect)
+gTileFreeWalkDiagonalOptimization =3D false

Modified: trunk/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.tilefreewalk.lua (original)
+++ trunk/lua/lib.tilefreewalk.lua Sun Jun  1 16:06:00 2008
@@ -6,6 +6,7 @@
 gTileFreeWalk =3D {}
 =

 kFreeWalkMouseSlowArea =3D 70
+kFreeWalkOptimizeTimeout =3D 100
  =

 kTileFreeTestMobile =3D {artid=3D400,hue=3D33780, content=3D{
 		{artid=3D3932,animid=3D631},{artid=3D7028},
@@ -268,6 +269,10 @@
 			end
 		end
 =

+		if gTileFreeWalkDiagonalOptimization then =

+			self:PathPoint_OptimizeForDiagonalMovement()
+		end
+		=

 		self:SetPos_ClientSide(x,y,z)
 		self:UpdateClientPosMarker()
 	end
@@ -504,6 +509,14 @@
 function WalkLog2 (...) if (gKeyPressed[key_f]) then print("walklog2",unpa=
ck(arg)) end end
 =

 function gTileFreeWalk:Impl_WalkRequestStep (bRunRequested)
+	if gTileFreeWalkDiagonalOptimization then
+		local x,y,z,t =3D self:PathPoint_GetNext()
+		if =

+			self:PathPoint_Count() <=3D 3 and =

+			t and Client_GetTicks() - t <  kFreeWalkOptimizeTimeout
+		then return end
+	end
+	=

 	if (self.bSkipWalkStep) then return end -- skip this step if movement has=
 finished
 	=

 	-- self confirm here if there is no server, debug/offline mode only
@@ -680,18 +693,23 @@
 =

 function gTileFreeWalk:PathPoint_Count		() 			return table.getn(self.pathp=
oints) end
 function gTileFreeWalk:PathPoint_GetNext	() return self:PathPoint_GetNth(1=
) end
-function gTileFreeWalk:PathPoint_GetNth		(n) -- n=3D1 for first =3D next
+
+-- n=3D1 for first =3D next
+function gTileFreeWalk:PathPoint_GetNth		(n) =

 	if (not self.pathpoints[n]) then return end
 	return unpack(self.pathpoints[n])
 end
 function gTileFreeWalk:PathPoint_HasNext	() return self:PathPoint_Has(1) e=
nd
 function gTileFreeWalk:PathPoint_Has		(n) return table.getn(self.pathpoint=
s) >=3D n end
+function gTileFreeWalk:PathPoint_RemoveNth	(n)
+	if (self:PathPoint_Has(n)) then =

+		local x,y,z =3D self:PathPoint_GetNth(n)
+		if (gShowTileFreeDebug) then self:DelDebugMarker("path"..x..","..y..",".=
.z) end
+		table.remove(self.pathpoints,n) =

+	end =

+end =

 function gTileFreeWalk:PathPoint_Pop		() =

-	if (self:PathPoint_HasNext()) then =

-		local x,y,z =3D self:PathPoint_GetNth(1)
-		if (gShowTileFreeDebug) then self:DelDebugMarker("path"..x..","..y..",".=
.z) end
-		table.remove(self.pathpoints,1) =

-	end =

+	self:PathPoint_RemoveNth(1)
 end
 function gTileFreeWalk:PathPoint_Push		(x,y,z)
 	local c =3D self:PathPoint_Count()
@@ -701,8 +719,41 @@
 	end
 	local lx,ly,lz =3D self:GetPos_LastRequested()
 	if (abs(lx-x) <=3D 1 and abs(ly-y) <=3D 1) then return end
-	table.insert(self.pathpoints,{x,y,z})
+	table.insert(self.pathpoints,{x,y,z,Client_GetTicks()})
 	if (gShowTileFreeDebug) then self:SetDebugMarker("path"..x..","..y..","..=
z, x,y,z, 0,0,0, 0.5,0.5,0.5) end
+end
+
+-- checks if p1 p2 p3 build a stair
+function gTileFreeWalk:PathPoint_IsStairPoint	(x1,y1,x2,y2,x3,y3)
+	return
+		(abs(x1-x3) =3D=3D 1 and abs(y1-y3) =3D=3D 1) and
+		(abs(x1-x2) =3D=3D 1 or abs(y1-y2) =3D=3D 1) and
+		(abs(x3-x2) =3D=3D 1 or abs(y3-y2) =3D=3D 1)
+end
+
+-- converts all edges to diagonals (stair effect)
+function gTileFreeWalk:PathPoint_OptimizeForDiagonalMovement	()
+	local l =3D self:PathPoint_Count()
+	if l >=3D 3 then
+		-- check for optimizations
+		local k =3D 1
+		repeat
+			local x1,y1,z1 =3D self:PathPoint_GetNth(k)
+			local x2,y2,z2 =3D self:PathPoint_GetNth(k+1)
+			local x3,y3,z3 =3D self:PathPoint_GetNth(k+2)
+			=

+			-- only try to remove points on the same z level
+			if z1 =3D=3D z2 and z2 =3D=3D z3 then
+				if self:PathPoint_IsStairPoint(x1,y1,x2,y2,x3,y3) then
+					-- print("##### brotkrummen optimization -> remove",x1,y1,":",x2,y2,"=
:",x3,y3)
+					self:PathPoint_RemoveNth(k+1)
+					l =3D l - 1
+				end
+			end
+			=

+			k =3D k + 1
+		until (l - k) < 2	-- no triple remaining
+	end
 end
 =

 -- ##### ##### ##### ##### ##### position and coordinate system conversions



From no-reply at zwischenwelt.org  Tue Jun  3 00:28:11 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 02 Jun 2008 22:28:11 -0000
Subject: [Iris-commit] [IRIS] r2217 - in /trunk: data/skippedfallbacks.lua
 lua/gui/gui.gumpparser.lua lua/gui/gui.paperdoll.lua lua/gui/gui.quit.lua
 lua/lib.cliloc.lua lua/lib.compass.lua lua/net/net.other.lua
Message-ID: <20080602222812.70F2C1C180E5@zwischenwelt.org>

Author: sience
Date: Tue Jun  3 00:28:07 2008
New Revision: 2217

Log:
-made some cleanups
-quit gump bugfixed
-skippedfallback added

Modified:
    trunk/data/skippedfallbacks.lua
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/gui/gui.quit.lua
    trunk/lua/lib.cliloc.lua
    trunk/lua/lib.compass.lua
    trunk/lua/net/net.other.lua

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Tue Jun  3 00:28:07 2008
@@ -480,3 +480,4 @@
 RegisterSkippedArtBillboardFallBack(15955) -- 0x3e53 name=3Dtiller man
 RegisterSkippedArtBillboardFallBack(15973) -- 0x3e65 name=3Dhatch
 RegisterSkippedArtBillboardFallBack(16057) -- 0x3eb9 name=3Dhatch
+RegisterSkippedArtBillboardFallBack(2545) -- 0x09f1 name=3Dcut%s% of raw r=
ibs

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Tue Jun  3 00:28:07 2008
@@ -29,7 +29,7 @@
 	msg.href =3D ""
 =

 	if (not(textstring)) then return msg end
-
+	=

 	local bToken =3D {}
 =

 	--extract tokens
@@ -106,7 +106,7 @@
 			skipnexttoken =3D skipnexttoken - 1
 		end
 	end
-
+	=

 	printdebug("gump","HtmlParser return message: "..msg.text)
 	return msg
 end
@@ -484,7 +484,7 @@
 =

 				local widget =3D MakeGumpCheckBox(curparent, check_state > 0, check_no=
rm, check_down, check_x, check_y)
 				=

-				--[[
+--[[
 				if (check_state=3D=3D0) then
 					widget =3D MakeBorderGumpPart(curparent, check_norm, check_x, check_y)
 				else
@@ -508,7 +508,7 @@
 											printdebug("gump","Checkbox changed : id=3D"..widget.returnmsg.=
." state=3D"..widget.state)
 										end
 									  end
-									  ]]
+]]--
 				if (Clientsidemode) then dialog.controls[ bToken[8] ] =3D widget end
 				table.insert(dialog.uo_check,widget)
 =


Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Tue Jun  3 00:28:07 2008
@@ -203,8 +203,7 @@
 	end
 =

 	-- Fallback to female
-	-- TODO : SiENcE : local gumpid =3D animid+50000
-	local gumpid =3D animid+base_id
+	local gumpid =3D animid + base_id
 	if (GetGumpMat(gumpid) =3D=3D "" and base_id =3D=3D kGumpBaseId_Female) t=
hen gumpid =3D animid+kGumpBaseId_Male end -- fallback to male
 	if (item.layer =3D=3D kLayer_Backpack) then gumpid =3D animid+kGumpBaseId=
_Male end -- no female backpack ;)
 =

@@ -243,14 +242,6 @@
 		gCurrentRenderer.gMousePickTippOverride =3D false
 		Client_SetBottomLine("")
 	end
-
-
-	-- SiENcE: not needed as Ticket -> http://zwischenwelt.org/trac/iris/chan=
geset/2062
-	-- request tooltip if there is no
---	local tt =3D AosToolTip_GetText(widget.item.serial)
---	if not tt or tt =3D=3D "" then
---		Send_ToolTipRequest(widget.item.serial)
---	end
 =

 	if (gTooltipSupport) then
 		widget.tooltip_offx =3D kUOToolTippOffX

Modified: trunk/lua/gui/gui.quit.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.quit.lua (original)
+++ trunk/lua/gui/gui.quit.lua Tue Jun  3 00:28:07 2008
@@ -17,22 +17,19 @@
 }
 quitGump.functions =3D {
  -- quitcanel
- [0]	=3D function (widget,mousebutton) if (mousebutton =3D=3D 1) then widg=
et.dialog:Close() gQuitDialog =3D nil end end,
+ [0]	=3D function (widget,mousebutton) if (mousebutton =3D=3D 1) then widg=
et.dialog:Close() gQuitDialog =3D nil  end end,
  -- quitok
  [1]	=3D function (widget,mousebutton) if (mousebutton =3D=3D 1) then Term=
inate() end end,
 }
 =

 gQuitDialog =3D nil
 function OpenQuit()
-	if gQuitDialog then
-		gQuitDialog:Close()
-		gQuitDialog =3D nil
-	else
+	if not(gQuitDialog) then
 		local dialog =3D GumpParser( quitGump, true )
 =

 		-- overwrite the onMouseDown function from gumpparser
 		dialog.onMouseDown =3D function (widget,mousebutton)
-			if (mousebutton =3D=3D 2) then widget.dialog:Close() end
+			if (mousebutton =3D=3D 2) then widget.dialog:Close() gQuitDialog =3D ni=
l end
 			if (mousebutton =3D=3D 1) then widget.dialog:BringToFront() gui.StartMo=
veDialog(widget.dialog.rootwidget) end
 		end
 		=


Modified: trunk/lua/lib.cliloc.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.cliloc.lua (original)
+++ trunk/lua/lib.cliloc.lua Tue Jun  3 00:28:07 2008
@@ -39,7 +39,7 @@
 		index =3D tonumber(index)
 		if (self.override) then res =3D self.override:Get(index) end
 		if (not res) then res =3D self.data[index] end
-		if (not res) then print("WARNING ! cliloc message "..index.." not found"=
) end
+		--if (not res) then print("WARNING ! cliloc message "..index.." not foun=
d") end
 		return res
 	end
 	=


Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Tue Jun  3 00:28:07 2008
@@ -27,7 +27,7 @@
 -baker: 1514 611 3 =

 +ruins: 1586 1004 3 abandoned building
 +landmark: 478 1531 3 abandoned mage tower
-]]
+]]--
 	if file_exists(file) then
 		for line in io.lines(file) do
 			-- for w in string.gfind(jline, "%S+") do

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Tue Jun  3 00:28:07 2008
@@ -249,7 +249,7 @@
 			BYTE[4] serial
 			BYTE[1] unknown // always 0 ?
 			BYTE[1] lockBits // Bits: XXSS DDII (s=3Dstrength, d=3Ddex, i=3Dint), 0=
 =3D up, 1 =3D down, 2 =3D locked
-		]]
+		]]--
 		if (party_cmd =3D=3D hex2num("0x02")) then
 			local serial =3D input:PopNetUint32()
 			local value  =3D input:PopNetUint8()



From no-reply at zwischenwelt.org  Wed Jun  4 01:38:43 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 03 Jun 2008 23:38:43 -0000
Subject: [Iris-commit] [IRIS] r2218 - in /trunk: bin/iris2.exe
 data/skippedfallbacks.lua lua/lib.mainmenu.lua
Message-ID: <20080603233844.1615F1C180AE@zwischenwelt.org>

Author: sience
Date: Wed Jun  4 01:38:42 2008
New Revision: 2218

Log:
-back button to serverlogin added
-new win32 binary
-skippedfallback added

Modified:
    trunk/bin/iris2.exe
    trunk/data/skippedfallbacks.lua
    trunk/lua/lib.mainmenu.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Wed Jun  4 01:38:42 2008
@@ -481,3 +481,4 @@
 RegisterSkippedArtBillboardFallBack(15973) -- 0x3e65 name=3Dhatch
 RegisterSkippedArtBillboardFallBack(16057) -- 0x3eb9 name=3Dhatch
 RegisterSkippedArtBillboardFallBack(2545) -- 0x09f1 name=3Dcut%s% of raw r=
ibs
+RegisterSkippedArtBillboardFallBack(4196) -- 0x1064 name=3Dupright loom

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Wed Jun  4 01:38:42 2008
@@ -142,6 +142,10 @@
 			MainMenuConnectToShard(shard,widget.shardname,nameinput,passinput)
 			widget.dialog:Destroy()
 		end
+		local MyGoBack =3D function(widget)
+			StartMainMenu()
+			widget.dialog:Destroy()
+		end
 		local rows =3D {
 			{	{type=3D"Label",		text=3D"Login"} },
 				=

@@ -159,9 +163,10 @@
 				{type=3D"Label",		text=3D	"On many shards you can you can just login w=
ith a username/password you wish\n"..
 											"to create a new account if you don't have one already"}, },
 				=

-			{	{type=3D"Button",onLeftClick=3DMyLogin,shard=3Dshard,shardname=3Dshar=
dname,text=3D"Login"}, },
-			=

+			{	{type=3D"Button",onLeftClick=3DMyLogin,shard=3Dshard,shardname=3Dshar=
dname,text=3D"Login ..."}, },
+			{	{type=3D"Button",onLeftClick=3DMyGoBack,text=3D"<- back"}, },
 		}
+		=

 		gLoginDialog =3D guimaker.MakeTableDlg(rows,10,10,true,true,gGuiDefaultS=
tyleSet,"window")
 	end
 end
@@ -243,7 +248,7 @@
 	end
 	-- back button
 	table.insert(rows,{
-		{type=3D"Button",onLeftClick=3DMyGoBack,text=3D"Back"}
+		{type=3D"Button",onLeftClick=3DMyGoBack,text=3D"<- back"}
 	})
 =

 	gServerListDialog =3D guimaker.MakeTableDlg(rows,10,10,true,true,gGuiDefa=
ultStyleSet,"window")
@@ -304,7 +309,7 @@
 	end
 	-- back button
 	table.insert(rows,{
-		{type=3D"Button",onLeftClick=3DMyGoBack,text=3D"Back"}
+		{type=3D"Button",onLeftClick=3DMyGoBack,text=3D"<- back"}
 	})
 	=

 	gCharListDialog =3D guimaker.MakeTableDlg(rows,10,10,true,true,gGuiDefaul=
tStyleSet,"window")



From no-reply at zwischenwelt.org  Wed Jun  4 03:17:27 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 04 Jun 2008 01:17:27 -0000
Subject: [Iris-commit] [IRIS] r2219 - /trunk/lua/main.lua
Message-ID: <20080604011731.81F201C1824F@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Jun  4 03:17:23 2008
New Revision: 2219

Log:
added gOgrePluginPathOverride in case popen fails ( lugre_detect_ogre_plugi=
n_path ) =


Modified:
    trunk/lua/main.lua

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Wed Jun  4 03:17:23 2008
@@ -289,7 +289,7 @@
 	=

 	LoadingProfile("initializing Ogre",true)
 	gPreOgreTime =3D gLoadingProfileLastTime
-	if (not InitOgre("Iris2",lugre_detect_ogre_plugin_path(),"../bin/")) then=
 Exit() end
+	if (not InitOgre("Iris2",gOgrePluginPathOverride or lugre_detect_ogre_plu=
gin_path(),"../bin/")) then Exit() end
 	CollectOgreResLocs()
 	SetCursorBaseOffset(0,0)
 	=




From no-reply at zwischenwelt.org  Wed Jun  4 20:41:38 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 04 Jun 2008 18:41:38 -0000
Subject: [Iris-commit] [IRIS] r2220 - in /trunk: data/models/materials/
 data/models/models/to_003000/ data/models/textures/ lua/filter/
Message-ID: <20080604190013.A13D41C1800E@zwischenwelt.org>

Author: sience
Date: Wed Jun  4 20:41:37 2008
New Revision: 2220

Log:
-new models :)
-fixed some old models

Added:
    trunk/data/models/models/to_003000/mdl_002175.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002176.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002177.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002178.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002179.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002180.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002181.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002182.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002183.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002184.mesh   (with props)
    trunk/data/models/models/to_003000/mdl_002185.mesh   (with props)
    trunk/data/models/textures/tex_atlas_william.png   (with props)
Removed:
    trunk/data/models/models/to_003000/mdl_002187.mesh
Modified:
    trunk/data/models/materials/textures.material
    trunk/data/models/models/to_003000/mdl_002174.mesh
    trunk/lua/filter/filter.art.lua

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Wed Jun  4 20:41:37 2008
@@ -6065,3 +6065,9 @@
 		}
 	}
 }
+
+material Atlas_Will : tex_base =

+{ =

+	set_texture_alias MainTexture tex_atlas_william.png
+}
+

Modified: trunk/data/models/models/to_003000/mdl_002174.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Wed Jun  4 20:41:37 2008
@@ -306,6 +306,12 @@
 --hitching post
 gArtFilter[5351]=3D{rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=3D1,zadd=3D0}
 gArtFilter[5352]=3D{maptoid=3D5351}
+
+--wall
+gArtFilter[670]=3D{maptoid=3D671,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D1.85,zadd=3D0}
+
+--zaun
+gArtFilter[2187]=3D{maptoid=3D2186,rotation=3D"x:0,y:0,z:90",xadd=3D0,yadd=
=3D1,zadd=3D0}
 =

 ----------------------------------------------------------------------
 =




From no-reply at zwischenwelt.org  Sat Jun  7 00:20:35 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 06 Jun 2008 22:20:35 -0000
Subject: [Iris-commit] [IRIS] r2221 - in /trunk/lua: gui/gui.helper.lua
	main.lua
Message-ID: <20080606222035.C46DB1C180E9@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Jun  7 00:20:34 2008
New Revision: 2221

Log:
inlined iris-guistep as there was a function mit identical name in lugre

Modified:
    trunk/lua/gui/gui.helper.lua
    trunk/lua/main.lua

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Sat Jun  7 00:20:34 2008
@@ -22,12 +22,6 @@
 		local tw,th =3D gMemoryUsageField.text.gfx:GetTextBounds()
 		gMemoryUsageField.text.gfx:SetPos(-tw+90,0)
 	end
-end
-
--- called every frame
-function GuiStep ()
-	UpdateCompass()
-	DisplayMemoryUsage(OgreMemoryUsage("all"))
 end
 =

 -- iris logo

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat Jun  7 00:20:34 2008
@@ -2,10 +2,10 @@
 --###        CONSTANTS        ###
 --###############################
 =

-gMainWorkingDir =3D GetMainWorkingDir and GetMainWorkingDir() or ""
-datapath =3D gMainWorkingDir.."data/"
-libpath =3D gMainWorkingDir.."lua/"
-lugreluapath =3D gMainWorkingDir..(file_exists(gMainWorkingDir.."mylugre")=
 and "mylugre/lua/" or "lugre/lua/")
+gMainWorkingDir 	=3D GetMainWorkingDir and GetMainWorkingDir() or ""
+datapath 			=3D gMainWorkingDir.."data/"
+libpath 			=3D gMainWorkingDir.."lua/"
+lugreluapath 		=3D gMainWorkingDir..(file_exists(gMainWorkingDir.."mylugre=
") and "mylugre/lua/" or "lugre/lua/")
 gConfigPath 		=3D datapath.."config.lua"
 gConfigPathFallback	=3D datapath.."config.lua.dist"
 gMacroPath 			=3D datapath.."mymacros.lua"
@@ -303,7 +303,7 @@
 	-- if (false) then TestMultiLoader() end
 	-- if (false) then TestZLib() end
 	-- if (false) then TestUniFontLoader() end
-	if (gCommandLineSwitches["-testbutton"]) then MyGuiSystemButtonTest() end
+	if (gCommandLineSwitches["-guitest"]) then GUITest() end
 	-------------------------------------------------------------------------=
---------------------------------
 =

 	-- maybe we should check here if in offline or online mode!?
@@ -392,7 +392,8 @@
 	if (gInGameStarted) then
 		gCurrentRenderer:MainStep()
 		StepUODragDrop()
-		GuiStep()
+		UpdateCompass()
+		DisplayMemoryUsage(OgreMemoryUsage("all"))
 		PingStep()
 	else
 		StepMainMenu()



From no-reply at zwischenwelt.org  Sat Jun  7 00:24:14 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 06 Jun 2008 22:24:14 -0000
Subject: [Iris-commit] [IRIS] r2222 - /trunk/data/base/guibordertest.png
Message-ID: <20080606222414.B9F1C1C180E9@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Jun  7 00:24:13 2008
New Revision: 2222

Log:
forgot to add file

Added:
    trunk/data/base/guibordertest.png   (with props)



From no-reply at zwischenwelt.org  Sat Jun  7 00:37:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 06 Jun 2008 22:37:51 -0000
Subject: [Iris-commit] [IRIS] r2223 - /trunk/lua/gui/gui.helper.lua
Message-ID: <20080606223752.76CE21C1801F@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Jun  7 00:37:48 2008
New Revision: 2223

Log:
small fix

Modified:
    trunk/lua/gui/gui.helper.lua

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Sat Jun  7 00:37:48 2008
@@ -1,5 +1,5 @@
 gMemStats_NextUpdate =3D 0
-local function DisplayMemoryUsage (memoryusage)
+function DisplayMemoryUsage (memoryusage)
 	if (gHideMemoryUsage) then return end
 	if (gMyTicks > gMemStats_NextUpdate) then
 		gMemStats_NextUpdate =3D gMyTicks + 1000



From no-reply at zwischenwelt.org  Sat Jun  7 01:04:45 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 06 Jun 2008 23:04:45 -0000
Subject: [Iris-commit] [IRIS] r2224 - in /trunk: data/config.lua.dist
	lua/lib.mainmenu.lua
Message-ID: <20080606230445.956291524030@zwischenwelt.org>

Author: hagish
Date: Sat Jun  7 01:04:45 2008
New Revision: 2224

Log:
bugfix: crash on hardcore main menu back button usage

Modified:
    trunk/data/config.lua.dist
    trunk/lua/lib.mainmenu.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sat Jun  7 01:04:45 2008
@@ -356,8 +356,8 @@
 gMusicConfigFile=3D "Config.txt"
 gMusicPath		=3D "Music/Digital/"
 =

-gMaps =3D {}
-gMaps[0] =3D {
+gDefaultMaps =3D {}
+gDefaultMaps[0] =3D {
 	name =3D "Felucca",
 	mapwidth =3D 896,
 	mapheight =3D 512,
@@ -376,7 +376,7 @@
 --	map_diff_lookup	=3D "mapdifl0.mul",
 --	map_diff_data	=3D "mapdif0.mul"
 }
-gMaps[1] =3D {
+gDefaultMaps[1] =3D {
 	name =3D "Trammel",
 	mapwidth =3D 896,
 	mapheight =3D 512,
@@ -395,7 +395,7 @@
 --	map_diff_lookup	=3D "mapdifl1.mul",
 --	map_diff_data	=3D "mapdif1.mul"
 }
-gMaps[2] =3D {
+gDefaultMaps[2] =3D {
 	name =3D "Ilshenar",
 	mapwidth =3D 288,
 	mapheight =3D 200,
@@ -414,7 +414,7 @@
 --	map_diff_lookup =3D "mapdifl2.mul",
 --	map_diff_data	=3D "mapdif2.mul"
 }
-gMaps[3] =3D {
+gDefaultMaps[3] =3D {
 	name =3D "Malas",
 	mapwidth =3D 320,
 	mapheight =3D 256,
@@ -426,7 +426,7 @@
 	staidxfilename	=3D "staidx3.mul",
 	staticfilename	=3D "statics3.mul"
 }
-gMaps[4] =3D {
+gDefaultMaps[4] =3D {
 	name =3D "Tokuno",
 	mapwidth =3D 181,
 	mapheight =3D 181,

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Sat Jun  7 01:04:45 2008
@@ -89,6 +89,9 @@
 =

 -- postxt is a string for the position, e.g. 5260,1333  , can be nil
 local function StartOfflineMode (postxt)
+	-- reset to default maps
+	gMaps =3D {}	ArrayOverwrite(gMaps,gDefaultMaps)
+
 	gDialog_IrisLogo:SetVisible(false)
 =

 	gStartGameWithoutNetwork =3D true
@@ -327,6 +330,9 @@
 end
 =

 function StartMainMenu ()
+	-- reset to default maps
+	gMaps =3D {}	ArrayOverwrite(gMaps,gDefaultMaps)
+
 	if (gTestNoMainMenu) then return end
 	if (gCommandLineSwitches["-meshload"]) then StartMeshLoaderTest() end -- =
journaltest
 	if (gCommandLineSwitches["-jt"]) then ToggleJournal() return end -- journ=
altest



From no-reply at zwischenwelt.org  Sat Jun  7 02:21:54 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 00:21:54 -0000
Subject: [Iris-commit] [IRIS] r2225 - /trunk/data/base/guibordertest.png
Message-ID: <20080607002158.3D0291C180E9@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Jun  7 02:21:52 2008
New Revision: 2225

Log:
updated border test gfx

Modified:
    trunk/data/base/guibordertest.png

Modified: trunk/data/base/guibordertest.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat Jun  7 03:56:06 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 01:56:06 -0000
Subject: [Iris-commit] [IRIS] r2227 - /trunk/data/base/scroll.png
Message-ID: <20080607015608.368D71C1804B@zwischenwelt.org>

Author: hagish
Date: Sat Jun  7 03:55:59 2008
New Revision: 2227

Log:
gui test scroll

Modified:
    trunk/data/base/scroll.png

Modified: trunk/data/base/scroll.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat Jun  7 03:49:54 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 01:49:54 -0000
Subject: [Iris-commit] [IRIS] r2226 - /trunk/data/base/scroll.png
Message-ID: <20080607014954.EDEBB1524030@zwischenwelt.org>

Author: hagish
Date: Sat Jun  7 03:49:53 2008
New Revision: 2226

Log:
gui test scroll

Added:
    trunk/data/base/scroll.png   (with props)



From no-reply at zwischenwelt.org  Sat Jun  7 05:15:18 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 03:15:18 -0000
Subject: [Iris-commit] [IRIS] r2228 - in /trunk: data/base/guibordertest.png
 lua/lib.2d.cam.lua lua/lib.2d.renderer.lua
Message-ID: <20080607031518.37DBF1524030@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Jun  7 05:15:17 2008
New Revision: 2228

Log:
2d-mode : offline/online mode distinction for walk and cam-move

Modified:
    trunk/data/base/guibordertest.png
    trunk/lua/lib.2d.cam.lua
    trunk/lua/lib.2d.renderer.lua

Modified: trunk/data/base/guibordertest.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/lib.2d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.cam.lua (original)
+++ trunk/lua/lib.2d.cam.lua Sat Jun  7 05:15:17 2008
@@ -98,17 +98,5 @@
 		self.gbNeedCorrectAspectRatio =3D false
 		self:CamUpdateParams()
 	end
-	=

-	-- keyboard move cam
-	local bKeyBoardMoveCam =3D false
-	if (bKeyBoardMoveCam) then
-		local dt =3D math.min(Renderer2D.kGoodTicksBetweenFrames/1000,gSecondsSi=
nceLastFrame)
-		local curticks =3D Client_GetTicks()
-		local xloc,yloc =3D self:GetCamPos()
-		local move =3D 16 * dt  * (gKeyPressed[key_lshift] and 8*16 or 1)
-		local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[=
key_right] and 1 or 0))
-		local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[ke=
y_down] and 1 or 0))
-		if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end
-	end
 end
 =


Modified: trunk/lua/lib.2d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.2d.renderer.lua (original)
+++ trunk/lua/lib.2d.renderer.lua Sat Jun  7 05:15:17 2008
@@ -50,19 +50,34 @@
 	-- TODO : self:CombatGuiStep() ?
 	-- TODO : self:MousePickStep() ?
 	local xloc,yloc,zloc =3D GetPlayerPos()
-	self:SetCamPos(xloc,yloc,zloc)
+	if (xloc) then self:SetCamPos(xloc,yloc,zloc) end
 	=

+	local bOfflineMode =3D xloc =3D=3D nil
 	=

-	local dx =3D 0
-	local dy =3D 0
-	if (gKeyPressed[key_left] ) then dx =3D dx + 1 end
-	if (gKeyPressed[key_right]) then dx =3D dx - 1 end
-	if (gKeyPressed[key_up   ]) then dy =3D dy - 1 end
-	if (gKeyPressed[key_down ]) then dy =3D dy + 1 end
-	local iDir =3D DirFromLocalDxDy(dx,dy) =

-	if (iDir) then
-		local bRunFlag =3D true
-		WalkStep_WalkInDir(iDir,bRunFlag,true)
+	if (not bOfflineMode) then
+		local dx =3D 0
+		local dy =3D 0
+		if (gKeyPressed[key_left] ) then dx =3D dx + 1 end
+		if (gKeyPressed[key_right]) then dx =3D dx - 1 end
+		if (gKeyPressed[key_up   ]) then dy =3D dy - 1 end
+		if (gKeyPressed[key_down ]) then dy =3D dy + 1 end
+		local iDir =3D DirFromLocalDxDy(dx,dy) =

+		if (iDir) then
+			local bRunFlag =3D true
+			WalkStep_WalkInDir(iDir,bRunFlag,true)
+		end
+	end
+	=

+	-- keyboard move cam
+	local bKeyBoardMoveCam =3D bOfflineMode
+	if (bKeyBoardMoveCam) then
+		local dt =3D math.min(Renderer2D.kGoodTicksBetweenFrames/1000,gSecondsSi=
nceLastFrame)
+		local curticks =3D Client_GetTicks()
+		local xloc,yloc =3D self:GetCamPos()
+		local move =3D 16 * dt  * (gKeyPressed[key_lshift] and 8*16 or 1)
+		local dx =3D move * ((gKeyPressed[key_left] and -1 or 0) + (gKeyPressed[=
key_right] and 1 or 0))
+		local dy =3D move * ((gKeyPressed[key_up] and -1 or 0) + (gKeyPressed[ke=
y_down] and 1 or 0))
+		if (dx ~=3D 0 or dy ~=3D 0) then self:SetCamPos(xloc+dx,yloc+dy) end
 	end
 end
 =




From no-reply at zwischenwelt.org  Sat Jun  7 16:21:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 14:21:42 -0000
Subject: [Iris-commit] [IRIS] r2229 - /trunk/lua/lib.compass.lua
Message-ID: <20080607150015.A3FF31C180EA@zwischenwelt.org>

Author: hagish
Date: Sat Jun  7 16:21:41 2008
New Revision: 2229

Log:
first multis in detail compass, position still wrong

Modified:
    trunk/lua/lib.compass.lua

Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Sat Jun  7 16:21:41 2008
@@ -5,6 +5,10 @@
 gDetailMapCacheImage =3D nil
 gDetailMapCacheTexture =3D nil
 gDetailMapCacheMaterial =3D nil
+
+gDetailMapCacheMultiTexture =3D nil
+gDetailMapCacheMultiMaterial =3D nil
+
 gDetailMapCacheBX =3D nil
 gDetailMapCacheBY =3D nil
 gbCompassLayoutDirty =3D false
@@ -83,8 +87,93 @@
 	if gPositionMarkers[mapindex] then gPositionMarkers[mapindex][name] =3D n=
il end
 end
 =

+-- creates detailed multi image of given area in uoloc
+function GenerateDetailMultiImage(minx,miny,maxx,maxy)
+	if gRadarColorLoader and maxx and maxy then
+		local w =3D maxx - minx
+		local h =3D maxy - miny
+		local depthbuffer =3D {}
+		PrepareImage(w,h)
+		=

+		-- draw multis
+		for k,v in pairs(gMultis) do
+			local multi =3D k
+			if multi.lparts then
+				for k,v in pairs(multi.lparts) do
+					local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
+					=

+					local d =3D Array2DGet(depthbuffer, iX,iY)
+					if d =3D=3D nil or d < iZ then
+						local r,g,b =3D gRadarColorLoader:GetTileTypeIDColor(iTileTypeID)
+						SetPixelInPreparedImage(iX - minx, iY - miny, r,g,b,1)
+						Array2DSet(depthbuffer, iX, iY, iZ)
+					end
+				end
+			end	=

+		end
+		=

+		-- draw dynamics
+		local l =3D GetDynamicList()
+		for k,dynamic in pairs(l) do
+			local d =3D Array2DGet(depthbuffer, dynamic.xloc, dynamic.yloc)
+			if d =3D=3D nil or d < dynamic.zloc then
+				local r,g,b =3D gRadarColorLoader:GetTileTypeIDColor(dynamic.artid)
+				SetPixelInPreparedImage(dynamic.xloc - minx, dynamic.yloc - miny, r,g,=
b,1)
+				Array2DSet(depthbuffer, dynamic.xloc, dynamic.yloc, dynamic.zloc)
+			end
+		end
+		=

+		SetPixelInPreparedImage(math.floor((maxx-minx) / 2), math.floor((maxy-mi=
ny) / 2), 1,0,0,1)
+		local px,py,pz =3D MacroRead_GetPlayerPosition()
+		SetPixelInPreparedImage(math.floor(px-minx), math.floor(py-miny), 1,1,1,=
1)
+		=

+		local i =3D CreatePreparedImage()
+		i:SaveAsFile("test.png")
+		=

+		return i
+	end	=

+end
+
+gDetailMultiNeedsUpdate =3D true
+gDetailMultiLastUpdate =3D 0
+gDetailMultiUpdateTimeout =3D 2000
+
+RegisterListener("Dynamic_Update",function () gDetailMultiNeedsUpdate =3D =
true end)
+RegisterListener("Dynamic_Destroy",function () gDetailMultiNeedsUpdate =3D=
 true end)
+
 -- param : compass-center-pos (player or cam)
 function UpdateDetailMapCacheIfNeeded (xloc,yloc)
+	-- update detail multis if needed
+	if gDetailMultiNeedsUpdate and Client_GetTicks() - gDetailMultiLastUpdate=
 > gDetailMultiUpdateTimeout then
+		print("update compass detail multis...",xloc,yloc)
+		=

+		gDetailMultiNeedsUpdate =3D false
+		gDetailMultiLastUpdate =3D Client_GetTicks()
+		=

+		local bx0,dbx =3D math.floor((xloc-kDetailMapCacheSize/2)/8),kDetailMapC=
acheSize/8
+		local by0,dby =3D math.floor((yloc-kDetailMapCacheSize/2)/8),kDetailMapC=
acheSize/8
+		=

+		-- multi image
+		local minx,miny =3D bx0*8,by0*8
+		local maxx,maxy =3D minx + dbx*8, miny + dby*8
+		local i =3D GenerateDetailMultiImage(minx,miny, maxx,maxy)
+		=

+		print("minmax",minx,miny,maxx,maxy)
+		print("block",bx0,dbx,by0,dby)
+
+		-- create or update texture
+		if (gDetailMapCacheMultiTexture) then =

+			i:LoadToTexture(gDetailMapCacheMultiTexture) -- update existing texture
+		else
+			gDetailMapCacheMultiTexture =3D i:MakeTexture() -- generate new texture
+		end
+		=

+		-- create material on first time init
+		if (not gDetailMapCacheMultiMaterial) then
+			gDetailMapCacheMultiMaterial =3D GetPlainTextureMat(gDetailMapCacheMult=
iTexture, true)
+		end
+	end
+
 	-- check if we need to update cache, return if not
 	if (gDetailMapCacheBX) then
 		local r =3D kDetailMapCacheViewRad
@@ -94,6 +183,8 @@
 			dy >=3D r and dy <=3D kDetailMapCacheSize - r) then return end -- no up=
date needed
 	end
 	=

+	gDetailMultiNeedsUpdate =3D true
+	=

 	-- first time init
 	if (not gDetailMapCacheImage) then
 		gDetailMapCacheImage =3D CreateImage()
@@ -119,6 +210,7 @@
 	if (not gDetailMapCacheMaterial) then
 		gDetailMapCacheMaterial =3D GetPlainTextureMat(gDetailMapCacheTexture)
 	end
+	=

 end
 =

 --[[
@@ -152,6 +244,7 @@
 		gIrisCompassDialog =3D guimaker.MakeSortedDialog()
 		gIrisCompassDialog.rootwidget.gfx:SetPos(vw-gCompassSize - gCompassOff,1=
5 + gCompassOff)
 		gIrisCompassDialog.detailcompass 		=3D gIrisCompassDialog.rootwidget:Cre=
ateChild()
+		gIrisCompassDialog.detailcompassmulti	=3D gIrisCompassDialog.rootwidget:=
CreateChild()
 		gIrisCompassDialog.compass 				=3D gIrisCompassDialog.rootwidget:CreateC=
hild()
 		gIrisCompassDialog.mapdot 				=3D gIrisCompassDialog.rootwidget:CreateCh=
ild()
 		gIrisCompassDialog.compassframe_static	=3D gIrisCompassDialog.rootwidget=
:CreateChild()
@@ -166,6 +259,10 @@
 		-- detail compass
 		if (gIrisCompassDialog.detailcompass) then
 			local mygfx =3D gIrisCompassDialog.detailcompass.gfx
+			mygfx:InitRROC()
+		end
+		if (gIrisCompassDialog.detailcompassmulti) then
+			local mygfx =3D gIrisCompassDialog.detailcompassmulti.gfx
 			mygfx:InitRROC()
 		end
 		=

@@ -318,6 +415,7 @@
 	gCompassVisibleRad =3D max(gCompassVisibleRad,giCompassDetailLimit)
 	local bRough =3D IsRoughCompassActive()
 	gIrisCompassDialog.detailcompass.gfx:SetVisible( not bRough )
+	gIrisCompassDialog.detailcompassmulti.gfx:SetVisible( not bRough )
 	gIrisCompassDialog.compass.gfx:SetVisible( bRough )
 	gIrisCompassDialog.compass.gfx:SetUVRad(gCompassVisibleRad/gCompassMapW,
 											gCompassVisibleRad/gCompassMapH)
@@ -402,6 +500,8 @@
 		if (not bRough) then
 			local xloc,yloc =3D cxloc, cyloc
 			UpdateDetailMapCacheIfNeeded(xloc,yloc)
+
+			-- static part -----------------------------------------
 			local mygfx =3D gIrisCompassDialog.detailcompass.gfx
 			=

 			-- set material, only needed once
@@ -427,6 +527,36 @@
 				mygfx:RenderableVertex((mx + x)/vw * 2.0 - 1.0,(my + y)/vh * (-2.0) + =
1.0,z, u,v)
 			end
 			mygfx:RenderableEnd()
+			=

+			=

+			=

+			-- detail multi layer -------------------------------------------
+			local mygfx =3D gIrisCompassDialog.detailcompassmulti.gfx
+			=

+			-- set material, only needed once
+			if (not mygfx.bDetailCompassMatHasBeenSet) then =

+				mygfx.bDetailCompassMatHasBeenSet =3D true
+				mygfx:SetMaterial(gDetailMapCacheMultiMaterial) =

+			end
+			=

+			-- prepare vars
+			local e =3D 1/kDetailMapCacheSize
+			local dx =3D xloc - gDetailMapCacheBX * 8
+			local dy =3D yloc - gDetailMapCacheBY * 8
+			local k =3D 11
+			=

+			mygfx:RenderableBegin(k+2,0,true,false,OT_TRIANGLE_FAN)
+			mygfx:RenderableVertex((mx)/vw * 2.0 - 1.0,(my)/vh * (-2.0) + 1.0,z, dx=
*e,dy*e)
+			for i =3D 0,k do
+				local a =3D 360*gfDeg2Rad*i/k
+				local x =3D   kDetailMapCacheViewRad * math.sin(a)
+				local y =3D   kDetailMapCacheViewRad * math.cos(a)
+				local u =3D ( kDetailMapCacheViewRad * math.sin(a + ax + gfDeg2Rad*180=
) + dx)*e
+				local v =3D ( kDetailMapCacheViewRad * math.cos(a + ax + gfDeg2Rad*180=
) + dy)*e
+				mygfx:RenderableVertex((mx + x)/vw * 2.0 - 1.0,(my + y)/vh * (-2.0) + =
1.0,z, u,v)
+			end
+			mygfx:RenderableEnd()
+			=

 		end
 		=

 		if gbCompassShowMobiles then



From no-reply at zwischenwelt.org  Sat Jun  7 17:16:10 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 15:16:10 -0000
Subject: [Iris-commit] [IRIS] r2230 - /trunk/src/data_radar_L.cpp
Message-ID: <20080607151612.8D7401C180F0@zwischenwelt.org>

Author: hagish
Date: Sat Jun  7 17:16:09 2008
New Revision: 2230

Log:
first multis in detail compass, position still wrong

Modified:
    trunk/src/data_radar_L.cpp

Modified: trunk/src/data_radar_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_radar_L.cpp (original)
+++ trunk/src/data_radar_L.cpp Sat Jun  7 17:16:09 2008
@@ -9,6 +9,8 @@
 			=

 			#define REGISTER_METHOD(methodname) mlMethod.push_back(make_luaL_reg(#m=
ethodname,&cRadarColorLoader_L::methodname));
 			REGISTER_METHOD(Destroy);
+			REGISTER_METHOD(GetColor);
+			REGISTER_METHOD(GetTileTypeIDColor);
 			#undef REGISTER_METHOD
 		}
 =

@@ -26,6 +28,39 @@
 =

 		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
 		=

+		=

+		// lua: r,g,b	loader:GetTileTypeIDColor(tileid)
+		static int	GetTileTypeIDColor			(lua_State *L) { PROFILE =

+			cRadarColorLoader* p =3D checkudata_alive(L);
+			unsigned int id =3D luaL_checkint(L,2);
+			short c =3D p->GetCol16(0x4000 + id);
+			=

+			float r,g,b,a;
+			Ogre::PixelUtil::unpackColour(&r,&g,&b,&a,Ogre::PF_A1R5G5B5,&c);
+			=

+			lua_pushnumber(L, r);
+			lua_pushnumber(L, g);
+			lua_pushnumber(L, b);
+			=

+			return 3;
+		}
+		=

+		// lua: r,g,b	loader:GetColor(id)
+		static int	GetColor			(lua_State *L) { PROFILE =

+			cRadarColorLoader* p =3D checkudata_alive(L);
+			unsigned int id =3D luaL_checkint(L,2);
+			short c =3D p->GetCol16(id);
+			=

+			float r,g,b,a;
+			Ogre::PixelUtil::unpackColour(&r,&g,&b,&a,Ogre::PF_A1R5G5B5,&c);
+			=

+			lua_pushnumber(L, r);
+			lua_pushnumber(L, g);
+			lua_pushnumber(L, b);
+			=

+			return 3;
+		}
+		=

 		virtual const char* GetLuaTypeName () { return "iris.RadarColorLoader"; }
 };
 =




From no-reply at zwischenwelt.org  Sat Jun  7 17:29:08 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 15:29:08 -0000
Subject: [Iris-commit] [IRIS] r2231 - /trunk/lua/lib.compass.lua
Message-ID: <20080607152909.DAE8F1C180EF@zwischenwelt.org>

Author: hagish
Date: Sat Jun  7 17:29:07 2008
New Revision: 2231

Log:
detail multi compass working

Modified:
    trunk/lua/lib.compass.lua

Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Sat Jun  7 17:29:07 2008
@@ -128,7 +128,6 @@
 		SetPixelInPreparedImage(math.floor(px-minx), math.floor(py-miny), 1,1,1,=
1)
 		=

 		local i =3D CreatePreparedImage()
-		i:SaveAsFile("test.png")
 		=

 		return i
 	end	=

@@ -145,7 +144,7 @@
 function UpdateDetailMapCacheIfNeeded (xloc,yloc)
 	-- update detail multis if needed
 	if gDetailMultiNeedsUpdate and Client_GetTicks() - gDetailMultiLastUpdate=
 > gDetailMultiUpdateTimeout then
-		print("update compass detail multis...",xloc,yloc)
+		print("update compass detail multis...")
 		=

 		gDetailMultiNeedsUpdate =3D false
 		gDetailMultiLastUpdate =3D Client_GetTicks()
@@ -158,9 +157,9 @@
 		local maxx,maxy =3D minx + dbx*8, miny + dby*8
 		local i =3D GenerateDetailMultiImage(minx,miny, maxx,maxy)
 		=

-		print("minmax",minx,miny,maxx,maxy)
-		print("block",bx0,dbx,by0,dby)
-
+		gDetailMapMultiCacheBX =3D bx0
+		gDetailMapMultiCacheBY =3D by0
+	=

 		-- create or update texture
 		if (gDetailMapCacheMultiTexture) then =

 			i:LoadToTexture(gDetailMapCacheMultiTexture) -- update existing texture
@@ -541,8 +540,8 @@
 			=

 			-- prepare vars
 			local e =3D 1/kDetailMapCacheSize
-			local dx =3D xloc - gDetailMapCacheBX * 8
-			local dy =3D yloc - gDetailMapCacheBY * 8
+			local dx =3D xloc - gDetailMapMultiCacheBX * 8
+			local dy =3D yloc - gDetailMapMultiCacheBY * 8
 			local k =3D 11
 			=

 			mygfx:RenderableBegin(k+2,0,true,false,OT_TRIANGLE_FAN)



From no-reply at zwischenwelt.org  Sat Jun  7 20:14:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 18:14:33 -0000
Subject: [Iris-commit] [IRIS] r2232 - /trunk/lua/lib.3d.renderer.lua
Message-ID: <20080607181438.1E5931C180EF@zwischenwelt.org>

Author: hagish
Date: Sat Jun  7 20:14:31 2008
New Revision: 2232

Log:
local/global issues

Modified:
    trunk/lua/lib.3d.renderer.lua

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Sat Jun  7 20:14:31 2008
@@ -71,7 +71,7 @@
 =

 -- used by MacroRead_GetPlayerPosition when no playermobile found (yet)
 function Renderer3D:GetExactLocalPos()
-	sx,sy,sz =3D gTileFreeWalk:GetExactLocalPos()
+	local sx,sy,sz =3D gTileFreeWalk:GetExactLocalPos()
 	return -sx,sy,sz
 end
 =




From no-reply at zwischenwelt.org  Sat Jun  7 20:20:04 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 07 Jun 2008 18:20:04 -0000
Subject: [Iris-commit] [IRIS] r2233 - in /trunk: bin/ data/ lua/ lua/gui/
	lua/net/
Message-ID: <20080607182012.C1B881524030@zwischenwelt.org>

Author: sience
Date: Sat Jun  7 20:19:44 2008
New Revision: 2233

Log:
-font definitions changed to more consistent setup
-win32 binary

Modified:
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist
    trunk/lua/gui/gui.gumpmaker.lua
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/gui/gui.healthbar.lua
    trunk/lua/gui/gui.helper.lua
    trunk/lua/gui/gui.journal.lua
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/gui/gui.skill.lua
    trunk/lua/gui/gui.spellbook.lua
    trunk/lua/gui/gui.status.lua
    trunk/lua/gui/gui.trade.lua
    trunk/lua/lib.3d.combat.lua
    trunk/lua/lib.3d.mobile.lua
    trunk/lua/main.lua
    trunk/lua/net.popup.lua
    trunk/lua/net/net.other.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sat Jun  7 20:19:44 2008
@@ -30,23 +30,46 @@
 gHideMemoryUsage =3D false				-- includes now also fps
 =

 -- Font settings
-gFontNameDefault =3D "BerlinSans32"
-gJournalFontName =3D "TrebuchetMSBold"
-gFontSizeDefault =3D 15
-gFontChatSize =3D 18
-gFontGumpSize =3D 15
-gHudNamesFontSize	=3D 16
--- value between 0 and 1, the higher the brighter
-gFontChatBrighten	=3D 0.6
-
--- uo fonts
-if false then
+gFontDefs  =3D {}
+gFontDefs["Default"] =3D {
+	name =3D "BerlinSans32",
+	size =3D 15,
+	col =3D {1.0,1.0,1.0,1.0},
+}
+gFontDefs["Journal"] =3D {
+	name =3D "FreeMono",
+	size =3D 12,
+	col =3D {1.0,1.0,1.0,1.0},
+}
+gFontDefs["Chat"] =3D {
+	name =3D "BerlinSans32",
+	size =3D 18,
+	col =3D {1.0,1.0,1.0,1.0},
+	brigth =3D 0.6,	-- value between 0 and 1, the higher the brighter
+}
+gFontDefs["PopUp"] =3D {
+	name =3D "BerlinSans32",
+	size =3D 15,
+	col =3D {1.0,1.0,1.0,1.0}, -- white
+	colhi =3D {1.0,1.0,1.0,1.0}, -- green
+}
+gFontDefs["HudNames"] =3D {
+	name =3D "BerlinSans32",
+	size =3D 15,
+	col =3D {1.0,1.0,1.0,1.0},
+}
+gFontDefs["Gump"] =3D {
+	name =3D "BerlinSans32",
+	size =3D 15,
+	col =3D {1.0,1.0,1.0,1.0},
+}
+--[[
 	gFontNameDefault	=3D "font_unifont0"
 	gFontSizeDefault	=3D 26
 	gFontChatSize		=3D 26
 	gFontGumpSize		=3D 26
 	gHudNamesFontSize	=3D 26
-end
+]]--
 =

 -- GUI Styles : sience,iris,ray  (see lua\gui\gui.styles.lua)
 gGuiDefaultStyleSet =3D "sience"

Modified: trunk/lua/gui/gui.gumpmaker.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpmaker.lua (original)
+++ trunk/lua/gui/gui.gumpmaker.lua Sat Jun  7 20:19:44 2008
@@ -227,7 +227,7 @@
 				hex2num(gump.attr.normal), hex2num(gump.attr.over), hex2num(gump.attr.=
pressed),
 				attr.left, attr.top, attr.width, attr.height )
 	elseif (attr.class =3D=3D "label") then
-			widget =3D guimaker.MakeText(dialog.rootwidget,attr.left,attr.top,text[=
1],gFontGumpSize,{1.0,1.0,1.0,1.0},gFontNameDefault)
+			widget =3D guimaker.MakeText(dialog.rootwidget,attr.left,attr.top,text[=
1],gFontDefs["Gump"].size,gFontDefs["Gump"].col,gFontDefs["Gump"].name)
 			if (text.attr.align =3D=3D "center") then
 				local w,h =3D widget.gfx:GetTextBounds()
 				widget.gfx:SetPos(attr.left+attr.width/2 - w/2,attr.top)

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Sat Jun  7 20:19:44 2008
@@ -19,7 +19,7 @@
 	msg.text =3D ""
 	msg.center =3D false
 	msg.hue =3D ""
-	msg.charh =3D gFontGumpSize	--standard
+	msg.charh =3D gFontDefs["Gump"].size	--standard
 	msg.bold =3D false
 	msg.underline =3D false
 	msg.italic =3D false
@@ -282,8 +282,8 @@
 				local msg =3D HtmlParser( gClilocLoader and gClilocLoader:Get(bToken[6=
]) or "no_cliloc" )
 				printdebug("gump","Cliloc Msg ("..bToken[6].."): "..msg.text)
 				local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2]=
, bToken[3]+htext_correction,
-																bToken[4], bToken[5], UnicodeFix(msg.text), msg.charh, {1.=
0,1.0,1.0,1.0},
-																msg.center, msg.div, gFontNameDefault)
+																bToken[4], bToken[5], UnicodeFix(msg.text), msg.charh, gFo=
ntDefs["Gump"].col,
+																msg.center, msg.div, gFontDefs["Gump"].name)
 				if (Clientsidemode) then dialog.controls[ bToken[9] ] =3D widget end
 =

 			--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc-nr> <background> <s=
crollbar> <color>
@@ -294,8 +294,8 @@
 				local msg =3D HtmlParser(  gClilocLoader and gClilocLoader:Get(bToken[=
6]) or "no_cliloc" )
 				printdebug("gump","Cliloc Msg ("..bToken[6].."): "..msg.text)
 				local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2]=
, bToken[3]+htext_correction,
-																bToken[4], bToken[5], UnicodeFix(msg.text), msg.charh, {1.=
0,1.0,1.0,1.0},
-																msg.center, msg.div, gFontNameDefault)
+																bToken[4], bToken[5], UnicodeFix(msg.text), msg.charh, gFo=
ntDefs["Gump"].col,
+																msg.center, msg.div, gFontDefs["Gump"].name)
 				if (Clientsidemode) then dialog.controls[ bToken[10] ] =3D widget end
 =

 			--gumppic <x> <y> <gumpid> [hue=3D353]
@@ -332,7 +332,7 @@
 				local text =3D Gumpdata.textline[tonumber(bToken[5])] or "No text"
 =

 				local widget =3D guimaker.MakeText (curparent, bToken[2], bToken[3]+ht=
ext_correction, UnicodeFix(text),
-													gFontGumpSize, {190/255,237/255,231/255,1.0}, gFontNameDefaul=
t)
+													gFontDefs["Gump"].size, {190/255,237/255,231/255,1.0}, gFontD=
efs["Gump"].name)
 				if (Clientsidemode) then dialog.controls[bToken[6]] =3D widget end
 =

 			--Button <x> <y> <released-id> <pressed-id> <quit> <page-id> <return-va=
lue>
@@ -431,7 +431,7 @@
 				local msg =3D HtmlParser( Gumpdata.textline[tonumber(bToken[7])] )
 				local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2]=
, bToken[3]+htext_correction,
 																bToken[4], bToken[5], UnicodeFix(msg.text), msg.charh, {92=
/255,92/255,178/255,1.0},
-																msg.center, msg.div, gFontNameDefault)
+																msg.center, msg.div, gFontDefs["Gump"].name)
 				if (Clientsidemode) then dialog.controls[ bToken[8] ] =3D widget end
 =

 			--radio <x> <y> <released gumpid> <pressed gumpid> <status> <return-val=
ue>
@@ -519,8 +519,8 @@
 			elseif ((command =3D=3D "htmlgump") and (table.getn(bToken)>=3D 7)) then
 				local msg =3D HtmlParser( Gumpdata.textline[tonumber(bToken[6])] )
 				local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2]=
, bToken[3]+htext_correction,
-																bToken[4], bToken[5], msg.text, msg.charh, {1.0,1.0,1.0,1.=
0},
-																msg.center, msg.div, gFontNameDefault)
+																bToken[4], bToken[5], msg.text, msg.charh, gFontDefs["Gump=
"].col,
+																msg.center, msg.div, gFontDefs["Gump"].name)
 				if (Clientsidemode) then dialog.controls[ bToken[8] ] =3D widget end
 =

 			--tooltip <cliloc-nr>

Modified: trunk/lua/gui/gui.healthbar.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.healthbar.lua (original)
+++ trunk/lua/gui/gui.healthbar.lua Sat Jun  7 20:19:44 2008
@@ -245,9 +245,9 @@
 	local r,g,b =3D GetNotorietyColor(mobile.notoriety)
 =

 	if not(IsPlayerMobile(mobile)) then
-		dialog.controls["npcname"].gfx:SetCharHeight(gFontGumpSize)
+		dialog.controls["npcname"].gfx:SetCharHeight(gFontDefs["Gump"].size)
 		dialog.controls["npcname"].gfx:SetColour({r,g,b,1.0})
-		dialog.controls["npcname"].gfx:SetFont(gFontNameDefault)
+		dialog.controls["npcname"].gfx:SetFont(gFontDefs["Gump"].name)
 		dialog.controls["npcname"].gfx:SetText(mobile.name or "unknown")
 	end
 =


Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Sat Jun  7 20:19:44 2008
@@ -15,7 +15,7 @@
 			local col_text =3D {1,0,0,1}
 			gMemoryUsageField =3D guimaker.MyCreateDialog()
 			gMemoryUsageField.panel	=3D guimaker.MakeBorderPanel(gMemoryUsageField,=
x,y,w,h,col_back)
-			gMemoryUsageField.text	=3D guimaker.MakeText(gMemoryUsageField.panel,0,=
0,text,gFontSizeDefault+2,col_text,gFontNameDefault)
+			gMemoryUsageField.text	=3D guimaker.MakeText(gMemoryUsageField.panel,0,=
0,text,gFontDefs["Default"].size+2,col_text,gFontDefs["Default"].name)
 		else
 			gMemoryUsageField.text.gfx:SetText(text)
 		end

Modified: trunk/lua/gui/gui.journal.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.journal.lua (original)
+++ trunk/lua/gui/gui.journal.lua Sat Jun  7 20:19:44 2008
@@ -137,7 +137,7 @@
 		local iw,ih =3D w-bx1-bx2	, h-by1-by2
 		-- max visible lines/chars
 		local wraplen =3D math.floor(iw/7)
-		local maxlines =3D math.max(1,math.floor(ih/gFontGumpSize))
+		local maxlines =3D math.max(1,math.floor(ih/gFontDefs["Gump"].size))
 		-- final text
 		local text =3D ""
 		=

@@ -261,9 +261,9 @@
 =

         -- create text
         local parent =3D gJournalDialog.rootwidget
-        local col =3D {1,1,1,1}
+--        local col =3D {1,1,1,1}
         local bx1,by1,bx2,by2 =3D JournalGetTextBorder()
-        gJournalDialog.maintext =3D guimaker.MakeText(parent,bx1,by1,"",gF=
ontGumpSize,col,gJournalFontName)
+        gJournalDialog.maintext =3D guimaker.MakeText(parent,bx1,by1,"", g=
FontDefs["Journal"].size, gFontDefs["Journal"].col, gFontDefs["Journal"].na=
me)
         table.insert(gJournalDialog.clippedWidgets,gJournalDialog.maintext)
         gJournalDialog.maintext.UpdateClip =3D function (widget) =

             local left,top,w,h =3D gJournalDialog:GetLTWH()

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Sat Jun  7 20:19:44 2008
@@ -327,9 +327,9 @@
 =

 	-- update paperdoll name and color
 	local r,g,b =3D GetNotorietyColor(paperdoll.mobile.notoriety)
-	dialog.controls["paperdollname"].gfx:SetCharHeight(gFontGumpSize + 2)
+	dialog.controls["paperdollname"].gfx:SetCharHeight(gFontDefs["Gump"].size=
 + 2)
 	dialog.controls["paperdollname"].gfx:SetColour( {r,g,b,1.0} )
-	dialog.controls["paperdollname"].gfx:SetFont(gFontNameDefault)
+	dialog.controls["paperdollname"].gfx:SetFont(gFontDefs["Gump"].name)
 	dialog.controls["paperdollname"].gfx:SetText(paperdoll.name)
 =

 	-- remove old item widgets

Modified: trunk/lua/gui/gui.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.skill.lua (original)
+++ trunk/lua/gui/gui.skill.lua Sat Jun  7 20:19:44 2008
@@ -130,7 +130,7 @@
 			name =3D string.sub(name,0,10)..".." =

 		end
 		=

-		local text =3D guimaker.MakeText(dialog.rootwidget, 20, 5, name, gFontGu=
mpSize, {1.0,1.0,1.0,1.0}, gFontNameDefault)
+		local text =3D guimaker.MakeText(dialog.rootwidget, 20, 5, name, gFontDe=
fs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gump"].name)
 	end
 	=

 	-- functionality
@@ -338,7 +338,7 @@
 				skill.skillid =3D k
 				skill.name =3D name
 								=

-				skill.text =3D guimaker.MakeText (curparent, x, y, name, gFontGumpSize=
, {1.0,1.0,1.0,1.0}, gFontNameDefault)
+				skill.text =3D guimaker.MakeText (curparent, x, y, name, gFontDefs["Gu=
mp"].size, gFontDefs["Gump"].col, gFontDefs["Gump"].name)
 				--[[
 				skill.text.onMouseDown 		=3D function (widget,mousebutton)
 					if (mousebutton =3D=3D 1) then =

@@ -355,8 +355,8 @@
 				]]--
 =

 				skill.value =3D guimaker.MakeText (curparent, x, y,
-													tostring(sprintf("%3.1f",gPlayerSkills[k].value / 10)), gFont=
GumpSize,
-													{1.0,1.0,1.0,1.0}, gFontNameDefault)
+													tostring(sprintf("%3.1f",gPlayerSkills[k].value / 10)),
+														gFontDefs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gu=
mp"].name)
 				=

 				skill.button_up =3D MakeGumpButtonFunctionOnClick(curparent, hex2num("=
0x983"), hex2num("0x984"), hex2num("0x984"), x, y, 9, 11,
 					function (widget,mousebutton) dialog:SetSkillLevelState(skill.skillid=
,1) end)

Modified: trunk/lua/gui/gui.spellbook.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.spellbook.lua (original)
+++ trunk/lua/gui/gui.spellbook.lua Sat Jun  7 20:19:44 2008
@@ -203,8 +203,8 @@
 =

 				-- Circle Names
 				local circlename =3D guimaker.MakeText (curparent, 90 + rightspacer, 2=
0,
-														gSpellBooks[spellbook.itemid].circles[circle], 14,
-														{255/255,255/255,255/255,1.0}, gFontNameDefault)
+														gSpellBooks[spellbook.itemid].circles[circle], gFontDefs["Gu=
mp"].size,
+														{255/255,255/255,255/255,1.0}, gFontDefs["Gump"].name)
 	=

 				-- counter for available spells
 				local spellcounter=3D0
@@ -241,8 +241,8 @@
 						=

 						=

 						local spellname =3D guimaker.MakeText (curparent, 80 + rightspacer, =
20+((spellcounter+1)*15) - top_align,
-															gSpellBooks[spellbook.itemid].spells[circle][spell], gFontG=
umpSize,
-															{190/255,237/255,231/255,1.0}, gFontNameDefault)
+															gSpellBooks[spellbook.itemid].spells[circle][spell], gFontD=
efs["Gump"].size,
+															{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
 					end
 			  	end
 =

@@ -308,23 +308,23 @@
 						local spelliconid=3DgSpellBooks[spellbook.itemid].iconoffset + ((cir=
cle-1) * spellnumber) + spell-1
 						-- Circle Names
 						local circlename =3D guimaker.MakeText (curparent, 85 + rightspacer,=
 15 - top_align,
-																gSpellBooks[spellbook.itemid].circles[circle], 14,
-																{255/255,255/255,255/255,1.0}, gFontNameDefault)
+																gSpellBooks[spellbook.itemid].circles[circle], gFontDefs["=
Gump"].size-1,
+																{255/255,255/255,255/255,1.0}, gFontDefs["Gump"].name)
 						local spellname =3D guimaker.MakeText (curparent, 85 + rightspacer, =
30 - top_align,
-																gSpellBooks[spellbook.itemid].spells[circle][spell], 14,
-																{190/255,237/255,231/255,1.0}, gFontNameDefault)
+																gSpellBooks[spellbook.itemid].spells[circle][spell], gFont=
Defs["Gump"].size-1,
+																{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
 						local spellicon =3D MakeGumpButton (curparent, spelliconid, spellico=
nid, spelliconid,
 																75 + rightspacer, 50,nil,nil,false)
 						local reagents =3D guimaker.MakeText (curparent, 75 + rightspacer, 1=
08 - top_align,
-																"Reagents:", 13,
-																{190/255,237/255,231/255,1.0}, gFontNameDefault)
+																"Reagents:", gFontDefs["Gump"].size-2,
+																{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
 						-- Display Reagentz
 						if (gSpellBooks[spellbook.itemid].spell_reags[circle][spell]) then
 							for reag=3D1, table.getn( gSpellBooks[spellbook.itemid].spell_reags=
[circle][spell] ) do
 								local reagentname=3D gSpellBooks[spellbook.itemid].reagenz[ gSpell=
Books[spellbook.itemid].spell_reags[circle][spell][reag] ]
 								local reagentzia =3D guimaker.MakeText (curparent, 75 + rightspace=
r, 112 + reag*14 - top_align,
-																		reagentname, gFontGumpSize,
-																		{190/255,237/255,231/255,1.0}, gFontNameDefault)
+																		reagentname, gFontDefs["Gump"].size,
+																		{190/255,237/255,231/255,1.0}, gFontDefs["Gump"].name)
 							end
 						end
 		=


Modified: trunk/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.status.lua (original)
+++ trunk/lua/gui/gui.status.lua Sat Jun  7 20:19:44 2008
@@ -124,14 +124,14 @@
 =

 					-- set name
 					if m.name then
-						dialog.controls["statusname"].gfx:SetCharHeight(gFontGumpSize)
+						dialog.controls["statusname"].gfx:SetCharHeight(gFontDefs["Gump"].si=
ze)
 						dialog.controls["statusname"].gfx:SetColour({r,g,b,1.0})
-						dialog.controls["statusname"].gfx:SetFont(gFontNameDefault)
+						dialog.controls["statusname"].gfx:SetFont(gFontDefs["Gump"].name)
 						dialog.controls["statusname"].gfx:SetText(m.name)
 					else
-						dialog.controls["statusname"].gfx:SetCharHeight(gFontGumpSize)
+						dialog.controls["statusname"].gfx:SetCharHeight(gFontDefs["Gump"].si=
ze)
 						dialog.controls["statusname"].gfx:SetColour({r,g,b,1.0})
-						dialog.controls["statusname"].gfx:SetFont(gFontNameDefault)
+						dialog.controls["statusname"].gfx:SetFont(gFontDefs["Gump"].name)
 						dialog.controls["statusname"].gfx:SetText("?")
 					end
 =


Modified: trunk/lua/gui/gui.trade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.trade.lua (original)
+++ trunk/lua/gui/gui.trade.lua Sat Jun  7 20:19:44 2008
@@ -82,9 +82,12 @@
 		if (i >=3D pageoff and i < pageoff + perpage) then
 			local y =3D 60 * (i - pageoff)
 			local itemmodel	=3D MakeArtGumpPart(  dialog.rootwidget,					good.itema=
rtid,25, 75 + y, 0, 0, 0, good.itemhue)
-			local it_name 	=3D guimaker.MakeText(dialog.rootwidget, 80, 75 + y,		go=
od.name				, gFontGumpSize, {1.0,1.0,1.0,1.0}, gFontNameDefault)
-			local it_price 	=3D guimaker.MakeText(dialog.rootwidget, 80, 75 + y + 1=
2,	good.price .. " Gold"	, gFontGumpSize, {1.0,1.0,1.0,1.0}, gFontNameDefau=
lt)
-			local avail 	=3D guimaker.MakeText(dialog.rootwidget,210, 75 + y,		good=
.itemamount - good.tradeamount , gFontGumpSize, {1.0,1.0,1.0,1.0}, gFontNam=
eDefault)
+			local it_name 	=3D guimaker.MakeText(dialog.rootwidget, 80, 75 + y,		go=
od.name,
+												gFontDefs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gump=
"].name)
+			local it_price 	=3D guimaker.MakeText(dialog.rootwidget, 80, 75 + y + 1=
2,	good.price .. " Gold",
+												gFontDefs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gump=
"].name)
+			local avail 	=3D guimaker.MakeText(dialog.rootwidget,210, 75 + y,		good=
.itemamount - good.tradeamount,
+												gFontDefs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gump=
"].name)
 			itemmodel.good =3D good
 			itemmodel.mbIgnoreMouseOver =3D false
 			itemmodel.onMouseDown =3D function (widget,mousebutton) if (mousebutton=
 =3D=3D 1) then widget.dialog.uoShop:AddToBill(widget.good,1) end end
@@ -124,8 +127,10 @@
 					=

 			local incr		=3D MakeGumpButton(	dialog.rootwidget, hex2num("0x37"), hex=
2num("0x37"), hex2num("0x37"), 170, 65 + y) =

 			local decr		=3D MakeGumpButton(	dialog.rootwidget, hex2num("0x38"), hex=
2num("0x38"), hex2num("0x38"), 195, 65 + y) =

-			local name		=3D guimaker.MakeText(dialog.rootwidget,70, 65 + y,good.nam=
e			,gFontGumpSize, {1.0,1.0,1.0,1.0}, gFontNameDefault) =

-			local amount	=3D guimaker.MakeText(dialog.rootwidget,30, 65 + y,good.tr=
adeamount	,gFontGumpSize, {1.0,1.0,1.0,1.0}, gFontNameDefault) =

+			local name		=3D guimaker.MakeText(dialog.rootwidget,70, 65 + y,good.nam=
e			,
+												gFontDefs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gump=
"].name)
+			local amount	=3D guimaker.MakeText(dialog.rootwidget,30, 65 + y,good.tr=
adeamount	,
+												gFontDefs["Gump"].size, gFontDefs["Gump"].col, gFontDefs["Gump=
"].name)
 	=

 			incr.good =3D good
 			decr.good =3D good
@@ -190,8 +195,10 @@
 	local browse_up2	=3D MakeGumpButton(		dialog_bill.rootwidget,hex2num("0x8=
24"), hex2num("0x824"), hex2num("0x824"),231, 49) =

 	local browse_down2	=3D MakeGumpButton(		dialog_bill.rootwidget,hex2num("0=
x825"), hex2num("0x825"), hex2num("0x825"),231,158)
 	local accept		=3D MakeGumpButton(		dialog_bill.rootwidget,hex2num("0x5c")=
 , hex2num("0x5c") , hex2num("0x5c") , 22,188)
-	dialog_bill.total	=3D guimaker.MakeText(	dialog_bill.rootwidget, 70, 173,=
"0",gFontGumpSize,{1.0,1.0,1.0,1.0}, nil, gFontNameDefault)
-	dialog_bill.gold 	=3D guimaker.MakeText(	dialog_bill.rootwidget,190, 173,=
GetPlayerGold(),gFontGumpSize,{1.0,1.0,1.0,1.0}, nil, gFontNameDefault)
+	dialog_bill.total	=3D guimaker.MakeText(	dialog_bill.rootwidget, 70, 173,=
"0",
+												gFontDefs["Gump"].size,gFontDefs["Gump"].col, gFontDefs["Gump"=
].name)
+	dialog_bill.gold 	=3D guimaker.MakeText(	dialog_bill.rootwidget,190, 173,=
GetPlayerGold(),
+												gFontDefs["Gump"].size,gFontDefs["Gump"].col, gFontDefs["Gump"=
].name)
 	browse_up2.onLeftClick		=3D function (widget) widget.dialog:PrevPage() end
 	browse_down2.onLeftClick	=3D function (widget) widget.dialog:NextPage() e=
nd
 	accept.onLeftClick			=3D function (widget) widget.dialog.uoShop:Accept() =
end

Modified: trunk/lua/lib.3d.combat.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.combat.lua (original)
+++ trunk/lua/lib.3d.combat.lua Sat Jun  7 20:19:44 2008
@@ -31,7 +31,7 @@
 	o.text =3D text
 	=

 	o.gfx =3D CreateRootGfx3D()
-	o.gfx:SetTextFont(gFontNameDefault)
+	o.gfx:SetTextFont(gFontDefs["Default"].name)
 	o.gfx:SetForceRotCam(GetMainCam())
 	o.gfx:SetText(text, size, r, g, b, a)
 	o.gfx:SetPosition(x,y,z)

Modified: trunk/lua/lib.3d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mobile.lua (original)
+++ trunk/lua/lib.3d.mobile.lua Sat Jun  7 20:19:44 2008
@@ -170,7 +170,7 @@
 					gHudNamesDialogLayer:SendToBack()
 				end
 				=

-				mobile.hudname =3D guimaker.MakeText(gHudNamesDialogLayer.panel,0,0, m=
obile.name, gHudNamesFontSize, col_text, gFontNameDefault)
+				mobile.hudname =3D guimaker.MakeText(gHudNamesDialogLayer.panel,0,0, m=
obile.name, gFontDefs["HudNames"].size, col_text, gFontDefs["HudNames"].nam=
e)
 				mobile.hudname.gfx:SetTrackPosSceneNode(mobile.headpos)
 =

 				mobile.hudname.gfx.mbTrackHideIfClamped =3D true
@@ -200,7 +200,7 @@
 		if (false) then
 			if (not mobile.nametext) then
 				mobile.nametext =3D CreateRootGfx3D()
-				mobile.nametext:SetTextFont(gFontNameDefault)
+				mobile.nametext:SetTextFont(gFontDefs["HudNames"].name)
 				mobile.nametext:SetForceRotCam(GetMainCam())
 				--local playermobile =3D GetPlayerMobile()
 				--if (playermobile and playermobile.gfx) then mobile.nametext:SetForce=
Lookat(playermobile.gfx) end
@@ -295,7 +295,7 @@
 			mobile.chattext_parent.gfx.mvTrackClampMax =3D {vw,vh}
 			=

 			-- and text child for relative position
-			mobile.chattext =3D guimaker.MakeText(mobile.chattext_parent,0,-20,"",g=
HudNamesFontSize,col_text)
+			mobile.chattext =3D guimaker.MakeText(mobile.chattext_parent,0,-20,"",g=
FontDefs["HudNames"].size,col_text)
 			mobile.chattext.gfx:SetTextAlignment(kGfx2DAlign_Center)
 		end
 		=

@@ -316,11 +316,11 @@
 			-- display the text
 			mobile.chattext.mLastText =3D mobile.mlastChatText
 			mobile.chattext.gfx:SetColour(r,g,b,a)
-			--mobile.chattext.gfx:SetFont(gUniFontLoaderType and gUniFontName[gChat=
Text_UniFontNumber] or gFontNameDefault)
-			--mobile.chattext.gfx:SetCharHeight(gUniFontHeight[gChatText_UniFontNum=
ber] or gFontChatSize)
-			=

-			mobile.chattext.gfx:SetFont(gFontNameDefault)
-			mobile.chattext.gfx:SetCharHeight(gFontSizeDefault)
+			--mobile.chattext.gfx:SetFont(gUniFontLoaderType and gUniFontName[gChat=
Text_UniFontNumber] or gFontDefs["HudNames"].name)
+			--mobile.chattext.gfx:SetCharHeight(gUniFontHeight[gChatText_UniFontNum=
ber] or gFontDefs["HudNames"].size)
+			=

+			mobile.chattext.gfx:SetFont(gFontDefs["HudNames"].name)
+			mobile.chattext.gfx:SetCharHeight(gFontDefs["HudNames"].size)
 			=

 			mobile.chattext.gfx:SetText(mobile.mlastChatText)
 			local w,h =3D mobile.chattext.gfx:GetTextBounds()

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat Jun  7 20:19:44 2008
@@ -329,8 +329,8 @@
 	gCurrentRenderer:Init()
 	=

 	-- set fadelines font
-	gFadeLinesFont =3D gFontNameDefault
-	gFadeLineTextH =3D gFontChatSize
+	gFadeLinesFont =3D gFontDefs["Chat"].name
+	gFadeLineTextH =3D gFontDefs["Chat"].size
 	gFadeLineH =3D gFadeLineTextH
 	gFadeLineOffY =3D 30 + gFadeLineTextH
 =


Modified: trunk/lua/net.popup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net.popup.lua (original)
+++ trunk/lua/net.popup.lua Sat Jun  7 20:19:44 2008
@@ -5,9 +5,6 @@
 =

 -- TODO : onclick : label_sethue(popup_list[index], 90);
 gDefaultPopupMenuStyle =3D kPopupStyle_UO_DEFAULT -- see lib.uoids.lua for=
 other options
---gDefaultPopupMenuTextColor =3D {0,0,0,1.0} -- black
-gDefaultPopupMenuTextColor =3D {1,1,1,1.0} -- white
-gDefaultPopupMenuTextColorHi =3D {0,1,0,1.0} -- green
 gPopupMenuSavedPosX,gPopupMenuSavedPosY =3D 0,0
 =

 --- global popup menu info, only one at a time should be displayed
@@ -139,11 +136,11 @@
 		local i =3D k - 1
 		entry.widget_text =3D guimaker.MakeText(dialog.rootwidget, entryoffx, en=
tryoffy + i * entryheight,
 												entry.text, entrytextsize,
-												gDefaultPopupMenuTextColor, gFontNameDefault) =

+												gFontDefs["PopUp"].col, gFontDefs["PopUp"].name) =

 		entry.widget_text.entry =3D entry
 		entry.widget_text.mbIgnoreMouseOver =3D false
-		entry.widget_text.onMouseEnter	=3D function (widget) widget.gfx:SetColou=
r(gDefaultPopupMenuTextColorHi) end
-		entry.widget_text.onMouseLeave	=3D function (widget) widget.gfx:SetColou=
r(gDefaultPopupMenuTextColor) end
+		entry.widget_text.onMouseEnter	=3D function (widget) widget.gfx:SetColou=
r(gFontDefs["PopUp"].colhi) end
+		entry.widget_text.onMouseLeave	=3D function (widget) widget.gfx:SetColou=
r(gFontDefs["PopUp"].col) end
 		entry.widget_text.onMouseDown 	=3D function (widget,mousebutton) =

 			if (mousebutton =3D=3D 1) then =

 				widget.entry.popupmenu:Choose(widget.entry.tag)

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Sat Jun  7 20:19:44 2008
@@ -557,13 +557,11 @@
 	=

 	-- brighten up the color
 	local h,s,v =3D ColorRGB2HSV(r,g,b)
-	v =3D math.min(1,v + gFontChatBrighten)
-	s =3D math.max(0,s - gFontChatBrighten/2)
+	v =3D math.min(1,v + gFontDefs["Chat"].brigth)
+	s =3D math.max(0,s - gFontDefs["Chat"].brigth/2)
 	r,g,b =3D ColorHSV2RGB(h,s,v)
 	=

 	printdebug("net",sprintf("NET: UnicodeText speakerid: %i name: %s txtsize=
: %i msg: %s\n",mobile_serial,unitext_name,(unitext_size-48)/2,unitext_mess=
age) )
-
-	-- print("### text",mobile_serial,unitext_type,unitext_name,unitext_messa=
ge)
 =

 	if show_below then =

 		AddFadeLines(unitext_name..": "..string.gsub(unitext_message,"<br>","\n"=
),{r,g,b,1}) -- TODO : unicode



From no-reply at zwischenwelt.org  Sun Jun  8 03:24:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 08 Jun 2008 01:24:55 -0000
Subject: [Iris-commit] [IRIS] r2234 - in /trunk/data/base/font:
 FreeMono.fontdef FreeMono.ttf FreeSans.ttf FreeSerif.ttf
Message-ID: <20080608012456.369AC1C180A0@zwischenwelt.org>

Author: sience
Date: Sun Jun  8 03:24:55 2008
New Revision: 2234

Log:
-some free fonts added

Added:
    trunk/data/base/font/FreeMono.fontdef
    trunk/data/base/font/FreeMono.ttf   (with props)
    trunk/data/base/font/FreeSans.ttf   (with props)
    trunk/data/base/font/FreeSerif.ttf   (with props)



From no-reply at zwischenwelt.org  Mon Jun  9 19:13:39 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 09 Jun 2008 17:13:39 -0000
Subject: [Iris-commit] [IRIS] r2235 - in /trunk/lua: filter/filter.art.lua
 lib.compass.lua lib.debugmenu.lua
Message-ID: <20080609180010.065A51C180EE@zwischenwelt.org>

Author: hagish
Date: Mon Jun  9 19:13:33 2008
New Revision: 2235

Log:
Art debug mode improved:
* -sd -artid 0xblabla possible (hex values)
* Export button added for easy blender import (exports into data/export). =

  Only works on *nix systems and need meshmagick (ogreaddons).
  You should use scripts/ogre_import.py for easier import.

Modified:
    trunk/lua/filter/filter.art.lua
    trunk/lua/lib.compass.lua
    trunk/lua/lib.debugmenu.lua

Modified: trunk/lua/filter/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/filter/filter.art.lua (original)
+++ trunk/lua/filter/filter.art.lua Mon Jun  9 19:13:33 2008
@@ -168,6 +168,9 @@
 gArtFilter[3255]=3D{maptoid=3D3253}
 gArtFilter[3256]=3D{maptoid=3D3253}
 gArtFilter[3261]=3D{maptoid=3D3253}
+
+-- sandstone
+gArtFilter[399]=3D{maptoid=3D398,rotation=3D"x:0,y:0,z:-90",xadd=3D-1.6,ya=
dd=3D0,zadd=3D0}
 =

 -- fern / farne
 gArtFilter[3233]=3D{maptoid=3D3232}

Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Mon Jun  9 19:13:33 2008
@@ -144,7 +144,7 @@
 function UpdateDetailMapCacheIfNeeded (xloc,yloc)
 	-- update detail multis if needed
 	if gDetailMultiNeedsUpdate and Client_GetTicks() - gDetailMultiLastUpdate=
 > gDetailMultiUpdateTimeout then
-		print("update compass detail multis...")
+		-- print("update compass detail multis...")
 		=

 		gDetailMultiNeedsUpdate =3D false
 		gDetailMultiLastUpdate =3D Client_GetTicks()

Modified: trunk/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.debugmenu.lua (original)
+++ trunk/lua/lib.debugmenu.lua Mon Jun  9 19:13:33 2008
@@ -695,7 +695,13 @@
 	if gCommandLineSwitches["-artid"] then
 		local id =3D gCommandLineArguments[gCommandLineSwitches["-artid"]+1]
 		gCurDebugMode =3D kDebugMode_Static
-		gDebugMenuModelIndex =3D id
+		if string.find(id,"x") then
+			-- hex value given
+			gDebugMenuModelIndex =3D hex2num(id)
+		else
+			-- decimal value given
+			gDebugMenuModelIndex =3D id
+		end
 	end
 =

 	--CrashSegFault() -- testing =3DD
@@ -856,6 +862,55 @@
 	Renderer3D:CamStep()
 end
 =

+function DebugExportModel	(id)
+	print("export model and textures",artid,"to data/export")
+
+	local base =3D id - math.mod(id,1000) + 1000
+	local relpath  =3D sprintf("models/to_%06d/",base)
+	local mdlname =3D GetModelName(id)
+	local mdl =3D datapath.."models/"..relpath..mdlname
+	local export =3D datapath.."export/"
+	=

+	local xmlfile =3D export..mdlname..".xml"
+
+	if not file_exists(mdl) then
+		print("model file not found")
+		return
+	end
+	=

+	local expmdl =3D export..mdlname
+
+	-- try to rotate and adjust blender like, only possible if meshmagick is =
installed (unix)
+	os.execute("cp '"..mdl.."' '"..expmdl.."'")
+	os.execute("meshmagick transform -rotate=3D90/1/0/0 '"..expmdl.."'")
+	os.execute("meshmagick transform -scale=3D10/-10/10 '"..expmdl.."'")
+	os.execute("meshmagick transform -rotate=3D90/0/1/0 '"..expmdl.."'")
+
+	-- create xml file
+	print("OgreXMLConverter '"..expmdl.."' '"..xmlfile.."'")
+	os.execute("OgreXMLConverter '"..expmdl.."' '"..xmlfile.."'")
+	=

+	if not file_exists(xmlfile) then
+		print("xml model file not found")
+		return
+	end
+
+	-- copy material file
+	os.execute("cp '"..datapath.."models/materials/textures.material' '"..dat=
apath.."export'")
+
+	-- try to find used textures
+	if file_exists(xmlfile) then
+		for line in io.lines(xmlfile) do
+			for name in string.gmatch(line, 'material=3D"([^"]+)"') do
+				local texfile =3D datapath.."models/textures/"..name..".png"
+				if file_exists(texfile) then
+					print("cp '"..texfile.."' '"..export.."'")
+					os.execute("cp '"..texfile.."' '"..export.."'")
+				end
+			end
+		end
+	end
+end
 =

 function DebugMenuJumpToArtID (iArtID) =

 	gCurDebugMode =3D kDebugMode_Static
@@ -1041,6 +1096,12 @@
 				end
 			}, =

 		},
+		{
+			{type=3D"Button",text=3D"Export",onMouseDown=3Dfunction (widget)
+					DebugExportModel(gDebugMenuModelIndex)
+				end
+			}, =

+		}
 	}	--end rows
 =

 --	local vw,vh =3D GetViewportSize()



From no-reply at zwischenwelt.org  Mon Jun  9 19:23:59 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 09 Jun 2008 17:23:59 -0000
Subject: [Iris-commit] [IRIS] r2237 - in /trunk: data/guis/
 data/mymacros.lua.dist lua/gui/gui.hotbar.lua lua/gui/gui.main.lua
 lua/lib.keybinds.lua lua/lib.macrolist.lua lua/lib.mainmenu.lua
 lua/main.lua
Message-ID: <20080609180014.BBA751C1825A@zwischenwelt.org>

Author: sience
Date: Mon Jun  9 19:23:57 2008
New Revision: 2237

Log:
-old hotbar test removed (during cleanup of iris2)

Removed:
    trunk/data/guis/
    trunk/lua/gui/gui.hotbar.lua
Modified:
    trunk/data/mymacros.lua.dist
    trunk/lua/gui/gui.main.lua
    trunk/lua/lib.keybinds.lua
    trunk/lua/lib.macrolist.lua
    trunk/lua/lib.mainmenu.lua
    trunk/lua/main.lua

Modified: trunk/data/mymacros.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/mymacros.lua.dist (original)
+++ trunk/data/mymacros.lua.dist Mon Jun  9 19:23:57 2008
@@ -35,7 +35,6 @@
 -- SetMacro("ctrl+h",	function() MacroCmd_Spell("Heal") end)
 -- SetMacro("ctrl+a",	function() MacroCmd_Skill("Anatomy") end)
 =

-SetMacro("ctrl+b",		function() MacroCmd_Open("Hotbar") end)
 SetMacro("l",			function() MacroCmd_Open("Logo") end)
 SetMacro("n",			function() MacroCmd_Open("Compass") end)
 SetMacro("tab",			function() MacroCmd_ToggleWarmode() end)

Modified: trunk/lua/gui/gui.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.main.lua (original)
+++ trunk/lua/gui/gui.main.lua Mon Jun  9 19:23:57 2008
@@ -7,7 +7,6 @@
 dofile(libpath .. "gui/gui.quit.lua")
 dofile(libpath .. "gui/gui.status.lua")
 dofile(libpath .. "gui/gui.styles.lua")
-dofile(libpath .. "gui/gui.hotbar.lua")
 dofile(libpath .. "gui/gui.healthbar.lua")
 dofile(libpath .. "gui/gui.securetrade.lua")
 dofile(libpath .. "gui/gui.skill.lua")

Modified: trunk/lua/lib.keybinds.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.keybinds.lua (original)
+++ trunk/lua/lib.keybinds.lua Mon Jun  9 19:23:57 2008
@@ -85,7 +85,7 @@
 	=

 	-------------------------------------------------------------------------=
----------
 =

-	if (false) then
+	if (true) then
 		Bind("f7",		function (state) if (not gActiveEditText) then if (state > 0=
) then
 			if (gAmbientLight.r < 1.0) then
 				gAmbientLight.r=3DgAmbientLight.r+0.1

Modified: trunk/lua/lib.macrolist.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.macrolist.lua (original)
+++ trunk/lua/lib.macrolist.lua Mon Jun  9 19:23:57 2008
@@ -16,7 +16,6 @@
 gMacroOpenCommands.Paperdoll		=3D function()	TogglePlayerPaperdoll()		end
 gMacroOpenCommands.Compass			=3D function()	ToggleCompass()				end
 gMacroOpenCommands.Logo				=3D function()	ToggleLogo()				end
-gMacroOpenCommands.Hotbar			=3D function()	ToggleHotbar ()				end
 =

 gMacroItemSlots =3D {}
 gMacroReadMobileStats =3D {}

Modified: trunk/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.mainmenu.lua (original)
+++ trunk/lua/lib.mainmenu.lua Mon Jun  9 19:23:57 2008
@@ -363,6 +363,11 @@
 		StopMainMenu()
 	end
 =

+--	local command =3D "/masterserver.php?query"
+--	local res, reponse =3D HTTPGetEx("localhost",80,command)
+--	print(res)
+--	print(reponse)
+
 	for shardname,shard in pairs(gShardList) do
 		table.insert(rows,{ {type=3D"Button",	onLeftClick=3Dfun,shard=3Dshard,sh=
ardname=3Dshardname,text=3DGetShardButtonText(shard,shardname)} })
 	end

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Mon Jun  9 19:23:57 2008
@@ -181,10 +181,6 @@
 	OgreAddResLoc(mydatapath.."particles/textures"			,"FileSystem","General")
 	OgreAddResLoc(mydatapath.."compositors"					,"FileSystem","General")
 =

-	--~ # custom guis
-	OgreAddResLoc(mydatapath.."guis/gorgui"					,"FileSystem","General")
-	OgreAddResLoc(mydatapath.."guis/naked"					,"FileSystem","General")
-
 	--~ # custom materials
 	OgreAddResLoc(mydatapath.."custom/materials"			,"FileSystem","General")
 =




From no-reply at zwischenwelt.org  Mon Jun  9 19:15:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 09 Jun 2008 17:15:31 -0000
Subject: [Iris-commit] [IRIS] r2236 - in /trunk: data/export/
	scripts/ogre_import.py
Message-ID: <20080609180011.DDE821C18247@zwischenwelt.org>

Author: hagish
Date: Mon Jun  9 19:15:31 2008
New Revision: 2236

Log:
forgot to add

Added:
    trunk/data/export/
    trunk/scripts/ogre_import.py



From no-reply at zwischenwelt.org  Mon Jun  9 22:26:12 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 09 Jun 2008 20:26:12 -0000
Subject: [Iris-commit] [IRIS] r2238 - /trunk/bin/iris2.exe
Message-ID: <20080609202613.0DDFB1C1825A@zwischenwelt.org>

Author: sience
Date: Mon Jun  9 22:26:12 2008
New Revision: 2238

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Wed Jun 11 12:12:43 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 11 Jun 2008 10:12:43 -0000
Subject: [Iris-commit] [IRIS] r2239 - /trunk/lua/lib.debugmenu.lua
Message-ID: <20080611101243.96BDB1C18031@zwischenwelt.org>

Author: hagish
Date: Wed Jun 11 12:12:41 2008
New Revision: 2239

Log:
improved art debug mode

Modified:
    trunk/lua/lib.debugmenu.lua

Modified: trunk/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.debugmenu.lua (original)
+++ trunk/lua/lib.debugmenu.lua Wed Jun 11 12:12:41 2008
@@ -589,11 +589,12 @@
 function DebugMenuShowModel ()
 	local index =3D gDebugMenuModelIndex
 =

-	if (gDebugBodyGfx) then gDebugBodyGfx:Destroy() end
 	if (gDebugRootGfx) then gDebugRootGfx:Destroy() gDebugRootGfx =3D nil end
 	if (gDebugRootGfx2) then gDebugRootGfx2:Destroy() gDebugRootGfx2 =3D nil =
end
+	if (gDebugRootGfx3) then gDebugRootGfx3:Destroy() gDebugRootGfx3 =3D nil =
end
 	gDebugRootGfx =3D CreateRootGfx3D()
 	gDebugRootGfx2 =3D CreateRootGfx3D()
+	gDebugRootGfx3 =3D CreateRootGfx3D()
 	=

 	-- granny =

 	if (gCurDebugMode =3D=3D kDebugMode_Granny) then
@@ -646,9 +647,14 @@
 	=

 	gDebugRootGfx:SetVisible(true)
 	local x,y,z =3D unpack(gDebugMenuMainGfxPos)
-	gDebugRootGfx:SetPosition(x + xadd,y + yadd,z + zadd)
+	gDebugRootGfx:SetPosition(x - xadd,y + yadd,z + zadd)
+	=

 	gDebugRootGfx2:SetVisible(true)
 	gDebugRootGfx2:SetPosition(3,0.5,-0.15)
+	=

+	Renderer3D:CreateArtBillBoard(gDebugRootGfx3,0,0,true)--0,0,true)
+	gDebugRootGfx3:SetVisible(true)
+	gDebugRootGfx3:SetPosition(3,0.5,-0.15)
 end
 =

 function DebugMenuSetParam1	(value) =

@@ -702,6 +708,12 @@
 			-- decimal value given
 			gDebugMenuModelIndex =3D id
 		end
+		=

+		if gCommandLineSwitches["-export"] then
+			-- just export the current model and close the client
+			DebugExportModel(gDebugMenuModelIndex)
+			Terminate()
+		end
 	end
 =

 	--CrashSegFault() -- testing =3DD
@@ -730,7 +742,7 @@
 		local mygfx =3D gDebugGridGfx
 		mygfx:SetSimpleRenderable()
 		mygfx:SetMaterial("debug_grid_3D")
-		mygfx:RenderableBegin(2 + 4*9 + 4,2 + 4*9 + 8,false,false,OT_LINE_LIST)
+		mygfx:RenderableBegin(2 + 4*9 + 4 + 4 + 4,2 + 4*9 + 8 + 8 + 8 + 8,false,=
false,OT_LINE_LIST)
 		local x,y,z =3D -1,1,2
 		local g =3D 8
 		mygfx:RenderableVertex(0,0,0, 1,1,1,1)
@@ -747,15 +759,45 @@
 		end
 =

 		local i =3D 38
-		mygfx:RenderableVertex(0,0,0.01, 1,0,0,1)
-		mygfx:RenderableVertex(-1,0,0.01, 1,0,0,1)
-		mygfx:RenderableVertex(-1,1,0.01, 1,0,0,1)
-		mygfx:RenderableVertex(0,1,0.01, 1,0,0,1)
+		local h1 =3D 1
+		local h2 =3D 2
+		local d =3D 0.01
+		-- red box
+		=

+		mygfx:RenderableVertex(d,-d,d, 1,0,0,1)	-- 0
+		mygfx:RenderableVertex(-1-d,-d,d, 1,0,0,1)	-- 1
+		mygfx:RenderableVertex(-1-d,1+d,d, 1,0,0,1)	-- 2
+		mygfx:RenderableVertex(d,1+d,d, 1,0,0,1)	-- 3
+
+		mygfx:RenderableVertex(d,-d,d+h2, 1,0,0,1)	-- 4
+		mygfx:RenderableVertex(-1-d,-d,d+h2, 1,0,0,1)	-- 5
+		mygfx:RenderableVertex(-1-d,1+d,d+h2, 1,0,0,1)	-- 6
+		mygfx:RenderableVertex(d,1+d,d+h2, 1,0,0,1)	-- 7
+
+		mygfx:RenderableVertex(d,-d,d+h1, 1,0,0,1)	-- 8
+		mygfx:RenderableVertex(-1-d,-d,d+h1, 1,0,0,1)	-- 9
+		mygfx:RenderableVertex(-1-d,1+d,d+h1, 1,0,0,1)	-- 10
+		mygfx:RenderableVertex(d,1+d,d+h1, 1,0,0,1)	-- 11
 =

 		mygfx:RenderableIndex2(i + 0, i + 1)
 		mygfx:RenderableIndex2(i + 1, i + 2)
 		mygfx:RenderableIndex2(i + 2, i + 3)
 		mygfx:RenderableIndex2(i + 3, i + 0)
+
+		mygfx:RenderableIndex2(i + 4+0, i + 4+1)
+		mygfx:RenderableIndex2(i + 4+1, i + 4+2)
+		mygfx:RenderableIndex2(i + 4+2, i + 4+3)
+		mygfx:RenderableIndex2(i + 4+3, i + 4+0)
+
+		mygfx:RenderableIndex2(i + 0, i + 4)
+		mygfx:RenderableIndex2(i + 1, i + 5)
+		mygfx:RenderableIndex2(i + 2, i + 6)
+		mygfx:RenderableIndex2(i + 3, i + 7)
+
+		mygfx:RenderableIndex2(i + 8, i + 9)
+		mygfx:RenderableIndex2(i + 9, i + 10)
+		mygfx:RenderableIndex2(i + 10, i + 11)
+		mygfx:RenderableIndex2(i + 11, i + 8)
 =

 		mygfx:RenderableEnd()
 	end
@@ -862,7 +904,20 @@
 	Renderer3D:CamStep()
 end
 =

+function DebugDeleteModel	(id)
+	local base =3D id - math.mod(id,1000) + 1000
+	local relpath  =3D sprintf("models/to_%06d/",base)
+	local mdlname =3D GetModelName(id)
+	local mdl =3D datapath.."models/"..relpath..mdlname
+	=

+	print("removing model: "..mdl)
+	=

+	os.execute("svn rm '"..mdl.."'")	=

+	os.execute("rm '"..mdl.."'")	=

+end
+
 function DebugExportModel	(id)
+	print("###############################")
 	print("export model and textures",artid,"to data/export")
 =

 	local base =3D id - math.mod(id,1000) + 1000
@@ -910,6 +965,7 @@
 			end
 		end
 	end
+	print("###############################")
 end
 =

 function DebugMenuJumpToArtID (iArtID) =

@@ -1097,6 +1153,12 @@
 			}, =

 		},
 		{
+			{type=3D"Button",text=3D"Delete",onMouseDown=3Dfunction (widget)
+					DebugDeleteModel(gDebugMenuModelIndex)
+				end
+			}, =

+		},
+		{
 			{type=3D"Button",text=3D"Export",onMouseDown=3Dfunction (widget)
 					DebugExportModel(gDebugMenuModelIndex)
 				end



From no-reply at zwischenwelt.org  Wed Jun 11 13:34:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 11 Jun 2008 11:34:55 -0000
Subject: [Iris-commit] [IRIS] r2240 - in /trunk:
 data/base/uo_tile_debug_box.png lua/lib.3d.dynamic.lua
 lua/lib.debugmenu.lua
Message-ID: <20080611113455.3AD1E1C1802D@zwischenwelt.org>

Author: hagish
Date: Wed Jun 11 13:34:55 2008
New Revision: 2240

Log:
improved art debug mode

Added:
    trunk/data/base/uo_tile_debug_box.png   (with props)
Modified:
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.debugmenu.lua

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Wed Jun 11 13:34:55 2008
@@ -509,31 +509,66 @@
 ]]--
 =

 gArtBillBoardCache =3D {}
-function Renderer3D:CreateArtBillBoard( gfx, iArtID, iHue )
-	if (iArtID > gMaxArtValue) then return end
+function Renderer3D:CreateArtBillBoard( gfx, iArtID, iHue, bShowDebugBoxIn=
stead )
+	bShowDebugBoxInstead =3D bShowDebugBoxInstead or false
+
+	if (iArtID > gMaxArtValue and not bShowDebugBoxInstead) then return end
 =

 	local isotilew =3D 44 / math.sqrt(2)
 	=

 	local matname,l,t,r,b,w,h
 	=

-	-- caching
-	if gArtBillBoardCache[iArtID.."_"..iHue] then =

-		matname,l,t,r,b,w,h =3D unpack(gArtBillBoardCache[iArtID.."_"..iHue])
+	local key =3D iArtID.."_"..iHue
+	if bShowDebugBoxInstead then key =3D "debugbox" end
+	=

+	if bShowDebugBoxInstead then
+		-- show debug image instead
+		if gArtBillBoardCache[key] then =

+			matname,l,t,r,b,w,h =3D unpack(gArtBillBoardCache[key])
+		else
+			matname =3D GetPlainTextureMat("uo_tile_debug_box.png", true)
+			=

+			SetTextureAddressingMode( matname, TAM_CLAMP )
+			SetTextureFiltering( matname, TFO_NONE)
+			-- SetSceneBlending( matname, SBT_ADD )
+			SetHardwareCulling( matname, 0,0,0 )
+			SetSoftwareCulling( matname, 0,0,0 )
+			=

+			if matname then
+				w,h =3D 44,123
+				if (not w or w =3D=3D 0) then w =3D isotilew end
+				if (not h or h =3D=3D 0) then h =3D isotilew end
+
+				l =3D 0*w/texsize(w)
+				r =3D 1*w/texsize(w)
+				t =3D 0*w/texsize(h)
+				b =3D h/texsize(h)
+				gArtBillBoardCache[key] =3D {matname,l,t,r,b,w,h}
+			else
+				gArtBillBoardCache[key] =3D {nil}
+			end
+		end
 	else
-		matname =3D GetArtBillBoardMat(iArtID,iHue)
-		=

-		if matname then
-			w,h =3D GetArtSize(iArtID,iHue)
-			if (not w or w =3D=3D 0) then w =3D isotilew end
-			if (not h or h =3D=3D 0) then h =3D isotilew end
-
-			l =3D 0*w/texsize(w)
-			r =3D 1*w/texsize(w)
-			t =3D 0*w/texsize(h)
-			b =3D h/texsize(h)
-			gArtBillBoardCache[iArtID.."_"..iHue] =3D {matname,l,t,r,b,w,h}
+		-- normal art display
+		-- caching
+		if gArtBillBoardCache[key] then =

+			matname,l,t,r,b,w,h =3D unpack(gArtBillBoardCache[key])
 		else
-			gArtBillBoardCache[iArtID.."_"..iHue] =3D {nil}
+			matname =3D GetArtBillBoardMat(iArtID,iHue)
+			=

+			if matname then
+				w,h =3D GetArtSize(iArtID,iHue)
+				if (not w or w =3D=3D 0) then w =3D isotilew end
+				if (not h or h =3D=3D 0) then h =3D isotilew end
+
+				l =3D 0*w/texsize(w)
+				r =3D 1*w/texsize(w)
+				t =3D 0*w/texsize(h)
+				b =3D h/texsize(h)
+				gArtBillBoardCache[key] =3D {matname,l,t,r,b,w,h}
+			else
+				gArtBillBoardCache[key] =3D {nil}
+			end
 		end
 	end
 	=

@@ -544,7 +579,7 @@
 		gfx:SetMaterial(matname)
 		gfx:SetCastShadows(false)
 		=

-		if IsGroundPlate(iArtID - 0x4000) then
+		if not bShowDebugBoxInstead and IsGroundPlate(iArtID - 0x4000) then
 			-- ground plate fallback
 			local tw =3D 0.5*w/texsize(w)
 			local th =3D 0.5*h/texsize(h)

Modified: trunk/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.debugmenu.lua (original)
+++ trunk/lua/lib.debugmenu.lua Wed Jun 11 13:34:55 2008
@@ -643,6 +643,10 @@
 			xadd,yadd,zadd =3D FilterPositionXYZ(iTileType)
 		end
 		Renderer3D:CreateArtBillBoard(gDebugRootGfx2,iTileType+0x4000,iHue)
+		=

+		Renderer3D:CreateArtBillBoard(gDebugRootGfx3,0,0,true)--0,0,true)
+		gDebugRootGfx3:SetVisible(true)
+		gDebugRootGfx3:SetPosition(3,0.5,-0.15)
 	end
 	=

 	gDebugRootGfx:SetVisible(true)
@@ -651,10 +655,6 @@
 	=

 	gDebugRootGfx2:SetVisible(true)
 	gDebugRootGfx2:SetPosition(3,0.5,-0.15)
-	=

-	Renderer3D:CreateArtBillBoard(gDebugRootGfx3,0,0,true)--0,0,true)
-	gDebugRootGfx3:SetVisible(true)
-	gDebugRootGfx3:SetPosition(3,0.5,-0.15)
 end
 =

 function DebugMenuSetParam1	(value) =




From no-reply at zwischenwelt.org  Wed Jun 11 19:52:12 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 11 Jun 2008 17:52:12 -0000
Subject: [Iris-commit] [IRIS] r2241 - in /trunk: bin/iris2.exe
	lua/lib.3d.dynamic.lua
Message-ID: <20080611175213.C06E01524030@zwischenwelt.org>

Author: sience
Date: Wed Jun 11 19:52:04 2008
New Revision: 2241

Log:
-small fix to make 2d bbox transparent (was black)
-new win32 binary

Modified:
    trunk/bin/iris2.exe
    trunk/lua/lib.3d.dynamic.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Wed Jun 11 19:52:04 2008
@@ -526,7 +526,8 @@
 		if gArtBillBoardCache[key] then =

 			matname,l,t,r,b,w,h =3D unpack(gArtBillBoardCache[key])
 		else
-			matname =3D GetPlainTextureMat("uo_tile_debug_box.png", true)
+			local matname =3D CloneMaterial("renderer2dbillboard")
+			SetTexture(matname,"uo_tile_debug_box.png") =

 			=

 			SetTextureAddressingMode( matname, TAM_CLAMP )
 			SetTextureFiltering( matname, TFO_NONE)



From no-reply at zwischenwelt.org  Sat Jun 14 03:59:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 14 Jun 2008 01:59:51 -0000
Subject: [Iris-commit] [IRIS] r2242 - in /trunk/data/models:
 materials/textures.material models/to_008000/mdl_007135.mesh
 textures/tex_sunrice_wood.png
Message-ID: <20080614015951.E26F51C180E9@zwischenwelt.org>

Author: hagish
Date: Sat Jun 14 03:59:50 2008
New Revision: 2242

Log:
added one model by sunrice: wood

Added:
    trunk/data/models/models/to_008000/mdl_007135.mesh   (with props)
    trunk/data/models/textures/tex_sunrice_wood.png   (with props)
Modified:
    trunk/data/models/materials/textures.material

Modified: trunk/data/models/materials/textures.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/models/materials/textures.material (original)
+++ trunk/data/models/materials/textures.material Sat Jun 14 03:59:50 2008
@@ -5985,6 +5985,20 @@
 	} =

 }
 =

+material tex_sunrice_wood : tex_base
+{ =

+	technique =

+	{ =

+		pass =

+		{		=

+			texture_unit =

+			{ =

+				texture tex_sunrice_wood.png =

+			}	=

+		}
+	} =

+}
+
 material cedar_bark : tex_base
 {
 	technique



From no-reply at zwischenwelt.org  Sun Jun 15 12:46:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 15 Jun 2008 10:46:55 -0000
Subject: [Iris-commit] [IRIS] r2243 -
	/trunk/data/models/models/to_001000/mdl_000669.mesh
Message-ID: <20080615104658.C47351C18141@zwischenwelt.org>

Author: sience
Date: Sun Jun 15 12:46:54 2008
New Revision: 2243

Log:
-model fixed (wrong vertexes and textures)

Modified:
    trunk/data/models/models/to_001000/mdl_000669.mesh

Modified: trunk/data/models/models/to_001000/mdl_000669.mesh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sun Jun 15 15:32:23 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 15 Jun 2008 13:32:23 -0000
Subject: [Iris-commit] [IRIS] r2244 - in /trunk/lua: lib.compass.lua
 lib.debugmenu.lua lib.keybinds.lua
Message-ID: <20080615133223.A0C571C18141@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 15 15:32:22 2008
New Revision: 2244

Log:
compass optimized vram flags (dynamic), doubleclick interval override remov=
ed (too slow), debug menu : bladespirit id

Modified:
    trunk/lua/lib.compass.lua
    trunk/lua/lib.debugmenu.lua
    trunk/lua/lib.keybinds.lua

Modified: trunk/lua/lib.compass.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.compass.lua (original)
+++ trunk/lua/lib.compass.lua Sun Jun 15 15:32:22 2008
@@ -564,7 +564,7 @@
 			local count =3D countarr(l) + countarr(gPositionMarkers[gCompassMapInde=
x] or {})
 			=

 			local mygfx =3D gIrisCompassDialog.mapdot.gfx
-			mygfx:RenderableBegin(4 * count,6 * count,false,false,OT_TRIANGLE_LIST)
+			mygfx:RenderableBegin(4 * count,6 * count,true,false,OT_TRIANGLE_LIST)
 =

 			local halfwidth =3D 3
 			=


Modified: trunk/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.debugmenu.lua (original)
+++ trunk/lua/lib.debugmenu.lua Sun Jun 15 15:32:22 2008
@@ -41,6 +41,7 @@
 =

 =

 gDebugMenuModelTable =3D {
+	{artid=3D0x023e , content=3D{}}, -- bladespirit , effect/animation not us=
ed (granny format)
 	{artid=3D0x25d , content=3D{}}, -- another human male			-- maybe samurai/=
elven scale ??
 	{artid=3D0x25e , content=3D{}}, -- another human female			-- maybe samura=
i/elven scale ??
 	{artid=3D0x25f , content=3D{}}, -- another human male			-- maybe samurai/=
elven scale ??

Modified: trunk/lua/lib.keybinds.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.keybinds.lua (original)
+++ trunk/lua/lib.keybinds.lua Sun Jun 15 15:32:22 2008
@@ -1,4 +1,4 @@
-gDoubleClickIntervall =3D 800 -- override lugre default interval
+--~ gDoubleClickIntervall =3D 800 -- override lugre default interval
 =

 function BindGeneralKeys ()
 	Bind("f11", function (state) =




From no-reply at zwischenwelt.org  Sun Jun 15 20:39:30 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 15 Jun 2008 18:39:30 -0000
Subject: [Iris-commit] [IRIS] r2245 - in /trunk: bin/iris2.exe
	vc8/iris.vcproj
Message-ID: <20080615183930.C05F31C180E2@zwischenwelt.org>

Author: sience
Date: Sun Jun 15 20:39:30 2008
New Revision: 2245

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe
    trunk/vc8/iris.vcproj

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Sun Jun 15 20:39:30 2008
@@ -120,11 +120,11 @@
 				Name=3D"VCCLCompilerTool"
 				UseUnicodeResponseFiles=3D"false"
 				Optimization=3D"4"
-				InlineFunctionExpansion=3D"1"
+				InlineFunctionExpansion=3D"0"
 				EnableIntrinsicFunctions=3D"true"
 				FavorSizeOrSpeed=3D"1"
-				OmitFramePointers=3D"true"
-				EnableFiberSafeOptimizations=3D"false"
+				OmitFramePointers=3D"false"
+				EnableFiberSafeOptimizations=3D"true"
 				WholeProgramOptimization=3D"true"
 				AdditionalIncludeDirectories=3D"&quot;$(INCLUDE)&quot;;&quot;C:\Progra=
mme\Microsoft SDKs\Windows\v6.1\Include\&quot;;&quot;$(OGRE_HOME)\include\&=
quot;;&quot;$(OGRE_HOME)\include\OIS\&quot;;..\include\;..\include\zlib;..\=
lugre\include;..\include\fmodx;&quot;..\lugre\lib\lua-5.1.3\src\&quot;;..\l=
ugre\lib\md5\include;..\lugre\lib\cadune_tree\include;..\lugre\lib\paged_ge=
ometry\include;..\lugre\lib\caelum\include;c:\Programme\boost\boost_1_34_1\"
 				PreprocessorDefinitions=3D"WIN32;NDEBUG;_WINDOWS;MAIN_WORKING_DIR=3D\&=
quot;../\&quot;;USE_FMOD;USE_LUGRE_LIB_MD5;USE_LUGRE_LIB_CADUNE_TREE;USE_LU=
GRE_LIB_CAELUM"



From no-reply at zwischenwelt.org  Mon Jun 16 00:58:23 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 15 Jun 2008 22:58:23 -0000
Subject: [Iris-commit] [IRIS] r2246 - in /trunk: data/base/main.material
 data/config.lua.dist lua/gui/gui.helper.lua lua/lib.3d.dynamic.lua
 lua/lib.3d.mousepick.lua lua/lib.artatlas.lua lua/lib.static.lua
Message-ID: <20080615225825.683981C18141@zwischenwelt.org>

Author: hagish
Date: Mon Jun 16 00:58:19 2008
New Revision: 2246

Log:
*static fallbacks to reduce number of batches
*bugfix: multi mousepicking


Modified:
    trunk/data/base/main.material
    trunk/data/config.lua.dist
    trunk/lua/gui/gui.helper.lua
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.mousepick.lua
    trunk/lua/lib.artatlas.lua
    trunk/lua/lib.static.lua

Modified: trunk/data/base/main.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/base/main.material (original)
+++ trunk/data/base/main.material Mon Jun 16 00:58:19 2008
@@ -389,6 +389,9 @@
 	{
 		pass
 		{
+			cull_hardware none
+			cull_software none
+
 			scene_blend alpha_blend
 			// alpha_rejection less 128
 			alpha_rejection greater 128

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Mon Jun 16 00:58:19 2008
@@ -504,3 +504,5 @@
 =

 -- experimental code for faster diagonal movement (tries to avoid stair ef=
fect)
 gTileFreeWalkDiagonalOptimization =3D false
+
+gUseStaticFallbacks =3D true

Modified: trunk/lua/gui/gui.helper.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.helper.lua (original)
+++ trunk/lua/gui/gui.helper.lua Mon Jun 16 00:58:19 2008
@@ -6,7 +6,7 @@
 		local mem_dyn, mem_tresh =3D gcinfo()
 		mem_dyn =3D mem_dyn or 0
 		mem_tresh =3D mem_tresh or 0
-		local text =3D sprintf("%5.1ffps %0.1fmb %dt %db OGRE | %0.fmb/%0.1fmb L=
UA",OgreAvgFPS(),memoryusage / 1024 / 1024, OgreTriangleCount(), OgreBatchC=
ount(), mem_dyn / 1024, mem_tresh / 1024)
+		local text =3D sprintf("%5.1ffps %0.1fmb %dt %db OGRE | %0.fmb/%0.1fmb L=
UA | %i jobs",OgreAvgFPS(),memoryusage / 1024 / 1024, OgreTriangleCount(), =
OgreBatchCount(), mem_dyn / 1024, mem_tresh / 1024, job.count())
 		if (not gMemoryUsageField) then
 			local vw,vh =3D GetViewportSize()
 			local w,h =3D 0,12

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Mon Jun 16 00:58:19 2008
@@ -37,43 +37,52 @@
 =

 		Renderer3D.gFastBatchDynamicsUpdateNeeded =3D false
 	=

+		local cxloc,cyloc =3D self:GetLookAheadCamPos()
+		local cbx,cby =3D math.floor(cxloc/8 - 0.5),math.floor(cyloc/8 - 0.5)
+
 		Array2DForAll(Renderer3D.gFastBatchDynamicsMap, function(v,bx,by)
 			if v.mbUpdateNeeded then
-				-- on demand create
-				if not v.mFastBatch then
-					v.mFastBatch =3D CreateRootGfx3D()
-				end				=

-				-- clear
-				v.mFastBatch:SetFastBatch()
-				=

-				local x,y,z
-				local qw,qx,qy,qz
-				-- add dynamics
-				local count =3D 0
-
-				for k,dynamic in pairs(v.mlDynamic) do
-					if (dynamic.meshname and DynamicIsInWorld(dynamic)) then
-						count =3D count + 1
-						x,y,z =3D Renderer3D:UOPosToLocal(dynamic.xloc + dynamic.xadd,dynami=
c.yloc + dynamic.yadd,dynamic.zloc * 0.1 + dynamic.zadd) =

-						qw,qx,qy,qz =3D GetStaticMeshOrientation(dynamic.artid)
-
-						local r,g,b,a =3D 1,1,1,1
-						if (gHueLoader and dynamic.hue > 0) then
-							r,g,b =3D gHueLoader:GetColor(dynamic.hue - 1,31) -- get first color
-						end
-
-						local orderval =3D dynamic.zloc -- used for blendout later (fastbatc=
h feature)
-						v.mFastBatch:FastBatch_AddMeshBuffer(GetMeshBuffer(dynamic.meshname)=
, orderval, x,y,z, qw,qx,qy,qz, -1,1,1, r,g,b,a)
-						-- print("->",bx,by,dynamic.serial)
-					end
-				end
-
-				v.mFastBatch:SetCastShadows(gDynamicsCastShadows)
-				=

 				-- unset dirty flag
 				v.mbUpdateNeeded =3D false
-
-				v.mFastBatch:FastBatch_Build()
+				=

+				local prio =3D 1 + 100 / (math.abs(bx-cbx)+math.abs(by-cby))
+				=

+				job.create(function()
+					-- print("## update dynamic block",bx,by,prio)
+
+					-- on demand create
+					if not v.mFastBatch then
+						v.mFastBatch =3D CreateRootGfx3D()
+					end				=

+					-- clear
+					v.mFastBatch:SetFastBatch()
+					=

+					local x,y,z
+					local qw,qx,qy,qz
+					-- add dynamics
+					local count =3D 0
+
+					for k,dynamic in pairs(v.mlDynamic) do
+						if (dynamic.meshname and DynamicIsInWorld(dynamic)) then
+							count =3D count + 1
+							x,y,z =3D Renderer3D:UOPosToLocal(dynamic.xloc + dynamic.xadd,dynam=
ic.yloc + dynamic.yadd,dynamic.zloc * 0.1 + dynamic.zadd) =

+							qw,qx,qy,qz =3D GetStaticMeshOrientation(dynamic.artid)
+
+							local r,g,b,a =3D 1,1,1,1
+							if (gHueLoader and dynamic.hue > 0) then
+								r,g,b =3D gHueLoader:GetColor(dynamic.hue - 1,31) -- get first col=
or
+							end
+
+							local orderval =3D dynamic.zloc -- used for blendout later (fastbat=
ch feature)
+							v.mFastBatch:FastBatch_AddMeshBuffer(GetMeshBuffer(dynamic.meshname=
), orderval, x,y,z, qw,qx,qy,qz, -1,1,1, r,g,b,a)
+							-- print("->",bx,by,dynamic.serial)
+						end
+					end
+
+					v.mFastBatch:SetCastShadows(gDynamicsCastShadows)
+					=

+					v.mFastBatch:FastBatch_Build()
+				end, nil, prio)
 			end
 		end)
 		=

@@ -213,47 +222,63 @@
 -- creates the geometry of the given multi and stores the gfx object in th=
is multi
 function Renderer3D:CreateMultiGraphic	(multi)
 	multi.staticGeometry =3D CreateRootGfx3D()
-	multi.staticGeometry:SetFastBatch()
-
-	for k,v in pairs(multi.lparts) do
-		-- table.insert(multi.lparts, {iTileTypeID,iX,iY,iZ,iHue})
-		=

-		local x,y,z
-		local qw,qx,qy,qz
-		local xadd,yadd,zadd
-
-		local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
-		=

-		local meshname =3D GetMeshName(iTileTypeID)
-
-		if meshname then
-			xadd,yadd,zadd =3D FilterPositionXYZ(iTileTypeID)
-			x,y,z =3D Renderer3D:UOPosToLocal(iX + xadd,iY + yadd,iZ * 0.1 + zadd) =

-			qw,qx,qy,qz =3D GetStaticMeshOrientation(iTileTypeID)
-
-			local r,g,b,a =3D 1,1,1,1
-			if (gHueLoader and iHue > 0) then
-				r,g,b =3D gHueLoader:GetColor(iHue - 1,31) -- get first color
-			end
-
-			local orderval =3D iZ -- used for blendout later (fastbatch feature)
-			multi.staticGeometry:FastBatch_AddMeshBuffer(GetMeshBuffer(meshname), o=
rderval, x,y,z, qw,qx,qy,qz, -1,1,1, r,g,b,a)
-		else
-			--[[
-			entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc+0.5,entity=
.yloc+0.5,entity.zloc*0.1 + 0.5)
-			entity.gfx =3D CreateRootGfx3D()
-			entity.gfx:SetPosition(entity.x,entity.y,entity.z)
-			entity.gfx.billboard =3D entity.gfx:CreateChild()
-			-- we have to add 0x4000 for fallbacks
-			self:CreateArtBillBoard(entity.gfx.billboard,iTranslatedTileTypeID + 0x=
4000,entity.iHue)
-			table.insert(chunk.lStaticEntities,entity)
-			printdebug("missing",sprintf("Fallback: Static Billboard created : iTra=
nslatedTileTypeID=3D%i\n", iTranslatedTileTypeID))
-			]]--
-		end
-	end
+	=

+	job.create(function()
+		multi.staticGeometry:SetFastBatch()
+
+		for k,v in pairs(multi.lparts) do
+			-- table.insert(multi.lparts, {iTileTypeID,iX,iY,iZ,iHue})
+			=

+			local x,y,z
+			local qw,qx,qy,qz
+			local xadd,yadd,zadd
+
+			local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
+			=

+			local meshname =3D GetMeshName(iTileTypeID)
+
+			if meshname then
+				xadd,yadd,zadd =3D FilterPositionXYZ(iTileTypeID)
+				x,y,z =3D Renderer3D:UOPosToLocal(iX + xadd,iY + yadd,iZ * 0.1 + zadd) =

+				qw,qx,qy,qz =3D GetStaticMeshOrientation(iTileTypeID)
+
+				local r,g,b,a =3D 1,1,1,1
+				if (gHueLoader and iHue > 0) then
+					r,g,b =3D gHueLoader:GetColor(iHue - 1,31) -- get first color
+				end
+
+				local meshbuffer =3D GetMeshBuffer(meshname)
+
+				local orderval =3D iZ -- used for blendout later (fastbatch feature)
+				multi.staticGeometry:FastBatch_AddMeshBuffer(meshbuffer, orderval, x,y=
,z, qw,qx,qy,qz, -1,1,1, r,g,b,a)
+
+				local mousepick =3D {
+					xadd=3Dxadd,yadd=3Dyadd,zadd=3Dzadd,qw=3Dqw,qx=3Dqx,qy=3Dqy,qz=3Dqz,
+					sx=3D-1,sy=3D1,sz=3D1,x=3Dx,y=3Dy,z=3Dz,meshbuffer=3Dmeshbuffer,
+					iTileTypeID =3D iTileTypeID,
+					iHue =3D iHue,
+					iBlockX =3D math.floor(x/8), iBlockY =3D math.floor(y/8),
+				}
+				=

+				v.mousepick =3D mousepick
+			else
+				--[[
+				entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc+0.5,entit=
y.yloc+0.5,entity.zloc*0.1 + 0.5)
+				entity.gfx =3D CreateRootGfx3D()
+				entity.gfx:SetPosition(entity.x,entity.y,entity.z)
+				entity.gfx.billboard =3D entity.gfx:CreateChild()
+				-- we have to add 0x4000 for fallbacks
+				self:CreateArtBillBoard(entity.gfx.billboard,iTranslatedTileTypeID + 0=
x4000,entity.iHue)
+				table.insert(chunk.lStaticEntities,entity)
+				printdebug("missing",sprintf("Fallback: Static Billboard created : iTr=
anslatedTileTypeID=3D%i\n", iTranslatedTileTypeID))
+				]]--
+			end
+		end
+
+		multi.staticGeometry:FastBatch_Build()
+	end, nil, 1)
 =

 	multi.staticGeometry:SetCastShadows(gDynamicsCastShadows)
-	multi.staticGeometry:FastBatch_Build()
 end
 =

 -- destroys the multi gfx static geometry

Modified: trunk/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.mousepick.lua (original)
+++ trunk/lua/lib.3d.mousepick.lua Mon Jun 16 00:58:19 2008
@@ -83,12 +83,31 @@
 	local y,row,x,chunk,k,v
 	local bHit,fHitDist
 	=

+	-- multi mousepicking
+	for k,v in pairs(gMultis) do
+		for kk,vv in pairs(k.lparts) do
+			if vv.mousepick then
+				bHit,fHitDist =3D vv.mousepick.meshbuffer:RayPick(rx,ry,rz,rvx,rvy,rvz,
+					vv.mousepick.x,vv.mousepick.y,vv.mousepick.z,
+					vv.mousepick.qw,vv.mousepick.qx,vv.mousepick.qy,vv.mousepick.qz,
+					vv.mousepick.sx,vv.mousepick.sy,vv.mousepick.sz)
+
+				if (bHit and ((not gMousePickFoundHit) or fHitDist < self.gMousePickFo=
undDist)) then
+					self.gMousePickFoundDist =3D fHitDist
+					gMousePickFoundHit =3D {}
+					gMousePickFoundHit.hittype =3D kMousePickHitType_Static
+					gMousePickFoundHit.entity =3D vv.mousepick
+					--entity has to have the following properties: hue, x, y, z, iTileTyp=
eID
+				end
+			end
+		end
+	end
 	=

 	for chunky,row in pairs(self.gMapChunks) do
 		for chunkx,chunk in pairs(row) do
 			if (not chunk.bIsDead) then
 =

-				-- statics and multis (contained int lStaticEntities list)
+				-- statics  (contained in lStaticEntities list)
 				for k,entity in pairs(chunk.lStaticEntities) do =

 					if (Renderer3D:IsZLayerVisible(entity.zloc)) then -- zloc is in integ=
er tilecoords from uo
 						if (entity.gfx and entity.gfx.billboard) then

Modified: trunk/lua/lib.artatlas.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.artatlas.lua (original)
+++ trunk/lua/lib.artatlas.lua Mon Jun 16 00:58:19 2008
@@ -5,6 +5,7 @@
 gLastArtAtlas =3D nil
 gArtAtlasCache =3D {}
 kArtAtlasDebugDumpAtlas =3D false
+gArtAtlasList =3D {}
 =

 =

 -- returns sMatName,iWidth,iHeight,iCenterX,iCenterY,u0,v0,u1,v1 =3D ArtAt=
lasLoadAndLockDirect(iTileTypeID,iHue,pLockKeeper)
@@ -17,12 +18,11 @@
 	return sMatName,o.w,o.h,iCenterX,iCenterY,o.u0,o.v0,o.u1,o.v1
 end
 =

-
 -- material is not immediately loaded, useful for statics
 function ArtAtlasLoadAndLock (iTileTypeID,iHue,pLockKeeper)
 	local n =3D iTileTypeID.."_"..iHue
 	local o =3D gArtAtlasCache[n] =

-	if (o ~=3D nil) then return o end
+	if (o ~=3D nil) then print("cache hit") return o end
 	gArtAtlasCache[n] =3D false
 	=

 	-- load image
@@ -32,27 +32,57 @@
 	=

 	-- load/create atlas
 	local w =3D gArtAtlasSize
-	if (gLastArtAtlas =3D=3D nil) then print("ArtAtlasLoadAndLock : create fi=
rst atlas") gLastArtAtlas =3D CreateTexAtlas(w,w) end -- only first time
+	if (gLastArtAtlas =3D=3D nil) then
+		print("ArtAtlasLoadAndLock : create first atlas") =

+		gLastArtAtlas =3D CreateTexAtlas(w,w) =

+		table.insert(gArtAtlasList, gLastArtAtlas)
+	end -- only first time
 	=

 	-- add to exisiting texatlas or start a new one if it doesn't fit
 	local iBorderPixels=3D1
 	local bWrap=3Dfalse
-	local bSuccess,l,r,t,b =3D gLastArtAtlas:AddImage(pImage,iBorderPixels,bW=
rap)
+	=

+	local usedAtlas =3D nil
+	=

+	local bSuccess,l,r,t,b
+	=

+	-- search fitting atlas
+	for k,v in pairs(gArtAtlasList) do
+		bSuccess,l,r,t,b =3D v:AddImage(pImage,iBorderPixels,bWrap)
+		if bSuccess then =

+			-- dump atlas image
+			if (kArtAtlasDebugDumpAtlas) then
+				local img2 =3D CreateImage()
+				v:MakeImage(img2)
+				img2:SaveAsFile("../artatlas_"..k..".png")
+				img2:Destroy()
+			end
+			=

+			usedAtlas =3D v
+			=

+			-- stop searching
+			break
+		end
+	end
+	=

 	if (not bSuccess) then =

+		-- not more space in the old atlas, start a new one
+		print("ArtAtlasLoadAndLock : create new atlas") =

+		gLastArtAtlas =3D CreateTexAtlas(w,w)
+		table.insert(gArtAtlasList, gLastArtAtlas)
+		bSuccess,l,r,t,b =3D gLastArtAtlas:AddImage(pImage,iBorderPixels,bWrap)
+		usedAtlas =3D gLastArtAtlas
 		=

 		if (kArtAtlasDebugDumpAtlas) then
 			local img2 =3D CreateImage()
 			gLastArtAtlas:MakeImage(img2)
-			img2:SaveAsFile("../artatlas_"..Client_GetTicks()..".png")
+			img2:SaveAsFile("../artatlas_"..k..".png")
 			img2:Destroy()
 		end
-	=

-		-- not more space in the old atlas, start a new one
-		print("ArtAtlasLoadAndLock : create new atlas") =

-		gLastArtAtlas =3D CreateTexAtlas(w,w)
-		bSuccess,l,r,t,b =3D gLastArtAtlas:AddImage(pImage,iBorderPixels,bWrap)
+
 		if (not bSuccess) then print("warning : ArtAtlasLoadAndLock: art too big=
 for texatlas") pImage:Destroy() return end
 	end
+	=

 	local w =3D pImage:GetWidth()
 	local h =3D pImage:GetHeight()
 	pImage:Destroy()
@@ -63,7 +93,7 @@
 	-- return info about the allocated area for this glyph
 	o =3D {}
 	gArtAtlasCache[n] =3D o
-	o.atlas =3D gLastArtAtlas
+	o.atlas =3D usedAtlas
 	o.u0 =3D l
 	o.v0 =3D t
 	o.u1 =3D r

Modified: trunk/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.static.lua (original)
+++ trunk/lua/lib.static.lua Mon Jun 16 00:58:19 2008
@@ -45,29 +45,24 @@
 	local meshname =3D nil
 	meshname =3D gLegacyModelCache[iTranslatedTileTypeID]
 	if (meshname =3D=3D nil) then
-		-- check if mesh is already in Cache
-		meshname =3D gLegacyModelCache[iTranslatedTileTypeID]
-
-		if (meshname =3D=3D nil) then
-			local modellocation =3D GetModelPath(iTranslatedTileTypeID)
-
-			if ( modellocation ~=3D nil ) then
-
-				meshname =3D GetModelName(iTranslatedTileTypeID)
-				-- load Mesh here
-				if ( OgreMeshAvailable(meshname) ) then
-					printdebug("static","Meshloader:",iTranslatedTileTypeID,meshname)
-				else
-					meshname =3D false
-					printdebug("static","mesh cannot be loaded -> temp. disabled (false) =
",meshname, iTranslatedTileTypeID)
-				end
-
+		local modellocation =3D GetModelPath(iTranslatedTileTypeID)
+
+		if ( modellocation ~=3D nil ) then
+
+			meshname =3D GetModelName(iTranslatedTileTypeID)
+			-- load Mesh here
+			if ( OgreMeshAvailable(meshname) ) then
+				printdebug("static","Meshloader:",iTranslatedTileTypeID,meshname)
 			else
 				meshname =3D false
-				printdebug("static","mesh not available -> temp. disabled (false) ",me=
shname, iTranslatedTileTypeID)
-			end
-			gLegacyModelCache[iTranslatedTileTypeID] =3D meshname
+				printdebug("static","mesh cannot be loaded -> temp. disabled (false) "=
,meshname, iTranslatedTileTypeID)
+			end
+
+		else
+			meshname =3D false
+			printdebug("static","mesh not available -> temp. disabled (false) ",mes=
hname, iTranslatedTileTypeID)
 		end
+		gLegacyModelCache[iTranslatedTileTypeID] =3D meshname
 	end
 	=

 	-- dump missing models as images
@@ -103,7 +98,108 @@
 		meshname =3D GetFallBackBoxMesh()
 	end
 	=

+	-- build a static mesh fallback with uo tile as texture (faster that clas=
sic billboard)
+	if not meshname and gUseStaticFallbacks then
+		return GetFallbackMeshName(iTranslatedTileTypeID)
+	end
+	=

 	return meshname
+end
+
+
+gFallbackModelCache =3D {}
+-- returns the name of a static generated mesh that can be used instead of=
 classic billboards
+function GetFallbackMeshName	(iTileTypeID)
+	local name =3D gFallbackModelCache[iTileTypeID]
+	if name then return name end
+	=

+	if IsArtBillboardFallBackSkipped(iTileTypeID) then return nil end
+	=

+	-- generate the model
+	if not gFallbackModelCacheGfx then =

+		gFallbackModelCacheGfx =3D CreateRootGfx3D()
+		gFallbackModelCacheGfx:SetVisible(false)
+	end
+	=

+	-- TODO currently just ignores the art atlas lockkeeper
+	local sMatName,iWidth,iHeight,iCenterX,iCenterY,u0,v0,u1,v1 =3D ArtAtlasL=
oadAndLockDirect(iTileTypeID+0x4000,0,nil)
+	-- print("###", iTileTypeID, sMatName,iWidth,iHeight,iCenterX,iCenterY,u0=
,v0,u1,v1)
+	=

+	gFallbackModelCacheGfx:SetSimpleRenderable()
+	gFallbackModelCacheGfx:SetMaterial(sMatName)
+	=

+	local t =3D GetStaticTileType(iTileTypeID)
+	local h =3D iHeight/iWidth
+	local hh =3D t.miHeight * 0.1
+			=

+	if IsGroundPlate(iTileTypeID) then
+		-- ground plate
+		local tw =3D (u0+u1)*0.5
+		local th =3D (v0+v1)*0.5
+		local dz =3D 0.01 -- -0.49
+		local dx =3D 0 -- -0.5
+		local dy =3D 0 -- -0.5
+		=

+		gFallbackModelCacheGfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
+		=

+		gFallbackModelCacheGfx:RenderableVertex( 0+dx,0+dy,dz, tw,v0)
+		gFallbackModelCacheGfx:RenderableVertex( 0+dx,1+dy,dz, u0,th)
+		gFallbackModelCacheGfx:RenderableVertex( 1+dx,0+dy,dz, u1,th)
+		gFallbackModelCacheGfx:RenderableVertex( 1+dx,1+dy,dz, tw,v1)
+		gFallbackModelCacheGfx:RenderableIndex3(0,1,2)
+		gFallbackModelCacheGfx:RenderableIndex3(1,3,2)
+		=

+		gFallbackModelCacheGfx:RenderableEnd()
+	else
+		-- crossed
+		local dz =3D 0
+		local dx =3D 0
+		local dy =3D 0
+	=

+		gFallbackModelCacheGfx:RenderableBegin(4*2,6*2,false,false,OT_TRIANGLE_L=
IST)
+		=

+		gFallbackModelCacheGfx:RenderableVertex( 0+dx,0.5+dy,0+dz, u1,v1)
+		gFallbackModelCacheGfx:RenderableVertex( 1+dx,0.5+dy,0+dz, u0,v1)
+		gFallbackModelCacheGfx:RenderableVertex( 1+dx,0.5+dy,h+dz, u0,v0)
+		gFallbackModelCacheGfx:RenderableVertex( 0+dx,0.5+dy,h+dz, u1,v0)
+		gFallbackModelCacheGfx:RenderableIndex3(2,1,0)
+		gFallbackModelCacheGfx:RenderableIndex3(0,3,2)
+
+		gFallbackModelCacheGfx:RenderableVertex( 0.5+dx,0+dy,0+dz, u1,v1)
+		gFallbackModelCacheGfx:RenderableVertex( 0.5+dx,1+dy,0+dz, u0,v1)
+		gFallbackModelCacheGfx:RenderableVertex( 0.5+dx,1+dy,h+dz, u0,v0)
+		gFallbackModelCacheGfx:RenderableVertex( 0.5+dx,0+dy,h+dz, u1,v0)
+		gFallbackModelCacheGfx:RenderableIndex3(4+2,4+1,4+0)
+		gFallbackModelCacheGfx:RenderableIndex3(4+0,4+3,4+2)
+
+		gFallbackModelCacheGfx:RenderableEnd()
+	--[[
+	else
+		-- flat
+		local dz =3D 0.1
+		local dx =3D 0
+		local dy =3D 0
+
+		gFallbackModelCacheGfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
+		=

+		gFallbackModelCacheGfx:RenderableVertex( 0+dx,0+dy,dz, u0,v0)
+		gFallbackModelCacheGfx:RenderableVertex( 1+dx,0+dy,dz, u1,v0)
+		gFallbackModelCacheGfx:RenderableVertex( 1+dx,1+dy,dz, u1,v1)
+		gFallbackModelCacheGfx:RenderableVertex( 0+dx,1+dy,dz, u0,v1)
+		gFallbackModelCacheGfx:RenderableIndex3(2,1,0)
+		gFallbackModelCacheGfx:RenderableIndex3(0,3,2)
+
+		gFallbackModelCacheGfx:RenderableEnd()
+	]]
+	end
+	=

+	local name =3D gFallbackModelCacheGfx:RenderableConvertToMesh()
+	=

+	-- name =3D "mdl_000405.mesh"
+	=

+	gFallbackModelCache[iTileTypeID] =3D name
+	=

+	return name
 end
 =

 function GetStaticMeshOrientation (iTileTypeID)



From no-reply at zwischenwelt.org  Tue Jun 17 16:13:03 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 17 Jun 2008 14:13:03 -0000
Subject: [Iris-commit] [IRIS] r2247 - in /trunk: data/base/main.material
	lua/lib.unifont.lua
Message-ID: <20080617141303.40A431C18047@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Jun 17 16:13:02 2008
New Revision: 2247

Log:
added base material for new guisystem

Modified:
    trunk/data/base/main.material
    trunk/lua/lib.unifont.lua

Modified: trunk/data/base/main.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/base/main.material (original)
+++ trunk/data/base/main.material Tue Jun 17 16:13:02 2008
@@ -2,6 +2,42 @@
 // TEMPLATES
 //###########################################
 =

+material guibasemat
+{
+	technique
+	{
+		pass
+		{
+			ambient  1.0 1.0 1.0 1.0
+			specular 0.0 0.0 0.0 1.0
+			=

+			// ambient vertexcolour
+			// diffuse vertexcolour
+			=

+			cull_hardware none
+			cull_software none
+
+			scene_blend alpha_blend
+			=

+			lighting off
+			depth_write off
+			depth_check off
+			=

+			// alpha_rejection greater_equal 255
+
+			texture_unit guitex
+			{
+				filtering point point none
+				tex_address_mode clamp
+				=

+				texture guibase.png 2d 0
+				//colour_op_ex modulate src_texture src_diffuse =

+				//alpha_op_ex  source1 src_texture src_texture
+			}
+		}
+	}
+}
+
 // GUI BASE TEMPLATE
 material guibase
 {
@@ -9,8 +45,8 @@
 	{
 		pass
 		{
-			ambient 1.0 1.0 1.0 1.0
-			specular 0 0 0 1.0
+			ambient  1.0 1.0 1.0 1.0
+			specular 0.0 0.0 0.0 1.0
 			=

 			cull_hardware none
 			cull_software none

Modified: trunk/lua/lib.unifont.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.unifont.lua (original)
+++ trunk/lua/lib.unifont.lua Tue Jun 17 16:13:02 2008
@@ -35,7 +35,7 @@
 	local spritelist =3D CreateSpriteList(GetGUILayer_Dialogs(),false,true)
 	spritelist.asgroup =3D spritelist:CastToRenderGroup2D()
 	spritelist.asgroup:SetClip(24,4,122,22)
-	spritelist:SetTexture("guibase.png")
+	spritelist:SetMaterial(GetPlainTextureMat("guibase.png"))
 	spritelist:ResizeList(1)
 	print("--SpriteList_Open")
 	SpriteList_Open(spritelist)



From no-reply at zwischenwelt.org  Wed Jun 18 08:22:02 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 18 Jun 2008 06:22:02 -0000
Subject: [Iris-commit] [IRIS] r2248 - in /trunk/bin: OgreMain.dll
 Plugin_CgProgramManager.dll Plugin_ParticleFX.dll
 RenderSystem_Direct3D9.dll RenderSystem_GL.dll iris2.exe plugins.cfg
Message-ID: <20080618062202.4F1D51C180B0@zwischenwelt.org>

Author: sience
Date: Wed Jun 18 08:22:01 2008
New Revision: 2248

Log:
-iris2 upgraded to ogre 1.49 because of an NVIDIA Bug in 175.x

Modified:
    trunk/bin/OgreMain.dll
    trunk/bin/Plugin_CgProgramManager.dll
    trunk/bin/Plugin_ParticleFX.dll
    trunk/bin/RenderSystem_Direct3D9.dll
    trunk/bin/RenderSystem_GL.dll
    trunk/bin/iris2.exe
    trunk/bin/plugins.cfg

Modified: trunk/bin/OgreMain.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_CgProgramManager.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_ParticleFX.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_Direct3D9.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_GL.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/plugins.cfg
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/bin/plugins.cfg (original)
+++ trunk/bin/plugins.cfg Wed Jun 18 08:22:01 2008
@@ -5,7 +5,7 @@
 =

 # Define plugins
 Plugin=3DRenderSystem_Direct3D9
-Plugin=3DRenderSystem_GL
+#Plugin=3DRenderSystem_GL
 Plugin=3DPlugin_ParticleFX
 #Plugin=3DPlugin_BSPSceneManager
 #Plugin=3DPlugin_OctreeSceneManager



From no-reply at zwischenwelt.org  Wed Jun 18 23:23:20 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 18 Jun 2008 21:23:20 -0000
Subject: [Iris-commit] [IRIS] r2249 - in /trunk/lua: lib.3d.dynamic.lua
 lib.3d.map.lua lib.3d.renderer.lua lib.debugmenu.lua lib.keybinds.lua
 lib.static.lua lib.test.lua
Message-ID: <20080618212320.CC7081C180AF@zwischenwelt.org>

Author: sience
Date: Wed Jun 18 23:23:19 2008
New Revision: 2249

Log:
-some function callings fixed

Modified:
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.map.lua
    trunk/lua/lib.3d.renderer.lua
    trunk/lua/lib.debugmenu.lua
    trunk/lua/lib.keybinds.lua
    trunk/lua/lib.static.lua
    trunk/lua/lib.test.lua

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Wed Jun 18 23:23:19 2008
@@ -417,7 +417,7 @@
 		local artid =3D item.artid
 		if (in_array(artid,kSparkleArtIDs)) then artid =3D kMoongateGateArtID en=
d -- provisory fix
 	=

-		item.meshname =3D (not gForceFallBackBillboards_Dynamics) and GetMeshNam=
e(artid, 0)
+		item.meshname =3D (not gForceFallBackBillboards_Dynamics) and GetMeshNam=
e(artid)
 =

 		-- Fastbatch rendering
 		if (gFastBatchDynamics and item.meshname and item.meshname ~=3D false) t=
hen

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Wed Jun 18 23:23:19 2008
@@ -294,7 +294,7 @@
 =

 	--Renderer3D:GenerateCaduneTree(entity)
 =

-	local meshname =3D (not gForceFallBackBillboards_Statics) and staticwater=
tile and GetMeshName(iTileTypeID, (gFastBatchStatics and 0) or entity.iHue)
+	local meshname =3D (not gForceFallBackBillboards_Statics) and staticwater=
tile and GetMeshName(iTileTypeID)
 =

 	-- TODO: does it really work? 	--build Edgelist for Stencil Shadows
 	--if (meshname and gBuildStencilShadowEdgeList) then print("edges generat=
ed") MeshBuildEdgeList(meshname) end
@@ -335,7 +335,7 @@
 		table.insert(chunk.lStaticEntities,entity)
 =

 	-- if no *.mesh is available, a fallback billboard with original uo_art i=
s generated
-	-- What about cahing here ??
+	-- What about caching here ??
 	else
 		local iTranslatedTileTypeID =3D SeasonalStaticTranslation(iTileTypeID, g=
SeasonSetting)
 		if (

Modified: trunk/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.renderer.lua (original)
+++ trunk/lua/lib.3d.renderer.lua Wed Jun 18 23:23:19 2008
@@ -341,7 +341,7 @@
 =

 -- Hued Effect : to display Meshes as instant Effects
 function Renderer3D:AddHuedEffect( effect, relx, rely, relz )
-	local meshname =3D GetMeshName(effect.itemid, 0)
+	local meshname =3D GetMeshName(effect.itemid)
 	if (meshname and meshname ~=3D false) then
 		effect.gfx =3D CreateRootGfx3D()
 		effect.gfx:SetMesh(meshname)

Modified: trunk/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.debugmenu.lua (original)
+++ trunk/lua/lib.debugmenu.lua Wed Jun 18 23:23:19 2008
@@ -624,7 +624,7 @@
 		local iTileType =3D gDebugMenuModelIndex
 		local iHue =3D gDebugMenuAnimIndex
 		local info =3D GetStaticTileType(iTileType)
-		local meshname =3D GetMeshName(iTileType, 0)	-- iHue
+		local meshname =3D GetMeshName(iTileType)
 		if gDebugLastMeshName then ReloadMesh(gDebugLastMeshName) end
 		gDebugLastMeshName =3D meshname
 		local tricount =3D meshname and CountMeshTriangles(meshname) or 0
@@ -670,10 +670,10 @@
 			local tries =3D 400
 			local add =3D (delta > 0) and 1 or -1
 			newval =3D newval + add
-			local meshname =3D GetMeshName(newval, 0)
+			local meshname =3D GetMeshName(newval)
 			while (tries > 0 and ((not meshname) or (CountMeshTriangles(meshname) >=
 6))) do
 				newval =3D newval + add
-				meshname =3D GetMeshName(newval, 0)
+				meshname =3D GetMeshName(newval)
 				tries =3D tries - 1
 			end =

 		end

Modified: trunk/lua/lib.keybinds.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.keybinds.lua (original)
+++ trunk/lua/lib.keybinds.lua Wed Jun 18 23:23:19 2008
@@ -20,7 +20,7 @@
 				if (DynamicIsInWorld(dynamic)) then
 					local d =3D dist2(x,y,dynamic.xloc,dynamic.yloc)
 					if (d < 5) then
-						print("TELESEARCH",d,dynamic.artid,dynamic.artid_base,GetMeshName(dy=
namic.artid, 0),GetStaticTileTypeName(dynamic.artid))
+						print("TELESEARCH",d,dynamic.artid,dynamic.artid_base,GetMeshName(dy=
namic.artid),GetStaticTileTypeName(dynamic.artid))
 					end
 				end
 			end

Modified: trunk/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.static.lua (original)
+++ trunk/lua/lib.static.lua Wed Jun 18 23:23:19 2008
@@ -98,7 +98,7 @@
 		meshname =3D GetFallBackBoxMesh()
 	end
 	=

-	-- build a static mesh fallback with uo tile as texture (faster that clas=
sic billboard)
+	-- build a static mesh fallback with uo tile as texture (faster than clas=
sic billboard)
 	if not meshname and gUseStaticFallbacks then
 		return GetFallbackMeshName(iTranslatedTileTypeID)
 	end
@@ -190,7 +190,7 @@
 		gFallbackModelCacheGfx:RenderableIndex3(0,3,2)
 =

 		gFallbackModelCacheGfx:RenderableEnd()
-	]]
+	]]--
 	end
 	=

 	local name =3D gFallbackModelCacheGfx:RenderableConvertToMesh()
@@ -212,6 +212,6 @@
 -- TODO: Wrong !!! hueing must be taken from statics instead of tiledata
 function PreloadAllStaticMesh()
 	for i =3D 0,16085 do
-		GetMeshName(i, 0)
-	end
-end
+		GetMeshName(i)
+	end
+end

Modified: trunk/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.test.lua (original)
+++ trunk/lua/lib.test.lua Wed Jun 18 23:23:19 2008
@@ -155,7 +155,7 @@
 	local polycount =3D 0
 	for k,obj in pairs(staticAnalysis) do
 		print("obj.typeid: "..obj.typeid)
-		local meshname =3D GetMeshName(obj.typeid,0)
+		local meshname =3D GetMeshName(obj.typeid)
 		if (meshname and meshname ~=3D false) then polycount =3D CountMeshTriang=
les(meshname) end
 		if (polycount < 1) then =

 			print(obj.amount,sprintf("0x%04x",obj.typeid),obj.typeid,obj.typeobj.ms=
Name,polycount)



From no-reply at zwischenwelt.org  Wed Jun 18 23:24:58 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 18 Jun 2008 21:24:58 -0000
Subject: [Iris-commit] [IRIS] r2250 - in /trunk/data/profiles: gfx_low.lua
	gfx_ultralow.lua
Message-ID: <20080618212458.EA5231C180AF@zwischenwelt.org>

Author: sience
Date: Wed Jun 18 23:24:57 2008
New Revision: 2250

Log:
-gUseStaticFallbacks =3D false for low and ultralow profile

Modified:
    trunk/data/profiles/gfx_low.lua
    trunk/data/profiles/gfx_ultralow.lua

Modified: trunk/data/profiles/gfx_low.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_low.lua (original)
+++ trunk/data/profiles/gfx_low.lua Wed Jun 18 23:24:57 2008
@@ -12,3 +12,5 @@
 gSightRange	=3D 2
 =

 gGroundBlockLoaderType     =3D "OnDemand"
+
+gUseStaticFallbacks =3D false

Modified: trunk/data/profiles/gfx_ultralow.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/profiles/gfx_ultralow.lua (original)
+++ trunk/data/profiles/gfx_ultralow.lua Wed Jun 18 23:24:57 2008
@@ -17,6 +17,7 @@
 gParticleEffectSystem =3D false
 gLightsources =3D false
 =

+gUseStaticFallbacks =3D false
 gEnableFallBackBillboards_Dynamics =3D false
 =

 gGroundBlockLoaderType     =3D "OnDemand"



From no-reply at zwischenwelt.org  Fri Jun 20 22:55:25 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 20 Jun 2008 20:55:25 -0000
Subject: [Iris-commit] [IRIS] r2251 - in /trunk: bin/iris2.exe
 vc8/premake.exe vc8/premake.lua vc8/vs2005.bat
Message-ID: <20080620205526.563E21524030@zwischenwelt.org>

Author: sience
Date: Fri Jun 20 22:55:23 2008
New Revision: 2251

Log:
-premake for vc deleted (not needed)
-new win32 binary

Removed:
    trunk/vc8/premake.exe
    trunk/vc8/premake.lua
    trunk/vc8/vs2005.bat
Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Mon Jun 23 11:28:48 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 23 Jun 2008 09:28:48 -0000
Subject: [Iris-commit] [IRIS] r2252 - /trunk/lua/lib.unifont.lua
Message-ID: <20080623092848.EDDF51C18245@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Jun 23 11:28:48 2008
New Revision: 2252

Log:
guisystem : adjusted iris uo-unicode font loader for glyphlist

Modified:
    trunk/lua/lib.unifont.lua

Modified: trunk/lua/lib.unifont.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.unifont.lua (original)
+++ trunk/lua/lib.unifont.lua Mon Jun 23 11:28:48 2008
@@ -45,7 +45,7 @@
 	SpriteList_Close()
 ]]--
 =

--- texname,u0,v0,u1,v1
+-- matname,u0,v0,u1,v1
 function UniFont_AddImageToAtlas (glyphimg)
 	local w =3D gUniFontTexAtlasSize
 	if (gUniFontLastTextureAtlas =3D=3D nil) then gUniFontLastTextureAtlas =
=3D CreateTexAtlas(w,w) end -- only first time
@@ -64,10 +64,11 @@
 		gUniFontLastTextureAtlas:LoadToTexture(gUniFontLastTextureAtlas.texname)=
 -- update existing texture
 	else
 		gUniFontLastTextureAtlas.texname =3D gUniFontLastTextureAtlas:MakeTextur=
e() -- generate new texture
+		gUniFontLastTextureAtlas.matname =3D GetPlainTextureGUIMat(gUniFontLastT=
extureAtlas.texname)
 	end
 	=

 	-- return info about the allocated area for this glyph
-	return gUniFontLastTextureAtlas.texname,l,t,r,b
+	return gUniFontLastTextureAtlas.matname,l,t,r,b
 end
 =

 -- texname,u0,v0,u1,v1,xoff,yoff,w,h
@@ -83,8 +84,8 @@
 	local success =3D fontloader:WriteGlyphToImage(img,iCharCode)
 	if (success) then
 		local xoff,yoff,w,h =3D fontloader:GetGlyphInfo(iCharCode)
-		local texname,u0,v0,u1,v1 =3D UniFont_AddImageToAtlas(img)
-		if (texname) then glyphdata =3D {texname,u0,v0,u1,v1,xoff,yoff,w,h} end
+		local matname,u0,v0,u1,v1 =3D UniFont_AddImageToAtlas(img)
+		if (matname) then glyphdata =3D {matname,u0,v0,u1,v1,xoff,yoff,w,h} end
 	end
 	img:Destroy()
 	=

@@ -98,23 +99,37 @@
 -- uofonts are pixelart and not scalable, so the size is fixed
 function CreateFont_UO (loader)
 	local myfont =3D {}
-	local texname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,kCharC=
ode_SpaceWidthChar)
+	local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,kCharC=
ode_SpaceWidthChar)
 	myfont.spacewidth =3D w
 	--~ myfont.defaultlineh =3D 1.5 * math.max(1,h)
 	myfont.defaultlineh =3D 20
 	myfont.GetDefaultFontSize	=3D function (self) return myfont.defaultlineh =
end
 	myfont.GetSpaceWidth		=3D function (self,fontsize) return self.spacewidth=
 end
 	myfont.GetLineHeight		=3D function (self,fontsize) return self.defaultlin=
eh end
-	myfont.GetGlyph				=3D function (self,iCharCode,fontsize) =

-		local texname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,iChar=
Code)
-		if (not texname) then return end
+	myfont.GetGlyphInfo			=3D function (self,iCharCode,fontsize) =

+		local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,iChar=
Code)
+		if (not matname) then return end
+		=

 		--~ local s =3D math.max(1,round(fontsize / myfont.defaultlineh)) -- pix=
elart is not freely scalable, but this would allow integer-multiples of the=
 original size
 		local s =3D 1
 		local b =3D 2 -- border, the glyph image is actually bigger than the w,h=
 returned by GetUniFontGlyph
 		w,h =3D (b+w+b)*s,(b+h+b)*s
+		=

+		local res	=3D {}
 		local uvw, uvh =3D u1-u0,v1-v0
-		local xmove =3D w - 3*s + xoff*s
-		return texname, xmove, xoff,yoff,w,h, u0,v0, uvw,0, 0,uvh
+		res.matname	=3D matname
+		res.xmove	=3D w - 3*s + xoff*s
+		res.xoff	=3D xoff
+		res.yoff	=3D yoff
+		res.w	=3D w
+		res.h	=3D h
+		res.u0	=3D u0
+		res.v0	=3D v0
+		res.ux	=3D uvw
+		res.vx	=3D 0
+		res.uy	=3D 0
+		res.vy	=3D uvh
+		return res
 	end
 	return myfont
 end



From no-reply at zwischenwelt.org  Fri Jun 27 23:21:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 27 Jun 2008 21:21:46 -0000
Subject: [Iris-commit] [IRIS] r2253 - /trunk/lua/lib.3d.dynamic.lua
Message-ID: <20080627212146.422951C180A9@zwischenwelt.org>

Author: hagish
Date: Fri Jun 27 23:21:45 2008
New Revision: 2253

Log:
improved dynamic/multi loading code

Modified:
    trunk/lua/lib.3d.dynamic.lua

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Fri Jun 27 23:21:45 2008
@@ -6,7 +6,8 @@
 -- fast batch geometry gfx3d that contains the dynamics
 Renderer3D.gFastBatchDynamicsUpdateNeeded =3D true
 Renderer3D.gFastBatchDynamicsUpdateNext =3D nil
-Renderer3D.gFastBatchDynamicsUpdateNextTimout =3D 500
+Renderer3D.gFastBatchDynamicsUpdateNextTimout =3D 10
+Renderer3D.gFastBatchDynamicsUpdateBlockLimit =3D 5
 Renderer3D.gFastBatchDynamicsMap =3D CreateArray2D()
 Renderer3D.gFastBatchDynamicsMapDestroyListener =3D nil
 =

@@ -34,22 +35,27 @@
 function Renderer3D:CheckForFastBatchDynamicsUpdate ()
 	if Renderer3D.gFastBatchDynamicsUpdateNeeded and =

 		(not Renderer3D.gFastBatchDynamicsUpdateNext or Renderer3D.gFastBatchDyn=
amicsUpdateNext < gMyTicks) then
-
-		Renderer3D.gFastBatchDynamicsUpdateNeeded =3D false
 	=

 		local cxloc,cyloc =3D self:GetLookAheadCamPos()
 		local cbx,cby =3D math.floor(cxloc/8 - 0.5),math.floor(cyloc/8 - 0.5)
 =

+		local blocksUpdated =3D 0
+		local blocksLimit =3D Renderer3D.gFastBatchDynamicsUpdateBlockLimit or 1
+		local blocksLeft =3D 0
+
 		Array2DForAll(Renderer3D.gFastBatchDynamicsMap, function(v,bx,by)
 			if v.mbUpdateNeeded then
-				-- unset dirty flag
-				v.mbUpdateNeeded =3D false
+				-- only try to update the block
 				=

-				local prio =3D 1 + 100 / (math.abs(bx-cbx)+math.abs(by-cby))
-				=

-				job.create(function()
-					-- print("## update dynamic block",bx,by,prio)
-
+				-- update slots available?
+				if blocksUpdated < blocksLimit then
+					blocksUpdated =3D blocksUpdated + 1
+					=

+					-- unset dirty flag
+					v.mbUpdateNeeded =3D false
+					=

+					local prio =3D 1 + 100 / (math.abs(bx-cbx)+math.abs(by-cby))
+					=

 					-- on demand create
 					if not v.mFastBatch then
 						v.mFastBatch =3D CreateRootGfx3D()
@@ -82,10 +88,18 @@
 					v.mFastBatch:SetCastShadows(gDynamicsCastShadows)
 					=

 					v.mFastBatch:FastBatch_Build()
-				end, nil, prio)
+				else
+					-- one block skipped
+					blocksLeft =3D blocksLeft + 1
+				end
 			end
 		end)
 		=

+		-- print("#### UPDATE",blocksUpdated, blocksLeft, blocksLimit)
+		=

+		-- if there a still blocks left -> updateNeeded =3D true
+		Renderer3D.gFastBatchDynamicsUpdateNeeded =3D blocksLeft > 0 =

+
 		self:UpdateDynamicDisplayRange()
 		Renderer3D.gFastBatchDynamicsUpdateNext =3D gMyTicks + Renderer3D.gFastB=
atchDynamicsUpdateNextTimout
 	end
@@ -133,9 +147,11 @@
 =

 	Renderer3D:RemoveDynamicFromMap(dynamic)
 =

+	-- block position
 	local bx =3D math.floor(dynamic.xloc/8)
 	local by =3D math.floor(dynamic.yloc/8)
 	=

+	-- block empty? create a new entry
 	if not Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by) then
 		Array2DSet(Renderer3D.gFastBatchDynamicsMap, bx,by, {mbUpdateNeeded=3Dtr=
ue, miCount=3D0,mlDynamic=3D{}})
 	end
@@ -221,14 +237,40 @@
 =

 -- creates the geometry of the given multi and stores the gfx object in th=
is multi
 function Renderer3D:CreateMultiGraphic	(multi)
-	multi.staticGeometry =3D CreateRootGfx3D()
-	=

+	-- only run one build process per multi
+	if multi.mbBuildRunning then return end
+	multi.mbBuildRunning =3D true
+	=

+	-- build job
 	job.create(function()
+		if not multi.staticGeometry or not multi.staticGeometry:IsAlive() then
+			multi.staticGeometry =3D CreateRootGfx3D()
+		end
+
+		job.yield()
+		-- terminate?
+		if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() ret=
urn end
+					=

+		-- load mesh buffers
+		for k,v in pairs(multi.lparts) do
+			-- get tile
+			local iTileTypeID,iX,iY,iZ,iHue =3D unpack(v)
+			-- and mesh
+			local meshname =3D GetMeshName(iTileTypeID)
+			-- and try to load it
+			if meshname then =

+				GetMeshBuffer(meshname)
+			end
+		end
+		=

+		job.yield()
+		-- terminate?
+		if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() ret=
urn end
+
+		-- build geometry
 		multi.staticGeometry:SetFastBatch()
 =

 		for k,v in pairs(multi.lparts) do
-			-- table.insert(multi.lparts, {iTileTypeID,iX,iY,iZ,iHue})
-			=

 			local x,y,z
 			local qw,qx,qy,qz
 			local xadd,yadd,zadd
@@ -261,29 +303,25 @@
 				}
 				=

 				v.mousepick =3D mousepick
-			else
-				--[[
-				entity.x,entity.y,entity.z =3D self:UOPosToLocal(entity.xloc+0.5,entit=
y.yloc+0.5,entity.zloc*0.1 + 0.5)
-				entity.gfx =3D CreateRootGfx3D()
-				entity.gfx:SetPosition(entity.x,entity.y,entity.z)
-				entity.gfx.billboard =3D entity.gfx:CreateChild()
-				-- we have to add 0x4000 for fallbacks
-				self:CreateArtBillBoard(entity.gfx.billboard,iTranslatedTileTypeID + 0=
x4000,entity.iHue)
-				table.insert(chunk.lStaticEntities,entity)
-				printdebug("missing",sprintf("Fallback: Static Billboard created : iTr=
anslatedTileTypeID=3D%i\n", iTranslatedTileTypeID))
-				]]--
 			end
 		end
 =

 		multi.staticGeometry:FastBatch_Build()
+
+		multi.staticGeometry:SetCastShadows(gDynamicsCastShadows)
+		=

+		multi.mbBuildRunning =3D false
+
+		-- terminate?
+		if multi.mbCancelBuildAndDestroy then multi.staticGeometry:Destroy() ret=
urn end
 	end, nil, 1)
-
-	multi.staticGeometry:SetCastShadows(gDynamicsCastShadows)
 end
 =

 -- destroys the multi gfx static geometry
 function Renderer3D:DestroyMultiGraphic	(multi)
-	if multi.staticGeometry then =

+	if multi.mbBuildRunning then
+		multi.mbCancelBuildAndDestroy =3D true
+	elseif multi.staticGeometry then =

 		multi.staticGeometry:Destroy() =

 		multi.staticGeometry =3D nil
 	end



From no-reply at zwischenwelt.org  Fri Jun 27 23:34:55 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 27 Jun 2008 21:34:55 -0000
Subject: [Iris-commit] [IRIS] r2254 - in /trunk/lua: gui/gui.gumpparser.lua
 gui/gui.healthbar.lua gui/gui.journal.lua gui/gui.paperdoll.lua
 gui/gui.quit.lua gui/gui.securetrade.lua gui/gui.skill.lua
 gui/gui.status.lua lib.loading.lua main.lua
Message-ID: <20080627213455.A7FAC1C180A4@zwischenwelt.org>

Author: ghoulsblade
Date: Fri Jun 27 23:34:54 2008
New Revision: 2254

Log:
guisystem : started gump-parser test environment, loading split so test env=
ironments can easily load just the parts they need for faster startup

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/gui/gui.healthbar.lua
    trunk/lua/gui/gui.journal.lua
    trunk/lua/gui/gui.paperdoll.lua
    trunk/lua/gui/gui.quit.lua
    trunk/lua/gui/gui.securetrade.lua
    trunk/lua/gui/gui.skill.lua
    trunk/lua/gui/gui.status.lua
    trunk/lua/lib.loading.lua
    trunk/lua/main.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Fri Jun 27 23:34:54 2008
@@ -8,6 +8,51 @@
 Description:  Similar to xmfhtmlgumpcolor command, but the parameter order=
 is different and an additionally [argument]
 entry enclosed with @'s can be used. With this you can specify texts that =
will be added to the CliLoc entry.
 ]]--
+
+
+function GumpParserTest ()
+	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size
+	GetMainViewport():SetBackCol(0.5,0.5,0.5)
+	=

+	Load_Font() -- iris specific
+	Load_Hue()
+	Load_ArtMap()
+	Load_Gump()	=

+	--[[
+	kClientSideGump_HealthBar_Own		=3D healthbarGump -- own, includes mana,sta
+	kClientSideGump_HealthBar_Other		=3D npchealthGump -- other, only hp
+	kClientSideGump_Status =3D statusGump -- big status dialog showing own de=
x,weight,luck...
+	kClientSideGump_Quit =3D quitGump -- do you really want to quit ?
+	kClientSideGump_Paperdoll_Own	=3D playerPaperdoll -- own paperdoll, inclu=
ding buttons like quest,skills..
+	kClientSideGump_Paperdoll_Other	=3D npcPaperdoll -- paperdoll of someone =
else, no buttons
+	kClientSideGump_SecureTrade	=3D securetrading -- trade dialog with left(o=
wn-offer) and right(other-offer) boxes and two agree checkboxes
+	kClientSideGump_Skill_Quick		=3D quickskillGump	-- ??? only two pictures,=
 maybe the hot-button ?
+	kClientSideGump_Skill			=3D skillGump			-- the big skill list dialog with=
 up/down/lock boxes, grab icons and scrollbar
+	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
+	]]--
+	local dialog =3D GumpParser(kClientSideGump_Paperdoll_Own,true)
+	=

+	GUITest_MainLoop()
+	os.exit(0)
+end
+
+
+
+--[[
+conversion to new guisystem :  =

+MakeSortedDialog
+CreatePlainEditText
+MakeText
+MakeBorderGump
+MakeBorderGumpPart
+MakeGumpButtonFunctionOnClick
+MakeGumpButton
+MakeGumpCheckBox
+MakeArtGumpPart
+MakeWrappedClippedText
+onMouseDown
+]]--
+
 =

 gServerSideGump =3D {}
 gGumpPosition =3D {}

Modified: trunk/lua/gui/gui.healthbar.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.healthbar.lua (original)
+++ trunk/lua/gui/gui.healthbar.lua Fri Jun 27 23:34:54 2008
@@ -39,6 +39,10 @@
 	[0] =3D "npc_name",
 }
 =

+
+kClientSideGump_HealthBar_Own		=3D healthbarGump -- own, includes mana,sta
+kClientSideGump_HealthBar_Other		=3D npchealthGump -- other, only hp
+                       =

 -- list of all open stats dialogs serial->dialog
 gHealthbarDialogs =3D {}
 =


Modified: trunk/lua/gui/gui.journal.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.journal.lua (original)
+++ trunk/lua/gui/gui.journal.lua Fri Jun 27 23:34:54 2008
@@ -69,6 +69,8 @@
  [5]	=3D function (widget,mousebutton) end,
 }
 =

+kClientSideGump_Journal			=3D journalGump	-- a very simple message log in =
papyrus-scroll look
+
 gJournalEntries =3D {}
 gJournalExtendedEntries =3D {}
 gJournalDialog =3D nil

Modified: trunk/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.paperdoll.lua (original)
+++ trunk/lua/gui/gui.paperdoll.lua Fri Jun 27 23:34:54 2008
@@ -104,6 +104,12 @@
 		  end
 }
 =

+
+
+kClientSideGump_Paperdoll_Own	=3D playerPaperdoll -- own paperdoll, includ=
ing buttons like quest,skills..
+kClientSideGump_Paperdoll_Other	=3D npcPaperdoll -- paperdoll of someone e=
lse, no buttons
+
+
 -- base body gump ids
 local kGumpBaseId_Male	=3D 50000
 local kGumpBaseId_Female=3D 60000

Modified: trunk/lua/gui/gui.quit.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.quit.lua (original)
+++ trunk/lua/gui/gui.quit.lua Fri Jun 27 23:34:54 2008
@@ -22,6 +22,8 @@
  [1]	=3D function (widget,mousebutton) if (mousebutton =3D=3D 1) then Term=
inate() end end,
 }
 =

+kClientSideGump_Quit =3D quitGump -- do you really want to quit ?
+
 gQuitDialog =3D nil
 function OpenQuit()
 	if not(gQuitDialog) then

Modified: trunk/lua/gui/gui.securetrade.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.securetrade.lua (original)
+++ trunk/lua/gui/gui.securetrade.lua Fri Jun 27 23:34:54 2008
@@ -15,6 +15,8 @@
 	[0] =3D "me",
 	[1] =3D "unknown",
 }
+
+kClientSideGump_SecureTrade	=3D securetrading -- trade dialog with left(ow=
n-offer) and right(other-offer) boxes and two agree checkboxes
 =

 -- handles secure trading between players
 -- see also net.uodragdrop.lua for container like droparea

Modified: trunk/lua/gui/gui.skill.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.skill.lua (original)
+++ trunk/lua/gui/gui.skill.lua Fri Jun 27 23:34:54 2008
@@ -54,6 +54,9 @@
 quickskillGump.textline =3D {
 }
 =

+kClientSideGump_Skill_Quick		=3D quickskillGump	-- ??? only two pictures, =
maybe the hot-button ?
+kClientSideGump_Skill			=3D skillGump			-- the big skill list dialog with =
up/down/lock boxes, grab icons and scrollbar
+
 -- global player skill stuff list, see SkillUpdate for details
 gPlayerSkills =3D nil
 =


Modified: trunk/lua/gui/gui.status.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.status.lua (original)
+++ trunk/lua/gui/gui.status.lua Fri Jun 27 23:34:54 2008
@@ -55,6 +55,8 @@
 	[21] =3D "status_energres",
 }
 =

+kClientSideGump_Status =3D statusGump -- big status dialog showing own dex=
,weight,luck...
+
 -- toggles the display of the extended aos stats
 gStatusAosDialog_LastPositionX =3D nil
 gStatusAosDialog_LastPositionY =3D nil

Modified: trunk/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.loading.lua (original)
+++ trunk/lua/lib.loading.lua Fri Jun 27 23:34:54 2008
@@ -33,16 +33,13 @@
 end
 =

 =

-
--- load basic data before login
-function LoadBasicData ()	=

-	InitFallBacks()
-	=

+function Load_Hue		()
 	if (gHueLoaderType) then
 		LoadingProfile("init HueLoader")
 		gHueLoader =3D CreateHueLoader(gHueLoaderType,CorrectPath( Addfilepath(g=
HuesFile) ) )
 	end
-		=

+end
+function Load_ArtMap	()
 	if (gArtMapLoaderType) then
 		LoadingProfile("init ArtMapLoader")
 		gArtMapLoader =3D CreateArtMapLoader(gArtMapLoaderType,CorrectPath( Addf=
ilepath(gArtidxFile) ),CorrectPath( Addfilepath(gArtFile) ))
@@ -50,13 +47,14 @@
 --		LoadingProfile("init ManualArtMaterialLoader")
 --		gManualArtMaterialLoader =3D CreateManualArtMaterialLoader("uo_art_%i"=
,"tex_base_alpha",gArtMapLoader,true,true,false)
 	end
-		=

+end
+function Load_Gump		()
 	if (gGumpLoaderType) then
 		LoadingProfile("init GumpLoader")
 		gGumpLoader =3D CreateGumpLoader(gGumpLoaderType,CorrectPath( Addfilepat=
h(gGumpidxFile) ),CorrectPath( Addfilepath(gGumpFile) ))
 	end
 end
-
+	=

 function LoadTexAtlas ()
 	-- load texture atlas mappings
 	-- high, med, low
@@ -98,8 +96,7 @@
 end
 =

 -- load bigger data chunks while menu is visible
-function PreLoad ()
-	--DebugCallLogStartIgnore()
+function Load_Font ()
 	if (gUniFontLoaderType) then
 		LoadingProfile("init unifonts")
 		-- TODO : fonts.mul  needed as well ??
@@ -115,7 +112,9 @@
 			gUniFontHeight[i] =3D CreateUniFontTexture(gUniFontLoaderList[i],gUniFo=
ntName[i])
 		end
 	end
-	=

+end
+
+function Load_Cliloc ()
 	if (gClilocLoaderType) then
 		LoadingProfile("init ClilocLoader")
 		local localisation_file =3D nil
@@ -131,19 +130,24 @@
 --			gIntLocLoaders[i] =3D CreateClilocLoader(gClilocLoaderType,CorrectPat=
h( Addfilepath(filenamebase.."enu") ),localisation_file)
 --		end
 	end
-
+end
+
+function Load_Stitchin ()
 	if (gStitchinLoaderType) then
 		LoadingProfile("init StitchinLoader")
 		gStitchinLoader =3D CreateStitchinLoader(gStitchinLoaderType,CorrectPath=
( Addfilepath(gStitchinFile) ))
 	end
-
+end
+function Load_Speech () =

 	if (gSpeechLoaderType) then
 		LoadingProfile("init SpeechLoader")
 		if (gSpeechSupport) then
 			gSpeechLoader =3D CreateSpeechLoader(gSpeechLoaderType,CorrectPath( Add=
filepath(gSpeechFile) ),true)
 		end
 	end
-
+end
+
+function Load_TileType () =

 	if (gTileTypeLoaderType) then
 		LoadingProfile("init TileTypeLoader")
 		gTileTypeLoader =3D CreateTileTypeLoader(gTileTypeLoaderType,CorrectPath=
( Addfilepath(gTiledataFile) ))
@@ -158,38 +162,49 @@
 			end
 		end
 	end
-	=

+end
+
+function Load_TexMap () =

 	if (gTexMapLoaderType) then
 		LoadingProfile("init TexMapLoader")
 		gTexMapLoader =3D CreateTexMapLoader(gTexMapLoaderType,CorrectPath( Addf=
ilepath(gTexidxFile) ),CorrectPath( Addfilepath(gTexmapsFile) ))
 	end
-
+end
+
+function Load_Multi () =

 	if (gMultiLoaderType) then
 		LoadingProfile("init MultiLoader")
 		gMultiLoader =3D CreateMultiLoader(gMultiLoaderType,CorrectPath( Addfile=
path(gMultiidxFile) ),CorrectPath( Addfilepath(gMultiFile) ))
 	end
-	=

+end
+
+function Load_Sound () =

 	if (gSoundLoaderType and gUseEffect) then
 		LoadingProfile("init SoundLoader")
 		gSoundLoader =3D CreateSoundLoader(gSoundLoaderType,CorrectPath( Addfile=
path(gSoundidxFile) ),CorrectPath( Addfilepath(gSoundFile) ))
 		SoundInit(gUseSoundSystem,22050)
 	end
-	=

+end
+
+function Load_Anim () =

 	if (gAnimLoaderType) then
 		LoadingProfile("init AnimLoader")
 		gAnimLoader =3D CreateAnimLoader(gAnimLoaderType,200,200,CorrectPath( Ad=
dfilepath(gAnimidxFile) ),CorrectPath( Addfilepath(gAnimFile) ))		=

 	end
-	=

 	if (gAnimDataLoaderType) then
 		LoadingProfile("init AnimDataLoader")
 		gAnimDataLoader =3D CreateAnimDataLoader(gAnimDataLoaderType,CorrectPath=
( Addfilepath(gAnimdataFile) ))
 	end
-	=

+end
+
+function Load_RadarColor () =

 	if (gRadarColorLoaderType) then
 		LoadingProfile("init RadarColorLoader")
 		gRadarColorLoader =3D CreateRadarColorLoader(gRadarColorLoaderType,Corre=
ctPath( Addfilepath(gRadarcolFile) ))
 	end
-
+end
+
+function Load_EquipConf () =

 	LoadingProfile("parsing Equipconv.def")
 	-- only parse the file if it exists
 	if file_exists(CorrectPath( Addfilepath(gEquipconvFile) )) then
@@ -197,12 +212,34 @@
 	else
 		gDefFile_EquiqConv =3D nil
 	end
-	=

+end
+
+function Load_Granny () =

 	if (gGrannyLoaderType) then
 		LoadingProfile("init GrannyLoader")
 		gGrannyLoader =3D CreateGrannyLoader(gGrannyLoaderType)
 	end
-	=

+end
+
+
+function PreLoad ()
+	--DebugCallLogStartIgnore()
+	Load_Font()
+	Load_Cliloc()
+	Load_Speech()
+	Load_TileType()
+	Load_TexMap()
+	Load_Multi()
+	Load_Sound()
+	Load_Anim()
+	Load_RadarColor()
+	Load_EquipConf()
+	Load_Stitchin()
+	Load_Granny()
+	Load_Hue()
+	Load_ArtMap()
+	Load_Gump()	=

+
 	if gPreloadStaticMesh then
 		LoadingProfile("preload static meshes")
 		PreloadAllStaticMesh()

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Fri Jun 27 23:34:54 2008
@@ -300,6 +300,7 @@
 	-- if (false) then TestZLib() end
 	-- if (false) then TestUniFontLoader() end
 	if (gCommandLineSwitches["-guitest"]) then GUITest() end
+	if (gCommandLineSwitches["-gumptest"]) then GumpParserTest() end
 	-------------------------------------------------------------------------=
---------------------------------
 =

 	-- maybe we should check here if in offline or online mode!?
@@ -308,8 +309,7 @@
 	LoadingProfile("init basic gui")
 	CreateIrisLogo()
 =

-	LoadBasicData()
-	=

+	InitFallBacks()
 	InitArtFilter()
 	=

 	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size



From no-reply at zwischenwelt.org  Sat Jun 28 00:40:31 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 27 Jun 2008 22:40:31 -0000
Subject: [Iris-commit] [IRIS] r2255 - in /trunk/lua: lib.3d.dynamic.lua
	lib.3d.map.lua
Message-ID: <20080627224036.8DCFB1C180A9@zwischenwelt.org>

Author: hagish
Date: Sat Jun 28 00:40:16 2008
New Revision: 2255

Log:
removed obslete uv textatlas patch calls

Modified:
    trunk/lua/lib.3d.dynamic.lua
    trunk/lua/lib.3d.map.lua

Modified: trunk/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.dynamic.lua (original)
+++ trunk/lua/lib.3d.dynamic.lua Sat Jun 28 00:40:16 2008
@@ -8,6 +8,7 @@
 Renderer3D.gFastBatchDynamicsUpdateNext =3D nil
 Renderer3D.gFastBatchDynamicsUpdateNextTimout =3D 10
 Renderer3D.gFastBatchDynamicsUpdateBlockLimit =3D 5
+Renderer3D.gFastBatchDynamicsBlockSize =3D 8
 Renderer3D.gFastBatchDynamicsMap =3D CreateArray2D()
 Renderer3D.gFastBatchDynamicsMapDestroyListener =3D nil
 =

@@ -36,9 +37,6 @@
 	if Renderer3D.gFastBatchDynamicsUpdateNeeded and =

 		(not Renderer3D.gFastBatchDynamicsUpdateNext or Renderer3D.gFastBatchDyn=
amicsUpdateNext < gMyTicks) then
 	=

-		local cxloc,cyloc =3D self:GetLookAheadCamPos()
-		local cbx,cby =3D math.floor(cxloc/8 - 0.5),math.floor(cyloc/8 - 0.5)
-
 		local blocksUpdated =3D 0
 		local blocksLimit =3D Renderer3D.gFastBatchDynamicsUpdateBlockLimit or 1
 		local blocksLeft =3D 0
@@ -53,8 +51,6 @@
 					=

 					-- unset dirty flag
 					v.mbUpdateNeeded =3D false
-					=

-					local prio =3D 1 + 100 / (math.abs(bx-cbx)+math.abs(by-cby))
 					=

 					-- on demand create
 					if not v.mFastBatch then
@@ -119,8 +115,8 @@
 =

 -- marks the dynamic block at uo position xy dirty, will get rebuild next =
time
 function Renderer3D:MarkDynamicBlockDirty	(x,y)
-	local bx =3D math.floor(x/8)
-	local by =3D math.floor(y/8)
+	local bx =3D math.floor(x / Renderer3D.gFastBatchDynamicsBlockSize)
+	local by =3D math.floor(y / Renderer3D.gFastBatchDynamicsBlockSize)
 	if Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by) then
 		local e =3D Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by)
 		e.mbUpdateNeeded =3D true
@@ -148,8 +144,8 @@
 	Renderer3D:RemoveDynamicFromMap(dynamic)
 =

 	-- block position
-	local bx =3D math.floor(dynamic.xloc/8)
-	local by =3D math.floor(dynamic.yloc/8)
+	local bx =3D math.floor(dynamic.xloc / Renderer3D.gFastBatchDynamicsBlock=
Size)
+	local by =3D math.floor(dynamic.yloc / Renderer3D.gFastBatchDynamicsBlock=
Size)
 	=

 	-- block empty? create a new entry
 	if not Array2DGet(Renderer3D.gFastBatchDynamicsMap, bx,by) then
@@ -171,9 +167,6 @@
 end
 =

 function Renderer3D:RemoveDynamicFromMap	(dynamic)
-	-- local bx =3D math.floor(dynamic.xloc/8)
-	-- local by =3D math.floor(dynamic.yloc/8)
-	=

 	Array2DForAll(Renderer3D.gFastBatchDynamicsMap, function(e,bx,by)
 		-- remove dynamic if available
 		if e.mlDynamic[dynamic.serial] then
@@ -190,25 +183,6 @@
 			Array2DSet(Renderer3D.gFastBatchDynamicsMap, bx,by, nil)
 		end
 	end)
-end
-
--- untested
-function Renderer3D:RemoveDynamicBlock	(blockx,blocky)
-	if Array2DGet(Renderer3D.gFastBatchDynamicsMap, blockx,blocky) then
-		print("RemoveDynamicBlock",blockx,blocky)
-		local e =3D Array2DGet(Renderer3D.gFastBatchDynamicsMap, blockx,blocky)
-		=

-		-- remove all dynamics
-		for k,v in pairs(e.mlDynamic) do
-			e.miCount =3D e.miCount - 1
-			e.mlDynamic[k] =3D nil
-			print("RemoveDynamicBlock: remove serial",k)
-		end
-
-		-- and kill the block
-		if e.mFastBatch then e.mFastBatch:Destroy() end
-		Array2DSet(Renderer3D.gFastBatchDynamicsMap, blockx,blocky, nil)
-	end
 end
 =

 -- rebuilds the graphic of the dynamics
@@ -343,7 +317,7 @@
 	local bCorpseGFX =3D false
 	if (bCorpse) then
 		-- corpse
-		print("CORPSECODE,CreateDynamicGfx corpse",item.amount)
+		-- print("CORPSECODE,CreateDynamicGfx corpse",item.amount)
 		bCorpseGFX =3D true
 		=

 		local bodyid =3D item.amount
@@ -461,7 +435,6 @@
 		if (gFastBatchDynamics and item.meshname and item.meshname ~=3D false) t=
hen
 			-- trigger: burn all dynamics into the dynamic fastbatch
 			item.meshbuffer =3D GetMeshBuffer(item.meshname) -- for mousepicking
-			TexAtlas_AdjustMeshBufferIfNeeded(item.meshname,item.meshbuffer)
 			=

 			Renderer3D:AddDynamicToMap	(item)
 		-- Old rendering method

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Sat Jun 28 00:40:16 2008
@@ -318,7 +318,6 @@
 			end
 =

 			entity.meshbuffer =3D GetMeshBuffer(meshname) -- for mousepicking
-			TexAtlas_AdjustMeshBufferIfNeeded(meshname,entity.meshbuffer)
 			local orderval =3D entity.zloc -- used for blendout later (fastbatch fe=
ature)
 			if visible then chunk.fastbatch:FastBatch_AddMeshBuffer(entity.meshbuff=
er, orderval ,entity.x,entity.y,entity.z, qw,qx,qy,qz, sx,sy,sz, r,g,b,a) e=
nd
 		else



From no-reply at zwischenwelt.org  Sat Jun 28 01:12:42 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 27 Jun 2008 23:12:42 -0000
Subject: [Iris-commit] [IRIS] r2256 - in /trunk: lua/main.lua widgets/
Message-ID: <20080628000002.981D51C1801D@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Jun 28 01:12:42 2008
New Revision: 2256

Log:
added widget-plugin dir

Added:
    trunk/widgets/
Modified:
    trunk/lua/main.lua

Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sat Jun 28 01:12:42 2008
@@ -11,6 +11,7 @@
 gMacroPath 			=3D datapath.."mymacros.lua"
 gMacroPathFallback	=3D datapath.."mymacros.lua.dist"
 gMainPluginDir 		=3D gMainWorkingDir.."plugins/"
+gIrisWidgetDir 		=3D gMainWorkingDir.."widgets/"
 gSecondsSinceLastFrame =3D 0
 =

 gInGameStarted =3D false
@@ -279,6 +280,7 @@
 	CheckUODir()
 	=

 	LoadPlugins_Iris()
+	LoadWidgets(gIrisWidgetDir)
 	NotifyListener("Hook_PluginsLoaded")
 	=

 	gMyTicks =3D Client_GetTicks()



From no-reply at zwischenwelt.org  Sat Jun 28 19:04:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 28 Jun 2008 17:04:51 -0000
Subject: [Iris-commit] [IRIS] r2258 - in /trunk: bin/iris2.exe
	lua/lib.3d.map.lua
Message-ID: <20080628170452.0C6BD1C180A2@zwischenwelt.org>

Author: sience
Date: Sat Jun 28 19:04:51 2008
New Revision: 2258

Log:
-new win32 binary
-small temp. fix

Modified:
    trunk/bin/iris2.exe
    trunk/lua/lib.3d.map.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.3d.map.lua (original)
+++ trunk/lua/lib.3d.map.lua Sat Jun 28 19:04:51 2008
@@ -69,6 +69,10 @@
 =

 -- param is the area where normal mapblocks are loaded
 function Renderer3D:RebuildLowDetailTerrain (minx,maxx,miny,maxy)
+
+	-- currently doesn't work, temp. disabled (no textures) !!!!!!!!!!!!!!!
+	if (true) then return end
+
 	if (not gEnableLowDetailTerrainFarSight) then return end
 	if (not Renderer3D.gLowDetailTerrainNeedsRebuild) then return end
 	self.gLowDetailTerrainNeedsRebuild =3D false



From no-reply at zwischenwelt.org  Sun Jun 29 03:21:47 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 01:21:47 -0000
Subject: [Iris-commit] [IRIS] r2259 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.iris_atlasgroup.lua lua/main.lua widgets/widget.gumpdialog.lua
 widgets/widget.uoimage.lua
Message-ID: <20080629012148.2C5F61C180A3@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 29 03:21:47 2008
New Revision: 2259

Log:
started revamping gumpparser, added lua/lib.iris_atlasgroup.lua

Added:
    trunk/lua/lib.iris_atlasgroup.lua
    trunk/widgets/widget.gumpdialog.lua
    trunk/widgets/widget.uoimage.lua
Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/main.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Sun Jun 29 03:21:47 2008
@@ -31,6 +31,7 @@
 	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
 	]]--
 	local dialog =3D GumpParser(kClientSideGump_Paperdoll_Own,true)
+	-- TODO : html-center : glyphlist : glyphs to change h-alignment during p=
arsing ? needs line width.. and full text width (unless wrap specified !)
 	=

 	GUITest_MainLoop()
 	os.exit(0)
@@ -40,16 +41,16 @@
 =

 --[[
 conversion to new guisystem :  =

-MakeSortedDialog
-CreatePlainEditText
-MakeText
-MakeBorderGump
-MakeBorderGumpPart
-MakeGumpButtonFunctionOnClick
-MakeGumpButton
-MakeGumpCheckBox
-MakeArtGumpPart
-MakeWrappedClippedText
+MakeSortedDialog()
+CreatePlainEditText(parent,x,y,w,h,textcol,bPassWordStyle,stylesetname)
+MakeText(parent,x,y,text,charh,col,fontname)
+MakeBorderGump(parent,iBaseID,x,y,cx,cy)
+MakeBorderGumpPart(parent,iGumpID,x,y,cx,cy,skip_rows_from_top,hueid)
+MakeGumpButtonFunctionOnClick(parent,gumpid_normal,gumpid_over,gumpid_pres=
sed,x,y,w,h,onClickFunction)
+MakeGumpButton(parent, gumpid_normal, gumpid_over, gumpid_pressed, x, y, w=
, h, bCallDialogDefault)
+MakeGumpCheckBox(parent, bChecked, gumpid_normal, gumpid_checked, x, y, w,=
 h, bCallDialogDefault)
+MakeArtGumpPart(parent,iArtID,x,y,cx,cy,skip_rows_from_top,hueid)
+MakeWrappedClippedText(parent,x,y,width,height,text,charh,col,center,div,f=
ontname)
 onMouseDown
 ]]--
 =

@@ -190,6 +191,379 @@
 	dialog:Close()
 end
 =

+-- returns a table
+-- token is an array
+-- tokenformat is a string with comma-separated field names like "x,y,widt=
h,height,[ctrlname],..." =

+-- [] encasing optional params and ... for not checking the number of rema=
ining params
+function GumpParser_ParseToken (token,tokenformat)
+	local res =3D {}
+	for k,fieldname in ipairs(explode(",",tokenformat)) do
+		if (fieldname =3D=3D "...") then return res end
+		local tokenval =3D token[k+1]
+		-- [param] is optional
+		if (StrLeft(fieldname,1) =3D=3D "[" and StrRight(fieldname,1) =3D=3D "]"=
) then
+			fieldname =3D string.sub(fieldname,2,-2) -- cut away one char from each=
 side
+			if (not tokenval) then return res end -- optional, so exit without warn=
ing possible
+		end
+		if (not tokenval) then print("GumpParser_ParseToken:warning:missing para=
m",k,fieldname,implode(",",token)) return res end -- warn of missing parame=
ters
+		local tokenvalnum =3D tonumber(tokenval)
+		if (tokenval =3D=3D tokenvalnum) then tokenval =3D tokenvalnum end -- co=
nvert number-strings to real numbers
+		res[fieldname] =3D tokenval
+	end
+	return res
+end
+
+-- returns dialog-widget
+function GumpParser_CreateDialog	(dialogId,bClientSideMode)
+	return GetDesktopWidget():CreateChild("GumpDialog",{dialogId=3DdialogId,b=
ClientSideMode=3DbClientSideMode})
+end
+
+-- returns widget
+-- param : x,y,gump_id/art_id,width,height,hue=3D0,tiled=3Dfalse(strech),c=
hecker=3Dfalse(gray-transparent-background),multipart=3Dfalse(true for resi=
zepic)
+-- either art_id or gump_id is used
+function GumpParser_MakeImage (parent,param) return parent:CreateChild("UO=
Image",param) end
+
+-- returns widget
+-- param : x,y,width,height,cliloc_id/textline_id,background,scrollbar,hue=
  : background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddisplayed
+function GumpParser_MakeText (parent,param,textlines) -- param.cliloc_id o=
r param.textline_id , param.color =3D hue
+	print("TODO:GumpParser_MakeText")
+	--[[ pre-gui2 :
+	widget =3D guimaker.MakeWrappedClippedText (parent, param.x, param.y+htex=
t_correction,
+													param.width,param.height,param.msgid, msg.charh, gFontDefs["G=
ump"].col,
+													msg.center, msg.div, gFontDefs["Gump"].name)
+	local rawtext =3D param.textline_id and textlines[param.textline_id] or (=
gClilocLoader and gClilocLoader:Get(param.cliloc_id) or "no_cliloc")
+	local text =3D UnicodeFix(HtmlParser(widget,rawtext)) =

+	]]-- =

+end
+	=

+
+-- returns widget
+-- param : x,y,gump_id_normal,gump_id_pressed,quit,page_id,return_value
+-- optionally : art_id,hue,art_x,art_y    if an art-image is used as butto=
n label
+function GumpParser_MakeButton (parent,param) end
+	print("TODO:GumpParser_MakeButton")
+				--[[
+				if (bClientSideMode) then
+					widget =3D MakeGumpButtonFunctionOnClick (parent,gump_id_normal,gump_=
id_normal,gump_id_pressed,x,y,
+																	nil,nil,Gumpdata.functions[return_value])
+					-- buttontileart : MakeArtGumpPart (parent,art_id,x+art_x,y+art_y,0,0=
,0,hue)
+					widget.page			=3D tonumber(bToken[7])
+				else
+					widget =3D MakeGumpButton (parent,gump_id_normal,gump_id_normal,gump_=
id_pressed,x,y,nil,nil,false)
+					-- buttontileart : MakeArtGumpPart (parent,art_id,x+art_x,y+art_y,0,0=
,0,hue)
+					widget.page			=3D tonumber(bToken[7])
+					widget.onLeftClick =3D function (widget)
+											if (widget.page > 0 and not(widget.page > table.getn(pages)) ) =
then
+												printdebug("gump","Parsegump Button: Switch to Page "..widget.=
page.."/"..table.getn(pages))
+												widget.dialog:ShowPage(widget.page)
+											elseif (widget.returnmsg) then
+												printdebug("gump","Button pressed -> Send button return_messag=
e: "..widget.returnmsg)
+												CloseServerSideGump(Gumpdata.playerid, Gumpdata.dialogId, widg=
et.returnmsg)
+											end
+										end
+				end
+				buttontileart:
+				]]--
+				=

+-- returns widget
+-- param : x,y,width,height,hue,return_value,textline_id_default
+function GumpParser_MakeEditText (parent,param) end
+	print("TODO:GumpParser_MakeEditText")
+				--[[
+				widget =3D CreatePlainEditText (parent, x,y,width,height, {1.0,1.0,1.0=
,1.0})
+				local text =3D Gumpdata.textline[textline_id_default] or "No textentry"
+				widget:SetText(UnicodeFix(text))
+
+				widget.mbIgnoreMouseOver =3D false
+				widget.returnmsg =3D return_value
+				widget.returndefid =3D textline_id_default
+
+				widget.onMouseLeave =3D function (widget) widget:Deactivate() end
+				table.insert(dialog.uo_text,widget)
+				]]--
+				=

+-- returns widget
+-- param : x,y,gump_id_normal,gump_id_pressed,status,return_value
+function GumpParser_MakeRadioButton (parent,param,groupnumber) end
+	print("TODO:GumpParser_MakeRadioButton")
+				--[[
+				widget =3D MakeRadioButton(parent,param)
+				local radio_x =3D x
+				local radio_y =3D y
+				local radio_norm =3D gump_id_normal
+				local radio_down =3D gump_id_pressed
+				local radio_state =3D tonumber(param.status)
+				local radio_rtn =3D tonumber(return_value)
+				if (radio_state=3D=3D0) then
+					widget =3D MakeBorderGumpPart(parent, radio_norm, radio_x, radio_y)
+				else
+					widget =3D MakeBorderGumpPart(parent, radio_down, radio_x, radio_y)
+				end
+				widget.state=3Dradio_state
+				widget.returnmsg=3Dradio_rtn
+				widget.mbIgnoreMouseOver =3D false
+				widget.mat_normal 	=3D GetGumpMat(radio_norm)
+				widget.mat_pressed 	=3D GetGumpMat(radio_down)
+
+				widget.onMouseDown	=3D function (widget,mousebutton)
+										if (mousebutton =3D=3D 1) then
+											if (widget.state=3D=3D0) then
+												widget.gfx:SetMaterial(widget.mat_pressed)
+												widget.state=3D1
+											else
+												widget.gfx:SetMaterial(widget.mat_normal)
+												widget.state=3D0
+											end
+											printdebug("gump","RadioButton changed : id=3D"..widget.returnm=
sg.." state=3D"..widget.state)
+										end
+									   end
+				table.insert(dialog.uo_radio,widget)
+				]]--
+				=

+				=

+-- returns widget
+-- param : x,y,gump_id_normal,gump_id_pressed,status,return_value
+function GumpParser_MakeCheckBox (parent,param) end
+	print("TODO:GumpParser_MakeCheckBox")
+				--[[
+				widget =3D MakeCheckBox(parent,param)
+				local check_x =3D x
+				local check_y =3D y
+				local check_norm =3D gump_id_normal
+				local check_down =3D gump_id_pressed
+				local check_state =3D tonumber(param.status)
+				local check_rtn	=3D return_value
+
+				widget =3D MakeGumpCheckBox(parent, check_state > 0, check_norm, check=
_down, check_x, check_y)
+				=

+				if (false) then
+					if (check_state=3D=3D0) then
+						widget =3D MakeBorderGumpPart(parent, check_norm, check_x, check_y)
+					else
+						widget =3D MakeBorderGumpPart(parent, check_down, check_x, check_y)
+					end
+					widget.state=3Dcheck_state
+					widget.returnmsg=3Dcheck_rtn
+					widget.mbIgnoreMouseOver =3D false
+					widget.mat_normal 	=3D GetGumpMat(check_norm)
+					widget.mat_pressed 	=3D GetGumpMat(check_down)
+
+					widget.onMouseDown	=3D function (widget,mousebutton)
+											if (mousebutton =3D=3D 1) then
+												if (widget.state=3D=3D0) then
+													widget.gfx:SetMaterial(widget.mat_pressed)
+													widget.state=3D1
+												else
+													widget.gfx:SetMaterial(widget.mat_normal)
+													widget.state=3D0
+												end
+												printdebug("gump","Checkbox changed : id=3D"..widget.returnmsg=
.." state=3D"..widget.state)
+											end
+										  end
+				end
+				=

+				table.insert(dialog.uo_check,widget)
+				]]--
+				=

+function GumpParser_SetToolTipp	(widget,cliloc_id)
+	print("TODO:GumpParser_SetToolTipp")
+end
+
+
+-- close already existing dialog with the same id
+function GumpParser_CloseOldDialog	(dialogId,playerid,bClientSideMode)
+	print("TODO:GumpParser_CloseOldDialog")
+	if ((not bClientSideMode) and gServerSideGump[dialogId]) then
+		CloseServerSideGump(playerid, dialogId, 0, bClientSideMode)
+	end
+end
+				=

+function GumpParser_New (Gumpdata, bClientSideMode)
+	-- if there is a dialog with the same id, close it
+	GumpParser_CloseOldDialog(Gumpdata.dialogId,Gumpdata.playerid,bClientSide=
Mode)
+	=

+	-- setup
+	local dialog =3D GumpParser_CreateDialog(Gumpdata.dialogId,bClientSideMod=
e)
+	dialog.gumpdata =3D Gumpdata -- for debugging
+	local parent =3D dialog:GetPage(0)
+	local groupnumber =3D -1 -- for radiobuttons
+	local param
+	local widget
+	=

+	-- parse gump code
+	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
+		local bToken =3D {}
+		for token in string.gfind(v, "%w+") do table.insert(bToken,token) end
+		local command =3D bToken[1] and string.lower(bToken[1])
+
+		------------------------------------------------------------------------=
--------------------
+		if (not command) then -- no word in line
+		elseif (command =3D=3D "noclose") then
+			dialog.noclose =3D true
+		elseif (command =3D=3D "nomove") then
+			dialog.nomove =3D true
+		elseif (command =3D=3D "nodispose") then
+			dialog.nodispose =3D true
+		elseif (command =3D=3D "noresize") then
+			dialog.noresize =3D true
+			=

+		--Description:  Specifies which page to define. Page 0 is already presen=
t and visible with all other Pages (1,2,3,etc) =

+		elseif (command =3D=3D "page") then param =3D GumpParser_ParseToken(bTok=
en,"pagenum")
+			parent =3D dialog:GetPage(param.pagenum)
+			groupnumber =3D -1 -- start new radio button group on page-switch ? not=
 sure if this is correct  (TODO : test moongate menu)
+			=

+			=

+			=

+		-- ***** ***** ***** ***** ***** TEXT =

+			=

+			=

+		=

+		--xmfhtmlgump <x> <y> <width> <height> <cliloc_id> <background> <scrollb=
ar>
+		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
+		elseif (command =3D=3D "xmfhtmlgump") then param =3D GumpParser_ParseTok=
en(bToken,"x,y,width,height,cliloc_id,background,scrollbar,[ctrlname]")
+			widget =3D GumpParser_MakeText(parent,param)
+			=

+		--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc_id> <background> <sc=
rollbar> <hue>
+		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
+		elseif (command =3D=3D "xmfhtmlgumpcolor") then param =3D GumpParser_Par=
seToken(bToken,"x,y,width,height,cliloc_id,background,scrollbar,hue,[ctrlna=
me]")
+			widget =3D GumpParser_MakeText(parent,param)
+			=

+		--croppedtext <x> <y> <width> <height> <hue> <textline_id>
+		--Description:  Adds a text field to the gump. This is similar to the te=
xt command,
+		--but the text is cropped to the defined area.
+		-- TODO : HUE . old gui default : {92/255,92/255,178/255,1.0}
+		elseif (command =3D=3D "croppedtext") then param =3D GumpParser_ParseTok=
en(bToken,"x,y,width,height,hue,textline_id,[ctrlname]")
+			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
+			=

+		--HtmlGump <x> <y> <width> <height> <textline_id> <background> <scrollba=
r>
+		--Description:  Defines a text-area where Html-commands are allowed.
+		--				<background> and <scrollbar> can be 0 or 1 and define whether the =
background is transparent and a scrollbar is displayed.
+		--{ htmlgump 10 8 100 20 0 0 0 }
+		elseif (command =3D=3D "htmlgump") then param =3D GumpParser_ParseToken(=
bToken,"x,y,width,height,textline_id,background,scrollbar,[ctrlname]")
+			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
+			=

+		--text <x> <y> <hue> <textline_id>
+		--Description:  Defines the position and hue of a text (data) entry.
+		elseif (command =3D=3D "text") then param =3D GumpParser_ParseToken(bTok=
en,"x,y,hue,textline_id,[ctrlname]")
+			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
+
+		--tooltip <cliloc_id>
+		--Description:  Adds to the previous layoutarray entry a Tooltip with th=
e in [cliloc-nr] defined Cliloc entry
+		elseif (command =3D=3D "tooltip") then param =3D GumpParser_ParseToken(b=
Token,"cliloc_id,[ctrlname]")
+			if (widget) then GumpParser_SetToolTipp(widget,param.cliloc_id) end
+			=

+			=

+			=

+			=

+		-- ***** ***** ***** ***** ***** IMAGE =

+		=

+		=

+		=

+		--resizepic <x> <y> <gump_id> <width> <height>
+		--stretched instead of tiled ?
+		elseif (command =3D=3D "resizepic") then param =3D GumpParser_ParseToken=
(bToken,"x,y,gump_id,width,height,[ctrlname]")
+			param.multipart =3D true -- the gump_id is just the base id, the border=
 tiles have different ids, calculated from it
+			widget =3D GumpParser_MakeImage(parent,param)
+			=

+		--gumppic <x> <y> <gump_id> [hue=3D353]
+		--Description:  Adds a graphic to the gump, where <id> ist the graphic i=
d of an item.
+		--				Optionaly there is a color parameter. =

+		elseif (command =3D=3D "gumppic") then param =3D GumpParser_ParseToken(b=
Token,"x,y,gump_id,...")
+			if (bToken[5] =3D=3D "hue") then param.hue =3D bToken[6] end
+			widget =3D GumpParser_MakeImage(parent,param)
+			-- in clientmode no hueing is used yet (because of different hue defini=
tions)
+			if (bClientSideMode) then param.ctrlname =3D bToken[5] end
+
+		--gumppictiled <x> <y> <width> <height> <gump_id>
+		--Description:  Similar to GumpPic, but the gumppic is tiled to the give=
n <height> and <width>.
+		elseif (command =3D=3D "gumppictiled") then param =3D GumpParser_ParseTo=
ken(bToken,"x,y,width,height,gump_id,[ctrlname]")
+			param.tiled =3D true
+			widget =3D GumpParser_MakeImage(parent,param)
+
+		--checkertrans <x> <y> <width> <height>
+		--Description:  Creates a transparent rectangle on position <x,y> using =
<width> and <height>.
+		elseif (command =3D=3D "checkertrans") then param =3D GumpParser_ParseTo=
ken(bToken,"x,y,width,height,[ctrlname]")
+			param.checker =3D true
+			widget =3D GumpParser_MakeImage(parent,param)
+
+		--tilepic <x> <y> <art_id>
+		--Description:  Adds a Tilepicture to the gump. <id> defines the tile gr=
aphic-id.
+		elseif (command =3D=3D "tilepic") then param =3D GumpParser_ParseToken(b=
Token,"x,y,art_id,[ctrlname]")
+			widget =3D GumpParser_MakeImage(parent,param)
+
+		--TilePicHue <x> <y> <art_id> <hue>
+		--Description:  Similar to the tilepic command, but with an additional h=
ue parameter.
+		elseif (command =3D=3D "tilepichue") then param =3D GumpParser_ParseToke=
n(bToken,"x,y,art_id,hue,[ctrlname]")
+			widget =3D GumpParser_MakeImage(parent,param)
+		=

+		=

+		=

+		-- ***** ***** ***** ***** ***** INPUT =

+		=

+		=

+		=

+		--Button <x> <y> <gump_id_normal> <gump_id_pressed> <quit> <page_id> <re=
turn_value>
+		--Description:  Adds a button to the gump with the specified coordinates=
 and button graphics.
+		--				<released-id> and <pressed-id> specify the buttongraphic. If press=
ed check for <return-value>.
+		--				Use <page-id> to switch between pages and <quit>=3D1/0 to close th=
e gump.
+		--  return_value is optional on pol
+		elseif (command =3D=3D "button") then param =3D GumpParser_ParseToken(bT=
oken,"x,y,gump_id_normal,gump_id_pressed,quit,page_id,[return_value],[ctrln=
ame]")
+			widget =3D GumpParser_MakeButton(parent,param)
+
+		--buttontileart <x> <y> <gump_id_normal> <gump_id_pressed> <quit> <page_=
id> <return_value> <art_id> <hue> <art_x> <art_y>
+		--Client introduced: between 4.0.4d and 5.0.2b
+		--Description:  Adds a button to the gump with the specified coordinates=
 and tilepic as graphic.
+		--				<tile-x> and <tile-y> define the coordinates of the tile graphic a=
nd are relative to <x> and <y>.
+		--{ buttontileart 432 248 9010 9010 1 0 33 1352 0 100 20 }
+		elseif (command =3D=3D "buttontileart") then param =3D GumpParser_ParseT=
oken(bToken,"x,y,gump_id_normal,gump_id_pressed,quit,page_id,return_value,a=
rt_id,hue,art_x,art_y,[ctrlname]")
+			widget =3D GumpParser_MakeButton(parent,param)
+			=

+		--checkbox <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_v=
alue>
+		--Description:  Adds a CheckBox to the gump. Multiple CheckBoxes can be =
pressed at the same time.
+		--				Check the <return-value> if you want to know which CheckBoxes were=
 selected.
+		elseif (command =3D=3D "checkbox") then param =3D GumpParser_ParseToken(=
bToken,"x,y,gump_id_normal,gump_id_pressed,status,return_value,[ctrlname]")
+			widget =3D GumpParser_MakeCheckBox(parent,param)
+			=

+		--radio <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_valu=
e>
+		--Description:  Same as Checkbox, but only one Radiobutton can be presse=
d at the same time, except they are per linked via the 'Group' command.
+		elseif (command =3D=3D "radio") then param =3D GumpParser_ParseToken(bTo=
ken,"x,y,gump_id_normal,gump_id_pressed,status,return_value,[ctrlname]")
+			widget =3D GumpParser_MakeRadioButton(parent,param,groupnumber)
+			=

+		--Group <groupnumber>
+		--Description:  Links radio buttons to a group. Group is send before rad=
iobuttons. Seems only to work on page 0 and 1.  =

+		elseif (command =3D=3D "group") then param =3D GumpParser_ParseToken(bTo=
ken,"groupnumber")
+			groupnumber =3D param.groupnumber
+			=

+		--textentry <x> <y> <width> <height> <hue> <return_value> <textline_id_d=
efault>
+		--Description:  Defines an area where the <default-text-id> is displayed.
+		--				The player can modify this data. To get this data check the <retur=
n-value>
+		elseif (command =3D=3D "textentry") then param =3D GumpParser_ParseToken=
(bToken,"x,y,width,height,hue,return_value,textline_id_default,[ctrlname]")
+			widget =3D GumpParser_MakeEditText(parent,param)
+			=

+			=

+			=

+		-- ***** ***** ***** ***** ***** END =

+		=

+		=

+		-- UNKNOWN...
+		else
+			printdebug("gump","UNKNOWN Generic Gump Command: "..strjoin(bToken))
+		end
+		=

+		if (param and param.ctrlname) then dialog.controls[param.ctrlname] =3D w=
idget end
+	end
+
+	-- hide all except page 0 and 1
+	dialog:ShowPage(1)
+
+	if (not bClientSideMode) then
+		gServerSideGump[Gumpdata.dialogId] =3D dialog
+	else
+		return dialog
+	end
+end
+
+
 function GumpParser(Gumpdata, Clientsidemode)
 	if (not gGumpLoader) then return end
 =


Modified: trunk/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/main.lua (original)
+++ trunk/lua/main.lua Sun Jun 29 03:21:47 2008
@@ -48,6 +48,7 @@
 dofile(libpath .. "lib.mousepick.lua")
 dofile(libpath .. "lib.data.lua")
 dofile(libpath .. "lib.map.lua")
+dofile(libpath .. "lib.iris_atlasgroup.lua")
 dofile(libpath .. "lib.artatlas.lua")
 dofile(libpath .. "lib.cliloc.lua")
 dofile(libpath .. "lib.macrolist.lua")



From no-reply at zwischenwelt.org  Sun Jun 29 14:35:51 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 12:35:51 -0000
Subject: [Iris-commit] [IRIS] r2260 - /trunk/premakelinux.sh
Message-ID: <20080629123551.9D95E1C180A2@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 29 14:35:47 2008
New Revision: 2260

Log:
premakelinux.sh uses included premake executable

Modified:
    trunk/premakelinux.sh

Modified: trunk/premakelinux.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/premakelinux.sh (original)
+++ trunk/premakelinux.sh Sun Jun 29 14:35:47 2008
@@ -1,4 +1,4 @@
 #!/bin/bash
-premake --noassert --target gnu && make CXX=3D"ccache gcc" CONFIG=3DRelease
+./premake --noassert --target gnu && make CXX=3D"ccache gcc" CONFIG=3DRele=
ase
 #~ ./premake --target gnu && make CONFIG=3DRelease
 # tipp : try "make -j 2" : start 2 jobs in parallel, to avoid wait-for-io =
and use multi-cpu processors efficiently during compile



From no-reply at zwischenwelt.org  Sun Jun 29 15:06:32 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 13:06:32 -0000
Subject: [Iris-commit] [IRIS] r2261 - in /trunk: include/builder.h
 lua/gui/gui.gumpparser.lua lua/lib.iris_atlasgroup.lua src/data_gump.cpp
 src/data_gump_L.cpp widgets/widget.uoimage.lua
Message-ID: <20080629130632.8549E1C180A2@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 29 15:06:31 2008
New Revision: 2261

Log:
gumploader:WriteGumpToImage added, lib.iris_atlasgroup.lua : works for art =
and gump now, but no bitmask yet, gui.gumpparser.lua : fixed tonumber probl=
em

Modified:
    trunk/include/builder.h
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.iris_atlasgroup.lua
    trunk/src/data_gump.cpp
    trunk/src/data_gump_L.cpp
    trunk/widgets/widget.uoimage.lua

Modified: trunk/include/builder.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/builder.h (original)
+++ trunk/include/builder.h Sun Jun 29 15:06:31 2008
@@ -75,6 +75,7 @@
 bool	WriteTexMapToFile					(cTexMapLoader& oTexMapLoader,const char* szFil=
ePath,const int iID,cHueLoader* pHueLoader,const short iHue);
 bool	WriteArtMapToFile					(cArtMapLoader& oArtMapLoader,const char* szFil=
ePath,const int iID,cHueLoader* pHueLoader,const short iHue);
 bool	WriteArtMapToImage					(Ogre::Image& pDest,cArtMapLoader& oArtMapLoad=
er,const int iID,cHueLoader* pHueLoader,const short iHue);
+bool	WriteGumpToImage					(Ogre::Image& pDest,cGumpLoader& oGumpLoader,con=
st int iID,cHueLoader* pHueLoader,const short iHue);
 bool	WriteFontGlyphToImage				(Ogre::Image& pDest,cUniFontFileLoader& oUni=
FontFileLoader,const int iCharCode,
 	const Ogre::ColourValue& vInner		=3DOgre::ColourValue::White,
 	const Ogre::ColourValue& vBorder	=3DOgre::ColourValue::Black,

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Sun Jun 29 15:06:31 2008
@@ -30,7 +30,7 @@
 	kClientSideGump_Skill			=3D skillGump			-- the big skill list dialog with=
 up/down/lock boxes, grab icons and scrollbar
 	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
 	]]--
-	local dialog =3D GumpParser(kClientSideGump_Paperdoll_Own,true)
+	local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true)
 	-- TODO : html-center : glyphlist : glyphs to change h-alignment during p=
arsing ? needs line width.. and full text width (unless wrap specified !)
 	=

 	GUITest_MainLoop()
@@ -207,7 +207,7 @@
 		end
 		if (not tokenval) then print("GumpParser_ParseToken:warning:missing para=
m",k,fieldname,implode(",",token)) return res end -- warn of missing parame=
ters
 		local tokenvalnum =3D tonumber(tokenval)
-		if (tokenval =3D=3D tokenvalnum) then tokenval =3D tokenvalnum end -- co=
nvert number-strings to real numbers
+		if (tokenvalnum and tokenval =3D=3D ""..tokenvalnum) then tokenval =3D t=
okenvalnum end -- convert number-strings to real numbers
 		res[fieldname] =3D tokenval
 	end
 	return res

Modified: trunk/lua/lib.iris_atlasgroup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.iris_atlasgroup.lua (original)
+++ trunk/lua/lib.iris_atlasgroup.lua Sun Jun 29 15:06:31 2008
@@ -1,4 +1,5 @@
 -- see also lib.atlasgroup.lua in lugre
+-- see also lib.artatlas.lua ... obsolete ? =

 -- TODO : longterm . releasing parts of the atlas, keep a log which one be=
longs where... last recently/frequently used ?
 -- TODO : longterm . bulk loading ?   lib.artalas.lua
 =

@@ -9,33 +10,41 @@
 =

 -- returns matname,u0,v0,uvw,uvh,origw,origh,bitmask
 function LoadGump	(basemat,gump_id,hue) =

-	if (true) then return "BaseWhiteNoLighting",0,0,1,1,22,22,nil end -- TODO =

-	local basemat,u0,v0,uvw,uvh,origw,origh =3D gAtlasGroup_Gump:LoadMat(base=
mat,gump_id,hue)
+	--~ if (true) then return "BaseWhiteNoLighting",0,0,1,1,22,22,nil end -- =
TODO =

+	local matname,u0,v0,uvw,uvh,origw,origh =3D gAtlasGroup_Gump:LoadMat(base=
mat,gump_id,hue)
+	print("LoadGump",basemat,gump_id,hue,matname,u0,v0,uvw,uvh,origw,origh)
 	local bitmask =3D gAtlasGroup_Gump.bitmasks[gump_id]
-	return basemat,u0,v0,uvw,uvh,origw,origh,bitmask
+	return matname,u0,v0,uvw,uvh,origw,origh,bitmask
 end
 =

 -- returns matname,u0,v0,uvw,uvh,origw,origh,bitmask
-function LoadArt	(basemat,gump_id,hue)
-	if (true) then return "BaseWhiteNoLighting",0,0,1,1,22,22,nil end -- TODO =

-	local basemat,u0,v0,uvw,uvh,origw,origh =3D gAtlasGroup_Art:LoadMat(basem=
at,art_id,hue)
+function LoadArt	(basemat,art_id,hue)
+	--~ if (true) then return "BaseWhiteNoLighting",0,0,1,1,22,22,nil end -- =
TODO =

+	local matname,u0,v0,uvw,uvh,origw,origh =3D gAtlasGroup_Art:LoadMat(basem=
at,art_id,hue)
+	print("LoadArt",basemat,art_id,hue,matname,u0,v0,uvw,uvh,origw,origh)
 	local bitmask =3D gAtlasGroup_Art.bitmasks[art_id]
-	return basemat,u0,v0,uvw,uvh,origw,origh,bitmask
+	return matname,u0,v0,uvw,uvh,origw,origh,bitmask
 end
 =

 -- returns img
 function gAtlasGroup_Gump:LoadImpl (gump_id,hue)
-	local img =3D gGumpLoader:CreateImage(gump_id,hue)
+	local img =3D CreateImage()
+	local bSuccess =3D gGumpLoader:ExportToImage(img,gump_id,gHueLoader,hue o=
r 0)
 	if (not self.bitmasks) then self.bitmasks =3D {} end
-	if (not self.bitmasks[gump_id]) then self.bitmasks[gump_id] =3D BitMaskFr=
omImage(img) or false end
+	if (not bSuccess) then img:Destroy() return end
+	print("gAtlasGroup_Gump:LoadImpl:todo : bitmask")
+	--~ if (not self.bitmasks[gump_id]) then self.bitmasks[gump_id] =3D BitMa=
skFromImage(img) or false end
 	return img
 end
 =

 -- returns img
 function gAtlasGroup_Art:LoadImpl (art_id,hue)
-	local img =3D gArtMapLoader:CreateImage(art_id,hue)
+	local img =3D CreateImage()
+	local bSuccess =3D gArtMapLoader:ExportToImage(img,art_id,gHueLoader,hue =
or 0)
 	if (not self.bitmasks) then self.bitmasks =3D {} end
-	if (not self.bitmasks[art_id]) then self.bitmasks[art_id] =3D BitMaskFrom=
Image(img) or false end
+	if (not bSuccess) then img:Destroy() return end
+	print("gAtlasGroup_Art:LoadImpl:todo : bitmask")
+	--~ if (not self.bitmasks[art_id]) then self.bitmasks[art_id] =3D BitMask=
FromImage(img) or false end
 	return img
 end
 =


Modified: trunk/src/data_gump.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_gump.cpp (original)
+++ trunk/src/data_gump.cpp Sun Jun 29 15:06:31 2008
@@ -98,3 +98,41 @@
 }
 =

 =

+bool	WriteGumpToImage					(Ogre::Image& pDest,cGumpLoader& oGumpLoader,con=
st int iID,cHueLoader* pHueLoader,const short iHue) {
+	cGump *gump =3D oGumpLoader.GetGump(iID);
+	if (gump =3D=3D 0) return false;
+	int iImgW =3D gump->GetWidth();
+	int iImgH =3D gump->GetHeight();
+	short *pImgRaw =3D new short[iImgW*iImgH] ;
+	memset(pImgRaw,0,2*iImgW*iImgH);
+	if( iHue && pHueLoader ) {
+		bool PartialHue =3D (iHue & 0x8000);
+		short* ColorTable =3D pHueLoader->GetHue( (iHue & 0x7FFF)-1 )->GetColors=
();
+
+		if (PartialHue) {
+			cPartialHueFilter Filter;
+			gump->Decode(pImgRaw,iImgW*2,Filter,ColorTable);
+		} else {
+			cHueFilter Filter;
+			gump->Decode(pImgRaw,iImgW*2,Filter,ColorTable);
+		}
+	} else {
+		cSetHighBitFilter Filter;
+		gump->Decode(pImgRaw,iImgW*2,Filter,0);
+	}
+
+	if (pImgRaw =3D=3D 0) {
+		printf("ERROR in WriteGumpToImage, could not create gump raw id=3D%i\n",=
iID);
+		return false;
+	}
+	=

+	// convert from 16 to 32 bits
+	uint32	*pBuf32 =3D new uint32[iImgW*iImgH];
+	ColorBuffer16To32(iImgW,iImgH,(uint16*)pImgRaw,(uint32*)pBuf32);
+	delete [] pImgRaw;
+	=

+	pDest.loadDynamicImage((Ogre::uchar*)pBuf32,iImgW,iImgH,1,Ogre::PF_A8R8G8=
B8,true); // autoDelete pBuf32
+	return true;
+}
+
+

Modified: trunk/src/data_gump_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_gump_L.cpp (original)
+++ trunk/src/data_gump_L.cpp Sun Jun 29 15:06:31 2008
@@ -16,6 +16,7 @@
 			REGISTER_METHOD(CreateMaterial);
 			REGISTER_METHOD(Load);
 			REGISTER_METHOD(GetSize);
+			REGISTER_METHOD(ExportToImage);
 			#undef REGISTER_METHOD
 		}
 =

@@ -40,6 +41,7 @@
 			return cLuaBind<cBitMask>::CreateUData(L,pTarget);
 		}
 		=

+		/// matname	CreateMaterial	(iGumpID,bHasAlpha,pHueLoader,bHue)
 		static int	CreateMaterial	(lua_State *L) { PROFILE =

 			std::string myname =3D cOgreWrapper::GetUniqueName();
 			int i=3D2;
@@ -68,6 +70,20 @@
 			return 2; =

 		}
 		=

+		/// return true on success
+		/// loads the gump into a Ogre::Image (lua wrapper : cImage)
+		/// bSuccess	ExportToImage	(pImage,iGumpID,pHueLoader=3Dnil,iHue=3D0)
+		static int		ExportToImage	(lua_State *L) { PROFILE =

+			cImage*		pImage			=3D cLuaBind<cImage>::checkudata_alive(L,2);
+			int			iGumpID			=3D luaL_checkint(L,3);
+			cHueLoader* pHueLoader		=3D (lua_gettop(L) >=3D 4 && !lua_isnil(L,4)) ?=
 cLuaBind<cHueLoader>::checkudata(L,4) : 0;
+			short 		iHue			=3D (lua_gettop(L) >=3D 5 && !lua_isnil(L,5)) ? luaL_che=
ckint(L,5) : 0;
+			=

+			if (!WriteGumpToImage(pImage->mImage,*checkudata_alive(L),iGumpID,pHueL=
oader,iHue)) return 0;
+			lua_pushboolean(L,true);
+			return 1; =

+		}
+		=

 		virtual const char* GetLuaTypeName () { return "iris.GumpLoader"; }
 };
 std::map<cGumpLoader*,cGump*>	cGumpLoader_L::mLastChunk;

Modified: trunk/widgets/widget.uoimage.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoimage.lua (original)
+++ trunk/widgets/widget.uoimage.lua Sun Jun 29 15:06:31 2008
@@ -13,11 +13,12 @@
 		self:SetRenderGroup2D(self.rendergroup2d)
 		self:AddToDestroyList(self.rendergroup2d)
 		print("widget.UOImage : multipart not yet implemented")
+		-- TODO : multiple child widgets for bitmask
 		-- TODO : skip_rows_from_top =3D 1 for middle
 		-- TODO : gBorderGumpIndexAdd =3D { LT=3D0,T=3D1,RT=3D2,L=3D3,M=3D4,R=3D=
5,LB=3D6,B=3D7,RB=3D8,RB_Resize=3D9 }  -- from gui.gumpmaker.lua
 	else
 		local matname,u0,v0,uvw,uvh,origw,origh,bitmask
-		if (params.gump_id	) then print("UOImage:A") matname,u0,v0,uvw,uvh,origw=
,origh,bitmask =3D LoadGump("guibasemat",params.gump_id			,params.hue) end
+		if (params.gump_id	) then print("UOImage:A") matname,u0,v0,uvw,uvh,origw=
,origh,bitmask =3D LoadGump(	"guibasemat",params.gump_id			,params.hue) end
 		if (params.art_id	) then print("UOImage:B") matname,u0,v0,uvw,uvh,origw,=
origh,bitmask =3D LoadArt(	"guibasemat",params.art_id + 0x4000	,params.hue)=
 end
 		if (params.checker	) then print("UOImage:C") matname,u0,v0,uvw,uvh,origw=
,origh,bitmask =3D self:LoadChecker() end
 		=




From no-reply at zwischenwelt.org  Sun Jun 29 16:05:49 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 14:05:49 -0000
Subject: [Iris-commit] [IRIS] r2262 - in /trunk: lua/lib.iris_atlasgroup.lua
 widgets/widget.uoimage.lua
Message-ID: <20080629140549.382061C180A2@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 29 16:05:48 2008
New Revision: 2262

Log:
iris atlasgroup for gump and art now also generate bitmasks

Modified:
    trunk/lua/lib.iris_atlasgroup.lua
    trunk/widgets/widget.uoimage.lua

Modified: trunk/lua/lib.iris_atlasgroup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.iris_atlasgroup.lua (original)
+++ trunk/lua/lib.iris_atlasgroup.lua Sun Jun 29 16:05:48 2008
@@ -12,7 +12,6 @@
 function LoadGump	(basemat,gump_id,hue) =

 	--~ if (true) then return "BaseWhiteNoLighting",0,0,1,1,22,22,nil end -- =
TODO =

 	local matname,u0,v0,uvw,uvh,origw,origh =3D gAtlasGroup_Gump:LoadMat(base=
mat,gump_id,hue)
-	print("LoadGump",basemat,gump_id,hue,matname,u0,v0,uvw,uvh,origw,origh)
 	local bitmask =3D gAtlasGroup_Gump.bitmasks[gump_id]
 	return matname,u0,v0,uvw,uvh,origw,origh,bitmask
 end
@@ -21,7 +20,6 @@
 function LoadArt	(basemat,art_id,hue)
 	--~ if (true) then return "BaseWhiteNoLighting",0,0,1,1,22,22,nil end -- =
TODO =

 	local matname,u0,v0,uvw,uvh,origw,origh =3D gAtlasGroup_Art:LoadMat(basem=
at,art_id,hue)
-	print("LoadArt",basemat,art_id,hue,matname,u0,v0,uvw,uvh,origw,origh)
 	local bitmask =3D gAtlasGroup_Art.bitmasks[art_id]
 	return matname,u0,v0,uvw,uvh,origw,origh,bitmask
 end
@@ -32,8 +30,7 @@
 	local bSuccess =3D gGumpLoader:ExportToImage(img,gump_id,gHueLoader,hue o=
r 0)
 	if (not self.bitmasks) then self.bitmasks =3D {} end
 	if (not bSuccess) then img:Destroy() return end
-	print("gAtlasGroup_Gump:LoadImpl:todo : bitmask")
-	--~ if (not self.bitmasks[gump_id]) then self.bitmasks[gump_id] =3D BitMa=
skFromImage(img) or false end
+	if (not self.bitmasks[gump_id]) then self.bitmasks[gump_id] =3D img:Gener=
ateBitMask() or false end
 	return img
 end
 =

@@ -43,8 +40,7 @@
 	local bSuccess =3D gArtMapLoader:ExportToImage(img,art_id,gHueLoader,hue =
or 0)
 	if (not self.bitmasks) then self.bitmasks =3D {} end
 	if (not bSuccess) then img:Destroy() return end
-	print("gAtlasGroup_Art:LoadImpl:todo : bitmask")
-	--~ if (not self.bitmasks[art_id]) then self.bitmasks[art_id] =3D BitMask=
FromImage(img) or false end
+	if (not self.bitmasks[art_id]) then self.bitmasks[art_id] =3D img:Generat=
eBitMask() or false end
 	return img
 end
 =


Modified: trunk/widgets/widget.uoimage.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoimage.lua (original)
+++ trunk/widgets/widget.uoimage.lua Sun Jun 29 16:05:48 2008
@@ -2,8 +2,10 @@
 -- see also lib.gui.widget.lua
 -- TODO : api for adding content (images/text inside)
 -- TODO : autosize from contents
+-- TODO : bitmask test has to consider tiling, stretching etc...
 =

 RegisterWidgetClass("UOImage")
+
 =

 -- params : x,y,gump_id/art_id,width,height,hue=3D0,tiled=3Dfalse(strech),=
checker=3Dfalse(gray-transparent-background),multipart=3Dfalse(true for res=
izepic)
 -- either art_id or gump_id or checker is used



From no-reply at zwischenwelt.org  Sun Jun 29 17:04:22 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 15:04:22 -0000
Subject: [Iris-commit] [IRIS] r2263 - in /trunk/data/terrain/multitex:
 terrain_multitex_mask_64.png terrain_multitex_mask_64_blur.png
 terrain_multitex_mask_64_blur_man.hard.png
 terrain_multitex_mask_64_blur_man.png
 terrain_multitex_mask_64_blur_man_antibleed.png
Message-ID: <20080629150422.A73F11C180A1@zwischenwelt.org>

Author: hagish
Date: Sun Jun 29 17:04:22 2008
New Revision: 2263

Log:
added alpha layout to mask images

Modified:
    trunk/data/terrain/multitex/terrain_multitex_mask_64.png
    trunk/data/terrain/multitex/terrain_multitex_mask_64_blur.png
    trunk/data/terrain/multitex/terrain_multitex_mask_64_blur_man.hard.png
    trunk/data/terrain/multitex/terrain_multitex_mask_64_blur_man.png
    trunk/data/terrain/multitex/terrain_multitex_mask_64_blur_man_antibleed=
.png

Modified: trunk/data/terrain/multitex/terrain_multitex_mask_64.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/terrain/multitex/terrain_multitex_mask_64_blur.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/terrain/multitex/terrain_multitex_mask_64_blur_man.har=
d.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/terrain/multitex/terrain_multitex_mask_64_blur_man.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/terrain/multitex/terrain_multitex_mask_64_blur_man_ant=
ibleed.png
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sun Jun 29 17:12:56 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 15:12:56 -0000
Subject: [Iris-commit] [IRIS] r2264 - in /trunk/scripts: gitsvn_commit.sh
	gitsvn_update.sh
Message-ID: <20080629151256.AC1811C180A2@zwischenwelt.org>

Author: hagish
Date: Sun Jun 29 17:12:56 2008
New Revision: 2264

Log:
two handy scripts if you use svn via git

Added:
    trunk/scripts/gitsvn_commit.sh   (with props)
    trunk/scripts/gitsvn_update.sh   (with props)



From no-reply at zwischenwelt.org  Sun Jun 29 17:34:24 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 15:34:24 -0000
Subject: [Iris-commit] [IRIS] r2265 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.iris_atlasgroup.lua widgets/widget.uoimage.lua
Message-ID: <20080629153424.2BBD81524030@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 29 17:34:23 2008
New Revision: 2265

Log:
bitmask tiling activated for gump,art atlasgroup bitmasks

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.iris_atlasgroup.lua
    trunk/widgets/widget.uoimage.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Sun Jun 29 17:34:23 2008
@@ -31,6 +31,8 @@
 	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
 	]]--
 	local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true)
+	dialog:SetLeftTop(400,100)
+	local dialog2 =3D GumpParser(kClientSideGump_Paperdoll_Own,true)
 	-- TODO : html-center : glyphlist : glyphs to change h-alignment during p=
arsing ? needs line width.. and full text width (unless wrap specified !)
 	=

 	GUITest_MainLoop()
@@ -460,7 +462,7 @@
 		=

 		=

 		--resizepic <x> <y> <gump_id> <width> <height>
-		--stretched instead of tiled ?
+		--consists of multiple(9) parts, for which gump_id is the base-id, a bor=
der-frame like thing, dialog background for example. tiled
 		elseif (command =3D=3D "resizepic") then param =3D GumpParser_ParseToken=
(bToken,"x,y,gump_id,width,height,[ctrlname]")
 			param.multipart =3D true -- the gump_id is just the base id, the border=
 tiles have different ids, calculated from it
 			widget =3D GumpParser_MakeImage(parent,param)

Modified: trunk/lua/lib.iris_atlasgroup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.iris_atlasgroup.lua (original)
+++ trunk/lua/lib.iris_atlasgroup.lua Sun Jun 29 17:34:23 2008
@@ -30,7 +30,7 @@
 	local bSuccess =3D gGumpLoader:ExportToImage(img,gump_id,gHueLoader,hue o=
r 0)
 	if (not self.bitmasks) then self.bitmasks =3D {} end
 	if (not bSuccess) then img:Destroy() return end
-	if (not self.bitmasks[gump_id]) then self.bitmasks[gump_id] =3D img:Gener=
ateBitMask() or false end
+	if (not self.bitmasks[gump_id]) then local bm =3D img:GenerateBitMask() b=
m:SetWrap(true) self.bitmasks[gump_id] =3D bm end
 	return img
 end
 =

@@ -40,7 +40,7 @@
 	local bSuccess =3D gArtMapLoader:ExportToImage(img,art_id,gHueLoader,hue =
or 0)
 	if (not self.bitmasks) then self.bitmasks =3D {} end
 	if (not bSuccess) then img:Destroy() return end
-	if (not self.bitmasks[art_id]) then self.bitmasks[art_id] =3D img:Generat=
eBitMask() or false end
+	if (not self.bitmasks[art_id]) then local bm =3D img:GenerateBitMask() bm=
:SetWrap(true) self.bitmasks[art_id] =3D bm end
 	return img
 end
 =


Modified: trunk/widgets/widget.uoimage.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoimage.lua (original)
+++ trunk/widgets/widget.uoimage.lua Sun Jun 29 17:34:23 2008
@@ -2,7 +2,7 @@
 -- see also lib.gui.widget.lua
 -- TODO : api for adding content (images/text inside)
 -- TODO : autosize from contents
--- TODO : bitmask test has to consider tiling, stretching etc...
+-- bitmask test has to considers tiling thanks to the SetWrap(true)
 =

 RegisterWidgetClass("UOImage")
 =

@@ -55,6 +55,7 @@
 -- TODO : skip_rows_from_top needed for multipart/resizepic
 =

 -- returns matname,u0,v0,uvw,uvh,origw,origh
+-- TODO : temporary fix, should really be a checker texture tiled using te=
xcoords, but spritepanel doesn't support that yet
 function gWidgetPrototype.UOImage:LoadChecker 	() =

 	local matname =3D gWidgetPrototype.UOImage.checker_matname
 	if (not matname) then =

@@ -72,5 +73,5 @@
 -- tilepic:			MakeArtGumpPart		(parent,art_id,x,y)
 -- tilepichue:		MakeArtGumpPart		(parent,art_id,x,y, 0, 0, 0, hue)
 -- gumppic:			MakeBorderGumpPart	(parent,gump_id,x,y, 0, 0, 0, hue)
--- gumppictiled:	MakeBorderGumpPart	(parent,gump_id,x,y,width,height)  par=
am.tiled =3D true
--- resizepic: 		MakeBorderGump		(parent,gump_id,x,y,width,height) -- MULTI=
PART !
+-- gumppictiled:	MakeBorderGumpPart	(parent,gump_id,x,y,width,height) para=
m.tiled =3D true
+-- resizepic: 		MakeBorderGump		(parent,gump_id,x,y,width,height) multipar=
t-tiled !



From no-reply at zwischenwelt.org  Sun Jun 29 21:53:27 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 19:53:27 -0000
Subject: [Iris-commit] [IRIS] r2266 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.gump.samples.lua widgets/widget.gumpdialog.lua
 widgets/widget.uoimage.lua widgets/widget.uotext.lua
Message-ID: <20080629195327.5160A1C180A1@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 29 21:53:26 2008
New Revision: 2266

Log:
guisystem : added gump samples for testing

Added:
    trunk/lua/lib.gump.samples.lua
    trunk/widgets/widget.uotext.lua
Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/widgets/widget.gumpdialog.lua
    trunk/widgets/widget.uoimage.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Sun Jun 29 21:53:26 2008
@@ -8,6 +8,7 @@
 Description:  Similar to xmfhtmlgumpcolor command, but the parameter order=
 is different and an additionally [argument]
 entry enclosed with @'s can be used. With this you can specify texts that =
will be added to the CliLoc entry.
 ]]--
+dofile(libpath .. "lib.gump.samples.lua")
 =

 =

 function GumpParserTest ()
@@ -18,6 +19,7 @@
 	Load_Hue()
 	Load_ArtMap()
 	Load_Gump()	=

+	Load_Cliloc()	=

 	--[[
 	kClientSideGump_HealthBar_Own		=3D healthbarGump -- own, includes mana,sta
 	kClientSideGump_HealthBar_Other		=3D npchealthGump -- other, only hp
@@ -30,9 +32,15 @@
 	kClientSideGump_Skill			=3D skillGump			-- the big skill list dialog with=
 up/down/lock boxes, grab icons and scrollbar
 	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
 	]]--
-	local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true)
-	dialog:SetLeftTop(400,100)
-	local dialog2 =3D GumpParser(kClientSideGump_Paperdoll_Own,true)
+	-- kGumpSample_RuneBook kGumpSample_ChangeLog kGumpSample_Reward
+	--~ GumpParser_New(kGumpSample_RuneBook,false):SetLeftTop(0,240)
+	--~ GumpParser(kGumpSample_RuneBook,false)
+	local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) dialo=
g:SetLeftTop(400,100)
+	GumpParser(kClientSideGump_Paperdoll_Own,true)
+	=

+	local p =3D dialog:GetPage(0)
+	local cl =3D p:ForAllChilds(function (child,k) print("ordered_childlist_p=
age0:",k,child:GetClassName()) end)
+	=

 	-- TODO : html-center : glyphlist : glyphs to change h-alignment during p=
arsing ? needs line width.. and full text width (unless wrap specified !)
 	=

 	GUITest_MainLoop()
@@ -227,17 +235,7 @@
 =

 -- returns widget
 -- param : x,y,width,height,cliloc_id/textline_id,background,scrollbar,hue=
  : background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddisplayed
-function GumpParser_MakeText (parent,param,textlines) -- param.cliloc_id o=
r param.textline_id , param.color =3D hue
-	print("TODO:GumpParser_MakeText")
-	--[[ pre-gui2 :
-	widget =3D guimaker.MakeWrappedClippedText (parent, param.x, param.y+htex=
t_correction,
-													param.width,param.height,param.msgid, msg.charh, gFontDefs["G=
ump"].col,
-													msg.center, msg.div, gFontDefs["Gump"].name)
-	local rawtext =3D param.textline_id and textlines[param.textline_id] or (=
gClilocLoader and gClilocLoader:Get(param.cliloc_id) or "no_cliloc")
-	local text =3D UnicodeFix(HtmlParser(widget,rawtext)) =

-	]]-- =

-end
-	=

+function GumpParser_MakeText (parent,param,textlines) return parent:Create=
Child("UOText",param,textlines) end
 =

 -- returns widget
 -- param : x,y,gump_id_normal,gump_id_pressed,quit,page_id,return_value
@@ -559,16 +557,18 @@
 	dialog:ShowPage(1)
 =

 	if (not bClientSideMode) then
-		gServerSideGump[Gumpdata.dialogId] =3D dialog
-	else
-		return dialog
-	end
+		if (Gumpdata.dialogId) then gServerSideGump[Gumpdata.dialogId] =3D dialo=
g end
+	end
+	return dialog
 end
 =

 =

 function GumpParser(Gumpdata, Clientsidemode)
 	if (not gGumpLoader) then return end
 =

+	=

+	--~ if (not Clientsidemode) then print("\n\n##### GUMP #####\n\n"..Gumpda=
ta.Data.."\n\ntextline=3D{") for k,v in pairs(Gumpdata.textline or {}) do p=
rint(k.."=3D\""..v.."\"\n") end print("}\n#######\n\n") end
+	=

 	local htext_correction=3D5
 =

 	-- close already existing dialog with the same id
@@ -971,8 +971,7 @@
 	dialog:ShowPage(1)
 =

 	if not(Clientsidemode) then
-		gServerSideGump[Gumpdata.dialogId] =3D dialog
-	else
-		return dialog
-	end
+		if (Gumpdata.dialogId) then gServerSideGump[Gumpdata.dialogId] =3D dialo=
g end
+	end
+	return dialog
 end

Modified: trunk/widgets/widget.gumpdialog.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.gumpdialog.lua (original)
+++ trunk/widgets/widget.gumpdialog.lua Sun Jun 29 21:53:26 2008
@@ -47,6 +47,7 @@
 	local page =3D self.pages[pagenum]
 	if (page) then return page end
 	page =3D self:CreateChild("Group") -- for sub-widgets
+	page.pagenum =3D pagenum
 	self.pages[pagenum] =3D page
 	return page
 end

Modified: trunk/widgets/widget.uoimage.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoimage.lua (original)
+++ trunk/widgets/widget.uoimage.lua Sun Jun 29 21:53:26 2008
@@ -16,7 +16,7 @@
 		self:AddToDestroyList(self.rendergroup2d)
 		print("widget.UOImage : multipart not yet implemented")
 		-- TODO : multiple child widgets for bitmask
-		-- TODO : skip_rows_from_top =3D 1 for middle
+		-- TODO : skip_rows_from_top =3D 1 for middle : widget.gfx:SetUV(0,(skip=
_rows_from_top)/th,cx/tw,(cy+skip_rows_from_top)/th)
 		-- TODO : gBorderGumpIndexAdd =3D { LT=3D0,T=3D1,RT=3D2,L=3D3,M=3D4,R=3D=
5,LB=3D6,B=3D7,RB=3D8,RB_Resize=3D9 }  -- from gui.gumpmaker.lua
 	else
 		local matname,u0,v0,uvw,uvh,origw,origh,bitmask
@@ -41,19 +41,6 @@
 	if (bitmask) then self:SetBitMask(bitmask) end
 end
 =

-
---~ local mat =3D GetArtMat(art_id,hue)
---~ local w,h =3D GetArtSize(art_id,hue)
---~ local bitmask =3D GetArtBitMask(art_id)
-
---~ local mat =3D GetGumpMat(iGumpID,hueid)
---~ local w,h =3D GetGumpSize(iGumpID)
---~ widget.gfx:SetUV(0,(skip_rows_from_top)/th,cx/tw,(cy+skip_rows_from_to=
p)/th)
---~ local bitmask =3D GetGumpBitMask(iGumpID)
-
--- returns matname,u0,v0,uvw,uvh,origw,origh,bitmask =

--- TODO : skip_rows_from_top needed for multipart/resizepic
-
 -- returns matname,u0,v0,uvw,uvh,origw,origh
 -- TODO : temporary fix, should really be a checker texture tiled using te=
xcoords, but spritepanel doesn't support that yet
 function gWidgetPrototype.UOImage:LoadChecker 	() =




From no-reply at zwischenwelt.org  Sun Jun 29 23:50:48 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 21:50:48 -0000
Subject: [Iris-commit] [IRIS] r2267 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.unifont.lua lua/lib.uoutils.lua lua/net/net.other.lua
 widgets/widget.uotext.lua
Message-ID: <20080629215049.1BBCF1C180A2@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Jun 29 23:50:48 2008
New Revision: 2267

Log:
uotext widget now supports hue, uofont caching, moved UnicodeFix() from net=
.other.lua to lib.uoutils.lua

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.unifont.lua
    trunk/lua/lib.uoutils.lua
    trunk/lua/net/net.other.lua
    trunk/widgets/widget.uotext.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Sun Jun 29 23:50:48 2008
@@ -33,13 +33,13 @@
 	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
 	]]--
 	-- kGumpSample_RuneBook kGumpSample_ChangeLog kGumpSample_Reward
-	--~ GumpParser_New(kGumpSample_RuneBook,false):SetLeftTop(0,240)
-	--~ GumpParser(kGumpSample_RuneBook,false)
-	local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) dialo=
g:SetLeftTop(400,100)
-	GumpParser(kClientSideGump_Paperdoll_Own,true)
-	=

-	local p =3D dialog:GetPage(0)
-	local cl =3D p:ForAllChilds(function (child,k) print("ordered_childlist_p=
age0:",k,child:GetClassName()) end)
+	GumpParser_New(kGumpSample_RuneBook,false):SetLeftTop(0,240)
+	GumpParser(kGumpSample_RuneBook,false)
+	--~ local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) d=
ialog:SetLeftTop(400,100)
+	--~ GumpParser(kClientSideGump_Paperdoll_Own,true)
+	=

+	--~ local p =3D dialog:GetPage(0)
+	--~ local cl =3D p:ForAllChilds(function (child,k) print("ordered_childli=
st_page0:",k,child:GetClassName()) end)
 	=

 	-- TODO : html-center : glyphlist : glyphs to change h-alignment during p=
arsing ? needs line width.. and full text width (unless wrap specified !)
 	=

@@ -390,6 +390,8 @@
 	local param
 	local widget
 	=

+	--~ function MyGetTokenText (params) return params.textline_id and Gumpda=
ta.textline[params.textline_id] or (gClilocLoader and gClilocLoader:Get(par=
ams.cliloc_id) or "no_cliloc") end -- debug
+	=

 	-- parse gump code
 	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
 		local bToken =3D {}
@@ -422,18 +424,23 @@
 		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
 		elseif (command =3D=3D "xmfhtmlgump") then param =3D GumpParser_ParseTok=
en(bToken,"x,y,width,height,cliloc_id,background,scrollbar,[ctrlname]")
 			widget =3D GumpParser_MakeText(parent,param)
+			--~ print("gumpparser_d",v,MyGetTokenText(param))
+			=

 			=

 		--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc_id> <background> <sc=
rollbar> <hue>
 		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
 		elseif (command =3D=3D "xmfhtmlgumpcolor") then param =3D GumpParser_Par=
seToken(bToken,"x,y,width,height,cliloc_id,background,scrollbar,hue,[ctrlna=
me]")
 			widget =3D GumpParser_MakeText(parent,param)
-			=

-		--croppedtext <x> <y> <width> <height> <hue> <textline_id>
-		--Description:  Adds a text field to the gump. This is similar to the te=
xt command,
-		--but the text is cropped to the defined area.
-		-- TODO : HUE . old gui default : {92/255,92/255,178/255,1.0}
+			--~ print("gumpparser_d",v,MyGetTokenText(param))
+			=

+		-- croppedtext <x> <y> <width> <height> <hue> <textline_id>
+		-- Description:  Adds a text field to the gump. This is similar to the t=
ext command,
+		-- but the text is cropped to the defined area.
+		-- text is automatically bold/outlined
 		elseif (command =3D=3D "croppedtext") then param =3D GumpParser_ParseTok=
en(bToken,"x,y,width,height,hue,textline_id,[ctrlname]")
+			param.bold =3D true
 			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
+			--~ print("gumpparser_d",v,MyGetTokenText(param))
 			=

 		--HtmlGump <x> <y> <width> <height> <textline_id> <background> <scrollba=
r>
 		--Description:  Defines a text-area where Html-commands are allowed.
@@ -441,16 +448,19 @@
 		--{ htmlgump 10 8 100 20 0 0 0 }
 		elseif (command =3D=3D "htmlgump") then param =3D GumpParser_ParseToken(=
bToken,"x,y,width,height,textline_id,background,scrollbar,[ctrlname]")
 			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
+			--~ print("gumpparser_d",v,MyGetTokenText(param))
 			=

 		--text <x> <y> <hue> <textline_id>
 		--Description:  Defines the position and hue of a text (data) entry.
 		elseif (command =3D=3D "text") then param =3D GumpParser_ParseToken(bTok=
en,"x,y,hue,textline_id,[ctrlname]")
 			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
+			--~ print("gumpparser_d",v,MyGetTokenText(param))
 =

 		--tooltip <cliloc_id>
 		--Description:  Adds to the previous layoutarray entry a Tooltip with th=
e in [cliloc-nr] defined Cliloc entry
 		elseif (command =3D=3D "tooltip") then param =3D GumpParser_ParseToken(b=
Token,"cliloc_id,[ctrlname]")
 			if (widget) then GumpParser_SetToolTipp(widget,param.cliloc_id) end
+			--~ print("gumpparser_d",v,MyGetTokenText(param))
 			=

 			=

 			=


Modified: trunk/lua/lib.unifont.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.unifont.lua (original)
+++ trunk/lua/lib.unifont.lua Sun Jun 29 23:50:48 2008
@@ -95,10 +95,14 @@
 	return unpack(glyphdata)
 end
 =

+function GetUOFont (loader) return CreateFont_UO(loader) end -- uses cachi=
ng already
+
 -- creates and returns a font object for one of the uo fonts that can be u=
sed by the flow layouter to create text
 -- uofonts are pixelart and not scalable, so the size is fixed
 function CreateFont_UO (loader)
+	if (loader.font) then return loader.font end -- caching font object, atla=
s is also be cached in loader
 	local myfont =3D {}
+	loader.font =3D myfont
 	local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,kCharC=
ode_SpaceWidthChar)
 	myfont.spacewidth =3D w
 	--~ myfont.defaultlineh =3D 1.5 * math.max(1,h)

Modified: trunk/lua/lib.uoutils.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.uoutils.lua (original)
+++ trunk/lua/lib.uoutils.lua Sun Jun 29 23:50:48 2008
@@ -52,3 +52,20 @@
 	elseif (dir =3D=3D 3 or dir =3D=3D 4 or dir =3D=3D 5) then return 1 -- so=
uth
 	else return 0 end
 end
+
+
+-- hack to replace german umlauts by two letters (ae)
+function UnicodeFix (text) =

+	--~ local mytext =3D ""
+	--~ local len =3D string.len(text)
+	--~ for i=3D1,len do mytext =3D mytext..string.byte(text,i).."_"..string.=
sub(text,i,i).."#" end
+	--~ print("UnicodeFix ##"..mytext.."##")
+	text =3D string.gsub(text,"\196","AE")
+	text =3D string.gsub(text,"\214","OE")
+	text =3D string.gsub(text,"\220","UE")
+	text =3D string.gsub(text,"\228","ae")
+	text =3D string.gsub(text,"\246","oe")
+	text =3D string.gsub(text,"\252","ue")
+	text =3D string.gsub(text,"\223","ss")
+	return text
+end

Modified: trunk/lua/net/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/net/net.other.lua (original)
+++ trunk/lua/net/net.other.lua Sun Jun 29 23:50:48 2008
@@ -94,21 +94,6 @@
 end
 =

 =

--- hack to replace german umlauts by two letters (ae)
-function UnicodeFix (text) =

-	--~ local mytext =3D ""
-	--~ local len =3D string.len(text)
-	--~ for i=3D1,len do mytext =3D mytext..string.byte(text,i).."_"..string.=
sub(text,i,i).."#" end
-	--~ print("UnicodeFix ##"..mytext.."##")
-	text =3D string.gsub(text,"\196","AE")
-	text =3D string.gsub(text,"\214","OE")
-	text =3D string.gsub(text,"\220","UE")
-	text =3D string.gsub(text,"\228","ae")
-	text =3D string.gsub(text,"\246","oe")
-	text =3D string.gsub(text,"\252","ue")
-	text =3D string.gsub(text,"\223","ss")
-	return text
-end
 =

 =

 -- sends the server the lock state of one stat

Modified: trunk/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uotext.lua (original)
+++ trunk/widgets/widget.uotext.lua Sun Jun 29 23:50:48 2008
@@ -4,22 +4,43 @@
 =

 RegisterWidgetClass("UOText","Text")
 =

+-- param : x,y,width,height,cliloc_id/textline_id,background=3D0/1=3Dtrans=
parent?,scrollbar=3D0/1=3Ddisplayed,hue,bold=3Dfalse
+-- bold=3Doutlined_font: false for xmfhtmlgump,htmlgump, true for croppedt=
ext, example : runebook gump : kGumpSample_RuneBook
 function gWidgetPrototype.UOText:Init (parentwidget, params, textlines)
-	print("TODO:widget.UOText  : height,w/h-clip,background,scrollbar",parent=
widget:GetClassName(),parentwidget.pagenum)
+	--~ print("TODO:widget.UOText  : height,w/h-clip,background,scrollbar",pa=
rentwidget:GetClassName(),parentwidget.pagenum)
 	--~ params.autowrap_w =3D params.width
 	gWidgetPrototype.Text.Init(self,parentwidget,params)
-	self.font =3D CreateFont_UO(gUniFontLoaderList[3])
-	self:SetText(self.font,nil,"bla")
-	self:SetLeftTop(params.x,params.y)
+	self.font =3D GetUOFont(gUniFontLoaderList[1])
+	self:SetUOHtml(params.textline_id and textlines[params.textline_id] or (g=
ClilocLoader and gClilocLoader:Get(params.cliloc_id) or "no_cliloc"))
+	self:SetLeftTop(params.x-1,params.y-21)
 end
 =

-
--- param : x,y,width,height,cliloc_id/textline_id,background,scrollbar,hue=
  : background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddisplayed
--- param.cliloc_id or param.textline_id , param.color =3D hue
---[[ pre-gui2 :
-widget =3D guimaker.MakeWrappedClippedText (parent, param.x, param.y+htext=
_correction,
-												param.width,param.height,param.msgid, msg.charh, gFontDefs["Gu=
mp"].col,
-												msg.center, msg.div, gFontDefs["Gump"].name)
-local rawtext =3D param.textline_id and textlines[param.textline_id] or (g=
ClilocLoader and gClilocLoader:Get(param.cliloc_id) or "no_cliloc")
-local text =3D UnicodeFix(HtmlParser(widget,rawtext)) =

-]]-- =

+function gWidgetPrototype.UOText:SetUOHtml (uohtml,font)
+	self.uohtml =3D uohtml
+	font =3D font or self.font
+	local fontsize =3D nil
+	local textparam =3D {}
+	textparam.r,textparam.g,textparam.b =3D 1,1,1
+	if (self.params.hue) then textparam.r,textparam.g,textparam.b =3D gHueLoa=
der:GetColor(self.params.hue,31) end
+	-- uohtml =3D UnicodeFix(uohtml)  =C3=B6 -> oe  hack =

+	-- warning, uohtml might be an array of ints for unicode (textline) inste=
ad of text
+	-- see also HtmlParser in lib.gumpparser.lua
+	-- TODO : font hueing ? or just rgb vertexcolor
+	=

+	=

+	local text =3D uohtml
+	self.glyphlist:AddText(font,fontsize,text,textparam)
+	self:UpdateGeometry()
+end
+--[[
+--xmfhtmlgump	<x> <y> <width> <height> <cliloc_id> <background> <scrollbar>
+--HtmlGump		<x> <y> <width> <height> <textline_id> <background> <scrollbar>
+--croppedtext	<x> <y> <width> <height> <color> <text-id>
+gumpparser_d     xmfhtmlgump	140 40  80 18 1011296 0 0 } Charges:
+gumpparser_d     htmlgump 		220 40  30 18 0 0 0 }  6
+gumpparser_d     xmfhtmlgump	300 40 100 18 1011297 0 0 }        Max Charge=
s:
+gumpparser_d     htmlgump		400 40  30 18 1 0 0 }  10
+gumpparser_d     xmfhtmlgump	158 22 100 18 1011299 0 0 }        Rename book
+gumpparser_d     croppedtext	145 60 115 17 49 2 }       FFHQ
+gumpparser_d     croppedtext	145 75 115 17 1153 3 }     TokunoTamer
+]]--



From no-reply at zwischenwelt.org  Mon Jun 30 01:19:05 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 23:19:05 -0000
Subject: [Iris-commit] [IRIS] r2269 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.gump.samples.lua lua/lib.unifont.lua src/data_font_L.cpp
 widgets/widget.uotext.lua
Message-ID: <20080629231905.91D2E1C180A2@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Jun 30 01:19:05 2008
New Revision: 2269

Log:
WriteGlyphToImage: added option to turn off outline/bold,  CreateFont_UO no=
w can create fonts with and without outline, new gump-parser supports non b=
old text-elements now

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.gump.samples.lua
    trunk/lua/lib.unifont.lua
    trunk/src/data_font_L.cpp
    trunk/widgets/widget.uotext.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Mon Jun 30 01:19:05 2008
@@ -34,7 +34,7 @@
 	]]--
 	-- kGumpSample_RuneBook kGumpSample_ChangeLog kGumpSample_Reward
 	GumpParser_New(kGumpSample_RuneBook,false):SetLeftTop(0,240)
-	GumpParser(kGumpSample_RuneBook,false)
+	GumpParser(kGumpSample_RuneBook_Simple,false)
 	--~ local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) d=
ialog:SetLeftTop(400,100)
 	--~ GumpParser(kClientSideGump_Paperdoll_Own,true)
 	=


Modified: trunk/lua/lib.gump.samples.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.gump.samples.lua (original)
+++ trunk/lua/lib.gump.samples.lua Mon Jun 30 01:19:05 2008
@@ -60,4 +60,25 @@
 		[0]=3D"6",
 		}
 	}
+	=

+kGumpSample_RuneBook_Simple =3D {
+	Data=3D"{ page 0 }{ gumppic 100 10 2201 }{ gumppic 125 50 57 }{ gumppic 1=
45 50 58 }{ gumppic 160 50 58 }{ gumppic 175 50 58 }{ gumppic 190 50 58 }{ =
gumppic 205 50 58 }{ gumppic 220 50 58 }{ gumppic 230 50 59 }{ gumppic 290 =
50 57 }{ gumppic 310 50 58 }{ gumppic 325 50 58 }{ gumppic 340 50 58 }{ gum=
ppic 355 50 58 }{ gumppic 370 50 58 }{ gumppic 385 50 58 }{ gumppic 395 50 =
59 }{ button 130 187 2225 2225 0 2 0 }{ button 165 187 2226 2226 0 3 0 }{ b=
utton 200 187 2227 2227 0 4 0 }{ button 235 187 2228 2228 0 5 0 }{ button 3=
00 187 2229 2229 0 6 0 }{ button 335 187 2230 2230 0 7 0 }{ button 370 187 =
2231 2231 0 8 0 }{ button 405 187 2232 2232 0 9 0 }{ xmfhtmlgump 140 40 80 =
18 1011296 0 0 }{ htmlgump 220 40 30 18 0 0 0 }{ xmfhtmlgump 300 40 100 18 =
1011297 0 0 }{ htmlgump 400 40 30 18 1 0 0 }{ page 1 }{ button 125 15 2472 =
2473 1 0 1 }{ xmfhtmlgump 158 22 100 18 1011299 0 0 }{ button 130 65 2103 2=
104 1 0 2 }{ croppedtext 145 60 115 17 49 2 }{ button 130 80 2103 2104 1 0 =
8 }{ croppedtext 145 75 115 17 1153 3 }{ button 130 95 2103 2104 1 0 14 }{ =
croppedtext 145 90 115 17 1153 4 }{ button 130 110 2103 2104 1 0 20 }{ crop=
pedtext 145 105 115 17 1101 5 }{ button 130 125 2103 2104 1 0 26 }{ cropped=
text 145 120 115 17 1101 6 }{ button 130 140 2103 2104 1 0 32 }{ croppedtex=
t 145 135 115 17 1101 7 }{ button 130 155 2103 2104 1 0 38 }{ croppedtext 1=
45 150 115 17 1101 8 }{ button 130 170 2103 2104 1 0 44 }{ croppedtext 145 =
165 115 17 49 9 }{ button 290 65 2103 2104 1 0 50 }{ croppedtext 305 60 115=
 17 1150 10 }{ button 290 80 2103 2104 1 0 56 }{ croppedtext 305 75 115 17 =
49 11 }{ button 290 95 2103 2104 1 0 62 }{ croppedtext 305 90 115 17 49 12 =
}{ button 290 110 2103 2104 1 0 68 }{ croppedtext 305 105 115 17 1153 13 }{=
 button 290 125 2103 2104 1 0 74 }{ croppedtext 305 120 115 17 1101 14 }{ b=
utton 290 140 2103 2104 1 0 80 }{ croppedtext 305 135 115 17 1101 14 }{ but=
ton 290 155 2103 2104 1 0 86 }{ croppedtext 305 150 115 17 1101 14 }{ butto=
n 290 170 2103 2104 1 0 92 }{ croppedtext 305 165 115 17 1101 14 }{ button =
393 14 2206 2206 0 2 0 }",
+	textline=3D{
+		[1]=3D"10",
+		[2]=3D"FFHQ",
+		[3]=3D"TokunoTamer",
+		[4]=3D"TokunoHealer",
+		[5]=3D"Unicorn",
+		[6]=3D"Kirin",
+		[7]=3D"HomeNew",
+		[8]=3D"LunaBank",
+		[9]=3D"HavenBank",
+		[10]=3D"dev null",
+		[11]=3D"TinkerJhelom",
+		[12]=3D"Moongate",
+		[13]=3D"TokuMage",
+		[14]=3D"x",
+		[0]=3D"6",
+		}
+	}
 	=


Modified: trunk/lua/lib.unifont.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.unifont.lua (original)
+++ trunk/lua/lib.unifont.lua Mon Jun 30 01:19:05 2008
@@ -72,16 +72,19 @@
 end
 =

 -- texname,u0,v0,u1,v1,xoff,yoff,w,h
-function GetUniFontGlyph (fontloader,iCharCode)
+-- bold=3Doutline for uo html
+function GetUniFontGlyph (fontloader,iCharCode,bOutlined)
 	if (not fontloader.glyphs) then fontloader.glyphs =3D {} end
-	local glyphdata =3D fontloader.glyphs[iCharCode]
+	if (not fontloader.glyphs_outlined) then fontloader.glyphs_outlined =3D {=
} end
+	local cachearr =3D bOutlined and fontloader.glyphs_outlined or fontloader=
.glyphs
+	local glyphdata =3D cachearr[iCharCode]
 	if (glyphdata) then return unpack(glyphdata) end
 	if (glyphdata =3D=3D false) then return false end -- not loadable, don't =
retry
 	=

 	-- load glyph, add to texatlas
 	glyphdata =3D false
 	local img =3D CreateImage()
-	local success =3D fontloader:WriteGlyphToImage(img,iCharCode)
+	local success =3D fontloader:WriteGlyphToImage(img,iCharCode,bOutlined)
 	if (success) then
 		local xoff,yoff,w,h =3D fontloader:GetGlyphInfo(iCharCode)
 		local matname,u0,v0,u1,v1 =3D UniFont_AddImageToAtlas(img)
@@ -90,20 +93,26 @@
 	img:Destroy()
 	=

 	-- register in cache
-	fontloader.glyphs[iCharCode] =3D glyphdata
+	cachearr[iCharCode] =3D glyphdata
 	if (not glyphdata) then return end
 	return unpack(glyphdata)
 end
 =

-function GetUOFont (loader) return CreateFont_UO(loader) end -- uses cachi=
ng already
+function GetUOFont (loader,bOutlined) return CreateFont_UO(loader,bOutline=
d) end -- uses caching already
 =

 -- creates and returns a font object for one of the uo fonts that can be u=
sed by the flow layouter to create text
 -- uofonts are pixelart and not scalable, so the size is fixed
-function CreateFont_UO (loader)
-	if (loader.font) then return loader.font end -- caching font object, atla=
s is also be cached in loader
+-- bold=3Doutline for uo html
+function CreateFont_UO (loader,bOutlined)
+	if (bOutlined) then =

+		if (loader.font_outlined) then return loader.font_outlined end -- cachin=
g font object, atlas is also be cached in loader
+	else
+		if (loader.font) then return loader.font end -- caching font object, atl=
as is also be cached in loader
+	end
 	local myfont =3D {}
-	loader.font =3D myfont
-	local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,kCharC=
ode_SpaceWidthChar)
+	if (bOutlined) then loader.font_outlined =3D myfont else loader.font =3D =
myfont end
+	local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,kCharC=
ode_SpaceWidthChar,bOutlined)
+	myfont.bOutlined =3D bOutlined
 	myfont.spacewidth =3D w
 	--~ myfont.defaultlineh =3D 1.5 * math.max(1,h)
 	myfont.defaultlineh =3D 20
@@ -111,18 +120,19 @@
 	myfont.GetSpaceWidth		=3D function (self,fontsize) return self.spacewidth=
 end
 	myfont.GetLineHeight		=3D function (self,fontsize) return self.defaultlin=
eh end
 	myfont.GetGlyphInfo			=3D function (self,iCharCode,fontsize) =

-		local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,iChar=
Code)
+		local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,iChar=
Code,self.bOutlined)
 		if (not matname) then return end
 		=

 		--~ local s =3D math.max(1,round(fontsize / myfont.defaultlineh)) -- pix=
elart is not freely scalable, but this would allow integer-multiples of the=
 original size
 		local s =3D 1
 		local b =3D 2 -- border, the glyph image is actually bigger than the w,h=
 returned by GetUniFontGlyph
+		local overlapx =3D 3
 		w,h =3D (b+w+b)*s,(b+h+b)*s
 		=

 		local res	=3D {}
 		local uvw, uvh =3D u1-u0,v1-v0
 		res.matname	=3D matname
-		res.xmove	=3D w - 3*s + xoff*s
+		res.xmove	=3D w - overlapx*s + xoff*s
 		res.xoff	=3D xoff
 		res.yoff	=3D yoff
 		res.w	=3D w

Modified: trunk/src/data_font_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_font_L.cpp (original)
+++ trunk/src/data_font_L.cpp Mon Jun 30 01:19:05 2008
@@ -39,11 +39,15 @@
 		=

 		/// return true on success
 		/// loads the glyph for iCharCode into a Ogre::Image (lua wrapper : cIma=
ge)
-		/// bSuccess	WriteGlyphToImage	(pImage,iCharCode)
+		/// bSuccess	WriteGlyphToImage	(pImage,iCharCode,bOutlined=3Dfalse)
 		static int		WriteGlyphToImage	(lua_State *L) { PROFILE =

 			cImage*	pImage		=3D cLuaBind<cImage>::checkudata_alive(L,2);
 			int		iCharCode	=3D luaL_checkint(L,3); // Ogre::Font::CodePoint ?  unic=
ode
-			if (!WriteFontGlyphToImage(pImage->mImage,*checkudata_alive(L),iCharCod=
e)) return 0;
+			bool	bOutlined	=3D (lua_gettop(L) >=3D 4 && !lua_isnil(L,4)) ? lua_tobo=
olean(L,4) : false;
+			const Ogre::ColourValue& vInner		 =3D Ogre::ColourValue::White;
+			const Ogre::ColourValue& vBorder	 =3D bOutlined ? Ogre::ColourValue::Bl=
ack : Ogre::ColourValue::ZERO;
+			const Ogre::ColourValue& vBackground =3D Ogre::ColourValue::ZERO;
+			if (!WriteFontGlyphToImage(pImage->mImage,*checkudata_alive(L),iCharCod=
e,vInner,vBorder,vBackground)) return 0;
 			lua_pushboolean(L,true);
 			return 1; =

 		}

Modified: trunk/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uotext.lua (original)
+++ trunk/widgets/widget.uotext.lua Mon Jun 30 01:19:05 2008
@@ -10,17 +10,17 @@
 	--~ print("TODO:widget.UOText  : height,w/h-clip,background,scrollbar",pa=
rentwidget:GetClassName(),parentwidget.pagenum)
 	--~ params.autowrap_w =3D params.width
 	gWidgetPrototype.Text.Init(self,parentwidget,params)
-	self.font =3D GetUOFont(gUniFontLoaderList[1])
 	self:SetUOHtml(params.textline_id and textlines[params.textline_id] or (g=
ClilocLoader and gClilocLoader:Get(params.cliloc_id) or "no_cliloc"))
 	self:SetLeftTop(params.x-1,params.y-21)
 end
 =

 function gWidgetPrototype.UOText:SetUOHtml (uohtml,font)
 	self.uohtml =3D uohtml
-	font =3D font or self.font
+	local font =3D GetUOFont(gUniFontLoaderList[1],self.params.bold)
 	local fontsize =3D nil
 	local textparam =3D {}
 	textparam.r,textparam.g,textparam.b =3D 1,1,1
+	if (not self.params.bold) then textparam.r,textparam.g,textparam.b =3D 0,=
0,0 end -- default:black
 	if (self.params.hue) then textparam.r,textparam.g,textparam.b =3D gHueLoa=
der:GetColor(self.params.hue,31) end
 	-- uohtml =3D UnicodeFix(uohtml)  =C3=B6 -> oe  hack =

 	-- warning, uohtml might be an array of ints for unicode (textline) inste=
ad of text



From no-reply at zwischenwelt.org  Mon Jun 30 01:19:03 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 29 Jun 2008 23:19:03 -0000
Subject: [Iris-commit] [IRIS] r2268 - /trunk/bin/iris2.exe
Message-ID: <20080629231903.B88DF1C180A1@zwischenwelt.org>

Author: sience
Date: Mon Jun 30 01:19:03 2008
New Revision: 2268

Log:
-new win32 binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Mon Jun 30 03:01:01 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 30 Jun 2008 01:01:01 -0000
Subject: [Iris-commit] [IRIS] r2270 - in /trunk: lua/gui/gui.gumpparser.lua
 widgets/widget.uobutton.lua widgets/widget.uoimage.lua
 widgets/widget.uotext.lua
Message-ID: <20080630010101.BF9721C180A2@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Jun 30 03:01:01 2008
New Revision: 2270

Log:
guisystem : gump-buttons

Added:
    trunk/widgets/widget.uobutton.lua
Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/widgets/widget.uoimage.lua
    trunk/widgets/widget.uotext.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Mon Jun 30 03:01:01 2008
@@ -240,30 +240,9 @@
 -- returns widget
 -- param : x,y,gump_id_normal,gump_id_pressed,quit,page_id,return_value
 -- optionally : art_id,hue,art_x,art_y    if an art-image is used as butto=
n label
-function GumpParser_MakeButton (parent,param) end
-	print("TODO:GumpParser_MakeButton")
-				--[[
-				if (bClientSideMode) then
-					widget =3D MakeGumpButtonFunctionOnClick (parent,gump_id_normal,gump_=
id_normal,gump_id_pressed,x,y,
-																	nil,nil,Gumpdata.functions[return_value])
-					-- buttontileart : MakeArtGumpPart (parent,art_id,x+art_x,y+art_y,0,0=
,0,hue)
-					widget.page			=3D tonumber(bToken[7])
-				else
-					widget =3D MakeGumpButton (parent,gump_id_normal,gump_id_normal,gump_=
id_pressed,x,y,nil,nil,false)
-					-- buttontileart : MakeArtGumpPart (parent,art_id,x+art_x,y+art_y,0,0=
,0,hue)
-					widget.page			=3D tonumber(bToken[7])
-					widget.onLeftClick =3D function (widget)
-											if (widget.page > 0 and not(widget.page > table.getn(pages)) ) =
then
-												printdebug("gump","Parsegump Button: Switch to Page "..widget.=
page.."/"..table.getn(pages))
-												widget.dialog:ShowPage(widget.page)
-											elseif (widget.returnmsg) then
-												printdebug("gump","Button pressed -> Send button return_messag=
e: "..widget.returnmsg)
-												CloseServerSideGump(Gumpdata.playerid, Gumpdata.dialogId, widg=
et.returnmsg)
-											end
-										end
-				end
-				buttontileart:
-				]]--
+function GumpParser_MakeButton (parent,param) return parent:CreateChild("U=
OButton",param,textlines) end
+
+
 				=

 -- returns widget
 -- param : x,y,width,height,hue,return_value,textline_id_default

Modified: trunk/widgets/widget.uoimage.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoimage.lua (original)
+++ trunk/widgets/widget.uoimage.lua Mon Jun 30 03:01:01 2008
@@ -20,9 +20,9 @@
 		-- TODO : gBorderGumpIndexAdd =3D { LT=3D0,T=3D1,RT=3D2,L=3D3,M=3D4,R=3D=
5,LB=3D6,B=3D7,RB=3D8,RB_Resize=3D9 }  -- from gui.gumpmaker.lua
 	else
 		local matname,u0,v0,uvw,uvh,origw,origh,bitmask
-		if (params.gump_id	) then print("UOImage:A") matname,u0,v0,uvw,uvh,origw=
,origh,bitmask =3D LoadGump(	"guibasemat",params.gump_id			,params.hue) end
-		if (params.art_id	) then print("UOImage:B") matname,u0,v0,uvw,uvh,origw,=
origh,bitmask =3D LoadArt(	"guibasemat",params.art_id + 0x4000	,params.hue)=
 end
-		if (params.checker	) then print("UOImage:C") matname,u0,v0,uvw,uvh,origw=
,origh,bitmask =3D self:LoadChecker() end
+		if (params.gump_id	) then matname,u0,v0,uvw,uvh,origw,origh,bitmask =3D =
LoadGump(	"guibasemat",params.gump_id			,params.hue) end
+		if (params.art_id	) then matname,u0,v0,uvw,uvh,origw,origh,bitmask =3D L=
oadArt(	"guibasemat",params.art_id + 0x4000	,params.hue) end
+		if (params.checker	) then matname,u0,v0,uvw,uvh,origw,origh,bitmask =3D =
self:LoadChecker() end
 		=

 		local w =3D params.width  or origw
 		local h =3D params.height or origh

Modified: trunk/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uotext.lua (original)
+++ trunk/widgets/widget.uotext.lua Mon Jun 30 03:01:01 2008
@@ -11,7 +11,7 @@
 	--~ params.autowrap_w =3D params.width
 	gWidgetPrototype.Text.Init(self,parentwidget,params)
 	self:SetUOHtml(params.textline_id and textlines[params.textline_id] or (g=
ClilocLoader and gClilocLoader:Get(params.cliloc_id) or "no_cliloc"))
-	self:SetLeftTop(params.x-1,params.y-21)
+	self:SetLeftTop(params.x-1,params.y-22)
 end
 =

 function gWidgetPrototype.UOText:SetUOHtml (uohtml,font)



From no-reply at zwischenwelt.org  Mon Jun 30 04:14:36 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 30 Jun 2008 02:14:36 -0000
Subject: [Iris-commit] [IRIS] r2271 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.unifont.lua widgets/widget.uotext.lua
Message-ID: <20080630021437.478961C18019@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Jun 30 04:14:36 2008
New Revision: 2271

Log:
preparing unifont and gumpparser for preloading to improve performance by t=
ex-atlas bulk-loading

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.unifont.lua
    trunk/widgets/widget.uotext.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Mon Jun 30 04:14:36 2008
@@ -14,6 +14,7 @@
 function GumpParserTest ()
 	Client_RenderOneFrame() -- first frame rendered with ogre, needed for ini=
t of viewport size
 	GetMainViewport():SetBackCol(0.5,0.5,0.5)
+	=

 	=

 	Load_Font() -- iris specific
 	Load_Hue()
@@ -33,8 +34,21 @@
 	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
 	]]--
 	-- kGumpSample_RuneBook kGumpSample_ChangeLog kGumpSample_Reward
-	GumpParser_New(kGumpSample_RuneBook,false):SetLeftTop(0,240)
+	local profiler =3D MakeProfiler("gumpparser")
+	profiler:StartSection("font:preload")
+	GetUOFont(gUniFontLoaderList[1],true):PreLoad()
+	GetUOFont(gUniFontLoaderList[1],false):PreLoad()
+	profiler:StartSection("new")
+	local dialog =3D GumpParser_New(kGumpSample_RuneBook,false) =

+	profiler:StartSection("move")
+	dialog:SetLeftTop(0,240)
+	profiler:StartSection("old")
 	GumpParser(kGumpSample_RuneBook_Simple,false)
+	profiler:Finish()
+	profiler:PrintTotalTime()
+	=

+	=

+	=

 	--~ local dialog =3D GumpParser_New(kClientSideGump_Paperdoll_Own,true) d=
ialog:SetLeftTop(400,100)
 	--~ GumpParser(kClientSideGump_Paperdoll_Own,true)
 	=

@@ -205,8 +219,8 @@
 -- token is an array
 -- tokenformat is a string with comma-separated field names like "x,y,widt=
h,height,[ctrlname],..." =

 -- [] encasing optional params and ... for not checking the number of rema=
ining params
-function GumpParser_ParseToken (token,tokenformat)
-	local res =3D {}
+function GumpParser_ParseToken (token,tokenformat,paramadd)
+	local res =3D paramadd and CopyArray(paramadd) or {}
 	for k,fieldname in ipairs(explode(",",tokenformat)) do
 		if (fieldname =3D=3D "...") then return res end
 		local tokenval =3D token[k+1]
@@ -232,15 +246,18 @@
 -- param : x,y,gump_id/art_id,width,height,hue=3D0,tiled=3Dfalse(strech),c=
hecker=3Dfalse(gray-transparent-background),multipart=3Dfalse(true for resi=
zepic)
 -- either art_id or gump_id is used
 function GumpParser_MakeImage (parent,param) return parent:CreateChild("UO=
Image",param) end
+--~ function GumpParser_MakeImage (parent,param)  end
 =

 -- returns widget
 -- param : x,y,width,height,cliloc_id/textline_id,background,scrollbar,hue=
  : background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddisplayed
 function GumpParser_MakeText (parent,param,textlines) return parent:Create=
Child("UOText",param,textlines) end
+--~ function GumpParser_MakeText (parent,param,textlines)  end
 =

 -- returns widget
 -- param : x,y,gump_id_normal,gump_id_pressed,quit,page_id,return_value
 -- optionally : art_id,hue,art_x,art_y    if an art-image is used as butto=
n label
 function GumpParser_MakeButton (parent,param) return parent:CreateChild("U=
OButton",param,textlines) end
+--~ function GumpParser_MakeButton (parent,param)  end
 =

 =

 				=

@@ -356,6 +373,27 @@
 		CloseServerSideGump(playerid, dialogId, 0, bClientSideMode)
 	end
 end
+
+kGumpParser_CommandTypes =3D {}
+kGumpParser_CommandTypes["page"]				=3D {paramformat=3D"pagenum"}
+kGumpParser_CommandTypes["xmfhtmlgump"]			=3D {paramformat=3D"x,y,width,he=
ight,cliloc_id,background,scrollbar,[ctrlname]"}
+kGumpParser_CommandTypes["xmfhtmlgumpcolor"]	=3D {paramformat=3D"x,y,width=
,height,cliloc_id,background,scrollbar,hue,[ctrlname]"}
+kGumpParser_CommandTypes["croppedtext"]			=3D {paramformat=3D"x,y,width,he=
ight,hue,textline_id,[ctrlname]",paramadd=3D{bold =3D true}}
+kGumpParser_CommandTypes["htmlgump"]			=3D {paramformat=3D"x,y,width,heigh=
t,textline_id,background,scrollbar,[ctrlname]"}
+kGumpParser_CommandTypes["text"]				=3D {paramformat=3D"x,y,hue,textline_i=
d,[ctrlname]"}
+kGumpParser_CommandTypes["tooltip"]				=3D {paramformat=3D"cliloc_id,[ctrl=
name]"}
+kGumpParser_CommandTypes["resizepic"]			=3D {paramformat=3D"x,y,gump_id,wi=
dth,height,[ctrlname]",paramadd=3D{multipart =3D true}}
+kGumpParser_CommandTypes["gumppictiled"]		=3D {paramformat=3D"x,y,width,he=
ight,gump_id,[ctrlname]",paramadd=3D{tiled =3D true}}
+kGumpParser_CommandTypes["checkertrans"]		=3D {paramformat=3D"x,y,width,he=
ight,[ctrlname]",paramadd=3D{checker =3D true}}
+kGumpParser_CommandTypes["tilepic"]				=3D {paramformat=3D"x,y,art_id,[ctr=
lname]"}
+kGumpParser_CommandTypes["tilepichue"]			=3D {paramformat=3D"x,y,art_id,hu=
e,[ctrlname]"}
+kGumpParser_CommandTypes["button"]				=3D {paramformat=3D"x,y,gump_id_norm=
al,gump_id_pressed,quit,page_id,[return_value],[ctrlname]"}
+kGumpParser_CommandTypes["buttontileart"]		=3D {paramformat=3D"x,y,gump_id=
_normal,gump_id_pressed,quit,page_id,return_value,art_id,hue,art_x,art_y,[c=
trlname]"}
+kGumpParser_CommandTypes["checkbox"]			=3D {paramformat=3D"x,y,gump_id_nor=
mal,gump_id_pressed,status,return_value,[ctrlname]"}
+kGumpParser_CommandTypes["radio"]				=3D {paramformat=3D"x,y,gump_id_norma=
l,gump_id_pressed,status,return_value,[ctrlname]"}
+kGumpParser_CommandTypes["group"]				=3D {paramformat=3D"groupnumber"}
+kGumpParser_CommandTypes["textentry"]			=3D {paramformat=3D"x,y,width,heig=
ht,hue,return_value,textline_id_default,[ctrlname]"}
+kGumpParser_CommandTypes["gumppic"]				=3D {paramformat=3D"x,y,gump_id,...=
"}
 				=

 function GumpParser_New (Gumpdata, bClientSideMode)
 	-- if there is a dialog with the same id, close it
@@ -366,19 +404,31 @@
 	dialog.gumpdata =3D Gumpdata -- for debugging
 	local parent =3D dialog:GetPage(0)
 	local groupnumber =3D -1 -- for radiobuttons
-	local param
 	local widget
 	=

-	--~ function MyGetTokenText (params) return params.textline_id and Gumpda=
ta.textline[params.textline_id] or (gClilocLoader and gClilocLoader:Get(par=
ams.cliloc_id) or "no_cliloc") end -- debug
-	=

 	-- parse gump code
+	local command_chunks =3D {}
 	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
 		local bToken =3D {}
 		for token in string.gfind(v, "%w+") do table.insert(bToken,token) end
-		local command =3D bToken[1] and string.lower(bToken[1])
-
+		local command =3D bToken[1] and string.lower(bToken[1]) or ""
+		local commandtype =3D kGumpParser_CommandTypes[command]
+		local param =3D commandtype and GumpParser_ParseToken(bToken,commandtype=
.paramformat,commandtype.paramadd)
+		=

+		if (command =3D=3D "gumppic") then -- special format, optional hue=3D123
+			if (bToken[5] =3D=3D "hue") then param.hue =3D bToken[6] end
+			if (bClientSideMode) then param.ctrlname =3D bToken[5] end
+		end
+		=

+		table.insert(command_chunks,{command,bToken,param})
+		=

+		-- todo : precache gumps,artids and cliloc strings
+	end
+	=

+	for k,command_chunk in pairs(command_chunks) do =

+		local command,bToken,param =3D unpack(command_chunk)
 		------------------------------------------------------------------------=
--------------------
-		if (not command) then -- no word in line
+		if (command =3D=3D "") then -- no word in line
 		elseif (command =3D=3D "noclose") then
 			dialog.noclose =3D true
 		elseif (command =3D=3D "nomove") then
@@ -389,7 +439,7 @@
 			dialog.noresize =3D true
 			=

 		--Description:  Specifies which page to define. Page 0 is already presen=
t and visible with all other Pages (1,2,3,etc) =

-		elseif (command =3D=3D "page") then param =3D GumpParser_ParseToken(bTok=
en,"pagenum")
+		elseif (command =3D=3D "page") then
 			parent =3D dialog:GetPage(param.pagenum)
 			groupnumber =3D -1 -- start new radio button group on page-switch ? not=
 sure if this is correct  (TODO : test moongate menu)
 			=

@@ -401,45 +451,37 @@
 		=

 		--xmfhtmlgump <x> <y> <width> <height> <cliloc_id> <background> <scrollb=
ar>
 		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
-		elseif (command =3D=3D "xmfhtmlgump") then param =3D GumpParser_ParseTok=
en(bToken,"x,y,width,height,cliloc_id,background,scrollbar,[ctrlname]")
+		elseif (command =3D=3D "xmfhtmlgump") then
 			widget =3D GumpParser_MakeText(parent,param)
-			--~ print("gumpparser_d",v,MyGetTokenText(param))
-			=

 			=

 		--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc_id> <background> <sc=
rollbar> <hue>
 		--Description:	background=3D0/1=3Dtransparent?  scrollbar=3D0/1=3Ddispla=
yed
-		elseif (command =3D=3D "xmfhtmlgumpcolor") then param =3D GumpParser_Par=
seToken(bToken,"x,y,width,height,cliloc_id,background,scrollbar,hue,[ctrlna=
me]")
+		elseif (command =3D=3D "xmfhtmlgumpcolor") then
 			widget =3D GumpParser_MakeText(parent,param)
-			--~ print("gumpparser_d",v,MyGetTokenText(param))
 			=

 		-- croppedtext <x> <y> <width> <height> <hue> <textline_id>
 		-- Description:  Adds a text field to the gump. This is similar to the t=
ext command,
 		-- but the text is cropped to the defined area.
 		-- text is automatically bold/outlined
-		elseif (command =3D=3D "croppedtext") then param =3D GumpParser_ParseTok=
en(bToken,"x,y,width,height,hue,textline_id,[ctrlname]")
-			param.bold =3D true
+		elseif (command =3D=3D "croppedtext") then
 			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
-			--~ print("gumpparser_d",v,MyGetTokenText(param))
 			=

 		--HtmlGump <x> <y> <width> <height> <textline_id> <background> <scrollba=
r>
 		--Description:  Defines a text-area where Html-commands are allowed.
 		--				<background> and <scrollbar> can be 0 or 1 and define whether the =
background is transparent and a scrollbar is displayed.
 		--{ htmlgump 10 8 100 20 0 0 0 }
-		elseif (command =3D=3D "htmlgump") then param =3D GumpParser_ParseToken(=
bToken,"x,y,width,height,textline_id,background,scrollbar,[ctrlname]")
+		elseif (command =3D=3D "htmlgump") then
 			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
-			--~ print("gumpparser_d",v,MyGetTokenText(param))
 			=

 		--text <x> <y> <hue> <textline_id>
 		--Description:  Defines the position and hue of a text (data) entry.
-		elseif (command =3D=3D "text") then param =3D GumpParser_ParseToken(bTok=
en,"x,y,hue,textline_id,[ctrlname]")
+		elseif (command =3D=3D "text") then
 			widget =3D GumpParser_MakeText(parent,param,Gumpdata.textline)
-			--~ print("gumpparser_d",v,MyGetTokenText(param))
 =

 		--tooltip <cliloc_id>
 		--Description:  Adds to the previous layoutarray entry a Tooltip with th=
e in [cliloc-nr] defined Cliloc entry
-		elseif (command =3D=3D "tooltip") then param =3D GumpParser_ParseToken(b=
Token,"cliloc_id,[ctrlname]")
+		elseif (command =3D=3D "tooltip") then
 			if (widget) then GumpParser_SetToolTipp(widget,param.cliloc_id) end
-			--~ print("gumpparser_d",v,MyGetTokenText(param))
 			=

 			=

 			=

@@ -450,39 +492,34 @@
 		=

 		--resizepic <x> <y> <gump_id> <width> <height>
 		--consists of multiple(9) parts, for which gump_id is the base-id, a bor=
der-frame like thing, dialog background for example. tiled
-		elseif (command =3D=3D "resizepic") then param =3D GumpParser_ParseToken=
(bToken,"x,y,gump_id,width,height,[ctrlname]")
-			param.multipart =3D true -- the gump_id is just the base id, the border=
 tiles have different ids, calculated from it
+		-- multipart=3Dtrue : the gump_id is just the base id, the border tiles =
have different ids, calculated from it
+		elseif (command =3D=3D "resizepic") then
 			widget =3D GumpParser_MakeImage(parent,param)
 			=

 		--gumppic <x> <y> <gump_id> [hue=3D353]
 		--Description:  Adds a graphic to the gump, where <id> ist the graphic i=
d of an item.
 		--				Optionaly there is a color parameter. =

-		elseif (command =3D=3D "gumppic") then param =3D GumpParser_ParseToken(b=
Token,"x,y,gump_id,...")
-			if (bToken[5] =3D=3D "hue") then param.hue =3D bToken[6] end
+		elseif (command =3D=3D "gumppic") then
 			widget =3D GumpParser_MakeImage(parent,param)
-			-- in clientmode no hueing is used yet (because of different hue defini=
tions)
-			if (bClientSideMode) then param.ctrlname =3D bToken[5] end
 =

 		--gumppictiled <x> <y> <width> <height> <gump_id>
 		--Description:  Similar to GumpPic, but the gumppic is tiled to the give=
n <height> and <width>.
-		elseif (command =3D=3D "gumppictiled") then param =3D GumpParser_ParseTo=
ken(bToken,"x,y,width,height,gump_id,[ctrlname]")
-			param.tiled =3D true
+		elseif (command =3D=3D "gumppictiled") then
 			widget =3D GumpParser_MakeImage(parent,param)
 =

 		--checkertrans <x> <y> <width> <height>
 		--Description:  Creates a transparent rectangle on position <x,y> using =
<width> and <height>.
-		elseif (command =3D=3D "checkertrans") then param =3D GumpParser_ParseTo=
ken(bToken,"x,y,width,height,[ctrlname]")
-			param.checker =3D true
+		elseif (command =3D=3D "checkertrans") then
 			widget =3D GumpParser_MakeImage(parent,param)
 =

 		--tilepic <x> <y> <art_id>
 		--Description:  Adds a Tilepicture to the gump. <id> defines the tile gr=
aphic-id.
-		elseif (command =3D=3D "tilepic") then param =3D GumpParser_ParseToken(b=
Token,"x,y,art_id,[ctrlname]")
+		elseif (command =3D=3D "tilepic") then
 			widget =3D GumpParser_MakeImage(parent,param)
 =

 		--TilePicHue <x> <y> <art_id> <hue>
 		--Description:  Similar to the tilepic command, but with an additional h=
ue parameter.
-		elseif (command =3D=3D "tilepichue") then param =3D GumpParser_ParseToke=
n(bToken,"x,y,art_id,hue,[ctrlname]")
+		elseif (command =3D=3D "tilepichue") then
 			widget =3D GumpParser_MakeImage(parent,param)
 		=

 		=

@@ -496,7 +533,7 @@
 		--				<released-id> and <pressed-id> specify the buttongraphic. If press=
ed check for <return-value>.
 		--				Use <page-id> to switch between pages and <quit>=3D1/0 to close th=
e gump.
 		--  return_value is optional on pol
-		elseif (command =3D=3D "button") then param =3D GumpParser_ParseToken(bT=
oken,"x,y,gump_id_normal,gump_id_pressed,quit,page_id,[return_value],[ctrln=
ame]")
+		elseif (command =3D=3D "button") then
 			widget =3D GumpParser_MakeButton(parent,param)
 =

 		--buttontileart <x> <y> <gump_id_normal> <gump_id_pressed> <quit> <page_=
id> <return_value> <art_id> <hue> <art_x> <art_y>
@@ -504,29 +541,29 @@
 		--Description:  Adds a button to the gump with the specified coordinates=
 and tilepic as graphic.
 		--				<tile-x> and <tile-y> define the coordinates of the tile graphic a=
nd are relative to <x> and <y>.
 		--{ buttontileart 432 248 9010 9010 1 0 33 1352 0 100 20 }
-		elseif (command =3D=3D "buttontileart") then param =3D GumpParser_ParseT=
oken(bToken,"x,y,gump_id_normal,gump_id_pressed,quit,page_id,return_value,a=
rt_id,hue,art_x,art_y,[ctrlname]")
+		elseif (command =3D=3D "buttontileart") then
 			widget =3D GumpParser_MakeButton(parent,param)
 			=

 		--checkbox <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_v=
alue>
 		--Description:  Adds a CheckBox to the gump. Multiple CheckBoxes can be =
pressed at the same time.
 		--				Check the <return-value> if you want to know which CheckBoxes were=
 selected.
-		elseif (command =3D=3D "checkbox") then param =3D GumpParser_ParseToken(=
bToken,"x,y,gump_id_normal,gump_id_pressed,status,return_value,[ctrlname]")
+		elseif (command =3D=3D "checkbox") then
 			widget =3D GumpParser_MakeCheckBox(parent,param)
 			=

 		--radio <x> <y> <gump_id_normal> <gump_id_pressed> <status> <return_valu=
e>
 		--Description:  Same as Checkbox, but only one Radiobutton can be presse=
d at the same time, except they are per linked via the 'Group' command.
-		elseif (command =3D=3D "radio") then param =3D GumpParser_ParseToken(bTo=
ken,"x,y,gump_id_normal,gump_id_pressed,status,return_value,[ctrlname]")
+		elseif (command =3D=3D "radio") then
 			widget =3D GumpParser_MakeRadioButton(parent,param,groupnumber)
 			=

 		--Group <groupnumber>
 		--Description:  Links radio buttons to a group. Group is send before rad=
iobuttons. Seems only to work on page 0 and 1.  =

-		elseif (command =3D=3D "group") then param =3D GumpParser_ParseToken(bTo=
ken,"groupnumber")
+		elseif (command =3D=3D "group") then
 			groupnumber =3D param.groupnumber
 			=

 		--textentry <x> <y> <width> <height> <hue> <return_value> <textline_id_d=
efault>
 		--Description:  Defines an area where the <default-text-id> is displayed.
 		--				The player can modify this data. To get this data check the <retur=
n-value>
-		elseif (command =3D=3D "textentry") then param =3D GumpParser_ParseToken=
(bToken,"x,y,width,height,hue,return_value,textline_id_default,[ctrlname]")
+		elseif (command =3D=3D "textentry") then
 			widget =3D GumpParser_MakeEditText(parent,param)
 			=

 			=


Modified: trunk/lua/lib.unifont.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.unifont.lua (original)
+++ trunk/lua/lib.unifont.lua Mon Jun 30 04:14:36 2008
@@ -119,6 +119,12 @@
 	myfont.GetDefaultFontSize	=3D function (self) return myfont.defaultlineh =
end
 	myfont.GetSpaceWidth		=3D function (self,fontsize) return self.spacewidth=
 end
 	myfont.GetLineHeight		=3D function (self,fontsize) return self.defaultlin=
eh end
+	myfont.PreLoad				=3D function (self,preloadletters) =

+		preloadletters =3D preloadletters or "abcdefghijklmnopqrstuvwxyzABCDEFGH=
IJKLMNOPQRSTUVWXYZ01234567890:."
+		local fontsize =3D self:GetDefaultFontSize()
+		local textlen =3D string.len(preloadletters)
+		for i=3D1,textlen do self:GetGlyphInfo(string.byte(preloadletters,i),fon=
tsize) end
+	end
 	myfont.GetGlyphInfo			=3D function (self,iCharCode,fontsize) =

 		local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,iChar=
Code,self.bOutlined)
 		if (not matname) then return end

Modified: trunk/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uotext.lua (original)
+++ trunk/widgets/widget.uotext.lua Mon Jun 30 04:14:36 2008
@@ -43,4 +43,4 @@
 gumpparser_d     xmfhtmlgump	158 22 100 18 1011299 0 0 }        Rename book
 gumpparser_d     croppedtext	145 60 115 17 49 2 }       FFHQ
 gumpparser_d     croppedtext	145 75 115 17 1153 3 }     TokunoTamer
-]]--
+]]--



From no-reply at zwischenwelt.org  Mon Jun 30 15:22:33 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 30 Jun 2008 13:22:33 -0000
Subject: [Iris-commit] [IRIS] r2272 - in /trunk/lua: gui/gui.gumpparser.lua
 lib.iris_atlasgroup.lua lib.unifont.lua
Message-ID: <20080630132233.6F9061C18060@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Jun 30 15:22:33 2008
New Revision: 2272

Log:
font and gumpparser preloading

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.iris_atlasgroup.lua
    trunk/lua/lib.unifont.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Mon Jun 30 15:22:33 2008
@@ -395,6 +395,7 @@
 kGumpParser_CommandTypes["textentry"]			=3D {paramformat=3D"x,y,width,heig=
ht,hue,return_value,textline_id_default,[ctrlname]"}
 kGumpParser_CommandTypes["gumppic"]				=3D {paramformat=3D"x,y,gump_id,...=
"}
 				=

+
 function GumpParser_New (Gumpdata, bClientSideMode)
 	-- if there is a dialog with the same id, close it
 	GumpParser_CloseOldDialog(Gumpdata.dialogId,Gumpdata.playerid,bClientSide=
Mode)
@@ -408,6 +409,9 @@
 	=

 	-- parse gump code
 	local command_chunks =3D {}
+	local profiler =3D MakeProfiler("gumpparser","preload")
+	PreLoadGump_Start()
+	PreLoadArt_Start()
 	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
 		local bToken =3D {}
 		for token in string.gfind(v, "%w+") do table.insert(bToken,token) end
@@ -422,8 +426,18 @@
 		=

 		table.insert(command_chunks,{command,bToken,param})
 		=

-		-- todo : precache gumps,artids and cliloc strings
-	end
+		-- preload gumps,artids and maybe unicode chars from cliloc and textline=
s, texatlas bulk loading
+		--~ PreLoadCliloc(param.cliloc_id) -- later : unicode glyphs for font ?
+		if (param) then =

+			PreLoadGump(param.gump_id_normal)
+			PreLoadGump(param.gump_id_pressed)
+			PreLoadGump(param.gump_id,param.hue)
+			PreLoadArt(param.art_id,param.hue)
+		end
+	end
+	PreLoadGump_End()
+	PreLoadArt_End()
+	profiler:FinishAndPrint()
 	=

 	for k,command_chunk in pairs(command_chunks) do =

 		local command,bToken,param =3D unpack(command_chunk)

Modified: trunk/lua/lib.iris_atlasgroup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.iris_atlasgroup.lua (original)
+++ trunk/lua/lib.iris_atlasgroup.lua Mon Jun 30 15:22:33 2008
@@ -7,6 +7,14 @@
 =

 gAtlasGroup_Gump	=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
 gAtlasGroup_Art		=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
+
+function PreLoadGump_Start	() 				gAtlasGroup_Gump:PreLoad_Start()		end
+function PreLoadGump		(gump_id,hue)	if (gump_id) then gAtlasGroup_Gump:Pre=
Load(gump_id,hue) end end
+function PreLoadGump_End	()				gAtlasGroup_Gump:PreLoad_End()			end
+
+function PreLoadArt_Start	()				gAtlasGroup_Art:PreLoad_Start()			end	=

+function PreLoadArt			(art_id,hue)	if (art_id) then gAtlasGroup_Art:PreLoa=
d(art_id,hue) end end
+function PreLoadArt_End		()				gAtlasGroup_Art:PreLoad_End()			end	=

 =

 -- returns matname,u0,v0,uvw,uvh,origw,origh,bitmask
 function LoadGump	(basemat,gump_id,hue) =


Modified: trunk/lua/lib.unifont.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.unifont.lua (original)
+++ trunk/lua/lib.unifont.lua Mon Jun 30 15:22:33 2008
@@ -45,8 +45,14 @@
 	SpriteList_Close()
 ]]--
 =

+function UniFont_AtlasUpdate ()
+	if (not gUniFontLastTextureAtlas.bDirty) then return end
+	gUniFontLastTextureAtlas:LoadToTexture(gUniFontLastTextureAtlas.texname) =
-- update existing texture
+	gUniFontLastTextureAtlas.bDirty =3D false
+end
+	=

 -- matname,u0,v0,u1,v1
-function UniFont_AddImageToAtlas (glyphimg)
+function UniFont_AddImageToAtlas (glyphimg,bAvoidAtlasUpdate)
 	local w =3D gUniFontTexAtlasSize
 	if (gUniFontLastTextureAtlas =3D=3D nil) then gUniFontLastTextureAtlas =
=3D CreateTexAtlas(w,w) end -- only first time
 	=

@@ -54,6 +60,7 @@
 	local bSuccess,l,r,t,b =3D gUniFontLastTextureAtlas:AddImage(glyphimg)
 	if (not bSuccess) then =

 		-- not more space in the old atlas, start a new one
+		UniFont_AtlasUpdate()
 		gUniFontLastTextureAtlas =3D CreateTexAtlas(w,w)
 		bSuccess,l,r,t,b =3D gUniFontLastTextureAtlas:AddImage(glyphimg)
 		if (not bSuccess) then print("warning, glyph too big for texatlas") retu=
rn end
@@ -61,7 +68,8 @@
 	=

 	-- create or update texatlas
 	if (gUniFontLastTextureAtlas.texname) then =

-		gUniFontLastTextureAtlas:LoadToTexture(gUniFontLastTextureAtlas.texname)=
 -- update existing texture
+		gUniFontLastTextureAtlas.bDirty =3D true
+		if (not bAvoidAtlasUpdate) then UniFont_AtlasUpdate() end
 	else
 		gUniFontLastTextureAtlas.texname =3D gUniFontLastTextureAtlas:MakeTextur=
e() -- generate new texture
 		gUniFontLastTextureAtlas.matname =3D GetPlainTextureGUIMat(gUniFontLastT=
extureAtlas.texname)
@@ -73,7 +81,7 @@
 =

 -- texname,u0,v0,u1,v1,xoff,yoff,w,h
 -- bold=3Doutline for uo html
-function GetUniFontGlyph (fontloader,iCharCode,bOutlined)
+function GetUniFontGlyph (fontloader,iCharCode,bOutlined,bAvoidAtlasUpdate)
 	if (not fontloader.glyphs) then fontloader.glyphs =3D {} end
 	if (not fontloader.glyphs_outlined) then fontloader.glyphs_outlined =3D {=
} end
 	local cachearr =3D bOutlined and fontloader.glyphs_outlined or fontloader=
.glyphs
@@ -87,7 +95,7 @@
 	local success =3D fontloader:WriteGlyphToImage(img,iCharCode,bOutlined)
 	if (success) then
 		local xoff,yoff,w,h =3D fontloader:GetGlyphInfo(iCharCode)
-		local matname,u0,v0,u1,v1 =3D UniFont_AddImageToAtlas(img)
+		local matname,u0,v0,u1,v1 =3D UniFont_AddImageToAtlas(img,bAvoidAtlasUpd=
ate)
 		if (matname) then glyphdata =3D {matname,u0,v0,u1,v1,xoff,yoff,w,h} end
 	end
 	img:Destroy()
@@ -121,9 +129,9 @@
 	myfont.GetLineHeight		=3D function (self,fontsize) return self.defaultlin=
eh end
 	myfont.PreLoad				=3D function (self,preloadletters) =

 		preloadletters =3D preloadletters or "abcdefghijklmnopqrstuvwxyzABCDEFGH=
IJKLMNOPQRSTUVWXYZ01234567890:."
-		local fontsize =3D self:GetDefaultFontSize()
 		local textlen =3D string.len(preloadletters)
-		for i=3D1,textlen do self:GetGlyphInfo(string.byte(preloadletters,i),fon=
tsize) end
+		for i=3D1,textlen do GetUniFontGlyph(loader,string.byte(preloadletters,i=
),self.bOutlined,true) end -- bulkloading
+		UniFont_AtlasUpdate()
 	end
 	myfont.GetGlyphInfo			=3D function (self,iCharCode,fontsize) =

 		local matname,u0,v0,u1,v1,xoff,yoff,w,h =3D GetUniFontGlyph(loader,iChar=
Code,self.bOutlined)



From no-reply at zwischenwelt.org  Mon Jun 30 20:00:46 2008
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 30 Jun 2008 18:00:46 -0000
Subject: [Iris-commit] [IRIS] r2273 - in /trunk: lua/gui/gui.gumpparser.lua
 lua/lib.iris_atlasgroup.lua lua/lib.unifont.lua widgets/widget.uoimage.lua
 widgets/widget.uotext.lua
Message-ID: <20080630180046.66FF01524030@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Jun 30 20:00:45 2008
New Revision: 2273

Log:
guisys:uoimage:now supports multipart/borderframe gump (often used for dial=
og backgrounds), uotext : now supports autowrap

Modified:
    trunk/lua/gui/gui.gumpparser.lua
    trunk/lua/lib.iris_atlasgroup.lua
    trunk/lua/lib.unifont.lua
    trunk/widgets/widget.uoimage.lua
    trunk/widgets/widget.uotext.lua

Modified: trunk/lua/gui/gui.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/gui/gui.gumpparser.lua (original)
+++ trunk/lua/gui/gui.gumpparser.lua Mon Jun 30 20:00:45 2008
@@ -34,16 +34,16 @@
 	kClientSideGump_Journal			=3D journalGump	-- a very simple message log in=
 papyrus-scroll look
 	]]--
 	-- kGumpSample_RuneBook kGumpSample_ChangeLog kGumpSample_Reward
+	--~ local testgump,x,y =3D kGumpSample_RuneBook,0,240
+	local testgump,x,y =3D kGumpSample_Reward,0,140
 	local profiler =3D MakeProfiler("gumpparser")
 	profiler:StartSection("font:preload")
 	GetUOFont(gUniFontLoaderList[1],true):PreLoad()
 	GetUOFont(gUniFontLoaderList[1],false):PreLoad()
+	profiler:StartSection("old")
+	GumpParser(testgump,false)
 	profiler:StartSection("new")
-	local dialog =3D GumpParser_New(kGumpSample_RuneBook,false) =

-	profiler:StartSection("move")
-	dialog:SetLeftTop(0,240)
-	profiler:StartSection("old")
-	GumpParser(kGumpSample_RuneBook_Simple,false)
+	local dialog =3D GumpParser_New(testgump,false) dialog:SetLeftTop(x,y)
 	profiler:Finish()
 	profiler:PrintTotalTime()
 	=

@@ -410,8 +410,6 @@
 	-- parse gump code
 	local command_chunks =3D {}
 	local profiler =3D MakeProfiler("gumpparser","preload")
-	PreLoadGump_Start()
-	PreLoadArt_Start()
 	for k,v in pairs(strsplit("{",Gumpdata.Data)) do
 		local bToken =3D {}
 		for token in string.gfind(v, "%w+") do table.insert(bToken,token) end
@@ -429,14 +427,13 @@
 		-- preload gumps,artids and maybe unicode chars from cliloc and textline=
s, texatlas bulk loading
 		--~ PreLoadCliloc(param.cliloc_id) -- later : unicode glyphs for font ?
 		if (param) then =

+			if (command =3D=3D "resizepic") then for k,v in pairs(kBorderGumpIndexA=
dd) do PreLoadGump(param.gump_id + v) end end
 			PreLoadGump(param.gump_id_normal)
 			PreLoadGump(param.gump_id_pressed)
 			PreLoadGump(param.gump_id,param.hue)
 			PreLoadArt(param.art_id,param.hue)
 		end
 	end
-	PreLoadGump_End()
-	PreLoadArt_End()
 	profiler:FinishAndPrint()
 	=

 	for k,command_chunk in pairs(command_chunks) do =


Modified: trunk/lua/lib.iris_atlasgroup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.iris_atlasgroup.lua (original)
+++ trunk/lua/lib.iris_atlasgroup.lua Mon Jun 30 20:00:45 2008
@@ -8,13 +8,12 @@
 gAtlasGroup_Gump	=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
 gAtlasGroup_Art		=3D CreateAtlasGroup(kIrisAtlasGroupSize,kIrisAtlasGroupS=
ize)
 =

-function PreLoadGump_Start	() 				gAtlasGroup_Gump:PreLoad_Start()		end
 function PreLoadGump		(gump_id,hue)	if (gump_id) then gAtlasGroup_Gump:Pre=
Load(gump_id,hue) end end
-function PreLoadGump_End	()				gAtlasGroup_Gump:PreLoad_End()			end
+function PreLoadArt			(art_id,hue)	if (art_id) then gAtlasGroup_Art:PreLoa=
d(art_id,hue) end end
 =

-function PreLoadArt_Start	()				gAtlasGroup_Art:PreLoad_Start()			end	=

-function PreLoadArt			(art_id,hue)	if (art_id) then gAtlasGroup_Art:PreLoa=
d(art_id,hue) end end
-function PreLoadArt_End		()				gAtlasGroup_Art:PreLoad_End()			end	=

+function GetGumpSize	(gump_id,hue)	return gAtlasGroup_Gump:GetSize(gump_id=
,hue) end -- loads it and returns the size
+function GetArtSize		(art_id,hue) 	return gAtlasGroup_Art:GetSize(art_id,h=
ue) end
+
 =

 -- returns matname,u0,v0,uvw,uvh,origw,origh,bitmask
 function LoadGump	(basemat,gump_id,hue) =


Modified: trunk/lua/lib.unifont.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/lua/lib.unifont.lua (original)
+++ trunk/lua/lib.unifont.lua Mon Jun 30 20:00:45 2008
@@ -1,5 +1,6 @@
 -- handles uo unicode fonts textureatlas =

 -- see also lugre/lib.gui.flow.lua
+-- todo : use lib.atlasgroup.lua here ?
 =

 gUniFontTexAtlasSize =3D 512
 gUniFontLastTextureAtlas =3D nil

Modified: trunk/widgets/widget.uoimage.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uoimage.lua (original)
+++ trunk/widgets/widget.uoimage.lua Mon Jun 30 20:00:45 2008
@@ -6,6 +6,7 @@
 =

 RegisterWidgetClass("UOImage")
 =

+kBorderGumpIndexAdd =3D { LT=3D0,T=3D1,RT=3D2,L=3D3,M=3D4,R=3D5,LB=3D6,B=
=3D7,RB=3D8,RB_Resize=3D9 } -- from gui.gumpmaker.lua
 =

 -- params : x,y,gump_id/art_id,width,height,hue=3D0,tiled=3Dfalse(strech),=
checker=3Dfalse(gray-transparent-background),multipart=3Dfalse(true for res=
izepic)
 -- either art_id or gump_id or checker is used
@@ -14,20 +15,53 @@
 		self.rendergroup2d =3D CreateRenderGroup2D(parentwidget:CastToRenderGrou=
p2D())
 		self:SetRenderGroup2D(self.rendergroup2d)
 		self:AddToDestroyList(self.rendergroup2d)
-		print("widget.UOImage : multipart not yet implemented")
-		-- TODO : multiple child widgets for bitmask
-		-- TODO : skip_rows_from_top =3D 1 for middle : widget.gfx:SetUV(0,(skip=
_rows_from_top)/th,cx/tw,(cy+skip_rows_from_top)/th)
-		-- TODO : gBorderGumpIndexAdd =3D { LT=3D0,T=3D1,RT=3D2,L=3D3,M=3D4,R=3D=
5,LB=3D6,B=3D7,RB=3D8,RB_Resize=3D9 }  -- from gui.gumpmaker.lua
+		local gump_id_base =3D params.gump_id
+		=

+		self.gfx_LT		=3D self:CreateChild("UOImage",{x=3D0,y=3D0,tiled=3Dfalse,g=
ump_id=3Dgump_id_base+kBorderGumpIndexAdd.LT})
+		self.gfx_RB		=3D self:CreateChild("UOImage",{x=3D0,y=3D0,tiled=3Dfalse,g=
ump_id=3Dgump_id_base+kBorderGumpIndexAdd.RB})
+		local w1,h1 =3D self.gfx_LT:GetOrigSize()
+		local w3,h3 =3D self.gfx_RB:GetOrigSize()
+		local w2,h2 =3D params.width - w3 - w1,params.height - h3 - h1
+		local x1,y1 =3D 0,0
+		local x2,y2 =3D w1,h1
+		local x3,y3 =3D w1+w2,h1+h2
+		self.gfx_RB:SetPos(x3,y3)
+		=

+		-- multiple child widgets for bitmasks, and because of different materia=
ls
+		-- skip_rows_from_top =3D 1 for middle : widget.gfx:SetUV()
+		=

+		self.gfx_T		=3D self:CreateChild("UOImage",{x=3Dx2,y=3Dy1,width=3Dw2,hei=
ght=3Dh1,tiled=3Dtrue,gump_id=3Dgump_id_base+kBorderGumpIndexAdd.T })
+		self.gfx_RT		=3D self:CreateChild("UOImage",{x=3Dx3,y=3Dy1,width=3Dw3,he=
ight=3Dh1,tiled=3Dfalse,gump_id=3Dgump_id_base+kBorderGumpIndexAdd.RT})
+		=

+		self.gfx_L		=3D self:CreateChild("UOImage",{x=3Dx1,y=3Dy2,width=3Dw1,hei=
ght=3Dh2,tiled=3Dtrue,gump_id=3Dgump_id_base+kBorderGumpIndexAdd.L})
+		self.gfx_M		=3D self:CreateChild("UOImage",{x=3Dx2,y=3Dy2,width=3Dw2,hei=
ght=3Dh2,tiled=3Dtrue,gump_id=3Dgump_id_base+kBorderGumpIndexAdd.M ,skip_ro=
ws_from_top=3D1})
+		self.gfx_R		=3D self:CreateChild("UOImage",{x=3Dx3,y=3Dy2,width=3Dw3,hei=
ght=3Dh2,tiled=3Dtrue,gump_id=3Dgump_id_base+kBorderGumpIndexAdd.R})
+		                                                                =

+		self.gfx_LB		=3D self:CreateChild("UOImage",{x=3Dx1,y=3Dy3,width=3Dw1,he=
ight=3Dh3,tiled=3Dfalse,gump_id=3Dgump_id_base+kBorderGumpIndexAdd.LB})
+		self.gfx_B		=3D self:CreateChild("UOImage",{x=3Dx2,y=3Dy3,width=3Dw2,hei=
ght=3Dh3,tiled=3Dtrue,gump_id=3Dgump_id_base+kBorderGumpIndexAdd.B })
+		=

+	=

 	else
 		local matname,u0,v0,uvw,uvh,origw,origh,bitmask
 		if (params.gump_id	) then matname,u0,v0,uvw,uvh,origw,origh,bitmask =3D =
LoadGump(	"guibasemat",params.gump_id			,params.hue) end
 		if (params.art_id	) then matname,u0,v0,uvw,uvh,origw,origh,bitmask =3D L=
oadArt(	"guibasemat",params.art_id + 0x4000	,params.hue) end
 		if (params.checker	) then matname,u0,v0,uvw,uvh,origw,origh,bitmask =3D =
self:LoadChecker() end
+		self.origw =3D origw
+		self.origh =3D origh
 		=

 		local w =3D params.width  or origw
 		local h =3D params.height or origh
+		=

+		local skip_rows_from_top =3D params.skip_rows_from_top
+		if (skip_rows_from_top) then
+			local voff =3D skip_rows_from_top * uvh / origh
+			v0 =3D v0 + voff
+			uvh =3D uvh - voff
+			bitmask =3D false -- only used for middle of multipart, and box-detecti=
on is ok here
+		end
+		=

 		local gfxparam_init	=3D matname and (	(params.tiled) and
-											MakeSpritePanelParam_TiledSingleSprite(	matname,w,h,0,0, u0,v0,=
uvw,uvh, origw,origh) or
+											MakeSpritePanelParam_TiledSingleSprite(	matname,w,h,0,0, u0,v0,=
uvw,uvh, 1,1, origw,origh) or
 											MakeSpritePanelParam_SingleSprite(		matname,w,h,0,0, u0,v0,uvw,=
uvh))
 		=

 		local bVertexBufferDynamic,bVertexCol =3D false,false
@@ -37,9 +71,12 @@
 		self.spritepanel =3D spritepanel
 	end
 	self.params =3D params
-	self:SetPos(params.x,params.y)
+	if (params.x) then self:SetPos(params.x,params.y) end
 	if (bitmask) then self:SetBitMask(bitmask) end
 end
+
+-- returns the original size of the gump image
+function gWidgetPrototype.UOImage:GetOrigSize 	() return self.origw,self.o=
righ end
 =

 -- returns matname,u0,v0,uvw,uvh,origw,origh
 -- TODO : temporary fix, should really be a checker texture tiled using te=
xcoords, but spritepanel doesn't support that yet

Modified: trunk/widgets/widget.uotext.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/widgets/widget.uotext.lua (original)
+++ trunk/widgets/widget.uotext.lua Mon Jun 30 20:00:45 2008
@@ -8,7 +8,7 @@
 -- bold=3Doutlined_font: false for xmfhtmlgump,htmlgump, true for croppedt=
ext, example : runebook gump : kGumpSample_RuneBook
 function gWidgetPrototype.UOText:Init (parentwidget, params, textlines)
 	--~ print("TODO:widget.UOText  : height,w/h-clip,background,scrollbar",pa=
rentwidget:GetClassName(),parentwidget.pagenum)
-	--~ params.autowrap_w =3D params.width
+	params.autowrap_w =3D params.width
 	gWidgetPrototype.Text.Init(self,parentwidget,params)
 	self:SetUOHtml(params.textline_id and textlines[params.textline_id] or (g=
ClilocLoader and gClilocLoader:Get(params.cliloc_id) or "no_cliloc"))
 	self:SetLeftTop(params.x-1,params.y-22)



