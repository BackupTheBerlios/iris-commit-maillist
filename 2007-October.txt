From no-reply at zwischenwelt.org  Mon Oct  1 00:29:46 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 30 Sep 2007 22:29:46 -0000
Subject: [Iris-commit] [IRIS] r1429 - in /trunk/data/lua: lib.protocol.lua
	lib.tilefreewalk.lua
Message-ID: <20070930222946.84DC51C1817E@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Oct  1 00:29:45 2007
New Revision: 1429

Log:
tilefree : collision improved

Modified:
    trunk/data/lua/lib.protocol.lua
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.protocol.lua (original)
+++ trunk/data/lua/lib.protocol.lua Mon Oct  1 00:29:45 2007
@@ -53,7 +53,8 @@
 function GetDirXLocal (dir) local a =3D GetDirX(dir) return (a=3D=3D0) and=
 0 or (-a) end -- prevent "-0", float supports signed zero
 function GetDirYLocal (dir) return GetDirY(dir) end
 =

--- interpret dircode in uo coordinate system
+-- interpret dircode in uo coordinate system  uneven numbers (1,3,5,7) are=
 diagonal
+function DirisDiagonal (dir) return dir =3D=3D 1 or dir =3D=3D 3 or dir =
=3D=3D 5 or dir =3D=3D 7 end
 function GetDirX (dir) =

 	if (dir =3D=3D 1 or dir =3D=3D 2 or dir =3D=3D 3) then return 1 -- east
 	elseif (dir =3D=3D 5 or dir =3D=3D 6 or dir =3D=3D 7) then return -1 -- w=
est

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Mon Oct  1 00:29:45 2007
@@ -106,6 +106,7 @@
 			local dx,dy =3D self.movedirx,self.movediry
 			self.movedirx =3D dx*cos(angadd) - dy*sin(angadd)
 			self.movediry =3D dx*sin(angadd) + dy*cos(angadd)
+			self.movedirx,self.movediry =3D norm2(self.movedirx,self.movediry)
 			bMoved =3D true
 		end
 		local maxspeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry,0=
) * gSecondsSinceLastFrame
@@ -122,13 +123,46 @@
 	=

 	-- execute movement (and collision/block handling)
 	if (bMoved) then
+		-- block movement here
+		local r =3D 0.2 -- radius of player/human
+		local h =3D 0.7
+		self:DebugMarkerGroup_Clear("touchwalls")
+		for k,wallarr in pairs(self.walls or {}) do
+			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
+			local vx,vy =3D sub2(x,y,x1,y1)
+			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
+			if (pos <=3D 0) then -- collide with edge : x1,y1
+				local pushoutdist =3D r - len2(vx,vy)
+				if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) =
end
+			elseif (pos >=3D 1) then -- collide with edge : x2,y2
+				vx,vy =3D sub2(x,y,x2,y2)
+				local pushoutdist =3D r - len2(vx,vy)
+				if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) =
end
+			end
+		end
+		for k,wallarr in pairs(self.walls or {}) do
+			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
+			local vx,vy =3D sub2(x,y,x1,y1)
+			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
+			if (pos >=3D 0 and pos <=3D 1) then -- collide with wall itself
+				local dist =3D dot2(vx,vy,nx,ny)
+				local pushoutdist =3D r - dist
+				if (dist > -r and pushoutdist > 0) then
+					self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, h,	1=
,1,0)
+					x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
+				end
+			end
+		end
+		=

+		=

+		-- get new rounded position
 		local rx,ry,rz =3D self:RoundPos(x,y,z)
 		local lx,ly,lz =3D self:PathPoint_GetLast()
 		=

 		-- entered a new tile
 		if (lx ~=3D rx or ly ~=3D ry) then =

+			self.groundcache =3D self:Impl_ScanGround(rx,ry,rz) -- read surrounding=
 height info
 			self:PathPoint_Push(rx,ry,rz)
-			self.groundcache =3D self:Impl_ScanGround(rx,ry,rz) -- read surrounding=
 height info
 			=

 			self:DebugMarkerGroup_Clear("nearground")
 			function GetGround (x,y) local z =3D self.groundcache[x..","..y] return=
 z end --  print("GetGround",x,y,z,rx,ry)
@@ -151,66 +185,49 @@
 			=

 					if (not GetGround(dx,dy+1)) then -- vertical
 						table.insert(self.walls,{	x-e,y,   x-e,y+e	})
-						table.insert(self.walls,{	x+e,y,   x+e,y+e	})
+						table.insert(self.walls,{	x+e,y+e, x+e,y		})
 						b01 =3D false b11 =3D false
 					end
 					if (not GetGround(dx,dy-1)) then -- vertical
-						table.insert(self.walls,{	x-e,y,   x-e,y-e	})
+						table.insert(self.walls,{	x-e,y-e, x-e,y		})
 						table.insert(self.walls,{	x+e,y,   x+e,y-e	})
 						b00 =3D false b10 =3D false
 					end
 					=

 					if (not GetGround(dx+1,dy)) then -- horizontal
-						table.insert(self.walls,{	x,y-e,   x+e,y-e	})
 						table.insert(self.walls,{	x,y+e,   x+e,y+e	})
+						table.insert(self.walls,{	x+e,y-e, x,y-e		})
 						b10 =3D false b11 =3D false
 					end                                                           =

-					if (not GetGround(dx-1,dy)) then -- horizontal            =

+					if (not GetGround(dx-1,dy)) then -- horizontal       =

+						table.insert(self.walls,{	x-e,y+e, x,y+e		})     =

 						table.insert(self.walls,{	x,y-e,   x-e,y-e	})
-						table.insert(self.walls,{	x,y+e,   x-e,y+e	})
 						b00 =3D false b01 =3D false
 					end
 					=

 					if (b00) then table.insert(self.walls,{	x,y-e,   x-e,y	}) end
 					if (b01) then table.insert(self.walls,{	x-e,y,   x,y+e	}) end
+					if (b11) then table.insert(self.walls,{	x,y+e,   x+e,y	}) end
 					if (b10) then table.insert(self.walls,{	x+e,y,   x,y-e	}) end
-					if (b11) then table.insert(self.walls,{	x,y+e,   x+e,y	}) end
 				end
 			end
 			end
 			=

+			-- todo : add special walls to block diagonal movement, to avoid errors=
 with rounding
 			-- warning, the rounded position of the player can be blocked, due to d=
iagonal movement
 			=

+			-- precalc some vars for the walls
 			local h =3D 0.5
 			for k,wallarr in pairs(self.walls) do
 				local x1,y1,x2,y2 =3D unpack(wallarr)
 				local dx,dy =3D sub2(x2,y2,x1,y1)
-				local nx,ny =3D norm2(dy,-dx)
+				local nx,ny =3D norm2(-dy,dx)
 				local invsqlen =3D 1.0/sqlen2(dx,dy)
 				self.walls[k] =3D {x1,y1,x2,y2,dx,dy,nx,ny,invsqlen}
---~ 				self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz,=
 h,	1,0,0)
+				self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz, h,	=
1,0,0)
 			end
 		end -- endif entered a new tile
 		=

-		-- block movement here
-		local r =3D 0.2 -- radius of player/human
-		local h =3D 0.7
-		local e =3D 0.05
-		self:DebugMarkerGroup_Clear("touchwalls")
-		for k,wallarr in pairs(self.walls or {}) do
-			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
-			local vx,vy =3D sub2(x,y,x1,y1)
-			local dist =3D dot2(vx,vy,nx,ny)
-			local pushoutdist =3D r - abs(dist)
-			if (pushoutdist > 0) then
-				local pos =3D dot2(vx,vy,dx,dy) * invsqlen
-				if (pos >=3D 0-e and pos <=3D 1+e) then =

-					self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,rz,   x2,y2,rz, h,=
	1,1,0)
-					x =3D x + nx*pushoutdist*sign(dist)
-					y =3D y + ny*pushoutdist*sign(dist)
-				end
-			end
-		end
 		=

 		-- calc correct z here
 		if (self.groundcache) then
@@ -351,25 +368,41 @@
 	xloc =3D math.floor(xloc)
 	yloc =3D math.floor(yloc)
 	zloc =3D math.floor(zloc)
-	--print(arrdump({"Impl_ScanGround",rx,ry,rz," ",xloc,yloc,zloc}))
-	=

-	local iSelfZ =3D zloc
+	=

+	local ox,oy,oz =3D self:PathPoint_GetLast()
+	local iSelfZ =3D nil -- zloc
+	local iComingHereDir
 	local groundcache =3D {}
+	function DirWrap (iDir) -- wraps into [0,7]
+		while (iDir < 0) do iDir =3D iDir + 8 end
+		while (iDir > 7) do iDir =3D iDir - 8 end
+		return iDir
+	end
+	function RegisterZ (ldx,ldy,iNewZ)
+		groundcache[ldx..","..ldy] =3D groundcache[ldx..","..ldy] or (iNewZ and =
(iNewZ*0.1 + Renderer3D.gZ_Factor))
+	end
 	for iDir=3D0,7 do =

 		local ldx,ldy =3D GetDirXLocal(iDir),GetDirYLocal(iDir)
-		local iNewZ =3D self:Impl_CalcWalkStep(xloc+GetDirX(iDir),yloc+GetDirY(i=
Dir),zloc,iDir)
-		=

-		-- one walkable dir : calc own z by "walking back"
-		if (iNewZ) then iSelfZ =3D self:Impl_CalcWalkStep(xloc,yloc,zloc,math.mo=
d(iDir+4,8)) or iSelfZ end
-		groundcache[ldx..","..ldy] =3D iNewZ and (iNewZ*0.1 + Renderer3D.gZ_Fact=
or)  -- rounding avoids things like "-0"
-		--print(ldx..","..ldy,iNewZ)
-	end
-	groundcache["0,0"] =3D iSelfZ and (iSelfZ*0.1 + Renderer3D.gZ_Factor)
-	--print("0,0",iSelfZ)
+		if (sign(ldx) =3D=3D sign(rx-ox) and sign(ldy) =3D=3D sign(ry-oy)) then =
iComingHereDir =3D iDir end
+		local xloc2,yloc2 =3D xloc+GetDirX(iDir),yloc+GetDirY(iDir)
+		local iNewZ =3D self:Impl_CalcWalkStep(xloc2,yloc2,zloc,iDir)
+		RegisterZ(ldx,ldy,iNewZ)
+		if (iNewZ) then iSelfZ =3D self:Impl_CalcWalkStep(xloc,yloc,zloc,DirWrap=
(iDir+4)) or iSelfZ end
+		if (iNewZ and (not DirisDiagonal(iDir))) then =

+			local iDirL,iDirR =3D DirWrap(iDir-2),DirWrap(iDir+2) =

+			RegisterZ(ldx+GetDirXLocal(iDirL),ldy+GetDirYLocal(iDirL),self:Impl_Cal=
cWalkStep(xloc2+GetDirX(iDirL),yloc2+GetDirY(iDirL),iNewZ,iDirL))
+			RegisterZ(ldx+GetDirXLocal(iDirR),ldy+GetDirYLocal(iDirR),self:Impl_Cal=
cWalkStep(xloc2+GetDirX(iDirR),yloc2+GetDirY(iDirR),iNewZ,iDirR))
+		end
+	end
+	=

+	iSelfZ =3D iSelfZ or self:Impl_CalcWalkStep(xloc,yloc,zloc,iComingHereDir=
 or 0)
+	RegisterZ(0,0,iSelfZ)
+	--print("0,0",groundcache["0,0"],iComingHereDir)
 	return groundcache
 end
 =

 function gTileFreeWalk:Impl_CalcWalkStep (xloc,yloc,zloc,iDir)
+	if (xloc =3D=3D 1670 and yloc =3D=3D 283) then return false end
 	local bx,by,tx,ty =3D self:Impl_UOPos2BT(xloc,yloc)
 	local bIsWalkable,iNewZ	=3D GetNearestGroundLevel(bx,by,tx,ty,zloc,iDir)
 	return bIsWalkable and iNewZ



From no-reply at zwischenwelt.org  Mon Oct  1 00:47:35 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 30 Sep 2007 22:47:35 -0000
Subject: [Iris-commit] [IRIS] r1430 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20070930224735.3FDAF1C181BA@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Oct  1 00:47:34 2007
New Revision: 1430

Log:
tilefree : collision improved

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Mon Oct  1 00:47:34 2007
@@ -127,7 +127,20 @@
 		local r =3D 0.2 -- radius of player/human
 		local h =3D 0.7
 		self:DebugMarkerGroup_Clear("touchwalls")
-		for k,wallarr in pairs(self.walls or {}) do
+		for k,wallarr in pairs(self.walls or {}) do -- block straight
+			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
+			local vx,vy =3D sub2(x,y,x1,y1)
+			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
+			if (pos >=3D 0 and pos <=3D 1) then -- collide with wall itself
+				local dist =3D dot2(vx,vy,nx,ny)
+				local pushoutdist =3D r - dist
+				if (dist > -r and pushoutdist > 0) then
+					--self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, h,=
	1,1,0)
+					x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
+				end
+			end
+		end
+		for k,wallarr in pairs(self.walls or {}) do -- block edge
 			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
 			local vx,vy =3D sub2(x,y,x1,y1)
 			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
@@ -140,7 +153,7 @@
 				if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) =
end
 			end
 		end
-		for k,wallarr in pairs(self.walls or {}) do
+		for k,wallarr in pairs(self.walls or {}) do -- block straight
 			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
 			local vx,vy =3D sub2(x,y,x1,y1)
 			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
@@ -148,7 +161,7 @@
 				local dist =3D dot2(vx,vy,nx,ny)
 				local pushoutdist =3D r - dist
 				if (dist > -r and pushoutdist > 0) then
-					self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, h,	1=
,1,0)
+					--self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, h,=
	1,1,0)
 					x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
 				end
 			end
@@ -172,7 +185,7 @@
 				local x,y,z =3D rx+dx,ry+dy,GetGround(dx,dy)
 				if (z) then =

 					local h =3D 0.5
-					self:DebugMarkerGroup_AddCylinder("nearground",	x,y,z, 0.01,h,	0,1,0)
+					--self:DebugMarkerGroup_AddCylinder("nearground",	x,y,z, 0.01,h,	0,1,=
0)
 					--self:DebugMarkerGroup_AddSphere("nearground", x,y,z, 0.1,		0,1,0)
 				else	=

 					z =3D rz
@@ -224,7 +237,7 @@
 				local nx,ny =3D norm2(-dy,dx)
 				local invsqlen =3D 1.0/sqlen2(dx,dy)
 				self.walls[k] =3D {x1,y1,x2,y2,dx,dy,nx,ny,invsqlen}
-				self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz, h,	=
1,0,0)
+				--self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz, h=
,	1,0,0)
 			end
 		end -- endif entered a new tile
 		=




From no-reply at zwischenwelt.org  Mon Oct  1 01:47:15 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 30 Sep 2007 23:47:15 -0000
Subject: [Iris-commit] [IRIS] r1431 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20070930234715.D00371C181BA@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Oct  1 01:47:15 2007
New Revision: 1431

Log:
added a few comments to tilefree collision handling

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Mon Oct  1 01:47:15 2007
@@ -40,6 +40,7 @@
 	self.pathpoints =3D {}
 	self.debugmarkers =3D {}
 	self.debugmarkergroups =3D {}
+	self.walls =3D {}
 	self.movedirx =3D 0
 	self.movediry =3D 1
 	=

@@ -126,8 +127,9 @@
 		-- block movement here
 		local r =3D 0.2 -- radius of player/human
 		local h =3D 0.7
-		self:DebugMarkerGroup_Clear("touchwalls")
-		for k,wallarr in pairs(self.walls or {}) do -- block straight
+		--self:DebugMarkerGroup_Clear("touchwalls")
+		-- 1st collision : with wall center, to avoid speed bumps while walking =
along a wall
+		for k,wallarr in pairs(self.walls) do -- block straight
 			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
 			local vx,vy =3D sub2(x,y,x1,y1)
 			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
@@ -140,7 +142,8 @@
 				end
 			end
 		end
-		for k,wallarr in pairs(self.walls or {}) do -- block edge
+		-- 2nd collision : with wall edges, otherwise it would be possible to mo=
ve into an edge between 2 non-parallel walls
+		for k,wallarr in pairs(self.walls) do -- block edge
 			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
 			local vx,vy =3D sub2(x,y,x1,y1)
 			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
@@ -153,7 +156,8 @@
 				if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) =
end
 			end
 		end
-		for k,wallarr in pairs(self.walls or {}) do -- block straight
+		-- 3rd collision : with wall center again, to avoid the edge collision p=
ushing the player slowly inside the walls
+		for k,wallarr in pairs(self.walls) do -- block straight
 			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
 			local vx,vy =3D sub2(x,y,x1,y1)
 			local pos =3D dot2(vx,vy,dx,dy) * invsqlen



From no-reply at zwischenwelt.org  Mon Oct  1 01:47:44 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 30 Sep 2007 23:47:44 -0000
Subject: [Iris-commit] [IRIS] r1432 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20070930234744.ED3151C181BA@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Oct  1 01:47:44 2007
New Revision: 1432

Log:
added a few comments to tilefree collision handling

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Mon Oct  1 01:47:44 2007
@@ -156,7 +156,7 @@
 				if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) =
end
 			end
 		end
-		-- 3rd collision : with wall center again, to avoid the edge collision p=
ushing the player slowly inside the walls
+		-- 3rd collision : with wall center again, to avoid the edge collisions =
pushing the player slowly inside the walls
 		for k,wallarr in pairs(self.walls) do -- block straight
 			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
 			local vx,vy =3D sub2(x,y,x1,y1)



From no-reply at zwischenwelt.org  Mon Oct  1 02:44:18 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Mon, 01 Oct 2007 00:44:18 -0000
Subject: [Iris-commit] [IRIS] r1433 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20071001004423.AB5C41C1817E@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Oct  1 02:44:17 2007
New Revision: 1433

Log:
removed debug code that blocked a specific position

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Mon Oct  1 02:44:17 2007
@@ -419,7 +419,7 @@
 end
 =

 function gTileFreeWalk:Impl_CalcWalkStep (xloc,yloc,zloc,iDir)
-	if (xloc =3D=3D 1670 and yloc =3D=3D 283) then return false end
+	-- if (xloc =3D=3D 1670 and yloc =3D=3D 283) then return false end
 	local bx,by,tx,ty =3D self:Impl_UOPos2BT(xloc,yloc)
 	local bIsWalkable,iNewZ	=3D GetNearestGroundLevel(bx,by,tx,ty,zloc,iDir)
 	return bIsWalkable and iNewZ



From no-reply at zwischenwelt.org  Wed Oct  3 00:58:41 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Oct 2007 22:58:41 -0000
Subject: [Iris-commit] [IRIS] r1434 - in /trunk/linuxbin: ./ iris
Message-ID: <20071002225841.6FA8D1C18124@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct  3 00:58:40 2007
New Revision: 1434

Log:
created dir for linux binary

Added:
    trunk/linuxbin/
    trunk/linuxbin/iris   (with props)



From no-reply at zwischenwelt.org  Wed Oct  3 01:04:11 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Oct 2007 23:04:11 -0000
Subject: [Iris-commit] [IRIS] r1435 - /trunk/linuxbin/test.txt
Message-ID: <20071002230411.E50C31C18124@zwischenwelt.org>

Author: aliverius
Date: Wed Oct  3 01:04:07 2007
New Revision: 1435

Log:
commit access test

Added:
    trunk/linuxbin/test.txt



From no-reply at zwischenwelt.org  Wed Oct  3 01:36:47 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 02 Oct 2007 23:36:47 -0000
Subject: [Iris-commit] [IRIS] r1436 - in /trunk: COPYING INSTALL README
 linuxbin/test.txt startbinary.sh
Message-ID: <20071002233647.A1E8A1C1816C@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct  3 01:36:46 2007
New Revision: 1436

Log:
added startbinary.sh and adjusted readme and install for linux binary, many=
 thanks to aliverius

Added:
    trunk/startbinary.sh   (with props)
Removed:
    trunk/linuxbin/test.txt
Modified:
    trunk/COPYING
    trunk/INSTALL
    trunk/README

Modified: trunk/COPYING
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/COPYING (original)
+++ trunk/COPYING Wed Oct  3 01:36:46 2007
@@ -1,6 +1,7 @@
 the 2DRenderer is only available as compiled .luac file, =

 it is a optional closed source plugin that is not statically linked, =

 if you don't want it, you can delete the .luac file.
+(note : it will probably be opensourced soon)
 =

 there is currently no license for the models and textures in the data dir,
 they have been created by the iris1 team for use with the iris project.

Modified: trunk/INSTALL
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/INSTALL (original)
+++ trunk/INSTALL Wed Oct  3 01:36:46 2007
@@ -1,11 +1,30 @@
-:: compile ::
+=3D=3D linux binary =3D=3D
+many thanks to aliverius for providing a linux binary for iris !
+
+install libxcb	(e.g. apt-get install libxcb1-dev)
+install glitz	(e.g. apt-get install libglitz1-dev)
+
+./startbinary.sh 		in main directory =

+
+if you get an error like this:
+	../iris: error while loading shared libraries: libxcb-xlib.so.0: cannot o=
pen shared object file: No such file or directory
+try locating libxcb and making a symlink, e.g.
+	ln -s /usr/lib/libxcb.so /usr/lib/libxcb-xlib.so.0
+
+and try  ./startbinary.sh  again
+
+if it still doesn't work, you probably have to compile yourself
+(e.g. your processor might not work with the binary, or it might be linked=
 against a different glibc version....)
+
+=3D=3D compile from source =3D=3D
+
 scons configure && scons
 (you need scons to compile, e.g. apt-get install scons)
 =

-:: run ::
-	run start.sh in main directory =

-or
-	./sfz =

+to start the compiled executable run
+./start.sh 				in main directory =

+	=

+	=

 	=

 =

 (remove ogre.cfg if you have problems so you can change the gfx setup)
@@ -15,7 +34,7 @@
 =

 to compile under win you need the servicepack 1 for visual studio
 =

-you need a legal copy of Ultima Online to use iris, see README for availab=
le trial versions
+you need a legal copy of Ultima Online to use iris, see README and http://=
iris2.de for links to available trial versions
 =

 for 64 Bit compile, edit include/profile.h and remove line 9: =

 	#define ENABLE_PROFILING =

@@ -23,16 +42,14 @@
 =

 =3D=3D=3D dependencies =3D=3D=3D
 =

-* ogre 1.4.0 (eihort) http://www.ogre3d.org
+* ogre 1.4.* (eihort) http://www.ogre3d.org
 * lua 5.0 http://www.lua.org  (apt-get install liblua50 liblualib50 lua50 =
liblua50-dev liblualib50-dev)
 * OIS  http://sourceforge.net/projects/wgois
 * freeimage  http://freeimage.sourceforge.net/download.html
 * boost http://sourceforge.net/project/showfiles.php?group_id=3D7586
-* SDL-1.2.11 http://www.libsdl.org/download-1.2.php
-* SDL_image-1.2.5 http://www.libsdl.org/projects/SDL_image/ (todo : will b=
e obsolete soon)
-* fmod ex 4.* http://www.fmod.de/fmoddownload.html
 * libogg libvorbis http://xiph.org/downloads/  (libvorbisfile ?)
-* OpenAL and freealut http://openal.org/downloads.html  (obsolete?)
+* fmod ex 4.* http://www.fmod.de/fmoddownload.html			(optional, either fmo=
d or openal, openal does not support uo music)
+* OpenAL and freealut http://openal.org/downloads.html		(optional, either =
fmod or openal, openal does not support uo music)
 =

 =3D=3D=3D installing fmod =3D=3D=3D
 =


Modified: trunk/README
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/README (original)
+++ trunk/README Wed Oct  3 01:36:46 2007
@@ -19,6 +19,10 @@
 4. Install Visual Studio 8 Sp1 redistributional (done during Setup)
 =

 5. Run the Iris2 updater.exe
+
+=3D=3D Iris on Linux =3D=3D
+
+for linux install see the file named INSTALL =

 =

 =3D=3D How to get Ultima Online data =3D=3D
 =

@@ -114,6 +118,7 @@
 the 2DRenderer is only available as compiled .luac file, =

 it is a optional closed source plugin that is not statically linked, =

 if you don't want it, you can delete the .luac file.
+(note : it will probably be opensourced soon)
 =

 there is currently no license for the models and textures in the data dir,
 they have been created by the iris1 team for use with the iris project.
@@ -139,8 +144,8 @@
 =3D=3D=3D other projects of the iris-ogre-developers =3D=3D=3D
 http://schattenkind.net/		- Our mainsite (a Game developer association)
 http://www.iris2.de/			- Iris Website
-http://sfz.schattenkind.net/	- Stressfree Zone (space game)
-http://lugre.schattenkind.net	- Lugre	(middelware for Ogre3D, Lua, Fmod, O=
penAL, ODE, Boost)
+http://sfz.sourceforge.net/		- Stressfree Zone (space game)
+http://lugre.sourceforge.net	- Lugre	(middelware for Ogre3D, Lua, Fmod, Op=
enAL, ODE, Boost)
 =

 =3D=3D=3D license =3D=3D=3D
 see COPYING for license of our code



From no-reply at zwischenwelt.org  Wed Oct  3 20:32:50 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Oct 2007 18:32:50 -0000
Subject: [Iris-commit] [IRIS] r1437 - in /trunk/data/lua: lib.3d.dynamic.lua
 lib.3d.mobile.lua lib.3d.renderer.lua main.lua
Message-ID: <20071003183250.47BC71C18170@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct  3 20:32:49 2007
New Revision: 1437

Log:
reorganised mobilecode a bit in preparation for capsuling granny-gfx better

Added:
    trunk/data/lua/lib.3d.dynamic.lua
    trunk/data/lua/lib.3d.mobile.lua
Modified:
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Wed Oct  3 20:32:49 2007
@@ -1,3 +1,7 @@
+-- 3d rendering
+-- see also lib.3d.mobile.lua
+-- see also lib.3d.dynamic.lua
+
 Renderer3D =3D {}
 gRendererList[ "Renderer3d" ] =3D Renderer3D
 =

@@ -102,6 +106,21 @@
 	Client_SetFog()
 	Client_SetSkybox()
 	self.gbActive =3D false
+end
+
+
+function Renderer3D:CheckForUpdateMapOrigin()
+	if (self.giLastMapOriginX ~=3D self.giMapOriginX or
+		self.giLastMapOriginY ~=3D self.giMapOriginY) then
+		-- change detected, update all
+		self.giLastMapOriginX =3D self.giMapOriginX
+		self.giLastMapOriginY =3D self.giMapOriginY
+		=

+		for k,mobile in pairs(GetMobileList()) do mobile:Update() end
+		for k,dynamic in pairs(GetDynamicList()) do if (dynamic.gfx) then
+			self:UpdateDynamicItemPos(dynamic)
+		end end
+	end
 end
 =

 --###############################
@@ -194,6 +213,7 @@
 		effect.gfx =3D nil
 	end
 end
+
 =

 -- TODO : check particle before
 function Renderer3D:AddParticleEffect( effect, particlename, relx, rely, r=
elz, scalex, scaley, scalez)
@@ -294,589 +314,6 @@
 	end
 end
 =

---###############################
---###         MOBILES         ###
---###############################
-
-
-function Renderer3D:AddMobile () end
-
-
-function Renderer3D:UpdateMobile( mobile )
-	if (not self.gbActive) then return end
-	=

-	if (IsPlayerMobile(mobile)) then
-		-- set audio listener position if this is the playerbody
-		SoundSetListenerPosition(mobile.xloc,mobile.yloc,mobile.zloc * 0.1 + sel=
f.gZ_Factor)
-	end
-
-	if (not mobile.gfx) then
-		-- create fresh gfx
-		mobile.gfx =3D CreateRootGfx3D()
-		--draw bounding box for mobiles
-		mobile.gfx:SetWireBoundingBoxMinMax(-0.8,0.2,0.2,-0.2,0.8,0.8)  -- used =
as fallback for mousepicking invisible models
-		mobile.gfx:SetVisible(false or gDebugBBoxMobiles)
-		mobile.headpos =3D mobile.gfx:CreateChild()
-		--mobile.headpos:SetWireBoundingBoxMinMax(0,0,0,1,1,1)
-		--mobile.headpos:SetVisible(true)
-		mobile.headpos:SetPosition(-0.5,0.5,2.3)
-	end
-	=

-
-	-- mobile health bar
-	if (not mobile.bar) then
-		mobile.bar =3D CreateRootGfx3D()
-		mobile.bar:SetSimpleRenderable()
-		mobile.bar:SetMaterial("bar")
-		mobile.bar:SetForceRotCam(GetMainCam())
-		mobile.bar.lastn =3D nil
-	end
-
-	-- update mobile bar color
-	if (mobile and mobile.stats and mobile.stats.curHits and =

-		mobile.bar.lastn ~=3D mobile.stats.curHits) then
-
-		-- store current as last value
-		mobile.bar.lastn =3D mobile.stats.curHits
-		=

-		local p =3D mobile.stats.curHits / mobile.stats.maxHits
-		-- print("#### health",p)
-		=

-		-- bar color
-		local r,g,b =3D 0,1,0
-		-- bar size
-		local w =3D 0.8
-		local h =3D 0.05
-		-- alpha
-		local a =3D 0.5
-		=

-		local w2 =3D w/2
-		local h2 =3D h/2
-		=

-		mobile.bar:RenderableBegin(8,3*6,false,false,OT_TRIANGLE_LIST)
-		=

-		-- 0123
-		mobile.bar:RenderableVertex(-w2,		h2,0, 0,0, r,g,b,a)
-		mobile.bar:RenderableVertex(-w2+w*p,	h2,0, 2/5,0, r,g,b,a)
-		mobile.bar:RenderableVertex(-w2+w*p,	h2,0, 3/5,0, r,g,b,a)
-		mobile.bar:RenderableVertex(w2,			h2,0, 1,0, r,g,b,a)
-
-		-- 4567
-		mobile.bar:RenderableVertex(-w2,		-h2,0, 0,1, r,g,b,a)
-		mobile.bar:RenderableVertex(-w2+w*p,	-h2,0, 2/5,1, r,g,b,a)
-		mobile.bar:RenderableVertex(-w2+w*p,	-h2,0, 3/5,1, r,g,b,a)
-		mobile.bar:RenderableVertex(w2,			-h2,0, 1,1, r,g,b,a)
-		=

-		mobile.bar:RenderableIndex3(0,4,5)
-		mobile.bar:RenderableIndex3(5,1,0)
-		=

-		mobile.bar:RenderableIndex3(1,5,6)
-		mobile.bar:RenderableIndex3(6,2,1)
-
-		mobile.bar:RenderableIndex3(2,6,7)
-		mobile.bar:RenderableIndex3(7,3,2)
-		=

-		mobile.bar:RenderableEnd()
-	end
-	=

-
-
-
-	-- aura around the feet
-	if (not mobile.aura) then
-		mobile.aura =3D CreateRootGfx3D()
-		mobile.aura:SetSimpleRenderable()
-		mobile.aura:SetMaterial("aura_base")
-		mobile.aura.lastn =3D nil
-	end
-	=

-	-- update mobile aura color
-	if (mobile.aura.lastn ~=3D mobile.notoriety) then
-		mobile.aura.lastn =3D mobile.notoriety
-		local nx,ny,nz =3D 0,0,1
-		local r,g,b =3D GetNotorietyColor(mobile.notoriety)
-		local a =3D 0.3
-		local e =3D 0.5
-		mobile.aura:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
-		mobile.aura:RenderableVertex(-e,-e,0, nx,ny,nz, 0,0, r,g,b,a)
-		mobile.aura:RenderableVertex( e,-e,0, nx,ny,nz, 1,0, r,g,b,a)
-		mobile.aura:RenderableVertex(-e, e,0, nx,ny,nz, 0,1, r,g,b,a)
-		mobile.aura:RenderableVertex( e, e,0, nx,ny,nz, 1,1, r,g,b,a)
-		mobile.aura:RenderableIndex3(0,1,2)
-		mobile.aura:RenderableIndex3(1,3,2)
-		mobile.aura:RenderableEnd()
-	end
-
-	=

-	-- target selection code, based on aura
-	-- TODO is it better to create is on select and destroy on deselect?
-	if (not mobile.selection) then
-		-- default value
-		mobile.isselected =3D false
-		=

-		-- graphic stuff
-		local nx,ny,nz =3D 0, 0, 1
-		local r,g,b =3D 0.0, 1.0, 0.0
-		local a =3D 0.3
-		local e =3D 1.0
-		mobile.selection =3D CreateRootGfx3D()
-		mobile.selection:SetSimpleRenderable()
-		mobile.selection:SetMaterial("aura_base")
-
-		mobile.selection:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
-		mobile.selection:RenderableVertex(-e,-e,0, nx,ny,nz, 0,0, r,g,b,a)
-		mobile.selection:RenderableVertex( e,-e,0, nx,ny,nz, 1,0, r,g,b,a)
-		mobile.selection:RenderableVertex(-e, e,0, nx,ny,nz, 0,1, r,g,b,a)
-		mobile.selection:RenderableVertex( e, e,0, nx,ny,nz, 1,1, r,g,b,a)
-		mobile.selection:RenderableIndex3(0,1,2)
-		mobile.selection:RenderableIndex3(1,3,2)
-		mobile.selection:RenderableEnd()
-	end
-	=

-	-- set visible if selected
-	mobile.selection:SetVisible(mobile.isselected)
-
-
-	=

-	if (mobile.name) then
-		if (not gHideHUDNames) then =

-			if (not mobile.hudname) then =

-				-- hudtext
-				local text =3D mobile.name
-				local w,h =3D 0,12
-				local x,y =3D 0,0
-				local r,g,b =3D GetNotorietyColor(mobile.notoriety)
-				local col_text =3D {r,g,b,1}
-				--local tw,th =3D gFPSField.text.gfx:GetTextBounds()	=

-				=

-				=

-				if (not gHudNamesDialogLayer) then
-					local col_back =3D {0,0,0,0}
-					gHudNamesDialogLayer =3D guimaker.MyCreateDialog()
-					gHudNamesDialogLayer.panel =3D guimaker.MakeBorderPanel(gHudNamesDial=
ogLayer,0,0,0,0,col_back)
-					gHudNamesDialogLayer:SendToBack()
-				end
-				=

-				mobile.hudname =3D guimaker.MakeText(gHudNamesDialogLayer.panel,0,0,te=
xt,gHudNamesFontSize,col_text)
-				mobile.hudname.gfx:SetTrackPosSceneNode(mobile.headpos)
-				--mobile.hudname.gfx:SetTrackPosSceneNode(mobile.gfx)
-				mobile.hudname.gfx.mbTrackHideIfClamped =3D true
-				mobile.hudname.gfx.mbTrackHideIfBehindCam =3D true
-				mobile.hudname.gfx:SetTextAlignment(kGfx2DAlign_Center)
-				mobile.hudname.lastn =3D mobile.notoriety
-				mobile.hudname.lastname =3D mobile.name
-			end =

-			if (mobile.hudname.lastn ~=3D mobile.notoriety or mobile.hudname.lastna=
me ~=3D mobile.name) then
-				mobile.hudname.lastn =3D mobile.notoriety
-				mobile.hudname.lastname =3D mobile.name
-				local r,g,b =3D GetNotorietyColor(mobile.notoriety)
-				local a =3D 0.5
-				mobile.hudname.gfx:SetColour(r,g,b,a)
-				mobile.hudname.gfx:SetText(mobile.name)
-			end
-		end
-		=

-		if (false) then
-			if (not mobile.nametext) then
-				mobile.nametext =3D CreateRootGfx3D()
-				mobile.nametext:SetTextFont("TrebuchetMSBold")
-				mobile.nametext:SetForceRotCam(GetMainCam())
-				--local playermobile =3D GetPlayerMobile()
-				--if (playermobile and playermobile.gfx) then mobile.nametext:SetForce=
Lookat(playermobile.gfx) end
-				mobile.nametext.lastn =3D nil
-				mobile.nametext.lastname =3D nil
-			end
-			mobile.name =3D mobile.stats and mobile.stats.name
-			if (mobile.nametext.lastn ~=3D mobile.notoriety or mobile.nametext.last=
name ~=3D mobile.name) then
-				mobile.nametext.lastn =3D mobile.notoriety
-				mobile.nametext.lastname =3D mobile.name
-				local r,g,b =3D GetNotorietyColor(mobile.notoriety)
-				local fontsize3d =3D 0.3
-				local a =3D 0.5
-				mobile.nametext:SetText(mobile.name,fontsize3d,r,g,b,a)
-			end
-		end
-	end
-	=

-	self:UpdateMobileVisibility(mobile)
-	self:ClientSideMobileAnimUpdate(mobile)
-end
-
-function Renderer3D:UpdateMobilePos (mobile,x,y,z,qw,qx,qy,qz)
-	-- set position and orientation
-	if (mobile.modelgfx) then
-		local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
-		mobile.modelgfx:SetPosition(x-0.5, y+0.5, z + (mount and -kMountZAdd or =
0))
-		mobile.modelgfx:SetOrientation(qw,qx,qy,qz)
-	end
-	=

-	if (mobile.aura) 		then mobile.aura:SetPosition(		x-0.5,y+0.5,z + 0.2) end
-	if (mobile.selection) 	then mobile.selection:SetPosition(	x-0.5,y+0.5,z +=
 0.2) end
-	if (mobile.bar) 		then mobile.bar:SetPosition(		x-0.5,y+0.5,z + 2.0) end
-	if (mobile.nametext) 	then mobile.nametext:SetPosition(	x-0.5,y+0.5,z + 2=
.0) end
-	=

-	mobile.gfx:SetPosition(x,y,z)
-end
-
--- a every frame stepper for mobiles
-function Renderer3D:StepMobile (mobile, iTimeSinceLastStepInSeconds)
-	-- animation stuff
-	self:ClientSideMobileAnimStep(mobile,iTimeSinceLastStepInSeconds)
-	StepMobileModelAnim(mobile,iTimeSinceLastStepInSeconds)
-
-	-- chat text over player head
-	if mobile.mlastChatText and mobile.mlastChatTime and mobile.mlastChatColo=
r then
-		-- chat text graphic present?
-		local r,g,b =3D	mobile.mlastChatColor.r,
-						mobile.mlastChatColor.g,
-						mobile.mlastChatColor.b
-		local a =3D 1
-		=

-		if not mobile.chattext then
-			-- chat text
-			local x,y =3D 0,0
-			local col_text =3D {r,g,b,1}
-			--local tw,th =3D gFPSField.text.gfx:GetTextBounds()	=

-			=

-			if (not gHudHeadChatDialogLayer) then
-				local col_back =3D {0,0,0,0}
-				gHudHeadChatDialogLayer =3D guimaker.MyCreateDialog()
-				gHudHeadChatDialogLayer.panel =3D guimaker.MakeBorderPanel(gHudHeadCha=
tDialogLayer,0,0,0,0,col_back)
-				gHudHeadChatDialogLayer:SendToBack()
-			end
-			=

-			-- text parent node for position tracing
-			mobile.chattext_parent =3D guimaker.MakeSOC (gHudHeadChatDialogLayer.pa=
nel)
-			mobile.chattext_parent.gfx:SetTrackPosSceneNode(mobile.headpos)
-			mobile.chattext_parent.gfx.mbTrackHideIfClamped =3D true
-			mobile.chattext_parent.gfx.mbTrackHideIfBehindCam =3D true
-			-- and text child for relative position
-			mobile.chattext =3D guimaker.MakeText(mobile.chattext_parent,0,-20,"",g=
HudNamesFontSize,col_text)
-			mobile.chattext.gfx:SetTextAlignment(kGfx2DAlign_Center)
-		end
-		=

-		-- letter based timeout
-		local timeout =3D gHeadTextTimeout
-		if mobile.mlastChatText then
-			timeout =3D timeout + gHeadTextTimeoutPerLetter * string.len(mobile.mla=
stChatText)
-		end
-		=

-		-- need to display a new text?
-		if mobile.mlastChatText ~=3D mobile.chattext.mLastText then
-			-- if the current and the new text is small enough, combine them
-			if mobile.chattext.mLastText and mobile.mlastChatText and =

-				string.len(mobile.chattext.mLastText) + string.len(mobile.mlastChatTex=
t) < gHeadTextCombine then
-				=

-				mobile.mlastChatText =3D mobile.chattext.mLastText .. "\n" .. mobile.m=
lastChatText
-			end
-			-- display the text
-			mobile.chattext.mLastText =3D mobile.mlastChatText
-			mobile.chattext.gfx:SetColour(r,g,b,a)
-			mobile.chattext.gfx:SetFont(gUniFontLoaderType and gUniFontName[gChatTe=
xt_UniFontNumber] or "TrebuchetMSBold")
-			mobile.chattext.gfx:SetCharHeight(gUniFontHeight[gChatText_UniFontNumbe=
r])
-			mobile.chattext.gfx:SetText(mobile.mlastChatText)
-			local w,h =3D mobile.chattext.gfx:GetTextBounds()
-			mobile.chattext.gfx:SetPos(0, 0 - h)
-			mobile.chattext.gfx:SetAutoWrap(300)
-			mobile.chattext.gfx:SetVisible(true)
-		elseif mobile.mlastChatTime + timeout < gMyTicks and =

-			(mobile.mlastChatAlpha =3D=3D nil or gMyTicks - mobile.mlastChatAlpha >=
 1000) then
-			=

-			-- fade out the text (but only 1 check per second)
-			a =3D 1 - ((gMyTicks - mobile.mlastChatTime - timeout) / gHeadTextFadeo=
ut)
-			mobile.chattext.gfx:SetColour(r,g,b,a)
-			mobile.mlastChatAlpha =3D gMyTicks
-		elseif mobile.mlastChatTime + timeout + gHeadTextFadeout < gMyTicks then
-			-- hide the text
-			mobile.chattext.gfx:SetVisible(false)
-			mobile.chattext.gfx:SetColour(r,g,b,0)
-			-- remove textline
-			mobile.mlastChatTime =3D nil
-			mobile.mlastChatText =3D nil
-			mobile.mlastChatColor =3D nil
-			mobile.mlastChatAlpha =3D nil
-			mobile.mlastChatText =3D nil
-			-- also reset local last text that the old text does not combine with t=
he new one
-			mobile.chattext.mLastText =3D nil
-		end
-
-	end	=

-end
-
-function Renderer3D:MobileAnimStep ()
-	if (not self.gbActive) then return end
-	if (not gAnimInfoLists) then return end
-	local iTimeSinceLastStepInSeconds =3D self.giLastAnimStepTime and ((gMyTi=
cks - self.giLastAnimStepTime) / 1000) or 0
-	self.giLastAnimStepTime =3D gMyTicks
-	=

-	for k,mobile in pairs(GetMobileList()) do Renderer3D:StepMobile(mobile,iT=
imeSinceLastStepInSeconds) end
-end
-
--- obsolete but might be interesting
-function Renderer3D:MobileSetVisible (mobile,bVisible)
-	--if (not bVisible) then self:RemoveMobile(mobile) return end
-	local arr =3D { mobile.hudname , mobile.hudname and mobile.hudname.gfx , =
mobile.aura , mobile.bar , mobile.nametext and mobile.nametext.gfx }
-	=

-	if (mobile.modelparts) then
-		for k,partgfx in pairs(mobile.modelparts) do table.insert(arr,partgfx) e=
nd
-	end
-	=

-	if (mobile.gfx) then mobile.gfx:SetVisible(bVisible and (false or gDebugB=
BoxMobiles)) end
-	if (mobile.selection) then mobile.selection:SetVisible(bVisible and mobil=
e.isselected) end
-	=

-	for k,partgfx in arr do =

-		if (partgfx and partgfx.SetVisible) then partgfx:SetVisible(bVisible) end
-	end
-	if (mobile.hudname and mobile.hudname.gfx) then =

-		mobile.hudname.gfx.mbTrackHideIfClamped =3D bVisible
-		mobile.hudname.gfx.mbTrackHideIfBehindCam =3D bVisible
-	end
-end
-
-function Renderer3D:DestroyMobileField( mobile, fieldname )
-	if (mobile[fieldname]) then =

-		mobile[fieldname]:Destroy() 	=

-		mobile[fieldname] =3D nil 	 =

-	end
-end
-
-function Renderer3D:RemoveMobile( mobile )
-	self:DestroyMobileGfx(mobile)
-end
-
-
-function Renderer3D:DestroyMobileGfx( mobile )
-	self:DestroyMobileField(mobile,"hudname")
-	self:DestroyMobileField(mobile,"chattext")
-	self:DestroyMobileField(mobile,"chattext_parent")
-	self:DestroyMobileField(mobile,"headpos")
-	self:DestroyMobileField(mobile,"gfx")
-	self:DestroyMobileField(mobile,"aura")
-	self:DestroyMobileField(mobile,"bar")
-	self:DestroyMobileField(mobile,"selection")
-	self:DestroyMobileField(mobile,"nametext")
-	DestroyMobileModel(mobile)
-end
-
-function Renderer3D:CreateMobileGfx( mobile ) self:UpdateMobile(mobile) en=
d	=

-
-function Renderer3D:CheckForUpdateMapOrigin()
-	if (self.giLastMapOriginX ~=3D self.giMapOriginX or
-		self.giLastMapOriginY ~=3D self.giMapOriginY) then
-		-- change detected, update all
-		self.giLastMapOriginX =3D self.giMapOriginX
-		self.giLastMapOriginY =3D self.giMapOriginY
-		=

-		for k,mobile in pairs(GetMobileList()) do mobile:Update() end
-		for k,dynamic in pairs(GetDynamicList()) do if (dynamic.gfx) then
-			self:UpdateDynamicItemPos(dynamic)
-		end end
-	end
-end
-
---###############################
---###      DYNAMIC ITEMS      ###
---###############################
-
---[[
-function Renderer3D:DynamicSetVisible (dynamic,bVisible)
-	if (dynamic.gfx) then dynamic.gfx:SetVisible(bVisible) end
-end
-]]--
-
-function Renderer3D:UpdateDynamicItemPos ( dynamic )
-	if (dynamic.gfx) then
-		dynamic.gfx:SetPosition(self:UOPosToLocal(dynamic.xloc + dynamic.xadd,dy=
namic.yloc + dynamic.yadd,dynamic.zloc * 0.1 + dynamic.zadd))
-	end
-end
-
-function Renderer3D:AddDynamicItem( item )
-	self:CreateDynamicGfx(item)
-end
-
-function Renderer3D:CreateDynamicGfx( item )
-
-	assert(not item.gfx)
-
-	-- FILTER: get correction
-	item.xadd =3D FilterPositionX(item.artid) or 0
-	item.yadd =3D FilterPositionY(item.artid) or 0
-	item.zadd =3D FilterPositionZ(item.artid) or 0
-
-	-- Detect Multis
-	if item.artid >=3D gMulti_ID then
-		-- Check if Serverside Multi (Custom Multi)
-		printdebug("multi","-----------------------------")
-		printdebug("multi", sprintf("ARTID",item.artid,vardump(item)) )
-
-		if (item.lTile) then
-			printdebug("multi","Serverside Multi detected")
-			local rootgfx =3D CreateRootGfx3D()
-			item.lMultiChildGfx =3D {}
-			for k,v in pairs(item.lTile) do
-				-- create model part
-				local child =3D rootgfx:CreateChild()
-				local meshname =3D GetStaticMeshName(v.artid)
-				if meshname then =

-					child:SetMesh(meshname)
-					child:SetRenderingDistance(gCurrentRenderer.gDynamicMaxRenderDist)
-					child:SetPosition(-v.x,v.y,v.z*0.1)
-					child:SetScale(-1,1,1)		-- (-1) thats because xmirror bug and wrong m=
irrored mashes
-					child:SetNormaliseNormals(true)
-					child.xloc =3D -v.x
-					child.yloc =3D v.y
-					child.zloc =3D v.z
-					child.artid =3D v.artid
-					table.insert(item.lMultiChildGfx, child)
-				end
-			end
-			item.gfx =3D rootgfx
-
-			-- FILTER: correction : TODO needed??
-			for k,v in pairs(item.lMultiChildGfx) do item.gfx:SetOrientation(GetSta=
ticMeshOrientation(v.artid)) end
-
-			self:UpdateDynamicItemPos(item)
-		-- otherwise ist a Clientside Multi
-		elseif gMultiLoader then
-			printdebug("multi","Clientside Multi detected")
-			local rootgfx =3D CreateRootGfx3D()
-			local id =3D item.artid - gMulti_ID
-			=

-			item.lMultiChildGfx =3D {}
-			=

-			-- read out parts and connect them into one scene node
-			local parts =3D gMultiLoader:CountMultiParts(id)
-			printdebug("multi","Renderer3D:CreateDynamicGfx: multi id",id,"parts",p=
arts)
-			for p =3D 0, parts-1 do
-				local blocknum,xloc,yloc,zloc,flags
-				blocknum,xloc,yloc,zloc,flags =3D gMultiLoader:GetMultiParts(id,p)
-				=

-				printdebug("multi","part",p,":",blocknum,xloc,yloc,zloc,flags)
-				=

-				-- skip invisible parts
-				if flags =3D=3D 1 then
-					-- create model part
-					local child =3D rootgfx:CreateChild()
-					local meshname =3D GetStaticMeshName(blocknum,item.hue)
-					if meshname then =

-						child:SetMesh(meshname)
-						child:SetRenderingDistance(self.gDynamicMaxRenderDist)
-						local x,y,z =3D Renderer3D:UOPosToLocal(xloc,yloc,zloc * 0.1)
-						child:SetPosition(x,y,z)
-						child:SetScale(-1,1,1)			-- (-1) thats because xmirror bug and wrong=
 mirrored mashes
-						child:SetNormaliseNormals(true)
-						child.xloc =3D xloc
-						child.yloc =3D yloc
-						child.zloc =3D zloc
-						child.artid =3D blocknum
-						table.insert(item.lMultiChildGfx, child)
-					else
-						printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed lo=
ading sub mesh for dynamic (multi): artid=3D%i\n",blocknum or -1))
-					end
-				end
-			end
-			--item.mbIsMulti =3D true
-			item.gfx =3D rootgfx
-
-			-- FILTER: correction : TODO needed??
-			for k,v in pairs(item.lMultiChildGfx) do item.gfx:SetOrientation(GetSta=
ticMeshOrientation(v.artid)) end
-
-			self:UpdateDynamicItemPos(item)
-		else =

-			printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed loadi=
ng mesh for dynamic (multi): artid=3D%i z_typename=3D%s\n",item.artid or -1=
,item.z_typename or ""))
-		end
-	else
-		-- normal 1 part object
-		item.gfx =3D CreateRootGfx3D()
-		meshname =3D (not gForceFallBackBillboards_Dynamics) and GetStaticMeshNa=
me(item.artid + 0*16384,item.hue)
-		if (meshname and meshname ~=3D "") then
-			item.gfx:SetMesh(meshname)
-			item.gfx:SetScale(-1,1,1)		-- (-1) thats because xmirror bug and wrong =
mirrored mashes
-			item.gfx:SetNormaliseNormals(true)
-
-			--kTileDataFlag_LightSource
-			if (gLightsources) then
-			local arrtiletype =3D {}
-			arrtiletype =3D GetStaticTileType(item.artid)
-			if( TestBit(arrtiletype.miFlags or 0,kTileDataFlag_LightSource) ) then
-				local x,y,z =3D Renderer3D:UOPosToLocal(item.xloc,item.yloc,(item.zloc=
+arrtiletype.miHeight) * 0.1)
-				Client_AddPointLight(x,y,z, 0.3,0.3,0.0, 0.3,0.3,0.0, 5.0,0.1,0.1,0.0)
-			end
-			end
-
-			-- --------------------------------------------------------------------=
-----
-			-- todo: HACK here (zadd because dynamic street-tiles dont look good (f=
lying).)
-			if (CountMeshTriangles(meshname) <=3D 4) then =

-				item.gfx:SetCastShadows(false)	-- groundtiles and item billboards shou=
ldn't cast shadows
-				if (gTileTypeLoader) then
-					if not(isSurface( GetStaticTileTypeFlags(item.artid) or 0 )) then
-						item.zadd =3D self.gDynamicZAdd
-					end
-				end
-			end
-			-- --------------------------------------------------------------------=
-----
-
-		elseif (gEnableFallBackBillboards_Dynamics) then
-			local iTranslatedTileTypeID =3D TranslateTileTypeID(item.artid + 16384,=
 gSeasonSetting)
-
-			--print("######DYNAMIC MESH NOT FOUND : ",item.artid,iTranslatedTileTyp=
eID)
-			--print("######",vardump(GetStaticTileType(item.artid)))
-			-- fallback to billboard with original art or =

-			if (not IsArtBillboardFallBackSkipped(item.artid)) then
-				item.gfx.billboard =3D item.gfx:CreateChild()
-				item.xadd =3D item.xadd + 0.5
-				item.yadd =3D item.yadd + 0.5
-				item.zadd =3D item.zadd + 0.5
-				self:CreateArtBillBoard(item.gfx.billboard,iTranslatedTileTypeID,item.=
hue)
-				printdebug("missing",sprintf("Renderer3D:CreateDynamicGfx: failed load=
ing mesh for dynamic: artid=3D%i z_typename=3D%s\n",item.artid or -1,item.z=
_typename or ""))
-			end
-		end
-		item.gfx:SetRenderingDistance(self.gDynamicMaxRenderDist)
-
-		-- FILTER: correction
-		item.gfx:SetOrientation(GetStaticMeshOrientation(item.artid))
-
-		self:UpdateDynamicItemPos(item)
-	end
-	self:UpdateDynamicVisibility(item)
-end
-
-function Renderer3D:CreateArtBillBoard( gfx,iTranslatedTileTypeID, iHue )
-	local matname =3D GetArtBillBoardMat(iTranslatedTileTypeID,iHue)
-	local isotilew =3D 44 / math.sqrt(2)
-	local w,h =3D GetArtSize(iTranslatedTileTypeID)
-	if (not w or w =3D=3D 0) then w =3D isotilew end
-	if (not h or h =3D=3D 0) then h =3D isotilew end
-	gfx:SetSimpleRenderable()
-	gfx:SetMaterial(matname)
-	--gfx:SetMaterial("checker")
-	gfx:SetForceRotCam(GetMainCam())
-	gfx:RenderableBegin(4,6,false,false,OT_TRIANGLE_LIST)
-	gfx:RenderableVertex( 0.5*w / isotilew,-0.5					,0, 1*w/texsize(w),h/texs=
ize(h))
-	gfx:RenderableVertex(-0.5*w / isotilew,-0.5					,0, 0*w/texsize(w),h/texs=
ize(h))
-	gfx:RenderableVertex( 0.5*w / isotilew,-0.5 + h / isotilew	,0, 1*w/texsiz=
e(w),0)
-	gfx:RenderableVertex(-0.5*w / isotilew,-0.5 + h / isotilew	,0, 0*w/texsiz=
e(w),0)
-	gfx:RenderableIndex3(0,1,2)
-	gfx:RenderableIndex3(1,3,2)
-	gfx:RenderableEnd()
-end
-
-function Renderer3D:RemoveDynamicItem( item )
-	self:DestroyDynamicGfx(item)
-end
-
--- handle child destroy of Multis
-function Renderer3D:DestroyDynamicGfx (dynamic)
-	-- print("DEBUG","destroy",vardump(dynamic))
-	if (dynamic.gfx) then
-		if (dynamic.lMultiChildGfx) then
-			for k,child in pairs(dynamic.lMultiChildGfx) do child:Destroy() end
-			dynamic.lMultiChildGfx=3Dnil
-		end
-		dynamic.gfx:Destroy()
-		dynamic.gfx =3D nil
-	end
-end
 =

 --###############################
 --###       QUEST ARROW       ###
@@ -914,30 +351,3 @@
 		end
 	end
 end
-
--- removes the current mobile selection
-function Renderer3D:DeselectMobile ()
-	if (giSelectedMobile ~=3D 0) then
-		local mobile =3D GetMobile(giSelectedMobile)
-		if (mobile) then
-			mobile.isselected =3D false
-			mobile.selection:SetVisible(false)
-		end
-	end
-	giSelectedMobile =3D 0
-end
-
--- select the given mobile
-function Renderer3D:SelectMobile (iSerial)
-	printdebug("mobile",sprintf("selectmobile",iSerial))
-	self:DeselectMobile()
-	if (iSerial ~=3D 0) then
-		local mobile =3D GetMobile(iSerial)
-		if (mobile) then
-			mobile.isselected =3D true
-			-- TODO is it possible that selection is not created (mobile:Update() c=
reates selection)
-			mobile.selection:SetVisible(true)
-			giSelectedMobile =3D iSerial
-		end
-	end
-end

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Wed Oct  3 20:32:49 2007
@@ -36,6 +36,8 @@
 -- renderer second
 gRendererList =3D {}
 dofile(libpath .. "lib.3d.renderer.lua")
+dofile(libpath .. "lib.3d.mobile.lua")
+dofile(libpath .. "lib.3d.dynamic.lua")
 dofile(libpath .. "lib.3d.mousepick.lua")
 dofile(libpath .. "lib.3d.map.lua")
 dofile(libpath .. "lib.3d.combat.lua")



From no-reply at zwischenwelt.org  Thu Oct  4 00:17:32 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Oct 2007 22:17:32 -0000
Subject: [Iris-commit] [IRIS] r1438 - in /trunk/data/lua: lib.3d.mobile.lua
 lib.3d.mobileanim.lua lib.3d.renderer.lua lib.modelanim.lua lib.models.lua
 lib.tilefreewalk.lua net.popup.lua obj/obj.mobile.lua
Message-ID: <20071003221732.AD7F01C18170@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct  4 00:17:31 2007
New Revision: 1438

Log:
started cleaning mobile-model code

Modified:
    trunk/data/lua/lib.3d.mobile.lua
    trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.modelanim.lua
    trunk/data/lua/lib.models.lua
    trunk/data/lua/lib.tilefreewalk.lua
    trunk/data/lua/net.popup.lua
    trunk/data/lua/obj/obj.mobile.lua

Modified: trunk/data/lua/lib.3d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobile.lua (original)
+++ trunk/data/lua/lib.3d.mobile.lua Thu Oct  4 00:17:31 2007
@@ -21,6 +21,16 @@
 		mobile.headpos:SetPosition(-0.5,0.5,2.3)
 	end
 	=

+	if (not mobile.grannygfx) then
+		mobile.grannygfx =3D {} -- todo : replace this with something external
+		mobile.grannygfx.SetVisible =3D function (self,bVisible) -- self =3D mob=
ile.grannygfx -- TODO : dirty hack, replace me
+			if (mobile.modelparts) then =

+				for k,partgfx in pairs(mobile.modelparts) do =

+					if (partgfx and partgfx.SetVisible) then partgfx:SetVisible(bVisible)=
 end
+				end =

+			end =

+		end
+	end
 =

 	-- mobile health bar
 	if (not mobile.bar) then
@@ -217,11 +227,12 @@
 	mobile.gfx:SetPosition(x,y,z)
 end
 =

+-- called every frame from mainloop : MobileAnimStep
 -- a every frame stepper for mobiles
-function Renderer3D:StepMobile (mobile, iTimeSinceLastStepInSeconds)
+function Renderer3D:StepMobile (mobile)
 	-- animation stuff
-	self:ClientSideMobileAnimStep(mobile,iTimeSinceLastStepInSeconds)
-	StepMobileModelAnim(mobile,iTimeSinceLastStepInSeconds)
+	self:ClientSideMobileAnimStep(mobile)
+	StepMobileModelAnim(mobile)
 =

 	-- chat text over player head
 	if mobile.mlastChatText and mobile.mlastChatTime and mobile.mlastChatColo=
r then
@@ -302,26 +313,23 @@
 	end	=

 end
 =

+-- called every frame from mainloop
 function Renderer3D:MobileAnimStep ()
 	if (not self.gbActive) then return end
 	if (not gAnimInfoLists) then return end
-	local iTimeSinceLastStepInSeconds =3D self.giLastAnimStepTime and ((gMyTi=
cks - self.giLastAnimStepTime) / 1000) or 0
-	self.giLastAnimStepTime =3D gMyTicks
-	=

-	for k,mobile in pairs(GetMobileList()) do Renderer3D:StepMobile(mobile,iT=
imeSinceLastStepInSeconds) end
-end
-
--- obsolete but might be interesting
+	for k,mobile in pairs(GetMobileList()) do Renderer3D:StepMobile(mobile) e=
nd
+end
+
 function Renderer3D:MobileSetVisible (mobile,bVisible)
-	--if (not bVisible) then self:RemoveMobile(mobile) return end
-	local arr =3D { mobile.hudname , mobile.hudname and mobile.hudname.gfx , =
mobile.aura , mobile.bar , mobile.nametext and mobile.nametext.gfx }
-	=

-	if (mobile.modelparts) then
-		for k,partgfx in pairs(mobile.modelparts) do table.insert(arr,partgfx) e=
nd
-	end
-	=

-	if (mobile.gfx) then mobile.gfx:SetVisible(bVisible and (false or gDebugB=
BoxMobiles)) end
-	if (mobile.selection) then mobile.selection:SetVisible(bVisible and mobil=
e.isselected) end
+	local arr =3D {	mobile.hudname , =

+					mobile.hudname and mobile.hudname.gfx ,
+					mobile.nametext and mobile.nametext.gfx , =

+					mobile.aura , =

+					mobile.bar }
+	=

+	if (mobile.grannygfx)	then mobile.grannygfx:SetVisible(bVisible) end
+	if (mobile.gfx)			then mobile.gfx:SetVisible(bVisible and (false or gDebu=
gBBoxMobiles)) end
+	if (mobile.selection)	then mobile.selection:SetVisible(bVisible and mobil=
e.isselected) end
 	=

 	for k,partgfx in arr do =

 		if (partgfx and partgfx.SetVisible) then partgfx:SetVisible(bVisible) end
@@ -337,10 +345,6 @@
 		mobile[fieldname]:Destroy() 	=

 		mobile[fieldname] =3D nil 	 =

 	end
-end
-
-function Renderer3D:RemoveMobile( mobile )
-	self:DestroyMobileGfx(mobile)
 end
 =

 =


Modified: trunk/data/lua/lib.3d.mobileanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobileanim.lua (original)
+++ trunk/data/lua/lib.3d.mobileanim.lua Thu Oct  4 00:17:31 2007
@@ -168,7 +168,7 @@
 	=

 end
 =

-function Renderer3D:ClientSideMobileAnimStep (mobile,iTimeSinceLastStepInS=
econds)
+function Renderer3D:ClientSideMobileAnimStep (mobile)
 	self:WalkSmoothStep(mobile)
 	=

 	-- interrupt serverside anim on movement, and init anim if not set
@@ -269,118 +269,3 @@
 	Renderer3D:UpdateMobilePos(mobile,x,y,z,qw,qx,qy,qz)
 end
 =

---[[
-todo : clientside? GetHit Die ?
-]]--
-
-
---[[
-Human.lst
-
-# core animation set - 0-34	=

-0	Walk_01
-1	WalkStaff_01
-2	Run_01
-3	RunStaff_01
-4	Idle_01
-5	Idle_01
-6	Fidget_Yawn_Stretch_01
-7	CombatIdle1H_01
-8	CombatIdle1H_01
-9	AttackSlash1H_01
-10	AttackPierce1H_01
-11	AttackBash1H_01
-12	AttackBash2H_01
-13	AttackSlash2H_01
-14	AttackPierce2H_01
-15	CombatAdvance_1H_01
-16	Spell1
-17	Spell2
-18	AttackBow_01
-19	AttackCrossbow_01
-20	GetHit_Fr_Hi_01
-21	Die_Hard_Fwd_01
-22	Die_Hard_Back_01
-30	Block_Shield_Hard_01
-31	Punch_Punch_Jab_01
-32	Bow_Lesser_01
-33	Salute_Armed1h_01
-34	Ingest_Eat_01
-
-# sitting animations - 35	=

-35	sit_idle_01
-
-# extra core anims - 36
-#36	Idle_Hold_01
-36	Items_Idle_01
-37	Items_Idle2_01
-38	WalkStaff2_01
-39	RunStaff2_01
-]]--
-
---[[
--- one mount anim set :
-23	Horse_Walk_01
-24	Horse_Run_01
-25	Horse_Idle_01
-26	Horse_Attack1H_SlashRight_01
-27	Horse_AttackBow_01
-28	Horse_AttackCrossbow_01
-29	Horse_Attack2H_SlashRight_01
-
--- known mounted anim sets
-23	Horse_Walk_01
-43	Llama_Walk_01
-53	Ostard_Walk_01
-63  Kirin_Walk_01
-73  Seahorse_Walk_01
-83  Ridgeback_Walk_01
-93  Giant_Beetle_Walk_01
-]]--
-
-
-
---[[
-old anim descriptions
---RunUO cmd: [animate 9 0 2 0 0 0	(animation, 0, repeats, 0, 0, 0)
--- Animation IDs
--- NOTE : the names and descriptions here are partially wrong, the animati=
on names from uo/Models/Human.lst are better
-gAnimation_walk				=3D hex2num("0x00")	--walk
-gAnimation_walkrighthand	=3D hex2num("0x01")	--walk with right hand weapon=
 in front
-gAnimation_run				=3D hex2num("0x02")	--run
-gAnimation_runrighthand		=3D hex2num("0x03")	--run with right hand weapon =
in front
-gAnimation_idle				=3D hex2num("0x04")	--idle	(standing)
-gAnimation_idlewarmode		=3D hex2num("0x05")	--warmode idle
-gAnimation_hands_on_hips	=3D hex2num("0x06")	--g=C3=A4hnen
-gAnimation_attack_stance1	=3D hex2num("0x07")	--attack (short)
-gAnimation_attack_stance2	=3D hex2num("0x08")	--attack (longer)
-gAnimation_swing1			=3D hex2num("0x09") 	--(attack with knife)
-gAnimation_stab1			=3D hex2num("0x0a") 	--(underhanded)
-gAnimation_swing2			=3D hex2num("0x0b")	--(attack overhand with sword)
-gAnimation_swing3 			=3D hex2num("0x0c")	--(attack with sword over and sid=
e)
-gAnimation_swing4			=3D hex2num("0x0d")	--(attack with sword side)
-gAnimation_stab2			=3D hex2num("0x0e")	--(stab with point of sword)
-gAnimation_ready_stance		=3D hex2num("0x0f")
-gAnimation_magic			=3D hex2num("0x10")	--(butter churn!)
-gAnimation_hands_over_head	=3D hex2num("0x11")	--(balerina)
-gAnimation_bow_shot			=3D hex2num("0x12")
-gAnimation_crossbow			=3D hex2num("0x13")
-gAnimation_get_hit1			=3D hex2num("0x14")
-gAnimation_die_forwards		=3D hex2num("0x15")	--fall down and die (forwards)
-gAnimation_die_backwards1	=3D hex2num("0x16")	--fall down and die (backwar=
ds)
-gAnimation_die_backwards2	=3D hex2num("0x17")	--=3Dsame!?
-gAnimation_horse_ride_idle	=3D hex2num("0x18")	--riding idle
-gAnimation_horse_riding		=3D hex2num("0x19")	--riding
-gAnimation_horse_swing		=3D hex2num("0x1a")	--swing sword from horse	- cra=
sh in iris1
-gAnimation_horse_bow		=3D hex2num("0x1b")	--normal bow shot on horse	- cra=
sh in iris1
-gAnimation_crossbow_shot	=3D hex2num("0x1c")
-gAnimation_horse_shield		=3D hex2num("0x1d")	--block #2 on horse with shie=
ld
-gAnimation_shield			=3D hex2num("0x1e")	--block on ground with shield
-gAnimation_get_hit2			=3D hex2num("0x1f")	--swing, and get hit in middle
-gAnimation_bow_deep			=3D hex2num("0x20")
-gAnimation_salute			=3D hex2num("0x21")
-gAnimation_scratch_head		=3D hex2num("0x22")
-gAnimation_one_foot			=3D hex2num("0x23")	--1 foot forward for 2 secs
-gAnimation_other_foot		=3D hex2num("0x24")	-- =3D same
-]]--
-

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Thu Oct  4 00:17:31 2007
@@ -11,7 +11,6 @@
 gHudNamesFontSize =3D 12
 =

 Renderer3D.gbActive =3D false
-Renderer3D.giLastAnimStepTime =3D nil
 Renderer3D.gbNeedCorrectAspectRatio =3D true
 Renderer3D.gDynamicMaxRenderDist =3D 128 -- 0 means always rendered  -- TO=
DO : make this dependant on bounding sphere size, e.g. in pixel size ?
 Renderer3D.gDynamicZAdd =3D 0.2 -- add a bit to make sure all dynamics can=
 be clicked and none are below the floor, todo : improve this by detecting =
floor height and model bbox

Modified: trunk/data/lua/lib.modelanim.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.modelanim.lua (original)
+++ trunk/data/lua/lib.modelanim.lua Thu Oct  4 00:17:31 2007
@@ -53,10 +53,10 @@
 end	=

 =

 =

-function StepMobileModelAnim (mobile,iTimeSinceLastStepInSeconds)
+function StepMobileModelAnim (mobile)
 	-- anim step
 	if (mobile.modelparts) then
-		for k,partgfx in pairs(mobile.modelparts) do partgfx:AnimAddTime(iTimeSi=
nceLastStepInSeconds) end
+		for k,partgfx in pairs(mobile.modelparts) do partgfx:AnimAddTime(gSecond=
sSinceLastFrame) end
 	end
 	if (mobile.animend and mobile.animend <=3D gMyTicks) then
 		-- non looped animation ended, start idle

Modified: trunk/data/lua/lib.models.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.models.lua (original)
+++ trunk/data/lua/lib.models.lua Thu Oct  4 00:17:31 2007
@@ -2,35 +2,8 @@
 -- most info files handled by this are found in uo/Models/ and subdirector=
ies
 -- see also lib.stitchin.lua
 -- see also lib.modelanim.lua
-
---[[
-interesting models
-3006	uo/Models/Others/H_Female_LLegs_V2_LOD2.grn has 2 submeshes, the last=
 one is empty
-3007    uo/Models/Others/H_Female_Neck_V2_LOD2.grn WARNING ! unexpected su=
meshcount        2
-
-430     uo/Models/Others/H_Male_Pants_Short_V2_LOD2.grn
-	irisogre: grannyparser.cpp:92: virtual void cGrannyVisitor::VisitChunk(in=
t, int, int, const char*, int): =

-		Assertion `iSize =3D=3D sizeof(GrannyTexInfo)' failed.  : 0xCA5E0303
-			a=3D16280 b=3D12 		(embedded texture ?!?)
-			width=3D256 height=3D256 depth=3D4
-			=

-1700    uo/Models/Others/H_Female_Hair_Short_V2_LOD2.grn
-	irisogre: grannyloader_i2.cpp:188: virtual void cGrannyLoader_i2::VisitTe=
xPolygonsBig(const GrannyTexturePolyBig*, int):
-		Assertion `mSubMeshes.size() > miNextTexPolySubmesh' failed.
-
-422 (not found)
-	=

-			=

-455		4	0	FFFFFFFF	0	1.3	1.3	1.3	H_Male_Kilt_XL_V2
-2525	4	0	FFFFFFFF	0	1.3	1.3	1.3	H_Male_Kilt_V2
-
-1455	4	0	FFFFFFFF	0	1.3	1.3	1.3	H_Female_Kilt_XL_V2
-3525	4	0	FFFFFFFF	0	1.3	1.3	1.3	H_Female_Kilt_V2
-
-female : mobile flag 0x02 ?
-##  Female wearables for polyorph from female to male    								=

-924	4	0	FFE0A050	0	1.3	1.3	1.3	H_Male_Armor_Female_Bustier_Leather_V2
-]]--
+-- granny textures are in Models/Maps/
+
 =

 kMountZAdd =3D 0.0
 gGrannyModelsFemale1 =3D {401} -- filled during loading models.txt (all wh=
ere anim=3D401) : 606,184,186,745,751,774,765,770,773
@@ -57,6 +30,18 @@
 	-- 12 and 13 are special, they are generated from stitchin via replace of=
 09
 }
 =

+-- Models.txt
+-- #Body	Type	Anim	DefHue	Unused	Scale	Scale	Scale	3D Model
+-- 400	3	0	FFFFFFFF	0	1.6	1.4	1.5	h_male
+-- animationspeeds.txt : 401 127 0.9 // long distance wave    OBJECT_TYPE =
ANIM_NUM SPEED
+gGrannyModelInfo =3D nil -- infos from Models.txt
+gGrannyTypeDirs =3D {		[0]=3D"Monsters/",
+						[1]=3D"SeaCreatures/",
+						[2]=3D"Animals/",
+						[3]=3D"Humans/",
+						[4]=3D"Others/", -- no .lst file with anims ?!?
+	}
+	=

 kGrannyModelPartFaceStart =3D 100 -- 100-131  +  kGrannyModelPartAddMale o=
r kGrannyModelPartAddFemale  -- 100 115
 -- "FACE" is missing above, there are many : 2100-2131   3100-3131
 -- and a mysterious ./Others/H_Female_Face_V2_lod2.grn
@@ -64,240 +49,137 @@
 =

 gGrannyScaleFactor =3D 0.65 --0.5
 =

--- returns true if female
-function IsBodyIDFemale (bodyid) =

-	return in_array(bodyid,gGrannyModelsFemale1) or in_array(bodyid,gGrannyMo=
delsFemale2)
-end
-
-function IsBodyIDHuman (bodyid) =

-	local modelinfo =3D GetGrannyModelInfo(bodyid)
-	return modelinfo and modelinfo.typeid =3D=3D kAnimTypeID_Human
-end
-
--- Models.txt
--- #Body	Type	Anim	DefHue	Unused	Scale	Scale	Scale	3D Model
--- 400	3	0	FFFFFFFF	0	1.6	1.4	1.5	h_male
--- animationspeeds.txt : 401 127 0.9 // long distance wave    OBJECT_TYPE =
ANIM_NUM SPEED
-gGrannyTypeDirs =3D {
-	[0]=3D"Monsters/",
-	[1]=3D"SeaCreatures/",
-	[2]=3D"Animals/",
-	[3]=3D"Humans/",
-	[4]=3D"Others/", -- no .lst file with anims ?!?
-	}
-gGrannyModelInfo =3D nil -- infos from Models.txt
-
--- granny textures are in Models/Maps/
-
-
-
-
-function GrannyTextureHook (x) =

-	--print("GrannyTextureHook",x)
-	return x
-end
-
--- takes the result of GetGrannyTextureName as paramter
--- transforms Ut128_Hat_Wide_Brim.tga into Ut128_Hat_Wide_Brim_M.tga
--- assumes suffixlength =3D 4 (.tga)
---[[
-TODO ! remove suffix after V2 ??
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_V2g.tga ../uo/mod=
els/Maps/UT256_H_Male_V2G_M.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_H_Male_Faces_V2.tga ../u=
o/Models/Maps/UT256_H_Male_Faces_V2_m.tga 8ffe3e8 33780
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_Clothing_5_V2.tga ../uo/=
Models/Maps/UT256_Clothing_5_V2_m.tga 8ffe3e8 1147
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_Clothing_1_V2.tga ../uo/=
Models/Maps/UT256_Clothing_1_V2_m.tga 8ffe3e8 1728
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_Clothing_6_V2.tga ../uo/=
Models/Maps/UT256_Clothing_6_V2_m.tga 8ffe3e8 1652
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_Armor_Dragon_V2.tga ../u=
o/Models/Maps/UT256_Armor_Dragon_V2_m.tga 8ffe3e8 1147
-l_CreateGrannyHuedTexture ../uo/Models/Maps/UT256_Clothing_1_V2.tga ../uo/=
Models/Maps/UT256_Clothing_1_V2_m.tga 8ffe3e8 0
-hue 83f4
-hue 83f4
-hue 83f4
-hue 83f4
-hue 83f4
-hue 83f4
-hue 83f4
-hue 83f4
-hue 83f4 -- bodyskin hue in different id range ?
-hue 047b
-hue 06c0
-hue 0674
-hue 047b
-hue 0000
-]]--
-function GetGrannyTextureMaskName (texname)
-	-- todo : remove .tga and add _m.tga for hue mask things, not always avai=
lable
-	local maskname =3D string.sub(texname,1,-5) .. "_M" .. string.sub(texname=
,-4)
-	--print("###### GetGrannyTextureMaskName",texname,maskname)
-	return maskname
-end
-
-function GetGrannyMat (modelid,hue,mygranny) =

-	if (not gEnableGrannyMaterials) then return "matGrannyBase" end
-	if (hue >=3D hex2num("0x8000")) then hue =3D hue - hex2num("0x8000") end
-	local texname =3D GetGrannyTextureName(mygranny)
-	local matname =3D gGrannyMaterialCache[texname.."_"..hue]
-	if (not matname) then
-		--printf("hue %04x\n",hue)
+
+-- ##### ##### ##### ##### #####  constructor =

+
+
+
+
+
+
+function UpdateMobileModel (mobile)
+	if (not gAnimInfoLists) then return end
+	--if (mobile.artid ~=3D 400 and mobile.artid ~=3D 401) then return end
+
+	-- TODO: Debug and check why RunUO sends kPacket_Equipped_MOB with artid =
=3D=3D Zero
+	if (mobile.artid =3D=3D 0) then return end
+	=

+	local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
+	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelPa=
rtModelIDs(mobile)
+	local bModelPartsChanged =3D false
+	if (not mobile.modelgfx) then bModelPartsChanged =3D true end
+	if (not mobile.modelidarr) then bModelPartsChanged =3D true end
+	if (mount and (not mobile.hasmountgfx)) then bModelPartsChanged =3D true =
end
+	if (mobile.hasmountgfx and (not mount)) then bModelPartsChanged =3D true =
end
+	if (mobile.modelidarr) then
+		if (table.getn(mobile.modelidarr) ~=3D table.getn(modelidarr)) then
+			bModelPartsChanged =3D true =

+		else
+			for k,v in ipairs(mobile.modelidarr) do
+				if ((not modelidarr[k]) or v.hue ~=3D modelidarr[k].hue or v.modelid ~=
=3D modelidarr[k].modelid) then bModelPartsChanged =3D true break end
+			end
+		end
+	end
+	=

+	=

+	=

+	if (bModelPartsChanged) then =

+		DestroyMobileModel(mobile)
+		mobile.modelgfx =3D CreateRootGfx3D()
+		mobile.modelgfx:SetVisible(true)
+		mobile.modelparts =3D {}
+		mobile.modelidarr =3D modelidarr
+		CreateMobileModelPartsFromModelIDArray(mobile.artid,mobile.modelgfx,mobi=
le.modelparts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
 		=

-		local texmaskname =3D GetGrannyTextureMaskName(texname)
-		local texturepath =3D CorrectGrannyPath("Maps/"..texname)
-		local texturemaskpath =3D CorrectGrannyPath("Maps/"..texmaskname)
-		-- texturepath will usually be an absolute path such as "/cavern/uostuff=
/uo/Models/Maps/UT256_Armor_Ring_V2.tga"
-		matname =3D CloneMaterial("matGrannyBase")
-		if (gGrannyUseCompleteHuePalette) then
-			SetTexture(matname,CreateGrannyHuedTexture(GrannyTextureHook(texturepat=
h),GrannyTextureHook(texturemaskpath),gHueLoader,hue))
-		else
-			-- ignore mask completely and only do a multiplicative coloring with th=
e hue's primary color
-			-- ignoring the rest of the hue template
-			SetTexture(matname,GrannyTextureHook(texturepath))
-			if (hue > 0) then =

-				local r,g,b =3D gHueLoader:GetColor(hue - 1,31) -- get first color
-				SetAmbient(matname,0,0,r,g,b)
-				SetDiffuse(matname,0,0,r,g,b)
+		-- create mount gfx
+		mobile.hasmountgfx =3D false
+		if (mount) then
+			mobile.hasmountgfx =3D true
+			local parentgfx =3D mobile.modelgfx
+			--[[
+			mount bodyid =3D 120  0x78      16047 =3D 0x00003eaf   1073742298=3D0x4=
00001da  2147500545=3D0x80004201
+
+			120	2	200	FFFFFFFF	0	1.5	1.5	1.5	equines_horse_war_minax
+			lib.mount.lua gMountTranslate[0x3EAF] =3D 0x78 // war horse (blood red)
+
+			mount   0       hue=3D0,unknown1=3D0,mobile=3Dtable: 0xb352298,mobile_s=
erial=3D4,artid=3D16047,serial=3D1073742298,layer=3D25,        =

+			msName=3Dhold,miUnknown=3D0,miHue=3D0,miQuantity=3D0,miFlags=3D21475005=
45,miWeight=3D-1,miAnimID=3D0,miQuality=3D0,miUnknown2=3D0,miUnknown1=3D0,m=
iUnknown3=3D0,miHeight=3D3,
+			N
+			=

+			MOUNT   204     16034
+			]]--
+			local tiledata =3D GetStaticTileType(mount.artid or 0)
+			--print("equip",item.artid,tiledata and tiledata.miAnimID or 0)
+			--local mountbodyid =3D tiledata and tiledata.miAnimID  -- this fails, =
animid is often zero, seems to be hardcoded
+			local mountbodyid =3D gMountTranslate[mount.artid]
+
+			printdebug("granny","MOUNT ",mountbodyid,mount.artid)
+
+			if ((not mountbodyid) or mountbodyid =3D=3D 0) then mountbodyid =3D gSt=
andardHorse end
+			--print("mountbodyid",mountbodyid,mount.artid)
+			--print("mount",mountbodyid,vardump2(mount),tiledata and vardump2(tiled=
ata))
+			if (mountbodyid and mountbodyid ~=3D 0) then
+				local mountskeleton =3D GetOrCreateSkeleton(mountbodyid) -- skeleton i=
s determined by the bodyid, not possible from the wearables
+				local meshname =3D GetGrannyMeshName(mountbodyid,mountskeleton.name,mo=
unt.hue)
+				=

+				-- fallback to standard horse mount
+				if (not meshname) then
+					printdebug("granny","warning, broken mountid, falling back to horse "=
,mountbodyid)
+					mountbodyid =3D gStandardHorse
+					mountskeleton =3D GetOrCreateSkeleton(mountbodyid) -- skeleton is det=
ermined by the bodyid, not possible from the wearables
+					meshname =3D GetGrannyMeshName(mountbodyid,mountskeleton.name,mount.h=
ue)					=

+				end
+				=

+				if (meshname) then =

+					local partgfx =3D parentgfx:CreateChild()
+					partgfx:SetMesh(meshname) =

+					partgfx:SetPosition(0,0,kMountZAdd) =

+					partgfx:SetVisible(true)
+					partgfx:SetCastShadows(gMobileCastShadows)	=

+					=

+					local modelinfo =3D GetGrannyModelInfo(mountbodyid)
+					if (modelinfo) then
+						local myscalex =3D forcescalex or modelinfo.scalex * gGrannyScaleFac=
tor
+						local myscaley =3D forcescaley or modelinfo.scaley * gGrannyScaleFac=
tor
+						local myscalez =3D forcescalez or modelinfo.scalez * gGrannyScaleFac=
tor
+						if (myscalex ~=3D 1 or myscaley ~=3D 1 or myscalez ~=3D 1) then
+							partgfx:SetScale(myscalex,myscaley,myscalez)
+							partgfx:SetNormaliseNormals(true)
+						end
+					end
+					mobile.modelmountgfx =3D partgfx
+				end
 			end
 		end
 		=

-		-- uses defaulthue=3Ddefhue from models.txt (FFFFFFFF : alpha-r-g-b)
-		if (hue =3D=3D 0) then
-			local modelinfo =3D GetGrannyModelInfo(modelid) =

-			if (modelinfo) then
-				local r =3D tonumber(string.sub(modelinfo.defhue,3,3 + 1),16) / 255.0
-				local g =3D tonumber(string.sub(modelinfo.defhue,5,5 + 1),16) / 255.0
-				local b =3D tonumber(string.sub(modelinfo.defhue,7,7 + 1),16) / 255.0
-				SetAmbient(matname,0,0,r,g,b)
-				SetDiffuse(matname,0,0,r,g,b)
-			end
-		end
-		gGrannyMaterialCache[texname.."_"..hue] =3D matname
-	end
-	return matname
-end
-
-
--- some tests if the granny model format is as expected (for models, not f=
or anims)
-function CheckGrannyModel	(granny) =

-	if (granny:GetSubMeshCount() ~=3D 1) then
-		printdebug("granny","WARNING ! unexpected sumeshcount ",granny:GetSubMes=
hCount())
-	end
-	assert(granny:GetSubMeshCount() >=3D 1,"GetSubMeshCount=3D=3D"..tostring(=
granny:GetSubMeshCount()))
-	assert(granny:GetTextureIDCount() >=3D 1,"GetTextureIDCount=3D=3D"..tostr=
ing(granny:GetTextureIDCount()))
-	if (granny:GetTextureIDCount() > 1) then
-		local base =3D GetGrannyTextureName(granny,0)
-		for i =3D 1,granny:GetTextureIDCount()-1 do =

-			assert(base =3D=3D GetGrannyTextureName(granny,i)," multiple different =
textures not yet supported")
-		end
-	end
-end
-
-function GetGrannyParamGroups (granny)
-	if (granny.paramgroups) then return granny.paramgroups end
-	=

-	-- textchunks
-	local textchunks =3D {}
-	local textchunkcount =3D granny:GetTextChunkCount()
-	for i =3D 0,textchunkcount-1 do
-		local chunksize =3D granny:GetTextChunkSize(i)
-		local arr =3D {}
-		for j =3D 0,chunksize-1 do arr[j] =3D granny:GetText(i,j) end
-		textchunks[i] =3D arr
-	end
-	-- for i,arr in pairs(textchunks) do for j,s in pairs(arr) do print(i,j,s=
) end end
-	=

-	-- paramgroups
-	local maintextchunk =3D textchunks[1]
-	local paramgroupcount =3D granny:GetParamGroupCount()
-	local paramgroups =3D {}
-	for i =3D 0,paramgroupcount-1 do
-		local groupsize =3D granny:GetParamGroupSize(i)
-		local arr =3D {}
-		for j =3D 0,groupsize-1 do
-			local key,value =3D granny:GetParam(i,j)
-			--print(i,key,value,maintextchunk[key],maintextchunk[value])
-			arr[maintextchunk[key]] =3D maintextchunk[value]
-		end
-		paramgroups[i] =3D arr
-	end
-	granny.paramgroups =3D paramgroups
-	return paramgroups
-end
-
--- index is 0 by default, more than one texture per granny is currently no=
t supported
-function GetGrannyTextureName (granny,index)
-	index =3D index or 0
-	local paramgroups =3D GetGrannyParamGroups(granny)
-	local texid =3D granny:GetTextureID(index)
-	local texpath =3D paramgroups[texid-1] and paramgroups[texid-1]["__FileNa=
me"]
-	--print("texpath",texpath)
-	if (texpath) then return basename(texpath) end
-end
-
-function MyGrannyTest_PreOgre ()
-	if (true) then return end
-
-	--local modelid =3D 73 -- 1700 -- 430 3006 400 =

-	--local modelinfo =3D GetGrannyModelInfo(modelid)
-	--if (not modelinfo) then return end
-	--print("MyGrannyTest",vardump2(modelinfo))
-	--modelpath =3D "data/H_Female_LLegs_V2_LOD2.grn"
-	--local modelpath =3D CorrectGrannyPath(gGrannyTypeDirs[modelinfo.typeid]=
 .. modelinfo.modelname .. "_LOD2.grn")
-	--local modelpath =3D CorrectGrannyPath("others/h_male_uarms_v2_lod2.grn")
-	--local modelpath =3D CorrectGrannyPath("Humans/H_Male_Walk_01.grn")
-	--local modelpath =3D CorrectGrannyPath("Others/H_Male_Boots_Thigh_V2_LOD=
2.grn")
-	--local modelpath =3D CorrectGrannyPath("Others/H_Male_UArms_V2_LOD2.grn")
-	local modelpath =3D CorrectGrannyPath("Humans/H_Male_Attackbow_01.grn")
-	--local modelpath =3D CorrectGrannyPath("Others/H_Male_FArms_V2_LOD2.grn")
-	--local modelpath =3D CorrectGrannyPath("Others/H_Male_Head_V2_LOD2.grn")
-	--print("modelpath",modelpath)
-	local mygranny =3D LoadGranny(modelpath)
-	if (not mygranny) then return end
-	--CheckGrannyModel(mygranny)
-
-	mygranny:Print()
-	=

-	local paramgroups =3D GetGrannyParamGroups(mygranny)
-	for id,arr in pairs(paramgroups) do for k,v in pairs(arr) do print("param=
",id,k,v) end end
-	=

-	Crash()
-end
-
-function MyGrannyTest_Ogre () end
-
-function GetGrannyMeshName (modelid,skeletonname,hue)
-	local cache =3D gGrannyMeshCache[modelid.."_"..hue] =

-	if (cache ~=3D nil) then return cache end
-	-- TODO : see gHueLoader -- HueMesh(meshname,gHueLoader,iHue)  scripting.=
cpp:379
-	=

-	-- not in cache, so create mesh
-	local mygranny =3D GetGrannyModelLoader(modelid)
-	if (not mygranny) then gGrannyMeshCache[modelid] =3D false return end
-	CheckGrannyModel(mygranny)
-	local matname =3D GetGrannyMat(modelid,hue,mygranny)
-	local modelinfo =3D GetGrannyModelInfo(modelid)
-	local meshname =3D mygranny:CreateOgreMesh(matname,skeletonname)
-	gGrannyMeshCache[modelid.."_"..hue] =3D meshname
-	return meshname
-end
-
--- todo : caching
-gGrannyModelLoaderCache =3D {}
-function GetGrannyModelLoader (modelid)
-	local cache =3D gGrannyModelLoaderCache[modelid]
-	if (cache ~=3D nil) then return cache end
-	local modelinfo =3D GetGrannyModelInfo(modelid)
-	if (not modelinfo) then gGrannyModelLoaderCache[modelid] =3D false return=
 false end
-	local modelpath =3D CorrectGrannyPath(gGrannyTypeDirs[modelinfo.typeid] .=
. modelinfo.modelname .. "_LOD2.grn")
-	printdebug("granny","GetGrannyModelLoader",modelid,modelpath)
-	local loader =3D LoadGranny(modelpath)
-	gGrannyModelLoaderCache[modelid] =3D loader
-	return loader
-end
+		if (false) then
+			local txt =3D sprintf("##### {artid=3D%d,hue=3D%d, content=3D{",mobile.=
artid,mobile.hue)
+			for k,item in pairs(GetMobileEquipmentList(mobile)) do
+				local tiledata =3D GetStaticTileType(item.artid)
+				txt =3D txt .. sprintf("{layer=3D%d,artid=3D%d,hue=3D%d,animid=3D%d},"=
,item.layer,item.artid,item.hue,tiledata and tiledata.miAnimID or 0)
+			end =

+			txt =3D txt .. sprintf("}},\n")
+			printdebug("equip",txt)
+		end
+	end
+end
+
+function DestroyMobileModel (mobile)
+	if (mobile.modelgfx) then mobile.modelgfx:Destroy() mobile.modelgfx =3D n=
il end
+	if (mobile.modelmountgfx) then mobile.modelmountgfx:Destroy() mobile.mode=
lmountgfx =3D nil end
+	if (mobile.modelparts) then
+		for k,partgfx in pairs(mobile.modelparts) do partgfx:Destroy() end
+		mobile.modelparts =3D nil
+	end
+end
+
+
+
+
+
+
+-- ##### ##### ##### ##### ##### functions accessing mobile =

+
 =

 -- returns array with granny-model ids for bodyparts and clothing
 function GetMobileModelPartModelIDs (mobile) =

@@ -373,6 +255,162 @@
 end
 =

 =

+
+-- ##### ##### ##### ##### #####  rest =

+
+
+-- returns true if female
+function IsBodyIDFemale (bodyid) =

+	return in_array(bodyid,gGrannyModelsFemale1) or in_array(bodyid,gGrannyMo=
delsFemale2)
+end
+
+function IsBodyIDHuman (bodyid) =

+	local modelinfo =3D GetGrannyModelInfo(bodyid)
+	return modelinfo and modelinfo.typeid =3D=3D kAnimTypeID_Human
+end
+
+function GrannyTextureHook (x) return x end
+
+-- takes the result of GetGrannyTextureName as paramter
+-- transforms Ut128_Hat_Wide_Brim.tga into Ut128_Hat_Wide_Brim_M.tga
+-- assumes suffixlength =3D 4 (.tga)
+function GetGrannyTextureMaskName (texname)
+	-- todo : remove .tga and add _m.tga for hue mask things, not always avai=
lable
+	local maskname =3D string.sub(texname,1,-5) .. "_M" .. string.sub(texname=
,-4)
+	return maskname
+end
+
+
+function GetGrannyMat (modelid,hue,mygranny) =

+	if (not gEnableGrannyMaterials) then return "matGrannyBase" end
+	if (hue >=3D hex2num("0x8000")) then hue =3D hue - hex2num("0x8000") end
+	local texname =3D GetGrannyTextureName(mygranny)
+	local matname =3D gGrannyMaterialCache[texname.."_"..hue]
+	if (not matname) then
+		--printf("hue %04x\n",hue)
+		=

+		local texmaskname =3D GetGrannyTextureMaskName(texname)
+		local texturepath =3D CorrectGrannyPath("Maps/"..texname)
+		local texturemaskpath =3D CorrectGrannyPath("Maps/"..texmaskname)
+		-- texturepath will usually be an absolute path such as "/cavern/uostuff=
/uo/Models/Maps/UT256_Armor_Ring_V2.tga"
+		matname =3D CloneMaterial("matGrannyBase")
+		if (gGrannyUseCompleteHuePalette) then
+			SetTexture(matname,CreateGrannyHuedTexture(GrannyTextureHook(texturepat=
h),GrannyTextureHook(texturemaskpath),gHueLoader,hue))
+		else
+			-- ignore mask completely and only do a multiplicative coloring with th=
e hue's primary color
+			-- ignoring the rest of the hue template
+			SetTexture(matname,GrannyTextureHook(texturepath))
+			if (hue > 0) then =

+				local r,g,b =3D gHueLoader:GetColor(hue - 1,31) -- get first color
+				SetAmbient(matname,0,0,r,g,b)
+				SetDiffuse(matname,0,0,r,g,b)
+			end
+		end
+		=

+		-- uses defaulthue=3Ddefhue from models.txt (FFFFFFFF : alpha-r-g-b)
+		if (hue =3D=3D 0) then
+			local modelinfo =3D GetGrannyModelInfo(modelid) =

+			if (modelinfo) then
+				local r =3D tonumber(string.sub(modelinfo.defhue,3,3 + 1),16) / 255.0
+				local g =3D tonumber(string.sub(modelinfo.defhue,5,5 + 1),16) / 255.0
+				local b =3D tonumber(string.sub(modelinfo.defhue,7,7 + 1),16) / 255.0
+				SetAmbient(matname,0,0,r,g,b)
+				SetDiffuse(matname,0,0,r,g,b)
+			end
+		end
+		gGrannyMaterialCache[texname.."_"..hue] =3D matname
+	end
+	return matname
+end
+
+
+-- some tests if the granny model format is as expected (for models, not f=
or anims)
+function CheckGrannyModel	(granny) =

+	if (granny:GetSubMeshCount() ~=3D 1) then
+		printdebug("granny","WARNING ! unexpected sumeshcount ",granny:GetSubMes=
hCount())
+	end
+	assert(granny:GetSubMeshCount() >=3D 1,"GetSubMeshCount=3D=3D"..tostring(=
granny:GetSubMeshCount()))
+	assert(granny:GetTextureIDCount() >=3D 1,"GetTextureIDCount=3D=3D"..tostr=
ing(granny:GetTextureIDCount()))
+	if (granny:GetTextureIDCount() > 1) then
+		local base =3D GetGrannyTextureName(granny,0)
+		for i =3D 1,granny:GetTextureIDCount()-1 do =

+			assert(base =3D=3D GetGrannyTextureName(granny,i)," multiple different =
textures not yet supported")
+		end
+	end
+end
+
+function GetGrannyParamGroups (granny)
+	if (granny.paramgroups) then return granny.paramgroups end
+	=

+	-- textchunks
+	local textchunks =3D {}
+	local textchunkcount =3D granny:GetTextChunkCount()
+	for i =3D 0,textchunkcount-1 do
+		local chunksize =3D granny:GetTextChunkSize(i)
+		local arr =3D {}
+		for j =3D 0,chunksize-1 do arr[j] =3D granny:GetText(i,j) end
+		textchunks[i] =3D arr
+	end
+	-- for i,arr in pairs(textchunks) do for j,s in pairs(arr) do print(i,j,s=
) end end
+	=

+	-- paramgroups
+	local maintextchunk =3D textchunks[1]
+	local paramgroupcount =3D granny:GetParamGroupCount()
+	local paramgroups =3D {}
+	for i =3D 0,paramgroupcount-1 do
+		local groupsize =3D granny:GetParamGroupSize(i)
+		local arr =3D {}
+		for j =3D 0,groupsize-1 do
+			local key,value =3D granny:GetParam(i,j)
+			--print(i,key,value,maintextchunk[key],maintextchunk[value])
+			arr[maintextchunk[key]] =3D maintextchunk[value]
+		end
+		paramgroups[i] =3D arr
+	end
+	granny.paramgroups =3D paramgroups
+	return paramgroups
+end
+
+-- index is 0 by default, more than one texture per granny is currently no=
t supported
+function GetGrannyTextureName (granny,index)
+	index =3D index or 0
+	local paramgroups =3D GetGrannyParamGroups(granny)
+	local texid =3D granny:GetTextureID(index)
+	local texpath =3D paramgroups[texid-1] and paramgroups[texid-1]["__FileNa=
me"]
+	--print("texpath",texpath)
+	if (texpath) then return basename(texpath) end
+end
+
+function GetGrannyMeshName (modelid,skeletonname,hue)
+	local cache =3D gGrannyMeshCache[modelid.."_"..hue] =

+	if (cache ~=3D nil) then return cache end
+	-- TODO : see gHueLoader -- HueMesh(meshname,gHueLoader,iHue)  scripting.=
cpp:379
+	=

+	-- not in cache, so create mesh
+	local mygranny =3D GetGrannyModelLoader(modelid)
+	if (not mygranny) then gGrannyMeshCache[modelid] =3D false return end
+	CheckGrannyModel(mygranny)
+	local matname =3D GetGrannyMat(modelid,hue,mygranny)
+	local modelinfo =3D GetGrannyModelInfo(modelid)
+	local meshname =3D mygranny:CreateOgreMesh(matname,skeletonname)
+	gGrannyMeshCache[modelid.."_"..hue] =3D meshname
+	return meshname
+end
+
+-- todo : caching
+gGrannyModelLoaderCache =3D {}
+function GetGrannyModelLoader (modelid)
+	local cache =3D gGrannyModelLoaderCache[modelid]
+	if (cache ~=3D nil) then return cache end
+	local modelinfo =3D GetGrannyModelInfo(modelid)
+	if (not modelinfo) then gGrannyModelLoaderCache[modelid] =3D false return=
 false end
+	local modelpath =3D CorrectGrannyPath(gGrannyTypeDirs[modelinfo.typeid] .=
. modelinfo.modelname .. "_LOD2.grn")
+	printdebug("granny","GetGrannyModelLoader",modelid,modelpath)
+	local loader =3D LoadGranny(modelpath)
+	gGrannyModelLoaderCache[modelid] =3D loader
+	return loader
+end
+
 -- creates childnodes of parentgfx and adds inserts them into the partsarr=
 table
 function CreateMobileModelPartsFromModelIDArray (mobileartid,parentgfx,par=
tsarr,modelidarr,iPrimaryHandItem,iSecondaryHandItem) =

 	local bodyid =3D MobileArtId2BodyId(mobileartid)
@@ -480,125 +518,6 @@
 =

 =

 =

-
-
-function UpdateMobileModel (mobile)
-	if (not gAnimInfoLists) then return end
-	--if (mobile.artid ~=3D 400 and mobile.artid ~=3D 401) then return end
-
-	-- TODO: Debug and check why RunUO sends kPacket_Equipped_MOB with artid =
=3D=3D Zero
-	if (mobile.artid =3D=3D 0) then return end
-	=

-	local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
-	local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelPa=
rtModelIDs(mobile)
-	local bModelPartsChanged =3D false
-	if (not mobile.modelgfx) then bModelPartsChanged =3D true end
-	if (not mobile.modelidarr) then bModelPartsChanged =3D true end
-	if (mount and (not mobile.hasmountgfx)) then bModelPartsChanged =3D true =
end
-	if (mobile.hasmountgfx and (not mount)) then bModelPartsChanged =3D true =
end
-	if (mobile.modelidarr) then
-		if (table.getn(mobile.modelidarr) ~=3D table.getn(modelidarr)) then
-			bModelPartsChanged =3D true =

-		else
-			for k,v in ipairs(mobile.modelidarr) do
-				if ((not modelidarr[k]) or v.hue ~=3D modelidarr[k].hue or v.modelid ~=
=3D modelidarr[k].modelid) then bModelPartsChanged =3D true break end
-			end
-		end
-	end
-	=

-	=

-	=

-	if (bModelPartsChanged) then =

-		DestroyMobileModel(mobile)
-		mobile.modelgfx =3D CreateRootGfx3D()
-		mobile.modelgfx:SetVisible(true)
-		mobile.modelparts =3D {}
-		mobile.modelidarr =3D modelidarr
-		CreateMobileModelPartsFromModelIDArray(mobile.artid,mobile.modelgfx,mobi=
le.modelparts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
-		=

-		-- create mount gfx
-		mobile.hasmountgfx =3D false
-		if (mount) then
-			mobile.hasmountgfx =3D true
-			local parentgfx =3D mobile.modelgfx
-			--[[
-			mount bodyid =3D 120  0x78      16047 =3D 0x00003eaf   1073742298=3D0x4=
00001da  2147500545=3D0x80004201
-
-			120	2	200	FFFFFFFF	0	1.5	1.5	1.5	equines_horse_war_minax
-			lib.mount.lua gMountTranslate[0x3EAF] =3D 0x78 // war horse (blood red)
-
-			mount   0       hue=3D0,unknown1=3D0,mobile=3Dtable: 0xb352298,mobile_s=
erial=3D4,artid=3D16047,serial=3D1073742298,layer=3D25,        =

-			msName=3Dhold,miUnknown=3D0,miHue=3D0,miQuantity=3D0,miFlags=3D21475005=
45,miWeight=3D-1,miAnimID=3D0,miQuality=3D0,miUnknown2=3D0,miUnknown1=3D0,m=
iUnknown3=3D0,miHeight=3D3,
-			N
-			=

-			MOUNT   204     16034
-			]]--
-			local tiledata =3D GetStaticTileType(mount.artid or 0)
-			--print("equip",item.artid,tiledata and tiledata.miAnimID or 0)
-			--local mountbodyid =3D tiledata and tiledata.miAnimID  -- this fails, =
animid is often zero, seems to be hardcoded
-			local mountbodyid =3D gMountTranslate[mount.artid]
-
-			printdebug("granny","MOUNT ",mountbodyid,mount.artid)
-
-			if ((not mountbodyid) or mountbodyid =3D=3D 0) then mountbodyid =3D gSt=
andardHorse end
-			--print("mountbodyid",mountbodyid,mount.artid)
-			--print("mount",mountbodyid,vardump2(mount),tiledata and vardump2(tiled=
ata))
-			if (mountbodyid and mountbodyid ~=3D 0) then
-				local mountskeleton =3D GetOrCreateSkeleton(mountbodyid) -- skeleton i=
s determined by the bodyid, not possible from the wearables
-				local meshname =3D GetGrannyMeshName(mountbodyid,mountskeleton.name,mo=
unt.hue)
-				=

-				-- fallback to standard horse mount
-				if (not meshname) then
-					printdebug("granny","warning, broken mountid, falling back to horse "=
,mountbodyid)
-					mountbodyid =3D gStandardHorse
-					mountskeleton =3D GetOrCreateSkeleton(mountbodyid) -- skeleton is det=
ermined by the bodyid, not possible from the wearables
-					meshname =3D GetGrannyMeshName(mountbodyid,mountskeleton.name,mount.h=
ue)					=

-				end
-				=

-				if (meshname) then =

-					local partgfx =3D parentgfx:CreateChild()
-					partgfx:SetMesh(meshname) =

-					partgfx:SetPosition(0,0,kMountZAdd) =

-					partgfx:SetVisible(true)
-					partgfx:SetCastShadows(gMobileCastShadows)	=

-					=

-					local modelinfo =3D GetGrannyModelInfo(mountbodyid)
-					if (modelinfo) then
-						local myscalex =3D forcescalex or modelinfo.scalex * gGrannyScaleFac=
tor
-						local myscaley =3D forcescaley or modelinfo.scaley * gGrannyScaleFac=
tor
-						local myscalez =3D forcescalez or modelinfo.scalez * gGrannyScaleFac=
tor
-						if (myscalex ~=3D 1 or myscaley ~=3D 1 or myscalez ~=3D 1) then
-							partgfx:SetScale(myscalex,myscaley,myscalez)
-							partgfx:SetNormaliseNormals(true)
-						end
-					end
-					mobile.modelmountgfx =3D partgfx
-				end
-			end
-		end
-		=

-		if (false) then
-			local txt =3D sprintf("##### {artid=3D%d,hue=3D%d, content=3D{",mobile.=
artid,mobile.hue)
-			for k,item in pairs(GetMobileEquipmentList(mobile)) do
-				local tiledata =3D GetStaticTileType(item.artid)
-				txt =3D txt .. sprintf("{layer=3D%d,artid=3D%d,hue=3D%d,animid=3D%d},"=
,item.layer,item.artid,item.hue,tiledata and tiledata.miAnimID or 0)
-			end =

-			txt =3D txt .. sprintf("}},\n")
-			printdebug("equip",txt)
-		end
-	end
-end
-
-function DestroyMobileModel (mobile)
-	if (mobile.modelgfx) then mobile.modelgfx:Destroy() mobile.modelgfx =3D n=
il end
-	if (mobile.modelmountgfx) then mobile.modelmountgfx:Destroy() mobile.mode=
lmountgfx =3D nil end
-	if (mobile.modelparts) then
-		for k,partgfx in pairs(mobile.modelparts) do partgfx:Destroy() end
-		mobile.modelparts =3D nil
-	end
-end
-
-
 function LoadGrannyModelInfo (filepath) =

 	local grannymodelinfo =3D {}
 	local fieldnames =3D {"bodyid","typeid","animid","defhue","unused","scale=
x","scaley","scalez","modelname"}

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Thu Oct  4 00:17:31 2007
@@ -24,7 +24,13 @@
 	-- TODO : util to get heightfieldpos ? (terrain only ? statics ? startz+t=
racedown ? generic raytrace util ? ...)
 	-- TODO : util to cache current pos and the 8 surrounding heights (lib.wa=
lking2.lua)
 	=

-	-- TODO : flash/ngame review collision detection article : http://www.har=
veycartel.org/metanet/tutorials.html
+	-- TODO : reset if client is near the center of a blocked tile (r=3D0.1)
+	-- TODO   bRunning and gWalkTimeout_RunningSpeed or gWalkTimeout_MoveingS=
peed
+	old : =

+		gWalkTimeout_MoveingSpeed =3D 370
+		gWalkTimeout_RunningSpeed =3D 175
+		gWalkTimeout_MountMovingSpeed =3D 185
+		gWalkTimeout_MountRunningSpeed =3D 95
 ]]--
 =

 gTileFreeWalk =3D {}
@@ -438,7 +444,7 @@
 =

 -- world-units (tiles for uo) per second
 -- todo : depends on conditions(stamina,spells,buffs,debuffs...) and on mo=
unt/horse ?
-function gTileFreeWalk:Impl_GetMaxAllowedSpeed		() return 4 end
+function gTileFreeWalk:Impl_GetMaxAllowedSpeed		() return 4 end -- TODO  g=
WalkTimeout_MoveingSpeed
 function gTileFreeWalk:Impl_GetMaxAllowedTurnRate	() return 45*gfDeg2Rad e=
nd
 =

 -- feedback for thirdpersoncam

Modified: trunk/data/lua/net.popup.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.popup.lua (original)
+++ trunk/data/lua/net.popup.lua Thu Oct  4 00:17:31 2007
@@ -164,7 +164,7 @@
 =

 function GetPopupEntryText (textid) =

 	-- return GetIntLocText(math.floor(textid / 1000),math.mod(textid,1000)) =
-- doesn't work
-	return gClilocLoader:Get(3000000 + textid) or "Not Defined"
+	return gClilocLoader and gClilocLoader:Get(3000000 + textid) or "Not Defi=
ned"
 end
 --[[
 -- the packet description doesn't work on my installation

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Thu Oct  4 00:17:31 2007
@@ -286,7 +286,7 @@
 	=

 	self:DestroyContent() -- warning, triggers self:Update()
 	=

-	gCurrentRenderer:RemoveMobile( self )
+	gCurrentRenderer:DestroyMobileGfx( self )
 	=

 	gMobiles[self.serial] =3D nil
 	CleanupObject(self)



From no-reply at zwischenwelt.org  Thu Oct  4 00:22:43 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 03 Oct 2007 22:22:43 -0000
Subject: [Iris-commit] [IRIS] r1439 - /trunk/data/old_mobileanim_notest.txt
Message-ID: <20071003222243.2AC6A1C18170@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct  4 00:22:42 2007
New Revision: 1439

Log:
moved some old notes from luacode to a txt file

Added:
    trunk/data/old_mobileanim_notest.txt



From no-reply at zwischenwelt.org  Thu Oct  4 22:03:35 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 04 Oct 2007 20:03:35 -0000
Subject: [Iris-commit] [IRIS] r1440 - /trunk/linuxbin/test.txt
Message-ID: <20071004200335.207A51C18124@zwischenwelt.org>

Author: aliverius
Date: Thu Oct  4 22:03:34 2007
New Revision: 1440

Log:
accesstest

Added:
    trunk/linuxbin/test.txt



From no-reply at zwischenwelt.org  Thu Oct  4 22:24:41 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 04 Oct 2007 20:24:41 -0000
Subject: [Iris-commit] [IRIS] r1441 - /trunk/linuxbin/test2.txt
Message-ID: <20071004202441.E55FE1C18124@zwischenwelt.org>

Author: aliverius
Date: Thu Oct  4 22:24:40 2007
New Revision: 1441

Log:
removed lots of dependencies

Added:
    trunk/linuxbin/test2.txt



From no-reply at zwischenwelt.org  Thu Oct  4 22:57:25 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 04 Oct 2007 20:57:25 -0000
Subject: [Iris-commit] [IRIS] r1442 - /trunk/linuxbin/iris
Message-ID: <20071004205726.8577F1C18164@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct  4 22:57:24 2007
New Revision: 1442

Log:
new binary by aliverius, removed lots of dependencies

Modified:
    trunk/linuxbin/iris

Modified: trunk/linuxbin/iris
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Thu Oct  4 23:15:01 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 04 Oct 2007 21:15:01 -0000
Subject: [Iris-commit] [IRIS] r1443 - /trunk/startbinary.sh
Message-ID: <20071004211501.DB39D1C18124@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct  4 23:15:00 2007
New Revision: 1443

Log:
added LD_LIBRARY_PATH=3D/usr/local/lib/ to startbinary.sh

Modified:
    trunk/startbinary.sh

Modified: trunk/startbinary.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/startbinary.sh (original)
+++ trunk/startbinary.sh Thu Oct  4 23:15:00 2007
@@ -2,5 +2,6 @@
 pushd bin
 #../src/irisogre
 # start, and transmit up to 8 parameters (i don't know how to transmit all=
, and 8 should be enough for a while)
+LD_LIBRARY_PATH=3D/usr/local/lib/ =

 ../linuxbin/iris $1 $2 $3 $4 $5 $6 $7 $8 =

 popd



From no-reply at zwischenwelt.org  Sat Oct  6 00:36:00 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 05 Oct 2007 22:36:00 -0000
Subject: [Iris-commit] [IRIS] r1444 - in /trunk/bin: OgreMain.dll
 Plugin_CgProgramManager.dll Plugin_OctreeSceneManager.dll
 Plugin_ParticleFX.dll RenderSystem_Direct3D9.dll RenderSystem_GL.dll
 iris2.exe plugins.cfg
Message-ID: <20071005230005.6D7F41C1811E@zwischenwelt.org>

Author: sience
Date: Sat Oct  6 00:36:00 2007
New Revision: 1444

Log:
-new windows binary (vs8express sp1) updated to ogre 1.4.5
-Plugin_OctreeSceneManager.dll deleted (not needed)

Removed:
    trunk/bin/Plugin_OctreeSceneManager.dll
Modified:
    trunk/bin/OgreMain.dll
    trunk/bin/Plugin_CgProgramManager.dll
    trunk/bin/Plugin_ParticleFX.dll
    trunk/bin/RenderSystem_Direct3D9.dll
    trunk/bin/RenderSystem_GL.dll
    trunk/bin/iris2.exe
    trunk/bin/plugins.cfg

Modified: trunk/bin/OgreMain.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_CgProgramManager.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/Plugin_ParticleFX.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_Direct3D9.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/RenderSystem_GL.dll
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/bin/plugins.cfg
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/bin/plugins.cfg (original)
+++ trunk/bin/plugins.cfg Sat Oct  6 00:36:00 2007
@@ -8,7 +8,7 @@
 Plugin=3DRenderSystem_GL
 Plugin=3DPlugin_ParticleFX
 #Plugin=3DPlugin_BSPSceneManager
-Plugin=3DPlugin_OctreeSceneManager
+#Plugin=3DPlugin_OctreeSceneManager
 Plugin=3DPlugin_CgProgramManager
 =

 =




From no-reply at zwischenwelt.org  Sat Oct  6 03:25:39 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 01:25:39 -0000
Subject: [Iris-commit] [IRIS] r1445 - in /trunk/data: ./ lua/ lua/gui/
	lua/net/ lua/obj/
Message-ID: <20071006012539.C5AC01C18123@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Oct  6 03:25:38 2007
New Revision: 1445

Log:
cleaned and improved granny code, fixed mount anims

Added:
    trunk/data/lua/lib.3d.walksmooth.lua
      - copied, changed from r1438, trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.bodygfx.lua
    trunk/data/lua/lib.granny.lua
      - copied, changed from r1438, trunk/data/lua/lib.modelanim.lua
Removed:
    trunk/data/lua/lib.3d.mobileanim.lua
    trunk/data/lua/lib.modelanim.lua
    trunk/data/lua/lib.models.lua
Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/gui/gui.paperdoll.lua
    trunk/data/lua/lib.3d.cam.lua
    trunk/data/lua/lib.3d.mobile.lua
    trunk/data/lua/lib.3d.mousepick.lua
    trunk/data/lua/lib.3d.renderer.lua
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.gumpparser.lua
    trunk/data/lua/lib.stitchin.lua
    trunk/data/lua/main.lua
    trunk/data/lua/net.corpse.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua
    trunk/data/old_mobileanim_notest.txt

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sat Oct  6 03:25:38 2007
@@ -243,3 +243,5 @@
 gDisableHumanClientSideAnim =3D false
 =

 gEnableTileFreeWalk =3D false
+
+kMountZAdd =3D {[401]=3D-0.25,[400]=3D-0.10}

Modified: trunk/data/lua/gui/gui.paperdoll.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.paperdoll.lua (original)
+++ trunk/data/lua/gui/gui.paperdoll.lua Sat Oct  6 03:25:38 2007
@@ -3,6 +3,7 @@
 -- see also net.mobile.lua, especially kPacket_Equipped_MOB
 -- mobileserial : also known as character/player id
 =

+-- WARNING ! this is not a complete list (see gLayerType for that) , e.g. =
kLayer_Mound =3D 0x19 is not in here
 gLayerOrder =3D {
 	hex2num("0x09"),					   -- - N/A (not used)
     hex2num("0x14"),                       -- - Back (Cloak)

Modified: trunk/data/lua/lib.3d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.cam.lua (original)
+++ trunk/data/lua/lib.3d.cam.lua Sat Oct  6 03:25:38 2007
@@ -202,8 +202,8 @@
 function Renderer3D:GetExactLocalPos ()
 	if (gEnableTileFreeWalk) then return gTileFreeWalk:GetExactLocalPos() end
 	local playermobile =3D GetPlayerMobile()
-	if (playermobile and playermobile.modelgfx) then
-		local x,y,z =3D playermobile.modelgfx:GetDerivedPosition()
+	if (playermobile and playermobile.bodygfx and playermobile.bodygfx.modelg=
fx) then
+		local x,y,z =3D playermobile.bodygfx.modelgfx:GetDerivedPosition()
 		return x,y,z
 	end
 	local x,y,z =3D GetPlayerPos()

Modified: trunk/data/lua/lib.3d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobile.lua (original)
+++ trunk/data/lua/lib.3d.mobile.lua Sat Oct  6 03:25:38 2007
@@ -1,4 +1,19 @@
--- see alos lib.3d.renderer.lua
+-- see also lib.3d.renderer.lua
+-- manages all visual things for mobiles : body,energybar,aura,selection m=
arker,name, text over head...
+
+-- called from obj.mobile.lua
+function UpdateMobileModel (mobile)
+	if (not mobile.bodygfx) then mobile.bodygfx =3D CreateBodyGfx() end
+	mobile.bodygfx:MarkForUpdate(mobile.artid,mobile.hue,GetMobileEquipmentLi=
st(mobile))
+	=

+	--~ local txt =3D sprintf("##### {artid=3D%d,hue=3D%d, content=3D{",mobil=
e.artid,mobile.hue)
+	--~ for k,item in pairs(GetMobileEquipmentList(mobile)) do
+		--~ local tiledata =3D GetStaticTileType(item.artid)
+		--~ txt =3D txt .. sprintf("{layer=3D%d,artid=3D%d,hue=3D%d,animid=3D%d}=
,",item.layer,item.artid,item.hue,tiledata and tiledata.miAnimID or 0)
+	--~ end =

+	--~ txt =3D txt .. sprintf("}},\n")
+	--~ printdebug("equip",txt)
+end
 =

 =

 function Renderer3D:UpdateMobile( mobile )
@@ -21,17 +36,6 @@
 		mobile.headpos:SetPosition(-0.5,0.5,2.3)
 	end
 	=

-	if (not mobile.grannygfx) then
-		mobile.grannygfx =3D {} -- todo : replace this with something external
-		mobile.grannygfx.SetVisible =3D function (self,bVisible) -- self =3D mob=
ile.grannygfx -- TODO : dirty hack, replace me
-			if (mobile.modelparts) then =

-				for k,partgfx in pairs(mobile.modelparts) do =

-					if (partgfx and partgfx.SetVisible) then partgfx:SetVisible(bVisible)=
 end
-				end =

-			end =

-		end
-	end
-
 	-- mobile health bar
 	if (not mobile.bar) then
 		mobile.bar =3D CreateRootGfx3D()
@@ -208,15 +212,14 @@
 	end
 	=

 	self:UpdateMobileVisibility(mobile)
-	self:ClientSideMobileAnimUpdate(mobile)
+	self:WalkSmoothUpdate(mobile)
 end
 =

 function Renderer3D:UpdateMobilePos (mobile,x,y,z,qw,qx,qy,qz)
 	-- set position and orientation
-	if (mobile.modelgfx) then
-		local mount =3D GetMobileEquipmentItem(mobile,kLayer_Mount)
-		mobile.modelgfx:SetPosition(x-0.5, y+0.5, z + (mount and -kMountZAdd or =
0))
-		mobile.modelgfx:SetOrientation(qw,qx,qy,qz)
+	if (mobile.bodygfx and mobile.bodygfx.modelgfx) then
+		mobile.bodygfx.modelgfx:SetPosition(x-0.5, y+0.5, z)
+		mobile.bodygfx.modelgfx:SetOrientation(qw,qx,qy,qz)
 	end
 	=

 	if (mobile.aura) 		then mobile.aura:SetPosition(		x-0.5,y+0.5,z + 0.2) end
@@ -231,8 +234,15 @@
 -- a every frame stepper for mobiles
 function Renderer3D:StepMobile (mobile)
 	-- animation stuff
-	self:ClientSideMobileAnimStep(mobile)
-	StepMobileModelAnim(mobile)
+	self:WalkSmoothStep(mobile)
+	=

+	if (mobile.bodygfx) then =

+		local bMoving	=3D mobile.walksmooth_moving
+		local bTurning	=3D mobile.walksmooth_turning
+		local bWarMode 	=3D TestBit(mobile.flag,kMobileFlag_WarMode) -- combat
+		local bRunFlag 	=3D TestBit(mobile.dir,kWalkFlag_Run)
+		mobile.bodygfx:SetState(bMoving,bTurning,bWarMode,bRunFlag) =

+	end
 =

 	-- chat text over player head
 	if mobile.mlastChatText and mobile.mlastChatTime and mobile.mlastChatColo=
r then
@@ -283,7 +293,7 @@
 			mobile.chattext.mLastText =3D mobile.mlastChatText
 			mobile.chattext.gfx:SetColour(r,g,b,a)
 			mobile.chattext.gfx:SetFont(gUniFontLoaderType and gUniFontName[gChatTe=
xt_UniFontNumber] or "TrebuchetMSBold")
-			mobile.chattext.gfx:SetCharHeight(gUniFontHeight[gChatText_UniFontNumbe=
r])
+			mobile.chattext.gfx:SetCharHeight(gUniFontHeight[gChatText_UniFontNumbe=
r] or 12)
 			mobile.chattext.gfx:SetText(mobile.mlastChatText)
 			local w,h =3D mobile.chattext.gfx:GetTextBounds()
 			mobile.chattext.gfx:SetPos(0, 0 - h)
@@ -327,7 +337,7 @@
 					mobile.aura , =

 					mobile.bar }
 	=

-	if (mobile.grannygfx)	then mobile.grannygfx:SetVisible(bVisible) end
+	if (mobile.bodygfx)		then mobile.bodygfx:SetVisible(bVisible) end
 	if (mobile.gfx)			then mobile.gfx:SetVisible(bVisible and (false or gDebu=
gBBoxMobiles)) end
 	if (mobile.selection)	then mobile.selection:SetVisible(bVisible and mobil=
e.isselected) end
 	=

@@ -358,7 +368,7 @@
 	self:DestroyMobileField(mobile,"bar")
 	self:DestroyMobileField(mobile,"selection")
 	self:DestroyMobileField(mobile,"nametext")
-	DestroyMobileModel(mobile)
+	self:DestroyMobileField(mobile,"bodygfx")
 end
 =

 function Renderer3D:CreateMobileGfx( mobile ) self:UpdateMobile(mobile) en=
d	=

@@ -393,3 +403,20 @@
 end
 =

 =

+--~ animdata.mobileserial	=3D input:PopNetUint32()	=

+--~ animdata.m_animation		=3D input:PopNetUint16()
+--~ animdata.m_framecount	=3D input:PopNetUint16()
+--~ animdata.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =
=3D twice / 0 =3D repeat forever)
+--~ animdata.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=
=3Dbackwards)
+--~ animdata.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 =
repeat)
+--~ animdata.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF=
 - Too slow to watch)
+-- todo : remaining anim options (m_animForward, m_frameDelay , m_framecou=
nt ?)
+function Renderer3D:MobileStartServerSideAnim (animdata) -- from kPacket_A=
nimation
+	local mobile =3D GetMobile(animdata.mobileserial)
+	if (not mobile) then return end
+	local iRepeatCount =3D 0 -- 0 =3D play once, -1 =3D loop infinity,  1:pla=
ytwice=3Drepeatonce 2:play3times...
+	if (animdata.m_repeatFlag =3D=3D 1) then iRepeatCount =3D (animdata.m_rep=
eat =3D=3D 0) and -1 or animdata.m_repeat end
+	if (mobile.bodygfx) then mobile.bodygfx:StartAnim(animdata.m_animation,iR=
epeatCount) end
+end
+
+

Modified: trunk/data/lua/lib.3d.mousepick.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mousepick.lua (original)
+++ trunk/data/lua/lib.3d.mousepick.lua Sat Oct  6 03:25:38 2007
@@ -222,10 +222,9 @@
 				gMousePickFoundHit.mobile =3D mobile
 			end
 		end
-		if (gbUseExactGrannyMousepicking and mobile.modelparts) then =

+		if (gbUseExactGrannyMousepicking and mobile.bodygfx) then =

 			-- exact granny mousepick if possible
-			--print("gbUseExactGrannyMousepicking",mobile.modelparts)
-			for k,partgfx in pairs(mobile.modelparts) do =

+			for k,partgfx in pairs(mobile.bodygfx:GetPartGfxList()) do =

 				--print("### grannymousepick start")
 				bHit,fHitDist =3D partgfx:RayPick(rx,ry,rz,rvx,rvy,rvz)
 				--print("### grannymousepick end,",bHit)

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Sat Oct  6 03:25:38 2007
@@ -223,7 +223,6 @@
 	effect.gfx:SetScale( scalex or 1, scaley or 1, scalez or 1)
 --	effect.gfx:SetNormaliseNormals(true)
 =

-	--RegisterListener("Hook_MainStep",function(ticks) =

 	InvokeLater(effect.ttl or gParticleEffectDefaultTTL, function ()
 		-- destroy effect after timeout
 		printdebug("effect","destroy effect")

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Sat Oct  6 03:25:38 2007
@@ -18,13 +18,15 @@
 =

 function RepairEquipIndex (arr) =

 	for k,v in pairs(arr) do =

-		local layer =3D GetPaperdollLayerFromTileType(v.artid)
+		local layer =3D v.layer or GetPaperdollLayerFromTileType(v.artid)
 		if (not layer) then print("could't get layer for artid ",v.artid) end
 		v.layer =3D layer or (1000 + k)
 	end
 end
 =

 gDebugTestMobiles =3D {
+	{artid=3D401, content=3D({{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount=
},{artid=3D5899,animid=3D477},{artid=3D5422,animid=3D430},{artid=3D5399,ani=
mid=3D434},{artid=3D5435,animid=3D466},{artid=3D8251,animid=3D700},{artid=
=3D3701,animid=3D422},})},
+	{artid=3D400, content=3D({{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount=
},{artid=3D5899,animid=3D477},{artid=3D5422,animid=3D430},{artid=3D5399,ani=
mid=3D434},{artid=3D5435,animid=3D466},{artid=3D8251,animid=3D700},{artid=
=3D3701,animid=3D422},})},
 	{artid=3D401, content=3D({{artid=3D5899,animid=3D477},{artid=3D5422,animi=
d=3D430},{artid=3D5399,animid=3D434},{artid=3D5435,animid=3D466},{artid=3D8=
251,animid=3D700},{artid=3D3701,animid=3D422},})},
 	{artid=3D400, content=3D({{artid=3D5905,animid=3D476},{artid=3D5422,animi=
d=3D430},{artid=3D7933,animid=3D435},{artid=3D5909,animid=3D406},{artid=3D5=
441,animid=3D490},{artid=3D3701,animid=3D422},{artid=3D8251,animid=3D700},}=
)},
 	{artid=3D 292 , content=3D{}}, --broken llamas_llama_pack (crash) -> mapp=
ed to id: 220
@@ -133,12 +135,6 @@
 	{artid=3D1490, content=3D{}},  -- sash, texcoords broken ? culling? (fixe=
d)
 	]]--
 }
-for k,mobile in pairs(gDebugTestMobiles) do =

-	mobile.GetContent 			=3D function (self) 			return self.content end =

-	mobile.GetEquipmentAtLayer	=3D function (self,layer)		=

-		for k,arr in pairs(self.content) do if (GetPaperdollLayerFromTileType(ar=
r.artid) =3D=3D layer) then return arr end end
-	end =

-end
 =

 -- 0:none 1:normal 2:invert 3:sample 4:sample-invert		-- bonestart
 -- 0:nothin 1:q 2:q.Inverse()							-- translationchange
@@ -153,12 +149,11 @@
 =

 function DebugMenuShowModel ()
 	local index =3D gDebugMenuModelIndex
-	if (gDebugModelParts) then for k,gfx in pairs(gDebugModelParts) do gfx:De=
stroy() end gDebugModelParts =3D nil end
+	if (gDebugBodyGfx) then gDebugBodyGfx:Destroy() end
 	if (gDebugRootGfx) then gDebugRootGfx:Destroy() gDebugRootGfx =3D nil end
 	if (gDebugRootGfx2) then gDebugRootGfx2:Destroy() gDebugRootGfx =3D nil e=
nd
 	gDebugRootGfx =3D CreateRootGfx3D()
 	gDebugRootGfx2 =3D CreateRootGfx3D()
-	gDebugModelParts =3D {}
 	=

 	local xadd,yadd,zadd =3D 0,0,0
 	=

@@ -169,11 +164,18 @@
 		RepairEquipIndex(mobile.content)
 		AddFadeLines(sprintf("DebugMenuShowModel model=3D%04x(=3D%d) anim=3D%d[%=
s]",mobile.artid,mobile.artid,gDebugMenuAnimIndex,GetAnimName(mobile.artid,=
gDebugMenuAnimIndex) or ""))
 		=

-		local animid =3D gDebugMenuAnimIndex
-		local bDoLoop =3D true
-		local modelidarr,iPrimaryHandItem,iSecondaryHandItem =3D GetMobileModelP=
artModelIDs(mobile)
-		CreateMobileModelPartsFromModelIDArray(mobile.artid,gDebugRootGfx,gDebug=
ModelParts,modelidarr,iPrimaryHandItem,iSecondaryHandItem)
-		if (gDebugMenuAnimIndex >=3D 0) then MobileStartAnim(mobile,gDebugModelP=
arts,animid,bDoLoop) end
+		gDebugBodyGfx =3D CreateBodyGfx(gDebugRootGfx)
+		gDebugBodyGfx:MarkForUpdate(mobile.artid,mobile.hue,mobile.content)
+		gDebugBodyGfx:Update()
+		=

+		local bMoving,bTurning,bWarMode,bRunFlag =3D false,false,false,false
+		if (gDebugMenuAnimIndex =3D=3D -1) then bMoving 					=3D true,true,true =
end
+		if (gDebugMenuAnimIndex =3D=3D -2) then bMoving,bRunFlag			=3D true,true=
,true end
+		if (gDebugMenuAnimIndex =3D=3D -3) then bWarMode,bMoving 			=3D true,tru=
e,true end
+		if (gDebugMenuAnimIndex =3D=3D -4) then bWarMode,bMoving,bRunFlag	=3D tr=
ue,true,true end
+		gDebugBodyGfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
+		=

+		if (gDebugMenuAnimIndex >=3D 0) then gDebugBodyGfx:StartAnimLoop(gDebugM=
enuAnimIndex) end
 	end
 	=

 	=

@@ -198,7 +200,6 @@
 		Renderer3D:CreateArtBillBoard(gDebugRootGfx2,iTileType+16384,iHue)
 	end
 	=

-	--gDebugModelParts[1]:SetDisplaySkeleton(true)
 	gDebugRootGfx:SetVisible(true)
 	local x,y,z =3D unpack(gDebugMenuMainGfxPos)
 	gDebugRootGfx:SetPosition(x + xadd,y + yadd,z + zadd)
@@ -283,6 +284,7 @@
 	=

 	UnbindAll()
 =

+	BindDown("escape",	function () Terminate() end)
 	Bind("wheelup",		function (state) if (not gActiveEditText) then if (state=
 > 0) then gCurrentRenderer:CamChangeZoom( 0.3) end end end)
 	Bind("wheeldown",	function (state) if (not gActiveEditText) then if (stat=
e > 0) then gCurrentRenderer:CamChangeZoom(-0.3) end end end)
 	Bind("c",		function (state) if (not gActiveEditText) then if (state > 0) =
then gCurrentRenderer:ChangeCamMode() end end end)
@@ -353,16 +355,10 @@
 		end end end)
 end
 =

-giDebugMenuLastAnimStepTime =3D nil
-
 function StepDebugMenu ()
 	if (not gDebugMenuRunning) then return end
 	-- camera
 	Renderer3D:CamStep()
-	=

-	local iTimeSinceLastStepInSeconds =3D giDebugMenuLastAnimStepTime and ((g=
MyTicks - giDebugMenuLastAnimStepTime) / 1000) or 0
-	giDebugMenuLastAnimStepTime =3D gMyTicks
-	if (gDebugModelParts and gDebugMenuAnimIndex >=3D 0) then for k,v in pair=
s(gDebugModelParts) do v:AnimAddTime(iTimeSinceLastStepInSeconds) end end
 end
 =

 =


Modified: trunk/data/lua/lib.gumpparser.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.gumpparser.lua (original)
+++ trunk/data/lua/lib.gumpparser.lua Sat Oct  6 03:25:38 2007
@@ -170,7 +170,7 @@
 				--				a scrollbar s displayed.
 				-- TODO : width, height, background, scrollbar
 				elseif ((command =3D=3D "xmfhtmlgump") and (table.getn(bToken)>=3D 8))=
 then
-					local msg =3D HtmlParser( gClilocLoader:Get(bToken[6]) )
+					local msg =3D HtmlParser( gClilocLoader and gClilocLoader:Get(bToken[=
6]) or "no_cliloc" )
 --					print("Cliloc Msg ("..bToken[6].."): "..msg.text)
 					local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2=
], bToken[3]+gHorizontal_Textcorrection, bToken[4], bToken[5], msg.text, ms=
g.charh, {1.0,1.0,1.0,1.0}, msg.center, msg.div)
 				--xmfhtmlgumpcolor <x> <y> <width> <height> <cliloc-nr> <background> <=
scrollbar> <color>
@@ -178,7 +178,7 @@
 				--				a scrollbar s displayed.
 				-- TODO : background, scrollbar, HUE-color
 				elseif ((command =3D=3D "xmfhtmlgumpcolor") and (table.getn(bToken)>=
=3D 9)) then
-					local msg =3D HtmlParser( gClilocLoader:Get(bToken[6]) )
+					local msg =3D HtmlParser(  gClilocLoader and gClilocLoader:Get(bToken=
[6]) or "no_cliloc" )
 --					print("Cliloc Msg ("..bToken[6].."): "..msg.text)
 					local widget =3D guimaker.MakeWrappedClippedText (curparent, bToken[2=
], bToken[3]+gHorizontal_Textcorrection, bToken[4], bToken[5], msg.text, ms=
g.charh, {1.0,1.0,1.0,1.0}, msg.center, msg.div)
 				--gumppic <x> <y> <gumpid> [hue=3D353]
@@ -366,7 +366,7 @@
 				--Description:  Adds to the previous layoutarray entry a Tooltip with =
the in [cliloc-nr] defined Cliloc entry.
 				-- TODO : display tooltip
 				elseif ((command =3D=3D "tooltip") and (table.getn(bToken)>=3D 2)) then
-					local msg =3D HtmlParser( gClilocLoader:Get(bToken[2]) )
+					local msg =3D HtmlParser( gClilocLoader and gClilocLoader:Get(bToken[=
2]) or "no_cliloc" )
 					AddFadeLines("HtmlGumpparser - tooltip (TODO):"..msg.text)
 				else
 					print("UNKNOWN Generic Gump Command: "..command)

Modified: trunk/data/lua/lib.stitchin.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.stitchin.lua (original)
+++ trunk/data/lua/lib.stitchin.lua Sat Oct  6 03:25:38 2007
@@ -1,6 +1,6 @@
 -- loads stitchin.def
 -- used for granny models : replacing body parts, and coveredBy/id-replace=
ment
--- see also lib.models.lua
+-- see also lib.granny.lua lib.bodygfx.lua
 -- todo : later : coveredby is currently only triggered if a single thing =
covers all parts, =

 	-- should also be triggered if the sum of things above covers it complete=
ly
 -- todo : later : whenhuedreplacewith is not yet handled

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Sat Oct  6 03:25:38 2007
@@ -69,21 +69,21 @@
 dofile(libpath .. "lib.skill.lua")
 dofile(libpath .. "lib.spellbooks.lua")
 dofile(libpath .. "lib.speech.lua")
-dofile(libpath .. "lib.models.lua")
+dofile(libpath .. "lib.granny.lua")
+dofile(libpath .. "lib.bodygfx.lua")
+dofile(libpath .. "lib.stitchin.lua")
 dofile(libpath .. "lib.test.lua")
 dofile(libpath .. "lib.filepath.lua")
 dofile(libpath .. "lib.loading.lua")
 dofile(libpath .. "lib.mainmenu.lua")
 dofile(libpath .. "lib.debugmenu.lua")
 dofile(libpath .. "lib.pagedialog.lua")
-dofile(libpath .. "lib.stitchin.lua")
-dofile(libpath .. "lib.modelanim.lua")
 dofile(libpath .. "lib.diff.lua")
 dofile(libpath .. "lib.deffileparser.lua")
 dofile(libpath .. "lib.fallback.lua")
 dofile(libpath .. "lib.charcreate.lua")
 dofile(libpath .. "lib.devtool.lua")
-dofile(libpath .. "lib.3d.mobileanim.lua")
+dofile(libpath .. "lib.3d.walksmooth.lua")
 dofile(libpath .. "lib.mount.lua")
 dofile(libpath .. "lib.debug.lua")
 -- dofile(libpath .. "lib.uodragdrop.lua")  (new dragdrop system not yet u=
sed in trunk, see net.uodragdrop.lua for old)
@@ -167,7 +167,7 @@
 	CheckUODir()
 	=

 	-- if (gHuffmanCompression) then LuaHuffmanTest() end
-	-- if (false) then MyGrannyTest_PreOgre() end	-- TODO : just a test, see =
lib.models.lua
+	-- if (false) then MyGrannyTest_PreOgre() end	-- TODO : just a test, see =
lib.granny.lua
 	-- if (false) then LuaBitwiseTest() end
 	-- if (false) then TestLegacyModelAndTextureLoader() end
 	-- if (false) then AnalyseStatics() end
@@ -283,9 +283,9 @@
 	GUIStep() -- generate mouse_enter, mouse_leave events (might adjust curso=
r -> before CursorStep)
 	CursorStep()
 =

-	NotifyListener("Hook_MainStep")
-	NotifyListener( "EveryFrame" )
-	=

+	NotifyListener("EveryFrame")
+	=

+	NotifyListener("Hook_PreRenderOneFrame")
 	Client_RenderOneFrame()
 	SoundStep()
 	Client_USleep(1) -- just 1 millisecond, but gives other processes a chanc=
e to do something

Modified: trunk/data/lua/net.corpse.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.corpse.lua (original)
+++ trunk/data/lua/net.corpse.lua Sat Oct  6 03:25:38 2007
@@ -51,16 +51,17 @@
 	local player_serial =3D input:PopNetUint32()
 	local corpse_serial =3D input:PopNetUint32()
 	local terminator =3D input:PopNetUint32()
+	print("kPacket_Death_Animation",player_serial,corpse_serial,terminator)
 	printdebug("animation",sprintf("NET: kPacket_Death_Animation: player_seri=
al: 0x%08x corpse_serial=3D0x%08x\n",player_serial,corpse_serial))
 --[[
 	local anim =3D {}
-	anim.mobileserial	=3D corpse_serial
-	anim.m_animation	=3D 21
-	anim.m_framecount	=3D 120
-	anim.m_repeat		=3D 1
-	anim.m_animForward	=3D 0
-	anim.m_repeatFlag	=3D 0
-	anim.m_frameDelay	=3D hex2num("0x80")
-	gCurrentRenderer:MobileStartServerSideAnim(anim)
+	animdata.mobileserial	=3D corpse_serial
+	animdata.m_animation	=3D 21
+	animdata.m_framecount	=3D 120
+	animdata.m_repeat		=3D 1
+	animdata.m_animForward	=3D 0
+	animdata.m_repeatFlag	=3D 0
+	animdata.m_frameDelay	=3D hex2num("0x80")
+	gCurrentRenderer:MobileStartServerSideAnim(animdata)
 ]]--
 end

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Sat Oct  6 03:25:38 2007
@@ -597,7 +597,7 @@
 		gPlayerZLoc ~=3D player_zloc or gPlayerDir ~=3D player_dir) then
 =

 		printdebug("walking",sprintf("Block_Movement seqnumber=3D%d player_dir=
=3D%d\n",seqnumber,player_dir))
-		gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
+		gCurrentRenderer:NotifyPlayerTeleported()
 		SetPlayerPos(player_xloc,player_yloc,player_zloc,fullplayerdir)
 	else
 		printdebug("walking","Player not teleported, because already on the same=
 pos+dir")

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Sat Oct  6 03:25:38 2007
@@ -18,6 +18,7 @@
 end
 =

 -- Equipped_MOB packet (0x78)
+-- TODO: Debug and check why RunUO sends kPacket_Equipped_MOB with artid =
=3D=3D Zero
 function gPacketHandler.kPacket_Equipped_MOB() -- ProtocolRecv_AddMobile
 	local input =3D GetRecvFIFO()
 	local fifolen_start =3D input:Size()
@@ -105,14 +106,14 @@
 	local animdata =3D {}
 	animdata.mobileserial	=3D input:PopNetUint32()	=

 	animdata.m_animation		=3D input:PopNetUint16()
-	animdata.m_framecount	=3D input:PopNetUint16()
+	animdata.m_framecount	=3D input:PopNetUint16()  -- is this the start-fram=
e ? is this mobile-direction ?
 	animdata.m_repeat		=3D input:PopNetUint16()	--repeat (1 =3D once / 2 =3D =
twice / 0 =3D repeat forever)
 	animdata.m_animForward	=3D input:PopNetUint8()	--(0x00=3Dforward, 0x01=3D=
backwards)
 	animdata.m_repeatFlag	=3D input:PopNetUint8()	--(0 - Don't repeat / 1 rep=
eat)
 	animdata.m_frameDelay	=3D input:PopNetUint8()	--(0x00 - fastest / 0xFF - =
Too slow to watch)
 	printdebug("animation","Animation "..vardump2(animdata))
 	=

-	MobileStartServerSideAnim(animdata)
+	gCurrentRenderer:MobileStartServerSideAnim(animdata)
 end
 =

 -- Note: For characters other than the player, curHits and maxHits are not=
 the actual values.

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Sat Oct  6 03:25:38 2007
@@ -315,10 +315,6 @@
 	self:Update() -- trigger change in renderer
 end
 =

-function MobileStartServerSideAnim (animdata)
-	gCurrentRenderer:MobileStartServerSideAnim(animdata)
-end
-
 -- return r,g,b
 function GetNotorietyColor (n)
 	if (n =3D=3D  0) then return 0.0 , 0.0 , 0.0 end -- 0.0 =3D invalid/acros=
s server line

Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Sat Oct  6 03:25:38 2007
@@ -105,7 +105,7 @@
 	gLastResyncRequest =3D nil
 	--ResetWalkQueue()
 	=

-	gCurrentRenderer:ClientSideMobileAnimPlayerTeleported()
+	gCurrentRenderer:NotifyPlayerTeleported()
 =

 --~ 	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XL=
oc: %i YLoc: %i ZLoc: %i Dir: [%s]\n",
 --~ 			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gP=
layerDir or 0] or ""))

Modified: trunk/data/old_mobileanim_notest.txt
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/old_mobileanim_notest.txt (original)
+++ trunk/data/old_mobileanim_notest.txt Sat Oct  6 03:25:38 2007
@@ -1,4 +1,25 @@
 =

+	--local bPlayerIsInWarMode =3D gActWarmode =3D=3D gWarmode_Combat -- TODO=
 : only player, not any mobile
+
+mount bodyid =3D 120  0x78      16047 =3D 0x00003eaf   1073742298=3D0x4000=
01da  2147500545=3D0x80004201
+
+120	2	200	FFFFFFFF	0	1.5	1.5	1.5	equines_horse_war_minax
+lib.mount.lua gMountTranslate[0x3EAF] =3D 0x78 // war horse (blood red)
+
+mount   0       hue=3D0,unknown1=3D0,mobile=3Dtable: 0xb352298,mobile_seri=
al=3D4,artid=3D16047,serial=3D1073742298,layer=3D25,        =

+msName=3Dhold,miUnknown=3D0,miHue=3D0,miQuantity=3D0,miFlags=3D2147500545,=
miWeight=3D-1,miAnimID=3D0,miQuality=3D0,miUnknown2=3D0,miUnknown1=3D0,miUn=
known3=3D0,miHeight=3D3,
+N
+
+MOUNT   204     16034
+
+
+--print("equip",item.artid,tiledata and tiledata.miAnimID or 0)
+--local mountbodyid =3D tiledata and tiledata.miAnimID  -- this fails, ani=
mid is often zero, seems to be hardcoded
+
+
+
+--print("mountbodyid",mountbodyid,mount.artid)
+--print("mount",mountbodyid,vardump2(mount),tiledata and vardump2(tiledata=
))
 =

 function MyGrannyTest_PreOgre ()
 	if (true) then return end



From no-reply at zwischenwelt.org  Sat Oct  6 13:30:33 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 11:30:33 -0000
Subject: [Iris-commit] [IRIS] r1446 - in /trunk/data/lua: lib.bodygfx.lua
	lib.tilefreewalk.lua
Message-ID: <20071006113033.5DCA11C18128@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Oct  6 13:30:32 2007
New Revision: 1446

Log:
avoids run anim for turning without moving, small fix

Modified:
    trunk/data/lua/lib.bodygfx.lua
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.bodygfx.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.bodygfx.lua (original)
+++ trunk/data/lua/lib.bodygfx.lua Sat Oct  6 13:30:32 2007
@@ -454,8 +454,8 @@
 	local bHasStaff =3D twohand and TestBit(GetStaticTileTypeFlags(twohand.ar=
tid) or 0,kTileDataFlag_Weapon)
 	=

 	local bIdle	=3D (not self.bTurning) and (not self.bMoving)
-	local bWalk	=3D (not bIdle) and (not self.bRunFlag)
-	local bRun	=3D (not bIdle) and (self.bRunFlag)
+	local bRun	=3D (not bIdle) and (self.bRunFlag and self.bMoving)
+	local bWalk	=3D (not bIdle) and (not bRun)
 	=

 	return BodyGfxGetStateAnimID(bodyid,bWalk,bRun,bIdle,mount,self.bWarMode,=
bHasStaff)
 end

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Sat Oct  6 13:30:32 2007
@@ -49,6 +49,9 @@
 	self.walls =3D {}
 	self.movedirx =3D 0
 	self.movediry =3D 1
+	self.pos_clientside =3D {0,0,0}
+	self.pos_lastconfirmed =3D {0,0,0}
+	self.pos_lastrequested =3D {0,0,0}
 	=

 	if (true) then
 		self.sDebugMarkerMeshName_Big	=3D MakeSphereMesh(11,11,0.2,0.2,0.2)



From no-reply at zwischenwelt.org  Sat Oct  6 16:19:57 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 14:19:57 -0000
Subject: [Iris-commit] [IRIS] r1447 - in /trunk/data/lua: lib.bodygfx.lua
 lib.debugmenu.lua lib.tilefreewalk.lua
Message-ID: <20071006141957.D62621C18120@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Oct  6 16:19:57 2007
New Revision: 1447

Log:
debug doesn't crash when tilefree is on now, small fix for destroyed bodygfx

Modified:
    trunk/data/lua/lib.bodygfx.lua
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.bodygfx.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.bodygfx.lua (original)
+++ trunk/data/lua/lib.bodygfx.lua Sat Oct  6 16:19:57 2007
@@ -128,6 +128,7 @@
 =

 function gBodyGfxPrototype:Update()
 	self.bMarkedForUpdate =3D false
+	if (self.bDead) then return end
 	=

 	-- calc hash to see if something changed, exit if not (nothing to do)
 	local newbodyhash =3D self:CalcBodyHash()
@@ -351,6 +352,7 @@
 =

 function gBodyGfxPrototype:Step		()
 	-- trigger update if marked
+	if (self.bDead) then return end
 	if (self.bMarkedForUpdate) then self:Update() end
 	=

 	-- check for anim end

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Sat Oct  6 16:19:57 2007
@@ -25,6 +25,14 @@
 end
 =

 gDebugTestMobiles =3D {
+	{artid=3D400,hue=3D33780, content=3D{
+		{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount},
+		[4]=3D{artid=3D5422,hue=3D1728,animid=3D430},[26]=3D{artid=3D3701,hue=3D=
0,animid=3D422},
+		[16]=3D{artid=3D8269,hue=3D1147,animid=3D906},[27]=3D{artid=3D3701,hue=
=3D0,animid=3D422},
+		[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252,hue=
=3D1147,animid=3D701},
+		[21]=3D{artid=3D3701,hue=3D0,animid=3D422},}},   =

+		=

+		=

 	{artid=3D401, content=3D({{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount=
},{artid=3D5899,animid=3D477},{artid=3D5422,animid=3D430},{artid=3D5399,ani=
mid=3D434},{artid=3D5435,animid=3D466},{artid=3D8251,animid=3D700},{artid=
=3D3701,animid=3D422},})},
 	{artid=3D400, content=3D({{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount=
},{artid=3D5899,animid=3D477},{artid=3D5422,animid=3D430},{artid=3D5399,ani=
mid=3D434},{artid=3D5435,animid=3D466},{artid=3D8251,animid=3D700},{artid=
=3D3701,animid=3D422},})},
 	{artid=3D401, content=3D({{artid=3D5899,animid=3D477},{artid=3D5422,animi=
d=3D430},{artid=3D5399,animid=3D434},{artid=3D5435,animid=3D466},{artid=3D8=
251,animid=3D700},{artid=3D3701,animid=3D422},})},

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Sat Oct  6 16:19:57 2007
@@ -31,10 +31,20 @@
 		gWalkTimeout_RunningSpeed =3D 175
 		gWalkTimeout_MountMovingSpeed =3D 185
 		gWalkTimeout_MountRunningSpeed =3D 95
+		=

+	-- TODO : jump
 ]]--
 =

 gTileFreeWalk =3D {}
 =

+
+
+kTileFreeTestMobile =3D {artid=3D400,hue=3D33780, content=3D{
+		{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount},
+		[4]=3D{artid=3D5422,hue=3D1728,animid=3D430},[26]=3D{artid=3D3701,hue=3D=
0,animid=3D422},
+		[16]=3D{artid=3D8269,hue=3D1147,animid=3D906},[27]=3D{artid=3D3701,hue=
=3D0,animid=3D422},
+		[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252,hue=
=3D1147,animid=3D701},
+		[21]=3D{artid=3D3701,hue=3D0,animid=3D422},}} =

 =

 -- ##### ##### ##### ##### ##### init
 =

@@ -66,7 +76,7 @@
 =

 	RegisterStepper(function () gTileFreeWalk:Step() end) =

 end
-RegisterListener("Hook_StartInGame",function () gTileFreeWalk:Init() end)
+RegisterListener("Hook_PreLoad",function () gTileFreeWalk:Init() end)
 =

 =

 -- ##### ##### ##### ##### ##### step



From no-reply at zwischenwelt.org  Sat Oct  6 16:25:54 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 14:25:54 -0000
Subject: [Iris-commit] [IRIS] r1448 - /trunk/bin/iris2.exe
Message-ID: <20071006142554.86A361C18128@zwischenwelt.org>

Author: sience
Date: Sat Oct  6 16:25:54 2007
New Revision: 1448

Log:
-new windows binary

Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Sat Oct  6 16:30:47 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 14:30:47 -0000
Subject: [Iris-commit] [IRIS] r1449 - in /trunk/data: config.lua.dist
	lua/lib.debugmenu.lua
Message-ID: <20071006143047.A1D9D1C18128@zwischenwelt.org>

Author: sience
Date: Sat Oct  6 16:30:46 2007
New Revision: 1449

Log:
-rttgenerated debugmenu added optionally; config.lua: gEnableRTTModelImages=
 =3D true

Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.debugmenu.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sat Oct  6 16:30:46 2007
@@ -245,3 +245,5 @@
 gEnableTileFreeWalk =3D false
 =

 kMountZAdd =3D {[401]=3D-0.25,[400]=3D-0.10}
+
+gEnableRTTModelImages =3D false

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Sat Oct  6 16:30:46 2007
@@ -398,18 +398,28 @@
 	table.insert(pagerow,{type=3D"Button",text=3D"close",onMouseDown=3Dfuncti=
on(widget) widget.dialog:Destroy() end})
 	table.insert(rows,pagerow)
 	=

-	=

 	for y =3D 0,h-1 do
 		local row1 =3D {}
 		local row2 =3D {}
 		for x =3D 0,w-1 do =

 			local i =3D iStart + y*w + x
 			if (i < iMax) then
-				table.insert(row1	,MakeUOArtImageForDialog(i,0,48,32))
-				local name =3D GetStaticTileTypeName(i) or "unknown"
-				local label =3D sprintf("%s\n0x%04x",string.sub(name,1,6),i)
-				table.insert(row2	,{type=3D"Button",iArtID=3Di,text=3Dlabel,onMouseDow=
n=3Dfunction(widget) =

-					DebugMenuJumpToArtID(widget.iArtID) end})
+
+				local meshname =3D GetModelName(FilterMesh(i))
+				if not OgreMeshAvailable(meshname) then =

+					printdebug("static","mesh not available",meshname)
+				else
+					if (gEnableRTTModelImages) then
+						table.insert(row1	, MakeUOModelImageForDialog(meshname,48,32) )
+					else
+						table.insert(row1	,MakeUOArtImageForDialog(i,0,48,32))
+					end
+
+					local name =3D GetStaticTileTypeName(i) or "unknown"
+					local label =3D sprintf("%s\n0x%04x",string.sub(name,1,6),i)
+					table.insert(row2	,{type=3D"Button",iArtID=3Di,text=3Dlabel,onMouseDo=
wn=3Dfunction(widget) =

+						DebugMenuJumpToArtID(widget.iArtID) end})
+				end
 			end
 		end
 		table.insert(rows,row1)
@@ -418,3 +428,91 @@
 =

 	guimaker.MakeTableDlg(rows,10,10,true,true,gGuiDefaultStyleSet,"window")
 end
+
+------------------------------------------ the following parts are copied =
from lugre and modified, should be merged into lugre ----------------------=
---------------------
+
+-- iMaxW,iMaxH : can be nil for unlimited size
+function MakeUOModelImageForDialog (meshname,iMaxW,iMaxH) =

+	local texname,rtt =3D GetMeshPreviewX (meshname, iMaxW, 0, 1.5)
+	local matname =3D texname and GetPlainTextureMat(texname)
+
+	--SaveUOModelImageToFile(rtt,texname)
+
+	local isotilew =3D 44 / math.sqrt(2)
+--	local w,h =3D GetArtSize(iTranslatedTileTypeID)
+--	if (not w or w =3D=3D 0) then
+		w =3D isotilew
+--	end
+--	if (not h or h =3D=3D 0) then
+		h =3D isotilew
+--	end
+	local tw,th =3D texsize(w),texsize(h)
+	local fw,fh =3D w,h
+	if (iMaxW) then w =3D math.min(iMaxW,w) end
+	if (iMaxH) then h =3D math.min(iMaxH,h) end
+	local offx,offy =3D (fw-w)*0.5,(fh-h)*0.5  -- this is 0,0 if the art is f=
ully visible, centers art if not
+	local u1,v1,u2,v2 =3D offx/tw,offy/th,(offx+w)/tw,(offy+h)/th
+	matname =3D (string.len(matname) > 0) and matname or "BaseWhiteNoLighting"
+	return {type=3D"Img2",	w=3Dw,h=3Dh,matname=3Dmatname, u1=3Du1,v1=3Dv1,u2=
=3Du2,v2=3Dv2}
+end
+
+function SaveUOModelImageToFile(rtt,texname)
+	if (rtt) then rtt:WriteContentsToFile("t"..texname..".bmp") end
+end
+
+-- this is normally in lugre - just a bit modified - should be removed som=
etimes
+function GetMeshPreviewX	(meshname,res,angh,angv,pixelformat) =

+	res =3D res or 16
+	angh =3D angh or 45*gfDeg2Rad
+	angv =3D angv or 30*gfDeg2Rad
+--~ 	local x1,y1,z1,x2,y2,z2 =3D MeshReadOutExactBounds(meshname)
+--~ 	local boundrad =3D math.max(Vector.len(x1,y1,z1),Vector.len(x2,y2,z2))
+--~ 	MeshSetBounds(meshname,x1,y1,z1,x2,y2,z2)
+--~ 	MeshSetBoundRad(meshname,boundrad)
+	local boundrad =3D MeshGetBoundRad(meshname)
+	=

+	local name_scenemanager		=3D GetUniqueName()
+	local name_texture			=3D GetUniqueName()
+	=

+	-- prepare rtt
+	CreateSceneManager(name_scenemanager)
+	local cam =3D CreateCamera(name_scenemanager)
+	local tex =3D CreateRenderTexture(name_texture,res,res,pixelformat or PF_=
A8R8G8B8)
+	if (not tex:IsAlive()) then return end
+	=

+	tex:SetAutoUpdated(false)
+	local vp =3D CreateRTTViewport(tex,cam)
+	cam:SetAspectRatio(vp:GetActualWidth()/vp:GetActualHeight())
+	--print("GetMeshPreview rtt-viewport size:",vp:GetActualWidth(),vp:GetAct=
ualHeight()) -- =3D res,res
+	vp:SetOverlaysEnabled(false)
+	=

+--~ 		vp->setClearEveryFrame( true );
+--~ 		vp->setBackgroundColour( ColourValue::Black );
+	-- CreateTextureUnitState(mymatname,0,0,myrttname)
+	=

+	--local dist =3D GetRenderingDistanceForPixelSize(boundrad,res*0.25,vp,ca=
m)
+	local visrad_pixels =3D res*0.5
+	local vw,vh =3D res,res
+	local dist =3D 0.7 * math.max( boundrad/(visrad_pixels/vw), boundrad/(vis=
rad_pixels/vh) ) -- dirty hack, TODO : analyse projection matrix
+	=

+	Client_AddDirectionalLight(-0.3,-0.5,-0.1,name_scenemanager)
+	cam:SetNearClipDistance(1)
+	cam:SetFarClipDistance(dist*2 + boundrad)
+	=

+	--print("GetMeshPreview",boundrad,res,dist)
+	local gfx =3D CreateRootGfx3D(name_scenemanager)
+	gfx:SetMesh(meshname)
+
+--	gfx:SetPosition(0,-1,-dist)
+	gfx:SetPosition(0.5,-1,-dist);
+
+	local qw,qx,qy,qz =3D Quaternion.fromAngleAxis(angv,1,0,0)
+	gfx:SetOrientation(Quaternion.Mul(qw,qx,qy,qz,Quaternion.fromAngleAxis(an=
gh + 180*gfDeg2Rad,0,1,0)))
+	tex:Update()
+	cam:Destroy()
+	vp:Destroy()
+	-- TODO : DestroySceneManager(name_scenemanager)
+	return name_texture,tex
+end
+
+------------------------------------------ the former parts are copied fro=
m lugre and modified, should be merged into lugre -------------------------=
------------------



From no-reply at zwischenwelt.org  Sat Oct  6 17:23:06 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 15:23:06 -0000
Subject: [Iris-commit] [IRIS] r1450 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20071006152306.491041C18120@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Oct  6 17:23:05 2007
New Revision: 1450

Log:
character riding horse in offline mode tilefreetest

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Sat Oct  6 17:23:05 2007
@@ -37,6 +37,7 @@
 =

 gTileFreeWalk =3D {}
 =

+kFreeWalkMouseSlowArea =3D 100
 =

 =

 kTileFreeTestMobile =3D {artid=3D400,hue=3D33780, content=3D{
@@ -45,6 +46,7 @@
 		[16]=3D{artid=3D8269,hue=3D1147,animid=3D906},[27]=3D{artid=3D3701,hue=
=3D0,animid=3D422},
 		[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252,hue=
=3D1147,animid=3D701},
 		[21]=3D{artid=3D3701,hue=3D0,animid=3D422},}} =

+		=

 =

 -- ##### ##### ##### ##### ##### init
 =

@@ -62,7 +64,8 @@
 	self.pos_clientside =3D {0,0,0}
 	self.pos_lastconfirmed =3D {0,0,0}
 	self.pos_lastrequested =3D {0,0,0}
-	=

+end
+function gTileFreeWalk:OnStartInGame ()
 	if (true) then
 		self.sDebugMarkerMeshName_Big	=3D MakeSphereMesh(11,11,0.2,0.2,0.2)
 		self.sDebugMarkerMeshName_Dir	=3D MakeSphereMesh(11,11,0.1,0.1,0.1)
@@ -76,6 +79,7 @@
 =

 	RegisterStepper(function () gTileFreeWalk:Step() end) =

 end
+RegisterListener("Hook_StartInGame",function () gTileFreeWalk:OnStartInGam=
e() end)
 RegisterListener("Hook_PreLoad",function () gTileFreeWalk:Init() end)
 =

 =

@@ -100,6 +104,9 @@
 	local bWalkBackwards	=3D gKeyPressed[key_down]		-- WalkTurn( 4) end
 	local bTurnLeft			=3D gKeyPressed[key_left]		-- WalkTurn(-1) end
 	local bTurnRight		=3D gKeyPressed[key_right]	-- WalkTurn( 1) end
+	local fRequestedSpeed =3D 0
+	local fRequestedDirX,fRequestedDirY =3D 0,0
+	local bRunRequested =3D false
 	=

 	-- hold rightmouse button to walk in mouse direction (depends on center o=
f screen, works good for 3rd person cam)
 	local bMoved =3D false
@@ -110,13 +117,16 @@
 		local dx,dy,pixel_dist_from_center =3D self:GetCurrentMouseDir() =

 		--local x,y,z =3D self:MousePickPos()
 		=

-		local slowarea_pixels =3D 50
+		local slowarea_pixels =3D kFreeWalkMouseSlowArea
+		bRunRequested =3D pixel_dist_from_center > slowarea_pixels
 		local slowarea_factor =3D math.min(1.0,pixel_dist_from_center / slowarea=
_pixels) -- mouse near center : move slow
 		self.movedirx =3D dx
 		self.movediry =3D dy
-		local maxspeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry,0=
) * gSecondsSinceLastFrame
-		x =3D x + self.movedirx * maxspeed * slowarea_factor
-		y =3D y + self.movediry * maxspeed * slowarea_factor
+		local maxspeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry,0)
+		fRequestedSpeed =3D maxspeed * slowarea_factor
+		fRequestedDirX,fRequestedDirY =3D dx,dy
+		x =3D x + self.movedirx * fRequestedSpeed * gSecondsSinceLastFrame
+		y =3D y + self.movediry * fRequestedSpeed * gSecondsSinceLastFrame
 		bMoved =3D true
 	else
 		local angadd =3D 0
@@ -127,17 +137,25 @@
 			self.movedirx =3D dx*cos(angadd) - dy*sin(angadd)
 			self.movediry =3D dx*sin(angadd) + dy*cos(angadd)
 			self.movedirx,self.movediry =3D norm2(self.movedirx,self.movediry)
+			fRequestedDirX,fRequestedDirY =3D self.movedirx,self.movediry
 			bMoved =3D true
 		end
-		local maxspeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry,0=
) * gSecondsSinceLastFrame
-		if (bWalkForward) then
-			x =3D x + self.movedirx * maxspeed
-			y =3D y + self.movediry * maxspeed
-			bMoved =3D true
-		elseif (bWalkBackwards) then
-			x =3D x - self.movedirx * maxspeed
-			y =3D y - self.movediry * maxspeed
-			bMoved =3D true
+		if (bWalkForward or bWalkBackwards) then
+			fRequestedSpeed =3D  self:GetClientSideSpeed(self.movedirx,self.movedir=
y,0)
+			fRequestedDirX,fRequestedDirY =3D self.movedirx,self.movediry
+			local maxspeed =3D fRequestedSpeed * gSecondsSinceLastFrame
+			=

+			if (bWalkForward) then
+				x =3D x + self.movedirx * maxspeed
+				y =3D y + self.movediry * maxspeed
+				bMoved =3D true
+				bRunRequested =3D true
+			elseif (bWalkBackwards) then
+				x =3D x - self.movedirx * maxspeed
+				y =3D y - self.movediry * maxspeed
+				bMoved =3D true
+				bRunRequested =3D true
+			end
 		end
 	end
 	=

@@ -323,6 +341,10 @@
 			if (bSelfConfirmAll) then self:SetPos_LastConfirmed(rx,ry,rz) end -- de=
bug/offline mode only
 		end
 	end
+
+	=

+	self:Impl_StepPlayer(fRequestedSpeed,fRequestedDirX,fRequestedDirY,bRunRe=
quested)
+		=

 end
 =

 =

@@ -393,6 +415,29 @@
 	local x,y,z =3D Renderer3D:UOPosToLocal(xloc,yloc,zloc * 0.1)
 ]]--
 =

+-- fRequestedSpeed is the speed requested by the mousepos/keyboard, might =
not be reached, e.g. when walking against a wall
+function gTileFreeWalk:Impl_StepPlayer (fRequestedSpeed,fRequestedDirX,fRe=
questedDirY,bRunRequested)
+	if (not gTileFreeTestBodyGfx) then =

+		local mobile =3D kTileFreeTestMobile
+		gTileFreeTestBodyGfx =3D CreateBodyGfx()
+		gTileFreeTestBodyGfx:MarkForUpdate(mobile.artid,mobile.hue,mobile.conten=
t)
+		gTileFreeTestBodyGfx:Update()
+	end
+	=

+	print("gTileFreeWalk:Impl_StepPlayer : reqspeed,dx,dy,run",fRequestedSpee=
d,fRequestedDirX,fRequestedDirY,bRunRequested)
+	local bMoving,bTurning,bWarMode,bRunFlag =3D false,false,false,false
+	bMoving =3D fRequestedSpeed > 0
+	bRunFlag =3D bRunRequested
+	gTileFreeTestBodyGfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
+	=

+	local x,y,z =3D self:GetPos_ClientSide()
+	gTileFreeTestBodyGfx.modelgfx:SetPosition(x,y,z)
+	=

+	if (fRequestedDirX ~=3D 0 or fRequestedDirY ~=3D 0) then
+		local qw,qx,qy,qz =3D Quaternion.getRotation(0,-1,0,fRequestedDirX,fRequ=
estedDirY,0) =

+		gTileFreeTestBodyGfx.modelgfx:SetOrientation(qw,qx,qy,qz)
+	end
+end
 =

 -- returns bx,by,tx,ty
 function gTileFreeWalk:Impl_UOPos2BT (xloc,yloc) return math.floor(xloc/8)=
,math.floor(yloc/8),math.mod(xloc,8),math.mod(yloc,8) end =




From no-reply at zwischenwelt.org  Sat Oct  6 18:07:38 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 16:07:38 -0000
Subject: [Iris-commit] [IRIS] r1451 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20071006160738.3FDA31C18128@zwischenwelt.org>

Author: ghoulsblade
Date: Sat Oct  6 18:07:37 2007
New Revision: 1451

Log:
fix

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Sat Oct  6 18:07:37 2007
@@ -32,6 +32,7 @@
 		gWalkTimeout_MountMovingSpeed =3D 185
 		gWalkTimeout_MountRunningSpeed =3D 95
 		=

+	-- TODO : shift=3Dnorun : gWalk_Running =3D not gKeyPressed[key_lshift]
 	-- TODO : jump
 ]]--
 =

@@ -66,6 +67,7 @@
 	self.pos_lastrequested =3D {0,0,0}
 end
 function gTileFreeWalk:OnStartInGame ()
+	if (not gEnableTileFreeWalk) then return end
 	if (true) then
 		self.sDebugMarkerMeshName_Big	=3D MakeSphereMesh(11,11,0.2,0.2,0.2)
 		self.sDebugMarkerMeshName_Dir	=3D MakeSphereMesh(11,11,0.1,0.1,0.1)



From no-reply at zwischenwelt.org  Sun Oct  7 00:36:23 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 06 Oct 2007 22:36:23 -0000
Subject: [Iris-commit] [IRIS] r1452 - /trunk/data/lua/net/net.mobile.lua
Message-ID: <20071006230015.7629E1C1811D@zwischenwelt.org>

Author: sience
Date: Sun Oct  7 00:36:21 2007
New Revision: 1452

Log:
-UO-Sigena fix (their server don't send the stats.thiting points 4bytes)

Modified:
    trunk/data/lua/net/net.mobile.lua

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Sun Oct  7 00:36:21 2007
@@ -124,7 +124,7 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 	local iPacketSize =3D input:PopNetUint16()
-	local iBytesLeft =3D iPacketSize
+	local iBytesLeft =3D iPacketSize - 3
 	local stats =3D {}
 	=

 	-- returns nil if there are enough bytes left =3D> the "or" clause gets e=
xecuted
@@ -140,13 +140,14 @@
 	function MySave_PopNetUint32 () return MySave_Prepare(4) or input:PopNetU=
int32() end
 =

 	local mobileserial		=3D MySave_PopNetUint32()
+	MySave_Prepare(30)
 	stats.name				=3D input:PopFilledString(30)
 	=

 	stats.curHits			=3D MySave_PopNetUint16()
 	stats.maxHits 			=3D MySave_PopNetUint16()
 	stats.bCanChangeName	=3D MySave_PopNetUint8() ~=3D 0	--(0x1 =3D allowed, =
0 =3D not allowed)
 	stats.flag 				=3D MySave_PopNetUint8()
-	=

+
 	-- more data following
 	if (in_array( stats.flag, {1,3,4,5})) then
 		stats.sex			=3D MySave_PopNetUint8() -- * 0x00 - Male  * 0x01 - Female
@@ -172,14 +173,14 @@
 			stats.maxPet	=3D MySave_PopNetUint8()
 			=

 			if (in_array( stats.flag, {4,5} )) then -- Resistances
-				stats.fireresist	=3D MySave_PopNetUint16()			=

-				stats.coldresist	=3D MySave_PopNetUint16()			=

-				stats.poisonresist	=3D MySave_PopNetUint16()			=

-				stats.energyresist	=3D MySave_PopNetUint16()			=

-				stats.luck			=3D MySave_PopNetUint16()			=

-				stats.minDamage		=3D MySave_PopNetUint16()			=

-				stats.maxDamage		=3D MySave_PopNetUint16()			=

-				stats.tithing		=3D MySave_PopNetUint32()			=

+				stats.fireresist	=3D MySave_PopNetUint16()
+				stats.coldresist	=3D MySave_PopNetUint16()
+				stats.poisonresist	=3D MySave_PopNetUint16()
+				stats.energyresist	=3D MySave_PopNetUint16()
+				stats.luck			=3D MySave_PopNetUint16()
+				stats.minDamage		=3D MySave_PopNetUint16()
+				stats.maxDamage		=3D MySave_PopNetUint16()
+				stats.tithing		=3D MySave_PopNetUint32()
 			end
 		end
 	end



From no-reply at zwischenwelt.org  Sun Oct  7 13:47:05 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 07 Oct 2007 11:47:05 -0000
Subject: [Iris-commit] [IRIS] r1453 - in /trunk/data/lua: lib.3d.map.lua
 lib.loading.lua lib.test.lua
Message-ID: <20071007114706.C9AD21C181DA@zwischenwelt.org>

Author: sience
Date: Sun Oct  7 13:47:04 2007
New Revision: 1453

Log:
-AnalyseStatics bugfixed
-Profiling bugfixed
-x,y < 0 check added to function Renderer3D:CreateMapChunk (x,y) (i noticed=
 that on start minus blocks are loaded, dont know why)
-debuginfos added to statics (because on irisonline map no statics are disp=
layed, curr. dont know why)

Modified:
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.loading.lua
    trunk/data/lua/lib.test.lua

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Sun Oct  7 13:47:04 2007
@@ -109,12 +109,14 @@
 =

 -- coords in chunks
 function Renderer3D:CreateMapChunk (x,y)
+	if ((x < 0) or (y < 0)) then return end	-- we might also check the heighs=
t value !?
+
 	local chunk =3D {}
 	chunk.bIsDead =3D false
 	chunk.miX =3D x
 	chunk.miY =3D y
 	chunk.pStaticGeometryLayers =3D {}
-		=

+
 	local iBlockUO_X =3D x * self.ROBMAP_CHUNK_SIZE
 	local iBlockUO_Y =3D y * self.ROBMAP_CHUNK_SIZE
 	=

@@ -154,6 +156,11 @@
 			for y =3D 0,self.ROBMAP_CHUNK_SIZE-1 do
 				gStaticBlockLoader:Load(iBlockUO_X+x,iBlockUO_Y+y)
 				local iStaticCount =3D gStaticBlockLoader:Count() -- operates on the b=
lock that was last loaded using :Load()
+
+				printdebug("static","iStaticCount=3D"..iStaticCount)
+				printdebug("static","iBlockUO_X=3D"..iBlockUO_X.." iBlockUO_Y=3D"..iBl=
ockUO_Y)
+				printdebug("static","BlockX=3D"..iBlockUO_X+x.." BlockY=3D"..iBlockUO_=
Y+y)
+
 				for i =3D 0,iStaticCount-1 do
 					iTileTypeID,iX,iY,iZ,iHue =3D gStaticBlockLoader:GetStatic(i) -- oper=
ates on the block that was last loaded using :Load()
 					local entity =3D {}
@@ -313,7 +320,7 @@
 		-- blend out layers above player head if inside
 		if (playerIsInside) then myLayer =3D playerheadpos end
 	end
-	=

+
 	-- only update if changed
 	if (self.giBlendOutCurZ ~=3D myLayer or self.gbBlendOutTerrainVisible ~=
=3D bTerrainVisible) then
 		self.giBlendOutCurZ =3D myLayer

Modified: trunk/data/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.loading.lua (original)
+++ trunk/data/lua/lib.loading.lua Sun Oct  7 13:47:04 2007
@@ -24,7 +24,7 @@
 =

 	-- if (sCurAction) then print(sCurAction) end
 	if (not bIsPreOgre) then -- ogre not loaded yet, no graphical output
-		Client_SetBottomLine(sCurAction or "")
+--		Client_SetBottomLine(sCurAction or "")
 		Client_RenderOneFrame()
 	end
 	=


Modified: trunk/data/lua/lib.test.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.test.lua (original)
+++ trunk/data/lua/lib.test.lua Sun Oct  7 13:47:04 2007
@@ -86,8 +86,8 @@
 =

 function AnalyseStatics ()
 	-- count how often every type of static occurs on the map
-	=

-	gMapInfo =3D xmlchild(xmlchild(LuaXML_ParseFile(datapath.."xml/Maps.xml")=
,"MAPS"),"MAP",gMapIndex)
+	gMapInfo =3D Check_Map(gMapIndex,"xml/Maps.xml")
+--	gMapInfo =3D xmlchild(xmlchild(LuaXML_ParseFile(datapath.."xml/Maps.xml=
"),"MAPS"),"MAP",gMapIndex)
 	print("gMapInfo",gMapInfo)
 	local mapfilename=3D	 xmlchild(gMapInfo,"MAPFILENAME")[1]
 	local mapheight=3D	 xmlchild(gMapInfo,"HEIGHT")[1]



From no-reply at zwischenwelt.org  Sun Oct  7 18:20:57 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 07 Oct 2007 16:20:57 -0000
Subject: [Iris-commit] [IRIS] r1454 - /trunk/startbinary.sh
Message-ID: <20071007162057.A37921C181DA@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Oct  7 18:20:56 2007
New Revision: 1454

Log:
added export LD_LIBRARY_PATH to startbinary.sh

Modified:
    trunk/startbinary.sh

Modified: trunk/startbinary.sh
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/startbinary.sh (original)
+++ trunk/startbinary.sh Sun Oct  7 18:20:56 2007
@@ -3,5 +3,6 @@
 #../src/irisogre
 # start, and transmit up to 8 parameters (i don't know how to transmit all=
, and 8 should be enough for a while)
 LD_LIBRARY_PATH=3D/usr/local/lib/ =

+export LD_LIBRARY_PATH=3D/usr/local/lib/ =

 ../linuxbin/iris $1 $2 $3 $4 $5 $6 $7 $8 =

 popd



From no-reply at zwischenwelt.org  Mon Oct  8 01:11:48 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 07 Oct 2007 23:11:48 -0000
Subject: [Iris-commit] [IRIS] r1455 - /trunk/src/data.cpp
Message-ID: <20071007231148.1DF071C181DA@zwischenwelt.org>

Author: ghoulsblade
Date: Mon Oct  8 01:11:47 2007
New Revision: 1455

Log:
safety mask for offset and length in static loader

Modified:
    trunk/src/data.cpp

Modified: trunk/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data.cpp (original)
+++ trunk/src/data.cpp Mon Oct  8 01:11:47 2007
@@ -469,7 +469,7 @@
 		index =3D mpDiffLookupFile->Lookup(index);
 		=

 		RawIndex* pRawIndex =3D mpDiffIndexedFullFile->mIndexFile.GetRawIndex(in=
dex);
-		if (!IsIndexValid(pRawIndex) || pRawIndex->miOffset + pRawIndex->miLengt=
h > mpDiffIndexedFullFile->miFullFileSize) return 0; // index must be valid=
, and must point to a valid rawblock
+		if (!IsIndexValid(pRawIndex) || (pRawIndex->miOffset & 0x0fffFFFF) + (pR=
awIndex->miLength & 0x0fffFFFF) > mpDiffIndexedFullFile->miFullFileSize) re=
turn 0; // index must be valid, and must point to a valid rawblock
 		mLastStaticBlock.mpRawIndex =3D pRawIndex;
 		mLastStaticBlock.mpRawStaticList =3D (RawStatic*)(mpDiffIndexedFullFile-=
>mpFullFileBuffer + pRawIndex->miOffset);
 		mLastStaticBlock.miX =3D iX;
@@ -477,7 +477,7 @@
 	} else {
 		// normal unpatched data
 		RawIndex* pRawIndex =3D mIndexFile.GetRawIndex(index);
-		if (!IsIndexValid(pRawIndex) || pRawIndex->miOffset + pRawIndex->miLengt=
h > miFullFileSize) return 0; // index must be valid, and must point to a v=
alid rawblock
+		if (!IsIndexValid(pRawIndex) || (pRawIndex->miOffset & 0x0fffFFFF) + (pR=
awIndex->miLength & 0x0fffFFFF) > miFullFileSize) return 0; // index must b=
e valid, and must point to a valid rawblock
 		mLastStaticBlock.mpRawIndex =3D pRawIndex;
 		mLastStaticBlock.mpRawStaticList =3D (RawStatic*)(mpFullFileBuffer + pRa=
wIndex->miOffset);
 		mLastStaticBlock.miX =3D iX;



From no-reply at zwischenwelt.org  Tue Oct  9 03:15:46 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 09 Oct 2007 01:15:46 -0000
Subject: [Iris-commit] [IRIS] r1456 - in /trunk/data: ./ lua/ lua/net/
	lua/obj/
Message-ID: <20071009020021.520CC1C1804D@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Oct  9 03:15:45 2007
New Revision: 1456

Log:
tilefree walk works ingame, a few issues remain to be fixed, but it should =
work most of the time, probably alos fixed some issues with the walk code a=
long the way

Added:
    trunk/data/lua/lib.oldwalk.lua
    trunk/data/old_walk_notes.txt
Modified:
    trunk/data/lua/lib.3d.cam.lua
    trunk/data/lua/lib.3d.mobile.lua
    trunk/data/lua/lib.3d.walksmooth.lua
    trunk/data/lua/lib.debugmenu.lua
    trunk/data/lua/lib.input.iris.lua
    trunk/data/lua/lib.keybinds.lua
    trunk/data/lua/lib.protocol.lua
    trunk/data/lua/lib.tilefreewalk.lua
    trunk/data/lua/lib.uoids.lua
    trunk/data/lua/lib.walking2.lua
    trunk/data/lua/main.lua
    trunk/data/lua/net.login.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/net/net.mobile.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua
    trunk/data/old_mobileanim_notest.txt

Modified: trunk/data/lua/lib.3d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.cam.lua (original)
+++ trunk/data/lua/lib.3d.cam.lua Tue Oct  9 03:15:45 2007
@@ -199,17 +199,7 @@
 	end
 end
 =

-function Renderer3D:GetExactLocalPos ()
-	if (gEnableTileFreeWalk) then return gTileFreeWalk:GetExactLocalPos() end
-	local playermobile =3D GetPlayerMobile()
-	if (playermobile and playermobile.bodygfx and playermobile.bodygfx.modelg=
fx) then
-		local x,y,z =3D playermobile.bodygfx.modelgfx:GetDerivedPosition()
-		return x,y,z
-	end
-	local x,y,z =3D GetPlayerPos()
-	if (x) then x,y,z =3D Renderer3D:UOPosToLocal(x+0.5,y+0.5,z*0.1) end
-	return x,y,z
-end
+function Renderer3D:GetExactLocalPos () return gTileFreeWalk:GetExactLocal=
Pos() end
 =

 -- can return floating point block position
 function Renderer3D:UpdateCompass()
@@ -218,8 +208,10 @@
 	=

 	-- if in third person, center compass on player instead of on cam
 	if (Renderer3D.gCamMode =3D=3D Renderer3D.kCamMode_Third) then
-		local x,y,z =3D GetPlayerPos()
-		if (x) then return ax, x/8, y/8, xmirror end
+		local x,y,z =3D self:GetExactLocalPos()
+		local xloc,yloc,zloc =3D self:LocalToUOPos(x,y,z*10)
+		--~ local xloc,yloc,zloc =3D GetPlayerPos()
+		if (xloc) then return ax, xloc/8, yloc/8, xmirror end
 	end
 		=

 	local camx,camy,camz =3D GetMainCam():GetPos()

Modified: trunk/data/lua/lib.3d.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.mobile.lua (original)
+++ trunk/data/lua/lib.3d.mobile.lua Tue Oct  9 03:15:45 2007
@@ -213,6 +213,9 @@
 	=

 	self:UpdateMobileVisibility(mobile)
 	self:WalkSmoothUpdate(mobile)
+	=

+	--~ print("Renderer3D:UpdateMobile",mobile,IsPlayerMobile(mobile),mobile.=
xloc,mobile.yloc,mobile.zloc)
+	if (IsPlayerMobile(mobile)) then gTileFreeWalk:NotifyPlayerMobileUpdate(m=
obile) end
 end
 =

 function Renderer3D:UpdateMobilePos (mobile,x,y,z,qw,qx,qy,qz)
@@ -236,12 +239,18 @@
 	-- animation stuff
 	self:WalkSmoothStep(mobile)
 	=

-	if (mobile.bodygfx) then =

-		local bMoving	=3D mobile.walksmooth_moving
-		local bTurning	=3D mobile.walksmooth_turning
-		local bWarMode 	=3D TestBit(mobile.flag,kMobileFlag_WarMode) -- combat
-		local bRunFlag 	=3D TestBit(mobile.dir,kWalkFlag_Run)
-		mobile.bodygfx:SetState(bMoving,bTurning,bWarMode,bRunFlag) =

+	=

+	-- clientside anims by state
+	if (IsPlayerMobile(mobile)) then =

+		-- handled by lib.tilefreewalk.lua
+	else
+		if (mobile.bodygfx) then =

+			local bMoving	=3D mobile.walksmooth_moving
+			local bTurning	=3D mobile.walksmooth_turning
+			local bWarMode 	=3D TestBit(mobile.flag,kMobileFlag_WarMode) -- combat
+			local bRunFlag 	=3D TestBit(mobile.dir,kWalkFlag_Run)
+			mobile.bodygfx:SetState(bMoving,bTurning,bWarMode,bRunFlag) =

+		end
 	end
 =

 	-- chat text over player head

Modified: trunk/data/lua/lib.3d.walksmooth.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.walksmooth.lua (original)
+++ trunk/data/lua/lib.3d.walksmooth.lua Tue Oct  9 03:15:45 2007
@@ -1,22 +1,7 @@
 -- handles walk smoothing
 -- see also lib.granny.lua lib.bodygfx.lua
-
---[[
-TODO : from net.walk.lua
-gWalkTimeout_MoveingSpeed =3D 370
-gWalkTimeout_RunningSpeed =3D 175
-gWalkTimeout_MountMovingSpeed =3D 185
-gWalkTimeout_MountRunningSpeed =3D 95
-
-see also
-	gLayerType.kLayer_Mount 		=3D hex2num("0x19") -- (horse, ostard, etc)
-	gLayerType.kLayer_TwoHanded 	=3D hex2num("0x02")
-	kPacket_Animation	-- [0x6e] 14 Bytes
-	gActWarmode =3D [gWarmode_Normal,gWarmode_Combat]
-	mobile flag ? WarMode =3D 0x40,
-]]--
---print("animinfo",animid,mobile.walksmooth_moving,mobile.walksmooth_turni=
ng,sprintf("0x%02x",mobile.dir))
-
+-- see also net.walk.lua
+-- see also lib.tilefreewalk.lua
 =

 -- called from Renderer3D:UpdateMobile, not every frame
 function Renderer3D:WalkSmoothUpdate (mobile)
@@ -46,6 +31,7 @@
 end
 =

 function Renderer3D:WalkSmoothStep (mobile)
+	if (IsPlayerMobile(mobile)) then return end
 	mobile.walksmooth_moving =3D false
 	mobile.walksmooth_turning =3D false
 	if (not mobile.gfx3d_walksmooth_last_time) then return end
@@ -70,8 +56,8 @@
 	=

 	-- optimal motiontime
 	--local myturntime =3D gWalkTimeout_DirectionChange
-	local myturntime =3D gWalkTimeout_MoveingSpeed -- take slow turn
-	local motiontime_opt =3D bRunning and gWalkTimeout_RunningSpeed or gWalkT=
imeout_MoveingSpeed
+	local myturntime =3D gWalkTimeout_MovingSpeed -- take slow turn
+	local motiontime_opt =3D bRunning and gWalkTimeout_RunningSpeed or gWalkT=
imeout_MovingSpeed
 	if (mobile.walksmooth_turning and (not mobile.walksmooth_moving)) then mo=
tiontime_opt =3D myturntime end
 	=

 	-- last real motiontime
@@ -110,6 +96,10 @@
 	Renderer3D:UpdateMobilePos(mobile,x,y,z,qw,qx,qy,qz)
 end
 =

+function Renderer3D:NotifyPlayerTeleported ()
+	self:WalkSmoothReset(GetPlayerMobile())
+end
+
 -- used when teleported
 function Renderer3D:WalkSmoothReset (mobile)
 	if (not mobile) then return end
@@ -126,10 +116,6 @@
 	mobile.gfx3d_walksmooth_last_time =3D nil
 end
 =

-function Renderer3D:NotifyPlayerTeleported ()
-	self:WalkSmoothReset(GetPlayerMobile())
-end
-
 function Renderer3D:SetSimpleMobilePos (mobile)
 	local x,y,z =3D Renderer3D:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zl=
oc * 0.1)
 	local ang_in_degrees =3D (mobile.dir + 0) * 45.0

Modified: trunk/data/lua/lib.debugmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.debugmenu.lua (original)
+++ trunk/data/lua/lib.debugmenu.lua Tue Oct  9 03:15:45 2007
@@ -257,9 +257,6 @@
 	cam:SetNearClipDistance(0.01) -- old : 1
 	--cam:SetFarClipDistance(2000) -- ogre defaul : 100000
 	=

-	gPlayerXLoc =3D 0
-	gPlayerYLoc =3D 0
-	gPlayerZLoc =3D 0
 	Renderer3D.gThirdPersonDist =3D 4
 	=

 	-- grid

Modified: trunk/data/lua/lib.input.iris.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.input.iris.lua (original)
+++ trunk/data/lua/lib.input.iris.lua Tue Oct  9 03:15:45 2007
@@ -12,7 +12,6 @@
 RegisterListener("keyup",		function (key) gCurrentRenderer:CamKeyUp(key) e=
nd)
 =

 RegisterListener("mouse_left_down",			function () IrisSingleClick() end)
-RegisterListener("mouse_right_down",		function () MouseStartWalkOnPressed(=
) end)
 RegisterListener("mouse_right_down",		function () IrisRightClick() end)
 RegisterListener("mouse_left_up",			function () MouseUpUODragDrop() end)
 RegisterListener("mouse_right_up",			function () CancelAutoWalk() end)

Modified: trunk/data/lua/lib.keybinds.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.keybinds.lua (original)
+++ trunk/data/lua/lib.keybinds.lua Tue Oct  9 03:15:45 2007
@@ -26,7 +26,7 @@
 		ToggleCompass(state > 0)
 	end end end)
 =

-	-- additional movement key handling in WalkStep() (for pressed keys)
+	-- additional movement key handling in lib.tilefreewalk (for pressed keys)
 	Bind("right",   function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end end end) =

 	Bind("left",    function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end end end) =

 	Bind("down",    function (state) if (not gActiveEditText) then if (state =
> 0) then CancelAutoWalk() end else ChatLine_HistoryUpDown(-1) end end) =


Modified: trunk/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.protocol.lua (original)
+++ trunk/data/lua/lib.protocol.lua Tue Oct  9 03:15:45 2007
@@ -46,9 +46,22 @@
 	dofile(libpath .. "net.world.lua")
 	dofile(libpath .. "net.corpse.lua")
 =

-	=

-	--OldIrisPacketLenTest()
-	=

+
+--OldIrisPacketLenTest()
+
+function DirWrap (iDir) -- wraps into [0,7]
+	while (iDir < 0) do iDir =3D iDir + 8 end
+	while (iDir > 7) do iDir =3D iDir - 8 end
+	return iDir
+end
+
+function DirFromLocalDxDy (dx,dy) =

+	for dir=3D0,7 do if (sign(dx) =3D=3D GetDirXLocal(dir) and sign(dy) =3D=
=3D GetDirYLocal(dir)) then return dir end end
+end
+function DirFromUODxDy (dx,dy) =

+	for dir=3D0,7 do if (sign(dx) =3D=3D GetDirX(dir) and sign(dy) =3D=3D Get=
DirY(dir)) then return dir end end
+end
+
 -- interpret dircode in ogre coordinate system
 function GetDirXLocal (dir) local a =3D GetDirX(dir) return (a=3D=3D0) and=
 0 or (-a) end -- prevent "-0", float supports signed zero
 function GetDirYLocal (dir) return GetDirY(dir) end
@@ -64,12 +77,6 @@
 	if (dir =3D=3D 0 or dir =3D=3D 1 or dir =3D=3D 7) then return -1 -- north
 	elseif (dir =3D=3D 3 or dir =3D=3D 4 or dir =3D=3D 5) then return 1 -- so=
uth
 	else return 0 end
-end
-
-function GetDirCode (dirx,diry) =

-	local res =3D 0
-	for i=3D0,7 do if (GetDirX(i) =3D=3D dirx and GetDirY(i) =3D=3D diry) the=
n res =3D i end end
-	return res
 end
 =

 -- check if packets are complete and handle them

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Tue Oct  9 03:15:45 2007
@@ -1,45 +1,11 @@
--- will be used to add non-tilebased walking
---[[
-	see also net.walk.lua lib.walking2.lua  =

-	iris walk is currently bugged (resync,teleport messages), look at : runuo=
 source : zw : /home/sience
-	lib.keybinds.lua CancelAutoWalk SetAutoWalkTarget , see also WalkStep for=
 pressed keys
-	lib.uoid.lua : limits,  kTileDataFlag_Surface Bridge StairBack StairRight
-	obj.player.lua : NotifyTeleport() -> ResetWalkQueue()
-	net.mobile.lua:75: kPacket_Equipped_MOB, ResetWalkQueue()
-	lib.input.iris.lua : right-hold : MouseStartWalkOnPressed()
-	net.other.lua : fastwalkstack   kPacket_Generic_SubCommand_SpeedMode ?
-	lib.walking2.lua net.walk.lua
-	player and walk files : SetPlayerPos
-	=

-	todo : later : autowalk : follow mobile etc, see old WalkStep() in net.wa=
lk.lua
-	=

-	-- TODO : uo tricky because you can walk diagonally between two obstacles
-		-- during walking diagonally the rounded position will probably be on a =
blocked tile !
-		-- walkrequest to blocked pos may not be sent
-	=

-	-- TODO : capsule all uo specific stuff so that this lib is usable in oth=
er projects
-	-- TODO : 3 debugmarkers : a) clienside pos, b) last-walk-request pos c) =
last position confirmed by server
-	-- TODO : uo-specific(capsule me) check walk-key stack and handling of bl=
ocked/teleport events
-	-- TODO : smooth clientside speed, even if server lags a bit and then sen=
ds multiple confirmations at once
-	-- TODO : util to get heightfieldpos ? (terrain only ? statics ? startz+t=
racedown ? generic raytrace util ? ...)
-	-- TODO : util to cache current pos and the 8 surrounding heights (lib.wa=
lking2.lua)
-	=

-	-- TODO : reset if client is near the center of a blocked tile (r=3D0.1)
-	-- TODO   bRunning and gWalkTimeout_RunningSpeed or gWalkTimeout_MoveingS=
peed
-	old : =

-		gWalkTimeout_MoveingSpeed =3D 370
-		gWalkTimeout_RunningSpeed =3D 175
-		gWalkTimeout_MountMovingSpeed =3D 185
-		gWalkTimeout_MountRunningSpeed =3D 95
-		=

-	-- TODO : shift=3Dnorun : gWalk_Running =3D not gKeyPressed[key_lshift]
-	-- TODO : jump
-]]--
+-- non-tilebased walking
+-- see also net.walk.lua lib.walking2.lua
+-- TODO : jump clientside ? auto-chat *jump* + recognized by other iris cl=
ients ?  hack anim by reverse die-backw ? blend sit ? ride ?
+
 =

 gTileFreeWalk =3D {}
 =

 kFreeWalkMouseSlowArea =3D 100
-
 =

 kTileFreeTestMobile =3D {artid=3D400,hue=3D33780, content=3D{
 		{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount},
@@ -53,9 +19,7 @@
 =

 =

 function gTileFreeWalk:Init ()
-	if (not gEnableTileFreeWalk) then return end -- set in config.lua : gEnab=
leTileFreeWalk =3D true
 	if (gCurrentRenderer ~=3D Renderer3D) then return end
-	self.iLastWalkRequestSendTime =3D 0
 	self.pathpoints =3D {}
 	self.debugmarkers =3D {}
 	self.debugmarkergroups =3D {}
@@ -65,22 +29,22 @@
 	self.pos_clientside =3D {0,0,0}
 	self.pos_lastconfirmed =3D {0,0,0}
 	self.pos_lastrequested =3D {0,0,0}
-end
-function gTileFreeWalk:OnStartInGame ()
-	if (not gEnableTileFreeWalk) then return end
+	self:SetPos_All(0,0,0)
+	=

 	if (true) then
 		self.sDebugMarkerMeshName_Big	=3D MakeSphereMesh(11,11,0.2,0.2,0.2)
 		self.sDebugMarkerMeshName_Dir	=3D MakeSphereMesh(11,11,0.1,0.1,0.1)
 	end
-	=

-	self:SetPos_All(0,0,0)
+end
+
+function gTileFreeWalk:OnStartInGame ()
 	if (gStartGameWithoutNetwork) then
 		Renderer3D:ChangeCamMode(Renderer3D.kCamMode_Third)
 		self:SetPos_All(-1675.5,284.5,5.0)
 	end
-
 	RegisterStepper(function () gTileFreeWalk:Step() end) =

 end
+
 RegisterListener("Hook_StartInGame",function () gTileFreeWalk:OnStartInGam=
e() end)
 RegisterListener("Hook_PreLoad",function () gTileFreeWalk:Init() end)
 =

@@ -102,12 +66,12 @@
 function gTileFreeWalk:Step	()
 	if (gCurrentRenderer ~=3D Renderer3D) then return end
 	local bWalkInMouseDir	=3D gKeyPressed[key_mouse2]
-	local bWalkForward		=3D gKeyPressed[key_up]		-- WalkForward() end
-	local bWalkBackwards	=3D gKeyPressed[key_down]		-- WalkTurn( 4) end
-	local bTurnLeft			=3D gKeyPressed[key_left]		-- WalkTurn(-1) end
-	local bTurnRight		=3D gKeyPressed[key_right]	-- WalkTurn( 1) end
+	local bWalkForward		=3D (not gActiveEditText) and gKeyPressed[key_up]		=

+	local bWalkBackwards	=3D (not gActiveEditText) and gKeyPressed[key_down]	=

+	local bTurnLeft			=3D (not gActiveEditText) and gKeyPressed[key_left]	=

+	local bTurnRight		=3D (not gActiveEditText) and gKeyPressed[key_right]	=

+	local bSlowWalk			=3D gKeyPressed[key_lshift]
 	local fRequestedSpeed =3D 0
-	local fRequestedDirX,fRequestedDirY =3D 0,0
 	local bRunRequested =3D false
 	=

 	-- hold rightmouse button to walk in mouse direction (depends on center o=
f screen, works good for 3rd person cam)
@@ -126,7 +90,6 @@
 		self.movediry =3D dy
 		local maxspeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry,0)
 		fRequestedSpeed =3D maxspeed * slowarea_factor
-		fRequestedDirX,fRequestedDirY =3D dx,dy
 		x =3D x + self.movedirx * fRequestedSpeed * gSecondsSinceLastFrame
 		y =3D y + self.movediry * fRequestedSpeed * gSecondsSinceLastFrame
 		bMoved =3D true
@@ -139,24 +102,21 @@
 			self.movedirx =3D dx*cos(angadd) - dy*sin(angadd)
 			self.movediry =3D dx*sin(angadd) + dy*cos(angadd)
 			self.movedirx,self.movediry =3D norm2(self.movedirx,self.movediry)
-			fRequestedDirX,fRequestedDirY =3D self.movedirx,self.movediry
 			bMoved =3D true
 		end
 		if (bWalkForward or bWalkBackwards) then
 			fRequestedSpeed =3D  self:GetClientSideSpeed(self.movedirx,self.movedir=
y,0)
-			fRequestedDirX,fRequestedDirY =3D self.movedirx,self.movediry
 			local maxspeed =3D fRequestedSpeed * gSecondsSinceLastFrame
+			if (bSlowWalk) then maxspeed =3D maxspeed * 0.5 end -- TODO : bSlowWalk=
-speed
+			bRunRequested =3D not bSlowWalk
+			bMoved =3D true
 			=

 			if (bWalkForward) then
 				x =3D x + self.movedirx * maxspeed
 				y =3D y + self.movediry * maxspeed
-				bMoved =3D true
-				bRunRequested =3D true
 			elseif (bWalkBackwards) then
 				x =3D x - self.movedirx * maxspeed
 				y =3D y - self.movediry * maxspeed
-				bMoved =3D true
-				bRunRequested =3D true
 			end
 		end
 	end
@@ -303,7 +263,7 @@
 		end
 		=

 		self:SetPos_ClientSide(x,y,z)
-		self:SetDebugMarker("GetPos_ClientSide", x,y,z, self.movedirx,self.moved=
iry,0, 1,1,0)
+		self:UpdateClientPosMarker()
 	end
 	=

 	-- debug markers
@@ -312,41 +272,10 @@
 	local x,y,z =3D self:GetPos_LastRequested()
 	self:SetDebugMarker("GetPos_LastRequested", x,y,z, 0,0,0, 0,0,1)
 	=

-	=

-
-	-- send walk requests to server
-	local iTimeSinceLastWalkRequest =3D gMyTicks - self.iLastWalkRequestSendT=
ime
-	local iWalkRequestInterval =3D self:GetWalkRequestInterval()
-	if (iTimeSinceLastWalkRequest >=3D iWalkRequestInterval) then
-		if (self:PathPoint_HasNext()) then -- only check for send if we want to =
send walk requests =

-			self.iLastWalkRequestSendTime =3D (iTimeSinceLastWalkRequest   > 2*iWal=
kRequestInterval) and gMyTicks or =

-											(self.iLastWalkRequestSendTime + iWalkRequestInterval) -- compe=
nsate low framerates a bit
-			=

-			-- todo : pathpoints can be impassable, happens during diagonal walk, d=
on't send walk requests to those
-			-- determine the "next" position for the request, summarize as much int=
o one step as possible
-			local lx,ly,lz =3D self:GetPos_LastRequested()
-			local rx,ry,rz
-			local i =3D 1
-			while (self:PathPoint_HasNext()) do -- go to the furthes path point tha=
t can be reached in one step (diag)
-				local x,y,z =3D self:PathPoint_GetNext()
-				if (math.abs(x-lx) > 1 or math.abs(y-ly) > 1) then break end -- adjact=
ed ? (todo : check if walk possible ?)
-				rx,ry,rz =3D x,y,z
-				self:PathPoint_Pop()
-			end
-			self:SetPos_LastRequested(rx,ry,rz)
-			=

-			-- todo : send request
-			--print("walk request to ",rx,ry,rz,iTimeSinceLastWalkRequest,iWalkRequ=
estInterval)
-		=

-			-- confirm here if there is no server
-			local bSelfConfirmAll =3D gStartGameWithoutNetwork
-			if (bSelfConfirmAll) then self:SetPos_LastConfirmed(rx,ry,rz) end -- de=
bug/offline mode only
-		end
-	end
-
-	=

-	self:Impl_StepPlayer(fRequestedSpeed,fRequestedDirX,fRequestedDirY,bRunRe=
quested)
-		=

+	-- send walk requests to server if possible
+	self:Impl_WalkRequestStep(bRunRequested)
+	=

+	self:Impl_StepPlayer(fRequestedSpeed,bRunRequested)
 end
 =

 =

@@ -394,73 +323,172 @@
 =

 -- ##### ##### ##### ##### ##### implementation (currently uo specific, wi=
ll later be inserted from extern)
 =

---[[
-	z					=3D GetAbsTile(bx*8+tx,by*8+ty) -- access gGroundBlockLoader
-	z 					=3D AverageGroundHeight(bx,by,tx,ty) -- average edges
-	bIsWalkable,iNewZ	=3D GetNearestGroundLevel(bx,by,tx,ty,iStartZ,iDir) =

-		-- iDir is only used for diagonal here, but the passed in position is th=
e TARGET position that is to be checked
-		-- iStartZ must be rounded
-	=

-
-	request.onSuccess_XLoc =3D tx + GetDirX(gPlayerDir)
-	request.onSuccess_YLoc =3D ty + GetDirY(gPlayerDir)
-	request.onSuccess_ZLoc =3D tz
-
-	request.bClientSidePassable, request.onSuccess_ZLoc =3D GetNearestGroundL=
evel(
-								math.floor(request.onSuccess_XLoc/8), =

-								math.floor(request.onSuccess_YLoc/8), =

-								math.mod(request.onSuccess_XLoc,8), =

-								math.mod(request.onSuccess_YLoc,8),
-								request.onSuccess_ZLoc, iDir)
-								=

-
-	local x,y,z =3D Renderer3D:UOPosToLocal(xloc,yloc,zloc * 0.1)
-]]--
+function gTileFreeWalk:NotifyPlayerMobileTeleport (mobile)
+	self:Impl_SetToPlayerPos(mobile)
+end
+
+function gTileFreeWalk:NotifyPlayerMobileUpdate (mobile)	=

+	if (not self.bNetPosInit) then self.bNetPosInit =3D true self:Impl_SetToP=
layerPos(mobile) end
+end
+
+function gTileFreeWalk:Impl_SetLastRequestedUOPos (xloc,yloc,zloc)
+	--~ print("Impl_SetLastRequestedUOPos",xloc,yloc)
+	local x,y,z =3D self:UOPosToLocal(xloc,yloc,zloc)
+	self:SetPos_LastRequested(x,y,z)
+	=

+	local maxreached =3D 0
+	for i =3D 1,self:PathPoint_Count() do =

+		local px,py,pz =3D self:PathPoint_GetNth(i)
+		--~ print("Impl_SetLastRequestedUOPos test=3D",px,py,x,y)
+		if (px =3D=3D x and py =3D=3D y) then maxreached =3D i end
+	end
+	if (maxreached =3D=3D 0) then return end
+	--~ print("Impl_SetLastRequestedUOPos maxreached=3D",maxreached)
+	for i =3D 1,maxreached do self:PathPoint_Pop() end
+end
+
+function gTileFreeWalk:Impl_SetLastConfirmedUOPos (xloc,yloc,zloc)
+	self:SetPos_LastConfirmed(self:UOPosToLocal(xloc,yloc,zloc))
+end
+
+
+function gTileFreeWalk:Impl_SetToPlayerPos (mobile)
+	self.movedirx,self.movediry =3D norm2(GetDirXLocal(gPlayerDir),GetDirYLoc=
al(gPlayerDir))
+	self:SetPos_All(self:UOPosToLocal(mobile.xloc,mobile.yloc,mobile.zloc))
+	self:UpdateClientPosMarker()
+end
+
+function gTileFreeWalk:UOPosToLocal (xloc,yloc,zloc)
+	local x,y,z =3D Renderer3D:UOPosToLocal(xloc,yloc,zloc*0.1) -- inverts x
+	return x-0.5, y+0.5, z
+end
+
+function gTileFreeWalk:LocalToUOPos (x,y,z)
+	local xloc,yloc,zloc =3D Renderer3D:LocalToUOPos(x,y,z*10)  -- inverts x
+	return math.floor(xloc),math.floor(yloc),math.floor(zloc)
+end
+
+function gTileFreeWalk:Impl_CanSendWalkRequest ()
+	return true -- TODO : check if fastwalkstack non empty
+end
+
+function WalkLog2 (...) if (gKeyPressed[key_f]) then print("walklog2",unpa=
ck(arg)) end end
+
+function gTileFreeWalk:StuckCheck ()
+	local x,y,z =3D self:GetPos_ClientSide()
+	local rx,ry,rz =3D self:RoundPos(x,y,z)
+	local d =3D len2(x-rx,y-ry)
+	if (d > 0.1) then return end
+	=

+	-- TODO...
+	--~ print("StuckCheck")
+	--~ local x,y,z =3D GetPos_LastConfirmed()
+	--
+end
+
+
+function gTileFreeWalk:Impl_WalkRequestStep (bRunRequested)
+	self:StuckCheck()
+	self:PathPoint_Pop() -- pathpoints aren't currently used
+	if (not Walk_RequestTimeOk()) then return end
+	=

+	local rx,ry,rz =3D self:RoundPos(self:GetPos_ClientSide())
+	local lx,ly,lz =3D self:GetPos_LastRequested()
+	local dx,dy =3D rx-lx,ry-ly
+	=

+	if (dx =3D=3D 0 and dy =3D=3D 0) then return end
+	local iDir =3D DirFromLocalDxDy(dx,dy)
+	if (not iDir) then return end
+	=

+	WalkStep_WalkInDir(iDir,bRunRequested,true)
+	=

+	if (true) then return end
+	self:SetPos_LastConfirmed(rx,ry,rz)
+	=

+	local bWalkForward		=3D (not gActiveEditText) and gKeyPressed[key_up]		=

+	local bWalkBackwards	=3D (not gActiveEditText) and gKeyPressed[key_down]	=

+	local bTurnLeft			=3D (not gActiveEditText) and gKeyPressed[key_left]	=

+	local bTurnRight		=3D (not gActiveEditText) and gKeyPressed[key_right]	=

+	=

+		=

+	if (		bWalkForward) then WalkStep_WalkInDir(gPlayerDir ,true)
+	elseif (	bTurnLeft	) then WalkStep_WalkInDir(gPlayerDir-1,true)
+	elseif (	bTurnRight	) then WalkStep_WalkInDir(gPlayerDir+1,true) =

+	end
+	=

+	=

+	print("player",gPlayerXLoc,gPlayerYLoc,gPlayerDir)
+	self:Impl_SetToPlayerPos(GetPlayerMobile())
+	=

+		=

+	-- self confirm here if there is no server, debug/offline mode only
+	if (gStartGameWithoutNetwork) then self:SetPos_LastConfirmed(rx,ry,rz) re=
turn end
+	=

+	WalkLog2("Impl_WalkRequestStep timeok,haxnext",Walk_RequestTimeOk(),self:=
PathPoint_HasNext())
+	=

+	-- don't calc if request can't be sent yet
+	if (not Walk_RequestTimeOk()) then return end
+	=

+	=

+	local x1,y1,z1 =3D self:PathPoint_GetNth(1)
+	if (not x1) then return end
+	=

+	xloc1,yloc1,zloc1 =3D self:LocalToUOPos(x1,y1,z1)
+	=

+	=

+	--~ if (xloc2 and WalkStep_WalkToPosSimple(xloc2,yloc2,bRunRequested,fals=
e)) then return end
+	print("WalkStep_WalkToPosSimple",xloc1,yloc1,gPlayerXLoc,gPlayerYLoc)
+	WalkStep_WalkToPosSimple(xloc1,yloc1,bRunRequested,false)
+	=

+	-- todo : pathpoints can be impassable, happens during diagonal walk, don=
't send walk requests to those
+	-- determine the "next" position for the request, summarize as much into =
one step as possible
+end
+				=

 =

 -- fRequestedSpeed is the speed requested by the mousepos/keyboard, might =
not be reached, e.g. when walking against a wall
-function gTileFreeWalk:Impl_StepPlayer (fRequestedSpeed,fRequestedDirX,fRe=
questedDirY,bRunRequested)
-	if (not gTileFreeTestBodyGfx) then =

-		local mobile =3D kTileFreeTestMobile
-		gTileFreeTestBodyGfx =3D CreateBodyGfx()
-		gTileFreeTestBodyGfx:MarkForUpdate(mobile.artid,mobile.hue,mobile.conten=
t)
-		gTileFreeTestBodyGfx:Update()
-	end
-	=

-	print("gTileFreeWalk:Impl_StepPlayer : reqspeed,dx,dy,run",fRequestedSpee=
d,fRequestedDirX,fRequestedDirY,bRunRequested)
+function gTileFreeWalk:Impl_StepPlayer (fRequestedSpeed,bRunRequested)
+
 	local bMoving,bTurning,bWarMode,bRunFlag =3D false,false,false,false
 	bMoving =3D fRequestedSpeed > 0
 	bRunFlag =3D bRunRequested
-	gTileFreeTestBodyGfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
+	self.bRunRequested =3D bRunRequested
 	=

 	local x,y,z =3D self:GetPos_ClientSide()
-	gTileFreeTestBodyGfx.modelgfx:SetPosition(x,y,z)
-	=

-	if (fRequestedDirX ~=3D 0 or fRequestedDirY ~=3D 0) then
-		local qw,qx,qy,qz =3D Quaternion.getRotation(0,-1,0,fRequestedDirX,fRequ=
estedDirY,0) =

+	local qw,qx,qy,qz =3D Quaternion.getRotation(0,-1,0,self.movedirx or 0,se=
lf.movediry or -1,0)
+	=

+	-- apply to body
+	if (gStartGameWithoutNetwork) then -- offline mode, show test model
+		if (not gTileFreeTestBodyGfx) then =

+			local mobile =3D kTileFreeTestMobile
+			gTileFreeTestBodyGfx =3D CreateBodyGfx()
+			gTileFreeTestBodyGfx:MarkForUpdate(mobile.artid,mobile.hue,mobile.conte=
nt)
+			gTileFreeTestBodyGfx:Update()
+		end
+		gTileFreeTestBodyGfx:SetState(bMoving,bTurning,bWarMode,bRunFlag)
+		gTileFreeTestBodyGfx.modelgfx:SetPosition(x,y,z)
 		gTileFreeTestBodyGfx.modelgfx:SetOrientation(qw,qx,qy,qz)
-	end
-end
-
--- returns bx,by,tx,ty
-function gTileFreeWalk:Impl_UOPos2BT (xloc,yloc) return math.floor(xloc/8)=
,math.floor(yloc/8),math.mod(xloc,8),math.mod(yloc,8) end =

+	else -- online mode, set mobile pos
+		local mobile =3D GetPlayerMobile()
+		if (mobile) then =

+			Renderer3D:UpdateMobilePos(mobile,x+0.5,y-0.5,z,qw,qx,qy,qz)
+			------ --- TODO : SetState(bMoving,bTurning,bWarMode,bRunFlag)
+			=

+			bWarMode 	=3D TestBit(mobile.flag,kMobileFlag_WarMode) -- combat
+			--~ bRunFlag 	=3D TestBit(mobile.dir,kWalkFlag_Run)
+			if (mobile.bodygfx) then mobile.bodygfx:SetState(bMoving,bTurning,bWarM=
ode,bRunFlag) end
+		end
+	end
+end
 =

 -- input : rounded
 -- read new surrounding height info
 function gTileFreeWalk:Impl_ScanGround (rx,ry,rz)
-	local xloc,yloc,zloc =3D Renderer3D:LocalToUOPos(rx,ry,rz*10)
-	xloc =3D math.floor(xloc)
-	yloc =3D math.floor(yloc)
-	zloc =3D math.floor(zloc)
+	local xloc,yloc,zloc =3D self:LocalToUOPos(rx,ry,rz)
 	=

 	local ox,oy,oz =3D self:PathPoint_GetLast()
 	local iSelfZ =3D nil -- zloc
 	local iComingHereDir
 	local groundcache =3D {}
-	function DirWrap (iDir) -- wraps into [0,7]
-		while (iDir < 0) do iDir =3D iDir + 8 end
-		while (iDir > 7) do iDir =3D iDir - 8 end
-		return iDir
-	end
 	function RegisterZ (ldx,ldy,iNewZ)
 		groundcache[ldx..","..ldy] =3D groundcache[ldx..","..ldy] or (iNewZ and =
(iNewZ*0.1 + Renderer3D.gZ_Factor))
 	end
@@ -486,8 +514,7 @@
 =

 function gTileFreeWalk:Impl_CalcWalkStep (xloc,yloc,zloc,iDir)
 	-- if (xloc =3D=3D 1670 and yloc =3D=3D 283) then return false end
-	local bx,by,tx,ty =3D self:Impl_UOPos2BT(xloc,yloc)
-	local bIsWalkable,iNewZ	=3D GetNearestGroundLevel(bx,by,tx,ty,zloc,iDir)
+	local bIsWalkable,iNewZ	=3D GetNearestGroundLevel(xloc,yloc,zloc,iDir)
 	return bIsWalkable and iNewZ
 end
 =

@@ -504,7 +531,7 @@
 =

 -- world-units (tiles for uo) per second
 -- todo : depends on conditions(stamina,spells,buffs,debuffs...) and on mo=
unt/horse ?
-function gTileFreeWalk:Impl_GetMaxAllowedSpeed		() return 4 end -- TODO  g=
WalkTimeout_MoveingSpeed
+function gTileFreeWalk:Impl_GetMaxAllowedSpeed		() return 1000 / WalkGetIn=
terval(true) end
 function gTileFreeWalk:Impl_GetMaxAllowedTurnRate	() return 45*gfDeg2Rad e=
nd
 =

 -- feedback for thirdpersoncam
@@ -514,7 +541,6 @@
 =

 -- 27.09.2007 : the code that triggers this event has been deactivated, so=
 this should no longer be neccessary
 RegisterListener("Hook_RecenterWorld",function (difx,dify)
-	if (not gEnableTileFreeWalk) then return end
 	print("ERROR, TileFreeWalk : Hook_RecenterWorld not yet implemented")
 	-- todo : move all positons...
 	Crash()
@@ -527,6 +553,7 @@
 function gTileFreeWalk:PathPoint_SetLast	(x,y,z)		self.lastMarkedWalkPos =
=3D {x,y,z} end
 function gTileFreeWalk:PathPoint_GetLast	()			return unpack(self.lastMarke=
dWalkPos) end
 function gTileFreeWalk:PathPoint_GetNext	() return self:PathPoint_GetNth(1=
) end
+function gTileFreeWalk:PathPoint_Count		() return table.getn(self.pathpoin=
ts) end
 function gTileFreeWalk:PathPoint_GetNth		(n) -- n=3D1 for first =3D next
 	if (not self.pathpoints[n]) then return end
 	return unpack(self.pathpoints[n])
@@ -579,8 +606,8 @@
 	self:SetPos_ClientSide(		x,y,z)
 	self:SetPos_LastConfirmed(	x,y,z)
 	self:SetPos_LastRequested(	x,y,z)
+	self.pathpoints =3D {}
 	self:PathPoint_SetLast(		x,y,z)
-	print("todo : init ground")
 end
 =

 =

@@ -588,6 +615,11 @@
 -- ##### ##### ##### ##### ##### debug markers
 =

 =

+		=

+function gTileFreeWalk:UpdateClientPosMarker ()
+	local x,y,z =3D self:GetPos_ClientSide()
+	self:SetDebugMarker("GetPos_ClientSide", x,y,z, self.movedirx,self.movedi=
ry,0, 1,1,0)
+end
 =

 function gTileFreeWalk:DebugMarkerGroup_Clear (groupname)
 	local myarr =3D self.debugmarkergroups[groupname]

Modified: trunk/data/lua/lib.uoids.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.uoids.lua (original)
+++ trunk/data/lua/lib.uoids.lua Tue Oct  9 03:15:45 2007
@@ -7,6 +7,9 @@
 gRace =3D { [1] =3D "Human", [2] =3D "Elf" }
 =

 gMaxHueValue =3D 2999 -- hues.mul has only 2999 values
+
+
+kMobileGhostArtIDs =3D {402,403,607,608,970}
 =

 -- the meaning of mobile.flag
 kMobileFlag_Unknown1		=3D hex2num("0x01")

Modified: trunk/data/lua/lib.walking2.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.walking2.lua (original)
+++ trunk/data/lua/lib.walking2.lua Tue Oct  9 03:15:45 2007
@@ -321,7 +321,8 @@
 -- Can walk the tile, the tile's height and if the tile's a stair
 -- (about 30 in int, or 3.0 in float (*0.1) is the height of a door)
 -- two values are returned: is walkable, new Z Level
-function GetNearestGroundLevel (bx,by,tx,ty,iStartZ,iDir)
+function GetNearestGroundLevel (xloc,yloc,iStartZ,iDir)
+	local bx,by,tx,ty =3D math.floor(xloc/8),math.floor(yloc/8),math.mod(xloc=
,8),math.mod(yloc,8)
 	local Walking_Start =3D Client_GetTicks()
 	printwalkdebug("-------------------")
 	printwalkdebug("GetNearestGroundLevel()")

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Tue Oct  9 03:15:45 2007
@@ -96,6 +96,7 @@
 dofile(libpath .. "filter.art.lua")
 dofile(libpath .. "filter.granny.lua")
 dofile(libpath .. "filter.map.lua")
+dofile(libpath .. "lib.oldwalk.lua")
 =

 --can be removed from release
 dofile(libpath .. "lib.meshexporter.lua")
@@ -268,7 +269,6 @@
 		gCurrentRenderer:UpdateMap()
 		gCurrentRenderer:MousePickStep()
 		StepUODragDrop()
-		WalkStep()
 		PingStep()
 		gCurrentRenderer:CombatGuiStep()
 		if (gCurrentRenderer.MobileAnimStep) then gCurrentRenderer:MobileAnimSte=
p() end

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Tue Oct  9 03:15:45 2007
@@ -175,29 +175,29 @@
 	local input =3D GetRecvFIFO()
 	local id =3D input:PopNetUint8()
 =

-	packet =3D {}
-	packet.serial	=3D input:PopNetUint32()
-	packet.unknown1 =3D input:PopNetUint32()
-	packet.artid	=3D input:PopNetUint16()
-	packet.xloc	=3D input:PopNetUint16()
-	packet.yloc	=3D input:PopNetUint16()
-	packet.unknown0 =3D input:PopNetUint8()
-	packet.zloc	=3D input:PopInt8()
-	packet.dir	=3D input:PopNetUint8()
-
-	packet.unknown2 =3D input:PopNetUint16()
-	packet.unknown3 =3D input:PopNetUint32()
-
-	packet.unknown4 =3D input:PopNetUint32()
-	packet.flag	=3D input:PopNetUint8()
-	packet.notoriety =3D input:PopNetUint8()
-
-	packet.unknown5 =3D input:PopNetUint32()
-	packet.unknown6 =3D input:PopNetUint16()
-	packet.unknown7 =3D input:PopNetUint8()
-	=

-	packet.hue	=3D 0
-	local playerid =3D packet.serial
+	mobiledata =3D {}
+	mobiledata.serial	=3D input:PopNetUint32()
+	mobiledata.unknown1 =3D input:PopNetUint32()
+	mobiledata.artid	=3D input:PopNetUint16()
+	mobiledata.xloc	=3D input:PopNetUint16()
+	mobiledata.yloc	=3D input:PopNetUint16()
+	mobiledata.unknown0 =3D input:PopNetUint8()
+	mobiledata.zloc	=3D input:PopInt8()
+	mobiledata.dir	=3D input:PopNetUint8()
+
+	mobiledata.unknown2 =3D input:PopNetUint16()
+	mobiledata.unknown3 =3D input:PopNetUint32()
+
+	mobiledata.unknown4 =3D input:PopNetUint32()
+	mobiledata.flag	=3D input:PopNetUint8()
+	mobiledata.notoriety =3D input:PopNetUint8()
+
+	mobiledata.unknown5 =3D input:PopNetUint32()
+	mobiledata.unknown6 =3D input:PopNetUint16()
+	mobiledata.unknown7 =3D input:PopNetUint8()
+	=

+	mobiledata.hue	=3D 0
+	local playerid =3D mobiledata.serial
 =

 	--Request Skills and stats
 	Send_ClientQuery(gRequest_Skills,playerid)
@@ -210,9 +210,9 @@
 	Send_UnknownCommand()
 	Send_UnknownSE()
 	=

-	-- TODO : HintStartPosition(packet.xloc, packet.yloc, packet.zloc) hint f=
or campos ?
-	UpdatePlayerBodySerial(packet.serial)
-	CreateOrUpdateMobile(packet)
+	-- TODO : HintStartPosition(mobiledata.xloc, mobiledata.yloc, mobiledata.=
zloc) hint for campos ?
+	UpdatePlayerBodySerial(mobiledata.serial)
+	CreateOrUpdateMobile(mobiledata)
 end
 =

 -- if packet is received we can Start the Game now !

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Tue Oct  9 03:15:45 2007
@@ -151,20 +151,16 @@
 	local subcmd =3D input:PopNetUint16()
 --	printf("NET: Generic_Command id: 0x%02x size: %i subcmd: %i\n",id,size,=
subcmd)
 =

-	-- Init gFastwalkStack with 6 values	(runuo's fifosize 0-255)
+	-- FastWalkInit : 6 keys (runuo's fifosize 0-255)
 	if (subcmd =3D=3D kPacket_Generic_SubCommand_FastWalkInit) then -- 0x01
-		for i =3D 0, 5 do
-			gFastwalkStack[i] =3D input:PopNetUint32()
-			--printf("NET: i: %i fastwalkkey: 0x%08x\n",i,gFastwalkStack[i])
-		end
-		--printf("NET: gFastwalkStack: Number: %i\n",table.getn(gFastwalkStack)+=
1)
-	end
-
-	-- Add key to gFastwalkStack
+		local keys =3D {}
+		for i =3D 1,6 do table.insert(keys,input:PopNetUint32()) end
+		FastWalk_Init(keys)
+	end
+
+	-- FastWalkAddKey
 	if (subcmd =3D=3D kPacket_Generic_SubCommand_FastWalkAddKey) then
-		table.insert( gFastwalkStack, 0, input:PopNetUint32())
-		--printf("NET: new fastwalkkey: 0x%08x\n",gFastwalkStack[0])
-		printf("gFastwalkStack: Number: %i\n",table.getn(gFastwalkStack)+1)
+		FastWalk_PushKey(input:PopNetUint32())
 	end
 =

 	--Subcommand 4: "Close Generic Gump" =


Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Tue Oct  9 03:15:45 2007
@@ -1,75 +1,94 @@
--- packet handlers for walking
--- see also lib.packet.lua and lib.protocol.lua
-
--- TODO : running
--- TODO : does change from run to normal require one packet if dir is kept=
 ?!?
--- TODO : adjust player z level while walking ?!? =

--- TODO : check for update mobile/char packets with playerid
-
-gNextWalkSequenceNumber =3D 0
+-- packet handlers for walking, fastwalk-keystack =

+-- see also Impl_WalkRequestStep in lib.freewalk.lua
+--[[
+	todo : check walksmooth : WalkSmoothUpdate
+	todo : check autowalk, walk to target etc
+	todo : tilefree : check indirect paths (diagonal block trick)
+	todo : set dir =

+	todo : bodygfx : mount : setvisible ?
+	todo : AttackSelectedMobile   SetAutoWalkTarget  =

+	todo : gPlayerXLoc  , gPlayerDir =

+	todo : clean old walk : gLastResyncRequest =

+	todo : net.walk.lua obj.player.lua
+	todo : bSlowWalk-speed
+	todo : NotifyWarmode : bodygfx:setstate
+	todo : reset if client is near the center of a blocked tile (r=3D0.1)
+	todo : does server not only send ok but also pos via mobile update ? (nak=
ed_mob)
+	todo : mouse_right_down walk : on start check if on widget or on mobile (=
see oldwalknotes)
+	todo : if (countarr(gWalkRequests)) then Send_Movement_Resync_Request() e=
nd =

+	=

+	Renderer3D:UpdateMobile:
+		self:UpdateMobileVisibility(mobile)
+
+	function Request_Movement (iDir,bRunning) -- doesn't neccesarily move if =
time wrong... =

+			gNextWalkTime =3D gMyTicks + gWalkTimeout_DirectionChange
+			gNextWalkTime =3D gMyTicks + CalculateWalkTimeout(bRunning)
+			=

+			=

+	lib.keybinds.lua CancelAutoWalk SetAutoWalkTarget , see also WalkStep for=
 pressed keys
+	lib.uoid.lua : limits,  kTileDataFlag_Surface Bridge StairBack StairRight
+	lib.input.iris.lua : right-hold : MouseStartWalkOnPressed()
+	net.other.lua : fastwalkstack   kPacket_Generic_SubCommand_SpeedMode ?
+	lib.walking2.lua net.walk.lua
+	=

+	todo : later : tilefree autowalk : follow mobile, goto pos...
+	=

+	-- TODO : uo tricky because you can walk diagonally between two obstacles
+		-- during walking diagonally the rounded position will probably be on a =
blocked tile !
+		-- walkrequest to blocked pos may not be sent
+]]--
+
 gPlayerDir =3D 0 -- does NOT include runflag, always in [0,7], change of v=
iew dir does require one move packet, the players stays on the same tile
 gPlayerXLoc =3D nil
 gPlayerYLoc =3D nil
 gPlayerZLoc =3D nil
-gLastResyncRequest =3D nil
-gLastResyncRequestTimeout =3D 5000
-gMoveQueue =3D {}
+
+gNextWalkRequestTime =3D 0
+gNextWalkSequenceNumber =3D 0
+gWalkRequests =3D {}
 gFastwalkStack =3D {}
-gLastWalkRequest =3D nil
-gNextWalkTime =3D 0
-gMaxPendingWalkRequests =3D 10
-gDestroyObjectDist =3D 40 -- TODO : adjust when requesting a different vie=
wdist from server
-gDestroyObjectDistSquare =3D gDestroyObjectDist*gDestroyObjectDist
 =

 -- varans walk timeouts in ms
-gWalkTimeout_MoveingSpeed =3D 370
+gWalkTimeout_MovingSpeed =3D 370
 gWalkTimeout_RunningSpeed =3D 175
 gWalkTimeout_MountMovingSpeed =3D 185
 gWalkTimeout_MountRunningSpeed =3D 95
-
 gWalkTimeout_DirectionChange =3D 60
 =

--- playerchar is turning pretty fast when using arrow keys, so we're doing=
 another timeout here to not affect the movement timeout
-gKeyboardTurn_Interval =3D 150
-gKeyboardTurn_NextTurn =3D 0
-
--- if the player is currently running
-
-gWalk_Running =3D true
-
--- to walk alongside an obstacle if the player hits it in a diagonal direc=
tion
-gAutoChangedDirection_From =3D 0
-gAutoChangedDirection_To =3D 0
-gAutoChangedDirection_Timeout =3D 0
-
-function AutoChangedDirectionActive(iDir)
-	return gAutoChangedDirection_Timeout > gMyTicks and gAutoChangedDirection=
_From =3D=3D iDir and gAutoChangedDirection_To =3D=3D gPlayerDir
-end
-
-function WalkTurn (diradd) =

-	if (gKeyboardTurn_NextTurn < gMyTicks) then =

-		if (diradd < 0) then diradd =3D diradd + 8 end
-		Request_Movement(gPlayerDir+diradd, gWalk_Running)
-		gKeyboardTurn_NextTurn =3D gMyTicks + gKeyboardTurn_Interval
-	end
-end
-
-function WalkForward ()
-	Request_Movement(gPlayerDir, gWalk_Running)
-end
+ =

+function WalkLog (...) =

+	local tdiff =3D gLastLogTime and (gMyTicks-gLastLogTime) or 0
+	local prefix =3D sprintf("WalkLog t=3D%5d k=3D%2d r=3D%2d",tdiff,FastWalk=
_CountKeys(),countarr(gWalkRequests))
+	print(prefix,unpack(arg)) =

+	--~ AddFadeLines(prefix..arrdump(arg))
+	gLastLogTime =3D gMyTicks
+end
+
+-- note : according to packetguides, the order of the key-use is not impor=
tant
+function FastWalk_Init		(keyarr)	=

+	WalkLog("FastWalk_Init start") =

+	gFastwalkStack =3D {} =

+	for k,key in pairs(keyarr) do FastWalk_PushKey(key) end =

+	WalkLog("FastWalk_Init end") =

+end
+function FastWalk_PushKey	(key)		WalkLog("FastWalk_PushKey",key) table.ins=
ert(gFastwalkStack,key) end
+function FastWalk_PopKey	()
+	local res =3D FastWalk_HasKey() and table.remove(gFastwalkStack) or 0
+	--WalkLog("FastWalk_PopKey",res)
+	return res =

+end =

+function FastWalk_HasKey	()			return notempty(gFastwalkStack) end =

+function FastWalk_CountKeys	()			return table.getn(gFastwalkStack) end
+
+
 =

 -- returns x,y,z :  absolute tilepos =3D blockpos*8 + reltilepos[0-7]   z =
as int (not multiplied by 0.1 yet)
 function GetPlayerPos () return gPlayerXLoc,gPlayerYLoc,gPlayerZLoc end
 function GetPlayerDir () return gPlayerDir end
 =

-function IsObjectFarEnoughToDestroy (xloc,yloc)
-	local dx =3D xloc-gPlayerXLoc
-	local dy =3D yloc-gPlayerYLoc
-	return dx*dx + dy*dy > gDestroyObjectDistSquare
-end
-
 -- fulldir CAN include runflag
 function SetPlayerPos (xloc,yloc,zloc,fulldir) =

+	--~ WalkLog("SetPlayerPos",xloc,yloc,zloc,fulldir)
 	local dir =3D BitwiseAND(fulldir,hex2num("0x07"))
 	gPlayerDir =3D dir -- change of view dir does require one move packet, th=
e players stays on the same tile
 	gPlayerXLoc =3D xloc
@@ -79,8 +98,6 @@
 	local mobile =3D GetPlayerMobile()
 	if (not mobile) then return end
 	=

-	gCurrentRenderer:BlendOutLayersAbovePlayer()
-
 	-- update the mobile/char/body of the player
 	mobile.xloc =3D xloc
 	mobile.yloc =3D yloc
@@ -88,439 +105,114 @@
 	mobile.dir =3D fulldir
 	mobile:Update()
 	=

-	-- destroy objects outside view range
-	-- dynamics
-	for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic)=
 and IsObjectFarEnoughToDestroy(dynamic.xloc,dynamic.yloc)) then
-		DestroyObjectBySerial(dynamic.serial) =

-	end end
-	-- mobiles
-	for k,mobile in pairs(GetMobileList()) do if (IsObjectFarEnoughToDestroy(=
mobile.xloc,mobile.yloc)) then
-		DestroyObjectBySerial(mobile.serial) =

-	end end
-end
-
--- needed to determine the correct onSuccess_position for a new walk reque=
st when other requests are still pending
-function GetLastPlayerPosOnWalkRequestStack () =

-	if (gLastWalkRequest) then return gLastWalkRequest.onSuccess_XLoc,gLastWa=
lkRequest.onSuccess_YLoc,gLastWalkRequest.onSuccess_ZLoc end
-	return gPlayerXLoc,gPlayerYLoc,gPlayerZLoc
-end
-
---- call this if right (walk on press) button is pressed the first time
-function MouseStartWalkOnPressed ()
-	gCurrentRenderer:MousePick()
-
-	-- dont start rightclickwalking if mobile or widget was clicked
-	if GetWidgetUnderMouse() or (gMousePickFoundHit and gMousePickFoundHit.hi=
ttype =3D=3D kMousePickHitType_Mobile) then =

-		gMouseWalkOnPressed =3D false
-	else
-		gMouseWalkOnPressed =3D true
+	-- handle position update
+	gCurrentRenderer:BlendOutLayersAbovePlayer()
+	DestroyObjectsFarFromPlayer(gPlayerXLoc,gPlayerYLoc)
+end
+
+
+-- checks if enough time has passed since the last request
+function Walk_RequestTimeOk () return gMyTicks >=3D gNextWalkRequestTime e=
nd
+
+-- just look in dir, don't start walking, doesn't need clientside collisio=
n detection
+function WalkStep_TurnToDir		(iDir) if (DirWrap(iDir) ~=3D gPlayerDir) the=
n return ExecWalkRequestIfPossible(iDir,false) end end
+
+-- clientside collision check, returns true if passable
+function WalkStep_CanWalkInDir	(iDir) =

+	iDir =3D DirWrap(iDir)
+	return (GetNearestGroundLevel(gPlayerXLoc + GetDirX(iDir),gPlayerYLoc + G=
etDirY(iDir),gPlayerZLoc,iDir))
+end
+
+-- does collision detection, tries neighboring dirs if direct walk is bloc=
ked
+function WalkStep_WalkInDir		(iDir,bRunFlag,bTrySides) =

+	if (not Walk_RequestTimeOk()) then return end
+	iDir =3D DirWrap(iDir)
+	if (iDir ~=3D gPlayerDir	or 	WalkStep_CanWalkInDir(iDir  )) then return E=
xecWalkRequestIfPossible(iDir  ,bRunFlag) end
+	if (bTrySides and			WalkStep_CanWalkInDir(iDir-1)) then return ExecWalkRe=
questIfPossible(iDir-1,bRunFlag) end
+	if (bTrySides and			WalkStep_CanWalkInDir(iDir+1)) then return ExecWalkRe=
questIfPossible(iDir+1,bRunFlag) end
+end
+
+function WalkStep_WalkToPosSimple	(xloc,yloc,bRunFlag,bTrySides) =

+	if (not Walk_RequestTimeOk()) then return end
+	local dx =3D xloc - gPlayerXLoc
+	local dy =3D yloc - gPlayerYLoc
+	local iDir =3D DirFromUODxDy(dx,dy)
+	WalkLog2("WalkStep_WalkToPosSimple dx,dy,dir",dx,dy,iDir)
+	if (dx =3D=3D 0 and dy =3D=3D 0) then return end -- already there
+	return WalkStep_WalkInDir(iDir,bRunFlag,bTrySides)
+end	=

+
+function WalkGetInterval (bRunFlag)
+	local playermobile =3D GetPlayerMobile()
+	if (not playermobile) then return end
+	local bMount =3D playermobile:GetEquipmentAtLayer(kLayer_Mount)
+	return	 bMount and	(	bRunFlag and gWalkTimeout_MountRunningSpeed	or gWalk=
Timeout_MountMovingSpeed) or =

+						(	bRunFlag and gWalkTimeout_RunningSpeed		or gWalkTimeout_MovingSpee=
d)
+end
+
+-- internal, don't call directly, no check for walkable, only checks for t=
ime
+function ExecWalkRequestIfPossible	(iDir,bRunFlag)
+	if (not Walk_RequestTimeOk()) then return end
+	iDir =3D DirWrap(iDir)
+	local iFullDir =3D BitwiseOR(iDir,bRunFlag and kWalkFlag_Run or 0) -- inc=
ludes runflag
+	=

+	local playermobile =3D GetPlayerMobile()
+	WalkLog2("ExecWalkRequestIfPossible playermobile",playermobile)
+	if (not playermobile) then return end
+	=

+	-- init request
+	local xloc =3D gPlayerXLoc
+	local yloc =3D gPlayerYLoc
+	local zloc =3D gPlayerZLoc
+	=

+	-- calculate wait time and success-pos
+	local iWaitTime =3D gWalkTimeout_DirectionChange -- just turn without wal=
king is quick
+	if (iDir =3D=3D gPlayerDir) then -- walk forward
+		iWaitTime =3D WalkGetInterval(bRunFlag)
+		xloc =3D xloc + GetDirX(gPlayerDir)
+		yloc =3D yloc + GetDirY(gPlayerDir)
+		=

+		local bClientSidePassable
+		bClientSidePassable,zloc =3D GetNearestGroundLevel(xloc,yloc,zloc,gPlaye=
rDir)
+		assert(bClientSidePassable)
 	end
-end
-
--- called every frame
-gAutoWalk =3D false
--- for not walking on rightclick if you only want to close a widget
-gMouseWalkOnPressed =3D false
--- timeout helper for walking on pressed right mousebutton
-gNextAutoWalkCheck =3D 0
--- timeout to next autowalk check on pressed right button
-gNextAutoWalkCheckTimeout =3D 500
--- if this is > 0 and the mobile (given as serial) is existing, autowalk t=
ries to follow the mobile
-gFollowMobile =3D 0
-function WalkStep ()
-	if (gEnableTileFreeWalk) then return end -- see lib.tilefreewalk.lua for =
walkstep handling
-	=

-	-- runnung if shift is pressed
-	gWalk_Running =3D not gKeyPressed[key_lshift]
-	=

-	-- handle keys if not in menu
-	if not gActiveEditText then
-		if gKeyPressed[key_up]		then WalkForward() end
-		if gKeyPressed[key_down]	then WalkTurn( 4) end
-		if gKeyPressed[key_left]	then WalkTurn(-1) end
-		if gKeyPressed[key_right]	then WalkTurn( 1) end
-	end
-	=

-	-- follow target
-	if (gFollowMobile ~=3D 0) then
-		local target =3D GetMobile(gFollowMobile)
-		if target then
-			SetAutoWalkTo(target.xloc, target.yloc,true)
-		else
-			gFollowMobile =3D 0
-		end
-	end
-	=

-	-- right click pressed walk
-	=

-	if gKeyPressed[key_mouse2] and gMouseWalkOnPressed then =

-		-- walk to the cursor
-		--[[if (gNextAutoWalkCheck < gMyTicks) then
-			SetAutoWalkTarget()
-			gNextAutoWalkCheck =3D gMyTicks + gNextAutoWalkCheckTimeout
-			print("AUTOWALK")
-		end]]--
-		=

-		if (not GetWidgetUnderMouse()) then
-			-- walk into the direction of the cursor
-			local mx, my =3D GetMousePos()
-			local vw, vh =3D GetViewportSize()
-		=

-			local Phi =3D gCurrentRenderer:TranslateOsiWalkAngle(math.atan2( my-vh/=
2.0, mx-vw/2.0 ) / gfDeg2Rad + 450.0)
-			while (Phi < 0) do Phi =3D Phi + 360 end
-			while (Phi >=3D 360) do Phi =3D Phi - 360 end
-		=

-			if (mx < vw/4.0) or (mx > vw*3.0/4.0) or (my < vh/4.0) or (my > vh*3.0/=
4.0) then
-				gWalk_Running =3D true
-			else
-				gWalk_Running =3D false
-			end
-		=

-			local Direction
-			if ( Phi >=3D 337.5 ) or ( Phi < 22.5 ) then
-                        	Direction =3D 7
-	                elseif ( Phi >=3D 22.5 ) and ( Phi < 67.5 ) then
-        	                Direction =3D 0
-                	elseif ( Phi >=3D 67.5 ) and ( Phi < 112.5 ) then
-                        	Direction =3D 1
-	                elseif ( Phi >=3D 112.5 ) and ( Phi < 157.5 ) then
-        	        	Direction =3D 2
-                	elseif ( Phi >=3D 157.5 ) and ( Phi < 202.5 ) then
-                        	Direction =3D 3
-	                elseif ( Phi >=3D 202.5 ) and ( Phi < 247.5 ) then
-        	                Direction =3D 4
-                	elseif ( Phi >=3D 247.5 ) and ( Phi < 292.5 ) then
-                        	Direction =3D 5
-	                else --if ( Phi >=3D 292.5 ) and ( Phi < 237.5 ) then
-        	                Direction =3D 6
-			end
-		=

-			Request_Movement( Direction, gWalk_Running )
-		end
-	end
-
-	if (gAutoWalk) then
-		local x,y,z =3D GetPlayerPos()
-		local dx =3D gAutoWalkX - x
-		local dy =3D gAutoWalkY - y
-		if ((dx =3D=3D 0 and dy =3D=3D 0) or (gAutoWalkHaltBefore and math.abs(d=
x) <=3D 1 and math.abs(dy) <=3D 1)) then =

-			CancelAutoWalk()
-			printdebug("walking","autowalk canceled dx=3D"..dx.." dy=3D"..dy)
-		else =

-			if (dx < 0) then dx =3D -1 end
-			if (dx > 0) then dx =3D 1 end
-			if (dy < 0) then dy =3D -1 end
-			if (dy > 0) then dy =3D 1 end
-			WalkOneStep(dx,dy,true) =

-		end
-	end	=

-end
-
--- sets the current mousehit as walk target
-function SetAutoWalkTarget () =

-	gCurrentRenderer:MousePick()
-	if (gMousePickFoundHit and gMousePickFoundHit.hittype ~=3D kMousePickHitT=
ype_Mobile) then
-		gAutoWalk =3D true
-		gAutoWalkX,gAutoWalkY =3D gCurrentRenderer:GetMouseHitTileCoords()
-	end
-end
-
--- sets the given tile coordinates as walk target
--- bHaltBefore : if true, stop one field before the target
-function SetAutoWalkTo (x, y, bHaltBefore) =

-	gAutoWalk =3D true
-	gAutoWalkX, gAutoWalkY =3D x, y
-	gAutoWalkHaltBefore =3D bHaltBefore and true or false
-end
-
--- will follow a given mobile
-function SetFollowMobile (serial)
-	local target =3D GetMobile(serial)
-	if target then
-		gFollowMobile =3D serial
-		SetAutoWalkTo(target.xloc, target.yloc , true)
-	else =

-		gFollowMobile =3D 0
-	end
-end
-
-function CancelAutoWalk () =

-	gAutoWalk =3D false
-	gAutoWalkHaltBefore =3D false
-
-	-- attack the follow target if warmode is activated
-	if (gActWarmode =3D=3D gWarmode_Combat) then
-		printdebug("walking","attack the following mobile: "..gFollowMobile)
-		if (gFollowMobile ~=3D 0) then
-			printdebug("walking",sprintf("CancelAutoWalk Follow Attack: serial=3D0x=
%08x\n",gFollowMobile))
-			Send_AttackReq(gFollowMobile)
-		end
-	end
-
-	gFollowMobile =3D 0
-end
-
-function WalkOneStep (dirx,diry,bRunning) =

-	local dir =3D GetDirCode(dirx,diry)
-	Request_Movement(dir, bRunning)
-end
-
-
-function GetNextFastWalkKey()
-	local fastwalkkey =3D gFastwalkStack[0]
-	if (fastwalkkey) then
-		table.remove(gFastwalkStack, 0)
-		printdebug("walking",sprintf("FastwalkKey removed: 0x%08x\n",fastwalkkey=
))
-		printdebug("walking",sprintf("gFastwalkStack: Number: %i\n", table.getn(=
gFastwalkStack)+1))
-
-		return fastwalkkey
-	else
-		return 0
-	end
-end
-
--- returns the timeout for the chars current walking mode
--- TODO: mounted
-function CalculateWalkTimeout(bRunning)
-	if (bRunning) then
-		return gWalkTimeout_RunningSpeed
-	else
-		return gWalkTimeout_MoveingSpeed
-	end
-end
-
--- Request Player Move from Server, handle checks and anim stuff
--- call this if you want to move
-function Request_Movement (iDir,bRunning)
-	while (iDir < 0) do iDir =3D iDir + 8 end
-	iDir =3D math.mod(iDir,8)
-
-	local mobile =3D GetPlayerMobile()
-	if (not mobile) then return end
-	=

-	-- limit frequency of walk requests
-	-- local timeout =3D gMyTicks - gNextWalkTime
-
-	if (gNextWalkTime < gMyTicks) then
-		-- set the time for the next possible walk request
-		if (gPlayerDir ~=3D iDir and not AutoChangedDirectionActive(iDir)) then
-			-- only turning, just a small timeout to be able to turn the char in a =
certain direction without walking there
-			gNextWalkTime =3D gMyTicks + gWalkTimeout_DirectionChange
-		else
-			gNextWalkTime =3D gMyTicks + CalculateWalkTimeout(bRunning)
-		end
-		=

-		--printdebug("walking",sprintf("WALK IS possible",timeout,gMyTicks,gNext=
WalkTime))
-	else
-		-- to many walk requests, ill ignore this one
-		--printdebug("walking",sprintf("WALK NOT possible",timeout,gMyTicks,gNex=
tWalkTime))
-		return
-	end
-	=

-	Send_Request_Movement (iDir,bRunning)
-end
-
--- sends Request Player Move from Server
-function Send_Request_Movement (iDir,bRunning)
-	local mobile =3D GetPlayerMobile()
-	if (not mobile) then return end
-	if (gLastResyncRequest and gMyTicks - gLastResyncRequest < gLastResyncReq=
uestTimeout) then return end -- resync pending, don't request more movement
-	=

-	-- TODO : wait for ack of last move ? limit precalc ? limited by fastwalk=
 stack ?
-	local request =3D {}
-	request.bClientSidePassable =3D true
-
-	if (gPlayerDir =3D=3D iDir) then
-		request.onSuccess_Dir =3D gPlayerDir
-		request.onSuccess_Run =3D bRunning
-		local tx,ty,tz =3D GetLastPlayerPosOnWalkRequestStack()
-		request.onSuccess_XLoc =3D tx + GetDirX(gPlayerDir)
-		request.onSuccess_YLoc =3D ty + GetDirY(gPlayerDir)
-		request.onSuccess_ZLoc =3D tz
-
-		request.bClientSidePassable, request.onSuccess_ZLoc =3D GetNearestGround=
Level(
-									math.floor(request.onSuccess_XLoc/8), =

-									math.floor(request.onSuccess_YLoc/8), =

-									math.mod(request.onSuccess_XLoc,8), =

-									math.mod(request.onSuccess_YLoc,8),
-									request.onSuccess_ZLoc, iDir)
-	--[[
-	else
-		request.onSuccess_Dir =3D iDir
-		request.onSuccess_Run =3D bRunning
-		local tx,ty,tz =3D GetLastPlayerPosOnWalkRequestStack()
-		request.onSuccess_XLoc =3D tx
-		request.onSuccess_YLoc =3D ty
-		request.onSuccess_ZLoc =3D tz
-	]]--
-									=

-		-- if the tile is not passable and we are walking diagonally we can try =
to turn to a free adjacent tile
-		if (not request.bClientSidePassable and (math.mod(iDir, 2) =3D=3D 1)) th=
en
-			printwalkdebug("diagonal movement blocked, trying to walk alongside")
-			request.onSuccess_XLoc =3D tx
-			request.onSuccess_YLoc =3D ty
-			request.onSuccess_ZLoc =3D tz
-			=

-			iDir =3D math.mod(iDir + 1, 8)
-			request.onSuccess_Dir =3D iDir
-			request.onSuccess_Run =3D bRunning
-			local diagLocX =3D tx + GetDirX(iDir)
-			local diagLocY =3D ty + GetDirY(iDir)
-			request.bClientSidePassable =3D GetNearestGroundLevel(
-									math.floor(diagLocX/8), =

-									math.floor(diagLocY/8), =

-									math.mod(diagLocX,8), =

-									math.mod(diagLocY,8),
-									request.onSuccess_ZLoc, iDir)
-									=

-			if (not request.bClientSidePassable) then
-				-- if the first one wasn't successful try the other one
-				=

-				iDir =3D iDir -2
-				if (iDir < 0) then iDir =3D iDir + 8 end
-				request.onSuccess_Dir =3D iDir
-				request.onSuccess_Run =3D bRunning
-				diagLocX =3D tx + GetDirX(iDir)
-				diagLocY =3D ty + GetDirY(iDir)
-				request.bClientSidePassable =3D GetNearestGroundLevel(
-									math.floor(diagLocX/8), =

-									math.floor(diagLocY/8), =

-									math.mod(diagLocX,8), =

-									math.mod(diagLocY,8),
-									request.onSuccess_ZLoc, iDir)
-			end
-			=

-			-- if we found a way along the obstacle let's save the information to b=
e able to =

-			-- walk in the free direction while the player holds down his mouse, re=
sp. up cursor
-			if (request.bClientSidePassable) then
-				printwalkdebug("autochanged direction successful, walking "..gDirectio=
n[iDir].." instead of "..gDirection[gPlayerDir])
-				-- the direction the player pointed at
-				gAutoChangedDirection_From =3D gPlayerDir
-				-- the free direction
-				gAutoChangedDirection_To =3D iDir
-				-- we should only walk into our new direction while the player is hold=
ing down his mouse and pointing =

-				-- to the original direction
-				gAutoChangedDirection_Timeout =3D gMyTicks + CalculateWalkTimeout(bRun=
ning) + 100
-			end
-		end
-	else
-		-- the mouse is also pointing in another direction than the char is look=
ing at if we are running alongside an obstacle
-		if (AutoChangedDirectionActive(iDir)) then
-			printwalkdebug("autochanged direction is active")
-			-- first check if the direction the mouse is pointing at is free (iDir)
-			local tx,ty,tz =3D GetLastPlayerPosOnWalkRequestStack()
-			request.onSuccess_ZLoc =3D tz
-			local checkLocX =3D tx + GetDirX(iDir)
-			local checkLocY =3D ty + GetDirY(iDir)
-			=

-			request.bClientSidePassable, request.onSuccess_ZLoc =3D GetNearestGroun=
dLevel(
-											math.floor(checkLocX/8), =

-											math.floor(checkLocY/8), =

-											math.mod(checkLocX,8), =

-											math.mod(checkLocY,8),
-											request.onSuccess_ZLoc, iDir)
-									=

-			if (request.bClientSidePassable) then
-				printwalkdebug("mouse direction is free, turning")
-				-- if it's free we're turning to the mouse pointer
-				request.onSuccess_Dir =3D iDir
-				request.onSuccess_Run =3D bRunning
-				request.onSuccess_XLoc =3D tx
-				request.onSuccess_YLoc =3D ty
-				request.onSuccess_ZLoc =3D tz
-				-- disable dir correction
-				gAutoChangedDirection_Timeout =3D 0
-			else
-				-- if our auto chosen direction is free, we're running that way of cou=
rse (gPlayerDir)
-				printwalkdebug("checking autochanged dir "..gDirection[gPlayerDir])
-				request.onSuccess_Dir =3D gPlayerDir
-				request.onSuccess_Run =3D bRunning
-				request.onSuccess_XLoc =3D tx + GetDirX(gPlayerDir)
-				request.onSuccess_YLoc =3D ty + GetDirY(gPlayerDir)
-				request.onSuccess_ZLoc =3D tz
-			=

-				request.bClientSidePassable, request.onSuccess_ZLoc =3D GetNearestGrou=
ndLevel(
-												math.floor(request.onSuccess_XLoc/8), =

-												math.floor(request.onSuccess_YLoc/8), =

-												math.mod(request.onSuccess_XLoc,8), =

-												math.mod(request.onSuccess_YLoc,8),
-												request.onSuccess_ZLoc, gPlayerDir)
-			=

-				if (request.bClientSidePassable) then
-					printwalkdebug("autochanged direction is free, going on")
-					gAutoChangedDirection_Timeout =3D gMyTicks + CalculateWalkTimeout(bRu=
nning) + 100
-				else
-					printwalkdebug("autochanged direction blocked, stopping")
-					gAutoChangedDirection_Timout =3D 0
-				end
-			end
-		else
-			printwalkdebug("normal turn from "..gDirection[gPlayerDir].." to "..gDi=
rection[iDir])
-			request.onSuccess_Dir =3D iDir
-			request.onSuccess_Run =3D bRunning
-			local tx,ty,tz =3D GetLastPlayerPosOnWalkRequestStack()
-			request.onSuccess_XLoc =3D tx
-			request.onSuccess_YLoc =3D ty
-			request.onSuccess_ZLoc =3D tz
-		end
-	end
-	=

-	=

-	if (request.bClientSidePassable) then -- else cancel walk request
-		local pending_walk_request =3D 0
-		for k,v in pairs(gMoveQueue) do pending_walk_request =3D pending_walk_re=
quest + 1 end
-		=

-		if (pending_walk_request > gMaxPendingWalkRequests) then
-			printdebug("walking","too many walk requests pending, requesting resync=
")
-			Send_Movement_Resync_Request()
-		else
-			request.iSeqNum =3D gNextWalkSequenceNumber
-			request.iFastKey =3D GetNextFastWalkKey()		-- 0
-			request.onSuccess_Run =3D bRunning
-			if (bRunning) then iDir=3DBitwiseOR(iDir,kWalkFlag_Run) end
-			gMoveQueue[request.iSeqNum] =3D request
-			gLastWalkRequest =3D request
-
-			-- TODO : register usage and implement check in walk acc
-			-- remember old seq. number
-			gNextWalkSequenceNumber =3D gNextWalkSequenceNumber + 1
-			if (gNextWalkSequenceNumber > 255) then gNextWalkSequenceNumber =3D 1 e=
nd
-
-			local out =3D GetSendFIFO()
-			out:PushNetUint8(kPacket_Request_Movement)
-			out:PushNetUint8(BitwiseOR(request.onSuccess_Dir,request.onSuccess_Run =
and kWalkFlag_Run or 0))
-			out:PushNetUint8(request.iSeqNum)
-			out:PushNetUint32(request.iFastKey)
-			out:SendPacket()
-			printdebug("walking",sprintf("NET: Request_Movement: seq=3D%d fastkey=
=3D0x%08x dir=3D%d suc_x=3D%d suc_y=3D%d\n",request.iSeqNum,request.iFastKe=
y,iDir, request.onSuccess_XLoc, request.onSuccess_YLoc))
-
-			SetPlayerPos(	request.onSuccess_XLoc,
-							request.onSuccess_YLoc,
-							request.onSuccess_ZLoc,
-							BitwiseOR(request.onSuccess_Dir,request.onSuccess_Run and kWalkFlag=
_Run or 0)
-							)
-		end
-	else	=

-		printdebug("walking","walk request canceled from client side (not passab=
le)!")
-		gAutoChangedDirection_Timeout =3D 0
-		CancelAutoWalk()
-	end
-end
-
--- This Packet is send when Client thinks he is out of Sync (basicly: sequ=
ence doesn't fit)
--- The proper response from the server is a Teleport packet kPacket_Telepo=
rt
-function Send_Movement_Resync_Request()
-	printdebug("walking","NET: Movement_Resync_Request")
-	ResetWalkQueue()
-	if (gLastResyncRequest and gMyTicks - gLastResyncRequest < gLastResyncReq=
uestTimeout) then return end
-	gLastResyncRequest =3D gMyTicks
-	printdebug("walking","NET: Movement_Resync_Request (sending)")
+	=

+	-- set next request time
+	gNextWalkRequestTime =3D math.max(gMyTicks,gNextWalkRequestTime + iWaitTi=
me) -- compensate slow fps a bit
+	=

+	-- send packet
+	request =3D {}
+	request.dir =3D iDir
+	request.xloc =3D xloc
+	request.yloc =3D yloc
+	request.zloc =3D zloc
+	request.iFastKey =3D FastWalk_PopKey()
+	request.iSeqNum =3D gNextWalkSequenceNumber
+	--~ WalkLog("SendWalkRequest",sprintf("0x%02x",iFullDir),request.iSeqNum,=
request.iFastKey,request.xloc,request.yloc,request.zloc)
+	SendWalkRequest(iFullDir,request.iSeqNum,request.iFastKey) =

+	gWalkRequests[request.iSeqNum] =3D request
+	=

+	=

+	-- increment walk sequence
+	gNextWalkSequenceNumber =3D gNextWalkSequenceNumber + 1
+	if (gNextWalkSequenceNumber > 255) then gNextWalkSequenceNumber =3D 1 end
+	=

+	-- set player pos
+	SetPlayerPos(xloc,yloc,zloc,iFullDir)
+	gTileFreeWalk:Impl_SetLastRequestedUOPos(xloc,yloc,zloc)
+	return true
+end
+
+-- internal, don't call directly
+function SendWalkRequest (iFullDir,iSeqNum,iFastKey) =

 	local out =3D GetSendFIFO()
-	out:PushNetUint8(kPacket_Accept_Movement_Resync_Request)
-	out:PushNetUint8(0)
-	out:PushNetUint8(0)
+	out:PushNetUint8(kPacket_Request_Movement)
+	out:PushNetUint8(iFullDir)
+	out:PushNetUint8(iSeqNum)
+	out:PushNetUint32(iFastKey)
 	out:SendPacket()
 end
+
 =

 -- Accept Movement Request and or Resync
 -- TODO : change player notority <- check if this is needed
@@ -529,88 +221,51 @@
 	local id =3D input:PopNetUint8()
 	local iSeqNum =3D input:PopNetUint8()
 	local player_status_or_notority =3D input:PopNetUint8()  -- correct use u=
nknown
-	printdebug("walking",sprintf("NET: Accept_Movement_Resync_Request: seq=3D=
%d notority=3D0x%02x\n",iSeqNum,player_status_or_notority))
-
-	local request =3D gMoveQueue[iSeqNum]
+	=

+	local request =3D gWalkRequests[iSeqNum]
 	=

 	if (request) then
-		gMoveQueue[iSeqNum] =3D nil -- request has been handled, remove from que=
ue
-		if (gLastWalkRequest) then
-			if (gLastWalkRequest.iSeqNum =3D=3D iSeqNum) then gLastWalkRequest =3D =
nil end
-		end
+		gWalkRequests[iSeqNum] =3D nil -- request has been handled, remove from =
queue
+		gTileFreeWalk:Impl_SetLastConfirmedUOPos(request.xloc,request.yloc,reque=
st.zloc)
+		-- todo : tilefree : set last confirmed pos
+		--~ WalkLog("kPacket_Accept_Movement ok")
 	else
-		printdebug("walking",sprintf("NET: Accept_Movement_Resync_Request: OUTof=
SYNC! seqnumber : %i\n",iSeqNum))
-		Send_Movement_Resync_Request()	-- is this correct? please test
+		WalkLog("kPacket_Accept_Movement UNKNOWN")
+		Send_Movement_Resync_Request()
 	end
-
-	--[[
-	if last byte is status : =

-	Normal =3D 0x00,
-	Unknown =3D 0x01,
-	CanAlterPaperdoll =3D 0x02,
-	Poisoned =3D 0x04,
-	GoldenHealth =3D 0x08,
-	Unknown2 =3D 0x10,
-	Unknown3 =3D 0x20,
-	WarMode =3D 0x40,
-	Hidden =3D 0x80
-	The CanAlterPaperdoll flag, if enabled in an Open Paperdoll packet (0x88)=
, =

-	allows the player receiving the packet to add and remove the target's clo=
thing.
-
-	if last byte is notoriety :
-	Note: notoriety: 0 =3D invalid/across server line
-	1 =3D innocent (blue)
-	2 =3D guilded/ally (green)
-	3 =3D attackable but not criminal (gray)
-	4 =3D criminal (gray)
-	5 =3D enemy (orange)
-	6 =3D murderer (red)
-	7 =3D Invulnerable/OSI Admin (translucent (like 0x4000 hue))
-	]]--
 end
 =

 -- reset WalkSeq. and Stack
 function ResetWalkQueue ()
+	WalkLog("ResetWalkQueue start")
 	gNextWalkSequenceNumber =3D 0
-	gMoveQueue =3D {}
-	gLastWalkRequest =3D nil
-	gAutoChangedDirection_Timeout =3D 0
-	CancelAutoWalk()
-end
-
---TODOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
+	gWalkRequests =3D {}
+	WalkLog("ResetWalkQueue end")
+end
+
 -- Block Movement Request - reset player to back to location
 function gPacketHandler.kPacket_Block_Movement()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local seqnumber =3D input:PopNetUint8()
-	local player_xloc =3D input:PopNetUint16()
-	local player_yloc =3D input:PopNetUint16()
-	local player_dir =3D input:PopNetUint8()
-	local player_zloc =3D input:PopInt8()
-
-	local fullplayerdir =3D player_dir
-	player_dir =3D BitwiseAND(player_dir,hex2num("0x07"))
-
-	-- Check if Player is already on Teleported Pos
-	if (gPlayerXLoc ~=3D player_xloc or gPlayerYLoc ~=3D player_yloc or
-		gPlayerZLoc ~=3D player_zloc or gPlayerDir ~=3D player_dir) then
-
-		printdebug("walking",sprintf("Block_Movement seqnumber=3D%d player_dir=
=3D%d\n",seqnumber,player_dir))
-		gCurrentRenderer:NotifyPlayerTeleported()
-		SetPlayerPos(player_xloc,player_yloc,player_zloc,fullplayerdir)
-	else
-		printdebug("walking","Player not teleported, because already on the same=
 pos+dir")
-	end
-
+	local input			=3D GetRecvFIFO()
+	local id			=3D input:PopNetUint8()
+	local seqnumber		=3D input:PopNetUint8()
+	local xloc			=3D input:PopNetUint16()
+	local yloc			=3D input:PopNetUint16()
+	local dir			=3D input:PopNetUint8()
+	local zloc			=3D input:PopInt8()
+
+	WalkLog("kPacket_Block_Movement start")
+	ResetWalkQueue()
+	SetPlayerPos(xloc,yloc,zloc,dir)
+	gTileFreeWalk:NotifyPlayerMobileTeleport(GetPlayerMobile())
+	gCurrentRenderer:NotifyPlayerTeleported()
+	=

 	Send_Accept_Block_Movement(seqnumber)
-
-	ResetWalkQueue()
+	WalkLog("kPacket_Block_Movement end")
 end
 =

 -- TODO : is this the same as Send_Movement_Resync_Request ?
 function Send_Accept_Block_Movement(seqnumber)
-	printdebug("walking",sprintf("NET: Send_Accept_Block_Movement: seqnumber=
=3D%i\n", seqnumber))
+	WalkLog("Send_Accept_Block_Movement",seqnumber)
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Accept_Movement_Resync_Request)
 	out:PushNetUint8(seqnumber)
@@ -618,68 +273,52 @@
 	out:SendPacket()
 end
 =

+-- This Packet is send when Client thinks he is out of Sync (basicly: sequ=
ence doesn't fit)
+-- The proper response from the server is a Teleport packet kPacket_Telepo=
rt
+function Send_Movement_Resync_Request()
+	WalkLog("Send_Movement_Resync_Request")
+	-- todo : block too many resync requests by remembering gMyTicks here ?
+	ResetWalkQueue()
+	local out =3D GetSendFIFO()
+	out:PushNetUint8(kPacket_Accept_Movement_Resync_Request)
+	out:PushNetUint8(0)
+	out:PushNetUint8(0)
+	out:SendPacket()
+end
+
 -- Moves Player to Direction
 -- This packet works with the latest clients, but is never used by the ser=
ver.
 -- TODO : Move Player
 function gPacketHandler.kPacket_Move_Player()
-	local input =3D GetRecvFIFO()
-	local id =3D input:PopNetUint8()
-	local player_dir =3D input:PopNetUint8()
-	printdebug("walking",sprintf("NET (todo): Move_Player id: %i player_dir: =
%i\n",id, player_dir))
-end
-
---[[
-request-move
---The values in the enumeration run from 0 (Northeast) to 7 (North).
---When used with a packet (such as the Request Movement packet),
---the flag 0x80 will indicate that the character is running in the specifi=
ed direction.
-
-The current value in a sequence of numbers ranging from 0 to 255.
-The value increases each time the player successfully moves.
-After this value reaches 255, it gets reset to 1 when the player next move=
s and the sequence is repeated.
-
-Note: sequence number starts at 0, after a reset.  However, if 255 is reac=
hed, the next seq # is 1, not 0.
-
-Fastwalk prevention notes: each 0x02 pops the top element from fastwalk ke=
y stack. =

-(0xbf sub1 init. fastwalk stack, 0xbf sub2 pushes an element to stack)
-If stack is empty key value is 0. (=C3=A0 never set keys to 0 in 0xbf sub =
1/2)
-Because client sometimes sends bursts of 0x02's DON'T check for a certain =
top stack value.
-The only safe way to detect fastwalk: push a key after EACH x021, 0x22, (=
=3Dsend 0xbf sub 2) check in 0x02 for stack emptyness.
-If empty -> fastwalk alert.
-Note that actual key values are irrelevant. (just don't use 0)
-Of course without perfect 0x02/0x21/0x22 synch (serverside) it's useless t=
o use fastwalk detection.
-
-Last but not least: fastwalk detection adds 9 bytes per step and player !
-
-The fastwalk prevention key is a number sent by the server into the MOVE A=
CK, =

-telling the client the next key to be used. =

-This is used to prevent exploits where client sends "MOVE" message without=
 waitting for the MOVE ACK from the server. =

-Note: Sequence number starts at 0, is reseted when reaches 255. However, w=
hen it's reseted,
-the next sequence number is 1, not 0. =

-
-0x0A : edit world : for god client, also enables hackmove
-0x32  	Hack Mover  : informs godclient wether hackmove is on?
-0x37  	Move Object : This packet is sent by the god client to move a dynam=
ic object.
-0x62  	Move Static  This packet is sent by the god client to move a static=
 item.
-0x8E  	Move Character  ?? unknown
-0x38  	Follow Move ?? unknown
-
--- from varans walk code
-MovingSpeed =3D 370; -- walk normal  (milliseconds to text packet)
-RunningSpeed =3D 175; -- run normal
-MountMovingSpeed =3D 185; -- walk mount
-MountRunningSpeed =3D 95; -- run mount
-MovingStepsPerField =3D 5;
-RunningStepsPerField =3D 2;
-MountMovingStepsPerField =3D 2;
-MountRunningStepsPerField =3D 1;
-MaxZClimb =3D 20;
-MaxZFall =3D 20;
-
-received lots of kPacket_Stamina 0xA3 : update stamina
-BYTE cmd
-BYTE[4] playerID
-BYTE[2] maxStamina
-BYTE[2] currentStamina
-]]--
-
+	local input			=3D GetRecvFIFO()
+	local id			=3D input:PopNetUint8()
+	local player_dir	=3D input:PopNetUint8()
+	WalkLog("kPacket_Move_Player",player_dir)
+end
+
+
+
+-- called from kPacket_Teleport
+function NotifyTeleport	(mobiledata)
+	--mobiledata.serial
+	--mobiledata.artid
+	--mobiledata.teleport_unknown1
+	--mobiledata.hue
+	--mobiledata.flag
+	--mobiledata.xloc
+	--mobiledata.yloc
+	--mobiledata.teleport_unknown2
+	--mobiledata.dir
+	--mobiledata.zloc
+	=

+	WalkLog("NotifyTeleport start")
+	CreateOrUpdateMobile(mobiledata)
+	UpdatePlayerBodySerial(mobiledata.serial) -- is this packet really only u=
sed for the player ??
+	=

+	ResetWalkQueue()
+	SetPlayerPos(mobiledata.xloc,mobiledata.yloc,mobiledata.zloc,mobiledata.d=
ir) -- always call this, affects gPlayerPos
+	gTileFreeWalk:NotifyPlayerMobileTeleport(GetPlayerMobile())
+	gCurrentRenderer:NotifyPlayerTeleported()
+	WalkLog("NotifyTeleport end")
+end
+

Modified: trunk/data/lua/net/net.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.mobile.lua (original)
+++ trunk/data/lua/net/net.mobile.lua Tue Oct  9 03:15:45 2007
@@ -73,7 +73,6 @@
 	end
 	=

 	CreateOrUpdateMobile(mobiledata,equipmentdata)
-	ResetWalkQueue()
 end
 =

 -- 0x20 Teleport packet (also known as ProtocolRecv_Draw_Player)
@@ -95,7 +94,7 @@
 	mobiledata.dir 					=3D input:PopNetUint8()
 	mobiledata.zloc 				=3D input:PopInt8()
 	=

-	NotifyTeleport(mobiledata)
+	NotifyTeleport(mobiledata) -- calls CreateOrUpdateMobile and assigns play=
erid
 end
 =

 -- Character Animation (0x6e)

Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Tue Oct  9 03:15:45 2007
@@ -30,7 +30,6 @@
 =

 each of those is also available as method you can call like mobile:(...) w=
ithout the first param and without the Mobile_
 ]]--
-
 =

 gMobilePrototype =3D {}
 gbMobileMethodWrappersInitialized =3D false
@@ -147,11 +146,12 @@
 		end
 	end
 	=

+	local bIsPlayer =3D self.serial =3D=3D gPlayerBodySerial
 	-- if something related to equipment might have changed =

 	-- this can also have happened if equipmentdata=3Dnil, e.g. when an equip=
ment item was destroyed directly
 	-- maybe only in UpdateContent and/or if equipmentdata is set ?
 	if (true) then
-		if (self.serial =3D=3D gPlayerBodySerial) then PlayerEquipmentUpdated() =
end
+		if (bIsPlayer) then PlayerEquipmentUpdated() end
 		local paperdoll =3D gPaperdolls[self.serial]
 		if (paperdoll) then RebuildPaperdoll(paperdoll) end
 		=

@@ -161,6 +161,18 @@
 	end
 		=

 	self:NotifyListener("Mobile_Update")
+	=

+	=

+	-- currently only for human (not elfs)
+	local bIsGhost =3D	in_array(self.artid,kMobileGhostArtIDs)
+	if (bIsGhost ~=3D self.bIsGhost) then
+		self.bIsGhost =3D bIsGhost
+		if (bIsGhost) then =

+			print("mobile is now ghost. isplayer,newartid =3D ",bIsPlayer,self.arti=
d) =

+		else
+			print("mobile is not ghost anymore. isplayer,newartid =3D ",bIsPlayer,s=
elf.artid)
+		end
+	end
 	=

 	gCurrentRenderer:UpdateMobile( self )
 	=


Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Tue Oct  9 03:15:45 2007
@@ -2,6 +2,8 @@
 -- see also net.mobile.lua net.paperdoll.lua net.container.lua
 =

 =

+gDestroyObjectDist =3D 40 -- TODO : adjust when requesting a different vie=
wdist from server
+gDestroyObjectDistSquare =3D gDestroyObjectDist*gDestroyObjectDist
 =

 gPlayerBodySerial =3D 0
 gPlayerBackPack =3D false
@@ -85,65 +87,6 @@
 	gui.SetWarmode(gActWarmode)
 end
 =

--- called from kPacket_Teleport
-function NotifyTeleport	(mobiledata)
-	--mobiledata.serial				=

-	--mobiledata.artid				=

-	--mobiledata.teleport_unknown1 	=

-	--mobiledata.hue 					=

-	--mobiledata.flag 				=

-	--mobiledata.xloc 				=

-	--mobiledata.yloc 				=

-	--mobiledata.teleport_unknown2	=

-	--mobiledata.dir 					=

-	--mobiledata.zloc
-	=

-	local bPlayerRunning =3D TestBit(mobiledata.dir,kWalkFlag_Run)
-	local fullplayerdir =3D mobiledata.dir
-	mobiledata.dir =3D BitwiseAND(mobiledata.dir,hex2num("0x07"))
-	=

-	gLastResyncRequest =3D nil
-	--ResetWalkQueue()
-	=

-	gCurrentRenderer:NotifyPlayerTeleported()
-
---~ 	printdebug("login",sprintf("NET: Draw_Player (Pos before Teleport) XL=
oc: %i YLoc: %i ZLoc: %i Dir: [%s]\n",
---~ 			gPlayerXLoc or 0, gPlayerYLoc or 0, gPlayerZLoc or 0, gDirection[gP=
layerDir or 0] or ""))
-	=

-	-- TODO : (Check if char is in Boat!)
-
---~ 	printdebug("login",sprintf("NET: Draw_Player: mobiledata.serial: %i b=
ody: %i XLoc: %i YLoc: %i ZLoc: %i Dir: 0x%02x [%s]\n",
---~ 			mobiledata.serial, mobiledata.artid, mobiledata.xloc, mobiledata.yl=
oc, mobiledata.zloc, fullplayerdir, gDirection[mobiledata.dir] or ""))
-
-	-- Check if Player is already on Teleported Pos
-	if (gPlayerXLoc ~=3D mobiledata.xloc or gPlayerYLoc ~=3D mobiledata.yloc =
or
-		gPlayerZLoc ~=3D mobiledata.zloc or gPlayerDir ~=3D mobiledata.dir) then
-		SetPlayerPos(mobiledata.xloc,mobiledata.yloc,mobiledata.zloc,fullplayerd=
ir)
-		print("Player is teleported.")
-	else
-		print("Player not teleported, because already on the same pos+dir!")
-	end
-
-	UpdatePlayerBodySerial(mobiledata.serial)
-	local playerMobile=3DGetPlayerMobile()
-	if (playerMobile) then
-		if (playerMobile.artid ~=3D mobiledata.artid) then
-			print("Change PC Bodytype=3D"..mobiledata.artid)
-			playerMobile.artid=3Dmobiledata.artid
-
-			-- currently only for human (not elfs)
-			if ( (playerMobile.artid=3D=3D402) or (playerMobile.artid=3D=3D403) or
-				 (playerMobile.artid=3D=3D607) or (playerMobile.artid=3D=3D608) or
-				 (playerMobile.artid=3D=3D970)) then
-				print("TODO : pc character is now ghost. new bodymodel=3D"..mobiledata=
.artid)
-			end
-
-			playerMobile:Update()
-		end
-	end
-
-	ResetWalkQueue() -- todo : (here or only if setplayerpos is done?)
-end
 =

 -- called from handlers of kPacket_Login_Confirm and kPacket_Teleport
 function UpdatePlayerBodySerial (serial) =

@@ -157,3 +100,26 @@
 	-- create player status dialog and stuff like this
 	GuiInit()
 end
+
+function IsObjectFarEnoughToDestroy (xloc,yloc,player_xloc,player_yloc)
+	local dx =3D xloc - player_xloc
+	local dy =3D yloc - player_yloc
+	return dx*dx + dy*dy > gDestroyObjectDistSquare
+end
+
+-- destroy objects outside view range
+function DestroyObjectsFarFromPlayer (player_xloc,player_yloc)
+	-- dynamics
+	for k,dynamic in pairs(GetDynamicList()) do =

+		if (DynamicIsInWorld(dynamic) and IsObjectFarEnoughToDestroy(dynamic.xlo=
c,dynamic.yloc,player_xloc,player_yloc)) then
+			DestroyObjectBySerial(dynamic.serial) =

+		end =

+	end
+	-- mobiles
+	for k,mobile in pairs(GetMobileList()) do =

+		if (IsObjectFarEnoughToDestroy(mobile.xloc,mobile.yloc,player_xloc,playe=
r_yloc)) then
+			DestroyObjectBySerial(mobile.serial) =

+		end =

+	end
+end
+

Modified: trunk/data/old_mobileanim_notest.txt
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/old_mobileanim_notest.txt (original)
+++ trunk/data/old_mobileanim_notest.txt Tue Oct  9 03:15:45 2007
@@ -1,4 +1,7 @@
 =

+	=

+	=

+	=

 	--local bPlayerIsInWarMode =3D gActWarmode =3D=3D gWarmode_Combat -- TODO=
 : only player, not any mobile
 =

 mount bodyid =3D 120  0x78      16047 =3D 0x00003eaf   1073742298=3D0x4000=
01da  2147500545=3D0x80004201



From no-reply at zwischenwelt.org  Tue Oct  9 15:49:09 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 09 Oct 2007 13:49:09 -0000
Subject: [Iris-commit] [IRIS] r1457 - in /trunk: include/data.h src/data.cpp
Message-ID: <20071009134909.B2E2B1C18125@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Oct  9 15:49:09 2007
New Revision: 1457

Log:
bugfix, static file width calc

Modified:
    trunk/include/data.h
    trunk/src/data.cpp

Modified: trunk/include/data.h
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/include/data.h (original)
+++ trunk/include/data.h Tue Oct  9 15:49:09 2007
@@ -352,7 +352,7 @@
 		=

 		cStaticBlock		();
 		inline int Count 	() { return mpRawIndex ? (mpRawIndex->miLength / sizeo=
f(RawStatic)) : 0; }
-		inline static int	CalcMapW			(const int iMapH,const int iFileSize) 					=
{ return iFileSize / (2 * iMapH); } =

+		inline static int	CalcMapW			(const int iMapH,const int iIndexFileSize) =
				{ return iIndexFileSize / (sizeof(RawIndex) * iMapH); } =

 		inline static int	BlockCoordsToIndex	(const int iBlockX,const int iBlock=
Y,const int iMapH)	{ return iBlockX*iMapH + iBlockY; }
 	};
 	=


Modified: trunk/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data.cpp (original)
+++ trunk/src/data.cpp Tue Oct  9 15:49:09 2007
@@ -446,7 +446,8 @@
 =

 cStaticBlockLoader_IndexedFullFile::cStaticBlockLoader_IndexedFullFile	(co=
nst int iMapH,const char* szIndexFile,const char* szDataFile, const char *s=
zDiffLookup, const char *szDiffIndex, const char *szDiffData)
 	: cStaticBlockLoader(iMapH), cIndexedFullFile(szIndexFile,szDataFile), mp=
DiffLookupFile(0), mpDiffIndexedFullFile(0) { PROFILE
-	miMapW =3D cStaticBlock::CalcMapW(miMapH,miFullFileSize);
+	miMapW =3D cStaticBlock::CalcMapW(miMapH,mIndexFile.miFullFileSize);
+	printf("cStaticBlockLoader_IndexedFullFile miMapW=3D%d\n",miMapW);
 	=

 	// use diff file? (if all are present)
 	if(szDiffLookup && szDiffIndex && szDiffData){



From no-reply at zwischenwelt.org  Tue Oct  9 16:43:03 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 09 Oct 2007 14:43:03 -0000
Subject: [Iris-commit] [IRIS] r1458 - in /trunk: bin/resources.cfg
 data/base/main.material data/base/ui/iris_border.png
 data/base/ui/iris_button.png data/base/ui/iris_window.png
 data/base/ui/ui.material data/lua/main.lua
Message-ID: <20071009144303.742711C18125@zwischenwelt.org>

Author: hagish
Date: Tue Oct  9 16:43:02 2007
New Revision: 1458

Log:
added first version of new iris gui skin

Added:
    trunk/data/base/ui/iris_border.png   (with props)
    trunk/data/base/ui/iris_button.png   (with props)
    trunk/data/base/ui/iris_window.png   (with props)
    trunk/data/base/ui/ui.material
Modified:
    trunk/bin/resources.cfg
    trunk/data/base/main.material
    trunk/data/lua/main.lua

Modified: trunk/bin/resources.cfg
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/bin/resources.cfg (original)
+++ trunk/bin/resources.cfg Tue Oct  9 16:43:02 2007
@@ -7,6 +7,7 @@
 [General]
 FileSystem=3D./
 FileSystem=3D../data/base
+FileSystem=3D../data/base/ui
 FileSystem=3D../data/skybox
 FileSystem=3D../data/particles/materials
 FileSystem=3D../data/particles/particles

Modified: trunk/data/base/main.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/base/main.material (original)
+++ trunk/data/base/main.material Tue Oct  9 16:43:02 2007
@@ -679,44 +679,3 @@
 	}
 }
 =

-material ui_ray_border : guibase
-{
-	technique
-	{
-		pass
-		{
-			texture_unit
-			{
-				texture ui/ray_border.png
-			}
-		}
-	}
-}
-
-material ui_ray_button : guibase
-{
-	technique
-	{
-		pass
-		{
-			texture_unit
-			{
-				texture ui/ray_button.png
-			}
-		}
-	}
-}
-
-material ui_ray_window : guibase
-{
-	technique
-	{
-		pass
-		{
-			texture_unit
-			{
-				texture ui/ray_window.png
-			}
-		}
-	}
-}

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Tue Oct  9 16:43:02 2007
@@ -124,6 +124,74 @@
 	fp:close()
 end
 =

+--###############################
+--###     GUI STYLES          ###
+--###############################
+gGuiDefaultStyleSet =3D "iris"
+glGuiMakerStyleSet["sfz"] =3D {
+window =3D {
+		material=3D"ui_window",size=3D64,x=3D0,y=3D0,
+		cx1=3D11,cy1=3D11,cx2=3D10,cy2=3D10,cx3=3D11,cy3=3D11,
+		dx=3D0,dy=3D32,border=3D11,clipborder=3D11
+	},
+button =3D {
+		material=3D"ui_window",size=3D64,x=3D32,y=3D0,
+		cx1=3D5,cy1=3D5,cx2=3D22,cy2=3D22,cx3=3D5,cy3=3D5,
+		dx=3D0,dy=3D32,border=3D5,clipborder=3D5
+	},
+border =3D {
+		material=3D"ui_window",size=3D64,x=3D32,y=3D0,
+		cx1=3D5,cy1=3D5,cx2=3D22,cy2=3D22,cx3=3D5,cy3=3D5,
+		dx=3D0,dy=3D32,border=3D5,clipborder=3D5
+	},
+default =3D {
+		material=3D"ui_window",size=3D64,x=3D32,y=3D0,
+		cx1=3D5,cy1=3D5,cx2=3D22,cy2=3D22,cx3=3D5,cy3=3D5,
+		dx=3D0,dy=3D32,border=3D5,clipborder=3D5
+	},
+}
+glGuiMakerStyleSet["ray"] =3D {
+default =3D {
+		material=3D"ui_ray_border",size=3D32,x=3D0,y=3D0,
+		cx1=3D12,cy1=3D12,cx2=3D8,cy2=3D8,cx3=3D12,cy3=3D12,
+		dx=3D0,dy=3D0,border=3D12,clipborder=3D2
+	},
+window =3D {
+		material=3D"ui_ray_window",size=3D128,x=3D0,y=3D0,
+		cx1=3D18,cy1=3D28,cx2=3D104,cy2=3D86,cx3=3D6,cy3=3D14,
+		dx=3D0,dy=3D0,
+		border_l=3D18,border_r=3D6,border_t=3D28,border_b=3D14,
+		clipborder_l=3D7,clipborder_r=3D7,clipborder_t=3D29,clipborder_b=3D15
+	},
+button =3D {
+		material=3D"ui_ray_button",size=3D128,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D112,cy2=3D9,cx3=3D8,cy3=3D8,
+		dx=3D0,dy=3D32,border=3D8,
+		clipborder_l=3D8,clipborder_r=3D5,
+		clipborder_t=3D3,clipborder_b=3D3
+	},
+}
+glGuiMakerStyleSet["iris"] =3D {
+default =3D {
+		material=3D"ui_iris_border",size=3D32,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D16,cy2=3D16,cx3=3D8,cy3=3D8,
+		dx=3D0,dy=3D0,border=3D8,clipborder=3D6
+	},
+window =3D {
+		material=3D"ui_iris_window",size=3D64,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D35,cy2=3D28,cx3=3D21,cy3=3D28,
+		dx=3D0,dy=3D0,
+		border_l=3D8,border_r=3D21,border_t=3D8,border_b=3D28,
+		clipborder_l=3D8,clipborder_r=3D8,clipborder_t=3D16,clipborder_b=3D28
+	},
+button =3D {
+		material=3D"ui_iris_button",size=3D128,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D112,cy2=3D9,cx3=3D8,cy3=3D8,
+		dx=3D0,dy=3D32,border=3D8,
+		clipborder_l=3D8,clipborder_r=3D5,
+		clipborder_t=3D3,clipborder_b=3D3
+	},
+}
 =

 --###############################
 --###        FUNCTIONS        ###



From no-reply at zwischenwelt.org  Tue Oct  9 17:28:46 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 09 Oct 2007 15:28:46 -0000
Subject: [Iris-commit] [IRIS] r1459 - in /trunk/data/lua: gui/gui.styles.lua
	main.lua
Message-ID: <20071009152846.A9FA51C18125@zwischenwelt.org>

Author: hagish
Date: Tue Oct  9 17:28:45 2007
New Revision: 1459

Log:
moved the style definition to the correct place

Modified:
    trunk/data/lua/gui/gui.styles.lua
    trunk/data/lua/main.lua

Modified: trunk/data/lua/gui/gui.styles.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.styles.lua (original)
+++ trunk/data/lua/gui/gui.styles.lua Tue Oct  9 17:28:45 2007
@@ -1,7 +1,7 @@
 --###############################
 --###     GUI STYLES          ###
 --###############################
-gGuiDefaultStyleSet =3D "ray"
+gGuiDefaultStyleSet =3D "iris"
 =

 glGuiMakerStyleSet["ray"] =3D {
 default =3D {
@@ -24,3 +24,25 @@
 		clipborder_t=3D3,clipborder_b=3D3
 	},
 }
+
+glGuiMakerStyleSet["iris"] =3D {
+default =3D {
+		material=3D"ui_iris_border",size=3D32,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D16,cy2=3D16,cx3=3D8,cy3=3D8,
+		dx=3D0,dy=3D0,border=3D8,clipborder=3D6
+	},
+window =3D {
+		material=3D"ui_iris_window",size=3D64,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D35,cy2=3D28,cx3=3D21,cy3=3D28,
+		dx=3D0,dy=3D0,
+		border_l=3D8,border_r=3D21,border_t=3D8,border_b=3D28,
+		clipborder_l=3D8,clipborder_r=3D8,clipborder_t=3D16,clipborder_b=3D28
+	},
+button =3D {
+		material=3D"ui_iris_button",size=3D128,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D112,cy2=3D9,cx3=3D8,cy3=3D8,
+		dx=3D0,dy=3D32,border=3D8,
+		clipborder_l=3D8,clipborder_r=3D5,
+		clipborder_t=3D3,clipborder_b=3D3
+	},
+}

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Tue Oct  9 17:28:45 2007
@@ -125,75 +125,6 @@
 end
 =

 --###############################
---###     GUI STYLES          ###
---###############################
-gGuiDefaultStyleSet =3D "iris"
-glGuiMakerStyleSet["sfz"] =3D {
-window =3D {
-		material=3D"ui_window",size=3D64,x=3D0,y=3D0,
-		cx1=3D11,cy1=3D11,cx2=3D10,cy2=3D10,cx3=3D11,cy3=3D11,
-		dx=3D0,dy=3D32,border=3D11,clipborder=3D11
-	},
-button =3D {
-		material=3D"ui_window",size=3D64,x=3D32,y=3D0,
-		cx1=3D5,cy1=3D5,cx2=3D22,cy2=3D22,cx3=3D5,cy3=3D5,
-		dx=3D0,dy=3D32,border=3D5,clipborder=3D5
-	},
-border =3D {
-		material=3D"ui_window",size=3D64,x=3D32,y=3D0,
-		cx1=3D5,cy1=3D5,cx2=3D22,cy2=3D22,cx3=3D5,cy3=3D5,
-		dx=3D0,dy=3D32,border=3D5,clipborder=3D5
-	},
-default =3D {
-		material=3D"ui_window",size=3D64,x=3D32,y=3D0,
-		cx1=3D5,cy1=3D5,cx2=3D22,cy2=3D22,cx3=3D5,cy3=3D5,
-		dx=3D0,dy=3D32,border=3D5,clipborder=3D5
-	},
-}
-glGuiMakerStyleSet["ray"] =3D {
-default =3D {
-		material=3D"ui_ray_border",size=3D32,x=3D0,y=3D0,
-		cx1=3D12,cy1=3D12,cx2=3D8,cy2=3D8,cx3=3D12,cy3=3D12,
-		dx=3D0,dy=3D0,border=3D12,clipborder=3D2
-	},
-window =3D {
-		material=3D"ui_ray_window",size=3D128,x=3D0,y=3D0,
-		cx1=3D18,cy1=3D28,cx2=3D104,cy2=3D86,cx3=3D6,cy3=3D14,
-		dx=3D0,dy=3D0,
-		border_l=3D18,border_r=3D6,border_t=3D28,border_b=3D14,
-		clipborder_l=3D7,clipborder_r=3D7,clipborder_t=3D29,clipborder_b=3D15
-	},
-button =3D {
-		material=3D"ui_ray_button",size=3D128,x=3D0,y=3D0,
-		cx1=3D8,cy1=3D8,cx2=3D112,cy2=3D9,cx3=3D8,cy3=3D8,
-		dx=3D0,dy=3D32,border=3D8,
-		clipborder_l=3D8,clipborder_r=3D5,
-		clipborder_t=3D3,clipborder_b=3D3
-	},
-}
-glGuiMakerStyleSet["iris"] =3D {
-default =3D {
-		material=3D"ui_iris_border",size=3D32,x=3D0,y=3D0,
-		cx1=3D8,cy1=3D8,cx2=3D16,cy2=3D16,cx3=3D8,cy3=3D8,
-		dx=3D0,dy=3D0,border=3D8,clipborder=3D6
-	},
-window =3D {
-		material=3D"ui_iris_window",size=3D64,x=3D0,y=3D0,
-		cx1=3D8,cy1=3D8,cx2=3D35,cy2=3D28,cx3=3D21,cy3=3D28,
-		dx=3D0,dy=3D0,
-		border_l=3D8,border_r=3D21,border_t=3D8,border_b=3D28,
-		clipborder_l=3D8,clipborder_r=3D8,clipborder_t=3D16,clipborder_b=3D28
-	},
-button =3D {
-		material=3D"ui_iris_button",size=3D128,x=3D0,y=3D0,
-		cx1=3D8,cy1=3D8,cx2=3D112,cy2=3D9,cx3=3D8,cy3=3D8,
-		dx=3D0,dy=3D32,border=3D8,
-		clipborder_l=3D8,clipborder_r=3D5,
-		clipborder_t=3D3,clipborder_b=3D3
-	},
-}
-
---###############################
 --###        FUNCTIONS        ###
 --###############################
 =




From no-reply at zwischenwelt.org  Tue Oct  9 20:07:00 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 09 Oct 2007 18:07:00 -0000
Subject: [Iris-commit] [IRIS] r1460 - in /trunk/data: config.lua.dist
 lua/lib.bugreport.lua lua/lib.mainmenu.lua skippedfallbacks.lua
Message-ID: <20071009180701.8F12B1C18126@zwischenwelt.org>

Author: sience
Date: Tue Oct  9 20:06:56 2007
New Revision: 1460

Log:
-obsolete freewalk option removed from config.lua.dist
-some guis changed to styled gui
-mainmenu recentered
-skippedfallbacks added

Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.bugreport.lua
    trunk/data/lua/lib.mainmenu.lua
    trunk/data/skippedfallbacks.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Tue Oct  9 20:06:56 2007
@@ -242,8 +242,6 @@
 gDisableSmoothWalk =3D false
 gDisableHumanClientSideAnim =3D false
 =

-gEnableTileFreeWalk =3D false
-
 kMountZAdd =3D {[401]=3D-0.25,[400]=3D-0.10}
 =

 gEnableRTTModelImages =3D false

Modified: trunk/data/lua/lib.bugreport.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.bugreport.lua (original)
+++ trunk/data/lua/lib.bugreport.lua Tue Oct  9 20:06:56 2007
@@ -76,7 +76,7 @@
 				end
 			end} },
 		}
-	gBugReportDialog =3D guimaker.MakeTableDlg(rows,100,100,false,true)
+	gBugReportDialog =3D guimaker.MakeTableDlg(rows,100,100,false,true,gGuiDe=
faultStyleSet,"window")
 end)
 --MasterServer_BugReport	(report,note)	=

 =


Modified: trunk/data/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mainmenu.lua (original)
+++ trunk/data/lua/lib.mainmenu.lua Tue Oct  9 20:06:56 2007
@@ -283,8 +283,7 @@
 	MainMenuSetBackground_Sky()
 =

 	if (not(gMainMenuDialog)) then
-		local vw,vh =3D GetViewportSize()
-		gMainMenuDialog =3D guimaker.MakeTableDlg(rows,vw/2-320,vh/2-240,false,t=
rue,gGuiDefaultStyleSet,"window") =

+		gMainMenuDialog =3D guimaker.MakeTableDlg(rows,10,10,false,true,gGuiDefa=
ultStyleSet,"window") =

 	end
 end
 =


Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Tue Oct  9 20:06:56 2007
@@ -360,3 +360,11 @@
 RegisterSkippedArtBillboardFallBack(7233) -- 0x1c41 name=3Dcoffin
 RegisterSkippedArtBillboardFallBack(2629) -- 0x0a45 name=3Ddresser
 RegisterSkippedArtBillboardFallBack(2621) -- 0x0a3d name=3Ddresser
+RegisterSkippedArtBillboardFallBack(7744) -- 0x1e40 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7746) -- 0x1e42 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7747) -- 0x1e43 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7748) -- 0x1e44 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7749) -- 0x1e45 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7750) -- 0x1e46 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7751) -- 0x1e47 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7752) -- 0x1e48 name=3Dbearskin rug



From no-reply at zwischenwelt.org  Tue Oct  9 20:36:09 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 09 Oct 2007 18:36:09 -0000
Subject: [Iris-commit] [IRIS] r1461 - in /trunk: bin/iris2.exe
	linuxbin/test.txt linuxbin/test2.txt
Message-ID: <20071009183609.6A4871C18126@zwischenwelt.org>

Author: sience
Date: Tue Oct  9 20:36:07 2007
New Revision: 1461

Log:
-new win binary
-obsolete txt files removed

Removed:
    trunk/linuxbin/test.txt
    trunk/linuxbin/test2.txt
Modified:
    trunk/bin/iris2.exe

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.



From no-reply at zwischenwelt.org  Wed Oct 10 15:16:56 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 13:16:56 -0000
Subject: [Iris-commit] [IRIS] r1462 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20071010131656.39FA71C18165@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 15:16:55 2007
New Revision: 1462

Log:
tilefreewalk : added multisampling for collision, so you cannot get into wa=
lls etc even at high speeds or low framerates

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Wed Oct 10 15:16:55 2007
@@ -14,6 +14,8 @@
 		[17]=3D{artid=3D8059,hue=3D1652,animid=3D913},[11]=3D{artid=3D8252,hue=
=3D1147,animid=3D701},
 		[21]=3D{artid=3D3701,hue=3D0,animid=3D422},}} =

 		=

+gTileFreePlayerRad =3D 0.2 -- radius of player/human
+gTileFreeDebugWallH =3D 0.7
 =

 -- ##### ##### ##### ##### ##### init
 =

@@ -63,6 +65,42 @@
 assert(InterpolateSquare(z00,z10,z01,z11, 0,1) =3D=3D z01)
 assert(InterpolateSquare(z00,z10,z01,z11, 1,1) =3D=3D z11)
 =

+
+function gTileFreeWalk:CollideWithWallMid (x,y)
+	for k,wallarr in pairs(self.walls) do -- block straight
+		local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
+		local vx,vy =3D sub2(x,y,x1,y1)
+		local pos =3D dot2(vx,vy,dx,dy) * invsqlen
+		if (pos >=3D 0 and pos <=3D 1) then -- collide with wall itself
+			local dist =3D dot2(vx,vy,nx,ny)
+			local pushoutdist =3D gTileFreePlayerRad - dist
+			if (dist > -gTileFreePlayerRad and pushoutdist > 0) then
+				--self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, gTi=
leFreeDebugWallH,	1,1,0)
+				x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
+			end
+		end
+	end
+	return x,y
+end
+
+function gTileFreeWalk:CollideWithWallEdge (x,y)
+	for k,wallarr in pairs(self.walls) do -- block edge
+		local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
+		local vx,vy =3D sub2(x,y,x1,y1)
+		local pos =3D dot2(vx,vy,dx,dy) * invsqlen
+		if (pos <=3D 0) then -- collide with edge : x1,y1
+			local pushoutdist =3D gTileFreePlayerRad - len2(vx,vy)
+			if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) e=
nd
+		elseif (pos >=3D 1) then -- collide with edge : x2,y2
+			vx,vy =3D sub2(x,y,x2,y2)
+			local pushoutdist =3D gTileFreePlayerRad - len2(vx,vy)
+			if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) e=
nd
+		end
+	end
+	return x,y
+end
+
+
 function gTileFreeWalk:Step	()
 	if (gCurrentRenderer ~=3D Renderer3D) then return end
 	local bWalkInMouseDir	=3D gKeyPressed[key_mouse2]
@@ -77,6 +115,7 @@
 	-- hold rightmouse button to walk in mouse direction (depends on center o=
f screen, works good for 3rd person cam)
 	local bMoved =3D false
 	local x,y,z =3D self:GetPos_ClientSide()
+	local ox,oy =3D x,y
 	=

 	-- read input and calculate desired movement
 	if (bWalkInMouseDir) then
@@ -124,52 +163,23 @@
 	-- execute movement (and collision/block handling)
 	if (bMoved) then
 		-- block movement here
-		local r =3D 0.2 -- radius of player/human
-		local h =3D 0.7
 		--self:DebugMarkerGroup_Clear("touchwalls")
-		-- 1st collision : with wall center, to avoid speed bumps while walking =
along a wall
-		for k,wallarr in pairs(self.walls) do -- block straight
-			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
-			local vx,vy =3D sub2(x,y,x1,y1)
-			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
-			if (pos >=3D 0 and pos <=3D 1) then -- collide with wall itself
-				local dist =3D dot2(vx,vy,nx,ny)
-				local pushoutdist =3D r - dist
-				if (dist > -r and pushoutdist > 0) then
-					--self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, h,=
	1,1,0)
-					x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
-				end
+		local vx,vy =3D sub2(x,y,ox,oy)
+		local movedist =3D len2(vx,vy)
+		local steps =3D math.ceil(movedist/(0.7*gTileFreePlayerRad)) =

+		if (steps > 0) then
+			local sx,sy =3D vx/steps,vy/steps
+			x,y =3D ox,oy
+			for i=3D1,steps do -- multisample movement
+				x,y =3D x+sx,y+sy
+				-- 1st collision : with wall center, to avoid speed bumps while walkin=
g along a wall
+				x,y =3D self:CollideWithWallMid(x,y)
+				-- 2nd collision : with wall edges, otherwise it would be possible to =
move into an edge between 2 non-parallel walls
+				x,y =3D self:CollideWithWallEdge(x,y)
+				-- 3rd collision : with wall center again, to avoid the edge collision=
s pushing the player slowly inside the walls
+				x,y =3D self:CollideWithWallMid(x,y)
 			end
 		end
-		-- 2nd collision : with wall edges, otherwise it would be possible to mo=
ve into an edge between 2 non-parallel walls
-		for k,wallarr in pairs(self.walls) do -- block edge
-			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
-			local vx,vy =3D sub2(x,y,x1,y1)
-			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
-			if (pos <=3D 0) then -- collide with edge : x1,y1
-				local pushoutdist =3D r - len2(vx,vy)
-				if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) =
end
-			elseif (pos >=3D 1) then -- collide with edge : x2,y2
-				vx,vy =3D sub2(x,y,x2,y2)
-				local pushoutdist =3D r - len2(vx,vy)
-				if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) =
end
-			end
-		end
-		-- 3rd collision : with wall center again, to avoid the edge collisions =
pushing the player slowly inside the walls
-		for k,wallarr in pairs(self.walls) do -- block straight
-			local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
-			local vx,vy =3D sub2(x,y,x1,y1)
-			local pos =3D dot2(vx,vy,dx,dy) * invsqlen
-			if (pos >=3D 0 and pos <=3D 1) then -- collide with wall itself
-				local dist =3D dot2(vx,vy,nx,ny)
-				local pushoutdist =3D r - dist
-				if (dist > -r and pushoutdist > 0) then
-					--self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, h,=
	1,1,0)
-					x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
-				end
-			end
-		end
-		=

 		=

 		-- get new rounded position
 		local rx,ry,rz =3D self:RoundPos(x,y,z)



From no-reply at zwischenwelt.org  Wed Oct 10 15:40:34 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 13:40:34 -0000
Subject: [Iris-commit] [IRIS] r1463 - in /trunk/data/lua:
	lib.tilefreewalk.lua net.walk.lua
Message-ID: <20071010134035.54A831C18165@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 15:40:30 2007
New Revision: 1463

Log:
improved tilefree following a bit, so the tile-positions doesn't get stuck =
so easily

Modified:
    trunk/data/lua/lib.tilefreewalk.lua
    trunk/data/lua/net.walk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Wed Oct 10 15:40:30 2007
@@ -385,10 +385,10 @@
 function WalkLog2 (...) if (gKeyPressed[key_f]) then print("walklog2",unpa=
ck(arg)) end end
 =

 function gTileFreeWalk:StuckCheck ()
-	local x,y,z =3D self:GetPos_ClientSide()
-	local rx,ry,rz =3D self:RoundPos(x,y,z)
-	local d =3D len2(x-rx,y-ry)
-	if (d > 0.1) then return end
+	--~ local x,y,z =3D self:GetPos_ClientSide()
+	--~ local rx,ry,rz =3D self:RoundPos(x,y,z)
+	--~ local d =3D len2(x-rx,y-ry)
+	--~ if (d > 0.1) then return end
 	=

 	-- TODO...
 	--~ print("StuckCheck")
@@ -398,7 +398,10 @@
 =

 =

 function gTileFreeWalk:Impl_WalkRequestStep (bRunRequested)
-	self:StuckCheck()
+	-- self confirm here if there is no server, debug/offline mode only
+	if (gStartGameWithoutNetwork) then self:SetPos_LastConfirmed(self:RoundPo=
s(self:GetPos_ClientSide())) return end
+	=

+	--~ self:StuckCheck()
 	self:PathPoint_Pop() -- pathpoints aren't currently used
 	if (not Walk_RequestTimeOk()) then return end
 	=

@@ -412,44 +415,17 @@
 	=

 	WalkStep_WalkInDir(iDir,bRunRequested,true)
 	=

-	if (true) then return end
-	self:SetPos_LastConfirmed(rx,ry,rz)
-	=

-	local bWalkForward		=3D (not gActiveEditText) and gKeyPressed[key_up]		=

-	local bWalkBackwards	=3D (not gActiveEditText) and gKeyPressed[key_down]	=

-	local bTurnLeft			=3D (not gActiveEditText) and gKeyPressed[key_left]	=

-	local bTurnRight		=3D (not gActiveEditText) and gKeyPressed[key_right]	=

-	=

-		=

-	if (		bWalkForward) then WalkStep_WalkInDir(gPlayerDir ,true)
-	elseif (	bTurnLeft	) then WalkStep_WalkInDir(gPlayerDir-1,true)
-	elseif (	bTurnRight	) then WalkStep_WalkInDir(gPlayerDir+1,true) =

-	end
-	=

-	=

-	print("player",gPlayerXLoc,gPlayerYLoc,gPlayerDir)
-	self:Impl_SetToPlayerPos(GetPlayerMobile())
-	=

-		=

-	-- self confirm here if there is no server, debug/offline mode only
-	if (gStartGameWithoutNetwork) then self:SetPos_LastConfirmed(rx,ry,rz) re=
turn end
-	=

-	WalkLog2("Impl_WalkRequestStep timeok,haxnext",Walk_RequestTimeOk(),self:=
PathPoint_HasNext())
-	=

-	-- don't calc if request can't be sent yet
-	if (not Walk_RequestTimeOk()) then return end
-	=

-	=

-	local x1,y1,z1 =3D self:PathPoint_GetNth(1)
-	if (not x1) then return end
-	=

-	xloc1,yloc1,zloc1 =3D self:LocalToUOPos(x1,y1,z1)
-	=

-	=

+	=

+	=

+	--~ print("player",gPlayerXLoc,gPlayerYLoc,gPlayerDir)
+	--~ self:Impl_SetToPlayerPos(GetPlayerMobile())
+	--~ WalkLog2("Impl_WalkRequestStep timeok,haxnext",Walk_RequestTimeOk(),s=
elf:PathPoint_HasNext())
+	--~ local x1,y1,z1 =3D self:PathPoint_GetNth(1)
+	--~ if (not x1) then return end
+	--~ xloc1,yloc1,zloc1 =3D self:LocalToUOPos(x1,y1,z1)
 	--~ if (xloc2 and WalkStep_WalkToPosSimple(xloc2,yloc2,bRunRequested,fals=
e)) then return end
-	print("WalkStep_WalkToPosSimple",xloc1,yloc1,gPlayerXLoc,gPlayerYLoc)
-	WalkStep_WalkToPosSimple(xloc1,yloc1,bRunRequested,false)
-	=

+	--~ print("WalkStep_WalkToPosSimple",xloc1,yloc1,gPlayerXLoc,gPlayerYLoc)
+	--~ WalkStep_WalkToPosSimple(xloc1,yloc1,bRunRequested,false)
 	-- todo : pathpoints can be impassable, happens during diagonal walk, don=
't send walk requests to those
 	-- determine the "next" position for the request, summarize as much into =
one step as possible
 end

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Wed Oct 10 15:40:30 2007
@@ -127,7 +127,7 @@
 function WalkStep_WalkInDir		(iDir,bRunFlag,bTrySides) =

 	if (not Walk_RequestTimeOk()) then return end
 	iDir =3D DirWrap(iDir)
-	if (iDir ~=3D gPlayerDir	or 	WalkStep_CanWalkInDir(iDir  )) then return E=
xecWalkRequestIfPossible(iDir  ,bRunFlag) end
+	if (						WalkStep_CanWalkInDir(iDir  )) then return ExecWalkRequestIfPos=
sible(iDir  ,bRunFlag) end
 	if (bTrySides and			WalkStep_CanWalkInDir(iDir-1)) then return ExecWalkRe=
questIfPossible(iDir-1,bRunFlag) end
 	if (bTrySides and			WalkStep_CanWalkInDir(iDir+1)) then return ExecWalkRe=
questIfPossible(iDir+1,bRunFlag) end
 end



From no-reply at zwischenwelt.org  Wed Oct 10 17:11:01 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 15:11:01 -0000
Subject: [Iris-commit] [IRIS] r1464 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20071010151101.C858B1C18165@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 17:11:01 2007
New Revision: 1464

Log:
freewalk more intelligent, breadcrumbs/pathpoints to avoid the serverpos ge=
tting stuck

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Wed Oct 10 17:11:01 2007
@@ -66,39 +66,6 @@
 assert(InterpolateSquare(z00,z10,z01,z11, 1,1) =3D=3D z11)
 =

 =

-function gTileFreeWalk:CollideWithWallMid (x,y)
-	for k,wallarr in pairs(self.walls) do -- block straight
-		local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
-		local vx,vy =3D sub2(x,y,x1,y1)
-		local pos =3D dot2(vx,vy,dx,dy) * invsqlen
-		if (pos >=3D 0 and pos <=3D 1) then -- collide with wall itself
-			local dist =3D dot2(vx,vy,nx,ny)
-			local pushoutdist =3D gTileFreePlayerRad - dist
-			if (dist > -gTileFreePlayerRad and pushoutdist > 0) then
-				--self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, gTi=
leFreeDebugWallH,	1,1,0)
-				x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
-			end
-		end
-	end
-	return x,y
-end
-
-function gTileFreeWalk:CollideWithWallEdge (x,y)
-	for k,wallarr in pairs(self.walls) do -- block edge
-		local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
-		local vx,vy =3D sub2(x,y,x1,y1)
-		local pos =3D dot2(vx,vy,dx,dy) * invsqlen
-		if (pos <=3D 0) then -- collide with edge : x1,y1
-			local pushoutdist =3D gTileFreePlayerRad - len2(vx,vy)
-			if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) e=
nd
-		elseif (pos >=3D 1) then -- collide with edge : x2,y2
-			vx,vy =3D sub2(x,y,x2,y2)
-			local pushoutdist =3D gTileFreePlayerRad - len2(vx,vy)
-			if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) e=
nd
-		end
-	end
-	return x,y
-end
 =

 =

 function gTileFreeWalk:Step	()
@@ -161,12 +128,12 @@
 	end
 	=

 	-- execute movement (and collision/block handling)
-	if (bMoved) then
+	if (bMoved) then		=

 		-- block movement here
 		--self:DebugMarkerGroup_Clear("touchwalls")
 		local vx,vy =3D sub2(x,y,ox,oy)
 		local movedist =3D len2(vx,vy)
-		local steps =3D math.ceil(movedist/(0.7*gTileFreePlayerRad)) =

+		local steps =3D math.ceil(movedist/(0.5*gTileFreePlayerRad)) =

 		if (steps > 0) then
 			local sx,sy =3D vx/steps,vy/steps
 			x,y =3D ox,oy
@@ -178,17 +145,18 @@
 				x,y =3D self:CollideWithWallEdge(x,y)
 				-- 3rd collision : with wall center again, to avoid the edge collision=
s pushing the player slowly inside the walls
 				x,y =3D self:CollideWithWallMid(x,y)
+				self:PathPoint_Push(self:RoundPos(x,y,z))
 			end
 		end
 		=

 		-- get new rounded position
 		local rx,ry,rz =3D self:RoundPos(x,y,z)
-		local lx,ly,lz =3D self:PathPoint_GetLast()
 		=

 		-- entered a new tile
-		if (lx ~=3D rx or ly ~=3D ry) then =

-			self.groundcache =3D self:Impl_ScanGround(rx,ry,rz) -- read surrounding=
 height info
-			self:PathPoint_Push(rx,ry,rz)
+		if (self.lastscanx ~=3D rx or self.lastscany ~=3D ry) then =

+			self.groundcache =3D self:Impl_ScanGround(rx,ry,rz,self.lastscanx,self.=
lastscany) -- read surrounding height info
+			self.lastscanx =3D rx
+			self.lastscany =3D ry
 			=

 			self:DebugMarkerGroup_Clear("nearground")
 			function GetGround (x,y) local z =3D self.groundcache[x..","..y] return=
 z end --  print("GetGround",x,y,z,rx,ry)
@@ -267,9 +235,6 @@
 			local z01 =3D self.groundcache[(x00  )..","..(y00+1)]
 			local z11 =3D self.groundcache[(x00+1)..","..(y00+1)]
 			z =3D InterpolateSquare(z00 or zSelf,z10 or zSelf,z01 or zSelf,z11 or z=
Self,fx,fy)
-			--for k,v in pairs(self.groundcache) do print(k,v) end
-			--print("zcorr",sprintf("%f,%f %+0.1f,%+0.1f %f %f %f %f",l,t,fx,fy,z00=
,z10,z01,z11))
-			--print("zcorr",z00,z10,z01,z11,zSelf,z)
 		end
 		=

 		self:SetPos_ClientSide(x,y,z)
@@ -286,6 +251,45 @@
 	self:Impl_WalkRequestStep(bRunRequested)
 	=

 	self:Impl_StepPlayer(fRequestedSpeed,bRunRequested)
+end
+
+
+-- ##### ##### ##### ##### ##### collision
+
+
+function gTileFreeWalk:CollideWithWallMid (x,y)
+	for k,wallarr in pairs(self.walls) do -- block straight
+		local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
+		local vx,vy =3D sub2(x,y,x1,y1)
+		local pos =3D dot2(vx,vy,dx,dy) * invsqlen
+		if (pos >=3D 0 and pos <=3D 1) then -- collide with wall itself
+			local dist =3D dot2(vx,vy,nx,ny)
+			local pushoutdist =3D gTileFreePlayerRad - dist
+			if (dist > -gTileFreePlayerRad and pushoutdist > 0) then
+				--self:DebugMarkerGroup_AddWall("touchwalls", 	x1,y1,z,   x2,y2,z, gTi=
leFreeDebugWallH,	1,1,0)
+				x,y =3D add2(x,y,nx*pushoutdist,ny*pushoutdist)
+			end
+		end
+	end
+	return x,y
+end
+
+
+function gTileFreeWalk:CollideWithWallEdge (x,y)
+	for k,wallarr in pairs(self.walls) do -- block edge
+		local x1,y1,x2,y2,dx,dy,nx,ny,invsqlen =3D unpack(wallarr)
+		local vx,vy =3D sub2(x,y,x1,y1)
+		local pos =3D dot2(vx,vy,dx,dy) * invsqlen
+		if (pos <=3D 0) then -- collide with edge : x1,y1
+			local pushoutdist =3D gTileFreePlayerRad - len2(vx,vy)
+			if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) e=
nd
+		elseif (pos >=3D 1) then -- collide with edge : x2,y2
+			vx,vy =3D sub2(x,y,x2,y2)
+			local pushoutdist =3D gTileFreePlayerRad - len2(vx,vy)
+			if (pushoutdist > 0) then x,y =3D add2(x,y,tolen2(vx,vy,pushoutdist)) e=
nd
+		end
+	end
+	return x,y
 end
 =

 =

@@ -345,16 +349,7 @@
 	--~ print("Impl_SetLastRequestedUOPos",xloc,yloc)
 	local x,y,z =3D self:UOPosToLocal(xloc,yloc,zloc)
 	self:SetPos_LastRequested(x,y,z)
-	=

-	local maxreached =3D 0
-	for i =3D 1,self:PathPoint_Count() do =

-		local px,py,pz =3D self:PathPoint_GetNth(i)
-		--~ print("Impl_SetLastRequestedUOPos test=3D",px,py,x,y)
-		if (px =3D=3D x and py =3D=3D y) then maxreached =3D i end
-	end
-	if (maxreached =3D=3D 0) then return end
-	--~ print("Impl_SetLastRequestedUOPos maxreached=3D",maxreached)
-	for i =3D 1,maxreached do self:PathPoint_Pop() end
+	self:PathPoint_ReachPos(x,y,z)
 end
 =

 function gTileFreeWalk:Impl_SetLastConfirmedUOPos (xloc,yloc,zloc)
@@ -384,50 +379,23 @@
 =

 function WalkLog2 (...) if (gKeyPressed[key_f]) then print("walklog2",unpa=
ck(arg)) end end
 =

-function gTileFreeWalk:StuckCheck ()
-	--~ local x,y,z =3D self:GetPos_ClientSide()
-	--~ local rx,ry,rz =3D self:RoundPos(x,y,z)
-	--~ local d =3D len2(x-rx,y-ry)
-	--~ if (d > 0.1) then return end
-	=

-	-- TODO...
-	--~ print("StuckCheck")
-	--~ local x,y,z =3D GetPos_LastConfirmed()
-	--
-end
-
-
 function gTileFreeWalk:Impl_WalkRequestStep (bRunRequested)
 	-- self confirm here if there is no server, debug/offline mode only
 	if (gStartGameWithoutNetwork) then self:SetPos_LastConfirmed(self:RoundPo=
s(self:GetPos_ClientSide())) return end
 	=

-	--~ self:StuckCheck()
-	self:PathPoint_Pop() -- pathpoints aren't currently used
 	if (not Walk_RequestTimeOk()) then return end
-	=

-	local rx,ry,rz =3D self:RoundPos(self:GetPos_ClientSide())
+	print("Impl_WalkRequestStep",gMyTicks)
+	=

+	local nx,ny,nz =3D self:PathPoint_GetNext()
+	if (not nx) then nx,ny,nz =3D self:RoundPos(self:GetPos_ClientSide()) end
 	local lx,ly,lz =3D self:GetPos_LastRequested()
-	local dx,dy =3D rx-lx,ry-ly
+	local dx,dy =3D nx-lx,ny-ly
 	=

 	if (dx =3D=3D 0 and dy =3D=3D 0) then return end
 	local iDir =3D DirFromLocalDxDy(dx,dy)
 	if (not iDir) then return end
 	=

 	WalkStep_WalkInDir(iDir,bRunRequested,true)
-	=

-	=

-	=

-	--~ print("player",gPlayerXLoc,gPlayerYLoc,gPlayerDir)
-	--~ self:Impl_SetToPlayerPos(GetPlayerMobile())
-	--~ WalkLog2("Impl_WalkRequestStep timeok,haxnext",Walk_RequestTimeOk(),s=
elf:PathPoint_HasNext())
-	--~ local x1,y1,z1 =3D self:PathPoint_GetNth(1)
-	--~ if (not x1) then return end
-	--~ xloc1,yloc1,zloc1 =3D self:LocalToUOPos(x1,y1,z1)
-	--~ if (xloc2 and WalkStep_WalkToPosSimple(xloc2,yloc2,bRunRequested,fals=
e)) then return end
-	--~ print("WalkStep_WalkToPosSimple",xloc1,yloc1,gPlayerXLoc,gPlayerYLoc)
-	--~ WalkStep_WalkToPosSimple(xloc1,yloc1,bRunRequested,false)
-	-- todo : pathpoints can be impassable, happens during diagonal walk, don=
't send walk requests to those
-	-- determine the "next" position for the request, summarize as much into =
one step as possible
 end
 				=

 =

@@ -468,10 +436,11 @@
 =

 -- input : rounded
 -- read new surrounding height info
-function gTileFreeWalk:Impl_ScanGround (rx,ry,rz)
+function gTileFreeWalk:Impl_ScanGround (rx,ry,rz,ox,oy)
+	if (not ox) then ox,oy,oz =3D self:GetPos_LastConfirmed() end
+
 	local xloc,yloc,zloc =3D self:LocalToUOPos(rx,ry,rz)
 	=

-	local ox,oy,oz =3D self:PathPoint_GetLast()
 	local iSelfZ =3D nil -- zloc
 	local iComingHereDir
 	local groundcache =3D {}
@@ -535,11 +504,23 @@
 -- ##### ##### ##### ##### ##### pathpoints
 =

 -- the system remembers which path was walked clientside, and approximates=
 it for sending to the walk requests
-
-function gTileFreeWalk:PathPoint_SetLast	(x,y,z)		self.lastMarkedWalkPos =
=3D {x,y,z} end
-function gTileFreeWalk:PathPoint_GetLast	()			return unpack(self.lastMarke=
dWalkPos) end
+-- note : pathpoints can be impassable, happens during diagonal walk, don'=
t send walk requests to those
+
+	=

+-- mark position as "reached", consuming neighboring pathpoints
+function gTileFreeWalk:PathPoint_ReachPos (x,y,z)
+	local maxreached =3D 0
+	local c =3D self:PathPoint_Count()
+	for i =3D 1,c do =

+		local px,py,pz =3D self:PathPoint_GetNth(i)
+		if (abs(px-x) <=3D 1 and abs(py-y) <=3D 1) then maxreached =3D i end
+	end
+	if (maxreached =3D=3D 0) then return end
+	for i =3D 1,maxreached do self:PathPoint_Pop() end
+end
+
+function gTileFreeWalk:PathPoint_Count		() 			return table.getn(self.pathp=
oints) end
 function gTileFreeWalk:PathPoint_GetNext	() return self:PathPoint_GetNth(1=
) end
-function gTileFreeWalk:PathPoint_Count		() return table.getn(self.pathpoin=
ts) end
 function gTileFreeWalk:PathPoint_GetNth		(n) -- n=3D1 for first =3D next
 	if (not self.pathpoints[n]) then return end
 	return unpack(self.pathpoints[n])
@@ -548,17 +529,21 @@
 function gTileFreeWalk:PathPoint_Has		(n) return table.getn(self.pathpoint=
s) >=3D n end
 function gTileFreeWalk:PathPoint_Pop		() =

 	if (self:PathPoint_HasNext()) then =

-		local x,y,z =3D self:PathPoint_GetNext()
+		local x,y,z =3D self:PathPoint_GetNth(1)
 		self:DelDebugMarker("path"..x..","..y..","..z)
 		table.remove(self.pathpoints,1) =

 	end =

 end
 function gTileFreeWalk:PathPoint_Push		(x,y,z)
+	local c =3D self:PathPoint_Count()
+	if (c > 0) then =

+		local lx,ly,lz =3D unpack(self.pathpoints[c])
+		if (lx =3D=3D x and ly =3D=3D y) then return end
+	end
+	local lx,ly,lz =3D self:GetPos_LastRequested()
+	if (abs(lx-x) <=3D 1 and abs(ly-y) <=3D 1) then return end
 	table.insert(self.pathpoints,{x,y,z})
-	self:PathPoint_SetLast(x,y,z)
 	self:SetDebugMarker("path"..x..","..y..","..z, x,y,z, 0,0,0, 0.5,0.5,0.5)
-end
-function gTileFreeWalk:PathPoint_SetCur		()
 end
 =

 -- ##### ##### ##### ##### ##### position and coordinate system conversions
@@ -593,7 +578,6 @@
 	self:SetPos_LastConfirmed(	x,y,z)
 	self:SetPos_LastRequested(	x,y,z)
 	self.pathpoints =3D {}
-	self:PathPoint_SetLast(		x,y,z)
 end
 =

 =




From no-reply at zwischenwelt.org  Wed Oct 10 18:04:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 16:04:16 -0000
Subject: [Iris-commit] [IRIS] r1465 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20071010170004.A83761C18124@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 18:04:10 2007
New Revision: 1465

Log:
freewalk : fixed collision bug, improved performance a bit

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Wed Oct 10 18:04:10 2007
@@ -5,7 +5,7 @@
 =

 gTileFreeWalk =3D {}
 =

-kFreeWalkMouseSlowArea =3D 100
+kFreeWalkMouseSlowArea =3D 70
 =

 kTileFreeTestMobile =3D {artid=3D400,hue=3D33780, content=3D{
 		{artid=3Dhex2num("0x3EA2"),layer=3DkLayer_Mount},
@@ -128,12 +128,13 @@
 	end
 	=

 	-- execute movement (and collision/block handling)
-	if (bMoved) then		=

+	if (bMoved) then	=

 		-- block movement here
+		local rx,ry,rz =3D self:RoundPos(x,y,z)
 		--self:DebugMarkerGroup_Clear("touchwalls")
 		local vx,vy =3D sub2(x,y,ox,oy)
 		local movedist =3D len2(vx,vy)
-		local steps =3D math.ceil(movedist/(0.5*gTileFreePlayerRad)) =

+		local steps =3D math.ceil(movedist/(0.8*gTileFreePlayerRad)) =

 		if (steps > 0) then
 			local sx,sy =3D vx/steps,vy/steps
 			x,y =3D ox,oy
@@ -145,96 +146,24 @@
 				x,y =3D self:CollideWithWallEdge(x,y)
 				-- 3rd collision : with wall center again, to avoid the edge collision=
s pushing the player slowly inside the walls
 				x,y =3D self:CollideWithWallMid(x,y)
-				self:PathPoint_Push(self:RoundPos(x,y,z))
-			end
-		end
-		=

-		-- get new rounded position
-		local rx,ry,rz =3D self:RoundPos(x,y,z)
-		=

-		-- entered a new tile
-		if (self.lastscanx ~=3D rx or self.lastscany ~=3D ry) then =

-			self.groundcache =3D self:Impl_ScanGround(rx,ry,rz,self.lastscanx,self.=
lastscany) -- read surrounding height info
-			self.lastscanx =3D rx
-			self.lastscany =3D ry
-			=

-			self:DebugMarkerGroup_Clear("nearground")
-			function GetGround (x,y) local z =3D self.groundcache[x..","..y] return=
 z end --  print("GetGround",x,y,z,rx,ry)
-			self.walls =3D {}
-			for dx =3D -1,1 do =

-			for dy =3D -1,1 do =

-				local x,y,z =3D rx+dx,ry+dy,GetGround(dx,dy)
-				if (z) then =

-					local h =3D 0.5
-					--self:DebugMarkerGroup_AddCylinder("nearground",	x,y,z, 0.01,h,	0,1,=
0)
-					--self:DebugMarkerGroup_AddSphere("nearground", x,y,z, 0.1,		0,1,0)
-				else	=

-					z =3D rz
-					local e =3D 0.5
-					=

-					local b00 =3D true
-					local b01 =3D true
-					local b10 =3D true
-					local b11 =3D true
-			=

-					if (not GetGround(dx,dy+1)) then -- vertical
-						table.insert(self.walls,{	x-e,y,   x-e,y+e	})
-						table.insert(self.walls,{	x+e,y+e, x+e,y		})
-						b01 =3D false b11 =3D false
-					end
-					if (not GetGround(dx,dy-1)) then -- vertical
-						table.insert(self.walls,{	x-e,y-e, x-e,y		})
-						table.insert(self.walls,{	x+e,y,   x+e,y-e	})
-						b00 =3D false b10 =3D false
-					end
-					=

-					if (not GetGround(dx+1,dy)) then -- horizontal
-						table.insert(self.walls,{	x,y+e,   x+e,y+e	})
-						table.insert(self.walls,{	x+e,y-e, x,y-e		})
-						b10 =3D false b11 =3D false
-					end                                                           =

-					if (not GetGround(dx-1,dy)) then -- horizontal       =

-						table.insert(self.walls,{	x-e,y+e, x,y+e		})     =

-						table.insert(self.walls,{	x,y-e,   x-e,y-e	})
-						b00 =3D false b01 =3D false
-					end
-					=

-					if (b00) then table.insert(self.walls,{	x,y-e,   x-e,y	}) end
-					if (b01) then table.insert(self.walls,{	x-e,y,   x,y+e	}) end
-					if (b11) then table.insert(self.walls,{	x,y+e,   x+e,y	}) end
-					if (b10) then table.insert(self.walls,{	x+e,y,   x,y-e	}) end
+				rx,ry,rz =3D self:RoundPos(x,y,z)
+				self:PathPoint_Push(rx,ry,rz)
+				self:ScanGroundIfNeeded(rx,ry,rz)
+				=

+				-- calc correct z here
+				if (self.groundcache) then
+					local l =3D (x <=3D rx) and (rx-1) or rx
+					local t =3D (y <=3D ry) and (ry-1) or ry
+					local fx,fy =3D x-l,y-t
+					local x00,y00 =3D l-rx,t-ry
+					local zSelf =3D self.groundcache["0,0"] or z
+					local z00 =3D self.groundcache[(x00  )..","..(y00  )]
+					local z10 =3D self.groundcache[(x00+1)..","..(y00  )]
+					local z01 =3D self.groundcache[(x00  )..","..(y00+1)]
+					local z11 =3D self.groundcache[(x00+1)..","..(y00+1)]
+					z =3D InterpolateSquare(z00 or zSelf,z10 or zSelf,z01 or zSelf,z11 or=
 zSelf,fx,fy)
 				end
 			end
-			end
-			=

-			-- todo : add special walls to block diagonal movement, to avoid errors=
 with rounding
-			-- warning, the rounded position of the player can be blocked, due to d=
iagonal movement
-			=

-			-- precalc some vars for the walls
-			local h =3D 0.5
-			for k,wallarr in pairs(self.walls) do
-				local x1,y1,x2,y2 =3D unpack(wallarr)
-				local dx,dy =3D sub2(x2,y2,x1,y1)
-				local nx,ny =3D norm2(-dy,dx)
-				local invsqlen =3D 1.0/sqlen2(dx,dy)
-				self.walls[k] =3D {x1,y1,x2,y2,dx,dy,nx,ny,invsqlen}
-				--self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz, h=
,	1,0,0)
-			end
-		end -- endif entered a new tile
-		=

-		=

-		-- calc correct z here
-		if (self.groundcache) then
-			local l =3D (x <=3D rx) and (rx-1) or rx
-			local t =3D (y <=3D ry) and (ry-1) or ry
-			local fx,fy =3D x-l,y-t
-			local x00,y00 =3D l-rx,t-ry
-			local zSelf =3D self.groundcache["0,0"] or z
-			local z00 =3D self.groundcache[(x00  )..","..(y00  )]
-			local z10 =3D self.groundcache[(x00+1)..","..(y00  )]
-			local z01 =3D self.groundcache[(x00  )..","..(y00+1)]
-			local z11 =3D self.groundcache[(x00+1)..","..(y00+1)]
-			z =3D InterpolateSquare(z00 or zSelf,z10 or zSelf,z01 or zSelf,z11 or z=
Self,fx,fy)
 		end
 		=

 		self:SetPos_ClientSide(x,y,z)
@@ -292,6 +221,78 @@
 	return x,y
 end
 =

+-- scans the ground if clientpos entered a new tile, calculates walls
+function gTileFreeWalk:ScanGroundIfNeeded (rx,ry,rz)
+	if (self.lastscanx ~=3D rx or self.lastscany ~=3D ry) then =

+		self.groundcache =3D self:Impl_ScanGround(rx,ry,rz,self.lastscanx,self.l=
astscany) -- read surrounding height info
+		self.lastscanx =3D rx
+		self.lastscany =3D ry
+		self.bSkipWalkStep =3D false
+		=

+		self:DebugMarkerGroup_Clear("nearground")
+		function GetGround (x,y) local z =3D self.groundcache[x..","..y] return =
z end --  print("GetGround",x,y,z,rx,ry)
+		self.walls =3D {}
+		for dx =3D -1,1 do =

+		for dy =3D -1,1 do =

+			local x,y,z =3D rx+dx,ry+dy,GetGround(dx,dy)
+			if (z) then =

+				local h =3D 0.5
+				--self:DebugMarkerGroup_AddCylinder("nearground",	x,y,z, 0.01,h,	0,1,0)
+				--self:DebugMarkerGroup_AddSphere("nearground", x,y,z, 0.1,		0,1,0)
+			else	=

+				z =3D rz
+				local e =3D 0.5
+				=

+				local b00 =3D true
+				local b01 =3D true
+				local b10 =3D true
+				local b11 =3D true
+		=

+				if (not GetGround(dx,dy+1)) then -- vertical
+					table.insert(self.walls,{	x-e,y,   x-e,y+e	})
+					table.insert(self.walls,{	x+e,y+e, x+e,y		})
+					b01 =3D false b11 =3D false
+				end
+				if (not GetGround(dx,dy-1)) then -- vertical
+					table.insert(self.walls,{	x-e,y-e, x-e,y		})
+					table.insert(self.walls,{	x+e,y,   x+e,y-e	})
+					b00 =3D false b10 =3D false
+				end
+				=

+				if (not GetGround(dx+1,dy)) then -- horizontal
+					table.insert(self.walls,{	x,y+e,   x+e,y+e	})
+					table.insert(self.walls,{	x+e,y-e, x,y-e		})
+					b10 =3D false b11 =3D false
+				end                                                           =

+				if (not GetGround(dx-1,dy)) then -- horizontal       =

+					table.insert(self.walls,{	x-e,y+e, x,y+e		})     =

+					table.insert(self.walls,{	x,y-e,   x-e,y-e	})
+					b00 =3D false b01 =3D false
+				end
+				=

+				if (b00) then table.insert(self.walls,{	x,y-e,   x-e,y	}) end
+				if (b01) then table.insert(self.walls,{	x-e,y,   x,y+e	}) end
+				if (b11) then table.insert(self.walls,{	x,y+e,   x+e,y	}) end
+				if (b10) then table.insert(self.walls,{	x+e,y,   x,y-e	}) end
+			end
+		end
+		end
+		=

+		-- todo : add special walls to block diagonal movement, to avoid errors =
with rounding
+		-- warning, the rounded position of the player can be blocked, due to di=
agonal movement
+		=

+		-- precalc some vars for the walls
+		local h =3D 0.5
+		for k,wallarr in pairs(self.walls) do
+			local x1,y1,x2,y2 =3D unpack(wallarr)
+			local dx,dy =3D sub2(x2,y2,x1,y1)
+			local nx,ny =3D norm2(-dy,dx)
+			local invsqlen =3D 1.0/sqlen2(dx,dy)
+			self.walls[k] =3D {x1,y1,x2,y2,dx,dy,nx,ny,invsqlen}
+			--self:DebugMarkerGroup_AddWall("nearground", 	x1,y1,rz,   x2,y2,rz, h,=
	1,0,0)
+		end
+	end
+end
 =

 -- ##### ##### ##### ##### ##### gathering information, external walk para=
meters
 =

@@ -380,20 +381,21 @@
 function WalkLog2 (...) if (gKeyPressed[key_f]) then print("walklog2",unpa=
ck(arg)) end end
 =

 function gTileFreeWalk:Impl_WalkRequestStep (bRunRequested)
+	if (self.bSkipWalkStep) then return end -- skip this step if movement has=
 finished
+	=

 	-- self confirm here if there is no server, debug/offline mode only
 	if (gStartGameWithoutNetwork) then self:SetPos_LastConfirmed(self:RoundPo=
s(self:GetPos_ClientSide())) return end
 	=

 	if (not Walk_RequestTimeOk()) then return end
-	print("Impl_WalkRequestStep",gMyTicks)
 	=

 	local nx,ny,nz =3D self:PathPoint_GetNext()
 	if (not nx) then nx,ny,nz =3D self:RoundPos(self:GetPos_ClientSide()) end
 	local lx,ly,lz =3D self:GetPos_LastRequested()
 	local dx,dy =3D nx-lx,ny-ly
-	=

-	if (dx =3D=3D 0 and dy =3D=3D 0) then return end
+	if (dx =3D=3D 0 and dy =3D=3D 0) then self.bSkipWalkStep =3D true return =
end
+	=

 	local iDir =3D DirFromLocalDxDy(dx,dy)
-	if (not iDir) then return end
+	if (not iDir) then self.bSkipWalkStep =3D true return end
 	=

 	WalkStep_WalkInDir(iDir,bRunRequested,true)
 end



From no-reply at zwischenwelt.org  Wed Oct 10 19:16:38 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 17:16:38 -0000
Subject: [Iris-commit] [IRIS] r1466 - /trunk/src/builder_L.cpp
Message-ID: <20071010171638.7883E1C18165@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 19:16:37 2007
New Revision: 1466

Log:
fixed static geometry mousepicking

Modified:
    trunk/src/builder_L.cpp

Modified: trunk/src/builder_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/builder_L.cpp (original)
+++ trunk/src/builder_L.cpp Wed Oct 10 19:16:37 2007
@@ -91,10 +91,9 @@
 =

 		static int	Destroy			(lua_State *L) { PROFILE delete checkudata_alive(L)=
; return 0; }
 		=

-		/// bhit,bhitdist =3D meshentity:RayPick(x,y,z,rx,ry,rz,rvx,rvy,rvz) -- =
mainly for mousepicking
+		/// bhit,bhitdist =3D meshentity:RayPick(rx,ry,rz, rvx,rvy,rvz, x,y,z, q=
w,qx,qy,qz, sx,sy,sz) -- mainly for mousepicking
 		static int	RayPick			(lua_State *L) { PROFILE =

 			cMeshEntity* pMyEntity =3D checkudata_alive(L);
-			float fHitDist;
 			=

 			// don't use ++i or something here, the compiler might mix the order
 			Ogre::Vector3		vRayPos(	luaL_checknumber(L,2),luaL_checknumber(L,3),lua=
L_checknumber(L,4));
@@ -110,10 +109,13 @@
 			=

 			Ogre::Quaternion 	qRot(qw,qx,qy,qz);
 			Ogre::Vector3		vScale(scalex,scaley,scalez);
-			bool bHit =3D cOgreWrapper::GetSingleton().RayEntityQuery(vRayPos,vRayD=
ir,pMyEntity->mpOgreEntity,vPos,qRot,vScale,&fHitDist);
+			float fHitDist =3D 0;
+			int iFaceNum =3D cOgreWrapper::GetSingleton().RayEntityQuery(vRayPos,vR=
ayDir,pMyEntity->mpOgreEntity,vPos,qRot,vScale,&fHitDist);
+			bool bHit =3D iFaceNum !=3D -1;
 			lua_pushboolean(L,bHit);
 			lua_pushnumber(L,fHitDist);
-			return 2;
+			lua_pushnumber(L,iFaceNum);
+			return 3;
 		}
 		=

 		static int	SetUserObject	(lua_State *L) { PROFILE =




From no-reply at zwischenwelt.org  Wed Oct 10 19:46:48 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 17:46:48 -0000
Subject: [Iris-commit] [IRIS] r1467 - in /trunk: README
 data/lua/lib.mainmenu.lua data/lua/lib.tilefreewalk.lua
 data/lua/net.walk.lua
Message-ID: <20071010174648.DFEED1C18165@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 19:46:48 2007
New Revision: 1467

Log:
fixed offline mode with tilefree, you can now toggle cam mode with c in off=
line mode, you can now teleport using f6 in offline mode

Modified:
    trunk/README
    trunk/data/lua/lib.mainmenu.lua
    trunk/data/lua/lib.tilefreewalk.lua
    trunk/data/lua/net.walk.lua

Modified: trunk/README
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/README (original)
+++ trunk/README Wed Oct 10 19:46:48 2007
@@ -70,6 +70,7 @@
 =

 shift-click : simulates doubleclick (temporary, helpful for low framerates)
 =

+f6 : in offline mode : teleport to position under mouse
 f10 : show dev tool
 f11 : fallbacktool : developer tool used for removing static-part-fallback=
s (billboards) for which a model exists (important for combos)
 f12 : take highresscreenshot

Modified: trunk/data/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mainmenu.lua (original)
+++ trunk/data/lua/lib.mainmenu.lua Wed Oct 10 19:46:48 2007
@@ -248,8 +248,13 @@
 	-- Binds key and Inits all InGame-Data
 	StartInGame() -- otherwise handled by the serverpacket (kPacket_Login_Com=
plete)
 =

+	-- offline : tilefree walk teleport
+	BindDown("f6",function ()
+		gTileFreeWalk:SetPos_All(gTileFreeWalk:RoundPos(gTileFreeWalk:MousePickP=
os()))
+	end)
+	=

 	-- Unbind some keys only for offline mode (rest is the same as InGame)
-	UnBindArr({"u","q","e","tab","r","c","t","k","j","b","p","g","h","y"})
+	UnBindArr({"u","q","e","tab","r","t","k","j","b","p","g","h","y"})
 end
 =

 function StartMainMenu ()

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Wed Oct 10 19:46:48 2007
@@ -42,7 +42,8 @@
 function gTileFreeWalk:OnStartInGame ()
 	if (gStartGameWithoutNetwork) then
 		Renderer3D:ChangeCamMode(Renderer3D.kCamMode_Third)
-		self:SetPos_All(-1675.5,284.5,5.0)
+		--~ self:SetPos_All(-1675.5,284.5,5.0)
+		self:SetPos_All(-1548.5,326.5,5.0)
 	end
 	RegisterStepper(function () gTileFreeWalk:Step() end) =

 end
@@ -87,7 +88,6 @@
 	-- read input and calculate desired movement
 	if (bWalkInMouseDir) then
 		local dx,dy,pixel_dist_from_center =3D self:GetCurrentMouseDir() =

-		--local x,y,z =3D self:MousePickPos()
 		=

 		local slowarea_pixels =3D kFreeWalkMouseSlowArea
 		bRunRequested =3D pixel_dist_from_center > slowarea_pixels
@@ -384,7 +384,13 @@
 	if (self.bSkipWalkStep) then return end -- skip this step if movement has=
 finished
 	=

 	-- self confirm here if there is no server, debug/offline mode only
-	if (gStartGameWithoutNetwork) then self:SetPos_LastConfirmed(self:RoundPo=
s(self:GetPos_ClientSide())) return end
+	if (gStartGameWithoutNetwork) then =

+		local rx,ry,rz =3D self:RoundPos(self:GetPos_ClientSide())
+		self:PathPoint_ReachPos(rx,ry,rz)
+		self:SetPos_LastConfirmed(rx,ry,rz) =

+		self:SetPos_LastRequested(rx,ry,rz) =

+		return =

+	end
 	=

 	if (not Walk_RequestTimeOk()) then return end
 	=

@@ -488,7 +494,9 @@
 =

 -- world-units (tiles for uo) per second
 -- todo : depends on conditions(stamina,spells,buffs,debuffs...) and on mo=
unt/horse ?
-function gTileFreeWalk:Impl_GetMaxAllowedSpeed		() return 1000 / WalkGetIn=
terval(true) end
+function gTileFreeWalk:Impl_GetMaxAllowedSpeed		() =

+	return 1000 / (gStartGameWithoutNetwork and gWalkTimeout_MountRunningSpee=
d or WalkGetInterval(true))
+end
 function gTileFreeWalk:Impl_GetMaxAllowedTurnRate	() return 45*gfDeg2Rad e=
nd
 =

 -- feedback for thirdpersoncam

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Wed Oct 10 19:46:48 2007
@@ -144,8 +144,7 @@
 =

 function WalkGetInterval (bRunFlag)
 	local playermobile =3D GetPlayerMobile()
-	if (not playermobile) then return end
-	local bMount =3D playermobile:GetEquipmentAtLayer(kLayer_Mount)
+	local bMount =3D playermobile and playermobile:GetEquipmentAtLayer(kLayer=
_Mount)
 	return	 bMount and	(	bRunFlag and gWalkTimeout_MountRunningSpeed	or gWalk=
Timeout_MountMovingSpeed) or =

 						(	bRunFlag and gWalkTimeout_RunningSpeed		or gWalkTimeout_MovingSpee=
d)
 end



From no-reply at zwischenwelt.org  Wed Oct 10 19:50:43 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 17:50:43 -0000
Subject: [Iris-commit] [IRIS] r1468 - in /trunk/data: config.lua.dist
	lua/lib.tilefreewalk.lua
Message-ID: <20071010175043.965D11C18165@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 19:50:43 2007
New Revision: 1468

Log:
removed tilefree debug markers

Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Wed Oct 10 19:50:43 2007
@@ -245,3 +245,5 @@
 kMountZAdd =3D {[401]=3D-0.25,[400]=3D-0.10}
 =

 gEnableRTTModelImages =3D false
+
+gShowTileFreeDebug =3D false

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Wed Oct 10 19:50:43 2007
@@ -171,10 +171,12 @@
 	end
 	=

 	-- debug markers
-	local x,y,z =3D self:GetPos_LastConfirmed()
-	self:SetDebugMarker("GetPos_LastConfirmed", x,y,z, 0,0,0, 0,1,0)
-	local x,y,z =3D self:GetPos_LastRequested()
-	self:SetDebugMarker("GetPos_LastRequested", x,y,z, 0,0,0, 0,0,1)
+	if (gShowTileFreeDebug) then
+		local x,y,z =3D self:GetPos_LastConfirmed()
+		self:SetDebugMarker("GetPos_LastConfirmed", x,y,z, 0,0,0, 0,1,0)
+		local x,y,z =3D self:GetPos_LastRequested()
+		self:SetDebugMarker("GetPos_LastRequested", x,y,z, 0,0,0, 0,0,1)
+	end
 	=

 	-- send walk requests to server if possible
 	self:Impl_WalkRequestStep(bRunRequested)
@@ -540,7 +542,7 @@
 function gTileFreeWalk:PathPoint_Pop		() =

 	if (self:PathPoint_HasNext()) then =

 		local x,y,z =3D self:PathPoint_GetNth(1)
-		self:DelDebugMarker("path"..x..","..y..","..z)
+		if (gShowTileFreeDebug) then self:DelDebugMarker("path"..x..","..y..",".=
.z) end
 		table.remove(self.pathpoints,1) =

 	end =

 end
@@ -553,7 +555,7 @@
 	local lx,ly,lz =3D self:GetPos_LastRequested()
 	if (abs(lx-x) <=3D 1 and abs(ly-y) <=3D 1) then return end
 	table.insert(self.pathpoints,{x,y,z})
-	self:SetDebugMarker("path"..x..","..y..","..z, x,y,z, 0,0,0, 0.5,0.5,0.5)
+	if (gShowTileFreeDebug) then self:SetDebugMarker("path"..x..","..y..","..=
z, x,y,z, 0,0,0, 0.5,0.5,0.5) end
 end
 =

 -- ##### ##### ##### ##### ##### position and coordinate system conversions
@@ -598,7 +600,7 @@
 		=

 function gTileFreeWalk:UpdateClientPosMarker ()
 	local x,y,z =3D self:GetPos_ClientSide()
-	self:SetDebugMarker("GetPos_ClientSide", x,y,z, self.movedirx,self.movedi=
ry,0, 1,1,0)
+	if (gShowTileFreeDebug) then self:SetDebugMarker("GetPos_ClientSide", x,y=
,z, self.movedirx,self.movediry,0, 1,1,0) end
 end
 =

 function gTileFreeWalk:DebugMarkerGroup_Clear (groupname)



From no-reply at zwischenwelt.org  Wed Oct 10 20:36:28 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 18:36:28 -0000
Subject: [Iris-commit] [IRIS] r1469 - in /trunk/data:
 base/ui/sience_border.png base/ui/sience_button.png
 base/ui/sience_window.png base/ui/ui.material lua/gui/gui.styles.lua
 lua/lib.bugreport.lua lua/lib.mainmenu.lua
Message-ID: <20071010183628.D73E41C18165@zwischenwelt.org>

Author: sience
Date: Wed Oct 10 20:36:28 2007
New Revision: 1469

Log:
-new guistyle added

Added:
    trunk/data/base/ui/sience_border.png   (with props)
    trunk/data/base/ui/sience_button.png   (with props)
    trunk/data/base/ui/sience_window.png   (with props)
Modified:
    trunk/data/base/ui/ui.material
    trunk/data/lua/gui/gui.styles.lua
    trunk/data/lua/lib.bugreport.lua
    trunk/data/lua/lib.mainmenu.lua

Modified: trunk/data/base/ui/ui.material
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/base/ui/ui.material (original)
+++ trunk/data/base/ui/ui.material Wed Oct 10 20:36:28 2007
@@ -82,3 +82,45 @@
 		}
 	}
 }
+
+material ui_sience_border : guibase
+{
+	technique
+	{
+		pass
+		{
+			texture_unit
+			{
+				texture ui/sience_border.png
+			}
+		}
+	}
+}
+
+material ui_sience_button : guibase
+{
+	technique
+	{
+		pass
+		{
+			texture_unit
+			{
+				texture ui/sience_button.png
+			}
+		}
+	}
+}
+
+material ui_sience_window : guibase
+{
+	technique
+	{
+		pass
+		{
+			texture_unit
+			{
+				texture ui/sience_window.png
+			}
+		}
+	}
+}

Modified: trunk/data/lua/gui/gui.styles.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/gui/gui.styles.lua (original)
+++ trunk/data/lua/gui/gui.styles.lua Wed Oct 10 20:36:28 2007
@@ -1,7 +1,7 @@
 --###############################
 --###     GUI STYLES          ###
 --###############################
-gGuiDefaultStyleSet =3D "iris"
+gGuiDefaultStyleSet =3D "sience"
 =

 glGuiMakerStyleSet["ray"] =3D {
 default =3D {
@@ -46,3 +46,25 @@
 		clipborder_t=3D3,clipborder_b=3D3
 	},
 }
+
+glGuiMakerStyleSet["sience"] =3D {
+default =3D {
+		material=3D"ui_sience_border",size=3D32,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D16,cy2=3D16,cx3=3D8,cy3=3D8,
+		dx=3D0,dy=3D0,border=3D8,clipborder=3D6
+	},
+window =3D {
+		material=3D"ui_sience_window",size=3D64,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D35,cy2=3D28,cx3=3D21,cy3=3D28,
+		dx=3D0,dy=3D0,
+		border_l=3D8,border_r=3D21,border_t=3D8,border_b=3D28,
+		clipborder_l=3D8,clipborder_r=3D8,clipborder_t=3D16,clipborder_b=3D28
+	},
+button =3D {
+		material=3D"ui_sience_button",size=3D128,x=3D0,y=3D0,
+		cx1=3D8,cy1=3D8,cx2=3D112,cy2=3D9,cx3=3D8,cy3=3D8,
+		dx=3D0,dy=3D32,border=3D8,
+		clipborder_l=3D8,clipborder_r=3D5,
+		clipborder_t=3D3,clipborder_b=3D3
+	},
+}

Modified: trunk/data/lua/lib.bugreport.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.bugreport.lua (original)
+++ trunk/data/lua/lib.bugreport.lua Wed Oct 10 20:36:28 2007
@@ -69,10 +69,10 @@
 				local result =3D trim(MasterServer_BugReport(report,BugReportDialog_Ge=
tNote() or "") or "")
 				CloseBugReportDialog() =

 				if (result =3D=3D "ok") then
-					PlainMessageBox("bug report received, thank you =3D)")
+					PlainMessageBox("bug report received, thank you =3D)",gGuiDefaultStyl=
eSet,gGuiDefaultStyleSet)
 				else =

 					PlainMessageBox("sorry, something went wrong, we didn't get your bugr=
eport\n"..
-									"please see http://sfz.sourceforge.net for how to contact us dire=
ctly\n"..result)
+									"please see http://sfz.sourceforge.net for how to contact us dire=
ctly\n"..result,gGuiDefaultStyleSet,gGuiDefaultStyleSet)
 				end
 			end} },
 		}

Modified: trunk/data/lua/lib.mainmenu.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.mainmenu.lua (original)
+++ trunk/data/lua/lib.mainmenu.lua Wed Oct 10 20:36:28 2007
@@ -36,7 +36,7 @@
 	if ((not gLoginname) or gLoginname =3D=3D "" or (not gPassword) or gPassw=
ord =3D=3D "") then
 		local text =3D "cannot connect to shard '"..shardname.."', no username/p=
assword specified"
 		AddFadeLines(text)
-		PlainMessageBox(text)
+		PlainMessageBox(text,gGuiDefaultStyleSet,gGuiDefaultStyleSet)
 		return
 	end
 	=

@@ -50,7 +50,7 @@
 	if (not gNet_State) then =

 		local text =3D "connecting to shard '"..shardname.."' on "..gLoginServer=
IP..":"..gLoginServerPort.." FAILED !"
 		AddFadeLines(text)
-		PlainMessageBox(text)
+		PlainMessageBox(text,gGuiDefaultStyleSet,gGuiDefaultStyleSet)
 		return
 	end
 	=




From no-reply at zwischenwelt.org  Wed Oct 10 21:30:34 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 10 Oct 2007 19:30:34 -0000
Subject: [Iris-commit] [IRIS] r1470 - in /trunk/data: config.lua.dist
	lua/lib.tilefreewalk.lua
Message-ID: <20071010193034.6E67A1C18165@zwischenwelt.org>

Author: ghoulsblade
Date: Wed Oct 10 21:30:34 2007
New Revision: 1470

Log:
freewalk : added stuckcheck that teleports the player back to the last requ=
ested position if movement fails for 4 seconds

Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Wed Oct 10 21:30:34 2007
@@ -247,3 +247,4 @@
 gEnableRTTModelImages =3D false
 =

 gShowTileFreeDebug =3D false
+gShowTileFreeDebug =3D true

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Wed Oct 10 21:30:34 2007
@@ -16,6 +16,7 @@
 		=

 gTileFreePlayerRad =3D 0.2 -- radius of player/human
 gTileFreeDebugWallH =3D 0.7
+kStuckCheckDuration =3D 4000
 =

 -- ##### ##### ##### ##### ##### init
 =

@@ -26,6 +27,7 @@
 	self.debugmarkers =3D {}
 	self.debugmarkergroups =3D {}
 	self.walls =3D {}
+	self.iLastTimeNotStuck =3D 0
 	self.movedirx =3D 0
 	self.movediry =3D 1
 	self.pos_clientside =3D {0,0,0}
@@ -181,6 +183,14 @@
 	-- send walk requests to server if possible
 	self:Impl_WalkRequestStep(bRunRequested)
 	=

+	if (not gStartGameWithoutNetwork) then =

+		if (gMyTicks - self.iLastTimeNotStuck > kStuckCheckDuration) then
+			local lx,ly,lz =3D self:GetPos_LastRequested()
+			local rx,ry,rz =3D self:RoundPos(self:GetPos_ClientSide())
+			if (lx ~=3D rx or ly ~=3D ry) then self:StuckFix(lx,ly,lz) end
+		end
+	end
+	=

 	self:Impl_StepPlayer(fRequestedSpeed,bRunRequested)
 end
 =

@@ -405,7 +415,14 @@
 	local iDir =3D DirFromLocalDxDy(dx,dy)
 	if (not iDir) then self.bSkipWalkStep =3D true return end
 	=

-	WalkStep_WalkInDir(iDir,bRunRequested,true)
+	if (WalkStep_WalkInDir(iDir,bRunRequested,true)) then self.iLastTimeNotSt=
uck =3D gMyTicks end
+end
+
+function gTileFreeWalk:StuckFix (lx,ly,lz)
+	print("gTileFreeWalk:StuckFix")
+	self.iLastTimeNotStuck =3D gMyTicks
+	self:SetPos_All(lx,ly,lz)
+	self:UpdateClientPosMarker()
 end
 				=

 =

@@ -457,7 +474,7 @@
 	function RegisterZ (ldx,ldy,iNewZ)
 		groundcache[ldx..","..ldy] =3D groundcache[ldx..","..ldy] or (iNewZ and =
(iNewZ*0.1 + Renderer3D.gZ_Factor))
 	end
-	for iDir=3D0,7 do =

+	function CheckDir (iDir) 	=

 		local ldx,ldy =3D GetDirXLocal(iDir),GetDirYLocal(iDir)
 		if (sign(ldx) =3D=3D sign(rx-ox) and sign(ldy) =3D=3D sign(ry-oy)) then =
iComingHereDir =3D iDir end
 		local xloc2,yloc2 =3D xloc+GetDirX(iDir),yloc+GetDirY(iDir)
@@ -470,6 +487,8 @@
 			RegisterZ(ldx+GetDirXLocal(iDirR),ldy+GetDirYLocal(iDirR),self:Impl_Cal=
cWalkStep(xloc2+GetDirX(iDirR),yloc2+GetDirY(iDirR),iNewZ,iDirR))
 		end
 	end
+	for iDir=3D1,7,2 do CheckDir(iDir) end -- check diagonals first
+	for iDir=3D0,7,2 do CheckDir(iDir) end
 	=

 	iSelfZ =3D iSelfZ or self:Impl_CalcWalkStep(xloc,yloc,zloc,iComingHereDir=
 or 0)
 	RegisterZ(0,0,iSelfZ)
@@ -589,6 +608,7 @@
 	self:SetPos_ClientSide(		x,y,z)
 	self:SetPos_LastConfirmed(	x,y,z)
 	self:SetPos_LastRequested(	x,y,z)
+	while (self:PathPoint_Count() > 0) do self:PathPoint_Pop() end
 	self.pathpoints =3D {}
 end
 =




From no-reply at zwischenwelt.org  Thu Oct 11 19:32:28 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 11 Oct 2007 17:32:28 -0000
Subject: [Iris-commit] [IRIS] r1471 - in /trunk: bin/iris2.exe
 data/lua/filter.art.lua data/lua/lib.3d.dynamic.lua data/lua/lib.static.lua
 data/lua/lib.tilefreewalk.lua data/lua/lib.uoids.lua
Message-ID: <20071011173228.C2C131C1817C@zwischenwelt.org>

Author: sience
Date: Thu Oct 11 19:32:28 2007
New Revision: 1471

Log:
-missing skillids added
-offline walking recentered for new irisonline map
-hueing check added
-dynamic hueing temp. fixed
-water shouldn't hue anymore (Ogre is unable to unpack DXT1 for hueing)
-new binary

Modified:
    trunk/bin/iris2.exe
    trunk/data/lua/filter.art.lua
    trunk/data/lua/lib.3d.dynamic.lua
    trunk/data/lua/lib.static.lua
    trunk/data/lua/lib.tilefreewalk.lua
    trunk/data/lua/lib.uoids.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/lua/filter.art.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/filter.art.lua (original)
+++ trunk/data/lua/filter.art.lua Thu Oct 11 19:32:28 2007
@@ -36,7 +36,7 @@
 end
 =

 -- FILTER: static water and map to extra material (one for shaders and one=
 for normal mode (because we dont have coastline models))
-function FilterStaticWater(iTranslatedTileTypeID)
+function FilterStaticWater(iTranslatedTileTypeID,iHue)
 	if (((iTranslatedTileTypeID  >=3D  6038) and (iTranslatedTileTypeID <=3D =
 6066)) or
 		((iTranslatedTileTypeID  >=3D 13422) and (iTranslatedTileTypeID <=3D 134=
45)) or
 		((iTranslatedTileTypeID  >=3D 13460) and (iTranslatedTileTypeID <=3D 134=
83)) or
@@ -44,12 +44,13 @@
 		if (gTerrainShader) then
 			-- assosiate to different tile, because we have already a shader materi=
al for all static tiles
 			iTranslatedTileTypeID=3D19999
+			iHue=3D0						--do not hue shaded water
 		else
 			-- assosiate to one all static water to one tileid (we don't have all s=
tatic water tiles as meshes)
 			iTranslatedTileTypeID=3D6040
 		end
 	end
-	return iTranslatedTileTypeID
+	return iTranslatedTileTypeID,iHue
 end
 =

 --armoire - left

Modified: trunk/data/lua/lib.3d.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.dynamic.lua (original)
+++ trunk/data/lua/lib.3d.dynamic.lua Thu Oct 11 19:32:28 2007
@@ -110,7 +110,7 @@
 	else
 		-- normal 1 part object
 		item.gfx =3D CreateRootGfx3D()
-		meshname =3D (not gForceFallBackBillboards_Dynamics) and GetStaticMeshNa=
me(item.artid + 0*16384,item.hue)
+		meshname =3D (not gForceFallBackBillboards_Dynamics) and GetStaticMeshNa=
me(item.artid,item.hue) -- (item.artid+ 0*16384,item.hue)
 		if (meshname and meshname ~=3D "") then
 			item.gfx:SetMesh(meshname)
 			item.gfx:SetScale(-1,1,1)		-- (-1) thats because xmirror bug and wrong =
mirrored mashes

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Thu Oct 11 19:32:28 2007
@@ -67,6 +67,9 @@
 -- TODO : not flexible enough, what if model should be skipped, or multipl=
e models set ? or model depending on surrounding ?
 gLegacyModelCache =3D {}
 function GetStaticMeshName (iTileTypeID,iHue)
+	-- hue default value is 0
+	iHue =3D iHue or 0
+
 	--1st: Seasonal Translation
 	local iTranslatedTileTypeID =3D TranslateTileTypeID(iTileTypeID, gSeasonS=
etting)
 =

@@ -74,11 +77,8 @@
 	iTranslatedTileTypeID =3D FilterMesh(iTranslatedTileTypeID)
 =

 	-- FILTER: static water
-	iTranslatedTileTypeID =3D FilterStaticWater(iTranslatedTileTypeID)
+	iTranslatedTileTypeID,iHue =3D FilterStaticWater(iTranslatedTileTypeID, i=
Hue)
 	=

-	-- hue default value is 0
-	iHue =3D iHue or 0
-
 	local meshname =3D gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue]
 	if (meshname =3D=3D nil) then
 		-- try to load the new models
@@ -94,7 +94,7 @@
 				printdebug("static","mesh not available",meshname)
 				meshname =3D false =

 			else =

-				printdebug("static","used NEW model loader:",iTranslatedTileTypeID,iHu=
e,meshname)
+				printdebug("static","Static Meshloader:",iTranslatedTileTypeID,iHue,me=
shname)
 				=

 				if gManualArtMaterialLoader then
 					-- create unavailable uo_art_ID materials
@@ -107,13 +107,13 @@
 					end
 				end
 				-- Hue this Model | TODO : Partitial Hue
-				if (gHueLoader) then
-					if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileD=
ataFlag_Partial_Hue) ) then
-						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
-					else
-						HueMesh(meshname,gHueLoader,iHue)
-					end
-				end
+--				if (gHueLoader) then
+--					if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTil=
eDataFlag_Partial_Hue) ) then
+--						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
+--					elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) t=
hen
+--						HueMesh(meshname,gHueLoader,iHue)
+--					end
+--				end
 			end
 		end
 		=

@@ -124,6 +124,14 @@
 =

 		if (meshname =3D=3D "") then meshname =3D nil end
 		gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue] =3D meshname
+	end
+
+	if (meshname and gHueLoader) then
+		if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileData=
Flag_Partial_Hue) ) then
+			printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
+		elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) then
+			HueMesh(meshname,gHueLoader,iHue)
+		end
 	end
 	return meshname
 end
@@ -170,7 +178,7 @@
 				i =3D nil
 			else
 				printdebug("static","i",i,"name",name)
-				GetStaticMeshName(i,0)
+				GetStaticMeshName(i,0)	--TODO: hueing precached meshes
 				i =3D i + 1
 			end
 		until i =3D=3D nil

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Thu Oct 11 19:32:28 2007
@@ -44,8 +44,8 @@
 function gTileFreeWalk:OnStartInGame ()
 	if (gStartGameWithoutNetwork) then
 		Renderer3D:ChangeCamMode(Renderer3D.kCamMode_Third)
-		--~ self:SetPos_All(-1675.5,284.5,5.0)
-		self:SetPos_All(-1548.5,326.5,5.0)
+--		self:SetPos_All(-1548.5,326.5,5.0)
+		self:SetPos_All(-1489,402,-7.6)
 	end
 	RegisterStepper(function () gTileFreeWalk:Step() end) =

 end

Modified: trunk/data/lua/lib.uoids.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.uoids.lua (original)
+++ trunk/data/lua/lib.uoids.lua Thu Oct 11 19:32:28 2007
@@ -205,6 +205,9 @@
 gCharCreateSkillIDs["Necromancy"]				=3D 49
 gCharCreateSkillIDs["Focus"]					=3D 50
 gCharCreateSkillIDs["Chivalry"]					=3D 51
+gCharCreateSkillIDs["Bushido"]					=3D 52
+gCharCreateSkillIDs["Ninjitsu"]					=3D 53
+gCharCreateSkillIDs["Spellweaving"]				=3D 54
 =

 -- skill ids and stuff
 glSkillNames =3D {	=




From no-reply at zwischenwelt.org  Thu Oct 11 20:45:20 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 11 Oct 2007 18:45:20 -0000
Subject: [Iris-commit] [IRIS] r1472 - in /trunk: bin/iris2.exe
 data/config.lua.dist data/lua/filter.granny.lua data/lua/lib.bodygfx.lua
 data/lua/lib.granny.lua data/lua/lib.static.lua vc8/iris.vcproj
Message-ID: <20071011184521.F1EED1C1817C@zwischenwelt.org>

Author: sience
Date: Thu Oct 11 20:45:19 2007
New Revision: 1472

Log:
-some bugfixes
-grannyoverride filter named
-new project vs8 update

Modified:
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist
    trunk/data/lua/filter.granny.lua
    trunk/data/lua/lib.bodygfx.lua
    trunk/data/lua/lib.granny.lua
    trunk/data/lua/lib.static.lua
    trunk/vc8/iris.vcproj

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Thu Oct 11 20:45:19 2007
@@ -4,7 +4,7 @@
 =

 =

 -- Client Identification String
-gClientVersion =3D "6.0.2.0"  -- try other version for example "4.0.11c5"
+gClientVersion =3D "6.0.3.1"  -- try other version for example "4.0.11c5"
 =

 gUseNewModelLoader =3D true -- use old (models.uim) or new (many mesh file=
s) model loader
 =


Modified: trunk/data/lua/filter.granny.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/filter.granny.lua (original)
+++ trunk/data/lua/filter.granny.lua Thu Oct 11 20:45:19 2007
@@ -2,7 +2,7 @@
 gGrannyFilter =3D {}
 =

 -- FILTER: Grannys
-function MobileArtId2BodyId(mobileartid)
+function GrannyOverride(mobileartid)
 	if (gGrannyFilter[mobileartid]) then
 		printdebug("granny","Mapping: ArtID to GrannyID ",mobileartid," -> ",gGr=
annyFilter[mobileartid].grannyid)
 		return gGrannyFilter[mobileartid].grannyid
@@ -10,9 +10,8 @@
 	return mobileartid
 end
 =

---armoire - links (2636 - offen)
---2637 - geschlossen
 gGrannyFilter[987]	=3D{grannyid=3D400}
 gGrannyFilter[1987]	=3D{grannyid=3D401}
 gGrannyFilter[778]	=3D{grannyid=3D16}
 gGrannyFilter[292]	=3D{grannyid=3D220}
+gGrannyFilter[970]	=3D{grannyid=3D402}

Modified: trunk/data/lua/lib.bodygfx.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.bodygfx.lua (original)
+++ trunk/data/lua/lib.bodygfx.lua Thu Oct 11 20:45:19 2007
@@ -57,7 +57,7 @@
 	end =

 end
 =

-function gBodyGfxPrototype:GetBodyID () return self.bodyid or MobileArtId2=
BodyId(self.artid) end
+function gBodyGfxPrototype:GetBodyID () return self.bodyid or GrannyOverri=
de(self.artid) end
 =

 function gBodyGfxPrototype:CalcBodyHash ()
 	-- self.equipmentlist

Modified: trunk/data/lua/lib.granny.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.granny.lua (original)
+++ trunk/data/lua/lib.granny.lua Thu Oct 11 20:45:19 2007
@@ -140,7 +140,7 @@
 -- Models.txt : 234	2	0	FFFFFFFF	0	1.3	1.3	1.3	deer_stag
 -- Animal.lst : 0	Walk
 function GetAnimPath (mobileartid,animid) =

-	local bodyid =3D MobileArtId2BodyId(mobileartid)
+	local bodyid =3D GrannyOverride(mobileartid)
 	local modelinfo =3D GetGrannyModelInfo(bodyid)
 	if (not modelinfo) then return nil end
 	while (modelinfo.animid ~=3D 0) do modelinfo =3D GetGrannyModelInfo(model=
info.animid) end
@@ -155,7 +155,7 @@
 -- determines "type" (human,animal,monster,sea,other) from the second colu=
mn in the Models.txt
 -- Human.lst : 23	Horse_Walk_01
 function GetAnimName (mobileartid,animid) =

-	local bodyid =3D MobileArtId2BodyId(mobileartid)
+	local bodyid =3D GrannyOverride(mobileartid)
 	local modelinfo =3D GetGrannyModelInfo(bodyid)
 	while (modelinfo and modelinfo.animid ~=3D 0) do modelinfo =3D GetGrannyM=
odelInfo(modelinfo.animid) end
 	return modelinfo and gAnimInfoLists and gAnimInfoLists[modelinfo.typeid] =
and gAnimInfoLists[modelinfo.typeid][animid]
@@ -306,6 +306,7 @@
 =

 gGrannyMeshCache =3D {}
 function GetGrannyMeshName (modelid,skeletonname,hue)
+	modelid =3D GrannyOverride(modelid)
 	local cachename =3D modelid.."_"..hue
 	local cache =3D gGrannyMeshCache[cachename] =

 	if (cache ~=3D nil) then return cache end

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Thu Oct 11 20:45:19 2007
@@ -126,7 +126,7 @@
 		gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue] =3D meshname
 	end
 =

-	if (meshname and gHueLoader) then
+	if (gHueLoader) then
 		if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileData=
Flag_Partial_Hue) ) then
 			printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
 		elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) then

Modified: trunk/vc8/iris.vcproj
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/vc8/iris.vcproj (original)
+++ trunk/vc8/iris.vcproj Thu Oct 11 20:45:19 2007
@@ -124,7 +124,7 @@
 				OmitFramePointers=3D"true"
 				EnableFiberSafeOptimizations=3D"false"
 				WholeProgramOptimization=3D"true"
-				AdditionalIncludeDirectories=3D"&quot;$(INCLUDE)&quot;;&quot;$(OGRE_HO=
ME)\include\&quot;;&quot;$(OGRE_HOME)\include\OIS\&quot;;..\include\;..\inc=
lude\zlib;..\include\fmodx;..\include\lua;..\lugre\include"
+				AdditionalIncludeDirectories=3D"&quot;$(INCLUDE)&quot;;&quot;$(OGRE_HO=
ME)\include\&quot;;&quot;$(OGRE_HOME)\include\OIS\&quot;;..\include\;..\inc=
lude\zlib;..\include\fmodx;..\include\lua;..\lugre\include;&quot;c:\Program=
me\Microsoft Platform SDK\Include\&quot;"
 				PreprocessorDefinitions=3D"WIN32;USE_FMOD;MAIN_WORKING_DIR=3D\&quot;..=
/\&quot;"
 				RuntimeLibrary=3D"0"
 				EnableEnhancedInstructionSet=3D"1"
@@ -147,7 +147,7 @@
 				Name=3D"VCLinkerTool"
 				AdditionalDependencies=3D"LIBCMT.lib LIBCPMT.LIB AdvAPI32.Lib User32.L=
ib zlib.lib ws2_32.lib LibLua+CRT.lib LibLuaLib+CRT.lib OgreMain.lib OIS.li=
b fmodex_vc.lib"
 				OutputFile=3D"$(OutDir)\..\..\bin\iris2.exe"
-				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;$(OGRE_HOME)\=
lib\&quot;;..\libs\fmodx;..\libs\zlib;..\libs\lua"
+				AdditionalLibraryDirectories=3D"&quot;$(LIB)&quot;;&quot;$(OGRE_HOME)\=
lib\&quot;;..\libs\fmodx;..\libs\zlib;..\libs\lua;&quot;c:\Programme\Micros=
oft Platform SDK\Lib&quot;"
 				GenerateManifest=3D"true"
 				IgnoreAllDefaultLibraries=3D"true"
 				IgnoreDefaultLibraryNames=3D""
@@ -229,10 +229,6 @@
 			</File>
 			<File
 				RelativePath=3D"..\src\huffman.cpp"
-				>
-			</File>
-			<File
-				RelativePath=3D"..\src\legacydata.cpp"
 				>
 			</File>
 			<File



From no-reply at zwischenwelt.org  Thu Oct 11 22:19:16 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 11 Oct 2007 20:19:16 -0000
Subject: [Iris-commit] [IRIS] r1473 - in /trunk/data/lua: lib.3d.cam.lua
 lib.tilefreewalk.lua net.walk.lua obj/obj.player.lua
Message-ID: <20071011201916.E42831C18177@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct 11 22:19:15 2007
New Revision: 1473

Log:
improved 1st person cam for tilefreewalk

Modified:
    trunk/data/lua/lib.3d.cam.lua
    trunk/data/lua/lib.tilefreewalk.lua
    trunk/data/lua/net.walk.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/lib.3d.cam.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.cam.lua (original)
+++ trunk/data/lua/lib.3d.cam.lua Thu Oct 11 22:19:15 2007
@@ -3,6 +3,9 @@
 -- default mouse button binding
 if not gInput_CamMouseButton then gInput_CamMouseButton =3D GetNamedKey("m=
ouse3") end
 =

+kFirstPersonZAdd_Mount =3D 1.8
+kFirstPersonZAdd_NoMount =3D 1.4
+	=

 Renderer3D.gCamKeyCode =3D {}
 Renderer3D.gCamKeyCode.Left	=3D GetNamedKey("a")
 Renderer3D.gCamKeyCode.Right	=3D GetNamedKey("d")
@@ -66,7 +69,6 @@
 				[Renderer3D.kCamMode_Third]=3D		1.0*Renderer3D.gStartThirdPersonDist ,=
 }
 Renderer3D.gCamLookAheadDist =3D Renderer3D.gCamLookAheadDistList[Renderer=
3D.gCamMode]
 =

-Renderer3D.gCam_LastEgoDir =3D 0
 if (Renderer3D.gCamMode =3D=3D Renderer3D.kCamMode_Ego) then Renderer3D.gf=
CamAngV =3D 0.0    Renderer3D.gfCamAngH =3D kPi end
 if (Renderer3D.gCamMode =3D=3D Renderer3D.kCamMode_Third) then Renderer3D.=
gfCamAngV =3D -0.5*Renderer3D.gfMaxCamAngVDelta end
 =

@@ -98,7 +100,7 @@
 	self.gThirdPersonDist =3D self.gStartThirdPersonDist
 	self.gCamLookAheadDist =3D self.gCamLookAheadDistList[self.gCamMode]
 	self.gbCamRotChanged =3D true
-	if (self.gCamMode =3D=3D self.kCamMode_Ego) then self.gfCamAngV =3D 0.0 s=
elf.gfCamAngH =3D kPi - self.gCam_LastEgoDir * kPi/4 end
+	if (self.gCamMode =3D=3D self.kCamMode_Ego) then self.gfCamAngV =3D 0.0 s=
elf.gfCamAngH =3D kPi - 0 end
 	if (self.gCamMode =3D=3D self.kCamMode_Ego) then AddFadeLines("CamMode:Eg=
o") end
 	if (self.gCamMode =3D=3D self.kCamMode_Third) then AddFadeLines("CamMode:=
ThirdPerson") end
 	if (self.gCamMode =3D=3D self.kCamMode_FreeMove) then AddFadeLines("CamMo=
de:Free") end
@@ -140,27 +142,14 @@
 		-- TODO : highspeed move : if (cInput::bKeys[cInput::kkey_j])	GetMainCam=
():Move(-hispeed,0,0);
 		-- TODO : highspeed move : if (cInput::bKeys[cInput::kkey_i])	GetMainCam=
():Move(0, hispeed,0);
 		-- TODO : highspeed move : if (cInput::bKeys[cInput::kkey_k])	GetMainCam=
():Move(0,-hispeed,0);
-	elseif (self.gCamMode =3D=3D self.kCamMode_Ego) then
-		-- ego view, cam in player, turning with him
-		local x,y,z =3D GetPlayerPos()
-		if (x) then =

-			x,y,z =3D Renderer3D:UOPosToLocal(x+0.5,y+0.5,z*0.1) =

-			GetMainCam():SetPos(x,y,z + 1.5)
-			=

-			-- turn cam with player
-			local curdir =3D GetPlayerDir()
-			local dirdiff =3D curdir - self.gCam_LastEgoDir
-			if (dirdiff ~=3D 0) then
-				self.gbCamRotChanged =3D true
-				self.gCam_LastEgoDir =3D curdir
-				self.gfCamAngH =3D self.gfCamAngH - dirdiff * kPi / 4
-			end
-		end
-	end
-	=

+	end
+	=

+	=

+	local bMoveCamWithMouse =3D self.gCamMoveWithMouse or (gKeyPressed[key_mo=
use2] and self.gCamMode =3D=3D self.kCamMode_Ego)
 	=

 	-- cam mouse controll
-	if (self.gCamMoveWithMouse and (not gui.bMouseBlocked)) then
+	if (bMoveCamWithMouse and (not gui.bMouseBlocked)) then
+		if (not self.gCamMoveWithMouse_OffX) then self.gCamMoveWithMouse_OffX,se=
lf.gCamMoveWithMouse_OffY =3D iMouseX,iMouseY end
 		local relx =3D ((iMouseX - self.gCamMoveWithMouse_OffX) / (vw))*2.0
 		local rely =3D ((iMouseY - self.gCamMoveWithMouse_OffY) / (vh))*2.0
 		if (self.gbInvertMouseY) then rely =3D 1 - rely end
@@ -168,9 +157,26 @@
 		self.gfCamAngH =3D self.gfCamAngH - relx*self.gfMouseSensitivity*self.gf=
SensitivityMod
 		self.gfCamAngV =3D self.gfCamAngV - rely*self.gfMouseSensitivity*self.gf=
SensitivityMod
 		self.gbCamRotChanged =3D true
+		if (self.gCamMode =3D=3D self.kCamMode_Ego) then =

+			gTileFreeWalk:SetViewDir(-math.sin(self.gfCamAngH),math.cos(self.gfCamA=
ngH))
+		end
 	end	=

 =

 	=

+	if (self.gCamMode =3D=3D self.kCamMode_Ego) then
+		-- ego view, cam in player, turning with him
+		local x,y,z =3D gTileFreeWalk:GetExactLocalPos()
+		if (x) then =

+			GetMainCam():SetPos(x,y,z + (PlayerHasMount() and kFirstPersonZAdd_Moun=
t or kFirstPersonZAdd_NoMount))
+			--~ local curdir =3D GetPlayerDir()
+			local dx,dy =3D gTileFreeWalk:GetViewDir()
+			--~ local qw,qx,qy,qz =3D gTileFreeWalk:GetOrientation()
+			=

+			-- turn cam with player
+			self.gbCamRotChanged =3D true
+			self.gfCamAngH =3D math.atan2(dy,dx) - math.pi*0.5
+		end
+	end
 	=

 	-- cam rotate
 	if (self.gbCamRotChanged) then
@@ -191,15 +197,13 @@
 	-- cam movement dependant on cam rot
 	if (self.gCamMode =3D=3D self.kCamMode_Third) then
 		-- cam centered around player
-		local x,y,z =3D Renderer3D:GetExactLocalPos() =

+		local x,y,z =3D gTileFreeWalk:GetExactLocalPos()
 		if (x) then =

 			local ax,ay,az =3D Quaternion.ApplyToVector( 0,0,self.gThirdPersonDist,=
self.gCamRotW,self.gCamRotX,self.gCamRotY,self.gCamRotZ)
 			GetMainCam():SetPos(ax+x,ay+y,az+z + 1.0)
 		end
 	end
 end
-
-function Renderer3D:GetExactLocalPos () return gTileFreeWalk:GetExactLocal=
Pos() end
 =

 -- can return floating point block position
 function Renderer3D:UpdateCompass()
@@ -208,7 +212,7 @@
 	=

 	-- if in third person, center compass on player instead of on cam
 	if (Renderer3D.gCamMode =3D=3D Renderer3D.kCamMode_Third) then
-		local x,y,z =3D self:GetExactLocalPos()
+		local x,y,z =3D gTileFreeWalk:GetExactLocalPos()
 		local xloc,yloc,zloc =3D self:LocalToUOPos(x,y,z*10)
 		--~ local xloc,yloc,zloc =3D GetPlayerPos()
 		if (xloc) then return ax, xloc/8, yloc/8, xmirror end

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Thu Oct 11 22:19:15 2007
@@ -89,15 +89,17 @@
 	=

 	-- read input and calculate desired movement
 	if (bWalkInMouseDir) then
-		local dx,dy,pixel_dist_from_center =3D self:GetCurrentMouseDir() =

-		=

-		local slowarea_pixels =3D kFreeWalkMouseSlowArea
-		bRunRequested =3D pixel_dist_from_center > slowarea_pixels
-		local slowarea_factor =3D math.min(1.0,pixel_dist_from_center / slowarea=
_pixels) -- mouse near center : move slow
-		self.movedirx =3D dx
-		self.movediry =3D dy
-		local maxspeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry,0)
-		fRequestedSpeed =3D maxspeed * slowarea_factor
+		if (Renderer3D:IsFirstPersonCam()) then
+			fRequestedSpeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry=
,0)
+		else
+			local dx,dy,pixel_dist_from_center =3D self:GetCurrentMouseDir() =

+			local slowarea_pixels =3D kFreeWalkMouseSlowArea
+			bRunRequested =3D pixel_dist_from_center > slowarea_pixels
+			local slowarea_factor =3D math.min(1.0,pixel_dist_from_center / sloware=
a_pixels) -- mouse near center : move slow
+			self.movedirx =3D dx
+			self.movediry =3D dy
+			fRequestedSpeed =3D self:GetClientSideSpeed(self.movedirx,self.movediry=
,0) * slowarea_factor
+		end
 		x =3D x + self.movedirx * fRequestedSpeed * gSecondsSinceLastFrame
 		y =3D y + self.movediry * fRequestedSpeed * gSecondsSinceLastFrame
 		bMoved =3D true
@@ -424,7 +426,13 @@
 	self:SetPos_All(lx,ly,lz)
 	self:UpdateClientPosMarker()
 end
-				=

+
+-- dx,dy,dz =3D gTileFreeWalk:GetViewDir() , dz is always zero
+function gTileFreeWalk:GetViewDir ()		return self.movedirx or 0,self.moved=
iry or -1,0 end
+function gTileFreeWalk:SetViewDir (dx,dy)	self.movedirx,self.movediry =3D =
dx,dy end
+
+-- qw,qx,qy,qz =3D gTileFreeWalk:GetOrientation()
+function gTileFreeWalk:GetOrientation ()	return Quaternion.getRotation(0,-=
1,0,self:GetViewDir()) end
 =

 -- fRequestedSpeed is the speed requested by the mousepos/keyboard, might =
not be reached, e.g. when walking against a wall
 function gTileFreeWalk:Impl_StepPlayer (fRequestedSpeed,bRunRequested)
@@ -435,7 +443,7 @@
 	self.bRunRequested =3D bRunRequested
 	=

 	local x,y,z =3D self:GetPos_ClientSide()
-	local qw,qx,qy,qz =3D Quaternion.getRotation(0,-1,0,self.movedirx or 0,se=
lf.movediry or -1,0)
+	local qw,qx,qy,qz =3D self:GetOrientation()
 	=

 	-- apply to body
 	if (gStartGameWithoutNetwork) then -- offline mode, show test model

Modified: trunk/data/lua/net.walk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.walk.lua (original)
+++ trunk/data/lua/net.walk.lua Thu Oct 11 22:19:15 2007
@@ -143,10 +143,8 @@
 end	=

 =

 function WalkGetInterval (bRunFlag)
-	local playermobile =3D GetPlayerMobile()
-	local bMount =3D playermobile and playermobile:GetEquipmentAtLayer(kLayer=
_Mount)
-	return	 bMount and	(	bRunFlag and gWalkTimeout_MountRunningSpeed	or gWalk=
Timeout_MountMovingSpeed) or =

-						(	bRunFlag and gWalkTimeout_RunningSpeed		or gWalkTimeout_MovingSpee=
d)
+	return	 PlayerHasMount() and	(	bRunFlag and gWalkTimeout_MountRunningSpee=
d	or gWalkTimeout_MountMovingSpeed) or =

+									(	bRunFlag and gWalkTimeout_RunningSpeed		or gWalkTimeout_MovingS=
peed)
 end
 =

 -- internal, don't call directly, no check for walkable, only checks for t=
ime

Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Thu Oct 11 22:19:15 2007
@@ -101,6 +101,13 @@
 	GuiInit()
 end
 =

+
+function PlayerGetMount ()
+	local playermobile =3D GetPlayerMobile()
+	return playermobile and playermobile:GetEquipmentAtLayer(kLayer_Mount)
+end
+function PlayerHasMount () return PlayerGetMount() ~=3D nil end
+
 function IsObjectFarEnoughToDestroy (xloc,yloc,player_xloc,player_yloc)
 	local dx =3D xloc - player_xloc
 	local dy =3D yloc - player_yloc



From no-reply at zwischenwelt.org  Fri Oct 12 01:21:17 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 11 Oct 2007 23:21:17 -0000
Subject: [Iris-commit] [IRIS] r1474 - /trunk/data/lua/lib.static.lua
Message-ID: <20071011232118.430F01C1817C@zwischenwelt.org>

Author: sience
Date: Fri Oct 12 01:21:14 2007
New Revision: 1474

Log:
-temp. fix

Modified:
    trunk/data/lua/lib.static.lua

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Fri Oct 12 01:21:14 2007
@@ -126,7 +126,7 @@
 		gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue] =3D meshname
 	end
 =

-	if (gHueLoader) then
+	if (meshname and gHueLoader and (iHue ~=3D 0)) then
 		if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileData=
Flag_Partial_Hue) ) then
 			printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
 		elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) then



From no-reply at zwischenwelt.org  Sat Oct 13 01:01:47 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Fri, 12 Oct 2007 23:01:47 -0000
Subject: [Iris-commit] [IRIS] r1475 - in /trunk/data/lua: lib.packet.lua
 lib.static.lua net.login.lua net.other.lua net/net.dynamic.lua
Message-ID: <20071012230147.DF93B1C18125@zwischenwelt.org>

Author: sience
Date: Sat Oct 13 01:01:47 2007
New Revision: 1475

Log:
-several additions to netpackets
-small bugfix for meshname

Modified:
    trunk/data/lua/lib.packet.lua
    trunk/data/lua/lib.static.lua
    trunk/data/lua/net.login.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net/net.dynamic.lua

Modified: trunk/data/lua/lib.packet.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.packet.lua (original)
+++ trunk/data/lua/lib.packet.lua Sat Oct 13 01:01:47 2007
@@ -146,7 +146,7 @@
 gPacketType.kPacket_Trigger_Edit									=3D { id=3Dhex2num("0x8A") }
 gPacketType.kPacket_Display_Sign									=3D { id=3Dhex2num("0x8B") }
 gPacketType.kPacket_Server_Redirect									=3D { id=3Dhex2num("0x8C") }
-gPacketType.kPacket_Unused3											=3D { id=3Dhex2num("0x8D") }
+gPacketType.kPacket_KR_CharacterCreation							=3D { id=3Dhex2num("0x8D") }
 gPacketType.kPacket_Move_Character									=3D { id=3Dhex2num("0x8E") }
 gPacketType.kPacket_Unused4											=3D { id=3Dhex2num("0x8F") }
 =


Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Sat Oct 13 01:01:47 2007
@@ -92,7 +92,7 @@
 			printdebug("static","query model",meshname)
 			if not OgreMeshAvailable(meshname) then =

 				printdebug("static","mesh not available",meshname)
-				meshname =3D false =

+				meshname =3D nil
 			else =

 				printdebug("static","Static Meshloader:",iTranslatedTileTypeID,iHue,me=
shname)
 				=

@@ -117,7 +117,7 @@
 			end
 		end
 		=

-		if gLegacyModelAndTextureLoader and (meshname =3D=3D false or meshname =
=3D=3D nil) then
+		if ( gLegacyModelAndTextureLoader and (meshname =3D=3D nil) ) then
 			meshname =3D gLegacyModelAndTextureLoader:CreateMesh(iTranslatedTileTyp=
eID)
 			printdebug("static","used OLD model loader:",iTranslatedTileTypeID,iHue=
,meshname)
 		end
@@ -126,7 +126,8 @@
 		gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue] =3D meshname
 	end
 =

-	if (meshname and gHueLoader and (iHue ~=3D 0)) then
+	-- Hue this Model | TODO : Partitial Hue
+	if ( (meshname ~=3D nil) and gHueLoader ) then
 		if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileData=
Flag_Partial_Hue) ) then
 			printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
 		elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) then

Modified: trunk/data/lua/net.login.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.login.lua (original)
+++ trunk/data/lua/net.login.lua Sat Oct 13 01:01:47 2007
@@ -163,8 +163,17 @@
 	printdebug("login",sprintf("ServerFlag: 0x%08x\n",charlist.flags))
 =

 	--[[
-	BYTE[4] Flags (0x02 =3D send config/req logout (IGR?), 0x04 =3D single ch=
aracter (siege), 0x08 =3D enable npcpopup menus,
-				   0x10 =3D unknown, 0x20: enable common AOS features (tooltip thing/f=
ight system book, but not AOS monsters/map/skills)
+	Flags (each flag is for each feature, if you need to combine features, yo=
u need to summ flags):
+	0x2 =3D overwrite configuration button;
+	0x4 =3D limit 1 character per account;
+	0x8 =3D enable context menus;
+	0x10 =3D limit character slots;
+	0x20 =3D paladin and necromancer classes enable common AOS features (tool=
tip thing/fight system book, but not AOS monsters/map/skills);
+	0x40 =3D 6th character slot;
+	0x80 =3D samurai and ninja classes;
+	0x100 =3D elven race;
+	0x200 =3D KR support flag1;
+	0x400 =3D KR support flag2
 	]]--
 	=

 	MainMenuShowCharList(charlist)

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Sat Oct 13 01:01:47 2007
@@ -31,9 +31,31 @@
 kPacket_Generic_SubCommand_UnknownSE			=3D hex2num("0x24")	-- Client -> Se=
rver packet
 kPacket_Generic_SubCommand_EnableSESpellIcons	=3D hex2num("0x25")
 kPacket_Generic_SubCommand_SpeedMode			=3D hex2num("0x26")
-kPacket_Generic_SubCommand_NewRaceGender		=3D hex2num("0x2a")
+kPacket_Generic_SubCommand_GuildGumpRequest		=3D hex2num("0x28")	-- Client=
 -> Server : Done!
+kPacket_Generic_SubCommand_NewRaceGender		=3D hex2num("0x2A")
 kPacket_Generic_SubCommand_BandageTarget		=3D hex2num("0x2C")	-- Client ->=
 Server packet,For use with the new Bandage Self client macro. Introduced i=
n 5.0.4x
-kPacket_Generic_SubCommand_GuildGumpRequest		=3D hex2num("0x28")	-- Client=
 -> Server : Done!
+
+--new sincec KR
+kPacket_Generic_SubCommand_KR_HouseGumpResponse =3D hex2num("0x2F")	-- BF.=
2F - KR House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_default =3D hex2num("0x63"=
)	--BF.2F.63 - KR Default House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_pubpriv =3D hex2num("0x65"=
)	--BF.2F.65 - KR Change Public/Private House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_convert =3D hex2num("0x66"=
)	--BF.2F.66 - KR Convert into the customizable House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_relocate=3D hex2num("0x68"=
)	--BF.2F.68 - KR Relocate Moving Crate House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_sign	=3D hex2num("0x69")	-=
-BF.2F.69 - KR Change Sign House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_hanger	=3D hex2num("0x6A")=
	--BF.2F.6A - KR Change Sign Hanger House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_post	=3D hex2num("0x6B")	-=
-BF.2F.6B - KR Change Sign Post House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_foundation=3D hex2num("0x6=
C")	--BF.2F.6C - KR Change Foundation Style House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_rename	=3D hex2num("0x6D")=
	--BF.2F.6D - KR Rename House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_demolish=3D hex2num("0x6E"=
)	--BBF.2F.6E - KR Demolish House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_trade	=3D hex2num("0x6F")	=
--BF.2F.6F - KR Trade House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_primary	=3D hex2num("0x70"=
)	--BF.2F.70 - KR Make Primary House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_coowner	=3D hex2num("0x71"=
)	--BF.2F.71 - KR Change To Co-Owner House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_friend	=3D hex2num("0x72")=
	--BF.2F.72 - KR Change To Friend House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_access	=3D hex2num("0x73")=
	--BF.2F.73 - KR Change To Access House Menu Gump Response
+kPacket_Generic_SubCommand_KR_HouseGumpResponse_primary	=3D hex2num("0x74"=
)	--BF.2F.74 - KR Ban House Menu Gump Response
+--a.s.o. to BF.2F.80
+kPacket_Generic_SubCommand_TargetbyResource		=3D hex2num("0x30")	---BF.30 =
- KR Target By Resource Macro
+
 kPacket_Generic_SubCommand_QuestGumpRequest		=3D hex2num("0x32")	-- Client=
 -> Server : Done!
 --[[
 -race_gender-packet

Modified: trunk/data/lua/net/net.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.dynamic.lua (original)
+++ trunk/data/lua/net/net.dynamic.lua Sat Oct 13 01:01:47 2007
@@ -110,7 +110,7 @@
 		dynamicdata.amount				=3D input:PopNetUint16()
 		dynamicdata.xloc				=3D input:PopNetInt16()
 		dynamicdata.yloc				=3D input:PopNetInt16()
-		dynamicdata.zloc				=3D 0
+		dynamicdata.zloc				=3D 0						--Grid Index (only since 6.0.1.7 2D and 2=
.45.5.6 KR)
 		dynamicdata.iContainerSerial 	=3D input:PopNetUint32()
 		dynamicdata.hue 				=3D input:PopNetUint16()
 =

@@ -129,7 +129,7 @@
 	dynamicdata.amount				=3D input:PopNetUint16()
 	dynamicdata.xloc				=3D input:PopNetInt16()
 	dynamicdata.yloc				=3D input:PopNetInt16()
-	dynamicdata.zloc				=3D 0
+	dynamicdata.zloc				=3D 0						--Grid Index (only since 6.0.1.7 2D and 2.=
45.5.6 KR)
 	dynamicdata.iContainerSerial	=3D input:PopNetUint32()
 	dynamicdata.hue					=3D input:PopNetUint16()
 	=




From no-reply at zwischenwelt.org  Sat Oct 13 22:47:41 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 13 Oct 2007 20:47:41 -0000
Subject: [Iris-commit] [IRIS] r1476 - /trunk/data/config.lua.dist
Message-ID: <20071013204742.0842D1C18125@zwischenwelt.org>

Author: sience
Date: Sat Oct 13 22:47:41 2007
New Revision: 1476

Log:
-client version switched back to 6.0.1.6 (suggested from pmouse.thx)

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sat Oct 13 22:47:41 2007
@@ -4,7 +4,7 @@
 =

 =

 -- Client Identification String
-gClientVersion =3D "6.0.3.1"  -- try other version for example "4.0.11c5"
+gClientVersion =3D "6.0.1.6"  -- try other version for example "4.0.11c5"
 =

 gUseNewModelLoader =3D true -- use old (models.uim) or new (many mesh file=
s) model loader
 =




From no-reply at zwischenwelt.org  Sun Oct 14 01:12:53 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sat, 13 Oct 2007 23:12:53 -0000
Subject: [Iris-commit] [IRIS] r1477 - in /trunk/data: config.lua.dist
 lua/lib.data.lua lua/lib.static.lua
Message-ID: <20071013231254.015961C18125@zwischenwelt.org>

Author: sience
Date: Sun Oct 14 01:12:53 2007
New Revision: 1477

Log:
-2 small bugfixes

Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.data.lua
    trunk/data/lua/lib.static.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sun Oct 14 01:12:53 2007
@@ -247,4 +247,3 @@
 gEnableRTTModelImages =3D false
 =

 gShowTileFreeDebug =3D false
-gShowTileFreeDebug =3D true

Modified: trunk/data/lua/lib.data.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.data.lua (original)
+++ trunk/data/lua/lib.data.lua Sun Oct 14 01:12:53 2007
@@ -45,9 +45,10 @@
 -- art material loader with caching
 gArtMatCache =3D {}
 function GetArtMat (iArtID,hueid)
+	if (not gArtMapLoader) then return "art_fallback" end
 	if (not(hueid) or (tonumber(hueid) > gMaxHueValue)) then hueid=3D0 end
 	local res =3D gArtMatCache[iArtID.."_"..hueid]
-	if (not res and gArtMapLoader) then
+	if (not res) then
 		res =3D {}
 		-- bPixelExact,bInvertY,bInvertX,bHasAlpha,bEnableLighting,bEnableDepthW=
rite,HueLoader,iHue
 		res.material =3D gArtMapLoader:CreateMaterial(iArtID,true,false,false,tr=
ue,false,false, gHueLoader, hueid)

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Sun Oct 14 01:12:53 2007
@@ -80,6 +80,7 @@
 	iTranslatedTileTypeID,iHue =3D FilterStaticWater(iTranslatedTileTypeID, i=
Hue)
 	=

 	local meshname =3D gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue]
+
 	if (meshname =3D=3D nil) then
 		-- try to load the new models
 		if gUseNewModelLoader then



From no-reply at zwischenwelt.org  Sun Oct 14 14:40:21 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 14 Oct 2007 12:40:21 -0000
Subject: [Iris-commit] [IRIS] r1478 - /trunk/data/config.lua.dist
Message-ID: <20071014124021.A517D1C1816A@zwischenwelt.org>

Author: sience
Date: Sun Oct 14 14:40:19 2007
New Revision: 1478

Log:
-temp. fix for seg. fault (when gMapIndex =3D 0 -> iris crashes, when gMapI=
ndex =3D 1 it doesn't crash)

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Sun Oct 14 14:40:19 2007
@@ -55,7 +55,7 @@
 gSightRange	=3D 2
 =

 -- 0 Trammel, 1 Felucca, 2 Ilshenar, 3 Malas, 4 Tokuno
-gMapIndex =3D 0
+gMapIndex =3D 1
 =

 gCompassZoomFactor =3D 1.5
 gCompassSize =3D 150 -- in pixels on screen, set to 0 to disable



From no-reply at zwischenwelt.org  Tue Oct 16 20:56:24 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 16 Oct 2007 18:56:24 -0000
Subject: [Iris-commit] [IRIS] r1479 - /trunk/data/skippedfallbacks.lua
Message-ID: <20071016185624.842AE1C181BD@zwischenwelt.org>

Author: sience
Date: Tue Oct 16 20:56:24 2007
New Revision: 1479

Log:
-one skippedfallback added

Modified:
    trunk/data/skippedfallbacks.lua

Modified: trunk/data/skippedfallbacks.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/skippedfallbacks.lua (original)
+++ trunk/data/skippedfallbacks.lua Tue Oct 16 20:56:24 2007
@@ -342,29 +342,30 @@
 RegisterSkippedArtBillboardFallBack(12968) -- 0x32a8 name=3Dlava
 RegisterSkippedArtBillboardFallBack(12969) -- 0x32a9 name=3Dlava
 RegisterSkippedArtBillboardFallBack(12966) -- 0x32a6 name=3Dlava
-RegisterSkippedArtBillboardFallBack(7507) -- 0x1d53 name=3Dskeleton
-RegisterSkippedArtBillboardFallBack(7228) -- 0x1c3c name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(7450) -- 0x1d1a name=3Dbody
-RegisterSkippedArtBillboardFallBack(7451) -- 0x1d1b name=3Dbody
-RegisterSkippedArtBillboardFallBack(7238) -- 0x1c46 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(7236) -- 0x1c44 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(7541) -- 0x1d75 name=3Dskeleton
-RegisterSkippedArtBillboardFallBack(7540) -- 0x1d74 name=3Dskeleton
-RegisterSkippedArtBillboardFallBack(7250) -- 0x1c52 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(7249) -- 0x1c51 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(7254) -- 0x1c56 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(7253) -- 0x1c55 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(1154) -- 0x0482 name=3Dfireplace
-RegisterSkippedArtBillboardFallBack(1118) -- 0x045e name=3Dfireplace
-RegisterSkippedArtBillboardFallBack(7235) -- 0x1c43 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(7233) -- 0x1c41 name=3Dcoffin
-RegisterSkippedArtBillboardFallBack(2629) -- 0x0a45 name=3Ddresser
-RegisterSkippedArtBillboardFallBack(2621) -- 0x0a3d name=3Ddresser
-RegisterSkippedArtBillboardFallBack(7744) -- 0x1e40 name=3Dbearskin rug
-RegisterSkippedArtBillboardFallBack(7746) -- 0x1e42 name=3Dbearskin rug
-RegisterSkippedArtBillboardFallBack(7747) -- 0x1e43 name=3Dbearskin rug
-RegisterSkippedArtBillboardFallBack(7748) -- 0x1e44 name=3Dbearskin rug
-RegisterSkippedArtBillboardFallBack(7749) -- 0x1e45 name=3Dbearskin rug
-RegisterSkippedArtBillboardFallBack(7750) -- 0x1e46 name=3Dbearskin rug
-RegisterSkippedArtBillboardFallBack(7751) -- 0x1e47 name=3Dbearskin rug
-RegisterSkippedArtBillboardFallBack(7752) -- 0x1e48 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7507) -- 0x1d53 name=3Dskeleton
+RegisterSkippedArtBillboardFallBack(7228) -- 0x1c3c name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(7450) -- 0x1d1a name=3Dbody
+RegisterSkippedArtBillboardFallBack(7451) -- 0x1d1b name=3Dbody
+RegisterSkippedArtBillboardFallBack(7238) -- 0x1c46 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(7236) -- 0x1c44 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(7541) -- 0x1d75 name=3Dskeleton
+RegisterSkippedArtBillboardFallBack(7540) -- 0x1d74 name=3Dskeleton
+RegisterSkippedArtBillboardFallBack(7250) -- 0x1c52 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(7249) -- 0x1c51 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(7254) -- 0x1c56 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(7253) -- 0x1c55 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(1154) -- 0x0482 name=3Dfireplace
+RegisterSkippedArtBillboardFallBack(1118) -- 0x045e name=3Dfireplace
+RegisterSkippedArtBillboardFallBack(7235) -- 0x1c43 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(7233) -- 0x1c41 name=3Dcoffin
+RegisterSkippedArtBillboardFallBack(2629) -- 0x0a45 name=3Ddresser
+RegisterSkippedArtBillboardFallBack(2621) -- 0x0a3d name=3Ddresser
+RegisterSkippedArtBillboardFallBack(7744) -- 0x1e40 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7746) -- 0x1e42 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7747) -- 0x1e43 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7748) -- 0x1e44 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7749) -- 0x1e45 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7750) -- 0x1e46 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7751) -- 0x1e47 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(7752) -- 0x1e48 name=3Dbearskin rug
+RegisterSkippedArtBillboardFallBack(2386) -- 0x0952 name=3Dfireplace



From no-reply at zwischenwelt.org  Tue Oct 16 22:47:26 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 16 Oct 2007 20:47:26 -0000
Subject: [Iris-commit] [IRIS] r1480 - /trunk/src/data.cpp
Message-ID: <20071016204726.AF0341C181BD@zwischenwelt.org>

Author: ghoulsblade
Date: Tue Oct 16 22:47:26 2007
New Revision: 1480

Log:
static loader bugfix

Modified:
    trunk/src/data.cpp

Modified: trunk/src/data.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data.cpp (original)
+++ trunk/src/data.cpp Tue Oct 16 22:47:26 2007
@@ -470,7 +470,10 @@
 		index =3D mpDiffLookupFile->Lookup(index);
 		=

 		RawIndex* pRawIndex =3D mpDiffIndexedFullFile->mIndexFile.GetRawIndex(in=
dex);
-		if (!IsIndexValid(pRawIndex) || (pRawIndex->miOffset & 0x0fffFFFF) + (pR=
awIndex->miLength & 0x0fffFFFF) > mpDiffIndexedFullFile->miFullFileSize) re=
turn 0; // index must be valid, and must point to a valid rawblock
+		if (!IsIndexValid(pRawIndex)) return 0;
+		pRawIndex->miOffset &=3D 0x0fffFFFF; // avoid strange uo flags
+		pRawIndex->miLength &=3D 0x0fffFFFF; // avoid strange uo flags
+		if (pRawIndex->miOffset + pRawIndex->miLength > mpDiffIndexedFullFile->m=
iFullFileSize) return 0; // index must be valid, and must point to a valid =
rawblock
 		mLastStaticBlock.mpRawIndex =3D pRawIndex;
 		mLastStaticBlock.mpRawStaticList =3D (RawStatic*)(mpDiffIndexedFullFile-=
>mpFullFileBuffer + pRawIndex->miOffset);
 		mLastStaticBlock.miX =3D iX;
@@ -478,7 +481,10 @@
 	} else {
 		// normal unpatched data
 		RawIndex* pRawIndex =3D mIndexFile.GetRawIndex(index);
-		if (!IsIndexValid(pRawIndex) || (pRawIndex->miOffset & 0x0fffFFFF) + (pR=
awIndex->miLength & 0x0fffFFFF) > miFullFileSize) return 0; // index must b=
e valid, and must point to a valid rawblock
+		if (!IsIndexValid(pRawIndex)) return 0;
+		pRawIndex->miOffset &=3D 0x0fffFFFF; // avoid strange uo flags
+		pRawIndex->miLength &=3D 0x0fffFFFF; // avoid strange uo flags
+		if (pRawIndex->miOffset + pRawIndex->miLength > miFullFileSize) return 0=
; // index must be valid, and must point to a valid rawblock
 		mLastStaticBlock.mpRawIndex =3D pRawIndex;
 		mLastStaticBlock.mpRawStaticList =3D (RawStatic*)(mpFullFileBuffer + pRa=
wIndex->miOffset);
 		mLastStaticBlock.miX =3D iX;



From no-reply at zwischenwelt.org  Tue Oct 16 23:33:33 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 16 Oct 2007 21:33:33 -0000
Subject: [Iris-commit] [IRIS] r1481 - in /trunk: bin/iris2.exe
	data/lua/lib.static.lua
Message-ID: <20071016213335.0BDFD1C18173@zwischenwelt.org>

Author: sience
Date: Tue Oct 16 23:33:32 2007
New Revision: 1481

Log:
-new binary
-hueing of statics temp. disabled (wrong)

Modified:
    trunk/bin/iris2.exe
    trunk/data/lua/lib.static.lua

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Tue Oct 16 23:33:32 2007
@@ -107,11 +107,11 @@
 						gManualArtMaterialLoader:CreateMatchingIfUnavailable(v)
 					end
 				end
-				-- Hue this Model | TODO : Partitial Hue
---				if (gHueLoader) then
+				-- Wrong hueing here! Same Model (tileid) can have different hueings. =
Hue this Model | TODO : Partitial Hue
+--				if (gHueLoader and (tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHu=
eValue)) then
 --					if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTil=
eDataFlag_Partial_Hue) ) then
 --						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
---					elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) t=
hen
+--					else
 --						HueMesh(meshname,gHueLoader,iHue)
 --					end
 --				end
@@ -127,14 +127,6 @@
 		gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue] =3D meshname
 	end
 =

-	-- Hue this Model | TODO : Partitial Hue
-	if ( (meshname ~=3D nil) and gHueLoader ) then
-		if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileData=
Flag_Partial_Hue) ) then
-			printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
-		elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) then
-			HueMesh(meshname,gHueLoader,iHue)
-		end
-	end
 	return meshname
 end
 =




From no-reply at zwischenwelt.org  Wed Oct 17 22:50:54 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 17 Oct 2007 20:50:54 -0000
Subject: [Iris-commit] [IRIS] r1482 - in /trunk/data: config.lua.dist
 lua/lib.3d.map.lua lua/lib.loading.lua lua/lib.static.lua
Message-ID: <20071017205055.4FD8D1C18171@zwischenwelt.org>

Author: sience
Date: Wed Oct 17 22:50:53 2007
New Revision: 1482

Log:
-upperlayer blendout is now working on multi-dynamics
-hueing back in lib.static.lua

Modified:
    trunk/data/config.lua.dist
    trunk/data/lua/lib.3d.map.lua
    trunk/data/lua/lib.loading.lua
    trunk/data/lua/lib.static.lua

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Wed Oct 17 22:50:53 2007
@@ -55,7 +55,7 @@
 gSightRange	=3D 2
 =

 -- 0 Trammel, 1 Felucca, 2 Ilshenar, 3 Malas, 4 Tokuno
-gMapIndex =3D 1
+gMapIndex =3D 0
 =

 gCompassZoomFactor =3D 1.5
 gCompassSize =3D 150 -- in pixels on screen, set to 0 to disable

Modified: trunk/data/lua/lib.3d.map.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.map.lua (original)
+++ trunk/data/lua/lib.3d.map.lua Wed Oct 17 22:50:53 2007
@@ -255,10 +255,12 @@
 end
 =

 function Renderer3D:UpdateDynamicVisibility	(dynamic) =

-	if (dynamic.lMultiChildGfx) then =

+	if (dynamic.lMultiChildGfx) then
 		-- multi
 		for k,child in pairs(dynamic.lMultiChildGfx) do
-			child:SetVisible(self:IsZLayerVisible(child.zloc))
+			if (child.zloc > self.giBlendOutPlayerHeight) then
+				child:SetVisible(self:IsZLayerVisible(child.zloc))
+			end
 		end
 	elseif (dynamic.gfx) then
 		-- normal item
@@ -275,8 +277,9 @@
 function Renderer3D:BlendOutLayersAbovePlayer ()
 	local x,y,z =3D GetPlayerPos()
 	if (not z or not gStaticBlockLoader) then return end
-	=

+
 	local playerheadpos =3D z + self.giBlendOutPlayerHeight
+
 	local myLayer =3D nil
 	local playerIsInside =3D false
 	local bTerrainVisible =3D true
@@ -355,6 +358,7 @@
 		=

 		-- update dynamics
 		for k,dynamic in pairs(GetDynamicList()) do if (DynamicIsInWorld(dynamic=
)) then self:UpdateDynamicVisibility(dynamic) end end
+
 		-- update mobiles
 		for k,mobile in pairs(GetMobileList()) do self:UpdateMobileVisibility(mo=
bile) end
 	end

Modified: trunk/data/lua/lib.loading.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.loading.lua (original)
+++ trunk/data/lua/lib.loading.lua Wed Oct 17 22:50:53 2007
@@ -218,7 +218,7 @@
 -- don't load new map immediately, several mapchanges might be sent at log=
in quickly
 function MapChangeRequest (iMaxNewIndex)
 	if (gMapIndex =3D=3D iMaxNewIndex) then return end
-	print("#### MapChangeRequest",iMaxNewIndex)
+	print("#### MapChangeRequest=3D"..iMaxNewIndex)
 	=

 	-- unloading of all objects must happen immediately on change request, =

 	-- otherwise items sent after changerequest might be destroyed

Modified: trunk/data/lua/lib.static.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.static.lua (original)
+++ trunk/data/lua/lib.static.lua Wed Oct 17 22:50:53 2007
@@ -107,11 +107,11 @@
 						gManualArtMaterialLoader:CreateMatchingIfUnavailable(v)
 					end
 				end
-				-- Wrong hueing here! Same Model (tileid) can have different hueings. =
Hue this Model | TODO : Partitial Hue
---				if (gHueLoader and (tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHu=
eValue)) then
+				-- Hue this Model | TODO : Partitial Hue
+--				if (gHueLoader) then
 --					if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTil=
eDataFlag_Partial_Hue) ) then
 --						printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
---					else
+--					elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) t=
hen
 --						HueMesh(meshname,gHueLoader,iHue)
 --					end
 --				end
@@ -127,6 +127,14 @@
 		gLegacyModelCache[iTranslatedTileTypeID.."_"..iHue] =3D meshname
 	end
 =

+	-- Hue this Model | TODO : Partitial Hue
+	if ( (meshname ~=3D nil) and gHueLoader ) then
+		if( TestBit(GetStaticTileTypeFlags(iTranslatedTileTypeID) or 0,kTileData=
Flag_Partial_Hue) ) then
+			printdebug("static","parthuedmodel=3D",iTranslatedTileTypeID)
+		elseif ((tonumber(iHue) > 0) and (tonumber(iHue) < gMaxHueValue)) then
+			HueMesh(meshname,gHueLoader,iHue)
+		end
+	end
 	return meshname
 end
 =




From no-reply at zwischenwelt.org  Sun Oct 21 13:59:53 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Oct 2007 11:59:53 -0000
Subject: [Iris-commit] [IRIS] r1483 - in /trunk/data/lua: lib.protocol.lua
 lib.uodragdrop.lua main.lua net.uodragdrop.lua net/net.main.lua
 obj/obj.mobile.lua obj/obj.player.lua
Message-ID: <20071021115954.2BC861C18169@zwischenwelt.org>

Author: sience
Date: Sun Oct 21 13:59:53 2007
New Revision: 1483

Log:
-all content from net.uodragdrop.lua moved to lib.uodragdrop.lua (because o=
f two net.uodragdrop.lua files)
-old net. filereferences moved to net/main.lua
-PlayerEquipmentUpdate() renamed to PlayerBackpackItemUpdated()

Removed:
    trunk/data/lua/net.uodragdrop.lua
Modified:
    trunk/data/lua/lib.protocol.lua
    trunk/data/lua/lib.uodragdrop.lua
    trunk/data/lua/main.lua
    trunk/data/lua/net/net.main.lua
    trunk/data/lua/obj/obj.mobile.lua
    trunk/data/lua/obj/obj.player.lua

Modified: trunk/data/lua/lib.protocol.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.protocol.lua (original)
+++ trunk/data/lua/lib.protocol.lua Sun Oct 21 13:59:53 2007
@@ -2,6 +2,9 @@
 =

 gCharacterList =3D {}
 gCities =3D {}
+
+-- register packet handlers
+gPacketHandler =3D {}
 =

 -- changed NecroPacketData - (0x0B oldsize=3D"0x010A" , damage packet)
 -- packet sizes from necrotoolz.sourceforge.net/kairpacketguide/index.html=
 (0 means dynamic) contains all sizes from 0x00 to 0xDB
@@ -31,22 +34,6 @@
 	for k,v in pairs(gPacketType) do gPacketTypeId2Name[v.id] =3D k end
 	for k,v in pairs(gPacketType) do _G[k] =3D v.id end -- make names availab=
le as global constants, like kPacket_Account_Login_Request, needed for send=
ing
 	=

--- register packet handlers
-	gPacketHandler =3D {}
-	dofile(libpath .. "net.cursor.lua")
-	dofile(libpath .. "net.login.lua")
-	dofile(libpath .. "net.other.lua")
-	dofile(libpath .. "net.popup.lua")
-	dofile(libpath .. "net.skill.lua")
-	dofile(libpath .. "net.sound.lua")
-	dofile(libpath .. "net.trade.lua")
-	dofile(libpath .. "net.securetrade.lua")
-	dofile(libpath .. "net.uodragdrop.lua")
-	dofile(libpath .. "net.walk.lua")
-	dofile(libpath .. "net.world.lua")
-	dofile(libpath .. "net.corpse.lua")
-
-
 --OldIrisPacketLenTest()
 =

 function DirWrap (iDir) -- wraps into [0,7]

Modified: trunk/data/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.uodragdrop.lua (original)
+++ trunk/data/lua/lib.uodragdrop.lua Sun Oct 21 13:59:53 2007
@@ -1,3 +1,4 @@
+-- NEW DRAG & DROP SYSTEM
 gDragDropItem =3D nil
 gLeftDownItem =3D nil
 =

@@ -103,3 +104,305 @@
 		end
 	end
 end
+
+-- -----------------------------------------------------------------------=
-----------------------------
+-- OLD DRAG & DROP SYSTEM !!!
+
+-- TODO : generalise me ! (container,paperdoll,world)
+
+--[[
+
+TODO : mousedrag : snap dragged picture to tile centers (project 3d tile c=
enter to 2d hud pixel coords)
+
+
+gPacketType.kPacket_Take_Object										=3D { id=3Dhex2num("0x07") } -- s=
end by client ?
+gPacketType.kPacket_Drop_Object										=3D { id=3Dhex2num("0x08") }
+
+
+gPacketType.kPacket_Object_to_Object								=3D { id=3Dhex2num("0x25") }
+gPacketType.kPacket_Get_Item_Failed									=3D { id=3Dhex2num("0x27") }
+gPacketType.kPacket_Drop_Item_Failed								=3D { id=3Dhex2num("0x28") }
+gPacketType.kPacket_Drop_Item_OK									=3D { id=3Dhex2num("0x29") }
+
+gPacketType.kPacket_Destroy											=3D { id=3Dhex2num("0x1D") }
+gPacketType.kPacket_Equip_Item_Request								=3D { id=3Dhex2num("0x13") }
+gPacketType.kPacket_Equip_Item										=3D { id=3Dhex2num("0x2E") }
+
+Pick up Item(s) [0x07]  sent by client
+BYTE cmd
+BYTE[4] item id
+BYTE[2] # of items in stack
+
+Drop Item(s) [0x08]   sent by client
+BYTE cmd
+BYTE[4] item id
+BYTE[2] X Location
+BYTE[2] Y Location
+BYTE Z Location
+BYTE[4] Move Into Container ID (FF FF FF FF if normal world)
+
+0x23  	Drag Item ( send by server, displays animation ?)
+0x24  	Open Container  =C2=B7  0x003c =3D backpack =

+0x25  	Object to Object     This is sent by the server to add a single ite=
m to a container.
+
+0x08 	Packet   Drop Item(s) (14 bytes)
+0x27  	Get Item Failed
+0x28  	Drop Item Failed
+0x29  	Drop Item OK ? Paperdoll Clothing Added ?
+
+0x7C  	Object Picker ? some sort of menu
+0x7D  	Picked Object ? some sort of menu, response
+
+
+TODO : =

+0x1D Packet   Delete object (5 bytes)   item/char id
+0x07 Packet   Pick Up Item(s) (7 bytes)
+
+]]--
+
+gDragStartDist =3D 5 -- in pixels
+gSquareDragStartDist =3D gDragStartDist * gDragStartDist
+
+gDragDrop =3D false
+
+function PrepareDragPaperdollItem (item) =

+	if (item.layer =3D=3D kLayer_Backpack) then return end
+	local widget =3D item.widget
+	local iArtID =3D item.artid + hex2num("0x4000")
+	local mat =3D GetArtMat(iArtID,item.hue)
+	local w,h =3D GetArtSize(iArtID)
+	offx =3D offx or (-w / 2)
+	offy =3D offy or (-h / 2)
+	=

+	--local iMouseX,iMouseY =3D GetMousePos()
+	--local offx =3D widget.gfx:GetDerivedLeft() - iMouseX =

+	--local offy =3D widget.gfx:GetDerivedTop() - iMouseY
+	--local mat =3D GetGumpMat(gumpid)
+	--local w,h =3D GetGumpSize(gumpid)
+	=

+	-- used fields of gDragDrop.item : 	.artid .serial .amount =

+	PrepareUODragDrop(item,widget,mat,w,h,offx,offy)
+end
+
+function PrepareDragContainerItem (item) =

+	local widget =3D item.widget or item.secwidget
+	if (not widget) then return end
+	local iArtID =3D item.artid + hex2num("0x4000")
+	local mat =3D GetArtMat(iArtID,item.hue)
+	local w,h =3D GetArtSize(iArtID)
+	local iMouseX,iMouseY =3D GetMousePos()
+	local offx =3D widget.gfx:GetDerivedLeft() - iMouseX =

+	local offy =3D widget.gfx:GetDerivedTop() - iMouseY
+	=

+	-- used fields of gDragDrop.item : 	.artid .serial .amount =

+	PrepareUODragDrop(item,widget,mat,w,h,offx,offy)
+end
+
+-- SiENcE: just skip Multis here
+-- Todo: Multi support
+function PrepareDragDynamic (dynamic)
+	if dynamic.artid < gMulti_ID then
+		local iArtID =3D dynamic.artid + hex2num("0x4000")
+		local matname =3D GetArtMat(iArtID,dynamic.hue)
+		local w,h =3D GetArtSize(iArtID)
+		local offx,offy =3D -w/2,-h/2 =

+		-- TODO : correct offy would be : bottom of bitmask visible boundbox (NO=
T -h !), but center looks good enough for most items for now
+		=

+		-- used fields of gDragDrop.item : 	.artid .serial .amount =

+		-- set fields of dynamic : 			.artid .serial .amount .flag  =

+		-- local t =3D GetStaticTileType(dynamic.artid)
+		PrepareUODragDrop(dynamic,nil,matname,w,h,offx,offy)
+	end
+end
+
+function PrepareUODragDrop (item,widget,matname,w,h,offx,offy)
+	--AddFadeLines("dragdrop : prepare")
+	CancelUODragDrop() -- cancel last ? shouldn't happen
+	gDragDrop =3D {}
+	gDragDrop.item =3D item
+	gDragDrop.widget =3D widget
+	gDragDrop.matname =3D matname
+	gDragDrop.w =3D w
+	gDragDrop.h =3D h
+	gDragDrop.offx =3D offx
+	gDragDrop.offy =3D offy
+	gDragDrop.iMouseX,gDragDrop.iMouseY =3D GetMousePos()
+	gDragDrop.started =3D false
+end
+
+function StepUODragDrop () =

+	-- start dragdrop if the mouse is dragged for a minimum distance
+	if (gDragDrop and (not gDragDrop.started)) then =

+		local iMouseX,iMouseY =3D GetMousePos()
+		local dx =3D gDragDrop.iMouseX - iMouseX
+		local dy =3D gDragDrop.iMouseY - iMouseY
+		local sqdist =3D dx*dx + dy*dy
+		if (sqdist >=3D gSquareDragStartDist) then StartUODragDrop() end
+	end
+end
+
+function MouseDownUODragDrop () =

+	gCurrentRenderer:MousePick()
+	if (gMousePickFoundHit) then
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_ContainerItem)	t=
hen PrepareDragContainerItem(gMousePickFoundHit.item) end
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_PaperdollItem)	t=
hen PrepareDragPaperdollItem(gMousePickFoundHit.item) end
+		if (gMousePickFoundHit.hittype =3D=3D kMousePickHitType_Dynamic)		then P=
repareDragDynamic(gMousePickFoundHit.dynamic) end
+	end
+end
+
+function MouseUpUODragDrop () =

+	if (not gDragDrop) then return end
+	if (gDragDrop.started) then
+		CompleteUODragDrop()
+	else
+		CancelUODragDrop()
+	end
+end
+
+function DestroyDragDropItemBySerial (serial)
+	if (gDragDrop and gDragDrop.item.serial =3D=3D serial) then
+		gDragDrop.bItemDestroyed =3D true
+		gDragDrop.widget =3D false		=

+		-- item is kept "on the cursor" even if it was removed from inventory af=
ter Send_Take_Object()
+	end
+end
+
+function StartUODragDrop ()
+	AddFadeLines("dragdrop : start")
+	gDragDrop.started =3D true
+	if (gDragDrop.widget and gDragDrop.widget:IsAlive()) then gDragDrop.widge=
t.gfx:SetVisible(false) end
+	SetDragIcon(gDragDrop.matname,gDragDrop.w,gDragDrop.h,gDragDrop.offx,gDra=
gDrop.offy)
+
+	-- TODO better amount handling
+	local amount =3D gDragDrop.item.amount
+	-- take only half the amount if shift is pressed
+	if gKeyPressed[key_lalt] and amount then amount =3D math.floor(amount / 2=
) end
+
+	Send_Take_Object(gDragDrop.item.serial,amount)
+	gui.bMouseBlocked =3D true
+end
+
+-- called in all cases at the end
+function CleanUpUODragDrop ()
+	if (not gDragDrop) then return end
+	=

+	if (gDragDrop.started) then
+		if (gDragDrop.widget and gDragDrop.widget:IsAlive()) then gDragDrop.widg=
et.gfx:SetVisible(true) end
+		HideDragIcon()
+		gui.bMouseBlocked =3D false
+	end
+	=

+	gDragDrop.item =3D nil
+	gDragDrop.widget =3D nil
+	gDragDrop =3D false
+end
+
+-- end A : nothing happened, client side cancel
+function CancelUODragDrop ()
+	if (not gDragDrop) then return end
+	--AddFadeLines("dragdrop : cancel")
+	if (gDragDrop.started) then UODragDropToOldPosition() end
+	CleanUpUODragDrop()
+end
+
+-- drop onto old position and original container after take
+function UODragDropToOldPosition ()
+	local item =3D gDragDrop.item
+	local containerserial =3D item.iContainerSerial or hex2num("0xFFFFFFFF") =
-- ffff... for drop world (dynamics)
+	Send_Drop_Object(item.serial,item.xloc or 0,item.yloc or 0,item.zloc or 0=
,containerserial)
+end
+
+-- end B : something happened
+function CompleteUODragDrop () =

+	if (not gDragDrop) then return end
+	--AddFadeLines("dragdrop : complete")
+	=

+	gCurrentRenderer:MousePick()
+	=

+	local item =3D gDragDrop.item
+	local dialog_under_mouse =3D GetDialogUnderMouse()
+	local x,y,z =3D 0,0,0
+	=

+	print("MouseUpUODragDrop",dialog_under_mouse,dialog_under_mouse and dialo=
g_under_mouse.debugname)
+	=

+	if (dialog_under_mouse) then
+		if (dialog_under_mouse.rootwidget) then
+			local iMouseX,iMouseY =3D GetMousePos()
+			x =3D iMouseX - dialog_under_mouse.rootwidget.gfx:GetDerivedLeft() + gD=
ragDrop.offx
+			y =3D iMouseY - dialog_under_mouse.rootwidget.gfx:GetDerivedTop() + gDr=
agDrop.offy
+		end
+	end
+	=

+	if (dialog_under_mouse and dialog_under_mouse.uoContainer) then
+		-- drop on container
+		local container =3D dialog_under_mouse.uoContainer
+		print("MouseUpUODragDrop: drop on container ",item.serial,item.amount,x,=
y,z,container.serial)
+		=

+		-- default target is container
+		local target =3D container.serial
+		=

+		-- stack this item with the same beneath?
+		if gMousePickFoundHit and gMousePickFoundHit.hittype =3D=3D kMousePickHi=
tType_ContainerItem then
+			-- read out item infos
+			local flags,weight,quality,unkn1,unkn2,quantity,animid,unkn3,hue,unkn4,=
height,name =3D gTileTypeLoader:GetStaticTileType(item.artid+32*512)
+
+			-- if the item beneath has the same artid and stackable, try to stack t=
hem
+			if (TestBit(flags, kTileDataFlag_Generic_Stackable)) and gMousePickFoun=
dHit.item.artid =3D=3D item.artid then =

+				target =3D gMousePickFoundHit.item.serial =

+			end
+		end
+		=

+		Send_Drop_Object(item.serial,x,y,z,target)
+	elseif (dialog_under_mouse and dialog_under_mouse.uoSecureTrade) then
+		-- drop on secure trade container
+		local mysectrade =3D dialog_under_mouse.uoSecureTrade
+		print("#### MouseUpUODragDrop: drop on secure trade container ",item.ser=
ial,item.amount,x,y,z,mysectrade.myContainerID)
+		=

+		-- default target is container
+		local target =3D mysectrade.myContainerID
+		=

+		-- todo : stack ?
+		Send_Drop_Object(item.serial,x-kSecureTradeContainerPos_LeftX,y-kSecureT=
radeContainerPos_LeftY,z,target)
+	elseif (dialog_under_mouse and dialog_under_mouse.uoPaperdoll) then
+		-- drop on paperdoll
+		local paperdoll =3D dialog_under_mouse.uoPaperdoll
+		local iTileTypeID =3D item.artid -- can come from paperdoll or container=
 or dynamic
+		local layer =3D GetPaperdollLayerFromTileType(iTileTypeID)
+		local mobileserial =3D paperdoll.mobileserial
+		local mobile =3D GetMobile(mobileserial)
+		print("MouseUpUODragDrop: drop on paperdoll ",item.serial,item.amount,iT=
ileTypeID,layer,paperdoll.mobileserial)
+		if (not layer) then
+			print("CompleteUODragDrop : item is not wearable",vardump(item))
+			CancelUODragDrop()
+		elseif (not mobile) then
+			print("CompleteUODragDrop : paperdoll mobile not found",vardump(item))
+			CancelUODragDrop()
+		elseif (GetMobileEquipmentItem(mobile,layer)) then
+			print("CompleteUODragDrop : layer already full",vardump(item))
+			-- TODO : if layer is not empty, drop dragged item to backpack, take it=
em from layer to backpack, equip dragged item
+			-- NOTE : if layer is not empty and it's not possible to put item to ba=
ckpack -> check and solve this problem!
+			--		  (for now i added "or 0" for x and y to function "UODragDropToOldP=
osition()" )
+			AddFadeLines("you already have something equipped there !")
+			CancelUODragDrop()
+		else
+			-- success ! (hopefully)
+			Send_Equip_Item_Request(item.serial,layer,paperdoll.mobileserial)
+		end
+	elseif (gMousePickFoundHit) then
+		x,y,z =3D gCurrentRenderer:GetMouseHitTileCoords()
+		local iSerial =3D gCurrentRenderer:GetMouseHitSerial()
+		if (iSerial and iSerial ~=3D 0) then =

+			-- drop on mobile,dynamic etc =

+			print("MouseUpUODragDrop: drop on worlobject : ",item.serial,item.amoun=
t,x,y,z,iSerial)
+			Send_Drop_Object(item.serial,x,y,z,iSerial)
+		else
+			-- drop on world
+			print("MouseUpUODragDrop: drop on world : ",item.serial,item.amount,x,y=
,z,hex2num("0xFFFFFFFF"))
+			Send_Drop_Object(item.serial,x,y,z,hex2num("0xFFFFFFFF"))
+		end
+	else
+		-- dragdrop to nowhere (sky?) : cancel
+		CancelUODragDrop()
+	end
+	CleanUpUODragDrop()
+end

Modified: trunk/data/lua/main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/main.lua (original)
+++ trunk/data/lua/main.lua Sun Oct 21 13:59:53 2007
@@ -86,7 +86,7 @@
 dofile(libpath .. "lib.3d.walksmooth.lua")
 dofile(libpath .. "lib.mount.lua")
 dofile(libpath .. "lib.debug.lua")
--- dofile(libpath .. "lib.uodragdrop.lua")  (new dragdrop system not yet u=
sed in trunk, see net.uodragdrop.lua for old)
+dofile(libpath .. "lib.uodragdrop.lua")  --(new dragdrop system not yet us=
ed in trunk, see for old)
 dofile(libpath .. "gui/gui.main.lua")
 dofile(libpath .. "obj/obj.main.lua")
 dofile(libpath .. "net/net.main.lua")

Modified: trunk/data/lua/net/net.main.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.main.lua (original)
+++ trunk/data/lua/net/net.main.lua Sun Oct 21 13:59:53 2007
@@ -8,5 +8,17 @@
 -- only things that have at least 2 packets get its own file, everything e=
lse is handled here:
 dofile(libpath .. "net/net.packethandlers.lua")
 =

+dofile(libpath .. "net.cursor.lua")
+dofile(libpath .. "net.login.lua")
+dofile(libpath .. "net.other.lua")
+dofile(libpath .. "net.popup.lua")
+dofile(libpath .. "net.skill.lua")
+dofile(libpath .. "net.sound.lua")
+dofile(libpath .. "net.trade.lua")
+dofile(libpath .. "net.securetrade.lua")
+dofile(libpath .. "net.walk.lua")
+dofile(libpath .. "net.world.lua")
+dofile(libpath .. "net.corpse.lua")
+
 gLastDoubleClickSerial =3D 0
 =


Modified: trunk/data/lua/obj/obj.mobile.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.mobile.lua (original)
+++ trunk/data/lua/obj/obj.mobile.lua Sun Oct 21 13:59:53 2007
@@ -100,11 +100,7 @@
 end
 =

 =

-
-
 -- ##### ##### ##### ##### ##### updates
-
-
 =

 =

 function gMobilePrototype:UpdateContent () self:Update() end
@@ -151,7 +147,7 @@
 	-- this can also have happened if equipmentdata=3Dnil, e.g. when an equip=
ment item was destroyed directly
 	-- maybe only in UpdateContent and/or if equipmentdata is set ?
 	if (true) then
-		if (bIsPlayer) then PlayerEquipmentUpdated() end
+		if (bIsPlayer) then PlayerBackpackItemUpdated() end
 		local paperdoll =3D gPaperdolls[self.serial]
 		if (paperdoll) then RebuildPaperdoll(paperdoll) end
 		=

@@ -159,23 +155,22 @@
 		if (gCurrentRenderer =3D=3D Renderer3D) then UpdateMobileModel(self) end =

 		if (gCurrentRenderer =3D=3D Renderer2D) then assert(false,"FIXME?") gCur=
rentRenderer:UpdateMobileEquipment(self) end
 	end
-		=

+
 	self:NotifyListener("Mobile_Update")
-	=

-	=

+
 	-- currently only for human (not elfs)
 	local bIsGhost =3D	in_array(self.artid,kMobileGhostArtIDs)
 	if (bIsGhost ~=3D self.bIsGhost) then
 		self.bIsGhost =3D bIsGhost
-		if (bIsGhost) then =

-			print("mobile is now ghost. isplayer,newartid =3D ",bIsPlayer,self.arti=
d) =

+		if (bIsGhost) then
+			printdebug("player","mobile is now ghost. isplayer,newartid =3D ",bIsPl=
ayer,self.artid) =

 		else
-			print("mobile is not ghost anymore. isplayer,newartid =3D ",bIsPlayer,s=
elf.artid)
-		end
-	end
-	=

+			printdebug("player","mobile is not ghost anymore. isplayer,newartid =3D=
 ",bIsPlayer,self.artid)
+		end
+	end
+
 	gCurrentRenderer:UpdateMobile( self )
-	=

+
 	-- TODO : center Mobilename overhead, dont use fixed height - check heigh=
t of mobiles (big dragons)
 end
 =


Modified: trunk/data/lua/obj/obj.player.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.player.lua (original)
+++ trunk/data/lua/obj/obj.player.lua Sun Oct 21 13:59:53 2007
@@ -1,6 +1,5 @@
 -- stuff concerning player (body,backpack,equipment...)
 -- see also net.mobile.lua net.paperdoll.lua net.container.lua
-
 =

 gDestroyObjectDist =3D 40 -- TODO : adjust when requesting a different vie=
wdist from server
 gDestroyObjectDistSquare =3D gDestroyObjectDist*gDestroyObjectDist
@@ -8,16 +7,13 @@
 gPlayerBodySerial =3D 0
 gPlayerBackPack =3D false
 =

-
-
 function IsPlayerMobile (mobile) =

 	return mobile and (mobile.serial =3D=3D gPlayerBodySerial)
 end
 =

-
 -- adjust backpack art and maybe paperdoll ?
 -- called from kPacket_Equipped_MOB and UpdatePlayerBodySerial
-function PlayerEquipmentUpdated ()
+function PlayerBackpackItemUpdated ()
 	-- warning ! don't trigger network send here
 	local backpack =3D GetPlayerBackPackItem()
 	if (backpack) then
@@ -55,7 +51,7 @@
 	if (playermobile) then return GetMobileEquipmentItem(playermobile,kLayer_=
Backpack) end
 end
 =

--- only available some time after login, see PlayerEquipmentUpdated()
+-- only available some time after login, see PlayerBackpackItemUpdated()
 function TogglePlayerBackpack ()
 	if (gPlayerBackPack) then
 		if (IsContainerAlreadyOpen(gPlayerBackPack.serial)) then
@@ -94,7 +90,8 @@
 		print("WARNING ! playerbody serial changed old,new=3D",gPlayerBodySerial=
,serial)
 	end
 	gPlayerBodySerial =3D serial
-	PlayerEquipmentUpdated()
+
+	PlayerBackpackItemUpdated()
 	=

 	-- TODO this seems a bit like the wrong place for this stuff
 	-- create player status dialog and stuff like this



From no-reply at zwischenwelt.org  Sun Oct 21 22:36:11 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Oct 2007 20:36:11 -0000
Subject: [Iris-commit] [IRIS] r1484 - in /trunk/data/lua: lib.uodragdrop.lua
 net.other.lua net/net.object.lua obj/obj.dynamic.lua
Message-ID: <20071021203612.73C731524004@zwischenwelt.org>

Author: sience
Date: Sun Oct 21 22:36:09 2007
New Revision: 1484

Log:
-new drag&drop system disabled (i forgot this)
-several cleanups

Modified:
    trunk/data/lua/lib.uodragdrop.lua
    trunk/data/lua/net.other.lua
    trunk/data/lua/net/net.object.lua
    trunk/data/lua/obj/obj.dynamic.lua

Modified: trunk/data/lua/lib.uodragdrop.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.uodragdrop.lua (original)
+++ trunk/data/lua/lib.uodragdrop.lua Sun Oct 21 22:36:09 2007
@@ -1,4 +1,5 @@
 -- NEW DRAG & DROP SYSTEM
+--[[
 gDragDropItem =3D nil
 gLeftDownItem =3D nil
 =

@@ -104,6 +105,7 @@
 		end
 	end
 end
+]]--
 =

 -- -----------------------------------------------------------------------=
-----------------------------
 -- OLD DRAG & DROP SYSTEM !!!
@@ -115,7 +117,7 @@
 TODO : mousedrag : snap dragged picture to tile centers (project 3d tile c=
enter to 2d hud pixel coords)
 =

 =

-gPacketType.kPacket_Take_Object										=3D { id=3Dhex2num("0x07") } -- s=
end by client ?
+gPacketType.kPacket_Take_Object										=3D { id=3Dhex2num("0x07") }	-- s=
end by client
 gPacketType.kPacket_Drop_Object										=3D { id=3Dhex2num("0x08") }
 =

 =

@@ -124,7 +126,7 @@
 gPacketType.kPacket_Drop_Item_Failed								=3D { id=3Dhex2num("0x28") }
 gPacketType.kPacket_Drop_Item_OK									=3D { id=3Dhex2num("0x29") }
 =

-gPacketType.kPacket_Destroy											=3D { id=3Dhex2num("0x1D") }
+gPacketType.kPacket_Destroy											=3D { id=3Dhex2num("0x1D") }	-- send=
 by server
 gPacketType.kPacket_Equip_Item_Request								=3D { id=3Dhex2num("0x13") }
 gPacketType.kPacket_Equip_Item										=3D { id=3Dhex2num("0x2E") }
 =

@@ -316,7 +318,7 @@
 function CompleteUODragDrop () =

 	if (not gDragDrop) then return end
 	--AddFadeLines("dragdrop : complete")
-	=

+
 	gCurrentRenderer:MousePick()
 	=

 	local item =3D gDragDrop.item

Modified: trunk/data/lua/net.other.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net.other.lua (original)
+++ trunk/data/lua/net.other.lua Sun Oct 21 22:36:09 2007
@@ -156,7 +156,6 @@
 =

 -- 0x73 : send every gPingInterval
 function Send_Ping ()
-	--print("NET: Send_Equip_Item_Request:",sprintf("0x%08x",serial),layer,pl=
ayer_serial)
 	local out =3D GetSendFIFO()
 	out:PushNetUint8(kPacket_Ping)
 	out:PushNetUint8(0) -- value, usually 0

Modified: trunk/data/lua/net/net.object.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/net/net.object.lua (original)
+++ trunk/data/lua/net/net.object.lua Sun Oct 21 22:36:09 2007
@@ -34,7 +34,7 @@
 	local id =3D input:PopNetUint8()
 	local serial =3D input:PopNetUint32()
 	printdebug("net",sprintf("NET: Destroy item with serial: 0x%08x\n",serial=
))
-	=

+
 	DestroyObjectBySerial(serial)
 end
 =


Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Sun Oct 21 22:36:09 2007
@@ -167,7 +167,7 @@
 function gDynamicPrototype:Destroy	()
 	self.bDestructionInProgress =3D true
 	--print("gDynamicPrototype:Destroy",self,self.serial,_TRACEBACK())
-	if (self.bIsDead) then print("warning, double free dyamic") return end --=
 already destroyed before
+	if (self.bIsDead) then printdebug("net","warning, double free dyamic") re=
turn end -- already destroyed before (a must check because runuo1 sends thi=
s twice)
 	self:NotifyListener("Dynamic_Destroy")
 	self:SetContainer(nil) -- calls self.mobile:Update() if self is equipment=
 item in mobile
 	=




From no-reply at zwischenwelt.org  Sun Oct 21 23:28:56 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Sun, 21 Oct 2007 21:28:56 -0000
Subject: [Iris-commit] [IRIS] r1485 - /trunk/data/lua/obj/obj.dynamic.lua
Message-ID: <20071021212856.EFE3E1C18168@zwischenwelt.org>

Author: ghoulsblade
Date: Sun Oct 21 23:28:56 2007
New Revision: 1485

Log:
missing local

Modified:
    trunk/data/lua/obj/obj.dynamic.lua

Modified: trunk/data/lua/obj/obj.dynamic.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/obj/obj.dynamic.lua (original)
+++ trunk/data/lua/obj/obj.dynamic.lua Sun Oct 21 23:28:56 2007
@@ -186,7 +186,7 @@
 =

 -- updates widgets automatically through old,new:UpdateContent() message
 function gDynamicPrototype:SetContainer	(newcontainer_or_serial)
-	newcontainer =3D GetContainer(newcontainer_or_serial)
+	local newcontainer =3D GetContainer(newcontainer_or_serial)
 	if (self.container =3D=3D newcontainer) then return end
 	if (self.container) then self.container:RemoveContentObject(self) end -- =
remove from old
 	if (newcontainer) then newcontainer:AddContentObject(self) end -- add to =
new (sets self.container)



From no-reply at zwischenwelt.org  Thu Oct 25 15:26:11 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 25 Oct 2007 13:26:11 -0000
Subject: [Iris-commit] [IRIS] r1486 - /trunk/data/lua/lib.season.lua
Message-ID: <20071025132611.E1CDC1C18248@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct 25 15:26:11 2007
New Revision: 1486

Log:
#151 : tipp by anarchcassius

Modified:
    trunk/data/lua/lib.season.lua

Modified: trunk/data/lua/lib.season.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.season.lua (original)
+++ trunk/data/lua/lib.season.lua Thu Oct 25 15:26:11 2007
@@ -6,6 +6,20 @@
 	for k,v in pairs(arr) do newarr[tonumber(k,16)] =3D tonumber(v,16) end  -=
- hex2num("0x123") is preferred to tonumber(123,16), it is better readable
 	return newarr
 end
+
+--[[
+TODO : season bug : ticket #151 in trac by anarchcassius 25.10.2007
+The existing season swaps do not consider the ground tile/landscape textur=
es =

+are not the same as the static items and their numbering systems do line u=
p at all. =

+Thus two kinds of swaps are needed, one for ground tiles/landscape texture=
s, =

+and one for the items (flowers, mushrooms, sticks). =

+Currently the items are listed with the ground tiles where they do nothing=
 as they refer to non-existent ground IDs.
+
+Additionally the comments on the season info that the tiles do not exist t=
o implement it properly is wrong. =

+OSI used a winter last year by altering the client =

+(since to them seasons are Felucca/Trammel they couldn't use the season co=
de for this) =

+and the crappiness of winter is simply due to OSI never bothering to finis=
h it. =

+]]--
 =

 -- FILTER : ArtID -> ArtID
 gTileTypeTranslate_Winter =3D ParseHex2HexArray({



From no-reply at zwischenwelt.org  Thu Oct 25 16:36:06 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 25 Oct 2007 14:36:06 -0000
Subject: [Iris-commit] [IRIS] r1487 - /trunk/data/lua/lib.tilefreewalk.lua
Message-ID: <20071025143606.2B8181C18248@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct 25 16:36:05 2007
New Revision: 1487

Log:
default position for offline set to britannia on osi map

Modified:
    trunk/data/lua/lib.tilefreewalk.lua

Modified: trunk/data/lua/lib.tilefreewalk.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.tilefreewalk.lua (original)
+++ trunk/data/lua/lib.tilefreewalk.lua Thu Oct 25 16:36:05 2007
@@ -44,8 +44,9 @@
 function gTileFreeWalk:OnStartInGame ()
 	if (gStartGameWithoutNetwork) then
 		Renderer3D:ChangeCamMode(Renderer3D.kCamMode_Third)
---		self:SetPos_All(-1548.5,326.5,5.0)
-		self:SetPos_All(-1489,402,-7.6)
+		--~ self:SetPos_All(-1548.5,326.5,5.0) --  iris online canyons
+		--~ self:SetPos_All(-1489.5,402.5,-7.6)
+		self:SetPos_All(-1482.5,1527.5,2.0)  -- osi-britannia
 	end
 	RegisterStepper(function () gTileFreeWalk:Step() end) =

 end



From no-reply at zwischenwelt.org  Thu Oct 25 16:52:02 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 25 Oct 2007 14:52:02 -0000
Subject: [Iris-commit] [IRIS] r1488 - /trunk/src/data_L.cpp
Message-ID: <20071025145203.42AD51C18248@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct 25 16:52:02 2007
New Revision: 1488

Log:
added debug crash for GetStaticTileType

Modified:
    trunk/src/data_L.cpp

Modified: trunk/src/data_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_L.cpp (original)
+++ trunk/src/data_L.cpp Thu Oct 25 16:52:02 2007
@@ -16,6 +16,7 @@
 	#include "lualib.h"
 }
 =

+void MyCrash				(const char* szMessage);
 =

 using namespace Lugre;
 =

@@ -367,6 +368,7 @@
 			cStaticTileType* pChunk =3D checkudata_alive(L)->GetStaticTileType(luaL=
_checkint(L,2));
 			RawStaticTileType* pRawChunk =3D pChunk ? pChunk->mpRawStaticTileType :=
 0;
 			if (!pRawChunk) { printf("GetStaticTileType : id (%d) not found c=3D%08=
x,rc=3D%08x\n",luaL_checkint(L,2),pChunk,pRawChunk);return 0; }
+			if (!pRawChunk) { MyCrash("GetStaticTileType debug\n"); }
 			lua_pushnumber(L,pRawChunk->miFlags); =

 			lua_pushnumber(L,pRawChunk->miWeight); =

 			lua_pushnumber(L,pRawChunk->miQuality); =




From no-reply at zwischenwelt.org  Thu Oct 25 16:58:06 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Thu, 25 Oct 2007 14:58:06 -0000
Subject: [Iris-commit] [IRIS] r1489 - /trunk/src/data_L.cpp
Message-ID: <20071025145806.66D501C1817E@zwischenwelt.org>

Author: ghoulsblade
Date: Thu Oct 25 16:58:05 2007
New Revision: 1489

Log:
added debug crash for GetStaticTileType

Modified:
    trunk/src/data_L.cpp

Modified: trunk/src/data_L.cpp
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/src/data_L.cpp (original)
+++ trunk/src/data_L.cpp Thu Oct 25 16:58:05 2007
@@ -16,9 +16,11 @@
 	#include "lualib.h"
 }
 =

-void MyCrash				(const char* szMessage);
 =

 using namespace Lugre;
+namespace Lugre {
+	void MyCrash				(const char* szMessage);
+};
 =

 class cGroundBlockLoader_L : public cLuaBind<cGroundBlockLoader> { public:
 	// implementation of cLuaBind



From no-reply at zwischenwelt.org  Tue Oct 30 18:16:56 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 30 Oct 2007 17:16:56 -0000
Subject: [Iris-commit] [IRIS] r1490 - /trunk/data/lua/lib.3d.renderer.lua
Message-ID: <20071030171657.0D3C31C182CB@zwischenwelt.org>

Author: mystiq
Date: Tue Oct 30 18:16:56 2007
New Revision: 1490

Log:
Added gDirectionalLightSun and its properties gSunLightDiffuse, gSunLightSp=
ecular and gSunLightDirection.

Modified:
    trunk/data/lua/lib.3d.renderer.lua

Modified: trunk/data/lua/lib.3d.renderer.lua
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/lua/lib.3d.renderer.lua (original)
+++ trunk/data/lua/lib.3d.renderer.lua Tue Oct 30 18:16:56 2007
@@ -85,7 +85,21 @@
 	cam:SetFarClipDistance(2000) -- ogre defaul : 100000
 	cam:SetProjectionType(0) -- perspective
 	Client_ClearLights()
-	Client_AddDirectionalLight(1,1,-1)
+	-- Sun Light
+	gDirectionalLightSun =3D Client_AddDirectionalLight(
+								gSunLightDirection.x,
+								gSunLightDirection.y,
+								gSunLightDirection.z)
+	=

+	Client_SetLightDiffuseColor(gDirectionalLightSun,
+								gSunLightDiffuse.r,
+								gSunLightDiffuse.g,
+								gSunLightDiffuse.b)
+
+	Client_SetLightSpecularColor(gDirectionalLightSun,
+								gSunLightSpecular.r,
+								gSunLightSpecular.g,
+								gSunLightSpecular.b)
 	Client_SetAmbientLight(0.4, 0.4, 0.4, 1)
 	=

 	self.gbActive =3D true



From no-reply at zwischenwelt.org  Tue Oct 30 18:18:27 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 30 Oct 2007 17:18:27 -0000
Subject: [Iris-commit] [IRIS] r1491 - /trunk/data/config.lua.dist
Message-ID: <20071030171827.5FE9B1C182CA@zwischenwelt.org>

Author: mystiq
Date: Tue Oct 30 18:18:26 2007
New Revision: 1491

Log:
Settings for sun light gDirectionalLightSun.

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Tue Oct 30 18:18:26 2007
@@ -71,6 +71,12 @@
 gFogcolorgreen=3D0
 gFogcolorblue=3D0
 =

+-- Sun Light
+gSunLightDirection =3D {x=3D1,y=3D1,z=3D-1}
+gSunLightDiffuse =3D {r=3D1.0,g=3D0.0,b=3D0.0}
+gSunLightSpecular =3D {r=3D1.0,g=3D0.0,b=3D0.0}
+
+
 -- Soundeffects & Music
 -- gUseSoundSystem =3D "openal"
 gUseSoundSystem =3D "fmod"



From no-reply at zwischenwelt.org  Tue Oct 30 22:41:13 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Tue, 30 Oct 2007 21:41:13 -0000
Subject: [Iris-commit] [IRIS] r1492 - in /trunk: bin/iris2.exe
	data/config.lua.dist
Message-ID: <20071030214117.C72561C182CB@zwischenwelt.org>

Author: sience
Date: Tue Oct 30 22:41:10 2007
New Revision: 1492

Log:
-new binary
-map update value changed

Modified:
    trunk/bin/iris2.exe
    trunk/data/config.lua.dist

Modified: trunk/bin/iris2.exe
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
Binary files - no diff available.

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Tue Oct 30 22:41:10 2007
@@ -86,7 +86,7 @@
 gCurrentRenderer =3D Renderer3D	-- Renderer2D
 gbUseStaticGeometryForTerrain =3D false -- setting this to true might spee=
d up rendering but causes lags on mapblock-loading
 =

-Renderer3D.gMapUpdateInterval =3D 50 -- update the map not every frame, de=
crease for free-flight-videos
+Renderer3D.gMapUpdateInterval =3D 40 -- update the map not every frame, de=
crease for free-flight-videos
 Renderer3D.gMaxMapBlocksLoadedPerUpdate =3D 1 -- increase for free-flight-=
videos
 =

 -- Server Emulator Configuration



From no-reply at zwischenwelt.org  Wed Oct 31 16:02:02 2007
From: no-reply at zwischenwelt.org (no-reply at zwischenwelt.org)
Date: Wed, 31 Oct 2007 15:02:02 -0000
Subject: [Iris-commit] [IRIS] r1493 - /trunk/data/config.lua.dist
Message-ID: <20071031150202.8A1D11C182CE@zwischenwelt.org>

Author: mystiq
Date: Wed Oct 31 16:02:01 2007
New Revision: 1493

Log:
Fixed the sun light diffuse and specular colors.

Modified:
    trunk/data/config.lua.dist

Modified: trunk/data/config.lua.dist
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D
--- trunk/data/config.lua.dist (original)
+++ trunk/data/config.lua.dist Wed Oct 31 16:02:01 2007
@@ -73,8 +73,8 @@
 =

 -- Sun Light
 gSunLightDirection =3D {x=3D1,y=3D1,z=3D-1}
-gSunLightDiffuse =3D {r=3D1.0,g=3D0.0,b=3D0.0}
-gSunLightSpecular =3D {r=3D1.0,g=3D0.0,b=3D0.0}
+gSunLightDiffuse =3D {r=3D1.0,g=3D1.0,b=3D1.0}
+gSunLightSpecular =3D {r=3D1.0,g=3D1.0,b=3D1.0}
 =

 =

 -- Soundeffects & Music



